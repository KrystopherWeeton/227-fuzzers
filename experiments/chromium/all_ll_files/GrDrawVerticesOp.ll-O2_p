; ModuleID = '../../third_party/skia/src/gpu/ops/GrDrawVerticesOp.cpp'
source_filename = "../../third_party/skia/src/gpu/ops/GrDrawVerticesOp.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::atomic.185" = type { %"struct.std::__1::__atomic_base.186" }
%"struct.std::__1::__atomic_base.186" = type { %"struct.std::__1::__atomic_base.187" }
%"struct.std::__1::__atomic_base.187" = type { %"struct.std::__1::__cxx_atomic_impl.188" }
%"struct.std::__1::__cxx_atomic_impl.188" = type { %"struct.std::__1::__cxx_atomic_base_impl.189" }
%"struct.std::__1::__cxx_atomic_base_impl.189" = type { i32 }
%struct.GrUserStencilSettings = type { [2 x i16], %struct.GrTStencilFaceSettings, [2 x i16], %struct.GrTStencilFaceSettings }
%struct.GrTStencilFaceSettings = type { i16, i16, i16, i8, i8, i16 }
%struct.SkRGBA4f = type { float, float, float, float }
%class.GrOp = type { i32 (...)**, %"class.std::__1::unique_ptr", %class.GrOp*, i16, i16, i32, %struct.SkRect }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.GrOp* }
%struct.SkRect = type { float, float, float, float }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.2", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.47" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray, %class.SkTHashMap, %class.SkTHashMap.12, %class.SkTArray.21, %class.SkTArray.23, i32, i8, [3 x i8] }>
%class.SkTArray = type { %"class.std::__1::unique_ptr.5"*, i64 }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.23, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.24 }
%class.sk_sp.24 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.6" }
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%class.SkTHashMap.12 = type { %class.SkTHashTable.13 }
%class.SkTHashTable.13 = type { i32, i32, %class.SkAutoTArray.14 }
%class.SkAutoTArray.14 = type { %"class.std::__1::unique_ptr.15" }
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.96" }
%"struct.std::__1::pair.96" = type { i32, %class.SkTArray.97* }
%class.SkTArray.97 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.21 = type { %"class.std::__1::unique_ptr.22"*, i64 }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.97, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%class.SkTArray.23 = type { %class.SkString*, i64 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.34" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.37 }
%class.SkFibBlockSizes.37 = type { i32 }
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type opaque
%class.GrPaint = type <{ %class.GrXPFactory*, %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.53", i8, [3 x i8], %struct.SkRGBA4f, [4 x i8] }>
%class.GrXPFactory = type { i32 (...)** }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %class.GrFragmentProcessor* }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.56 }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray.56 = type { %"class.std::__1::unique_ptr.53"*, i64 }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%class.sk_sp.89 = type { %class.SkVertices* }
%class.SkVertices = type <{ %class.SkNVRefCnt, i32, %struct.SkPoint*, i16*, %struct.SkPoint*, i32*, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.SkPoint = type { float, float }
%class.SkMatrixProvider = type { i32 (...)**, %class.SkM44, %class.SkMatrix }
%class.SkM44 = type { [16 x float] }
%class.SkMatrix = type { [9 x float], i32 }
%class.sk_sp.90 = type { %class.GrColorSpaceXform* }
%class.GrColorSpaceXform = type { %class.SkRefCnt.base, %struct.SkColorSpaceXformSteps }
%struct.SkColorSpaceXformSteps = type { %"struct.SkColorSpaceXformSteps::Flags", %struct.skcms_TransferFunction, %struct.skcms_TransferFunction, [9 x float] }
%"struct.SkColorSpaceXformSteps::Flags" = type { i8, i8, i8, i8, i8 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%class.SkRuntimeEffect = type <{ %class.SkRefCnt.base, i32, %class.SkString, %"class.std::__1::unique_ptr.60", %"class.SkSL::FunctionDefinition"*, %"class.std::__1::vector", %"class.std::__1::vector.69", %"class.std::__1::vector.76", %"class.std::__1::unique_ptr.83", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"struct.SkSL::Program"* }
%"struct.SkSL::Program" = type opaque
%"class.SkSL::FunctionDefinition" = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.SkRuntimeEffect::Uniform"*, %"struct.SkRuntimeEffect::Uniform"*, %"class.std::__1::__compressed_pair.66" }
%"struct.SkRuntimeEffect::Uniform" = type <{ %class.SkString, i64, i32, i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.SkRuntimeEffect::Uniform"* }
%"class.std::__1::vector.69" = type { %"class.std::__1::__vector_base.70" }
%"class.std::__1::__vector_base.70" = type { %"struct.SkRuntimeEffect::Child"*, %"struct.SkRuntimeEffect::Child"*, %"class.std::__1::__compressed_pair.71" }
%"struct.SkRuntimeEffect::Child" = type { %class.SkString, i32, i32 }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"struct.SkRuntimeEffect::Child"* }
%"class.std::__1::vector.76" = type { %"class.std::__1::__vector_base.77" }
%"class.std::__1::__vector_base.77" = type { %"struct.SkSL::SampleUsage"*, %"struct.SkSL::SampleUsage"*, %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"struct.SkSL::SampleUsage"* }
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %class.SkFilterColorProgram* }
%class.SkFilterColorProgram = type opaque
%"class.(anonymous namespace)::DrawVerticesOp" = type { %class.GrMeshDrawOp, %class.GrSimpleMeshDrawOpHelper, %class.SkSTArray.103, i8, i32, i32, i8, i32, i32, %class.sk_sp.90, %struct.GrSimpleMesh*, %class.GrProgramInfo* }
%class.GrMeshDrawOp = type { %class.GrDrawOp }
%class.GrDrawOp = type { %class.GrOp }
%class.GrSimpleMeshDrawOpHelper = type <{ %class.GrProcessorSet*, i8, i8, [6 x i8] }>
%class.GrProcessorSet = type <{ %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.53", %"union.GrProcessorSet::XP", i8, [7 x i8] }>
%"union.GrProcessorSet::XP" = type { %class.GrXPFactory* }
%class.SkSTArray.103 = type { %class.SkAlignedSTStorage.104, %class.SkTArray.105 }
%class.SkAlignedSTStorage.104 = type { [72 x i8] }
%class.SkTArray.105 = type { %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"*, i64 }
%"struct.(anonymous namespace)::DrawVerticesOp::Mesh" = type <{ %struct.SkRGBA4f, %class.sk_sp.89, %class.SkMatrix, i8, [7 x i8] }>
%struct.GrSimpleMesh = type { %class.sk_sp.106, i32, i32, i32, i32, i16, i16, i8, %class.sk_sp.106, i32, i32 }
%class.sk_sp.106 = type { %class.GrBuffer* }
%class.GrBuffer = type { i32 (...)** }
%class.GrProgramInfo = type { i32, i8, %class.GrBackendFormat, i32, i8, %class.GrPipeline*, %struct.GrUserStencilSettings*, %class.GrGeometryProcessor*, i32, i8, i8, i32, i32 }
%class.GrBackendFormat = type { i32, i8, %union.anon, i32, [4 x i8] }
%union.anon = type { %struct.anon }
%struct.anon = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%class.GrPipeline = type <{ %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8], %class.GrWindowRectsState, i8, [7 x i8], %class.sk_sp.159, %class.SkAutoSTArray, i32, %class.GrSwizzle, [2 x i8] }>
%class.GrSurfaceProxyView = type <{ %class.sk_sp.108, i32, %class.GrSwizzle, [2 x i8] }>
%class.sk_sp.108 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt.109, %class.sk_sp.110, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.152" }
%class.SkNVRefCnt.109 = type { %"struct.std::__1::atomic" }
%class.sk_sp.110 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.114 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon.111, [4 x i8] }>
%union.anon.111 = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.112, i8* }
%class.sk_sp.112 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.113, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.113 = type { %"struct.std::__1::atomic" }
%class.GrGpu = type opaque
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.sk_sp.114 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.115, void (i8*)*, i8* }
%class.SkNVRefCnt.115 = type { %"struct.std::__1::atomic" }
%struct.SkISize = type { i32, i32 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.110, i32, i8, [3 x i8] }>
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.149, %class.sk_sp.151, %class.sk_sp.151 }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.124, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.140, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable.116 }
%class.SkTHashTable.116 = type { i32, i32, %class.SkAutoTArray.117 }
%class.SkAutoTArray.117 = type { %"class.std::__1::unique_ptr.118" }
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.124 = type { %class.SkTHashTable.125 }
%class.SkTHashTable.125 = type { i32, i32, %class.SkAutoTArray.126 }
%class.SkAutoTArray.126 = type { %"class.std::__1::unique_ptr.127" }
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.133, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.133 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.134" }
%"struct.std::__1::atomic.134" = type { %"struct.std::__1::__atomic_base.135" }
%"struct.std::__1::__atomic_base.135" = type { %"struct.std::__1::__atomic_base.136" }
%"struct.std::__1::__atomic_base.136" = type { %"struct.std::__1::__cxx_atomic_impl.137" }
%"struct.std::__1::__cxx_atomic_impl.137" = type { %"struct.std::__1::__cxx_atomic_base_impl.138" }
%"struct.std::__1::__cxx_atomic_base_impl.138" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.139, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.139 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap.140 = type { %class.SkTHashTable.141 }
%class.SkTHashTable.141 = type { i32, i32, %class.SkAutoTArray.142 }
%class.SkAutoTArray.142 = type { %"class.std::__1::unique_ptr.143" }
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%class.sk_sp.149 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.150, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.150 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.sk_sp.151 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::atomic.152" = type { %"struct.std::__1::__atomic_base.153" }
%"struct.std::__1::__atomic_base.153" = type { %"struct.std::__1::__atomic_base.154" }
%"struct.std::__1::__atomic_base.154" = type { %"struct.std::__1::__cxx_atomic_impl.155" }
%"struct.std::__1::__cxx_atomic_impl.155" = type { %"struct.std::__1::__cxx_atomic_base_impl.156" }
%"struct.std::__1::__cxx_atomic_base_impl.156" = type { i64 }
%struct.SkIPoint = type { i32, i32 }
%class.GrWindowRectsState = type { i8, %class.GrWindowRectangles }
%class.GrWindowRectangles = type { i32, %union.anon.157 }
%union.anon.157 = type { %"struct.GrWindowRectangles::Rec"*, [8 x i8] }
%"struct.GrWindowRectangles::Rec" = type { %class.GrNonAtomicRef.158, [8 x %struct.SkIRect] }
%class.GrNonAtomicRef.158 = type { i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.sk_sp.159 = type { %class.GrXferProcessor* }
%class.GrXferProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef, i8, i8, [2 x i8] }>
%class.GrNonAtomicRef = type { i32 }
%class.SkAutoSTArray = type { i32, %"class.std::__1::unique_ptr.160"*, [24 x i8] }
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %class.GrFragmentProcessor* }
%class.GrSwizzle = type { i16 }
%class.GrGeometryProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.166, i32, %"class.GrGeometryProcessor::AttributeSet", %"class.GrGeometryProcessor::AttributeSet", i32, [4 x i8] }>
%class.GrNonAtomicRef.166 = type { i32 }
%"class.GrGeometryProcessor::AttributeSet" = type { %"class.GrGeometryProcessor::Attribute"*, i32, i32, i64 }
%"class.GrGeometryProcessor::Attribute" = type { i8*, i32, i32 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.std::__1::function.167" = type opaque
%class.GrAppliedClip = type { %class.GrAppliedHardClip, %"class.std::__1::unique_ptr.53" }
%class.GrAppliedHardClip = type <{ %class.GrScissorState, %class.GrWindowRectsState, i32, [4 x i8] }>
%class.GrScissorState = type { %struct.SkISize, %struct.SkIRect }
%"class.GrXferProcessor::DstProxyView" = type { %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8] }
%class.GrOpFlushState = type { %class.GrDeferredUploadTarget, %"class.GrMeshDrawOp::Target", %class.SkArenaAllocWithReset, %class.GrVertexBufferAllocPool, %class.GrIndexBufferAllocPool, %class.GrDrawIndirectBufferAllocPool, %class.SkArenaAllocList, %class.SkArenaAllocList.180, %class.SkArenaAllocList.181, %class.GrDeferredUploadToken, %"struct.GrOpFlushState::OpArgs"*, %class.SkTArray.184*, %class.GrGpu*, %class.GrResourceProvider*, %class.GrTokenTracker*, %class.GrOpsRenderPass*, %"class.SkArenaAllocList<GrOpFlushState::Draw>::Iter", %"class.SkArenaAllocList<GrOpFlushState::InlineUpload>::Iter" }
%class.GrDeferredUploadTarget = type { i32 (...)** }
%"class.GrMeshDrawOp::Target" = type { i32 (...)** }
%class.SkArenaAllocWithReset = type { %class.SkArenaAlloc.base, i8*, i32, i32 }
%class.SkArenaAlloc.base = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes }>
%class.GrVertexBufferAllocPool = type { %class.GrBufferAllocPool }
%class.GrBufferAllocPool = type { i32 (...)**, i64, %class.SkTArray.168, %class.sk_sp.170, %class.sk_sp.175, %class.GrGpu*, i32, i8* }
%class.SkTArray.168 = type { %"struct.GrBufferAllocPool::BufferBlock"*, i64 }
%"struct.GrBufferAllocPool::BufferBlock" = type { i64, %class.sk_sp.169 }
%class.sk_sp.169 = type { %class.GrBuffer* }
%class.sk_sp.170 = type { %"class.GrBufferAllocPool::CpuBufferCache"* }
%"class.GrBufferAllocPool::CpuBufferCache" = type <{ %class.GrNonAtomicRef.171, [4 x i8], %"class.std::__1::unique_ptr.172", i32, [4 x i8] }>
%class.GrNonAtomicRef.171 = type { i32 }
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* }
%"struct.GrBufferAllocPool::CpuBufferCache::Buffer" = type <{ %class.sk_sp.175, i8, [7 x i8] }>
%class.sk_sp.175 = type { %class.GrCpuBuffer* }
%class.GrCpuBuffer = type { %class.GrBuffer, %class.GrNonAtomicRef.176, i8*, i64 }
%class.GrNonAtomicRef.176 = type { i32 }
%class.GrIndexBufferAllocPool = type { %class.GrBufferAllocPool }
%class.GrDrawIndirectBufferAllocPool = type { %class.GrBufferAllocPool }
%class.SkArenaAllocList = type { %"struct.SkArenaAllocList<std::__1::function<void (std::__1::function<bool (GrTextureProxy *, SkIRect, GrColorType, const void *, unsigned long)> &)> >::Node"*, %"struct.SkArenaAllocList<std::__1::function<void (std::__1::function<bool (GrTextureProxy *, SkIRect, GrColorType, const void *, unsigned long)> &)> >::Node"* }
%"struct.SkArenaAllocList<std::__1::function<void (std::__1::function<bool (GrTextureProxy *, SkIRect, GrColorType, const void *, unsigned long)> &)> >::Node" = type opaque
%class.SkArenaAllocList.180 = type { %"struct.SkArenaAllocList<GrOpFlushState::InlineUpload>::Node"*, %"struct.SkArenaAllocList<GrOpFlushState::InlineUpload>::Node"* }
%"struct.SkArenaAllocList<GrOpFlushState::InlineUpload>::Node" = type opaque
%class.SkArenaAllocList.181 = type { %"struct.SkArenaAllocList<GrOpFlushState::Draw>::Node"*, %"struct.SkArenaAllocList<GrOpFlushState::Draw>::Node"* }
%"struct.SkArenaAllocList<GrOpFlushState::Draw>::Node" = type opaque
%class.GrDeferredUploadToken = type { i64 }
%"struct.GrOpFlushState::OpArgs" = type { %class.GrOp*, %class.GrSurfaceProxyView*, %class.GrRenderTargetProxy*, i8, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView", i32, i32 }
%class.GrRenderTargetProxy = type <{ i32 (...)**, i8, i8, i8, i8, %struct.SkIRect, [4 x i8], %class.sk_sp.182, [4 x i8], [4 x i8], %class.GrSurfaceProxy }>
%class.sk_sp.182 = type { %class.GrArenas* }
%class.GrArenas = type { %class.SkNVRefCnt.183, [4 x i8], %class.SkArenaAlloc, %class.GrSubRunAllocator }
%class.SkNVRefCnt.183 = type { %"struct.std::__1::atomic" }
%class.SkTArray.184 = type opaque
%class.GrTokenTracker = type { %class.GrDeferredUploadToken, %class.GrDeferredUploadToken }
%class.GrOpsRenderPass = type { i32 (...)**, i32, %class.GrRenderTarget*, %class.sk_sp.106, %class.sk_sp.106, %class.sk_sp.106, i32, i32 }
%class.GrRenderTarget = type opaque
%"class.SkArenaAllocList<GrOpFlushState::Draw>::Iter" = type { %"struct.SkArenaAllocList<GrOpFlushState::Draw>::Node"* }
%"class.SkArenaAllocList<GrOpFlushState::InlineUpload>::Iter" = type { %"struct.SkArenaAllocList<GrOpFlushState::InlineUpload>::Node"* }
%class.GrProcessorAnalysisColor = type { i32, %struct.SkRGBA4f }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.(anonymous namespace)::VerticesGP" = type { %class.GrGeometryProcessor.base, %"class.std::__1::vector.190", i32, %struct.SkRGBA4f, %class.SkMatrix, %class.sk_sp.90 }
%class.GrGeometryProcessor.base = type <{ %class.GrProcessor, %class.GrNonAtomicRef.166, i32, %"class.GrGeometryProcessor::AttributeSet", %"class.GrGeometryProcessor::AttributeSet", i32 }>
%"class.std::__1::vector.190" = type { %"class.std::__1::__vector_base.191" }
%"class.std::__1::__vector_base.191" = type { %"class.GrGeometryProcessor::Attribute"*, %"class.GrGeometryProcessor::Attribute"*, %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.GrGeometryProcessor::Attribute"* }
%class.GrProcessorKeyBuilder = type { i32 (...)**, %class.SkTArray.198*, i32, i32 }
%class.SkTArray.198 = type { i32*, i64 }
%class.GrGLSLGeometryProcessor = type { i32 (...)**, %class.SkTArray.199 }
%class.SkTArray.199 = type { %"struct.GrGLSLGeometryProcessor::TransformInfo"*, i64 }
%"struct.GrGLSLGeometryProcessor::TransformInfo" = type { %class.GrShaderVar, %class.GrShaderVar, %class.GrFragmentProcessor* }
%class.GrShaderVar = type { i32, i32, i32, %class.SkString, %class.SkString, %class.SkString }
%"class.GrGeometryProcessor::TextureSampler" = type <{ %class.GrSamplerState, [4 x i8], %class.GrBackendFormat, %class.GrSwizzle, i8, [5 x i8] }>
%class.GrSamplerState = type { [2 x i8], i32, i32 }
%"class.(anonymous namespace)::VerticesGP::GLSLProcessor" = type <{ %class.GrGLSLGeometryProcessor, %class.SkMatrix, %struct.SkRGBA4f, %class.GrResourceHandle, %class.GrResourceHandle, %class.GrGLSLColorSpaceXformHelper, [4 x i8] }>
%class.GrResourceHandle = type { i32 }
%class.GrGLSLColorSpaceXformHelper = type { %class.GrResourceHandle, %class.GrResourceHandle, %class.GrResourceHandle, %"struct.SkColorSpaceXformSteps::Flags", i32, i32 }
%class.GrGLSLProgramDataManager = type { i32 (...)** }
%class.GrGLSLUniformHandler = type { i32 (...)**, %class.GrGLSLProgramBuilder* }
%class.GrGLSLProgramBuilder = type opaque
%"struct.GrGLSLGeometryProcessor::EmitArgs" = type { %class.GrGLSLVertexBuilder*, %class.GrGLSLGeometryBuilder*, %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLVaryingHandler*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*, %class.GrGeometryProcessor*, i8*, i8*, %class.GrResourceHandle.225*, %"class.GrGLSLGeometryProcessor::FPCoordTransformHandler"* }
%class.GrGLSLVertexBuilder = type { %class.GrGLSLVertexGeoBuilder.base, [12 x i8] }
%class.GrGLSLVertexGeoBuilder.base = type { %class.GrGLSLShaderBuilder.base }
%class.GrGLSLShaderBuilder.base = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray.210, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.212, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.221], i32, i8, [3 x i8], i32 }>
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.203" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.204" }
%"struct.std::__1::__compressed_pair_elem.204" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.205 }
%union.anon.205 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.SkSTArray.210 = type { %class.SkAlignedSTStorage.211, %class.SkTArray.23 }
%class.SkAlignedSTStorage.211 = type { [120 x i8] }
%class.SkSTArray.212 = type { %class.SkAlignedSTStorage.213, %class.SkTArray.214 }
%class.SkAlignedSTStorage.213 = type { [16 x i8] }
%class.SkTArray.214 = type { %"class.std::__1::unique_ptr.215"*, i64 }
%"class.std::__1::unique_ptr.215" = type { %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"class.SkSL::Statement"* }
%"class.SkSL::Statement" = type { %"class.SkSL::IRNode" }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%class.GrTBlockList = type { %class.GrSBlockAllocator }
%class.GrSBlockAllocator = type { [88 x i8], [8 x i8] }
%class.SkSTArray.221 = type { %class.SkAlignedSTStorage.222, %class.SkTArray.23 }
%class.SkAlignedSTStorage.222 = type { [8 x i8] }
%class.GrGLSLGeometryBuilder = type { %class.GrGLSLVertexGeoBuilder.base, i32, [8 x i8] }
%class.GrGLSLFPFragmentBuilder = type <{ i32 (...)**, [4 x i8], [4 x i8], %class.GrGLSLShaderBuilder.base, [12 x i8] }>
%class.GrGLSLVaryingHandler = type { i32 (...)**, [8 x i8], %class.GrTBlockList.223, %class.GrTBlockList, %class.GrTBlockList, %class.GrTBlockList, %class.GrTBlockList, %class.GrTBlockList, %class.GrTBlockList, %class.GrGLSLProgramBuilder*, i8* }
%class.GrTBlockList.223 = type { %class.GrSBlockAllocator.224 }
%class.GrSBlockAllocator.224 = type { [80 x i8] }
%class.GrResourceHandle.225 = type { i32 }
%"class.GrGLSLGeometryProcessor::FPCoordTransformHandler" = type { %"class.GrFragmentProcessor::CIter", %class.SkTArray.229* }
%"class.GrFragmentProcessor::CIter" = type { %class.SkSTArray.226 }
%class.SkSTArray.226 = type { %class.SkAlignedSTStorage.227, %class.SkTArray.228 }
%class.SkAlignedSTStorage.227 = type { [32 x i8] }
%class.SkTArray.228 = type { %class.GrFragmentProcessor**, i64 }
%class.SkTArray.229 = type { %class.GrShaderVar*, i64 }
%"struct.GrGLSLGeometryProcessor::GrGPArgs" = type { %class.GrShaderVar, %class.GrShaderVar }
%class.GrGLSLVarying = type { i32, i32, i8*, i8*, i8*, i8* }
%class.GrGLSLShaderBuilder = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray.210, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.212, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.221], i32, i8, [3 x i8], i32, [12 x i8] }>
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

$_ZN12GrMeshDrawOp12onPrePrepareEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp = comdat any

$_ZN4GrOpD2Ev = comdat any

$_ZN4GrOpD0Ev = comdat any

$_ZNK4GrOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE = comdat any

$_ZN4GrOp19onCombineIfPossibleEPS_P12SkArenaAllocRK6GrCaps = comdat any

$_ZNK19GrGeometryProcessor16onTextureSamplerEi = comdat any

$_ZN17GrColorSpaceXform8XformKeyEPKS_ = comdat any

$_ZN23GrGLSLGeometryProcessorD2Ev = comdat any

$_ZNK23GrGLSLGeometryProcessor24getTessControlShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps = comdat any

$_ZNK23GrGLSLGeometryProcessor27getTessEvaluationShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps = comdat any

$_ZN23GrGLSLGeometryProcessorD0Ev = comdat any

$_ZN23GrGLSLGeometryProcessor13TransformInfoD2Ev = comdat any

$_ZN27GrGLSLColorSpaceXformHelper8emitCodeEP20GrGLSLUniformHandlerPK17GrColorSpaceXformj = comdat any

$_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz = comdat any

$_ZZN12SkArenaAlloc4makeIZNS_4makeI12GrSimpleMeshJEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS3_ENUlPcE_8__invokeESC_ = comdat any

$_ZTV4GrOp = comdat any

$_ZTV23GrGLSLGeometryProcessor = comdat any

@.str = private unnamed_addr constant [56 x i8] c"../../third_party/skia/src/gpu/ops/GrDrawVerticesOp.cpp\00", align 1
@.str.1 = private unnamed_addr constant [13 x i8] c"Invalid mode\00", align 1
@_ZTVN12_GLOBAL__N_114DrawVerticesOpE = internal unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::DrawVerticesOp"*)* @_ZN12_GLOBAL__N_114DrawVerticesOpD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::DrawVerticesOp"*)* @_ZN12_GLOBAL__N_114DrawVerticesOpD0Ev to i8*), i8* bitcast (i8* (%"class.(anonymous namespace)::DrawVerticesOp"*)* @_ZNK12_GLOBAL__N_114DrawVerticesOp4nameEv to i8*), i8* bitcast (void (%"class.(anonymous namespace)::DrawVerticesOp"*, %"class.std::__1::function.167"*)* @_ZNK12_GLOBAL__N_114DrawVerticesOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE to i8*), i8* bitcast (i32 (%"class.(anonymous namespace)::DrawVerticesOp"*, %class.GrOp*, %class.SkArenaAlloc*, %class.GrCaps*)* @_ZN12_GLOBAL__N_114DrawVerticesOp19onCombineIfPossibleEP4GrOpP12SkArenaAllocRK6GrCaps to i8*), i8* bitcast (void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)* @_ZN12GrMeshDrawOp12onPrePrepareEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp to i8*), i8* bitcast (void (%class.GrMeshDrawOp*, %class.GrOpFlushState*)* @_ZN12GrMeshDrawOp9onPrepareEP14GrOpFlushState to i8*), i8* bitcast (void (%"class.(anonymous namespace)::DrawVerticesOp"*, %class.GrOpFlushState*, %struct.SkRect*)* @_ZN12_GLOBAL__N_114DrawVerticesOp9onExecuteEP14GrOpFlushStateRK6SkRect to i8*), i8* bitcast (i32 (%"class.(anonymous namespace)::DrawVerticesOp"*)* @_ZNK12_GLOBAL__N_114DrawVerticesOp18fixedFunctionFlagsEv to i8*), i8* bitcast (i32 (%"class.(anonymous namespace)::DrawVerticesOp"*, %class.GrCaps*, %class.GrAppliedClip*, i32)* @_ZN12_GLOBAL__N_114DrawVerticesOp8finalizeERK6GrCapsPK13GrAppliedClip11GrClampType to i8*), i8* bitcast (void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)* @_ZN12GrMeshDrawOp17onPrePrepareDrawsEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp to i8*), i8* bitcast (%class.GrProgramInfo* (%"class.(anonymous namespace)::DrawVerticesOp"*)* @_ZN12_GLOBAL__N_114DrawVerticesOp11programInfoEv to i8*), i8* bitcast (void (%"class.(anonymous namespace)::DrawVerticesOp"*, %class.GrCaps*, %class.SkArenaAlloc*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)* @_ZN12_GLOBAL__N_114DrawVerticesOp19onCreateProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp to i8*), i8* bitcast (void (%"class.(anonymous namespace)::DrawVerticesOp"*, %"class.GrMeshDrawOp::Target"*)* @_ZN12_GLOBAL__N_114DrawVerticesOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetE to i8*)] }, align 8
@_ZZN12_GLOBAL__N_114DrawVerticesOp7ClassIDEvE8kClassID = internal unnamed_addr global i32 0, align 4
@_ZGVZN12_GLOBAL__N_114DrawVerticesOp7ClassIDEvE8kClassID = internal global i64 0, align 8
@_ZN4GrOp14gCurrOpClassIDE = external global %"struct.std::__1::atomic.185", align 4
@.str.2 = private unnamed_addr constant [42 x i8] c"../../third_party/skia/src/gpu/ops/GrOp.h\00", align 1
@.str.3 = private unnamed_addr constant [80 x i8] c"This should never wrap as it should only be called once for each GrOp subclass.\00", align 1
@_ZTV4GrOp = linkonce_odr hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrOp*)* @_ZN4GrOpD2Ev to i8*), i8* bitcast (void (%class.GrOp*)* @_ZN4GrOpD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.GrOp*, %"class.std::__1::function.167"*)* @_ZNK4GrOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE to i8*), i8* bitcast (i32 (%class.GrOp*, %class.GrOp*, %class.SkArenaAlloc*, %class.GrCaps*)* @_ZN4GrOp19onCombineIfPossibleEPS_P12SkArenaAllocRK6GrCaps to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.4 = private unnamed_addr constant [15 x i8] c"DrawVerticesOp\00", align 1
@_ZN21GrUserStencilSettings7kUnusedE = external local_unnamed_addr constant %struct.GrUserStencilSettings*, align 8
@_ZTVN12_GLOBAL__N_110VerticesGPE = internal unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::VerticesGP"*)* @_ZN12_GLOBAL__N_110VerticesGPD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::VerticesGP"*)* @_ZN12_GLOBAL__N_110VerticesGPD0Ev to i8*), i8* bitcast (i8* (%"class.(anonymous namespace)::VerticesGP"*)* @_ZNK12_GLOBAL__N_110VerticesGP4nameEv to i8*), i8* bitcast (void (%"class.(anonymous namespace)::VerticesGP"*, %class.GrShaderCaps*, %class.GrProcessorKeyBuilder*)* @_ZNK12_GLOBAL__N_110VerticesGP19getGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder to i8*), i8* bitcast (%class.GrGLSLGeometryProcessor* (%"class.(anonymous namespace)::VerticesGP"*, %class.GrShaderCaps*)* @_ZNK12_GLOBAL__N_110VerticesGP18createGLSLInstanceERK12GrShaderCaps to i8*), i8* bitcast (%"class.GrGeometryProcessor::TextureSampler"* (%class.GrGeometryProcessor*, i32)* @_ZNK19GrGeometryProcessor16onTextureSamplerEi to i8*)] }, align 8
@.str.5 = private unnamed_addr constant [9 x i8] c"position\00", align 1
@.str.6 = private unnamed_addr constant [8 x i8] c"inColor\00", align 1
@.str.7 = private unnamed_addr constant [13 x i8] c"inLocalCoord\00", align 1
@.str.9 = private unnamed_addr constant [53 x i8] c"../../third_party/skia/src/gpu/GrGeometryProcessor.h\00", align 1
@.str.10 = private unnamed_addr constant [28 x i8] c"Unsupported type conversion\00", align 1
@.str.11 = private unnamed_addr constant [11 x i8] c"VerticesGP\00", align 1
@.str.12 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@_ZTVN12_GLOBAL__N_110VerticesGP13GLSLProcessorE = internal unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLSLGeometryProcessor*)* @_ZN23GrGLSLGeometryProcessorD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::VerticesGP::GLSLProcessor"*)* @_ZN12_GLOBAL__N_110VerticesGP13GLSLProcessorD0Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::VerticesGP::GLSLProcessor"*, %class.GrGLSLProgramDataManager*, %class.GrShaderCaps*, %class.GrGeometryProcessor*)* @_ZN12_GLOBAL__N_110VerticesGP13GLSLProcessor7setDataERK24GrGLSLProgramDataManagerRK12GrShaderCapsRK19GrGeometryProcessor to i8*), i8* bitcast (void (%class.SkString*, %class.GrGLSLGeometryProcessor*, %class.GrGeometryProcessor*, i8*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*)* @_ZNK23GrGLSLGeometryProcessor24getTessControlShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps to i8*), i8* bitcast (void (%class.SkString*, %class.GrGLSLGeometryProcessor*, %class.GrGeometryProcessor*, i8*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*)* @_ZNK23GrGLSLGeometryProcessor27getTessEvaluationShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps to i8*), i8* bitcast (void (%"class.(anonymous namespace)::VerticesGP::GLSLProcessor"*, %"struct.GrGLSLGeometryProcessor::EmitArgs"*, %"struct.GrGLSLGeometryProcessor::GrGPArgs"*)* @_ZN12_GLOBAL__N_110VerticesGP13GLSLProcessor10onEmitCodeERN23GrGLSLGeometryProcessor8EmitArgsEPNS2_8GrGPArgsE to i8*)] }, align 8
@_ZL19SK_PMColor4fILLEGAL = internal unnamed_addr constant %struct.SkRGBA4f { float 0xFFF0000000000000, float 0xFFF0000000000000, float 0xFFF0000000000000, float 0xFFF0000000000000 }, align 4
@_ZTV23GrGLSLGeometryProcessor = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLSLGeometryProcessor*)* @_ZN23GrGLSLGeometryProcessorD2Ev to i8*), i8* bitcast (void (%class.GrGLSLGeometryProcessor*)* @_ZN23GrGLSLGeometryProcessorD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.SkString*, %class.GrGLSLGeometryProcessor*, %class.GrGeometryProcessor*, i8*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*)* @_ZNK23GrGLSLGeometryProcessor24getTessControlShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps to i8*), i8* bitcast (void (%class.SkString*, %class.GrGLSLGeometryProcessor*, %class.GrGeometryProcessor*, i8*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*)* @_ZNK23GrGLSLGeometryProcessor27getTessEvaluationShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.13 = private unnamed_addr constant [62 x i8] c"../../third_party/skia/src/gpu/glsl/GrGLSLGeometryProcessor.h\00", align 1
@.str.14 = private unnamed_addr constant [17 x i8] c"Not implemented.\00", align 1
@.str.15 = private unnamed_addr constant [10 x i8] c"half4 %s;\00", align 1
@.str.16 = private unnamed_addr constant [6 x i8] c"color\00", align 1
@.str.17 = private unnamed_addr constant [18 x i8] c"half4 color = %s;\00", align 1
@.str.18 = private unnamed_addr constant [20 x i8] c"color = color.bgra;\00", align 1
@.str.19 = private unnamed_addr constant [12 x i8] c"color = %s;\00", align 1
@.str.20 = private unnamed_addr constant [45 x i8] c"color = half4(color.rgb * color.a, color.a);\00", align 1
@.str.21 = private unnamed_addr constant [13 x i8] c"%s = color;\0A\00", align 1
@.str.22 = private unnamed_addr constant [9 x i8] c"%s = %s;\00", align 1
@.str.23 = private unnamed_addr constant [27 x i8] c"const half4 %s = half4(1);\00", align 1
@.str.24 = private unnamed_addr constant [6 x i8] c"SrcTF\00", align 1
@.str.25 = private unnamed_addr constant [11 x i8] c"ColorXform\00", align 1
@.str.26 = private unnamed_addr constant [6 x i8] c"DstTF\00", align 1
@.str.28 = private unnamed_addr constant [30 x i8] c"Illegal texture sampler index\00", align 1
@.str.29 = private unnamed_addr constant [29 x i8] c"Could not allocate vertices\0A\00", align 1
@.str.30 = private unnamed_addr constant [28 x i8] c"Could not allocate indices\0A\00", align 1
@switch.table._ZN12_GLOBAL__N_114DrawVerticesOp19onCreateProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp = private unnamed_addr constant [26 x i64] [i64 4, i64 8, i64 12, i64 16, i64 4, i64 4, i64 8, i64 8, i64 12, i64 16, i64 4, i64 4, i64 4, i64 4, i64 4, i64 4, i64 4, i64 4, i64 4, i64 8, i64 4, i64 4, i64 4, i64 4, i64 4, i64 8], align 8

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %class.GrOp* @_ZN16GrDrawVerticesOp4MakeEP18GrRecordingContextO7GrPaint5sk_spI10SkVerticesERK16SkMatrixProvider8GrAATypeS4_I17GrColorSpaceXformEP15GrPrimitiveTypePK15SkRuntimeEffect(%class.GrRecordingContext* nocapture readnone, %class.GrPaint* dereferenceable(48), %class.sk_sp.89* nocapture, %class.SkMatrixProvider* nocapture readonly dereferenceable(112), i32, %class.sk_sp.90* nocapture, i8* readonly, %class.SkRuntimeEffect*) local_unnamed_addr #0 {
  %9 = alloca %class.sk_sp.89, align 8
  %10 = alloca %class.sk_sp.90, align 8
  %11 = alloca %class.sk_sp.89, align 8
  %12 = alloca %class.sk_sp.90, align 8
  %13 = alloca %struct.SkRGBA4f, align 4
  %14 = icmp eq i8* %6, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = load i8, i8* %6, align 1
  br label %24

17:                                               ; preds = %8
  %18 = getelementptr inbounds %class.sk_sp.89, %class.sk_sp.89* %2, i64 0, i32 0
  %19 = load %class.SkVertices*, %class.SkVertices** %18, align 8
  %20 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %19, i64 0, i32 9
  %21 = load i32, i32* %20, align 8
  switch i32 %21, label %23 [
    i32 0, label %24
    i32 1, label %22
  ]

22:                                               ; preds = %17
  br label %24

23:                                               ; preds = %17
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str, i64 0, i64 0), i32 588, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0)) #15
  unreachable

24:                                               ; preds = %22, %17, %15
  %25 = phi i8 [ %16, %15 ], [ 1, %22 ], [ 0, %17 ]
  %26 = bitcast %struct.SkRGBA4f* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #13
  %27 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %1, i64 0, i32 5
  %28 = bitcast %struct.SkRGBA4f* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %26, i8* align 4 %28, i64 16, i1 false) #13
  %29 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %1, i64 0, i32 3
  %30 = load i8, i8* %29, align 8, !range !2
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %68, label %32

32:                                               ; preds = %24
  %33 = bitcast %class.sk_sp.89* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #13
  %34 = bitcast %class.sk_sp.90* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #13
  %35 = tail call i8* @_Znwm(i64 200) #16
  %36 = bitcast i8* %35 to %"class.(anonymous namespace)::DrawVerticesOp"*
  %37 = getelementptr inbounds %class.sk_sp.89, %class.sk_sp.89* %2, i64 0, i32 0
  %38 = bitcast %class.sk_sp.89* %2 to i64*
  %39 = load i64, i64* %38, align 8
  store %class.SkVertices* null, %class.SkVertices** %37, align 8
  %40 = bitcast %class.sk_sp.89* %9 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %class.sk_sp.90, %class.sk_sp.90* %5, i64 0, i32 0
  %42 = bitcast %class.sk_sp.90* %5 to i64*
  %43 = load i64, i64* %42, align 8
  store %class.GrColorSpaceXform* null, %class.GrColorSpaceXform** %41, align 8
  %44 = bitcast %class.sk_sp.90* %10 to i64*
  store i64 %43, i64* %44, align 8
  call fastcc void @_ZN12_GLOBAL__N_114DrawVerticesOpC2EP14GrProcessorSetRK8SkRGBA4fIL11SkAlphaType2EE5sk_spI10SkVerticesE15GrPrimitiveType8GrAATypeS8_I17GrColorSpaceXformERK16SkMatrixProviderPK15SkRuntimeEffect(%"class.(anonymous namespace)::DrawVerticesOp"* nonnull %36, %class.GrProcessorSet* null, %struct.SkRGBA4f* nonnull dereferenceable(16) %13, %class.sk_sp.89* nonnull %9, i8 zeroext %25, i32 %4, %class.sk_sp.90* nonnull %10, %class.SkMatrixProvider* dereferenceable(112) %3) #13
  %45 = getelementptr inbounds %class.sk_sp.90, %class.sk_sp.90* %10, i64 0, i32 0
  %46 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %45, align 8
  %47 = icmp eq %class.GrColorSpaceXform* %46, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %32
  %49 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %46, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = atomicrmw add i32* %49, i32 -1 acq_rel
  %51 = icmp eq i32 %50, 1
  br i1 %51, label %52, label %58

52:                                               ; preds = %48
  %53 = bitcast %class.GrColorSpaceXform* %46 to %class.SkRefCntBase*
  %54 = bitcast %class.GrColorSpaceXform* %46 to void (%class.SkRefCntBase*)***
  %55 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %54, align 8
  %56 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %55, i64 2
  %57 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %56, align 8
  tail call void %57(%class.SkRefCntBase* nonnull %53) #13
  br label %58

58:                                               ; preds = %52, %48, %32
  %59 = getelementptr inbounds %class.sk_sp.89, %class.sk_sp.89* %9, i64 0, i32 0
  %60 = load %class.SkVertices*, %class.SkVertices** %59, align 8
  %61 = icmp eq %class.SkVertices* %60, null
  br i1 %61, label %106, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = atomicrmw add i32* %63, i32 -1 acq_rel
  %65 = icmp eq i32 %64, 1
  br i1 %65, label %66, label %106

66:                                               ; preds = %62
  %67 = bitcast %class.SkVertices* %60 to i8*
  tail call void @_ZN10SkVerticesdlEPv(i8* nonnull %67) #13
  br label %106

68:                                               ; preds = %24
  %69 = bitcast %class.sk_sp.89* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #13
  %70 = bitcast %class.sk_sp.90* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70) #13
  %71 = tail call i8* @_Znwm(i64 232) #13
  %72 = getelementptr inbounds i8, i8* %71, i64 200
  %73 = bitcast i8* %72 to %class.GrProcessorSet*
  tail call void @_ZN14GrProcessorSetC1EO7GrPaint(%class.GrProcessorSet* %73, %class.GrPaint* dereferenceable(48) %1) #13
  %74 = bitcast i8* %71 to %"class.(anonymous namespace)::DrawVerticesOp"*
  %75 = getelementptr inbounds %class.sk_sp.89, %class.sk_sp.89* %2, i64 0, i32 0
  %76 = bitcast %class.sk_sp.89* %2 to i64*
  %77 = load i64, i64* %76, align 8
  store %class.SkVertices* null, %class.SkVertices** %75, align 8
  %78 = bitcast %class.sk_sp.89* %11 to i64*
  store i64 %77, i64* %78, align 8
  %79 = getelementptr inbounds %class.sk_sp.90, %class.sk_sp.90* %5, i64 0, i32 0
  %80 = bitcast %class.sk_sp.90* %5 to i64*
  %81 = load i64, i64* %80, align 8
  store %class.GrColorSpaceXform* null, %class.GrColorSpaceXform** %79, align 8
  %82 = bitcast %class.sk_sp.90* %12 to i64*
  store i64 %81, i64* %82, align 8
  call fastcc void @_ZN12_GLOBAL__N_114DrawVerticesOpC2EP14GrProcessorSetRK8SkRGBA4fIL11SkAlphaType2EE5sk_spI10SkVerticesE15GrPrimitiveType8GrAATypeS8_I17GrColorSpaceXformERK16SkMatrixProviderPK15SkRuntimeEffect(%"class.(anonymous namespace)::DrawVerticesOp"* nonnull %74, %class.GrProcessorSet* %73, %struct.SkRGBA4f* nonnull dereferenceable(16) %13, %class.sk_sp.89* nonnull %11, i8 zeroext %25, i32 %4, %class.sk_sp.90* nonnull %12, %class.SkMatrixProvider* dereferenceable(112) %3) #13
  %83 = getelementptr inbounds %class.sk_sp.90, %class.sk_sp.90* %12, i64 0, i32 0
  %84 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %83, align 8
  %85 = icmp eq %class.GrColorSpaceXform* %84, null
  br i1 %85, label %96, label %86

86:                                               ; preds = %68
  %87 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %84, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = atomicrmw add i32* %87, i32 -1 acq_rel
  %89 = icmp eq i32 %88, 1
  br i1 %89, label %90, label %96

90:                                               ; preds = %86
  %91 = bitcast %class.GrColorSpaceXform* %84 to %class.SkRefCntBase*
  %92 = bitcast %class.GrColorSpaceXform* %84 to void (%class.SkRefCntBase*)***
  %93 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %92, align 8
  %94 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %93, i64 2
  %95 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %94, align 8
  tail call void %95(%class.SkRefCntBase* nonnull %91) #13
  br label %96

96:                                               ; preds = %90, %86, %68
  %97 = getelementptr inbounds %class.sk_sp.89, %class.sk_sp.89* %11, i64 0, i32 0
  %98 = load %class.SkVertices*, %class.SkVertices** %97, align 8
  %99 = icmp eq %class.SkVertices* %98, null
  br i1 %99, label %106, label %100

100:                                              ; preds = %96
  %101 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %98, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = atomicrmw add i32* %101, i32 -1 acq_rel
  %103 = icmp eq i32 %102, 1
  br i1 %103, label %104, label %106

104:                                              ; preds = %100
  %105 = bitcast %class.SkVertices* %98 to i8*
  tail call void @_ZN10SkVerticesdlEPv(i8* nonnull %105) #13
  br label %106

106:                                              ; preds = %96, %100, %104, %58, %62, %66
  %107 = phi i8* [ %33, %66 ], [ %33, %62 ], [ %33, %58 ], [ %69, %104 ], [ %69, %100 ], [ %69, %96 ]
  %108 = phi i8* [ %34, %66 ], [ %34, %62 ], [ %34, %58 ], [ %70, %104 ], [ %70, %100 ], [ %70, %96 ]
  %109 = phi i8* [ %35, %66 ], [ %35, %62 ], [ %35, %58 ], [ %71, %104 ], [ %71, %100 ], [ %71, %96 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %107) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %108) #13
  %110 = bitcast i8* %109 to %class.GrOp*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #13
  ret %class.GrOp* %110
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_114DrawVerticesOpC2EP14GrProcessorSetRK8SkRGBA4fIL11SkAlphaType2EE5sk_spI10SkVerticesE15GrPrimitiveType8GrAATypeS8_I17GrColorSpaceXformERK16SkMatrixProviderPK15SkRuntimeEffect(%"class.(anonymous namespace)::DrawVerticesOp"*, %class.GrProcessorSet*, %struct.SkRGBA4f* nocapture readonly dereferenceable(16), %class.sk_sp.89* nocapture, i8 zeroext, i32, %class.sk_sp.90* nocapture, %class.SkMatrixProvider* nocapture readonly dereferenceable(112)) unnamed_addr #0 align 2 {
  %9 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 0
  %10 = load atomic i8, i8* bitcast (i64* @_ZGVZN12_GLOBAL__N_114DrawVerticesOp7ClassIDEvE8kClassID to i8*) acquire, align 8
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %20, !prof !3

12:                                               ; preds = %8
  %13 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN12_GLOBAL__N_114DrawVerticesOp7ClassIDEvE8kClassID) #13
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %20, label %15

15:                                               ; preds = %12
  %16 = atomicrmw add i32* getelementptr inbounds (%"struct.std::__1::atomic.185", %"struct.std::__1::atomic.185"* @_ZN4GrOp14gCurrOpClassIDE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0), i32 1 monotonic
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2, i64 0, i64 0), i32 329, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.3, i64 0, i64 0)) #15
  unreachable

19:                                               ; preds = %15
  store i32 %16, i32* @_ZZN12_GLOBAL__N_114DrawVerticesOp7ClassIDEvE8kClassID, align 4
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN12_GLOBAL__N_114DrawVerticesOp7ClassIDEvE8kClassID) #13
  br label %20

20:                                               ; preds = %8, %12, %19
  %21 = load i32, i32* @_ZZN12_GLOBAL__N_114DrawVerticesOp7ClassIDEvE8kClassID, align 4
  tail call void @_ZN12GrMeshDrawOpC2Ej(%class.GrMeshDrawOp* %9, i32 %21) #13
  %22 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN12_GLOBAL__N_114DrawVerticesOpE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %23 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 1
  tail call void @_ZN24GrSimpleMeshDrawOpHelperC1EP14GrProcessorSet8GrAATypeNS_10InputFlagsE(%class.GrSimpleMeshDrawOpHelper* %23, %class.GrProcessorSet* %1, i32 %5, i8 zeroext 0) #13
  %24 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 2, i32 0, i32 0, i64 72
  %25 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 2, i32 0, i32 0, i64 0
  %26 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 2, i32 0, i32 0, i64 80
  %27 = bitcast i8* %26 to i64*
  %28 = bitcast i8* %24 to i8**
  store i8* %25, i8** %28, align 8
  store i64 8589934592, i64* %27, align 8
  %29 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 3
  store i8 %4, i8* %29, align 8
  %30 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 6
  store i8 0, i8* %30, align 4
  %31 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 9
  %32 = getelementptr inbounds %class.sk_sp.90, %class.sk_sp.90* %6, i64 0, i32 0
  %33 = bitcast %class.sk_sp.90* %6 to i64*
  %34 = load i64, i64* %33, align 8
  store %class.GrColorSpaceXform* null, %class.GrColorSpaceXform** %32, align 8
  %35 = bitcast %class.sk_sp.90* %31 to i64*
  store i64 %34, i64* %35, align 8
  %36 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 10
  %37 = getelementptr inbounds %class.sk_sp.89, %class.sk_sp.89* %3, i64 0, i32 0
  %38 = bitcast %struct.GrSimpleMesh** %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 16, i1 false)
  %39 = load %class.SkVertices*, %class.SkVertices** %37, align 8
  %40 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %39, i64 0, i32 7
  %41 = load i32, i32* %40, align 8
  %42 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 4
  store i32 %41, i32* %42, align 4
  %43 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %39, i64 0, i32 8
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 5
  store i32 %44, i32* %45, align 8
  %46 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %39, i64 0, i32 5
  %47 = load i32*, i32** %46, align 8
  %48 = icmp eq i32* %47, null
  %49 = select i1 %48, i32 0, i32 2
  %50 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 8
  store i32 %49, i32* %50, align 4
  %51 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %39, i64 0, i32 4
  %52 = load %struct.SkPoint*, %struct.SkPoint** %51, align 8
  %53 = icmp eq %struct.SkPoint* %52, null
  %54 = select i1 %53, i32 1, i32 2
  %55 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 7
  store i32 %54, i32* %55, align 8
  %56 = bitcast i8* %24 to %class.SkTArray.105*
  tail call fastcc void @_ZN8SkTArrayIN12_GLOBAL__N_114DrawVerticesOp4MeshELb1EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.105* %56, i32 1) #13
  %57 = bitcast i8* %24 to %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"**
  %58 = load %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"*, %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"** %57, align 8
  %59 = load i64, i64* %27, align 8
  %60 = lshr i64 %59, 1
  %61 = and i64 %60, 2147483647
  %62 = getelementptr inbounds %"struct.(anonymous namespace)::DrawVerticesOp::Mesh", %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"* %58, i64 %61
  %63 = add i64 %59, 2
  %64 = and i64 %63, 4294967294
  %65 = and i64 %59, -4294967295
  %66 = or i64 %64, %65
  store i64 %66, i64* %27, align 8
  %67 = getelementptr inbounds %"struct.(anonymous namespace)::DrawVerticesOp::Mesh", %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"* %58, i64 %61, i32 1, i32 0
  store %class.SkVertices* null, %class.SkVertices** %67, align 8
  %68 = getelementptr inbounds %"struct.(anonymous namespace)::DrawVerticesOp::Mesh", %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"* %58, i64 %61, i32 2, i32 0, i64 0
  %69 = bitcast float* %68 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %69, align 4
  %70 = getelementptr inbounds %"struct.(anonymous namespace)::DrawVerticesOp::Mesh", %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"* %58, i64 %61, i32 2, i32 0, i64 4
  %71 = bitcast float* %70 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %71, align 4
  %72 = getelementptr inbounds %"struct.(anonymous namespace)::DrawVerticesOp::Mesh", %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"* %58, i64 %61, i32 2, i32 0, i64 8
  store float 1.000000e+00, float* %72, align 4
  %73 = getelementptr inbounds %"struct.(anonymous namespace)::DrawVerticesOp::Mesh", %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"* %58, i64 %61, i32 2, i32 1
  store i32 16, i32* %73, align 4
  %74 = bitcast %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"* %62 to i8*
  %75 = bitcast %struct.SkRGBA4f* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* align 4 %75, i64 16, i1 false)
  %76 = getelementptr inbounds %class.SkMatrixProvider, %class.SkMatrixProvider* %7, i64 0, i32 2
  %77 = getelementptr inbounds %"struct.(anonymous namespace)::DrawVerticesOp::Mesh", %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"* %58, i64 %61, i32 2
  %78 = bitcast %class.SkMatrix* %77 to i8*
  %79 = bitcast %class.SkMatrix* %76 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* align 4 %79, i64 40, i1 false)
  %80 = getelementptr inbounds %"struct.(anonymous namespace)::DrawVerticesOp::Mesh", %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"* %58, i64 %61, i32 1
  %81 = bitcast %class.sk_sp.89* %3 to i64*
  %82 = load i64, i64* %81, align 8
  store %class.SkVertices* null, %class.SkVertices** %37, align 8
  %83 = getelementptr inbounds %class.sk_sp.89, %class.sk_sp.89* %80, i64 0, i32 0
  %84 = load %class.SkVertices*, %class.SkVertices** %83, align 8
  %85 = bitcast %class.sk_sp.89* %80 to i64*
  store i64 %82, i64* %85, align 8
  %86 = icmp eq %class.SkVertices* %84, null
  br i1 %86, label %93, label %87

87:                                               ; preds = %20
  %88 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %84, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = atomicrmw add i32* %88, i32 -1 acq_rel
  %90 = icmp eq i32 %89, 1
  br i1 %90, label %91, label %93

91:                                               ; preds = %87
  %92 = bitcast %class.SkVertices* %84 to i8*
  tail call void @_ZN10SkVerticesdlEPv(i8* nonnull %92) #13
  br label %93

93:                                               ; preds = %20, %87, %91
  %94 = getelementptr inbounds %"struct.(anonymous namespace)::DrawVerticesOp::Mesh", %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"* %58, i64 %61, i32 3
  store i8 0, i8* %94, align 8
  %95 = add i8 %4, -3
  %96 = icmp ult i8 %95, 2
  %97 = icmp eq i8 %4, 2
  %98 = or i1 %97, %96
  %99 = load %class.SkVertices*, %class.SkVertices** %83, align 8
  %100 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %99, i64 0, i32 6
  %101 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 6
  %102 = tail call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* %77, %struct.SkRect* %101, %struct.SkRect* dereferenceable(16) %100, i32 1) #13
  %103 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %104 = select i1 %98, i16 2, i16 0
  store i16 %104, i16* %103, align 2
  ret void
}

declare void @_ZN12GrMeshDrawOpC2Ej(%class.GrMeshDrawOp*, i32) unnamed_addr #4

declare void @_ZN24GrSimpleMeshDrawOpHelperC1EP14GrProcessorSet8GrAATypeNS_10InputFlagsE(%class.GrSimpleMeshDrawOpHelper*, %class.GrProcessorSet*, i32, i8 zeroext) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_114DrawVerticesOpD2Ev(%"class.(anonymous namespace)::DrawVerticesOp"*) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN12_GLOBAL__N_114DrawVerticesOpE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 9, i32 0
  %4 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %3, align 8
  %5 = icmp eq %class.GrColorSpaceXform* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.GrColorSpaceXform* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.GrColorSpaceXform* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #13
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 2, i32 0, i32 0, i64 72
  %18 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 2, i32 0, i32 0, i64 80
  %19 = bitcast i8* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = and i64 %20, 4294967294
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %16
  %24 = bitcast i8* %17 to %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"**
  br label %29

25:                                               ; preds = %41, %16
  %26 = phi i64 [ %20, %16 ], [ %43, %41 ]
  %27 = and i64 %26, 1
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %50, label %47

29:                                               ; preds = %41, %23
  %30 = phi i64 [ 0, %23 ], [ %42, %41 ]
  %31 = load %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"*, %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"** %24, align 8
  %32 = getelementptr inbounds %"struct.(anonymous namespace)::DrawVerticesOp::Mesh", %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"* %31, i64 %30, i32 1, i32 0
  %33 = load %class.SkVertices*, %class.SkVertices** %32, align 8
  %34 = icmp eq %class.SkVertices* %33, null
  br i1 %34, label %41, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = atomicrmw add i32* %36, i32 -1 acq_rel
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %41

39:                                               ; preds = %35
  %40 = bitcast %class.SkVertices* %33 to i8*
  tail call void @_ZN10SkVerticesdlEPv(i8* nonnull %40) #13
  br label %41

41:                                               ; preds = %39, %35, %29
  %42 = add nuw nsw i64 %30, 1
  %43 = load i64, i64* %19, align 8
  %44 = lshr i64 %43, 1
  %45 = and i64 %44, 2147483647
  %46 = icmp ult i64 %42, %45
  br i1 %46, label %29, label %25

47:                                               ; preds = %25
  %48 = bitcast i8* %17 to i8**
  %49 = load i8*, i8** %48, align 8
  tail call void @_Z7sk_freePv(i8* %49) #13
  br label %50

50:                                               ; preds = %25, %47
  %51 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 1
  tail call void @_ZN24GrSimpleMeshDrawOpHelperD1Ev(%class.GrSimpleMeshDrawOpHelper* %51) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV4GrOp, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %52 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %53 = load %class.GrOp*, %class.GrOp** %52, align 8
  store %class.GrOp* null, %class.GrOp** %52, align 8
  %54 = icmp eq %class.GrOp* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %50
  %56 = bitcast %class.GrOp* %53 to void (%class.GrOp*)***
  %57 = load void (%class.GrOp*)**, void (%class.GrOp*)*** %56, align 8
  %58 = getelementptr inbounds void (%class.GrOp*)*, void (%class.GrOp*)** %57, i64 1
  %59 = load void (%class.GrOp*)*, void (%class.GrOp*)** %58, align 8
  tail call void %59(%class.GrOp* nonnull %53) #13
  br label %60

60:                                               ; preds = %50, %55
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_114DrawVerticesOpD0Ev(%"class.(anonymous namespace)::DrawVerticesOp"*) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN12_GLOBAL__N_114DrawVerticesOpE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 9, i32 0
  %4 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %3, align 8
  %5 = icmp eq %class.GrColorSpaceXform* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.GrColorSpaceXform* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.GrColorSpaceXform* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #13
  br label %16

16:                                               ; preds = %10, %6, %1
  %17 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 2, i32 0, i32 0, i64 72
  %18 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 2, i32 0, i32 0, i64 80
  %19 = bitcast i8* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = and i64 %20, 4294967294
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %16
  %24 = bitcast i8* %17 to %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"**
  br label %29

25:                                               ; preds = %41, %16
  %26 = phi i64 [ %20, %16 ], [ %43, %41 ]
  %27 = and i64 %26, 1
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %50, label %47

29:                                               ; preds = %41, %23
  %30 = phi i64 [ 0, %23 ], [ %42, %41 ]
  %31 = load %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"*, %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"** %24, align 8
  %32 = getelementptr inbounds %"struct.(anonymous namespace)::DrawVerticesOp::Mesh", %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"* %31, i64 %30, i32 1, i32 0
  %33 = load %class.SkVertices*, %class.SkVertices** %32, align 8
  %34 = icmp eq %class.SkVertices* %33, null
  br i1 %34, label %41, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = atomicrmw add i32* %36, i32 -1 acq_rel
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %41

39:                                               ; preds = %35
  %40 = bitcast %class.SkVertices* %33 to i8*
  tail call void @_ZN10SkVerticesdlEPv(i8* nonnull %40) #13
  br label %41

41:                                               ; preds = %39, %35, %29
  %42 = add nuw nsw i64 %30, 1
  %43 = load i64, i64* %19, align 8
  %44 = lshr i64 %43, 1
  %45 = and i64 %44, 2147483647
  %46 = icmp ult i64 %42, %45
  br i1 %46, label %29, label %25

47:                                               ; preds = %25
  %48 = bitcast i8* %17 to i8**
  %49 = load i8*, i8** %48, align 8
  tail call void @_Z7sk_freePv(i8* %49) #13
  br label %50

50:                                               ; preds = %47, %25
  %51 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 1
  tail call void @_ZN24GrSimpleMeshDrawOpHelperD1Ev(%class.GrSimpleMeshDrawOpHelper* %51) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV4GrOp, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %52 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %53 = load %class.GrOp*, %class.GrOp** %52, align 8
  store %class.GrOp* null, %class.GrOp** %52, align 8
  %54 = icmp eq %class.GrOp* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %50
  %56 = bitcast %class.GrOp* %53 to void (%class.GrOp*)***
  %57 = load void (%class.GrOp*)**, void (%class.GrOp*)*** %56, align 8
  %58 = getelementptr inbounds void (%class.GrOp*)*, void (%class.GrOp*)** %57, i64 1
  %59 = load void (%class.GrOp*)*, void (%class.GrOp*)** %58, align 8
  tail call void %59(%class.GrOp* nonnull %53) #13
  br label %60

60:                                               ; preds = %50, %55
  %61 = bitcast %"class.(anonymous namespace)::DrawVerticesOp"* %0 to i8*
  tail call void @_ZdlPv(i8* %61) #13
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i8* @_ZNK12_GLOBAL__N_114DrawVerticesOp4nameEv(%"class.(anonymous namespace)::DrawVerticesOp"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_114DrawVerticesOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%"class.(anonymous namespace)::DrawVerticesOp"* nocapture readonly, %"class.std::__1::function.167"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 11
  %4 = load %class.GrProgramInfo*, %class.GrProgramInfo** %3, align 8
  %5 = icmp eq %class.GrProgramInfo* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %4, i64 0, i32 5
  %8 = load %class.GrPipeline*, %class.GrPipeline** %7, align 8
  tail call void @_ZNK10GrPipeline12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrPipeline* %8, %"class.std::__1::function.167"* %1) #13
  br label %14

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 1, i32 0
  %11 = load %class.GrProcessorSet*, %class.GrProcessorSet** %10, align 8
  %12 = icmp eq %class.GrProcessorSet* %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %9
  tail call void @_ZNK14GrProcessorSet12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrProcessorSet* nonnull %11, %"class.std::__1::function.167"* %1) #13
  br label %14

14:                                               ; preds = %13, %9, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN12_GLOBAL__N_114DrawVerticesOp19onCombineIfPossibleEP4GrOpP12SkArenaAllocRK6GrCaps(%"class.(anonymous namespace)::DrawVerticesOp"*, %class.GrOp*, %class.SkArenaAlloc* nocapture readnone, %class.GrCaps* dereferenceable(232)) unnamed_addr #0 align 2 {
  %5 = bitcast %class.GrOp* %1 to %"class.(anonymous namespace)::DrawVerticesOp"*
  %6 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 1
  %8 = bitcast %class.GrOp* %7 to %class.GrSimpleMeshDrawOpHelper*
  %9 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 6
  %10 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 0, i32 6
  %11 = tail call zeroext i1 @_ZNK24GrSimpleMeshDrawOpHelper12isCompatibleERKS_RK6GrCapsRK6SkRectS7_b(%class.GrSimpleMeshDrawOpHelper* %6, %class.GrSimpleMeshDrawOpHelper* dereferenceable(16) %8, %class.GrCaps* dereferenceable(232) %3, %struct.SkRect* dereferenceable(16) %9, %struct.SkRect* dereferenceable(16) %10, i1 zeroext false) #13
  br i1 %11, label %12, label %204

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 3
  %14 = load i8, i8* %13, align 8
  switch i8 %14, label %204 [
    i8 0, label %15
    i8 3, label %15
    i8 2, label %15
  ]

15:                                               ; preds = %12, %12, %12
  %16 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 3, i32 1
  %17 = bitcast %"class.std::__1::unique_ptr"* %16 to i8*
  %18 = load i8, i8* %17, align 8
  %19 = icmp eq i8 %14, %18
  br i1 %19, label %20, label %204

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 2, i32 0, i32 0, i64 72
  %22 = bitcast i8* %21 to %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"**
  %23 = load %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"*, %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"** %22, align 8
  %24 = getelementptr inbounds %"struct.(anonymous namespace)::DrawVerticesOp::Mesh", %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"* %23, i64 0, i32 1, i32 0
  %25 = load %class.SkVertices*, %class.SkVertices** %24, align 8
  %26 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %25, i64 0, i32 3
  %27 = load i16*, i16** %26, align 8
  %28 = icmp ne i16* %27, null
  %29 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 2, i32 6, i32 2
  %30 = bitcast float* %29 to %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"**
  %31 = load %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"*, %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"** %30, align 8
  %32 = getelementptr inbounds %"struct.(anonymous namespace)::DrawVerticesOp::Mesh", %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"* %31, i64 0, i32 1, i32 0
  %33 = load %class.SkVertices*, %class.SkVertices** %32, align 8
  %34 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %33, i64 0, i32 3
  %35 = load i16*, i16** %34, align 8
  %36 = icmp ne i16* %35, null
  %37 = xor i1 %28, %36
  br i1 %37, label %204, label %38

38:                                               ; preds = %20
  %39 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 4
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %5, i64 0, i32 4
  %42 = load i32, i32* %41, align 4
  %43 = add nsw i32 %42, %40
  %44 = icmp sgt i32 %43, 65535
  br i1 %44, label %204, label %45

45:                                               ; preds = %38
  %46 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 8
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 2
  %49 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 3, i32 5
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 2
  %52 = xor i1 %48, %51
  br i1 %52, label %204, label %53

53:                                               ; preds = %45
  %54 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 6
  %55 = load i8, i8* %54, align 4, !range !2
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %57, label %70

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %5, i64 0, i32 6
  %59 = load i8, i8* %58, align 4, !range !2
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %61, label %70

61:                                               ; preds = %57
  %62 = icmp eq %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"* %23, %31
  br i1 %62, label %97, label %63

63:                                               ; preds = %61
  %64 = getelementptr inbounds %"struct.(anonymous namespace)::DrawVerticesOp::Mesh", %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"* %23, i64 0, i32 2
  %65 = getelementptr inbounds %"struct.(anonymous namespace)::DrawVerticesOp::Mesh", %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"* %31, i64 0, i32 2
  %66 = bitcast %class.SkMatrix* %64 to i8*
  %67 = bitcast %class.SkMatrix* %65 to i8*
  %68 = tail call i32 @bcmp(i8* %66, i8* %67, i64 36) #13
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %97, label %70

70:                                               ; preds = %63, %53, %57
  %71 = getelementptr inbounds %"struct.(anonymous namespace)::DrawVerticesOp::Mesh", %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"* %23, i64 0, i32 2, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = and i32 %72, 192
  %74 = icmp eq i32 %73, 128
  br i1 %74, label %75, label %79

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"struct.(anonymous namespace)::DrawVerticesOp::Mesh", %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"* %23, i64 0, i32 2
  %77 = tail call zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix* %76) #13
  %78 = zext i8 %77 to i32
  store i32 %78, i32* %71, align 4
  br label %79

79:                                               ; preds = %70, %75
  %80 = phi i32 [ %78, %75 ], [ %72, %70 ]
  %81 = and i32 %80, 8
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %204

83:                                               ; preds = %79
  %84 = load %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"*, %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"** %30, align 8
  %85 = getelementptr inbounds %"struct.(anonymous namespace)::DrawVerticesOp::Mesh", %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"* %84, i64 0, i32 2, i32 1
  %86 = load i32, i32* %85, align 4
  %87 = and i32 %86, 192
  %88 = icmp eq i32 %87, 128
  br i1 %88, label %89, label %93

89:                                               ; preds = %83
  %90 = getelementptr inbounds %"struct.(anonymous namespace)::DrawVerticesOp::Mesh", %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"* %84, i64 0, i32 2
  %91 = tail call zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix* %90) #13
  %92 = zext i8 %91 to i32
  store i32 %92, i32* %85, align 4
  br label %93

93:                                               ; preds = %83, %89
  %94 = phi i32 [ %92, %89 ], [ %86, %83 ]
  %95 = and i32 %94, 8
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %204

97:                                               ; preds = %63, %93, %61
  %98 = phi i8 [ 1, %93 ], [ 0, %63 ], [ 0, %61 ]
  store i8 %98, i8* %54, align 4
  %99 = load i32, i32* %49, align 4
  %100 = icmp eq i32 %99, 1
  br i1 %100, label %101, label %102

101:                                              ; preds = %97
  store i32 1, i32* %46, align 4
  br label %132

102:                                              ; preds = %97
  %103 = load i32, i32* %46, align 4
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %132

105:                                              ; preds = %102
  %106 = load %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"*, %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"** %22, align 8
  %107 = load %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"*, %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"** %30, align 8
  %108 = getelementptr inbounds %"struct.(anonymous namespace)::DrawVerticesOp::Mesh", %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"* %106, i64 0, i32 0, i32 3
  %109 = load float, float* %108, align 4
  %110 = getelementptr inbounds %"struct.(anonymous namespace)::DrawVerticesOp::Mesh", %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"* %107, i64 0, i32 0, i32 3
  %111 = load float, float* %110, align 4
  %112 = fcmp oeq float %109, %111
  br i1 %112, label %113, label %131

113:                                              ; preds = %105
  %114 = getelementptr inbounds %"struct.(anonymous namespace)::DrawVerticesOp::Mesh", %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"* %106, i64 0, i32 0, i32 0
  %115 = load float, float* %114, align 4
  %116 = getelementptr inbounds %"struct.(anonymous namespace)::DrawVerticesOp::Mesh", %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"* %107, i64 0, i32 0, i32 0
  %117 = load float, float* %116, align 4
  %118 = fcmp oeq float %115, %117
  br i1 %118, label %119, label %131

119:                                              ; preds = %113
  %120 = getelementptr inbounds %"struct.(anonymous namespace)::DrawVerticesOp::Mesh", %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"* %106, i64 0, i32 0, i32 1
  %121 = load float, float* %120, align 4
  %122 = getelementptr inbounds %"struct.(anonymous namespace)::DrawVerticesOp::Mesh", %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"* %107, i64 0, i32 0, i32 1
  %123 = load float, float* %122, align 4
  %124 = fcmp oeq float %121, %123
  br i1 %124, label %125, label %131

125:                                              ; preds = %119
  %126 = getelementptr inbounds %"struct.(anonymous namespace)::DrawVerticesOp::Mesh", %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"* %106, i64 0, i32 0, i32 2
  %127 = load float, float* %126, align 4
  %128 = getelementptr inbounds %"struct.(anonymous namespace)::DrawVerticesOp::Mesh", %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"* %107, i64 0, i32 0, i32 2
  %129 = load float, float* %128, align 4
  %130 = fcmp une float %127, %129
  br i1 %130, label %131, label %132

131:                                              ; preds = %105, %113, %119, %125
  store i32 1, i32* %46, align 4
  br label %132

132:                                              ; preds = %101, %125, %131, %102
  %133 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 3, i32 3
  %134 = bitcast i16* %133 to i32*
  %135 = load i32, i32* %134, align 8
  %136 = icmp eq i32 %135, 2
  %137 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 7
  br i1 %136, label %145, label %138

138:                                              ; preds = %132
  %139 = load i32, i32* %137, align 8
  %140 = icmp ne i32 %139, 1
  %141 = icmp eq i8 %98, 0
  %142 = or i1 %141, %140
  br i1 %142, label %147, label %143

143:                                              ; preds = %138
  %144 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 7
  br label %145

145:                                              ; preds = %132, %143
  %146 = phi i32* [ %144, %143 ], [ %137, %132 ]
  store i32 2, i32* %146, align 8
  br label %147

147:                                              ; preds = %145, %138
  %148 = bitcast i8* %21 to %class.SkTArray.105*
  %149 = getelementptr inbounds float, float* %29, i64 2
  %150 = bitcast float* %149 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = lshr i64 %151, 1
  %153 = trunc i64 %152 to i32
  %154 = and i32 %153, 2147483647
  %155 = load %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"*, %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"** %30, align 8
  tail call fastcc void @_ZN8SkTArrayIN12_GLOBAL__N_114DrawVerticesOp4MeshELb1EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.105* %148, i32 %154) #13
  %156 = icmp eq i32 %154, 0
  br i1 %156, label %186, label %157

157:                                              ; preds = %147
  %158 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 2, i32 0, i32 0, i64 80
  %159 = bitcast i8* %158 to i64*
  %160 = zext i32 %154 to i64
  br label %161

161:                                              ; preds = %179, %157
  %162 = phi i64 [ 0, %157 ], [ %184, %179 ]
  %163 = load %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"*, %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"** %22, align 8
  %164 = load i64, i64* %159, align 8
  %165 = lshr i64 %164, 1
  %166 = and i64 %165, 2147483647
  %167 = getelementptr inbounds %"struct.(anonymous namespace)::DrawVerticesOp::Mesh", %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"* %163, i64 %166
  %168 = getelementptr inbounds %"struct.(anonymous namespace)::DrawVerticesOp::Mesh", %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"* %167, i64 %162
  %169 = getelementptr inbounds %"struct.(anonymous namespace)::DrawVerticesOp::Mesh", %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"* %155, i64 %162
  %170 = bitcast %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"* %168 to i8*
  %171 = bitcast %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"* %169 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %170, i8* align 8 %171, i64 16, i1 false) #13
  %172 = getelementptr inbounds %"struct.(anonymous namespace)::DrawVerticesOp::Mesh", %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"* %168, i64 0, i32 1, i32 0
  %173 = getelementptr inbounds %"struct.(anonymous namespace)::DrawVerticesOp::Mesh", %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"* %155, i64 %162, i32 1, i32 0
  %174 = load %class.SkVertices*, %class.SkVertices** %173, align 8
  %175 = icmp eq %class.SkVertices* %174, null
  br i1 %175, label %179, label %176

176:                                              ; preds = %161
  %177 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %174, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %178 = atomicrmw add i32* %177, i32 1 monotonic
  br label %179

179:                                              ; preds = %176, %161
  store %class.SkVertices* %174, %class.SkVertices** %172, align 8
  %180 = getelementptr inbounds %"struct.(anonymous namespace)::DrawVerticesOp::Mesh", %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"* %168, i64 0, i32 2
  %181 = getelementptr inbounds %"struct.(anonymous namespace)::DrawVerticesOp::Mesh", %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"* %155, i64 %162, i32 2
  %182 = bitcast %class.SkMatrix* %180 to i8*
  %183 = bitcast %class.SkMatrix* %181 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %182, i8* align 8 %183, i64 41, i1 false) #13
  %184 = add nuw nsw i64 %162, 1
  %185 = icmp eq i64 %184, %160
  br i1 %185, label %186, label %161

186:                                              ; preds = %179, %147
  %187 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 2, i32 0, i32 0, i64 80
  %188 = bitcast i8* %187 to i64*
  %189 = load i64, i64* %188, align 8
  %190 = and i64 %151, 4294967294
  %191 = add i64 %189, %190
  %192 = and i64 %191, 4294967294
  %193 = and i64 %189, -4294967295
  %194 = or i64 %192, %193
  store i64 %194, i64* %188, align 8
  %195 = load i32, i32* %41, align 4
  %196 = load i32, i32* %39, align 4
  %197 = add nsw i32 %196, %195
  store i32 %197, i32* %39, align 4
  %198 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 3, i32 2
  %199 = bitcast %class.GrOp** %198 to i32*
  %200 = load i32, i32* %199, align 8
  %201 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 5
  %202 = load i32, i32* %201, align 8
  %203 = add nsw i32 %202, %200
  store i32 %203, i32* %201, align 8
  br label %204

204:                                              ; preds = %93, %79, %12, %186, %45, %38, %20, %15, %4
  %205 = phi i32 [ 2, %4 ], [ 2, %15 ], [ 2, %20 ], [ 2, %38 ], [ 2, %45 ], [ 0, %186 ], [ 2, %93 ], [ 2, %79 ], [ 2, %12 ]
  ret i32 %205
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12GrMeshDrawOp12onPrePrepareEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp(%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView* dereferenceable(16), %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"* dereferenceable(32), i32, i32) unnamed_addr #0 comdat align 2 {
  %8 = bitcast %class.GrMeshDrawOp* %0 to void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)***
  %9 = load void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)**, void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)*** %8, align 8
  %10 = getelementptr inbounds void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)*, void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)** %9, i64 10
  %11 = load void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)*, void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)** %10, align 8
  tail call void %11(%class.GrMeshDrawOp* %0, %class.GrRecordingContext* %1, %class.GrSurfaceProxyView* dereferenceable(16) %2, %class.GrAppliedClip* %3, %"class.GrXferProcessor::DstProxyView"* dereferenceable(32) %4, i32 %5, i32 %6) #13
  ret void
}

declare void @_ZN12GrMeshDrawOp9onPrepareEP14GrOpFlushState(%class.GrMeshDrawOp*, %class.GrOpFlushState*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_114DrawVerticesOp9onExecuteEP14GrOpFlushStateRK6SkRect(%"class.(anonymous namespace)::DrawVerticesOp"*, %class.GrOpFlushState*, %struct.SkRect* dereferenceable(16)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 11
  %5 = load %class.GrProgramInfo*, %class.GrProgramInfo** %4, align 8
  %6 = icmp eq %class.GrProgramInfo* %5, null
  br i1 %6, label %7, label %14

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 0
  %9 = icmp eq %class.GrOpFlushState* %1, null
  %10 = getelementptr inbounds %class.GrOpFlushState, %class.GrOpFlushState* %1, i64 0, i32 1
  %11 = select i1 %9, %"class.GrMeshDrawOp::Target"* null, %"class.GrMeshDrawOp::Target"* %10
  tail call void @_ZN12GrMeshDrawOp17createProgramInfoEPNS_6TargetE(%class.GrMeshDrawOp* %8, %"class.GrMeshDrawOp::Target"* %11) #13
  %12 = load %class.GrProgramInfo*, %class.GrProgramInfo** %4, align 8
  %13 = icmp eq %class.GrProgramInfo* %12, null
  br i1 %13, label %43, label %14

14:                                               ; preds = %3, %7
  %15 = phi %class.GrProgramInfo* [ %12, %7 ], [ %5, %3 ]
  %16 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 10
  %17 = load %struct.GrSimpleMesh*, %struct.GrSimpleMesh** %16, align 8
  %18 = icmp eq %struct.GrSimpleMesh* %17, null
  br i1 %18, label %43, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %class.GrOpFlushState, %class.GrOpFlushState* %1, i64 0, i32 15
  %21 = load %class.GrOpsRenderPass*, %class.GrOpsRenderPass** %20, align 8
  tail call void @_ZN15GrOpsRenderPass12bindPipelineERK13GrProgramInfoRK6SkRect(%class.GrOpsRenderPass* %21, %class.GrProgramInfo* nonnull dereferenceable(128) %15, %struct.SkRect* dereferenceable(16) %2) #13
  %22 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %15, i64 0, i32 5
  %23 = load %class.GrPipeline*, %class.GrPipeline** %22, align 8
  %24 = getelementptr inbounds %class.GrPipeline, %class.GrPipeline* %23, i64 0, i32 5
  %25 = load i8, i8* %24, align 8
  %26 = and i8 %25, 32
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %35, label %28

28:                                               ; preds = %19
  %29 = getelementptr inbounds %class.GrOpFlushState, %class.GrOpFlushState* %1, i64 0, i32 10
  %30 = load %"struct.GrOpFlushState::OpArgs"*, %"struct.GrOpFlushState::OpArgs"** %29, align 8
  %31 = getelementptr inbounds %"struct.GrOpFlushState::OpArgs", %"struct.GrOpFlushState::OpArgs"* %30, i64 0, i32 4
  %32 = load %class.GrAppliedClip*, %class.GrAppliedClip** %31, align 8
  %33 = getelementptr inbounds %class.GrAppliedClip, %class.GrAppliedClip* %32, i64 0, i32 0, i32 0, i32 1
  %34 = load %class.GrOpsRenderPass*, %class.GrOpsRenderPass** %20, align 8
  tail call void @_ZN15GrOpsRenderPass14setScissorRectERK7SkIRect(%class.GrOpsRenderPass* %34, %struct.SkIRect* dereferenceable(16) %33) #13
  br label %35

35:                                               ; preds = %19, %28
  %36 = load %class.GrProgramInfo*, %class.GrProgramInfo** %4, align 8
  %37 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %36, i64 0, i32 7
  %38 = load %class.GrGeometryProcessor*, %class.GrGeometryProcessor** %37, align 8
  %39 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %36, i64 0, i32 5
  %40 = load %class.GrPipeline*, %class.GrPipeline** %39, align 8
  %41 = load %class.GrOpsRenderPass*, %class.GrOpsRenderPass** %20, align 8
  tail call void @_ZN15GrOpsRenderPass12bindTexturesERK19GrGeometryProcessorPKPK14GrSurfaceProxyRK10GrPipeline(%class.GrOpsRenderPass* %41, %class.GrGeometryProcessor* dereferenceable(80) %38, %class.GrSurfaceProxy** null, %class.GrPipeline* dereferenceable(128) %40) #13
  %42 = load %struct.GrSimpleMesh*, %struct.GrSimpleMesh** %16, align 8
  tail call void @_ZN14GrOpFlushState8drawMeshERK12GrSimpleMesh(%class.GrOpFlushState* %1, %struct.GrSimpleMesh* dereferenceable(48) %42) #13
  br label %43

43:                                               ; preds = %14, %7, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZNK12_GLOBAL__N_114DrawVerticesOp18fixedFunctionFlagsEv(%"class.(anonymous namespace)::DrawVerticesOp"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 1
  %3 = tail call i32 @_ZNK24GrSimpleMeshDrawOpHelper18fixedFunctionFlagsEv(%class.GrSimpleMeshDrawOpHelper* %2) #13
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN12_GLOBAL__N_114DrawVerticesOp8finalizeERK6GrCapsPK13GrAppliedClip11GrClampType(%"class.(anonymous namespace)::DrawVerticesOp"*, %class.GrCaps* dereferenceable(232), %class.GrAppliedClip*, i32) unnamed_addr #0 align 2 {
  %5 = alloca %class.GrProcessorAnalysisColor, align 4
  %6 = bitcast %class.GrProcessorAnalysisColor* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %6) #13
  %7 = getelementptr inbounds %class.GrProcessorAnalysisColor, %class.GrProcessorAnalysisColor* %5, i64 0, i32 0
  %8 = getelementptr inbounds %class.GrProcessorAnalysisColor, %class.GrProcessorAnalysisColor* %5, i64 0, i32 1
  %9 = bitcast %struct.SkRGBA4f* %8 to i8*
  %10 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 8
  %11 = bitcast %class.GrProcessorAnalysisColor* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %11, i8 0, i64 20, i1 false)
  %12 = load i32, i32* %10, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %23

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 2, i32 0, i32 0, i64 72
  %16 = bitcast i8* %15 to %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"**
  %17 = load %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"*, %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"** %16, align 8
  %18 = bitcast %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 %18, i64 16, i1 false) #13
  %19 = getelementptr inbounds %"struct.(anonymous namespace)::DrawVerticesOp::Mesh", %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"* %17, i64 0, i32 0, i32 3
  %20 = load float, float* %19, align 4
  %21 = fcmp oeq float %20, 1.000000e+00
  %22 = select i1 %21, i32 3, i32 1
  br label %23

23:                                               ; preds = %4, %14
  %24 = phi i32 [ %22, %14 ], [ 0, %4 ]
  store i32 %24, i32* %7, align 4
  %25 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 1
  %26 = load %struct.GrUserStencilSettings*, %struct.GrUserStencilSettings** @_ZN21GrUserStencilSettings7kUnusedE, align 8
  %27 = call i32 @_ZN24GrSimpleMeshDrawOpHelper18finalizeProcessorsERK6GrCapsPK13GrAppliedClipPK21GrUserStencilSettings11GrClampType27GrProcessorAnalysisCoverageP24GrProcessorAnalysisColor(%class.GrSimpleMeshDrawOpHelper* %25, %class.GrCaps* dereferenceable(232) %1, %class.GrAppliedClip* %2, %struct.GrUserStencilSettings* %26, i32 %3, i32 0, %class.GrProcessorAnalysisColor* nonnull %5) #13
  %28 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 2, i32 0, i32 0, i64 72
  %29 = bitcast i8* %28 to %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"**
  %30 = load %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"*, %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"** %29, align 8
  %31 = load i32, i32* %7, align 4
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %42, label %34

34:                                               ; preds = %23
  %35 = icmp eq %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"* %30, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %34
  %37 = bitcast %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %37, i8* align 4 %9, i64 16, i1 false) #13
  %38 = load %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"*, %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"** %29, align 8
  br label %39

39:                                               ; preds = %34, %36
  %40 = phi %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"* [ null, %34 ], [ %38, %36 ]
  %41 = getelementptr inbounds %"struct.(anonymous namespace)::DrawVerticesOp::Mesh", %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"* %40, i64 0, i32 3
  store i8 1, i8* %41, align 8
  store i32 0, i32* %10, align 4
  br label %42

42:                                               ; preds = %23, %39
  %43 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 1, i32 2
  %44 = load i8, i8* %43, align 1
  %45 = and i8 %44, 4
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %47, label %49

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 7
  store i32 0, i32* %48, align 8
  br label %49

49:                                               ; preds = %42, %47
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %6) #13
  ret i32 %27
}

declare void @_ZN12GrMeshDrawOp17onPrePrepareDrawsEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp(%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView* dereferenceable(16), %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"* dereferenceable(32), i32, i32) unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal %class.GrProgramInfo* @_ZN12_GLOBAL__N_114DrawVerticesOp11programInfoEv(%"class.(anonymous namespace)::DrawVerticesOp"* nocapture readonly) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 11
  %3 = load %class.GrProgramInfo*, %class.GrProgramInfo** %2, align 8
  ret %class.GrProgramInfo* %3
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_114DrawVerticesOp19onCreateProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp(%"class.(anonymous namespace)::DrawVerticesOp"*, %class.GrCaps*, %class.SkArenaAlloc*, %class.GrSurfaceProxyView* dereferenceable(16), %class.GrAppliedClip* dereferenceable(72), %"class.GrXferProcessor::DstProxyView"* dereferenceable(32), i32, i32) unnamed_addr #0 align 2 {
  %9 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 6
  %10 = load i8, i8* %9, align 4, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #13
  br label %19

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 2, i32 0, i32 0, i64 72
  %16 = bitcast i8* %15 to %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"**
  %17 = load %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"*, %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"** %16, align 8
  %18 = getelementptr inbounds %"struct.(anonymous namespace)::DrawVerticesOp::Mesh", %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"* %17, i64 0, i32 2
  br label %19

19:                                               ; preds = %14, %12
  %20 = phi %class.SkMatrix* [ %13, %12 ], [ %18, %14 ]
  %21 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 8
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 2
  br i1 %23, label %24, label %35

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 9, i32 0
  %26 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %25, align 8
  %27 = icmp eq %class.GrColorSpaceXform* %26, null
  br i1 %27, label %32, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %26, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw add i32* %29, i32 1 monotonic
  %31 = load i32, i32* %21, align 4
  br label %32

32:                                               ; preds = %28, %24
  %33 = phi i32 [ 2, %24 ], [ %31, %28 ]
  %34 = ptrtoint %class.GrColorSpaceXform* %26 to i64
  br label %35

35:                                               ; preds = %32, %19
  %36 = phi i32 [ %33, %32 ], [ %22, %19 ]
  %37 = phi i64 [ %34, %32 ], [ 0, %19 ]
  %38 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 7
  %39 = load i32, i32* %38, align 8
  %40 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 2, i32 0, i32 0, i64 72
  %41 = bitcast i8* %40 to i8**
  %42 = load i8*, i8** %41, align 8
  %43 = tail call i8* @_ZN12SkArenaAlloc21allocObjectWithFooterEjj(%class.SkArenaAlloc* %2, i32 185, i32 8) #13
  %44 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %2, i64 0, i32 1
  %45 = bitcast i8** %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = ptrtoint i8* %43 to i64
  %48 = sub i64 %47, %46
  %49 = trunc i64 %48 to i32
  %50 = getelementptr inbounds i8, i8* %43, i64 176
  store i8* %50, i8** %44, align 8
  tail call void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc* %2, i8* (i8*)* nonnull @_ZZN12SkArenaAlloc4makeIZN12_GLOBAL__N_110VerticesGP4MakeEPS_NS1_15LocalCoordsTypeENS1_14ColorArrayTypeERK8SkRGBA4fIL11SkAlphaType2EE5sk_spI17GrColorSpaceXformERK8SkMatrixEUlPvE_EEDTclfp_LDnEEEOT_ENUlPcE_8__invokeESM_, i32 %49) #13
  %51 = bitcast %class.SkMatrix* %20 to i8*
  %52 = bitcast i8* %43 to %class.GrGeometryProcessor*
  tail call void @_ZN19GrGeometryProcessorC2EN11GrProcessor7ClassIDE(%class.GrGeometryProcessor* %52, i32 113) #13
  %53 = bitcast i8* %43 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN12_GLOBAL__N_110VerticesGPE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %53, align 8
  %54 = getelementptr inbounds i8, i8* %43, i64 80
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 24, i1 false) #13
  %55 = getelementptr inbounds i8, i8* %43, i64 104
  %56 = bitcast i8* %55 to i32*
  store i32 %36, i32* %56, align 8
  %57 = getelementptr inbounds i8, i8* %43, i64 108
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %57, i8* align 4 %42, i64 16, i1 false) #13
  %58 = getelementptr inbounds i8, i8* %43, i64 124
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %58, i8* align 4 %51, i64 40, i1 false) #13
  %59 = getelementptr inbounds i8, i8* %43, i64 168
  %60 = bitcast i8* %59 to i64*
  store i64 %37, i64* %60, align 8
  %61 = getelementptr inbounds i8, i8* %43, i64 88
  %62 = bitcast i8* %61 to %"class.GrGeometryProcessor::Attribute"**
  %63 = getelementptr inbounds i8, i8* %43, i64 96
  %64 = bitcast i8* %63 to %"class.GrGeometryProcessor::Attribute"**
  %65 = bitcast i8* %61 to i64*
  %66 = bitcast i8* %54 to i64*
  %67 = bitcast i8* %63 to i64*
  %68 = tail call i8* @_Znwm(i64 16) #16
  %69 = getelementptr inbounds i8, i8* %68, i64 16
  %70 = ptrtoint i8* %69 to i64
  %71 = bitcast i8* %68 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i64 0, i64 0), i8** %71, align 8
  %72 = getelementptr inbounds i8, i8* %68, i64 8
  %73 = bitcast i8* %72 to i32*
  store i32 1, i32* %73, align 8
  %74 = getelementptr inbounds i8, i8* %68, i64 12
  %75 = bitcast i8* %74 to i32*
  store i32 22, i32* %75, align 4
  %76 = ptrtoint i8* %68 to i64
  store i64 %76, i64* %66, align 8
  store i64 %70, i64* %65, align 8
  store i64 %70, i64* %67, align 8
  %77 = icmp eq i32 %36, 0
  %78 = select i1 %77, i64 0, i64 133143986193
  %79 = select i1 %77, i8* null, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i64 0, i64 0)
  %80 = tail call i8* @_Znwm(i64 32) #16
  %81 = getelementptr inbounds i8, i8* %80, i64 16
  %82 = bitcast i8* %81 to %"class.GrGeometryProcessor::Attribute"*
  %83 = getelementptr inbounds i8, i8* %80, i64 32
  %84 = ptrtoint i8* %83 to i64
  %85 = bitcast i8* %81 to i8**
  store i8* %79, i8** %85, align 8
  %86 = getelementptr inbounds i8, i8* %80, i64 24
  %87 = bitcast i8* %86 to i64*
  store i64 %78, i64* %87, align 8
  %88 = bitcast i8* %54 to %"class.GrGeometryProcessor::Attribute"**
  %89 = load %"class.GrGeometryProcessor::Attribute"*, %"class.GrGeometryProcessor::Attribute"** %88, align 8
  %90 = load i64, i64* %65, align 8
  %91 = ptrtoint %"class.GrGeometryProcessor::Attribute"* %89 to i64
  %92 = sub i64 %90, %91
  %93 = ashr exact i64 %92, 4
  %94 = sub nsw i64 0, %93
  %95 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %82, i64 %94
  %96 = ptrtoint %"class.GrGeometryProcessor::Attribute"* %95 to i64
  %97 = icmp sgt i64 %92, 0
  br i1 %97, label %98, label %102

98:                                               ; preds = %35
  %99 = bitcast %"class.GrGeometryProcessor::Attribute"* %95 to i8*
  %100 = bitcast %"class.GrGeometryProcessor::Attribute"* %89 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %100, i64 %92, i1 false) #13
  %101 = load %"class.GrGeometryProcessor::Attribute"*, %"class.GrGeometryProcessor::Attribute"** %88, align 8
  br label %102

102:                                              ; preds = %98, %35
  %103 = phi %"class.GrGeometryProcessor::Attribute"* [ %89, %35 ], [ %101, %98 ]
  store i64 %96, i64* %66, align 8
  store i64 %84, i64* %65, align 8
  store i64 %84, i64* %67, align 8
  %104 = icmp eq %"class.GrGeometryProcessor::Attribute"* %103, null
  br i1 %104, label %105, label %111

105:                                              ; preds = %102
  %106 = bitcast i8* %83 to %"class.GrGeometryProcessor::Attribute"*
  %107 = icmp eq i32 %39, 2
  %108 = select i1 %107, i32 22, i32 0
  %109 = zext i1 %107 to i32
  %110 = select i1 %107, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i64 0, i64 0), i8* null
  br label %128

111:                                              ; preds = %102
  %112 = bitcast %"class.GrGeometryProcessor::Attribute"* %103 to i8*
  tail call void @_ZdlPv(i8* %112) #16
  %113 = load %"class.GrGeometryProcessor::Attribute"*, %"class.GrGeometryProcessor::Attribute"** %62, align 8
  %114 = load %"class.GrGeometryProcessor::Attribute"*, %"class.GrGeometryProcessor::Attribute"** %64, align 8
  %115 = icmp eq i32 %39, 2
  %116 = select i1 %115, i32 22, i32 0
  %117 = zext i1 %115 to i32
  %118 = select i1 %115, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i64 0, i64 0), i8* null
  %119 = icmp eq %"class.GrGeometryProcessor::Attribute"* %113, %114
  br i1 %119, label %120, label %122

120:                                              ; preds = %111
  %121 = load i64, i64* %66, align 8
  br label %128

122:                                              ; preds = %111
  %123 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %113, i64 0, i32 0
  store i8* %118, i8** %123, align 8
  %124 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %113, i64 0, i32 1
  store i32 %117, i32* %124, align 8
  %125 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %113, i64 0, i32 2
  store i32 %116, i32* %125, align 4
  %126 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %113, i64 1
  %127 = ptrtoint %"class.GrGeometryProcessor::Attribute"* %126 to i64
  store i64 %127, i64* %65, align 8
  br label %186

128:                                              ; preds = %120, %105
  %129 = phi i64 [ %96, %105 ], [ %121, %120 ]
  %130 = phi i8* [ %110, %105 ], [ %118, %120 ]
  %131 = phi i32 [ %109, %105 ], [ %117, %120 ]
  %132 = phi i32 [ %108, %105 ], [ %116, %120 ]
  %133 = phi %"class.GrGeometryProcessor::Attribute"* [ %106, %105 ], [ %113, %120 ]
  %134 = ptrtoint %"class.GrGeometryProcessor::Attribute"* %133 to i64
  %135 = sub i64 %134, %129
  %136 = ashr exact i64 %135, 4
  %137 = add nsw i64 %136, 1
  %138 = icmp ugt i64 %137, 1152921504606846975
  br i1 %138, label %139, label %141

139:                                              ; preds = %128
  %140 = bitcast i8* %54 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %140) #15
  unreachable

141:                                              ; preds = %128
  %142 = icmp ult i64 %136, 576460752303423487
  br i1 %142, label %143, label %151

143:                                              ; preds = %141
  %144 = ashr exact i64 %135, 3
  %145 = icmp ult i64 %144, %137
  %146 = select i1 %145, i64 %137, i64 %144
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %156, label %148

148:                                              ; preds = %143
  %149 = icmp ugt i64 %146, 1152921504606846975
  br i1 %149, label %150, label %151

150:                                              ; preds = %148
  tail call void @abort() #15
  unreachable

151:                                              ; preds = %148, %141
  %152 = phi i64 [ %146, %148 ], [ 1152921504606846975, %141 ]
  %153 = shl i64 %152, 4
  %154 = tail call i8* @_Znwm(i64 %153) #16
  %155 = bitcast i8* %154 to %"class.GrGeometryProcessor::Attribute"*
  br label %156

156:                                              ; preds = %151, %143
  %157 = phi i64 [ %152, %151 ], [ 0, %143 ]
  %158 = phi %"class.GrGeometryProcessor::Attribute"* [ %155, %151 ], [ null, %143 ]
  %159 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %158, i64 %136
  %160 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %158, i64 %157
  %161 = ptrtoint %"class.GrGeometryProcessor::Attribute"* %160 to i64
  %162 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %159, i64 0, i32 0
  store i8* %130, i8** %162, align 8
  %163 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %158, i64 %136, i32 1
  store i32 %131, i32* %163, align 8
  %164 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %158, i64 %136, i32 2
  store i32 %132, i32* %164, align 4
  %165 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %159, i64 1
  %166 = ptrtoint %"class.GrGeometryProcessor::Attribute"* %165 to i64
  %167 = load %"class.GrGeometryProcessor::Attribute"*, %"class.GrGeometryProcessor::Attribute"** %88, align 8
  %168 = load i64, i64* %65, align 8
  %169 = ptrtoint %"class.GrGeometryProcessor::Attribute"* %167 to i64
  %170 = sub i64 %168, %169
  %171 = ashr exact i64 %170, 4
  %172 = sub nsw i64 0, %171
  %173 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %159, i64 %172
  %174 = ptrtoint %"class.GrGeometryProcessor::Attribute"* %173 to i64
  %175 = icmp sgt i64 %170, 0
  br i1 %175, label %176, label %180

176:                                              ; preds = %156
  %177 = bitcast %"class.GrGeometryProcessor::Attribute"* %173 to i8*
  %178 = bitcast %"class.GrGeometryProcessor::Attribute"* %167 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %177, i8* align 8 %178, i64 %170, i1 false) #13
  %179 = load %"class.GrGeometryProcessor::Attribute"*, %"class.GrGeometryProcessor::Attribute"** %88, align 8
  br label %180

180:                                              ; preds = %176, %156
  %181 = phi %"class.GrGeometryProcessor::Attribute"* [ %167, %156 ], [ %179, %176 ]
  store i64 %174, i64* %66, align 8
  store i64 %166, i64* %65, align 8
  store i64 %161, i64* %67, align 8
  %182 = icmp eq %"class.GrGeometryProcessor::Attribute"* %181, null
  br i1 %182, label %186, label %183

183:                                              ; preds = %180
  %184 = bitcast %"class.GrGeometryProcessor::Attribute"* %181 to i8*
  tail call void @_ZdlPv(i8* %184) #16
  %185 = load i64, i64* %65, align 8
  br label %186

186:                                              ; preds = %183, %180, %122
  %187 = phi i64 [ %185, %183 ], [ %166, %180 ], [ %127, %122 ]
  %188 = load %"class.GrGeometryProcessor::Attribute"*, %"class.GrGeometryProcessor::Attribute"** %88, align 8
  %189 = ptrtoint %"class.GrGeometryProcessor::Attribute"* %188 to i64
  %190 = sub i64 %187, %189
  %191 = lshr exact i64 %190, 4
  %192 = trunc i64 %191 to i32
  %193 = getelementptr inbounds i8, i8* %43, i64 24
  %194 = bitcast i8* %193 to %"class.GrGeometryProcessor::Attribute"**
  store %"class.GrGeometryProcessor::Attribute"* %188, %"class.GrGeometryProcessor::Attribute"** %194, align 8
  %195 = getelementptr inbounds i8, i8* %43, i64 32
  %196 = bitcast i8* %195 to i32*
  store i32 %192, i32* %196, align 8
  %197 = getelementptr inbounds i8, i8* %43, i64 36
  %198 = bitcast i8* %197 to i32*
  store i32 0, i32* %198, align 4
  %199 = getelementptr inbounds i8, i8* %43, i64 40
  %200 = bitcast i8* %199 to i64*
  store i64 0, i64* %200, align 8
  %201 = icmp sgt i32 %192, 0
  br i1 %201, label %202, label %227

202:                                              ; preds = %186
  %203 = and i64 %191, 4294967295
  br label %204

204:                                              ; preds = %222, %202
  %205 = phi i64 [ 0, %202 ], [ %223, %222 ]
  %206 = phi i32 [ 0, %202 ], [ %224, %222 ]
  %207 = phi i64 [ 0, %202 ], [ %225, %222 ]
  %208 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %188, i64 %207, i32 2
  %209 = load i32, i32* %208, align 4
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %222, label %211

211:                                              ; preds = %204
  %212 = add nsw i32 %206, 1
  store i32 %212, i32* %198, align 4
  %213 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %188, i64 %207, i32 1
  %214 = load i32, i32* %213, align 8
  %215 = icmp ult i32 %214, 26
  br i1 %215, label %217, label %216

216:                                              ; preds = %211
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.9, i64 0, i64 0), i32 373, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.10, i64 0, i64 0)) #15
  unreachable

217:                                              ; preds = %211
  %218 = sext i32 %214 to i64
  %219 = getelementptr inbounds [26 x i64], [26 x i64]* @switch.table._ZN12_GLOBAL__N_114DrawVerticesOp19onCreateProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp, i64 0, i64 %218
  %220 = load i64, i64* %219, align 8
  %221 = add i64 %220, %205
  store i64 %221, i64* %200, align 8
  br label %222

222:                                              ; preds = %217, %204
  %223 = phi i64 [ %221, %217 ], [ %205, %204 ]
  %224 = phi i32 [ %212, %217 ], [ %206, %204 ]
  %225 = add nuw nsw i64 %207, 1
  %226 = icmp eq i64 %225, %203
  br i1 %226, label %227, label %204

227:                                              ; preds = %222, %186
  %228 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 1
  %229 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 3
  %230 = load i8, i8* %229, align 8
  %231 = tail call %class.GrProgramInfo* @_ZN24GrSimpleMeshDrawOpHelper17createProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewEP19GrGeometryProcessor15GrPrimitiveType18GrXferBarrierFlags8GrLoadOp(%class.GrSimpleMeshDrawOpHelper* %228, %class.GrCaps* %1, %class.SkArenaAlloc* %2, %class.GrSurfaceProxyView* dereferenceable(16) %3, %class.GrAppliedClip* dereferenceable(72) %4, %"class.GrXferProcessor::DstProxyView"* dereferenceable(32) %5, %class.GrGeometryProcessor* %52, i8 zeroext %230, i32 %6, i32 %7) #13
  %232 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 11
  store %class.GrProgramInfo* %231, %class.GrProgramInfo** %232, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_114DrawVerticesOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetE(%"class.(anonymous namespace)::DrawVerticesOp"* nocapture, %"class.GrMeshDrawOp::Target"*) unnamed_addr #0 align 2 {
  %3 = alloca %class.sk_sp.106, align 8
  %4 = alloca i32, align 4
  %5 = alloca %class.sk_sp.106, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 8
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  %11 = select i1 %10, i64 8, i64 12
  %12 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 7
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 2
  %15 = select i1 %14, i64 8, i64 0
  %16 = add nuw nsw i64 %15, %11
  %17 = bitcast %class.sk_sp.106* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  %18 = getelementptr inbounds %class.sk_sp.106, %class.sk_sp.106* %3, i64 0, i32 0
  store %class.GrBuffer* null, %class.GrBuffer** %18, align 8
  %19 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #13
  store i32 0, i32* %4, align 4
  %20 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 4
  %21 = load i32, i32* %20, align 4
  %22 = bitcast %"class.GrMeshDrawOp::Target"* %1 to i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.106*, i32*)***
  %23 = load i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.106*, i32*)**, i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.106*, i32*)*** %22, align 8
  %24 = getelementptr inbounds i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.106*, i32*)*, i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.106*, i32*)** %23, i64 3
  %25 = load i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.106*, i32*)*, i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.106*, i32*)** %24, align 8
  %26 = call i8* %25(%"class.GrMeshDrawOp::Target"* %1, i64 %16, i32 %21, %class.sk_sp.106* nonnull %3, i32* nonnull %4) #13
  %27 = icmp eq i8* %26, null
  br i1 %27, label %28, label %29

28:                                               ; preds = %2
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str, i64 0, i64 0), i32 415, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.29, i64 0, i64 0)) #13
  br label %324

29:                                               ; preds = %2
  %30 = bitcast %class.sk_sp.106* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #13
  %31 = getelementptr inbounds %class.sk_sp.106, %class.sk_sp.106* %5, i64 0, i32 0
  store %class.GrBuffer* null, %class.GrBuffer** %31, align 8
  %32 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %32) #13
  store i32 0, i32* %6, align 4
  %33 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 2, i32 0, i32 0, i64 72
  %34 = bitcast i8* %33 to %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"**
  %35 = load %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"*, %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"** %34, align 8
  %36 = getelementptr inbounds %"struct.(anonymous namespace)::DrawVerticesOp::Mesh", %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"* %35, i64 0, i32 1, i32 0
  %37 = load %class.SkVertices*, %class.SkVertices** %36, align 8
  %38 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %37, i64 0, i32 3
  %39 = load i16*, i16** %38, align 8
  %40 = icmp eq i16* %39, null
  br i1 %40, label %53, label %41

41:                                               ; preds = %29
  %42 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 5
  %43 = load i32, i32* %42, align 8
  %44 = bitcast %"class.GrMeshDrawOp::Target"* %1 to i16* (%"class.GrMeshDrawOp::Target"*, i32, %class.sk_sp.106*, i32*)***
  %45 = load i16* (%"class.GrMeshDrawOp::Target"*, i32, %class.sk_sp.106*, i32*)**, i16* (%"class.GrMeshDrawOp::Target"*, i32, %class.sk_sp.106*, i32*)*** %44, align 8
  %46 = getelementptr inbounds i16* (%"class.GrMeshDrawOp::Target"*, i32, %class.sk_sp.106*, i32*)*, i16* (%"class.GrMeshDrawOp::Target"*, i32, %class.sk_sp.106*, i32*)** %45, i64 4
  %47 = load i16* (%"class.GrMeshDrawOp::Target"*, i32, %class.sk_sp.106*, i32*)*, i16* (%"class.GrMeshDrawOp::Target"*, i32, %class.sk_sp.106*, i32*)** %46, align 8
  %48 = call i16* %47(%"class.GrMeshDrawOp::Target"* %1, i32 %43, %class.sk_sp.106* nonnull %5, i32* nonnull %6) #13
  %49 = icmp eq i16* %48, null
  br i1 %49, label %52, label %50

50:                                               ; preds = %41
  %51 = load %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"*, %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"** %34, align 8
  br label %53

52:                                               ; preds = %41
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str, i64 0, i64 0), i32 425, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.30, i64 0, i64 0)) #13
  br label %315

53:                                               ; preds = %50, %29
  %54 = phi %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"* [ %51, %50 ], [ %35, %29 ]
  %55 = phi i16* [ %48, %50 ], [ null, %29 ]
  %56 = load i32, i32* %8, align 4
  %57 = icmp eq i32 %56, 0
  %58 = load i32, i32* %12, align 8
  %59 = icmp eq i32 %58, 2
  %60 = icmp eq %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"* %54, null
  br i1 %60, label %68, label %61

61:                                               ; preds = %53
  %62 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 2, i32 0, i32 0, i64 80
  %63 = bitcast i8* %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = lshr i64 %64, 1
  %66 = and i64 %65, 2147483647
  %67 = getelementptr inbounds %"struct.(anonymous namespace)::DrawVerticesOp::Mesh", %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"* %54, i64 %66
  br label %68

68:                                               ; preds = %53, %61
  %69 = phi %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"* [ %67, %61 ], [ null, %53 ]
  %70 = icmp eq %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"* %54, %69
  br i1 %70, label %74, label %71

71:                                               ; preds = %68
  %72 = bitcast i32* %7 to i8*
  %73 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 6
  br label %96

74:                                               ; preds = %236, %68
  %75 = bitcast %"class.GrMeshDrawOp::Target"* %1 to %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)***
  %76 = load %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)**, %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)*** %75, align 8
  %77 = getelementptr inbounds %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)*, %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)** %76, i64 29
  %78 = load %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)*, %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)** %77, align 8
  %79 = call %class.SkArenaAlloc* %78(%"class.GrMeshDrawOp::Target"* %1) #13
  %80 = call i8* @_ZN12SkArenaAlloc21allocObjectWithFooterEjj(%class.SkArenaAlloc* %79, i32 57, i32 8) #13
  %81 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %79, i64 0, i32 1
  %82 = bitcast i8** %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = ptrtoint i8* %80 to i64
  %85 = sub i64 %84, %83
  %86 = trunc i64 %85 to i32
  %87 = getelementptr inbounds i8, i8* %80, i64 48
  store i8* %87, i8** %81, align 8
  call void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc* %79, i8* (i8*)* nonnull @_ZZN12SkArenaAlloc4makeIZNS_4makeI12GrSimpleMeshJEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS3_ENUlPcE_8__invokeESC_, i32 %86) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 48, i1 false) #13
  %88 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 10
  %89 = bitcast %struct.GrSimpleMesh** %88 to i8**
  store i8* %80, i8** %89, align 8
  %90 = load %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"*, %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"** %34, align 8
  %91 = getelementptr inbounds %"struct.(anonymous namespace)::DrawVerticesOp::Mesh", %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"* %90, i64 0, i32 1, i32 0
  %92 = load %class.SkVertices*, %class.SkVertices** %91, align 8
  %93 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %92, i64 0, i32 3
  %94 = load i16*, i16** %93, align 8
  %95 = icmp eq i16* %94, null
  br i1 %95, label %286, label %240

96:                                               ; preds = %71, %236
  %97 = phi %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"* [ %54, %71 ], [ %238, %236 ]
  %98 = phi i32 [ 0, %71 ], [ %237, %236 ]
  %99 = phi i16* [ %55, %71 ], [ %165, %236 ]
  %100 = phi i8* [ %26, %71 ], [ %184, %236 ]
  %101 = getelementptr inbounds %"struct.(anonymous namespace)::DrawVerticesOp::Mesh", %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"* %97, i64 0, i32 1, i32 0
  %102 = load %class.SkVertices*, %class.SkVertices** %101, align 8
  %103 = icmp eq i16* %99, null
  br i1 %103, label %164, label %104

104:                                              ; preds = %96
  %105 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %102, i64 0, i32 8
  %106 = load i32, i32* %105, align 4
  %107 = icmp sgt i32 %106, 0
  br i1 %107, label %108, label %164

108:                                              ; preds = %104
  %109 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %102, i64 0, i32 3
  %110 = trunc i32 %98 to i16
  %111 = zext i32 %106 to i64
  %112 = add nsw i64 %111, -1
  %113 = and i64 %111, 3
  %114 = icmp ult i64 %112, 3
  br i1 %114, label %147, label %115

115:                                              ; preds = %108
  %116 = sub nsw i64 %111, %113
  br label %117

117:                                              ; preds = %117, %115
  %118 = phi i64 [ 0, %115 ], [ %144, %117 ]
  %119 = phi i16* [ %99, %115 ], [ %143, %117 ]
  %120 = phi i64 [ %116, %115 ], [ %145, %117 ]
  %121 = load i16*, i16** %109, align 8
  %122 = getelementptr inbounds i16, i16* %121, i64 %118
  %123 = load i16, i16* %122, align 2
  %124 = add i16 %123, %110
  %125 = getelementptr inbounds i16, i16* %119, i64 1
  store i16 %124, i16* %119, align 2
  %126 = or i64 %118, 1
  %127 = load i16*, i16** %109, align 8
  %128 = getelementptr inbounds i16, i16* %127, i64 %126
  %129 = load i16, i16* %128, align 2
  %130 = add i16 %129, %110
  %131 = getelementptr inbounds i16, i16* %119, i64 2
  store i16 %130, i16* %125, align 2
  %132 = or i64 %118, 2
  %133 = load i16*, i16** %109, align 8
  %134 = getelementptr inbounds i16, i16* %133, i64 %132
  %135 = load i16, i16* %134, align 2
  %136 = add i16 %135, %110
  %137 = getelementptr inbounds i16, i16* %119, i64 3
  store i16 %136, i16* %131, align 2
  %138 = or i64 %118, 3
  %139 = load i16*, i16** %109, align 8
  %140 = getelementptr inbounds i16, i16* %139, i64 %138
  %141 = load i16, i16* %140, align 2
  %142 = add i16 %141, %110
  %143 = getelementptr inbounds i16, i16* %119, i64 4
  store i16 %142, i16* %137, align 2
  %144 = add nuw nsw i64 %118, 4
  %145 = add i64 %120, -4
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %147, label %117

147:                                              ; preds = %117, %108
  %148 = phi i16* [ undef, %108 ], [ %143, %117 ]
  %149 = phi i64 [ 0, %108 ], [ %144, %117 ]
  %150 = phi i16* [ %99, %108 ], [ %143, %117 ]
  %151 = icmp eq i64 %113, 0
  br i1 %151, label %164, label %152

152:                                              ; preds = %147, %152
  %153 = phi i64 [ %161, %152 ], [ %149, %147 ]
  %154 = phi i16* [ %160, %152 ], [ %150, %147 ]
  %155 = phi i64 [ %162, %152 ], [ %113, %147 ]
  %156 = load i16*, i16** %109, align 8
  %157 = getelementptr inbounds i16, i16* %156, i64 %153
  %158 = load i16, i16* %157, align 2
  %159 = add i16 %158, %110
  %160 = getelementptr inbounds i16, i16* %154, i64 1
  store i16 %159, i16* %154, align 2
  %161 = add nuw nsw i64 %153, 1
  %162 = add i64 %155, -1
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %164, label %152, !llvm.loop !4

164:                                              ; preds = %147, %152, %104, %96
  %165 = phi i16* [ null, %96 ], [ %99, %104 ], [ %148, %147 ], [ %160, %152 ]
  %166 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %102, i64 0, i32 7
  %167 = load i32, i32* %166, align 8
  %168 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %102, i64 0, i32 2
  %169 = load %struct.SkPoint*, %struct.SkPoint** %168, align 8
  %170 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %102, i64 0, i32 5
  %171 = load i32*, i32** %170, align 8
  %172 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %102, i64 0, i32 4
  %173 = load %struct.SkPoint*, %struct.SkPoint** %172, align 8
  %174 = icmp eq %struct.SkPoint* %173, null
  %175 = select i1 %174, %struct.SkPoint* %169, %struct.SkPoint* %173
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %72)
  %176 = getelementptr inbounds %"struct.(anonymous namespace)::DrawVerticesOp::Mesh", %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"* %97, i64 0, i32 0
  %177 = call i32 @_ZNK8SkRGBA4fIL11SkAlphaType2EE12toBytes_RGBAEv(%struct.SkRGBA4f* %176) #13
  store i32 %177, i32* %7, align 4
  %178 = bitcast i8* %100 to %struct.SkPoint*
  %179 = icmp sgt i32 %167, 0
  br i1 %179, label %180, label %183

180:                                              ; preds = %164
  %181 = getelementptr inbounds %"struct.(anonymous namespace)::DrawVerticesOp::Mesh", %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"* %97, i64 0, i32 3
  %182 = zext i32 %167 to i64
  br label %187

183:                                              ; preds = %218, %164
  %184 = phi i8* [ %100, %164 ], [ %219, %218 ]
  %185 = load i8, i8* %73, align 4, !range !2
  %186 = icmp eq i8 %185, 0
  br i1 %186, label %236, label %222

187:                                              ; preds = %218, %180
  %188 = phi i64 [ 0, %180 ], [ %220, %218 ]
  %189 = phi i8* [ %100, %180 ], [ %219, %218 ]
  %190 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %169, i64 %188
  %191 = bitcast i8* %189 to i64*
  %192 = bitcast %struct.SkPoint* %190 to i64*
  %193 = load i64, i64* %192, align 4
  store i64 %193, i64* %191, align 1
  %194 = getelementptr inbounds i8, i8* %189, i64 8
  br i1 %57, label %210, label %195

195:                                              ; preds = %187
  %196 = load %class.SkVertices*, %class.SkVertices** %101, align 8
  %197 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %196, i64 0, i32 5
  %198 = load i32*, i32** %197, align 8
  %199 = icmp eq i32* %198, null
  br i1 %199, label %205, label %200

200:                                              ; preds = %195
  %201 = load i8, i8* %181, align 8, !range !2
  %202 = icmp eq i8 %201, 0
  %203 = getelementptr inbounds i32, i32* %171, i64 %188
  %204 = select i1 %202, i32* %203, i32* %7
  br label %205

205:                                              ; preds = %200, %195
  %206 = phi i32* [ %7, %195 ], [ %204, %200 ]
  %207 = bitcast i8* %194 to i32*
  %208 = load i32, i32* %206, align 4
  store i32 %208, i32* %207, align 1
  %209 = getelementptr inbounds i8, i8* %189, i64 12
  br label %210

210:                                              ; preds = %187, %205
  %211 = phi i8* [ %209, %205 ], [ %194, %187 ]
  br i1 %59, label %212, label %218

212:                                              ; preds = %210
  %213 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %175, i64 %188
  %214 = bitcast i8* %211 to i64*
  %215 = bitcast %struct.SkPoint* %213 to i64*
  %216 = load i64, i64* %215, align 4
  store i64 %216, i64* %214, align 1
  %217 = getelementptr inbounds i8, i8* %211, i64 8
  br label %218

218:                                              ; preds = %210, %212
  %219 = phi i8* [ %217, %212 ], [ %211, %210 ]
  %220 = add nuw nsw i64 %188, 1
  %221 = icmp eq i64 %220, %182
  br i1 %221, label %183, label %187

222:                                              ; preds = %183
  %223 = getelementptr inbounds %"struct.(anonymous namespace)::DrawVerticesOp::Mesh", %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"* %97, i64 0, i32 2
  br i1 %179, label %224, label %236

224:                                              ; preds = %222, %224
  %225 = phi i32 [ %234, %224 ], [ 0, %222 ]
  %226 = phi %struct.SkPoint* [ %233, %224 ], [ %178, %222 ]
  %227 = phi %struct.SkPoint* [ %230, %224 ], [ %169, %222 ]
  call void @_ZNK8SkMatrix9mapPointsEP7SkPointPKS0_i(%class.SkMatrix* %223, %struct.SkPoint* %226, %struct.SkPoint* %227, i32 1) #13
  %228 = ptrtoint %struct.SkPoint* %227 to i64
  %229 = add i64 %228, 8
  %230 = inttoptr i64 %229 to %struct.SkPoint*
  %231 = ptrtoint %struct.SkPoint* %226 to i64
  %232 = add i64 %16, %231
  %233 = inttoptr i64 %232 to %struct.SkPoint*
  %234 = add nuw nsw i32 %225, 1
  %235 = icmp eq i32 %234, %167
  br i1 %235, label %236, label %224

236:                                              ; preds = %224, %222, %183
  %237 = add nsw i32 %167, %98
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %72)
  %238 = getelementptr inbounds %"struct.(anonymous namespace)::DrawVerticesOp::Mesh", %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"* %97, i64 1
  %239 = icmp eq %"struct.(anonymous namespace)::DrawVerticesOp::Mesh"* %238, %69
  br i1 %239, label %74, label %96

240:                                              ; preds = %74
  %241 = bitcast %class.sk_sp.106* %5 to i64*
  %242 = load i64, i64* %241, align 8
  store %class.GrBuffer* null, %class.GrBuffer** %31, align 8
  %243 = getelementptr inbounds %"class.(anonymous namespace)::DrawVerticesOp", %"class.(anonymous namespace)::DrawVerticesOp"* %0, i64 0, i32 5
  %244 = load i32, i32* %243, align 8
  %245 = load i32, i32* %6, align 4
  %246 = load i32, i32* %20, align 4
  %247 = trunc i32 %246 to i16
  %248 = add i16 %247, -1
  %249 = bitcast %class.sk_sp.106* %3 to i64*
  %250 = load i64, i64* %249, align 8
  store %class.GrBuffer* null, %class.GrBuffer** %18, align 8
  %251 = load i32, i32* %4, align 4
  %252 = bitcast i8* %80 to %class.GrBuffer**
  %253 = load %class.GrBuffer*, %class.GrBuffer** %252, align 8
  %254 = bitcast i8* %80 to i64*
  store i64 %242, i64* %254, align 8
  %255 = icmp eq %class.GrBuffer* %253, null
  br i1 %255, label %261, label %256

256:                                              ; preds = %240
  %257 = bitcast %class.GrBuffer* %253 to void (%class.GrBuffer*)***
  %258 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %257, align 8
  %259 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %258, i64 3
  %260 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %259, align 8
  call void %260(%class.GrBuffer* nonnull %253) #13
  br label %261

261:                                              ; preds = %256, %240
  %262 = getelementptr inbounds i8, i8* %80, i64 8
  %263 = bitcast i8* %262 to i32*
  store i32 %244, i32* %263, align 8
  %264 = getelementptr inbounds i8, i8* %80, i64 12
  %265 = bitcast i8* %264 to i32*
  store i32 0, i32* %265, align 4
  %266 = getelementptr inbounds i8, i8* %80, i64 20
  %267 = bitcast i8* %266 to i32*
  store i32 %245, i32* %267, align 4
  %268 = getelementptr inbounds i8, i8* %80, i64 24
  %269 = bitcast i8* %268 to i16*
  store i16 0, i16* %269, align 8
  %270 = getelementptr inbounds i8, i8* %80, i64 26
  %271 = bitcast i8* %270 to i16*
  store i16 %248, i16* %271, align 2
  %272 = getelementptr inbounds i8, i8* %80, i64 28
  store i8 0, i8* %272, align 4
  %273 = getelementptr inbounds i8, i8* %80, i64 32
  %274 = bitcast i8* %273 to %class.GrBuffer**
  %275 = load %class.GrBuffer*, %class.GrBuffer** %274, align 8
  %276 = bitcast i8* %273 to i64*
  store i64 %250, i64* %276, align 8
  %277 = icmp eq %class.GrBuffer* %275, null
  br i1 %277, label %283, label %278

278:                                              ; preds = %261
  %279 = bitcast %class.GrBuffer* %275 to void (%class.GrBuffer*)***
  %280 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %279, align 8
  %281 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %280, i64 3
  %282 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %281, align 8
  call void %282(%class.GrBuffer* nonnull %275) #13
  br label %283

283:                                              ; preds = %261, %278
  %284 = getelementptr inbounds i8, i8* %80, i64 44
  %285 = bitcast i8* %284 to i32*
  store i32 %251, i32* %285, align 4
  br label %315

286:                                              ; preds = %74
  %287 = bitcast %class.sk_sp.106* %3 to i64*
  %288 = load i64, i64* %287, align 8
  store %class.GrBuffer* null, %class.GrBuffer** %18, align 8
  %289 = load i32, i32* %20, align 4
  %290 = load i32, i32* %4, align 4
  %291 = bitcast i8* %80 to %class.GrBuffer**
  %292 = load %class.GrBuffer*, %class.GrBuffer** %291, align 8
  store %class.GrBuffer* null, %class.GrBuffer** %291, align 8
  %293 = icmp eq %class.GrBuffer* %292, null
  br i1 %293, label %299, label %294

294:                                              ; preds = %286
  %295 = bitcast %class.GrBuffer* %292 to void (%class.GrBuffer*)***
  %296 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %295, align 8
  %297 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %296, i64 3
  %298 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %297, align 8
  call void %298(%class.GrBuffer* nonnull %292) #13
  br label %299

299:                                              ; preds = %294, %286
  %300 = getelementptr inbounds i8, i8* %80, i64 32
  %301 = bitcast i8* %300 to %class.GrBuffer**
  %302 = load %class.GrBuffer*, %class.GrBuffer** %301, align 8
  %303 = bitcast i8* %300 to i64*
  store i64 %288, i64* %303, align 8
  %304 = icmp eq %class.GrBuffer* %302, null
  br i1 %304, label %310, label %305

305:                                              ; preds = %299
  %306 = bitcast %class.GrBuffer* %302 to void (%class.GrBuffer*)***
  %307 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %306, align 8
  %308 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %307, i64 3
  %309 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %308, align 8
  call void %309(%class.GrBuffer* nonnull %302) #13
  br label %310

310:                                              ; preds = %305, %299
  %311 = getelementptr inbounds i8, i8* %80, i64 40
  %312 = bitcast i8* %311 to i32*
  store i32 %289, i32* %312, align 8
  %313 = getelementptr inbounds i8, i8* %80, i64 44
  %314 = bitcast i8* %313 to i32*
  store i32 %290, i32* %314, align 4
  br label %315

315:                                              ; preds = %283, %310, %52
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32) #13
  %316 = load %class.GrBuffer*, %class.GrBuffer** %31, align 8
  %317 = icmp eq %class.GrBuffer* %316, null
  br i1 %317, label %323, label %318

318:                                              ; preds = %315
  %319 = bitcast %class.GrBuffer* %316 to void (%class.GrBuffer*)***
  %320 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %319, align 8
  %321 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %320, i64 3
  %322 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %321, align 8
  call void %322(%class.GrBuffer* nonnull %316) #13
  br label %323

323:                                              ; preds = %315, %318
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #13
  br label %324

324:                                              ; preds = %323, %28
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #13
  %325 = load %class.GrBuffer*, %class.GrBuffer** %18, align 8
  %326 = icmp eq %class.GrBuffer* %325, null
  br i1 %326, label %332, label %327

327:                                              ; preds = %324
  %328 = bitcast %class.GrBuffer* %325 to void (%class.GrBuffer*)***
  %329 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %328, align 8
  %330 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %329, i64 3
  %331 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %330, align 8
  call void %331(%class.GrBuffer* nonnull %325) #13
  br label %332

332:                                              ; preds = %324, %327
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #8

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #8

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN8SkTArrayIN12_GLOBAL__N_114DrawVerticesOp4MeshELb1EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.105* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkTArray.105, %class.SkTArray.105* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = lshr i64 %4, 1
  %6 = trunc i64 %5 to i32
  %7 = and i32 %6, 2147483647
  %8 = add nsw i32 %7, %1
  %9 = sext i32 %8 to i64
  %10 = lshr i64 %4, 33
  %11 = icmp slt i64 %10, %9
  %12 = mul nsw i64 %9, 3
  %13 = icmp sle i64 %10, %12
  %14 = and i64 %4, 1
  %15 = icmp eq i64 %14, 0
  %16 = or i1 %15, %13
  br i1 %16, label %20, label %17

17:                                               ; preds = %2
  %18 = and i64 %4, 4294967296
  %19 = icmp eq i64 %18, 0
  br label %20

20:                                               ; preds = %2, %17
  %21 = phi i1 [ false, %2 ], [ %19, %17 ]
  %22 = or i1 %11, %21
  br i1 %22, label %23, label %61

23:                                               ; preds = %20
  %24 = add nsw i64 %9, 1
  %25 = ashr i64 %24, 1
  %26 = add nsw i64 %9, 7
  %27 = add nsw i64 %26, %25
  %28 = and i64 %27, -8
  %29 = icmp eq i64 %28, %10
  br i1 %29, label %61, label %30

30:                                               ; preds = %23
  %31 = icmp slt i64 %28, 2147483647
  %32 = select i1 %31, i64 %28, i64 2147483647
  %33 = icmp sgt i64 %32, -2147483647
  %34 = select i1 %33, i64 %32, i64 -2147483647
  %35 = shl i64 %34, 33
  %36 = and i64 %4, 8589934591
  %37 = or i64 %35, %36
  store i64 %37, i64* %3, align 8
  %38 = and i64 %34, 2147483647
  %39 = tail call i8* @_Z15sk_malloc_throwmm(i64 %38, i64 72) #13
  %40 = load i64, i64* %3, align 8
  %41 = lshr i64 %40, 1
  %42 = and i64 %41, 2147483647
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %49, label %44

44:                                               ; preds = %30
  %45 = mul nuw nsw i64 %42, 72
  %46 = bitcast %class.SkTArray.105* %0 to i8**
  %47 = load i8*, i8** %46, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %39, i8* align 1 %47, i64 %45, i1 false) #13
  %48 = load i64, i64* %3, align 8
  br label %49

49:                                               ; preds = %30, %44
  %50 = phi i64 [ %40, %30 ], [ %48, %44 ]
  %51 = and i64 %50, 1
  %52 = icmp eq i64 %51, 0
  %53 = bitcast %class.SkTArray.105* %0 to i8**
  br i1 %52, label %57, label %54

54:                                               ; preds = %49
  %55 = load i8*, i8** %53, align 8
  tail call void @_Z7sk_freePv(i8* %55) #13
  %56 = load i64, i64* %3, align 8
  br label %57

57:                                               ; preds = %49, %54
  %58 = phi i64 [ %56, %54 ], [ %50, %49 ]
  store i8* %39, i8** %53, align 8
  %59 = and i64 %58, -4294967298
  %60 = or i64 %59, 1
  store i64 %60, i64* %3, align 8
  br label %61

61:                                               ; preds = %57, %23, %20
  ret void
}

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN10SkVerticesdlEPv(i8*) local_unnamed_addr #9

declare zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix*, %struct.SkRect*, %struct.SkRect* dereferenceable(16), i32) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN24GrSimpleMeshDrawOpHelperD1Ev(%class.GrSimpleMeshDrawOpHelper*) unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4GrOpD2Ev(%class.GrOp*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrOp, %class.GrOp* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV4GrOp, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrOp, %class.GrOp* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %class.GrOp*, %class.GrOp** %3, align 8
  store %class.GrOp* null, %class.GrOp** %3, align 8
  %5 = icmp eq %class.GrOp* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %class.GrOp* %4 to void (%class.GrOp*)***
  %8 = load void (%class.GrOp*)**, void (%class.GrOp*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.GrOp*)*, void (%class.GrOp*)** %8, i64 1
  %10 = load void (%class.GrOp*)*, void (%class.GrOp*)** %9, align 8
  tail call void %10(%class.GrOp* nonnull %4) #13
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4GrOpD0Ev(%class.GrOp*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #15
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4GrOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrOp*, %"class.std::__1::function.167"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN4GrOp19onCombineIfPossibleEPS_P12SkArenaAllocRK6GrCaps(%class.GrOp*, %class.GrOp*, %class.SkArenaAlloc*, %class.GrCaps* dereferenceable(232)) unnamed_addr #0 comdat align 2 {
  ret i32 2
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

declare void @_ZNK10GrPipeline12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrPipeline*, %"class.std::__1::function.167"*) local_unnamed_addr #4

declare void @_ZNK14GrProcessorSet12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrProcessorSet*, %"class.std::__1::function.167"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK24GrSimpleMeshDrawOpHelper12isCompatibleERKS_RK6GrCapsRK6SkRectS7_b(%class.GrSimpleMeshDrawOpHelper*, %class.GrSimpleMeshDrawOpHelper* dereferenceable(16), %class.GrCaps* dereferenceable(232), %struct.SkRect* dereferenceable(16), %struct.SkRect* dereferenceable(16), i1 zeroext) local_unnamed_addr #4

declare zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix*) local_unnamed_addr #4

declare void @_ZN12GrMeshDrawOp17createProgramInfoEPNS_6TargetE(%class.GrMeshDrawOp*, %"class.GrMeshDrawOp::Target"*) local_unnamed_addr #4

declare void @_ZN14GrOpFlushState8drawMeshERK12GrSimpleMesh(%class.GrOpFlushState*, %struct.GrSimpleMesh* dereferenceable(48)) local_unnamed_addr #4

declare void @_ZN15GrOpsRenderPass12bindPipelineERK13GrProgramInfoRK6SkRect(%class.GrOpsRenderPass*, %class.GrProgramInfo* dereferenceable(128), %struct.SkRect* dereferenceable(16)) local_unnamed_addr #4

declare void @_ZN15GrOpsRenderPass14setScissorRectERK7SkIRect(%class.GrOpsRenderPass*, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #4

declare void @_ZN15GrOpsRenderPass12bindTexturesERK19GrGeometryProcessorPKPK14GrSurfaceProxyRK10GrPipeline(%class.GrOpsRenderPass*, %class.GrGeometryProcessor* dereferenceable(80), %class.GrSurfaceProxy**, %class.GrPipeline* dereferenceable(128)) local_unnamed_addr #4

declare i32 @_ZNK24GrSimpleMeshDrawOpHelper18fixedFunctionFlagsEv(%class.GrSimpleMeshDrawOpHelper*) local_unnamed_addr #4

declare i32 @_ZN24GrSimpleMeshDrawOpHelper18finalizeProcessorsERK6GrCapsPK13GrAppliedClipPK21GrUserStencilSettings11GrClampType27GrProcessorAnalysisCoverageP24GrProcessorAnalysisColor(%class.GrSimpleMeshDrawOpHelper*, %class.GrCaps* dereferenceable(232), %class.GrAppliedClip*, %struct.GrUserStencilSettings*, i32, i32, %class.GrProcessorAnalysisColor*) local_unnamed_addr #4

declare %class.GrProgramInfo* @_ZN24GrSimpleMeshDrawOpHelper17createProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewEP19GrGeometryProcessor15GrPrimitiveType18GrXferBarrierFlags8GrLoadOp(%class.GrSimpleMeshDrawOpHelper*, %class.GrCaps*, %class.SkArenaAlloc*, %class.GrSurfaceProxyView* dereferenceable(16), %class.GrAppliedClip* dereferenceable(72), %"class.GrXferProcessor::DstProxyView"* dereferenceable(32), %class.GrGeometryProcessor*, i8 zeroext, i32, i32) local_unnamed_addr #4

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() local_unnamed_addr #4

declare i8* @_ZN12SkArenaAlloc21allocObjectWithFooterEjj(%class.SkArenaAlloc*, i32, i32) local_unnamed_addr #4

declare void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc*, i8* (i8*)*, i32) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define internal i8* @_ZZN12SkArenaAlloc4makeIZN12_GLOBAL__N_110VerticesGP4MakeEPS_NS1_15LocalCoordsTypeENS1_14ColorArrayTypeERK8SkRGBA4fIL11SkAlphaType2EE5sk_spI17GrColorSpaceXformERK8SkMatrixEUlPvE_EEDTclfp_LDnEEEOT_ENUlPcE_8__invokeESM_(i8*) #5 align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -185
  %3 = bitcast i8* %2 to %"class.(anonymous namespace)::VerticesGP"*
  %4 = bitcast i8* %2 to void (%"class.(anonymous namespace)::VerticesGP"*)***
  %5 = load void (%"class.(anonymous namespace)::VerticesGP"*)**, void (%"class.(anonymous namespace)::VerticesGP"*)*** %4, align 8
  %6 = load void (%"class.(anonymous namespace)::VerticesGP"*)*, void (%"class.(anonymous namespace)::VerticesGP"*)** %5, align 8
  tail call void %6(%"class.(anonymous namespace)::VerticesGP"* %3) #13
  ret i8* %2
}

declare void @_ZN19GrGeometryProcessorC2EN11GrProcessor7ClassIDE(%class.GrGeometryProcessor*, i32) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_110VerticesGPD2Ev(%"class.(anonymous namespace)::VerticesGP"* nocapture) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::VerticesGP", %"class.(anonymous namespace)::VerticesGP"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN12_GLOBAL__N_110VerticesGPE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::VerticesGP", %"class.(anonymous namespace)::VerticesGP"* %0, i64 0, i32 5, i32 0
  %4 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %3, align 8
  %5 = icmp eq %class.GrColorSpaceXform* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.GrColorSpaceXform* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.GrColorSpaceXform* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #13
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = getelementptr inbounds %"class.(anonymous namespace)::VerticesGP", %"class.(anonymous namespace)::VerticesGP"* %0, i64 0, i32 1, i32 0, i32 0
  %18 = load %"class.GrGeometryProcessor::Attribute"*, %"class.GrGeometryProcessor::Attribute"** %17, align 8
  %19 = icmp eq %"class.GrGeometryProcessor::Attribute"* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %16
  %21 = ptrtoint %"class.GrGeometryProcessor::Attribute"* %18 to i64
  %22 = getelementptr inbounds %"class.(anonymous namespace)::VerticesGP", %"class.(anonymous namespace)::VerticesGP"* %0, i64 0, i32 1, i32 0, i32 1
  %23 = bitcast %"class.GrGeometryProcessor::Attribute"** %22 to i64*
  store i64 %21, i64* %23, align 8
  %24 = bitcast %"class.GrGeometryProcessor::Attribute"* %18 to i8*
  tail call void @_ZdlPv(i8* %24) #16
  br label %25

25:                                               ; preds = %16, %20
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_110VerticesGPD0Ev(%"class.(anonymous namespace)::VerticesGP"*) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::VerticesGP", %"class.(anonymous namespace)::VerticesGP"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN12_GLOBAL__N_110VerticesGPE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::VerticesGP", %"class.(anonymous namespace)::VerticesGP"* %0, i64 0, i32 5, i32 0
  %4 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %3, align 8
  %5 = icmp eq %class.GrColorSpaceXform* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.GrColorSpaceXform* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.GrColorSpaceXform* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #13
  br label %16

16:                                               ; preds = %10, %6, %1
  %17 = getelementptr inbounds %"class.(anonymous namespace)::VerticesGP", %"class.(anonymous namespace)::VerticesGP"* %0, i64 0, i32 1, i32 0, i32 0
  %18 = load %"class.GrGeometryProcessor::Attribute"*, %"class.GrGeometryProcessor::Attribute"** %17, align 8
  %19 = icmp eq %"class.GrGeometryProcessor::Attribute"* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %16
  %21 = ptrtoint %"class.GrGeometryProcessor::Attribute"* %18 to i64
  %22 = getelementptr inbounds %"class.(anonymous namespace)::VerticesGP", %"class.(anonymous namespace)::VerticesGP"* %0, i64 0, i32 1, i32 0, i32 1
  %23 = bitcast %"class.GrGeometryProcessor::Attribute"** %22 to i64*
  store i64 %21, i64* %23, align 8
  %24 = bitcast %"class.GrGeometryProcessor::Attribute"* %18 to i8*
  tail call void @_ZdlPv(i8* %24) #16
  br label %25

25:                                               ; preds = %16, %20
  %26 = bitcast %"class.(anonymous namespace)::VerticesGP"* %0 to i8*
  tail call void @_ZN11GrProcessordlEPv(i8* %26) #13
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i8* @_ZNK12_GLOBAL__N_110VerticesGP4nameEv(%"class.(anonymous namespace)::VerticesGP"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_110VerticesGP19getGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder(%"class.(anonymous namespace)::VerticesGP"*, %class.GrShaderCaps* nocapture readonly dereferenceable(144), %class.GrProcessorKeyBuilder*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.(anonymous namespace)::VerticesGP", %"class.(anonymous namespace)::VerticesGP"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 2
  %7 = zext i1 %6 to i32
  %8 = getelementptr inbounds %"class.(anonymous namespace)::VerticesGP", %"class.(anonymous namespace)::VerticesGP"* %0, i64 0, i32 4
  %9 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %1, i64 0, i32 2
  %10 = bitcast i56* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = and i64 %11, 1048576
  %13 = icmp eq i64 %12, 0
  %14 = getelementptr inbounds %"class.(anonymous namespace)::VerticesGP", %"class.(anonymous namespace)::VerticesGP"* %0, i64 0, i32 4, i32 1
  %15 = load i32, i32* %14, align 4
  br i1 %13, label %16, label %36

16:                                               ; preds = %3
  %17 = trunc i32 %15 to i8
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %16
  %20 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %8) #13
  %21 = zext i8 %20 to i32
  store i32 %21, i32* %14, align 4
  br label %22

22:                                               ; preds = %19, %16
  %23 = phi i32 [ %21, %19 ], [ %15, %16 ]
  %24 = and i32 %23, 15
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %48, label %26

26:                                               ; preds = %22
  %27 = trunc i32 %23 to i8
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %26
  %30 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %8) #13
  %31 = zext i8 %30 to i32
  store i32 %31, i32* %14, align 4
  br label %32

32:                                               ; preds = %29, %26
  %33 = phi i32 [ %31, %29 ], [ %23, %26 ]
  %34 = and i32 %33, 12
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %48, label %36

36:                                               ; preds = %32, %3
  %37 = phi i32 [ %33, %32 ], [ %15, %3 ]
  %38 = and i32 %37, 192
  %39 = icmp eq i32 %38, 128
  br i1 %39, label %40, label %43

40:                                               ; preds = %36
  %41 = tail call zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix* %8) #13
  %42 = zext i8 %41 to i32
  store i32 %42, i32* %14, align 4
  br label %43

43:                                               ; preds = %40, %36
  %44 = phi i32 [ %42, %40 ], [ %37, %36 ]
  %45 = and i32 %44, 8
  %46 = icmp eq i32 %45, 0
  %47 = select i1 %46, i32 2097152, i32 3145728
  br label %48

48:                                               ; preds = %22, %32, %43
  %49 = phi i32 [ 0, %22 ], [ 1048576, %32 ], [ %47, %43 ]
  %50 = or i32 %49, %7
  %51 = bitcast %class.GrProcessorKeyBuilder* %2 to void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)***
  %52 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %51, align 8
  %53 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %52, i64 2
  %54 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %53, align 8
  tail call void %54(%class.GrProcessorKeyBuilder* %2, i32 32, i32 %50, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0)) #13
  %55 = getelementptr inbounds %"class.(anonymous namespace)::VerticesGP", %"class.(anonymous namespace)::VerticesGP"* %0, i64 0, i32 5, i32 0
  %56 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %55, align 8
  %57 = tail call i32 @_ZN17GrColorSpaceXform8XformKeyEPKS_(%class.GrColorSpaceXform* %56) #13
  %58 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %51, align 8
  %59 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %58, i64 2
  %60 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %59, align 8
  tail call void %60(%class.GrProcessorKeyBuilder* %2, i32 32, i32 %57, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0)) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull %class.GrGLSLGeometryProcessor* @_ZNK12_GLOBAL__N_110VerticesGP18createGLSLInstanceERK12GrShaderCaps(%"class.(anonymous namespace)::VerticesGP"* nocapture readnone, %class.GrShaderCaps* nocapture readnone dereferenceable(144)) unnamed_addr #0 align 2 {
  %3 = tail call i8* @_Znwm(i64 120) #16
  %4 = bitcast i8* %3 to i32 (...)***
  %5 = getelementptr inbounds i8, i8* %3, i64 16
  %6 = bitcast i8* %5 to i64*
  %7 = getelementptr inbounds i8, i8* %3, i64 8
  %8 = bitcast i8* %7 to %"struct.GrGLSLGeometryProcessor::TransformInfo"**
  store %"struct.GrGLSLGeometryProcessor::TransformInfo"* null, %"struct.GrGLSLGeometryProcessor::TransformInfo"** %8, align 8
  store i64 1, i64* %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN12_GLOBAL__N_110VerticesGP13GLSLProcessorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %9 = getelementptr inbounds i8, i8* %3, i64 24
  %10 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13InvalidMatrixEv() #13
  %11 = bitcast %class.SkMatrix* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 4 %11, i64 40, i1 false) #13
  %12 = getelementptr inbounds i8, i8* %3, i64 64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 4 bitcast (%struct.SkRGBA4f* @_ZL19SK_PMColor4fILLEGAL to i8*), i64 16, i1 false) #13
  %13 = getelementptr inbounds i8, i8* %3, i64 80
  %14 = getelementptr inbounds i8, i8* %3, i64 100
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %13, i8 -1, i64 20, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %14, i8 0, i64 5, i1 false) #13
  %15 = bitcast i8* %3 to %class.GrGLSLGeometryProcessor*
  ret %class.GrGLSLGeometryProcessor* %15
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(96) %"class.GrGeometryProcessor::TextureSampler"* @_ZNK19GrGeometryProcessor16onTextureSamplerEi(%class.GrGeometryProcessor*, i32) unnamed_addr #0 comdat align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.9, i64 0, i64 0), i32 304, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.28, i64 0, i64 0)) #15
  unreachable
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #2

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #12

; Function Attrs: nounwind
declare void @_ZN11GrProcessordlEPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN17GrColorSpaceXform8XformKeyEPKS_(%class.GrColorSpaceXform*) local_unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.GrColorSpaceXform* %0, null
  br i1 %2, label %133, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load i8, i8* %4, align 1, !range !2
  %6 = zext i8 %5 to i32
  %7 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %0, i64 0, i32 1, i32 0, i32 1
  %8 = load i8, i8* %7, align 1, !range !2
  %9 = icmp eq i8 %8, 0
  %10 = select i1 %9, i32 0, i32 2
  %11 = or i32 %10, %6
  %12 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %0, i64 0, i32 1, i32 0, i32 2
  %13 = load i8, i8* %12, align 1, !range !2
  %14 = icmp eq i8 %13, 0
  %15 = select i1 %14, i32 0, i32 4
  %16 = or i32 %11, %15
  %17 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %0, i64 0, i32 1, i32 0, i32 3
  %18 = load i8, i8* %17, align 1, !range !2
  %19 = icmp eq i8 %18, 0
  %20 = select i1 %19, i32 0, i32 8
  %21 = or i32 %16, %20
  %22 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %0, i64 0, i32 1, i32 0, i32 4
  %23 = load i8, i8* %22, align 1, !range !2
  %24 = icmp eq i8 %23, 0
  %25 = select i1 %24, i32 0, i32 16
  %26 = or i32 %21, %25
  br i1 %9, label %79, label %27

27:                                               ; preds = %3
  %28 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %0, i64 0, i32 1, i32 1, i32 0
  %29 = load float, float* %28, align 4
  %30 = fcmp olt float %29, 0.000000e+00
  br i1 %30, label %31, label %38

31:                                               ; preds = %27
  %32 = fptosi float %29 to i32
  %33 = sitofp i32 %32 to float
  %34 = fcmp oeq float %29, %33
  br i1 %34, label %35, label %38

35:                                               ; preds = %31
  %36 = add i32 %32, 4
  %37 = icmp ult i32 %36, 3
  br i1 %37, label %73, label %76

38:                                               ; preds = %31, %27
  %39 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %0, i64 0, i32 1, i32 1, i32 1
  %40 = load float, float* %39, align 4
  %41 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %0, i64 0, i32 1, i32 1, i32 2
  %42 = load float, float* %41, align 4
  %43 = fadd float %40, %42
  %44 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %0, i64 0, i32 1, i32 1, i32 3
  %45 = load float, float* %44, align 4
  %46 = fadd float %43, %45
  %47 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %0, i64 0, i32 1, i32 1, i32 4
  %48 = load float, float* %47, align 4
  %49 = fadd float %46, %48
  %50 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %0, i64 0, i32 1, i32 1, i32 5
  %51 = load float, float* %50, align 4
  %52 = fadd float %49, %51
  %53 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %0, i64 0, i32 1, i32 1, i32 6
  %54 = load float, float* %53, align 4
  %55 = fadd float %52, %54
  %56 = fadd float %29, %55
  %57 = bitcast float %56 to i32
  %58 = and i32 %57, 2139095040
  %59 = icmp eq i32 %58, 2139095040
  br i1 %59, label %72, label %60

60:                                               ; preds = %38
  %61 = fcmp ult float %40, 0.000000e+00
  %62 = fcmp ult float %45, 0.000000e+00
  %63 = or i1 %61, %62
  br i1 %63, label %72, label %64

64:                                               ; preds = %60
  %65 = fcmp ult float %48, 0.000000e+00
  %66 = fcmp ult float %29, 0.000000e+00
  %67 = or i1 %66, %65
  br i1 %67, label %72, label %68

68:                                               ; preds = %64
  %69 = fmul float %40, %48
  %70 = fadd float %42, %69
  %71 = fcmp ult float %70, 0.000000e+00
  br i1 %71, label %72, label %76

72:                                               ; preds = %68, %64, %60, %38
  br label %76

73:                                               ; preds = %35
  %74 = mul i32 %36, -256
  %75 = add i32 %74, 1024
  br label %76

76:                                               ; preds = %35, %73, %68, %72
  %77 = phi i32 [ 0, %72 ], [ 256, %68 ], [ %75, %73 ], [ 0, %35 ]
  %78 = or i32 %77, %26
  br label %79

79:                                               ; preds = %3, %76
  %80 = phi i32 [ %78, %76 ], [ %26, %3 ]
  br i1 %19, label %133, label %81

81:                                               ; preds = %79
  %82 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %0, i64 0, i32 1, i32 2, i32 0
  %83 = load float, float* %82, align 4
  %84 = fcmp olt float %83, 0.000000e+00
  br i1 %84, label %85, label %92

85:                                               ; preds = %81
  %86 = fptosi float %83 to i32
  %87 = sitofp i32 %86 to float
  %88 = fcmp oeq float %83, %87
  br i1 %88, label %89, label %92

89:                                               ; preds = %85
  %90 = add i32 %86, 4
  %91 = icmp ult i32 %90, 3
  br i1 %91, label %127, label %130

92:                                               ; preds = %85, %81
  %93 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %0, i64 0, i32 1, i32 2, i32 1
  %94 = load float, float* %93, align 4
  %95 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %0, i64 0, i32 1, i32 2, i32 2
  %96 = load float, float* %95, align 4
  %97 = fadd float %94, %96
  %98 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %0, i64 0, i32 1, i32 2, i32 3
  %99 = load float, float* %98, align 4
  %100 = fadd float %97, %99
  %101 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %0, i64 0, i32 1, i32 2, i32 4
  %102 = load float, float* %101, align 4
  %103 = fadd float %100, %102
  %104 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %0, i64 0, i32 1, i32 2, i32 5
  %105 = load float, float* %104, align 4
  %106 = fadd float %103, %105
  %107 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %0, i64 0, i32 1, i32 2, i32 6
  %108 = load float, float* %107, align 4
  %109 = fadd float %106, %108
  %110 = fadd float %83, %109
  %111 = bitcast float %110 to i32
  %112 = and i32 %111, 2139095040
  %113 = icmp eq i32 %112, 2139095040
  br i1 %113, label %126, label %114

114:                                              ; preds = %92
  %115 = fcmp ult float %94, 0.000000e+00
  %116 = fcmp ult float %99, 0.000000e+00
  %117 = or i1 %115, %116
  br i1 %117, label %126, label %118

118:                                              ; preds = %114
  %119 = fcmp ult float %102, 0.000000e+00
  %120 = fcmp ult float %83, 0.000000e+00
  %121 = or i1 %120, %119
  br i1 %121, label %126, label %122

122:                                              ; preds = %118
  %123 = fmul float %94, %102
  %124 = fadd float %96, %123
  %125 = fcmp ult float %124, 0.000000e+00
  br i1 %125, label %126, label %130

126:                                              ; preds = %122, %118, %114, %92
  br label %130

127:                                              ; preds = %89
  %128 = mul i32 %90, -65536
  %129 = add i32 %128, 262144
  br label %130

130:                                              ; preds = %89, %127, %122, %126
  %131 = phi i32 [ 0, %126 ], [ 65536, %122 ], [ %129, %127 ], [ 0, %89 ]
  %132 = or i32 %131, %80
  br label %133

133:                                              ; preds = %130, %79, %1
  %134 = phi i32 [ 0, %1 ], [ %132, %130 ], [ %80, %79 ]
  ret i32 %134
}

declare zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix*) local_unnamed_addr #4

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13InvalidMatrixEv() local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLGeometryProcessorD2Ev(%class.GrGLSLGeometryProcessor*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGLSLGeometryProcessor, %class.GrGLSLGeometryProcessor* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV23GrGLSLGeometryProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrGLSLGeometryProcessor, %class.GrGLSLGeometryProcessor* %0, i64 0, i32 1
  %4 = getelementptr inbounds %class.GrGLSLGeometryProcessor, %class.GrGLSLGeometryProcessor* %0, i64 0, i32 1, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 4294967294
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkTArray.199, %class.SkTArray.199* %3, i64 0, i32 0
  br label %14

10:                                               ; preds = %14, %1
  %11 = phi i64 [ %5, %1 ], [ %19, %14 ]
  %12 = and i64 %11, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %26, label %23

14:                                               ; preds = %14, %8
  %15 = phi i64 [ 0, %8 ], [ %18, %14 ]
  %16 = load %"struct.GrGLSLGeometryProcessor::TransformInfo"*, %"struct.GrGLSLGeometryProcessor::TransformInfo"** %9, align 8
  %17 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %16, i64 %15
  tail call void @_ZN23GrGLSLGeometryProcessor13TransformInfoD2Ev(%"struct.GrGLSLGeometryProcessor::TransformInfo"* %17) #13
  %18 = add nuw nsw i64 %15, 1
  %19 = load i64, i64* %4, align 8
  %20 = lshr i64 %19, 1
  %21 = and i64 %20, 2147483647
  %22 = icmp ult i64 %18, %21
  br i1 %22, label %14, label %10

23:                                               ; preds = %10
  %24 = bitcast %class.SkTArray.199* %3 to i8**
  %25 = load i8*, i8** %24, align 8
  tail call void @_Z7sk_freePv(i8* %25) #13
  br label %26

26:                                               ; preds = %10, %23
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_110VerticesGP13GLSLProcessorD0Ev(%"class.(anonymous namespace)::VerticesGP::GLSLProcessor"*) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::VerticesGP::GLSLProcessor", %"class.(anonymous namespace)::VerticesGP::GLSLProcessor"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV23GrGLSLGeometryProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::VerticesGP::GLSLProcessor", %"class.(anonymous namespace)::VerticesGP::GLSLProcessor"* %0, i64 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.(anonymous namespace)::VerticesGP::GLSLProcessor", %"class.(anonymous namespace)::VerticesGP::GLSLProcessor"* %0, i64 0, i32 0, i32 1, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 4294967294
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkTArray.199, %class.SkTArray.199* %3, i64 0, i32 0
  br label %14

10:                                               ; preds = %14, %1
  %11 = phi i64 [ %5, %1 ], [ %24, %14 ]
  %12 = and i64 %11, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %31, label %28

14:                                               ; preds = %14, %8
  %15 = phi i64 [ 0, %8 ], [ %23, %14 ]
  %16 = load %"struct.GrGLSLGeometryProcessor::TransformInfo"*, %"struct.GrGLSLGeometryProcessor::TransformInfo"** %9, align 8
  %17 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %16, i64 %15, i32 1, i32 5
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %17) #13
  %18 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %16, i64 %15, i32 1, i32 4
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %18) #13
  %19 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %16, i64 %15, i32 1, i32 3
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %19) #13
  %20 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %16, i64 %15, i32 0, i32 5
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %20) #13
  %21 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %16, i64 %15, i32 0, i32 4
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %21) #13
  %22 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %16, i64 %15, i32 0, i32 3
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %22) #13
  %23 = add nuw nsw i64 %15, 1
  %24 = load i64, i64* %4, align 8
  %25 = lshr i64 %24, 1
  %26 = and i64 %25, 2147483647
  %27 = icmp ult i64 %23, %26
  br i1 %27, label %14, label %10

28:                                               ; preds = %10
  %29 = bitcast %class.SkTArray.199* %3 to i8**
  %30 = load i8*, i8** %29, align 8
  tail call void @_Z7sk_freePv(i8* %30) #13
  br label %31

31:                                               ; preds = %10, %28
  %32 = bitcast %"class.(anonymous namespace)::VerticesGP::GLSLProcessor"* %0 to i8*
  tail call void @_ZdlPv(i8* %32) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_110VerticesGP13GLSLProcessor7setDataERK24GrGLSLProgramDataManagerRK12GrShaderCapsRK19GrGeometryProcessor(%"class.(anonymous namespace)::VerticesGP::GLSLProcessor"*, %class.GrGLSLProgramDataManager* dereferenceable(8), %class.GrShaderCaps* dereferenceable(144), %class.GrGeometryProcessor* dereferenceable(80)) unnamed_addr #0 align 2 {
  %5 = bitcast %class.GrGeometryProcessor* %3 to %"class.(anonymous namespace)::VerticesGP"*
  %6 = getelementptr inbounds %"class.(anonymous namespace)::VerticesGP::GLSLProcessor", %"class.(anonymous namespace)::VerticesGP::GLSLProcessor"* %0, i64 0, i32 3
  %7 = getelementptr inbounds %"class.(anonymous namespace)::VerticesGP", %"class.(anonymous namespace)::VerticesGP"* %5, i64 0, i32 4
  %8 = getelementptr inbounds %"class.(anonymous namespace)::VerticesGP::GLSLProcessor", %"class.(anonymous namespace)::VerticesGP::GLSLProcessor"* %0, i64 0, i32 1
  tail call void @_ZN23GrGLSLGeometryProcessor12SetTransformERK24GrGLSLProgramDataManagerRK12GrShaderCapsRK16GrResourceHandleINS0_17UniformHandleKindEERK8SkMatrixPSB_(%class.GrGLSLProgramDataManager* dereferenceable(8) %1, %class.GrShaderCaps* dereferenceable(144) %2, %class.GrResourceHandle* dereferenceable(4) %6, %class.SkMatrix* dereferenceable(40) %7, %class.SkMatrix* %8) #13
  %9 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %3, i64 1
  %10 = bitcast %class.GrGeometryProcessor* %9 to %"class.GrGeometryProcessor::Attribute"**
  %11 = load %"class.GrGeometryProcessor::Attribute"*, %"class.GrGeometryProcessor::Attribute"** %10, align 8
  %12 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %11, i64 1, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %54

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.(anonymous namespace)::VerticesGP", %"class.(anonymous namespace)::VerticesGP"* %5, i64 0, i32 3
  %17 = getelementptr inbounds %"class.(anonymous namespace)::VerticesGP::GLSLProcessor", %"class.(anonymous namespace)::VerticesGP::GLSLProcessor"* %0, i64 0, i32 2
  %18 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %3, i64 1, i32 3, i32 3
  %19 = bitcast i64* %18 to float*
  %20 = load float, float* %19, align 4
  %21 = getelementptr inbounds %"class.(anonymous namespace)::VerticesGP::GLSLProcessor", %"class.(anonymous namespace)::VerticesGP::GLSLProcessor"* %0, i64 0, i32 2, i32 3
  %22 = load float, float* %21, align 4
  %23 = fcmp oeq float %20, %22
  br i1 %23, label %24, label %44

24:                                               ; preds = %15
  %25 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %16, i64 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %17, i64 0, i32 0
  %28 = load float, float* %27, align 4
  %29 = fcmp oeq float %26, %28
  br i1 %29, label %30, label %44

30:                                               ; preds = %24
  %31 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %3, i64 1, i32 3, i32 1
  %32 = bitcast i32* %31 to float*
  %33 = load float, float* %32, align 4
  %34 = getelementptr inbounds %"class.(anonymous namespace)::VerticesGP::GLSLProcessor", %"class.(anonymous namespace)::VerticesGP::GLSLProcessor"* %0, i64 0, i32 2, i32 1
  %35 = load float, float* %34, align 4
  %36 = fcmp oeq float %33, %35
  br i1 %36, label %37, label %44

37:                                               ; preds = %30
  %38 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %3, i64 1, i32 3, i32 2
  %39 = bitcast i32* %38 to float*
  %40 = load float, float* %39, align 4
  %41 = getelementptr inbounds %"class.(anonymous namespace)::VerticesGP::GLSLProcessor", %"class.(anonymous namespace)::VerticesGP::GLSLProcessor"* %0, i64 0, i32 2, i32 2
  %42 = load float, float* %41, align 4
  %43 = fcmp une float %40, %42
  br i1 %43, label %44, label %54

44:                                               ; preds = %15, %24, %30, %37
  %45 = getelementptr inbounds %"class.(anonymous namespace)::VerticesGP::GLSLProcessor", %"class.(anonymous namespace)::VerticesGP::GLSLProcessor"* %0, i64 0, i32 4, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %16, i64 0, i32 0
  %48 = bitcast %class.GrGLSLProgramDataManager* %1 to void (%class.GrGLSLProgramDataManager*, i32, i32, float*)***
  %49 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)**, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*** %48, align 8
  %50 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %49, i64 17
  %51 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %50, align 8
  tail call void %51(%class.GrGLSLProgramDataManager* %1, i32 %46, i32 1, float* %47) #13
  %52 = bitcast %struct.SkRGBA4f* %17 to i8*
  %53 = bitcast %struct.SkRGBA4f* %16 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 4 %53, i64 16, i1 false)
  br label %54

54:                                               ; preds = %4, %44, %37
  %55 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %3, i64 2, i32 0, i32 1
  %56 = bitcast i32* %55 to %class.GrColorSpaceXform**
  %57 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %56, align 8
  %58 = getelementptr inbounds %"class.(anonymous namespace)::VerticesGP::GLSLProcessor", %"class.(anonymous namespace)::VerticesGP::GLSLProcessor"* %0, i64 0, i32 5, i32 3, i32 1
  %59 = load i8, i8* %58, align 1, !range !2
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %69, label %61

61:                                               ; preds = %54
  %62 = getelementptr inbounds %"class.(anonymous namespace)::VerticesGP::GLSLProcessor", %"class.(anonymous namespace)::VerticesGP::GLSLProcessor"* %0, i64 0, i32 5, i32 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %57, i64 0, i32 1, i32 1, i32 0
  %65 = bitcast %class.GrGLSLProgramDataManager* %1 to void (%class.GrGLSLProgramDataManager*, i32, i32, float*)***
  %66 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)**, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*** %65, align 8
  %67 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %66, i64 5
  %68 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %67, align 8
  tail call void %68(%class.GrGLSLProgramDataManager* %1, i32 %63, i32 7, float* %64) #13
  br label %69

69:                                               ; preds = %61, %54
  %70 = getelementptr inbounds %"class.(anonymous namespace)::VerticesGP::GLSLProcessor", %"class.(anonymous namespace)::VerticesGP::GLSLProcessor"* %0, i64 0, i32 5, i32 3, i32 2
  %71 = load i8, i8* %70, align 2, !range !2
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %81, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.(anonymous namespace)::VerticesGP::GLSLProcessor", %"class.(anonymous namespace)::VerticesGP::GLSLProcessor"* %0, i64 0, i32 5, i32 1, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %57, i64 0, i32 1, i32 3, i64 0
  %77 = bitcast %class.GrGLSLProgramDataManager* %1 to void (%class.GrGLSLProgramDataManager*, i32, float*)***
  %78 = load void (%class.GrGLSLProgramDataManager*, i32, float*)**, void (%class.GrGLSLProgramDataManager*, i32, float*)*** %77, align 8
  %79 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, float*)** %78, i64 19
  %80 = load void (%class.GrGLSLProgramDataManager*, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, float*)** %79, align 8
  tail call void %80(%class.GrGLSLProgramDataManager* %1, i32 %75, float* %76) #13
  br label %81

81:                                               ; preds = %73, %69
  %82 = getelementptr inbounds %"class.(anonymous namespace)::VerticesGP::GLSLProcessor", %"class.(anonymous namespace)::VerticesGP::GLSLProcessor"* %0, i64 0, i32 5, i32 3, i32 3
  %83 = load i8, i8* %82, align 1, !range !2
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %93, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.(anonymous namespace)::VerticesGP::GLSLProcessor", %"class.(anonymous namespace)::VerticesGP::GLSLProcessor"* %0, i64 0, i32 5, i32 2, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %57, i64 0, i32 1, i32 2, i32 0
  %89 = bitcast %class.GrGLSLProgramDataManager* %1 to void (%class.GrGLSLProgramDataManager*, i32, i32, float*)***
  %90 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)**, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*** %89, align 8
  %91 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %90, i64 5
  %92 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %91, align 8
  tail call void %92(%class.GrGLSLProgramDataManager* %1, i32 %87, i32 7, float* %88) #13
  br label %93

93:                                               ; preds = %81, %85
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK23GrGLSLGeometryProcessor24getTessControlShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps(%class.SkString* noalias sret, %class.GrGLSLGeometryProcessor*, %class.GrGeometryProcessor* dereferenceable(80), i8*, %class.GrGLSLUniformHandler* dereferenceable(16), %class.GrShaderCaps* dereferenceable(144)) unnamed_addr #0 comdat align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.13, i64 0, i64 0), i32 139, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14, i64 0, i64 0)) #15
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK23GrGLSLGeometryProcessor27getTessEvaluationShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps(%class.SkString* noalias sret, %class.GrGLSLGeometryProcessor*, %class.GrGeometryProcessor* dereferenceable(80), i8*, %class.GrGLSLUniformHandler* dereferenceable(16), %class.GrShaderCaps* dereferenceable(144)) unnamed_addr #0 comdat align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.13, i64 0, i64 0), i32 145, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14, i64 0, i64 0)) #15
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_110VerticesGP13GLSLProcessor10onEmitCodeERN23GrGLSLGeometryProcessor8EmitArgsEPNS2_8GrGPArgsE(%"class.(anonymous namespace)::VerticesGP::GLSLProcessor"*, %"struct.GrGLSLGeometryProcessor::EmitArgs"* nocapture readonly dereferenceable(88), %"struct.GrGLSLGeometryProcessor::GrGPArgs"*) unnamed_addr #0 align 2 {
  %4 = alloca %class.SkString, align 8
  %5 = alloca %class.GrGLSLVarying, align 8
  %6 = alloca %class.SkString, align 8
  %7 = alloca %class.GrShaderVar, align 8
  %8 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 6
  %9 = bitcast %class.GrGeometryProcessor** %8 to %"class.(anonymous namespace)::VerticesGP"**
  %10 = load %"class.(anonymous namespace)::VerticesGP"*, %"class.(anonymous namespace)::VerticesGP"** %9, align 8
  %11 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 0
  %12 = load %class.GrGLSLVertexBuilder*, %class.GrGLSLVertexBuilder** %11, align 8
  %13 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 2
  %14 = load %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLFPFragmentBuilder** %13, align 8
  %15 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 3
  %16 = load %class.GrGLSLVaryingHandler*, %class.GrGLSLVaryingHandler** %15, align 8
  %17 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 4
  %18 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %17, align 8
  %19 = bitcast %"class.(anonymous namespace)::VerticesGP"* %10 to %class.GrGeometryProcessor*
  tail call void @_ZN20GrGLSLVaryingHandler14emitAttributesERK19GrGeometryProcessor(%class.GrGLSLVaryingHandler* %16, %class.GrGeometryProcessor* dereferenceable(80) %19) #13
  %20 = getelementptr inbounds %"class.(anonymous namespace)::VerticesGP::GLSLProcessor", %"class.(anonymous namespace)::VerticesGP::GLSLProcessor"* %0, i64 0, i32 5
  %21 = getelementptr inbounds %"class.(anonymous namespace)::VerticesGP", %"class.(anonymous namespace)::VerticesGP"* %10, i64 0, i32 5, i32 0
  %22 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %21, align 8
  tail call void @_ZN27GrGLSLColorSpaceXformHelper8emitCodeEP20GrGLSLUniformHandlerPK17GrColorSpaceXformj(%class.GrGLSLColorSpaceXformHelper* %20, %class.GrGLSLUniformHandler* %18, %class.GrColorSpaceXform* %22, i32 1)
  %23 = bitcast %class.GrGLSLFPFragmentBuilder* %14 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr i8, i8* %24, i64 -24
  %26 = bitcast i8* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %class.GrGLSLFPFragmentBuilder* %14 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 %27
  %30 = bitcast i8* %29 to %class.GrGLSLShaderBuilder*
  %31 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 7
  %32 = load i8*, i8** %31, align 8
  tail call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %30, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15, i64 0, i64 0), i8* %32)
  %33 = getelementptr inbounds %"class.(anonymous namespace)::VerticesGP", %"class.(anonymous namespace)::VerticesGP"* %10, i64 0, i32 1, i32 0, i32 0
  %34 = load %"class.GrGeometryProcessor::Attribute"*, %"class.GrGeometryProcessor::Attribute"** %33, align 8
  %35 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %34, i64 1, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %77, label %38

38:                                               ; preds = %3
  %39 = bitcast %class.GrGLSLVarying* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %39) #13
  %40 = getelementptr inbounds %class.GrGLSLVarying, %class.GrGLSLVarying* %5, i64 0, i32 0
  %41 = getelementptr inbounds %class.GrGLSLVarying, %class.GrGLSLVarying* %5, i64 0, i32 1
  %42 = getelementptr inbounds %class.GrGLSLVarying, %class.GrGLSLVarying* %5, i64 0, i32 2
  %43 = getelementptr inbounds %class.GrGLSLVarying, %class.GrGLSLVarying* %5, i64 0, i32 5
  store i32 31, i32* %40, align 8
  %44 = bitcast i32* %41 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %44, i8 0, i64 36, i1 false)
  call void @_ZN20GrGLSLVaryingHandler10addVaryingEPKcP13GrGLSLVaryingNS_13InterpolationE(%class.GrGLSLVaryingHandler* %16, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16, i64 0, i64 0), %class.GrGLSLVarying* nonnull %5, i32 0) #13
  %45 = bitcast %class.GrGLSLVertexBuilder* %12 to %class.GrGLSLShaderBuilder*
  %46 = load %"class.GrGeometryProcessor::Attribute"*, %"class.GrGeometryProcessor::Attribute"** %33, align 8
  %47 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %46, i64 1, i32 0
  %48 = load i8*, i8** %47, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %45, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.17, i64 0, i64 0), i8* %48)
  %49 = getelementptr inbounds %"class.(anonymous namespace)::VerticesGP", %"class.(anonymous namespace)::VerticesGP"* %10, i64 0, i32 2
  %50 = load i32, i32* %49, align 8
  %51 = icmp eq i32 %50, 2
  br i1 %51, label %52, label %67

52:                                               ; preds = %38
  %53 = getelementptr inbounds %class.GrGLSLVertexBuilder, %class.GrGLSLVertexBuilder* %12, i64 0, i32 0, i32 0, i32 14
  %54 = load i32, i32* %53, align 8
  %55 = getelementptr inbounds %class.GrGLSLVertexBuilder, %class.GrGLSLVertexBuilder* %12, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0
  %56 = load %class.SkString*, %class.SkString** %55, align 8
  %57 = sext i32 %54 to i64
  %58 = getelementptr inbounds %class.SkString, %class.SkString* %56, i64 %57
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %58, i64 -1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.18, i64 0, i64 0)) #13
  %59 = bitcast %class.SkString* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #13
  %60 = getelementptr inbounds %class.SkString, %class.SkString* %6, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %60, align 8
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %6) #13
  call void @_ZN19GrGLSLShaderBuilder21appendColorGamutXformEP8SkStringPKcP27GrGLSLColorSpaceXformHelper(%class.GrGLSLShaderBuilder* %45, %class.SkString* nonnull %6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16, i64 0, i64 0), %class.GrGLSLColorSpaceXformHelper* %20) #13
  %61 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %60, align 8
  %62 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %61, i64 0, i32 2
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %45, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.19, i64 0, i64 0), i8* %62)
  %63 = load i32, i32* %53, align 8
  %64 = load %class.SkString*, %class.SkString** %55, align 8
  %65 = sext i32 %63 to i64
  %66 = getelementptr inbounds %class.SkString, %class.SkString* %64, i64 %65
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %66, i64 -1, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.20, i64 0, i64 0)) #13
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #13
  br label %67

67:                                               ; preds = %52, %38
  %68 = load i8*, i8** %42, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %45, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.21, i64 0, i64 0), i8* %68)
  %69 = load i8*, i8** %23, align 8
  %70 = getelementptr i8, i8* %69, i64 -24
  %71 = bitcast i8* %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds i8, i8* %28, i64 %72
  %74 = bitcast i8* %73 to %class.GrGLSLShaderBuilder*
  %75 = load i8*, i8** %31, align 8
  %76 = load i8*, i8** %43, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %74, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.22, i64 0, i64 0), i8* %75, i8* %76)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %39) #13
  br label %81

77:                                               ; preds = %3
  %78 = getelementptr inbounds %"class.(anonymous namespace)::VerticesGP::GLSLProcessor", %"class.(anonymous namespace)::VerticesGP::GLSLProcessor"* %0, i64 0, i32 0
  %79 = load i8*, i8** %31, align 8
  %80 = getelementptr inbounds %"class.(anonymous namespace)::VerticesGP::GLSLProcessor", %"class.(anonymous namespace)::VerticesGP::GLSLProcessor"* %0, i64 0, i32 4
  tail call void @_ZN23GrGLSLGeometryProcessor17setupUniformColorEP23GrGLSLFPFragmentBuilderP20GrGLSLUniformHandlerPKcP16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEE(%class.GrGLSLGeometryProcessor* %78, %class.GrGLSLFPFragmentBuilder* %14, %class.GrGLSLUniformHandler* %18, i8* %79, %class.GrResourceHandle* %80) #13
  br label %81

81:                                               ; preds = %77, %67
  %82 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 5
  %83 = load %class.GrShaderCaps*, %class.GrShaderCaps** %82, align 8
  %84 = load %"class.GrGeometryProcessor::Attribute"*, %"class.GrGeometryProcessor::Attribute"** %33, align 8
  %85 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %84, i64 0, i32 0
  %86 = load i8*, i8** %85, align 8
  %87 = getelementptr inbounds %"class.(anonymous namespace)::VerticesGP", %"class.(anonymous namespace)::VerticesGP"* %10, i64 0, i32 4
  %88 = getelementptr inbounds %"class.(anonymous namespace)::VerticesGP::GLSLProcessor", %"class.(anonymous namespace)::VerticesGP::GLSLProcessor"* %0, i64 0, i32 3
  call void @_ZN23GrGLSLGeometryProcessor19WriteOutputPositionEP19GrGLSLVertexBuilderP20GrGLSLUniformHandlerRK12GrShaderCapsPNS_8GrGPArgsEPKcRK8SkMatrixP16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEE(%class.GrGLSLVertexBuilder* %12, %class.GrGLSLUniformHandler* %18, %class.GrShaderCaps* dereferenceable(144) %83, %"struct.GrGLSLGeometryProcessor::GrGPArgs"* %2, i8* %86, %class.SkMatrix* dereferenceable(40) %87, %class.GrResourceHandle* %88) #13
  %89 = load %"class.GrGeometryProcessor::Attribute"*, %"class.GrGeometryProcessor::Attribute"** %33, align 8
  %90 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %89, i64 2
  %91 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %89, i64 2, i32 2
  %92 = load i32, i32* %91, align 4
  %93 = icmp eq i32 %92, 0
  %94 = select i1 %93, %"class.GrGeometryProcessor::Attribute"* %89, %"class.GrGeometryProcessor::Attribute"* %90
  %95 = bitcast %class.GrShaderVar* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %95) #13
  %96 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %94, i64 0, i32 0
  %97 = load i8*, i8** %96, align 8, !noalias !6
  %98 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %94, i64 0, i32 2
  %99 = load i32, i32* %98, align 4, !noalias !6
  %100 = bitcast %class.SkString* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %100) #13, !noalias !6
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %4, i8* %97) #13, !noalias !6
  %101 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %7, i64 0, i32 0
  store i32 %99, i32* %101, align 8, !alias.scope !6
  %102 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %7, i64 0, i32 1
  store i32 2, i32* %102, align 4, !alias.scope !6
  %103 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %7, i64 0, i32 2
  store i32 0, i32* %103, align 8, !alias.scope !6
  %104 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %7, i64 0, i32 3
  call void @_ZN8SkStringC1EOS_(%class.SkString* %104, %class.SkString* nonnull dereferenceable(8) %4) #13
  %105 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %7, i64 0, i32 4
  call void @_ZN8SkStringC1Ev(%class.SkString* %105) #13
  %106 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %7, i64 0, i32 5
  call void @_ZN8SkStringC1Ev(%class.SkString* %106) #13
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %100) #13, !noalias !6
  %107 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::GrGPArgs", %"struct.GrGLSLGeometryProcessor::GrGPArgs"* %2, i64 0, i32 1
  %108 = bitcast %class.GrShaderVar* %107 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %108, i8* nonnull align 8 %95, i64 12, i1 false) #13
  %109 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::GrGPArgs", %"struct.GrGLSLGeometryProcessor::GrGPArgs"* %2, i64 0, i32 1, i32 3
  %110 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString* %109, %class.SkString* dereferenceable(8) %104) #13
  %111 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::GrGPArgs", %"struct.GrGLSLGeometryProcessor::GrGPArgs"* %2, i64 0, i32 1, i32 4
  %112 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString* %111, %class.SkString* dereferenceable(8) %105) #13
  %113 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::GrGPArgs", %"struct.GrGLSLGeometryProcessor::GrGPArgs"* %2, i64 0, i32 1, i32 5
  %114 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString* %113, %class.SkString* dereferenceable(8) %106) #13
  call void @_ZN8SkStringD1Ev(%class.SkString* %106) #13
  call void @_ZN8SkStringD1Ev(%class.SkString* %105) #13
  call void @_ZN8SkStringD1Ev(%class.SkString* %104) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %95) #13
  %115 = load i8*, i8** %23, align 8
  %116 = getelementptr i8, i8* %115, i64 -24
  %117 = bitcast i8* %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = getelementptr inbounds i8, i8* %28, i64 %118
  %120 = bitcast i8* %119 to %class.GrGLSLShaderBuilder*
  %121 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 8
  %122 = load i8*, i8** %121, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %120, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.23, i64 0, i64 0), i8* %122)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLGeometryProcessorD0Ev(%class.GrGLSLGeometryProcessor*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #15
  unreachable
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLGeometryProcessor13TransformInfoD2Ev(%"struct.GrGLSLGeometryProcessor::TransformInfo"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %0, i64 0, i32 1, i32 5
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %2) #13
  %3 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %0, i64 0, i32 1, i32 4
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %3) #13
  %4 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %0, i64 0, i32 1, i32 3
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %4) #13
  %5 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %0, i64 0, i32 0, i32 5
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %5) #13
  %6 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %0, i64 0, i32 0, i32 4
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %6) #13
  %7 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %0, i64 0, i32 0, i32 3
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %7) #13
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #9

declare void @_ZN23GrGLSLGeometryProcessor12SetTransformERK24GrGLSLProgramDataManagerRK12GrShaderCapsRK16GrResourceHandleINS0_17UniformHandleKindEERK8SkMatrixPSB_(%class.GrGLSLProgramDataManager* dereferenceable(8), %class.GrShaderCaps* dereferenceable(144), %class.GrResourceHandle* dereferenceable(4), %class.SkMatrix* dereferenceable(40), %class.SkMatrix*) local_unnamed_addr #4

declare void @_ZN20GrGLSLVaryingHandler14emitAttributesERK19GrGeometryProcessor(%class.GrGLSLVaryingHandler*, %class.GrGeometryProcessor* dereferenceable(80)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN27GrGLSLColorSpaceXformHelper8emitCodeEP20GrGLSLUniformHandlerPK17GrColorSpaceXformj(%class.GrGLSLColorSpaceXformHelper*, %class.GrGLSLUniformHandler*, %class.GrColorSpaceXform*, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = icmp eq %class.GrColorSpaceXform* %2, null
  br i1 %5, label %141, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %class.GrGLSLColorSpaceXformHelper, %class.GrGLSLColorSpaceXformHelper* %0, i64 0, i32 3, i32 0
  %8 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %2, i64 0, i32 1, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 1 %8, i64 5, i1 false)
  %9 = getelementptr inbounds %class.GrGLSLColorSpaceXformHelper, %class.GrGLSLColorSpaceXformHelper* %0, i64 0, i32 3, i32 1
  %10 = load i8, i8* %9, align 1, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %69, label %12

12:                                               ; preds = %6
  %13 = bitcast %class.GrGLSLUniformHandler* %1 to i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)***
  %14 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %13, align 8
  %15 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %14, i64 13
  %16 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %15, align 8
  %17 = tail call i32 %16(%class.GrGLSLUniformHandler* %1, %class.GrFragmentProcessor* null, i32 %3, i32 28, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.24, i64 0, i64 0), i1 zeroext true, i32 7, i8** null) #13
  %18 = getelementptr inbounds %class.GrGLSLColorSpaceXformHelper, %class.GrGLSLColorSpaceXformHelper* %0, i64 0, i32 0, i32 0
  store i32 %17, i32* %18, align 4
  %19 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %2, i64 0, i32 1, i32 1, i32 0
  %20 = load float, float* %19, align 4
  %21 = fcmp olt float %20, 0.000000e+00
  br i1 %21, label %22, label %31

22:                                               ; preds = %12
  %23 = fptosi float %20 to i32
  %24 = sitofp i32 %23 to float
  %25 = fcmp oeq float %20, %24
  br i1 %25, label %26, label %31

26:                                               ; preds = %22
  %27 = add i32 %23, 4
  %28 = icmp ult i32 %27, 3
  %29 = sub i32 0, %23
  %30 = select i1 %28, i32 %29, i32 0
  br label %66

31:                                               ; preds = %22, %12
  %32 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %2, i64 0, i32 1, i32 1, i32 1
  %33 = load float, float* %32, align 4
  %34 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %2, i64 0, i32 1, i32 1, i32 2
  %35 = load float, float* %34, align 4
  %36 = fadd float %33, %35
  %37 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %2, i64 0, i32 1, i32 1, i32 3
  %38 = load float, float* %37, align 4
  %39 = fadd float %36, %38
  %40 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %2, i64 0, i32 1, i32 1, i32 4
  %41 = load float, float* %40, align 4
  %42 = fadd float %39, %41
  %43 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %2, i64 0, i32 1, i32 1, i32 5
  %44 = load float, float* %43, align 4
  %45 = fadd float %42, %44
  %46 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %2, i64 0, i32 1, i32 1, i32 6
  %47 = load float, float* %46, align 4
  %48 = fadd float %45, %47
  %49 = fadd float %20, %48
  %50 = bitcast float %49 to i32
  %51 = and i32 %50, 2139095040
  %52 = icmp eq i32 %51, 2139095040
  br i1 %52, label %65, label %53

53:                                               ; preds = %31
  %54 = fcmp ult float %33, 0.000000e+00
  %55 = fcmp ult float %38, 0.000000e+00
  %56 = or i1 %54, %55
  br i1 %56, label %65, label %57

57:                                               ; preds = %53
  %58 = fcmp ult float %41, 0.000000e+00
  %59 = fcmp ult float %20, 0.000000e+00
  %60 = or i1 %59, %58
  br i1 %60, label %65, label %61

61:                                               ; preds = %57
  %62 = fmul float %33, %41
  %63 = fadd float %35, %62
  %64 = fcmp ult float %63, 0.000000e+00
  br i1 %64, label %65, label %66

65:                                               ; preds = %61, %57, %53, %31
  br label %66

66:                                               ; preds = %26, %61, %65
  %67 = phi i32 [ 0, %65 ], [ 1, %61 ], [ %30, %26 ]
  %68 = getelementptr inbounds %class.GrGLSLColorSpaceXformHelper, %class.GrGLSLColorSpaceXformHelper* %0, i64 0, i32 4
  store i32 %67, i32* %68, align 4
  br label %69

69:                                               ; preds = %6, %66
  %70 = getelementptr inbounds %class.GrGLSLColorSpaceXformHelper, %class.GrGLSLColorSpaceXformHelper* %0, i64 0, i32 3, i32 2
  %71 = load i8, i8* %70, align 2, !range !2
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %80, label %73

73:                                               ; preds = %69
  %74 = bitcast %class.GrGLSLUniformHandler* %1 to i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)***
  %75 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %74, align 8
  %76 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %75, i64 13
  %77 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %76, align 8
  %78 = tail call i32 %77(%class.GrGLSLUniformHandler* %1, %class.GrFragmentProcessor* null, i32 %3, i32 33, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.25, i64 0, i64 0), i1 zeroext true, i32 0, i8** null) #13
  %79 = getelementptr inbounds %class.GrGLSLColorSpaceXformHelper, %class.GrGLSLColorSpaceXformHelper* %0, i64 0, i32 1, i32 0
  store i32 %78, i32* %79, align 4
  br label %80

80:                                               ; preds = %69, %73
  %81 = getelementptr inbounds %class.GrGLSLColorSpaceXformHelper, %class.GrGLSLColorSpaceXformHelper* %0, i64 0, i32 3, i32 3
  %82 = load i8, i8* %81, align 1, !range !2
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %141, label %84

84:                                               ; preds = %80
  %85 = bitcast %class.GrGLSLUniformHandler* %1 to i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)***
  %86 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %85, align 8
  %87 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %86, i64 13
  %88 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %87, align 8
  %89 = tail call i32 %88(%class.GrGLSLUniformHandler* %1, %class.GrFragmentProcessor* null, i32 %3, i32 28, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26, i64 0, i64 0), i1 zeroext true, i32 7, i8** null) #13
  %90 = getelementptr inbounds %class.GrGLSLColorSpaceXformHelper, %class.GrGLSLColorSpaceXformHelper* %0, i64 0, i32 2, i32 0
  store i32 %89, i32* %90, align 4
  %91 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %2, i64 0, i32 1, i32 2, i32 0
  %92 = load float, float* %91, align 4
  %93 = fcmp olt float %92, 0.000000e+00
  br i1 %93, label %94, label %103

94:                                               ; preds = %84
  %95 = fptosi float %92 to i32
  %96 = sitofp i32 %95 to float
  %97 = fcmp oeq float %92, %96
  br i1 %97, label %98, label %103

98:                                               ; preds = %94
  %99 = add i32 %95, 4
  %100 = icmp ult i32 %99, 3
  %101 = sub i32 0, %95
  %102 = select i1 %100, i32 %101, i32 0
  br label %138

103:                                              ; preds = %94, %84
  %104 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %2, i64 0, i32 1, i32 2, i32 1
  %105 = load float, float* %104, align 4
  %106 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %2, i64 0, i32 1, i32 2, i32 2
  %107 = load float, float* %106, align 4
  %108 = fadd float %105, %107
  %109 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %2, i64 0, i32 1, i32 2, i32 3
  %110 = load float, float* %109, align 4
  %111 = fadd float %108, %110
  %112 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %2, i64 0, i32 1, i32 2, i32 4
  %113 = load float, float* %112, align 4
  %114 = fadd float %111, %113
  %115 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %2, i64 0, i32 1, i32 2, i32 5
  %116 = load float, float* %115, align 4
  %117 = fadd float %114, %116
  %118 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %2, i64 0, i32 1, i32 2, i32 6
  %119 = load float, float* %118, align 4
  %120 = fadd float %117, %119
  %121 = fadd float %92, %120
  %122 = bitcast float %121 to i32
  %123 = and i32 %122, 2139095040
  %124 = icmp eq i32 %123, 2139095040
  br i1 %124, label %137, label %125

125:                                              ; preds = %103
  %126 = fcmp ult float %105, 0.000000e+00
  %127 = fcmp ult float %110, 0.000000e+00
  %128 = or i1 %126, %127
  br i1 %128, label %137, label %129

129:                                              ; preds = %125
  %130 = fcmp ult float %113, 0.000000e+00
  %131 = fcmp ult float %92, 0.000000e+00
  %132 = or i1 %131, %130
  br i1 %132, label %137, label %133

133:                                              ; preds = %129
  %134 = fmul float %105, %113
  %135 = fadd float %107, %134
  %136 = fcmp ult float %135, 0.000000e+00
  br i1 %136, label %137, label %138

137:                                              ; preds = %133, %129, %125, %103
  br label %138

138:                                              ; preds = %98, %133, %137
  %139 = phi i32 [ 0, %137 ], [ 1, %133 ], [ %102, %98 ]
  %140 = getelementptr inbounds %class.GrGLSLColorSpaceXformHelper, %class.GrGLSLColorSpaceXformHelper* %0, i64 0, i32 5
  store i32 %139, i32* %140, align 4
  br label %141

141:                                              ; preds = %80, %4, %138
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder*, i8*, ...) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  %4 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #13
  %5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0
  %6 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 24, i1 false)
  call void @llvm.va_start(i8* nonnull %4)
  %7 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 3, i32 0, i32 0, i64 120
  %8 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 14
  %9 = load i32, i32* %8, align 8
  %10 = bitcast i8* %7 to %class.SkString**
  %11 = load %class.SkString*, %class.SkString** %10, align 8
  %12 = sext i32 %9 to i64
  %13 = getelementptr inbounds %class.SkString, %class.SkString* %11, i64 %12
  call void @_ZN8SkString12appendVAListEPKcP13__va_list_tag(%class.SkString* %13, i8* %1, %struct.__va_list_tag* nonnull %5) #13
  call void @llvm.va_end(i8* nonnull %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #13
  ret void
}

declare void @_ZN20GrGLSLVaryingHandler10addVaryingEPKcP13GrGLSLVaryingNS_13InterpolationE(%class.GrGLSLVaryingHandler*, i8*, %class.GrGLSLVarying*, i32) local_unnamed_addr #4

declare void @_ZN8SkStringC1Ev(%class.SkString*) unnamed_addr #4

declare void @_ZN19GrGLSLShaderBuilder21appendColorGamutXformEP8SkStringPKcP27GrGLSLColorSpaceXformHelper(%class.GrGLSLShaderBuilder*, %class.SkString*, i8*, %class.GrGLSLColorSpaceXformHelper*) local_unnamed_addr #4

declare void @_ZN23GrGLSLGeometryProcessor17setupUniformColorEP23GrGLSLFPFragmentBuilderP20GrGLSLUniformHandlerPKcP16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEE(%class.GrGLSLGeometryProcessor*, %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLUniformHandler*, i8*, %class.GrResourceHandle*) local_unnamed_addr #4

declare void @_ZN23GrGLSLGeometryProcessor19WriteOutputPositionEP19GrGLSLVertexBuilderP20GrGLSLUniformHandlerRK12GrShaderCapsPNS_8GrGPArgsEPKcRK8SkMatrixP16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEE(%class.GrGLSLVertexBuilder*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps* dereferenceable(144), %"struct.GrGLSLGeometryProcessor::GrGPArgs"*, i8*, %class.SkMatrix* dereferenceable(40), %class.GrResourceHandle*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #13

declare void @_ZN8SkString12appendVAListEPKcP13__va_list_tag(%class.SkString*, i8*, %struct.__va_list_tag*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #13

declare void @_ZN8SkString6insertEmPKc(%class.SkString*, i64, i8*) local_unnamed_addr #4

declare void @_ZN8SkStringC1EPKc(%class.SkString*, i8*) unnamed_addr #4

declare void @_ZN8SkStringC1EOS_(%class.SkString*, %class.SkString* dereferenceable(8)) unnamed_addr #4

declare dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString*, %class.SkString* dereferenceable(8)) local_unnamed_addr #4

declare void @_Z17SkDebugf_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #4

declare i32 @_ZNK8SkRGBA4fIL11SkAlphaType2EE12toBytes_RGBAEv(%struct.SkRGBA4f*) local_unnamed_addr #4

declare void @_ZNK8SkMatrix9mapPointsEP7SkPointPKS0_i(%class.SkMatrix*, %struct.SkPoint*, %struct.SkPoint*, i32) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZZN12SkArenaAlloc4makeIZNS_4makeI12GrSimpleMeshJEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS3_ENUlPcE_8__invokeESC_(i8*) #5 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -57
  %3 = getelementptr inbounds i8, i8* %0, i64 -25
  %4 = bitcast i8* %3 to %class.GrBuffer**
  %5 = load %class.GrBuffer*, %class.GrBuffer** %4, align 8
  %6 = icmp eq %class.GrBuffer* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = bitcast %class.GrBuffer* %5 to void (%class.GrBuffer*)***
  %9 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %8, align 8
  %10 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %9, i64 3
  %11 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %10, align 8
  tail call void %11(%class.GrBuffer* nonnull %5) #13
  br label %12

12:                                               ; preds = %7, %1
  %13 = bitcast i8* %2 to %class.GrBuffer**
  %14 = load %class.GrBuffer*, %class.GrBuffer** %13, align 8
  %15 = icmp eq %class.GrBuffer* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %12
  %17 = bitcast %class.GrBuffer* %14 to void (%class.GrBuffer*)***
  %18 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %17, align 8
  %19 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %18, i64 3
  %20 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %19, align 8
  tail call void %20(%class.GrBuffer* nonnull %14) #13
  br label %21

21:                                               ; preds = %12, %16
  ret i8* %2
}

declare void @_ZN14GrProcessorSetC1EO7GrPaint(%class.GrProcessorSet*, %class.GrPaint* dereferenceable(48)) unnamed_addr #4

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #14

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { nofree nounwind readonly }
attributes #15 = { noreturn nounwind }
attributes #16 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 1048575}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK19GrGeometryProcessor9Attribute11asShaderVarEv: argument 0"}
!8 = distinct !{!8, !"_ZNK19GrGeometryProcessor9Attribute11asShaderVarEv"}
