; ModuleID = '../../net/third_party/quiche/src/quic/core/congestion_control/send_algorithm_interface.cc'
source_filename = "../../net/third_party/quiche/src/quic/core/congestion_control/send_algorithm_interface.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.quic::QuicClock" = type { i32 (...)**, i8, %"class.quic::QuicTime::Delta" }
%"class.quic::QuicTime::Delta" = type { i64 }
%"class.quic::RttStats" = type <{ %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"struct.quic::RttStats::StandardDeviationCaculator", i8, [7 x i8], %"class.quic::QuicTime::Delta", %"class.quic::QuicTime", i8, [7 x i8] }>
%"struct.quic::RttStats::StandardDeviationCaculator" = type { i8, double }
%"class.quic::QuicTime" = type { i64 }
%"class.quic::QuicUnackedPacketMap" = type <{ i8, [7 x i8], %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quiche::QuicheCircularDeque", %"class.quic::QuicPacketNumber", i64, [3 x i64], i64, %"class.quic::QuicTime", [3 x %"class.quic::QuicTime"], %"class.quic::QuicTime", %"struct.quic::QuicStreamFrame", %"class.quic::SessionNotifierInterface"*, i8, i8, [6 x i8] }>
%"class.quiche::QuicheCircularDeque" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicTransmissionInfo, 3, std::__1::allocator<quic::QuicTransmissionInfo> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicTransmissionInfo, 3, std::__1::allocator<quic::QuicTransmissionInfo> >::AllocatorAndData" = type { %"struct.quic::QuicTransmissionInfo"*, i64 }
%"struct.quic::QuicTransmissionInfo" = type { %"class.std::__1::vector", %"class.quic::QuicTime", i16, i8, i8, i8, i8, i8, i8, %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.quic::QuicFrame"*, %"struct.quic::QuicFrame"*, %"class.std::__1::__compressed_pair.43" }
%"struct.quic::QuicFrame" = type { %union.anon }
%union.anon = type { %"struct.quic::QuicStreamFrame" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"struct.quic::QuicFrame"* }
%"class.quic::QuicPacketNumber" = type { i64 }
%"struct.quic::QuicStreamFrame" = type { i8, i8, i16, i32, i8*, i64 }
%"class.quic::SessionNotifierInterface" = type { i32 (...)** }
%"class.quic::QuicRandom" = type { i32 (...)** }
%"struct.quic::QuicConnectionStats" = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, float, i32, i32, i64, i64, i64, i64, %"class.quic::QuicTimeAccumulator", i32, i32, i8, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %"class.quic::QuicBandwidth", i64, i64, i64, i64, i64, i32, %"class.quic::QuicTime", %"class.quic::QuicTime", i64, i64, i64, i8, i64, i64, i64, i8, i8, %"class.quic::QuicPacketNumber", i64, i64, i64, i32, i64, i64, i8, i8, i64, i64, i64, i64, i64, i64, i64, i64, %"class.absl::optional", %"class.absl::optional", %"class.absl::optional" }
%"class.quic::QuicTimeAccumulator" = type { %"class.quic::QuicTime::Delta", %"class.quic::QuicTime" }
%"class.quic::QuicBandwidth" = type { i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.48 }
%union.anon.48 = type { %"struct.quic::QuicConnectionStats::TlsServerOperationStats" }
%"struct.quic::QuicConnectionStats::TlsServerOperationStats" = type { i8, %"class.quic::QuicTime::Delta" }
%"class.quic::SendAlgorithmInterface" = type { i32 (...)** }
%"class.quic::BbrSender" = type { %"class.quic::SendAlgorithmInterface", %"class.quic::RttStats"*, %"class.quic::QuicUnackedPacketMap"*, %"class.quic::QuicRandom"*, %"struct.quic::QuicConnectionStats"*, i32, [4 x i8], %"class.quic::BandwidthSampler", i64, %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber", i64, i64, %"class.quic::WindowedFilter.55", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime", i64, i64, i64, i64, float, float, float, %"class.quic::QuicBandwidth", float, float, float, i64, i32, %"class.quic::QuicTime", i8, i64, %"class.quic::QuicBandwidth", i8, %"class.quic::QuicTime", i8, i8, i8, i32, %"class.quic::QuicPacketNumber", i64, i8, i8, i8, i8, i8, i8, i8, i64, i8, i64, i64 }
%"class.quic::BandwidthSampler" = type <{ %"class.quic::BandwidthSamplerInterface", i64, i64, i64, i64, i64, %"class.quic::QuicTime", %"class.quic::QuicTime", %"class.quic::QuicPacketNumber", i8, [7 x i8], %"class.quic::QuicPacketNumber", %"class.quic::PacketNumberIndexedQueue", %"class.quic::BandwidthSampler::RecentAckPoints", %"class.quiche::QuicheCircularDeque.52", i64, %"class.quic::QuicUnackedPacketMap"*, %"class.quic::MaxAckHeightTracker", i64, i8, [7 x i8] }>
%"class.quic::BandwidthSamplerInterface" = type { i32 (...)** }
%"class.quic::PacketNumberIndexedQueue" = type { %"class.quiche::QuicheCircularDeque.49", i64, %"class.quic::QuicPacketNumber" }
%"class.quiche::QuicheCircularDeque.49" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper, 3, std::__1::allocator<quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper, 3, std::__1::allocator<quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper> >::AllocatorAndData" = type { %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"*, i64 }
%"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper" = type opaque
%"class.quic::BandwidthSampler::RecentAckPoints" = type { [2 x %"struct.quic::BandwidthSampler::AckPoint"] }
%"struct.quic::BandwidthSampler::AckPoint" = type { %"class.quic::QuicTime", i64 }
%"class.quiche::QuicheCircularDeque.52" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::BandwidthSampler::AckPoint, 3, std::__1::allocator<quic::BandwidthSampler::AckPoint> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::BandwidthSampler::AckPoint, 3, std::__1::allocator<quic::BandwidthSampler::AckPoint> >::AllocatorAndData" = type { %"struct.quic::BandwidthSampler::AckPoint"*, i64 }
%"class.quic::MaxAckHeightTracker" = type { %"class.quic::WindowedFilter", %"class.quic::QuicTime", i64, i64, double }
%"class.quic::WindowedFilter" = type { i64, i64, [3 x %"struct.quic::WindowedFilter<unsigned long, quic::MaxFilter<unsigned long>, unsigned long, unsigned long>::Sample"] }
%"struct.quic::WindowedFilter<unsigned long, quic::MaxFilter<unsigned long>, unsigned long, unsigned long>::Sample" = type { i64, i64 }
%"class.quic::WindowedFilter.55" = type { i64, %"class.quic::QuicBandwidth", [3 x %"struct.quic::WindowedFilter<quic::QuicBandwidth, quic::MaxFilter<quic::QuicBandwidth>, unsigned long, unsigned long>::Sample"] }
%"struct.quic::WindowedFilter<quic::QuicBandwidth, quic::MaxFilter<quic::QuicBandwidth>, unsigned long, unsigned long>::Sample" = type { %"class.quic::QuicBandwidth", i64 }
%"class.quic::Bbr2Sender" = type <{ %"class.quic::SendAlgorithmInterface", i8, [7 x i8], %"class.quic::RttStats"*, %"class.quic::QuicUnackedPacketMap"*, %"class.quic::QuicRandom"*, %"struct.quic::QuicConnectionStats"*, %"struct.quic::Bbr2Params", i64, %"class.quic::Bbr2NetworkModel", i64, i64, %"class.quic::QuicBandwidth", %"class.quic::QuicTime", %"class.quic::Bbr2StartupMode", %"class.quic::Bbr2DrainMode", %"class.quic::Bbr2ProbeBwMode", %"class.quic::Bbr2ProbeRttMode", i8, [7 x i8] }>
%"struct.quic::Bbr2Params" = type <{ float, float, float, [4 x i8], i64, i64, i8, [3 x i8], float, float, [4 x i8], i64, i32, float, %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", i64, float, float, float, float, float, float, %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", i64, float, float, float, [4 x i8], %"class.quic::Limits", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [6 x i8] }>
%"class.quic::Limits" = type { i64, i64 }
%"class.quic::Bbr2NetworkModel" = type { %"struct.quic::Bbr2Params"*, %"class.quic::RoundTripCounter", %"class.quic::BandwidthSampler", %"class.quic::Bbr2MaxBandwidthFilter", %"class.quic::MinRttFilter", i64, i64, i64, %"class.quic::QuicBandwidth", %"class.quic::QuicBandwidth", %"class.quic::QuicBandwidth", i64, i64, i64, float, float, i8, %"class.quic::QuicBandwidth", i64 }
%"class.quic::RoundTripCounter" = type { i64, %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber" }
%"class.quic::Bbr2MaxBandwidthFilter" = type { [2 x %"class.quic::QuicBandwidth"] }
%"class.quic::MinRttFilter" = type { %"class.quic::QuicTime::Delta", %"class.quic::QuicTime" }
%"class.quic::Bbr2StartupMode" = type { %"class.quic::Bbr2ModeBase", %"class.quic::QuicBandwidth" }
%"class.quic::Bbr2ModeBase" = type { i32 (...)**, %"class.quic::Bbr2Sender"*, %"class.quic::Bbr2NetworkModel"* }
%"class.quic::Bbr2DrainMode" = type { %"class.quic::Bbr2ModeBase" }
%"class.quic::Bbr2ProbeBwMode" = type <{ %"class.quic::Bbr2ModeBase", %"struct.quic::Bbr2ProbeBwMode::Cycle", i8, i8, [6 x i8] }>
%"struct.quic::Bbr2ProbeBwMode::Cycle" = type <{ %"class.quic::QuicTime", i8, [7 x i8], i64, %"class.quic::QuicTime", i64, %"class.quic::QuicTime::Delta", i64, i64, i64, i8, i8, [6 x i8] }>
%"class.quic::Bbr2ProbeRttMode" = type { %"class.quic::Bbr2ModeBase", %"class.quic::QuicTime" }
%"class.quic::TcpCubicSenderBytes" = type { %"class.quic::SendAlgorithmInterface", %"class.quic::HybridSlowStart", %"class.quic::PrrSender", %"class.quic::RttStats"*, %"struct.quic::QuicConnectionStats"*, i8, i32, %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber", i8, i8, i8, i8, %"class.quic::CubicBytes", i64, i64, i64, i64, i64, i64, i64, i64 }
%"class.quic::HybridSlowStart" = type { i8, i32, %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber", i32, %"class.quic::QuicTime::Delta" }
%"class.quic::PrrSender" = type { i64, i64, i64, i64 }
%"class.quic::CubicBytes" = type { %"class.quic::QuicClock"*, i32, %"class.quic::QuicTime", i64, i64, i64, i64, i32, i64 }

@FLAGS_quic_max_congestion_window = external local_unnamed_addr global i32, align 4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.quic::SendAlgorithmInterface"* @_ZN4quic22SendAlgorithmInterface6CreateEPKNS_9QuicClockEPKNS_8RttStatsEPKNS_20QuicUnackedPacketMapENS_21CongestionControlTypeEPNS_10QuicRandomEPNS_19QuicConnectionStatsEmPS0_(%"class.quic::QuicClock"*, %"class.quic::RttStats"*, %"class.quic::QuicUnackedPacketMap"*, i32, %"class.quic::QuicRandom"*, %"struct.quic::QuicConnectionStats"*, i64, %"class.quic::SendAlgorithmInterface"*) local_unnamed_addr #0 align 2 {
  %9 = load i32, i32* @FLAGS_quic_max_congestion_window, align 4
  %10 = sext i32 %9 to i64
  switch i32 %3, label %49 [
    i32 4, label %11
    i32 2, label %11
    i32 5, label %20
    i32 3, label %41
    i32 0, label %41
    i32 1, label %45
  ]

11:                                               ; preds = %8, %8
  %12 = tail call i8* @_Znwm(i64 696) #3
  %13 = bitcast i8* %12 to %"class.quic::BbrSender"*
  %14 = bitcast %"class.quic::QuicClock"* %0 to i64 (%"class.quic::QuicClock"*)***
  %15 = load i64 (%"class.quic::QuicClock"*)**, i64 (%"class.quic::QuicClock"*)*** %14, align 8
  %16 = getelementptr inbounds i64 (%"class.quic::QuicClock"*)*, i64 (%"class.quic::QuicClock"*)** %15, i64 2
  %17 = load i64 (%"class.quic::QuicClock"*)*, i64 (%"class.quic::QuicClock"*)** %16, align 8
  %18 = tail call i64 %17(%"class.quic::QuicClock"* %0) #4
  tail call void @_ZN4quic9BbrSenderC1ENS_8QuicTimeEPKNS_8RttStatsEPKNS_20QuicUnackedPacketMapEmmPNS_10QuicRandomEPNS_19QuicConnectionStatsE(%"class.quic::BbrSender"* nonnull %13, i64 %18, %"class.quic::RttStats"* %1, %"class.quic::QuicUnackedPacketMap"* %2, i64 %6, i64 %10, %"class.quic::QuicRandom"* %4, %"struct.quic::QuicConnectionStats"* %5) #4
  %19 = bitcast i8* %12 to %"class.quic::SendAlgorithmInterface"*
  br label %49

20:                                               ; preds = %8
  %21 = tail call i8* @_Znwm(i64 976) #3
  %22 = bitcast i8* %21 to %"class.quic::Bbr2Sender"*
  %23 = bitcast %"class.quic::QuicClock"* %0 to i64 (%"class.quic::QuicClock"*)***
  %24 = load i64 (%"class.quic::QuicClock"*)**, i64 (%"class.quic::QuicClock"*)*** %23, align 8
  %25 = getelementptr inbounds i64 (%"class.quic::QuicClock"*)*, i64 (%"class.quic::QuicClock"*)** %24, i64 2
  %26 = load i64 (%"class.quic::QuicClock"*)*, i64 (%"class.quic::QuicClock"*)** %25, align 8
  %27 = tail call i64 %26(%"class.quic::QuicClock"* %0) #4
  %28 = icmp eq %"class.quic::SendAlgorithmInterface"* %7, null
  br i1 %28, label %38, label %29

29:                                               ; preds = %20
  %30 = bitcast %"class.quic::SendAlgorithmInterface"* %7 to i32 (%"class.quic::SendAlgorithmInterface"*)***
  %31 = load i32 (%"class.quic::SendAlgorithmInterface"*)**, i32 (%"class.quic::SendAlgorithmInterface"*)*** %30, align 8
  %32 = getelementptr inbounds i32 (%"class.quic::SendAlgorithmInterface"*)*, i32 (%"class.quic::SendAlgorithmInterface"*)** %31, i64 18
  %33 = load i32 (%"class.quic::SendAlgorithmInterface"*)*, i32 (%"class.quic::SendAlgorithmInterface"*)** %32, align 8
  %34 = tail call i32 %33(%"class.quic::SendAlgorithmInterface"* nonnull %7) #4
  %35 = icmp eq i32 %34, 2
  %36 = bitcast %"class.quic::SendAlgorithmInterface"* %7 to %"class.quic::BbrSender"*
  %37 = select i1 %35, %"class.quic::BbrSender"* %36, %"class.quic::BbrSender"* null
  br label %38

38:                                               ; preds = %29, %20
  %39 = phi %"class.quic::BbrSender"* [ null, %20 ], [ %37, %29 ]
  tail call void @_ZN4quic10Bbr2SenderC1ENS_8QuicTimeEPKNS_8RttStatsEPKNS_20QuicUnackedPacketMapEmmPNS_10QuicRandomEPNS_19QuicConnectionStatsEPNS_9BbrSenderE(%"class.quic::Bbr2Sender"* nonnull %22, i64 %27, %"class.quic::RttStats"* %1, %"class.quic::QuicUnackedPacketMap"* %2, i64 %6, i64 %10, %"class.quic::QuicRandom"* %4, %"struct.quic::QuicConnectionStats"* %5, %"class.quic::BbrSender"* %39) #4
  %40 = bitcast i8* %21 to %"class.quic::SendAlgorithmInterface"*
  br label %49

41:                                               ; preds = %8, %8
  %42 = tail call i8* @_Znwm(i64 272) #3
  %43 = bitcast i8* %42 to %"class.quic::TcpCubicSenderBytes"*
  tail call void @_ZN4quic19TcpCubicSenderBytesC1EPKNS_9QuicClockEPKNS_8RttStatsEbmmPNS_19QuicConnectionStatsE(%"class.quic::TcpCubicSenderBytes"* nonnull %43, %"class.quic::QuicClock"* %0, %"class.quic::RttStats"* %1, i1 zeroext false, i64 %6, i64 %10, %"struct.quic::QuicConnectionStats"* %5) #4
  %44 = bitcast i8* %42 to %"class.quic::SendAlgorithmInterface"*
  br label %49

45:                                               ; preds = %8
  %46 = tail call i8* @_Znwm(i64 272) #3
  %47 = bitcast i8* %46 to %"class.quic::TcpCubicSenderBytes"*
  tail call void @_ZN4quic19TcpCubicSenderBytesC1EPKNS_9QuicClockEPKNS_8RttStatsEbmmPNS_19QuicConnectionStatsE(%"class.quic::TcpCubicSenderBytes"* nonnull %47, %"class.quic::QuicClock"* %0, %"class.quic::RttStats"* %1, i1 zeroext true, i64 %6, i64 %10, %"struct.quic::QuicConnectionStats"* %5) #4
  %48 = bitcast i8* %46 to %"class.quic::SendAlgorithmInterface"*
  br label %49

49:                                               ; preds = %8, %45, %41, %38, %11
  %50 = phi %"class.quic::SendAlgorithmInterface"* [ %48, %45 ], [ %44, %41 ], [ %40, %38 ], [ %19, %11 ], [ null, %8 ]
  ret %"class.quic::SendAlgorithmInterface"* %50
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

declare void @_ZN4quic9BbrSenderC1ENS_8QuicTimeEPKNS_8RttStatsEPKNS_20QuicUnackedPacketMapEmmPNS_10QuicRandomEPNS_19QuicConnectionStatsE(%"class.quic::BbrSender"*, i64, %"class.quic::RttStats"*, %"class.quic::QuicUnackedPacketMap"*, i64, i64, %"class.quic::QuicRandom"*, %"struct.quic::QuicConnectionStats"*) unnamed_addr #2

declare void @_ZN4quic10Bbr2SenderC1ENS_8QuicTimeEPKNS_8RttStatsEPKNS_20QuicUnackedPacketMapEmmPNS_10QuicRandomEPNS_19QuicConnectionStatsEPNS_9BbrSenderE(%"class.quic::Bbr2Sender"*, i64, %"class.quic::RttStats"*, %"class.quic::QuicUnackedPacketMap"*, i64, i64, %"class.quic::QuicRandom"*, %"struct.quic::QuicConnectionStats"*, %"class.quic::BbrSender"*) unnamed_addr #2

declare void @_ZN4quic19TcpCubicSenderBytesC1EPKNS_9QuicClockEPKNS_8RttStatsEbmmPNS_19QuicConnectionStatsE(%"class.quic::TcpCubicSenderBytes"*, %"class.quic::QuicClock"*, %"class.quic::RttStats"*, i1 zeroext, i64, i64, %"struct.quic::QuicConnectionStats"*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { builtin nounwind }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
