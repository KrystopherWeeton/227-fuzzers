; ModuleID = '../../third_party/boringssl/src/crypto/x509/a_verify.c'
source_filename = "../../third_party/boringssl/src/crypto/x509/a_verify.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.ASN1_ITEM_st = type opaque
%struct.X509_algor_st = type { %struct.asn1_object_st*, %struct.asn1_type_st* }
%struct.asn1_object_st = type { i8*, i8*, i32, i32, i8*, i32 }
%struct.asn1_type_st = type { i32, %union.anon }
%union.anon = type { i8* }
%struct.asn1_string_st = type { i32, i32, i8*, i64 }
%struct.evp_pkey_st = type { i32, i32, %union.anon.0, %struct.evp_pkey_asn1_method_st* }
%union.anon.0 = type { i8* }
%struct.evp_pkey_asn1_method_st = type opaque
%struct.env_md_ctx_st = type { %struct.env_md_st*, i8*, %struct.evp_pkey_ctx_st*, %struct.evp_md_pctx_ops* }
%struct.env_md_st = type opaque
%struct.evp_pkey_ctx_st = type opaque
%struct.evp_md_pctx_ops = type opaque
%struct.ASN1_VALUE_st = type opaque

@.str = private unnamed_addr constant [55 x i8] c"../../third_party/boringssl/src/crypto/x509/a_verify.c\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ASN1_item_verify(%struct.ASN1_ITEM_st*, %struct.X509_algor_st*, %struct.asn1_string_st* nocapture readonly, i8*, %struct.evp_pkey_st*) local_unnamed_addr #0 {
  %6 = alloca %struct.env_md_ctx_st, align 8
  %7 = alloca i8*, align 8
  %8 = bitcast %struct.env_md_ctx_st* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #3
  %9 = bitcast i8** %7 to i8*
  %10 = bitcast %struct.env_md_ctx_st* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #3
  store i8* null, i8** %7, align 8
  %11 = icmp eq %struct.evp_pkey_st* %4, null
  br i1 %11, label %12, label %13

12:                                               ; preds = %5
  tail call void @ERR_put_error(i32 11, i32 0, i32 67, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 80) #3
  br label %46

13:                                               ; preds = %5
  %14 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %2, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 3
  br i1 %16, label %17, label %23

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %2, i64 0, i32 3
  %19 = load i64, i64* %18, align 8
  %20 = and i64 %19, 7
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %23, label %22

22:                                               ; preds = %17
  tail call void @ERR_put_error(i32 11, i32 0, i32 109, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 85) #3
  br label %46

23:                                               ; preds = %17, %13
  call void @EVP_MD_CTX_init(%struct.env_md_ctx_st* nonnull %6) #3
  %24 = call i32 @x509_digest_verify_init(%struct.env_md_ctx_st* nonnull %6, %struct.X509_algor_st* %1, %struct.evp_pkey_st* nonnull %4) #3
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %42, label %26

26:                                               ; preds = %23
  %27 = bitcast i8* %3 to %struct.ASN1_VALUE_st*
  %28 = call i32 @ASN1_item_i2d(%struct.ASN1_VALUE_st* %27, i8** nonnull %7, %struct.ASN1_ITEM_st* %0) #3
  %29 = load i8*, i8** %7, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %31, label %32

31:                                               ; preds = %26
  call void @ERR_put_error(i32 11, i32 0, i32 65, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 98) #3
  br label %42

32:                                               ; preds = %26
  %33 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %2, i64 0, i32 2
  %34 = load i8*, i8** %33, align 8
  %35 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %2, i64 0, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = sext i32 %36 to i64
  %38 = sext i32 %28 to i64
  %39 = call i32 @EVP_DigestVerify(%struct.env_md_ctx_st* nonnull %6, i8* %34, i64 %37, i8* nonnull %29, i64 %38) #3
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %32
  call void @ERR_put_error(i32 11, i32 0, i32 6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 104) #3
  br label %42

42:                                               ; preds = %32, %23, %41, %31
  %43 = phi i32 [ 0, %31 ], [ 0, %41 ], [ 0, %23 ], [ 1, %32 ]
  %44 = load i8*, i8** %7, align 8
  call void @OPENSSL_free(i8* %44) #3
  %45 = call i32 @EVP_MD_CTX_cleanup(%struct.env_md_ctx_st* nonnull %6) #3
  br label %46

46:                                               ; preds = %42, %22, %12
  %47 = phi i32 [ 0, %22 ], [ %43, %42 ], [ 0, %12 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #3
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #3
  ret i32 %47
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #2

declare void @EVP_MD_CTX_init(%struct.env_md_ctx_st*) local_unnamed_addr #2

declare i32 @x509_digest_verify_init(%struct.env_md_ctx_st*, %struct.X509_algor_st*, %struct.evp_pkey_st*) local_unnamed_addr #2

declare i32 @ASN1_item_i2d(%struct.ASN1_VALUE_st*, i8**, %struct.ASN1_ITEM_st*) local_unnamed_addr #2

declare i32 @EVP_DigestVerify(%struct.env_md_ctx_st*, i8*, i64, i8*, i64) local_unnamed_addr #2

declare void @OPENSSL_free(i8*) local_unnamed_addr #2

declare i32 @EVP_MD_CTX_cleanup(%struct.env_md_ctx_st*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
