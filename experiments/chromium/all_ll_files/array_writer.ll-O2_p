; ModuleID = '../../ppapi/shared_impl/array_writer.cc'
source_filename = "../../ppapi/shared_impl/array_writer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ppapi::ArrayWriter" = type { %struct.PP_ArrayOutput }
%struct.PP_ArrayOutput = type { i8* (i8*, i32, i32)*, i8* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.scoped_refptr*, %class.scoped_refptr*, %"class.std::__1::__compressed_pair" }
%class.scoped_refptr = type { %"class.ppapi::Resource"* }
%"class.ppapi::Resource" = type { i32 (...)**, %"class.base::RefCountedThreadSafe", i32, %"class.ppapi::HostResource" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.ppapi::HostResource" = type { i32, i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.scoped_refptr* }
%"class.std::__1::vector.2" = type { %"class.std::__1::__vector_base.3" }
%"class.std::__1::__vector_base.3" = type { i32*, i32*, %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { i32* }
%"class.ppapi::PpapiGlobals" = type { i32 (...)**, %class.scoped_refptr.9 }
%class.scoped_refptr.9 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type opaque
%"class.ppapi::ResourceTracker" = type { i32 (...)**, %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.28", i32, %"class.std::__1::unique_ptr.52", %"class.base::WeakPtrFactory" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.18", %"class.std::__1::__compressed_pair.23", %"class.std::__1::__compressed_pair.25", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11", %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { i64 }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { float }
%"class.std::__1::unordered_map.28" = type { %"class.std::__1::__hash_table.29" }
%"class.std::__1::__hash_table.29" = type <{ %"class.std::__1::unique_ptr.30", %"class.std::__1::__compressed_pair.40", %"class.std::__1::__compressed_pair.45", %"class.std::__1::__compressed_pair.48", [4 x i8] }>
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32", %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"struct.std::__1::__hash_node_base.33"** }
%"struct.std::__1::__hash_node_base.33" = type { %"struct.std::__1::__hash_node_base.33"* }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.std::__1::__bucket_list_deallocator.35" }
%"class.std::__1::__bucket_list_deallocator.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.std::__1::__hash_node_base.33" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.base::ThreadChecker"* }
%"class.base::ThreadChecker" = type { i8 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.56 }
%class.scoped_refptr.56 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.57", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.57" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.58" }
%"struct.std::__1::atomic.58" = type { %"struct.std::__1::__atomic_base.59" }
%"struct.std::__1::__atomic_base.59" = type { %"struct.std::__1::__atomic_base.60" }
%"struct.std::__1::__atomic_base.60" = type { %"struct.std::__1::__cxx_atomic_impl.61" }
%"struct.std::__1::__cxx_atomic_impl.61" = type { %"struct.std::__1::__cxx_atomic_base_impl.62" }
%"struct.std::__1::__cxx_atomic_base_impl.62" = type { i8 }
%"class.std::__1::vector.63" = type { %"class.std::__1::__vector_base.64" }
%"class.std::__1::__vector_base.64" = type { %class.scoped_refptr.65*, %class.scoped_refptr.65*, %"class.std::__1::__compressed_pair.66" }
%class.scoped_refptr.65 = type { %"class.ppapi::Var"* }
%"class.ppapi::Var" = type { i32 (...)**, %"class.base::RefCounted", i32 }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %class.scoped_refptr.65* }
%struct.PP_Var = type { i32, i32, %union.PP_VarValue }
%union.PP_VarValue = type { double }
%"class.std::__1::vector.71" = type { %"class.std::__1::__vector_base.72" }
%"class.std::__1::__vector_base.72" = type { %struct.PP_Var*, %struct.PP_Var*, %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %struct.PP_Var* }
%"class.ppapi::VarTracker" = type { i32 (...)**, %"class.std::__1::unordered_map.78", i32, %"class.std::__1::unique_ptr.52" }
%"class.std::__1::unordered_map.78" = type { %"class.std::__1::__hash_table.79" }
%"class.std::__1::__hash_table.79" = type <{ %"class.std::__1::unique_ptr.80", %"class.std::__1::__compressed_pair.90", %"class.std::__1::__compressed_pair.95", %"class.std::__1::__compressed_pair.98", [4 x i8] }>
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82", %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"struct.std::__1::__hash_node_base.83"** }
%"struct.std::__1::__hash_node_base.83" = type { %"struct.std::__1::__hash_node_base.83"* }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.std::__1::__bucket_list_deallocator.85" }
%"class.std::__1::__bucket_list_deallocator.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"struct.std::__1::__hash_node_base.83" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.26" }

@_ZN5ppapi11ArrayWriterC1Ev = hidden unnamed_addr alias void (%"class.ppapi::ArrayWriter"*), void (%"class.ppapi::ArrayWriter"*)* @_ZN5ppapi11ArrayWriterC2Ev
@_ZN5ppapi11ArrayWriterC1ERK14PP_ArrayOutput = hidden unnamed_addr alias void (%"class.ppapi::ArrayWriter"*, %struct.PP_ArrayOutput*), void (%"class.ppapi::ArrayWriter"*, %struct.PP_ArrayOutput*)* @_ZN5ppapi11ArrayWriterC2ERK14PP_ArrayOutput
@_ZN5ppapi11ArrayWriterD1Ev = hidden unnamed_addr alias void (%"class.ppapi::ArrayWriter"*), void (%"class.ppapi::ArrayWriter"*)* @_ZN5ppapi11ArrayWriterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5ppapi11ArrayWriterC2Ev(%"class.ppapi::ArrayWriter"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.ppapi::ArrayWriter"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 16, i1 false) #5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5ppapi11ArrayWriter5ResetEv(%"class.ppapi::ArrayWriter"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = bitcast %"class.ppapi::ArrayWriter"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5ppapi11ArrayWriterC2ERK14PP_ArrayOutput(%"class.ppapi::ArrayWriter"* nocapture, %struct.PP_ArrayOutput* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.ppapi::ArrayWriter"* %0 to i8*
  %4 = bitcast %struct.PP_ArrayOutput* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5ppapi11ArrayWriterD2Ev(%"class.ppapi::ArrayWriter"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5ppapi11ArrayWriter19StoreResourceVectorERKNSt3__16vectorI13scoped_refptrINS_8ResourceEENS1_9allocatorIS5_EEEE(%"class.ppapi::ArrayWriter"* nocapture, %"class.std::__1::vector"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ppapi::ArrayWriter", %"class.ppapi::ArrayWriter"* %0, i64 0, i32 0, i32 0
  %4 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %3, align 8
  %5 = getelementptr inbounds %"class.ppapi::ArrayWriter", %"class.ppapi::ArrayWriter"* %0, i64 0, i32 0, i32 1
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %class.scoped_refptr** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = lshr exact i64 %12, 3
  %14 = trunc i64 %13 to i32
  %15 = tail call i8* %4(i8* %6, i32 %14, i32 4) #5
  %16 = bitcast %"class.ppapi::ArrayWriter"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #5
  %17 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %18 = load %class.scoped_refptr*, %class.scoped_refptr** %17, align 8
  %19 = load %class.scoped_refptr*, %class.scoped_refptr** %7, align 8
  %20 = icmp eq %class.scoped_refptr* %18, %19
  br i1 %20, label %39, label %21

21:                                               ; preds = %2
  %22 = icmp eq i8* %15, null
  br i1 %22, label %39, label %23

23:                                               ; preds = %21
  %24 = bitcast i8* %15 to i32*
  br label %25

25:                                               ; preds = %23, %25
  %26 = phi %class.scoped_refptr* [ %38, %25 ], [ %18, %23 ]
  %27 = phi i64 [ %32, %25 ], [ 0, %23 ]
  %28 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %26, i64 %27, i32 0
  %29 = load %"class.ppapi::Resource"*, %"class.ppapi::Resource"** %28, align 8
  %30 = tail call i32 @_ZN5ppapi8Resource12GetReferenceEv(%"class.ppapi::Resource"* %29) #5
  %31 = getelementptr inbounds i32, i32* %24, i64 %27
  store i32 %30, i32* %31, align 4
  %32 = add nuw i64 %27, 1
  %33 = load i64, i64* %8, align 8
  %34 = load i64, i64* %10, align 8
  %35 = sub i64 %33, %34
  %36 = ashr exact i64 %35, 3
  %37 = icmp ult i64 %32, %36
  %38 = inttoptr i64 %34 to %class.scoped_refptr*
  br i1 %37, label %25, label %39

39:                                               ; preds = %25, %21, %2
  %40 = phi i1 [ true, %2 ], [ false, %21 ], [ true, %25 ]
  ret i1 %40
}

declare i32 @_ZN5ppapi8Resource12GetReferenceEv(%"class.ppapi::Resource"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5ppapi11ArrayWriter19StoreResourceVectorERKNSt3__16vectorIiNS1_9allocatorIiEEEE(%"class.ppapi::ArrayWriter"* nocapture, %"class.std::__1::vector.2"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ppapi::ArrayWriter", %"class.ppapi::ArrayWriter"* %0, i64 0, i32 0, i32 0
  %4 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %3, align 8
  %5 = getelementptr inbounds %"class.ppapi::ArrayWriter", %"class.ppapi::ArrayWriter"* %0, i64 0, i32 0, i32 1
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %1, i64 0, i32 0, i32 1
  %8 = bitcast i32** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.2"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = lshr exact i64 %12, 2
  %14 = trunc i64 %13 to i32
  %15 = tail call i8* %4(i8* %6, i32 %14, i32 4) #5
  %16 = bitcast %"class.ppapi::ArrayWriter"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #5
  %17 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %1, i64 0, i32 0, i32 0
  %18 = load i32*, i32** %17, align 8
  %19 = load i32*, i32** %7, align 8
  %20 = icmp eq i32* %18, %19
  %21 = ptrtoint i32* %19 to i64
  %22 = ptrtoint i32* %18 to i64
  br i1 %20, label %47, label %23

23:                                               ; preds = %2
  %24 = icmp eq i8* %15, null
  br i1 %24, label %25, label %42

25:                                               ; preds = %23, %25
  %26 = phi i64 [ %36, %25 ], [ 0, %23 ]
  %27 = tail call %"class.ppapi::PpapiGlobals"* @_ZN5ppapi12PpapiGlobals3GetEv() #5
  %28 = bitcast %"class.ppapi::PpapiGlobals"* %27 to %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)***
  %29 = load %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)**, %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)*** %28, align 8
  %30 = getelementptr inbounds %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)*, %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)** %29, i64 2
  %31 = load %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)*, %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)** %30, align 8
  %32 = tail call %"class.ppapi::ResourceTracker"* %31(%"class.ppapi::PpapiGlobals"* %27) #5
  %33 = load i32*, i32** %17, align 8
  %34 = getelementptr inbounds i32, i32* %33, i64 %26
  %35 = load i32, i32* %34, align 4
  tail call void @_ZN5ppapi15ResourceTracker15ReleaseResourceEi(%"class.ppapi::ResourceTracker"* %32, i32 %35) #5
  %36 = add nuw i64 %26, 1
  %37 = load i64, i64* %8, align 8
  %38 = load i64, i64* %10, align 8
  %39 = sub i64 %37, %38
  %40 = ashr exact i64 %39, 2
  %41 = icmp ult i64 %36, %40
  br i1 %41, label %25, label %47

42:                                               ; preds = %23
  %43 = sub i64 %21, %22
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %47, label %45

45:                                               ; preds = %42
  %46 = bitcast i32* %18 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 4 %15, i8* align 4 %46, i64 %43, i1 false) #5
  br label %47

47:                                               ; preds = %25, %45, %42, %2
  %48 = phi i1 [ true, %2 ], [ true, %42 ], [ true, %45 ], [ false, %25 ]
  ret i1 %48
}

declare %"class.ppapi::PpapiGlobals"* @_ZN5ppapi12PpapiGlobals3GetEv() local_unnamed_addr #4

declare void @_ZN5ppapi15ResourceTracker15ReleaseResourceEi(%"class.ppapi::ResourceTracker"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5ppapi11ArrayWriter14StoreVarVectorERKNSt3__16vectorI13scoped_refptrINS_3VarEENS1_9allocatorIS5_EEEE(%"class.ppapi::ArrayWriter"* nocapture, %"class.std::__1::vector.63"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ppapi::ArrayWriter", %"class.ppapi::ArrayWriter"* %0, i64 0, i32 0, i32 0
  %4 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %3, align 8
  %5 = getelementptr inbounds %"class.ppapi::ArrayWriter", %"class.ppapi::ArrayWriter"* %0, i64 0, i32 0, i32 1
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.63", %"class.std::__1::vector.63"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %class.scoped_refptr.65** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.63"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = lshr exact i64 %12, 3
  %14 = trunc i64 %13 to i32
  %15 = tail call i8* %4(i8* %6, i32 %14, i32 16) #5
  %16 = bitcast %"class.ppapi::ArrayWriter"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #5
  %17 = getelementptr inbounds %"class.std::__1::vector.63", %"class.std::__1::vector.63"* %1, i64 0, i32 0, i32 0
  %18 = load %class.scoped_refptr.65*, %class.scoped_refptr.65** %17, align 8
  %19 = load %class.scoped_refptr.65*, %class.scoped_refptr.65** %7, align 8
  %20 = icmp eq %class.scoped_refptr.65* %18, %19
  br i1 %20, label %44, label %21

21:                                               ; preds = %2
  %22 = icmp eq i8* %15, null
  br i1 %22, label %44, label %23

23:                                               ; preds = %21
  %24 = bitcast i8* %15 to %struct.PP_Var*
  br label %25

25:                                               ; preds = %23, %25
  %26 = phi %class.scoped_refptr.65* [ %43, %25 ], [ %18, %23 ]
  %27 = phi i64 [ %37, %25 ], [ 0, %23 ]
  %28 = getelementptr inbounds %class.scoped_refptr.65, %class.scoped_refptr.65* %26, i64 %27, i32 0
  %29 = load %"class.ppapi::Var"*, %"class.ppapi::Var"** %28, align 8
  %30 = tail call { i64, i64 } @_ZN5ppapi3Var8GetPPVarEv(%"class.ppapi::Var"* %29) #5
  %31 = extractvalue { i64, i64 } %30, 0
  %32 = extractvalue { i64, i64 } %30, 1
  %33 = getelementptr inbounds %struct.PP_Var, %struct.PP_Var* %24, i64 %27
  %34 = bitcast %struct.PP_Var* %33 to i64*
  store i64 %31, i64* %34, align 8
  %35 = getelementptr inbounds %struct.PP_Var, %struct.PP_Var* %24, i64 %27, i32 2
  %36 = bitcast %union.PP_VarValue* %35 to i64*
  store i64 %32, i64* %36, align 8
  %37 = add nuw i64 %27, 1
  %38 = load i64, i64* %8, align 8
  %39 = load i64, i64* %10, align 8
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 3
  %42 = icmp ult i64 %37, %41
  %43 = inttoptr i64 %39 to %class.scoped_refptr.65*
  br i1 %42, label %25, label %44

44:                                               ; preds = %25, %21, %2
  %45 = phi i1 [ true, %2 ], [ false, %21 ], [ true, %25 ]
  ret i1 %45
}

declare { i64, i64 } @_ZN5ppapi3Var8GetPPVarEv(%"class.ppapi::Var"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5ppapi11ArrayWriter14StoreVarVectorERKNSt3__16vectorI6PP_VarNS1_9allocatorIS3_EEEE(%"class.ppapi::ArrayWriter"* nocapture, %"class.std::__1::vector.71"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ppapi::ArrayWriter", %"class.ppapi::ArrayWriter"* %0, i64 0, i32 0, i32 0
  %4 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %3, align 8
  %5 = getelementptr inbounds %"class.ppapi::ArrayWriter", %"class.ppapi::ArrayWriter"* %0, i64 0, i32 0, i32 1
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.71", %"class.std::__1::vector.71"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %struct.PP_Var** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.71"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = lshr exact i64 %12, 4
  %14 = trunc i64 %13 to i32
  %15 = tail call i8* %4(i8* %6, i32 %14, i32 16) #5
  %16 = bitcast %"class.ppapi::ArrayWriter"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #5
  %17 = getelementptr inbounds %"class.std::__1::vector.71", %"class.std::__1::vector.71"* %1, i64 0, i32 0, i32 0
  %18 = load %struct.PP_Var*, %struct.PP_Var** %17, align 8
  %19 = load %struct.PP_Var*, %struct.PP_Var** %7, align 8
  %20 = icmp eq %struct.PP_Var* %18, %19
  %21 = ptrtoint %struct.PP_Var* %19 to i64
  %22 = ptrtoint %struct.PP_Var* %18 to i64
  br i1 %20, label %47, label %23

23:                                               ; preds = %2
  %24 = icmp eq i8* %15, null
  br i1 %24, label %25, label %42

25:                                               ; preds = %23, %25
  %26 = phi i64 [ %36, %25 ], [ 0, %23 ]
  %27 = tail call %"class.ppapi::PpapiGlobals"* @_ZN5ppapi12PpapiGlobals3GetEv() #5
  %28 = bitcast %"class.ppapi::PpapiGlobals"* %27 to %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)***
  %29 = load %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)**, %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)*** %28, align 8
  %30 = getelementptr inbounds %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)*, %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)** %29, i64 3
  %31 = load %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)*, %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)** %30, align 8
  %32 = tail call %"class.ppapi::VarTracker"* %31(%"class.ppapi::PpapiGlobals"* %27) #5
  %33 = load %struct.PP_Var*, %struct.PP_Var** %17, align 8
  %34 = getelementptr inbounds %struct.PP_Var, %struct.PP_Var* %33, i64 %26
  %35 = tail call zeroext i1 @_ZN5ppapi10VarTracker10ReleaseVarERK6PP_Var(%"class.ppapi::VarTracker"* %32, %struct.PP_Var* dereferenceable(16) %34) #5
  %36 = add nuw i64 %26, 1
  %37 = load i64, i64* %8, align 8
  %38 = load i64, i64* %10, align 8
  %39 = sub i64 %37, %38
  %40 = ashr exact i64 %39, 4
  %41 = icmp ult i64 %36, %40
  br i1 %41, label %25, label %47

42:                                               ; preds = %23
  %43 = sub i64 %21, %22
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %47, label %45

45:                                               ; preds = %42
  %46 = bitcast %struct.PP_Var* %18 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %15, i8* align 8 %46, i64 %43, i1 false) #5
  br label %47

47:                                               ; preds = %25, %45, %42, %2
  %48 = phi i1 [ true, %2 ], [ true, %42 ], [ true, %45 ], [ false, %25 ]
  ret i1 %48
}

declare zeroext i1 @_ZN5ppapi10VarTracker10ReleaseVarERK6PP_Var(%"class.ppapi::VarTracker"*, %struct.PP_Var* dereferenceable(16)) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
