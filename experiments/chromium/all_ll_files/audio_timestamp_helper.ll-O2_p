; ModuleID = '../../media/base/audio_timestamp_helper.cc'
source_filename = "../../media/base/audio_timestamp_helper.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.media::AudioTimestampHelper" = type { double, %"class.base::TimeDelta", i64 }
%"class.base::TimeDelta" = type { i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZNK4base9TimeDeltamiES0_ = comdat any

@.str = private unnamed_addr constant [23 x i8] c"delta_ != other.delta_\00", align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.2 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1

@_ZN5media20AudioTimestampHelperC1Ei = hidden unnamed_addr alias void (%"class.media::AudioTimestampHelper"*, i32), void (%"class.media::AudioTimestampHelper"*, i32)* @_ZN5media20AudioTimestampHelperC2Ei

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN5media20AudioTimestampHelper12FramesToTimeEli(i64, i32) local_unnamed_addr #0 align 2 {
  %3 = mul nsw i64 %0, 1000000
  %4 = sext i32 %1 to i64
  %5 = sdiv i64 %3, %4
  ret i64 %5
}

; Function Attrs: nounwind readnone ssp uwtable
define hidden i64 @_ZN5media20AudioTimestampHelper12TimeToFramesEN4base9TimeDeltaEi(i64, i32) local_unnamed_addr #1 align 2 {
  %3 = add i64 %0, -9223372036854775807
  %4 = icmp ult i64 %3, 2
  br i1 %4, label %8, label %5

5:                                                ; preds = %2
  %6 = sitofp i64 %0 to double
  %7 = fdiv double %6, 1.000000e+06
  br label %11

8:                                                ; preds = %2
  %9 = icmp slt i64 %0, 0
  %10 = select i1 %9, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %11

11:                                               ; preds = %5, %8
  %12 = phi double [ %10, %8 ], [ %7, %5 ]
  %13 = sitofp i32 %1 to double
  %14 = fmul double %12, %13
  %15 = tail call double @llvm.round.f64(double %14)
  %16 = fptosi double %15 to i64
  ret i64 %16
}

; Function Attrs: nounwind readnone speculatable
declare double @llvm.round.f64(double) #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5media20AudioTimestampHelperC2Ei(%"class.media::AudioTimestampHelper"* nocapture, i32) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.media::AudioTimestampHelper", %"class.media::AudioTimestampHelper"* %0, i64 0, i32 1, i32 0
  %4 = bitcast i64* %3 to <2 x i64>*
  store <2 x i64> <i64 -9223372036854775808, i64 0>, <2 x i64>* %4, align 8
  %5 = sitofp i32 %1 to double
  %6 = fdiv double 1.000000e+06, %5
  %7 = getelementptr inbounds %"class.media::AudioTimestampHelper", %"class.media::AudioTimestampHelper"* %0, i64 0, i32 0
  store double %6, double* %7, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5media20AudioTimestampHelper16SetBaseTimestampEN4base9TimeDeltaE(%"class.media::AudioTimestampHelper"* nocapture, i64) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.media::AudioTimestampHelper", %"class.media::AudioTimestampHelper"* %0, i64 0, i32 1, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds %"class.media::AudioTimestampHelper", %"class.media::AudioTimestampHelper"* %0, i64 0, i32 2
  store i64 0, i64* %4, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK5media20AudioTimestampHelper14base_timestampEv(%"class.media::AudioTimestampHelper"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.media::AudioTimestampHelper", %"class.media::AudioTimestampHelper"* %0, i64 0, i32 1, i32 0
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5media20AudioTimestampHelper9AddFramesEi(%"class.media::AudioTimestampHelper"* nocapture, i32) local_unnamed_addr #6 align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds %"class.media::AudioTimestampHelper", %"class.media::AudioTimestampHelper"* %0, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = add nsw i64 %5, %3
  store i64 %6, i64* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5media20AudioTimestampHelper12GetTimestampEv(%"class.media::AudioTimestampHelper"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.media::AudioTimestampHelper", %"class.media::AudioTimestampHelper"* %0, i64 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.media::AudioTimestampHelper", %"class.media::AudioTimestampHelper"* %0, i64 0, i32 0
  %6 = load double, double* %5, align 8
  %7 = sitofp i64 %4 to double
  %8 = fmul double %6, %7
  %9 = fptosi double %8 to i64
  %10 = add i64 %9, -9223372036854775807
  %11 = icmp ult i64 %10, 2
  %12 = getelementptr inbounds %"class.media::AudioTimestampHelper", %"class.media::AudioTimestampHelper"* %0, i64 0, i32 1, i32 0
  %13 = load i64, i64* %12, align 8
  br i1 %11, label %21, label %14

14:                                               ; preds = %1
  %15 = icmp slt i64 %9, 0
  %16 = select i1 %15, i64 -9223372036854775808, i64 9223372036854775807
  %17 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %13, i64 %9) #10
  %18 = extractvalue { i64, i1 } %17, 1
  %19 = extractvalue { i64, i1 } %17, 0
  %20 = select i1 %18, i64 %16, i64 %19, !prof !2
  br label %29

21:                                               ; preds = %1
  %22 = add i64 %13, -9223372036854775807
  %23 = icmp ugt i64 %22, 1
  %24 = icmp eq i64 %13, %9
  %25 = or i1 %24, %23
  br i1 %25, label %29, label %26

26:                                               ; preds = %21
  %27 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0)) #10
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #10
  br label %29

29:                                               ; preds = %14, %21, %26
  %30 = phi i64 [ %20, %14 ], [ %9, %21 ], [ %9, %26 ]
  ret i64 %30
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5media20AudioTimestampHelper16ComputeTimestampEl(%"class.media::AudioTimestampHelper"* nocapture readonly, i64) local_unnamed_addr #7 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.media::AudioTimestampHelper", %"class.media::AudioTimestampHelper"* %0, i64 0, i32 0
  %5 = load double, double* %4, align 8
  %6 = sitofp i64 %1 to double
  %7 = fmul double %5, %6
  %8 = fptosi double %7 to i64
  %9 = add i64 %8, -9223372036854775807
  %10 = icmp ult i64 %9, 2
  %11 = getelementptr inbounds %"class.media::AudioTimestampHelper", %"class.media::AudioTimestampHelper"* %0, i64 0, i32 1, i32 0
  %12 = load i64, i64* %11, align 8
  br i1 %10, label %20, label %13

13:                                               ; preds = %2
  %14 = icmp slt i64 %8, 0
  %15 = select i1 %14, i64 -9223372036854775808, i64 9223372036854775807
  %16 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %12, i64 %8) #10
  %17 = extractvalue { i64, i1 } %16, 1
  %18 = extractvalue { i64, i1 } %16, 0
  %19 = select i1 %17, i64 %15, i64 %18, !prof !2
  br label %28

20:                                               ; preds = %2
  %21 = add i64 %12, -9223372036854775807
  %22 = icmp ugt i64 %21, 1
  %23 = icmp eq i64 %12, %8
  %24 = or i1 %23, %22
  br i1 %24, label %28, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0)) #10
  %27 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #10
  br label %28

28:                                               ; preds = %13, %20, %25
  %29 = phi i64 [ %19, %13 ], [ %8, %20 ], [ %8, %25 ]
  ret i64 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5media20AudioTimestampHelper16GetFrameDurationEi(%"class.media::AudioTimestampHelper"* nocapture readonly, i32) local_unnamed_addr #7 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.base::TimeDelta", align 8
  %6 = bitcast %"class.base::TimeDelta"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %5, i64 0, i32 0
  store i64 -6148914691236517206, i64* %7, align 8
  %8 = getelementptr inbounds %"class.media::AudioTimestampHelper", %"class.media::AudioTimestampHelper"* %0, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = sext i32 %1 to i64
  %11 = add nsw i64 %9, %10
  %12 = getelementptr inbounds %"class.media::AudioTimestampHelper", %"class.media::AudioTimestampHelper"* %0, i64 0, i32 0
  %13 = load double, double* %12, align 8
  %14 = sitofp i64 %11 to double
  %15 = fmul double %13, %14
  %16 = fptosi double %15 to i64
  %17 = add i64 %16, -9223372036854775807
  %18 = icmp ult i64 %17, 2
  %19 = getelementptr inbounds %"class.media::AudioTimestampHelper", %"class.media::AudioTimestampHelper"* %0, i64 0, i32 1, i32 0
  %20 = load i64, i64* %19, align 8
  br i1 %18, label %28, label %21

21:                                               ; preds = %2
  %22 = icmp slt i64 %16, 0
  %23 = select i1 %22, i64 -9223372036854775808, i64 9223372036854775807
  %24 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %20, i64 %16) #10
  %25 = extractvalue { i64, i1 } %24, 1
  %26 = extractvalue { i64, i1 } %24, 0
  %27 = select i1 %25, i64 %23, i64 %26, !prof !2
  br label %39

28:                                               ; preds = %2
  %29 = add i64 %20, -9223372036854775807
  %30 = icmp ugt i64 %29, 1
  %31 = icmp eq i64 %20, %16
  %32 = or i1 %30, %31
  br i1 %32, label %39, label %33

33:                                               ; preds = %28
  %34 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0)) #10
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #10
  %36 = load i64, i64* %8, align 8
  %37 = load double, double* %12, align 8
  %38 = load i64, i64* %19, align 8
  br label %39

39:                                               ; preds = %21, %28, %33
  %40 = phi i64 [ %20, %21 ], [ %20, %28 ], [ %38, %33 ]
  %41 = phi double [ %13, %21 ], [ %13, %28 ], [ %37, %33 ]
  %42 = phi i64 [ %9, %21 ], [ %9, %28 ], [ %36, %33 ]
  %43 = phi i64 [ %27, %21 ], [ %16, %28 ], [ %16, %33 ]
  store i64 %43, i64* %7, align 8
  %44 = sitofp i64 %42 to double
  %45 = fmul double %41, %44
  %46 = fptosi double %45 to i64
  %47 = add i64 %46, -9223372036854775807
  %48 = icmp ult i64 %47, 2
  br i1 %48, label %56, label %49

49:                                               ; preds = %39
  %50 = icmp slt i64 %46, 0
  %51 = select i1 %50, i64 -9223372036854775808, i64 9223372036854775807
  %52 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %40, i64 %46) #10
  %53 = extractvalue { i64, i1 } %52, 1
  %54 = extractvalue { i64, i1 } %52, 0
  %55 = select i1 %53, i64 %51, i64 %54, !prof !2
  br label %64

56:                                               ; preds = %39
  %57 = add i64 %40, -9223372036854775807
  %58 = icmp ugt i64 %57, 1
  %59 = icmp eq i64 %40, %46
  %60 = or i1 %59, %58
  br i1 %60, label %64, label %61

61:                                               ; preds = %56
  %62 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0)) #10
  %63 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #10
  br label %64

64:                                               ; preds = %49, %56, %61
  %65 = phi i64 [ %55, %49 ], [ %46, %56 ], [ %46, %61 ]
  %66 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull %5, i64 %65)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  ret i64 %66
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"*, i64) local_unnamed_addr #7 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = add i64 %1, -9223372036854775807
  %7 = icmp ult i64 %6, 2
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp sgt i64 %1, -1
  %12 = select i1 %11, i64 -9223372036854775808, i64 9223372036854775807
  %13 = tail call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %10, i64 %1) #10
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = extractvalue { i64, i1 } %13, 0
  %16 = select i1 %14, i64 %12, i64 %15, !prof !2
  ret i64 %16

17:                                               ; preds = %2
  %18 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #10
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp eq i64 %21, %1
  br i1 %23, label %25, label %24

24:                                               ; preds = %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %19, align 8
  br label %34

25:                                               ; preds = %17
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #10
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %26, i8* %27) #10
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %19, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i32 387, %"class.logging::CheckOpResult"* nonnull %4) #10
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #10
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #10
  %35 = icmp slt i64 %1, 0
  %36 = select i1 %35, i64 9223372036854775807, i64 -9223372036854775808
  ret i64 %36
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5media20AudioTimestampHelper17GetFramesToTargetEN4base9TimeDeltaE(%"class.media::AudioTimestampHelper"* nocapture readonly, i64) local_unnamed_addr #7 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.base::TimeDelta", align 8
  %5 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %4, i64 0, i32 0
  store i64 %1, i64* %5, align 8
  %6 = getelementptr inbounds %"class.media::AudioTimestampHelper", %"class.media::AudioTimestampHelper"* %0, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.media::AudioTimestampHelper", %"class.media::AudioTimestampHelper"* %0, i64 0, i32 0
  %9 = load double, double* %8, align 8
  %10 = sitofp i64 %7 to double
  %11 = fmul double %9, %10
  %12 = fptosi double %11 to i64
  %13 = add i64 %12, -9223372036854775807
  %14 = icmp ult i64 %13, 2
  %15 = getelementptr inbounds %"class.media::AudioTimestampHelper", %"class.media::AudioTimestampHelper"* %0, i64 0, i32 1, i32 0
  %16 = load i64, i64* %15, align 8
  br i1 %14, label %24, label %17

17:                                               ; preds = %2
  %18 = icmp slt i64 %12, 0
  %19 = select i1 %18, i64 -9223372036854775808, i64 9223372036854775807
  %20 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %16, i64 %12) #10
  %21 = extractvalue { i64, i1 } %20, 1
  %22 = extractvalue { i64, i1 } %20, 0
  %23 = select i1 %21, i64 %19, i64 %22, !prof !2
  br label %32

24:                                               ; preds = %2
  %25 = add i64 %16, -9223372036854775807
  %26 = icmp ugt i64 %25, 1
  %27 = icmp eq i64 %16, %12
  %28 = or i1 %27, %26
  br i1 %28, label %32, label %29

29:                                               ; preds = %24
  %30 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0)) #10
  %31 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #10
  br label %32

32:                                               ; preds = %17, %24, %29
  %33 = phi i64 [ %23, %17 ], [ %12, %24 ], [ %12, %29 ]
  %34 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull %4, i64 %33)
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %47, label %36

36:                                               ; preds = %32
  %37 = load i64, i64* %15, align 8
  %38 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull %4, i64 %37)
  %39 = load double, double* %8, align 8
  %40 = fmul double %39, 5.000000e-01
  %41 = sitofp i64 %38 to double
  %42 = fadd double %40, %41
  %43 = fdiv double %42, %39
  %44 = fptosi double %43 to i64
  %45 = load i64, i64* %6, align 8
  %46 = sub nsw i64 %44, %45
  br label %47

47:                                               ; preds = %32, %36
  %48 = phi i64 [ %46, %36 ], [ 0, %32 ]
  ret i64 %48
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #8

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #9

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.ssub.with.overflow.i64(i64, i64) #2

declare i8* @_ZN7logging15CheckOpValueStrEl(i64) local_unnamed_addr #8

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #8

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #8

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #2

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone speculatable }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
