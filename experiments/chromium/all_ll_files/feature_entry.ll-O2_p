; ModuleID = '../../components/flags_ui/feature_entry.cc'
source_filename = "../../components/flags_ui/feature_entry.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.flags_ui::FeatureEntry" = type { i8*, i8*, i8*, i16, i16, %union.anon }
%union.anon = type { %struct.anon }
%struct.anon = type { i8*, i8*, i8*, i8* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.2 }
%union.anon.2 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.3 }
%struct.anon.3 = type { i8 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::allocator" = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::basic_string.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.8 }
%union.anon.8 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.9 }
%struct.anon.9 = type { %"struct.std::__1::__padding.10", i8 }
%"struct.std::__1::__padding.10" = type { [1 x i8] }
%"struct.flags_ui::FeatureEntry::FeatureVariation" = type { i8*, %"struct.flags_ui::FeatureEntry::FeatureParam"*, i32, i8* }
%"struct.flags_ui::FeatureEntry::FeatureParam" = type { i8*, i8* }
%"struct.flags_ui::FeatureEntry::Choice" = type { i8*, i8*, i8* }

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

@_ZN8flags_ui19kMultiSeparatorCharE = hidden local_unnamed_addr constant i8 64, align 1
@_ZN8flags_ui31kGenericExperimentChoiceDefaultE = hidden constant [8 x i8] c"Default\00", align 1
@_ZN8flags_ui31kGenericExperimentChoiceEnabledE = hidden constant [8 x i8] c"Enabled\00", align 1
@_ZN8flags_ui32kGenericExperimentChoiceDisabledE = hidden constant [9 x i8] c"Disabled\00", align 1
@_ZN8flags_ui33kGenericExperimentChoiceAutomaticE = hidden local_unnamed_addr constant [10 x i8] c"Automatic\00", align 1
@__const._ZNK8flags_ui12FeatureEntry20DescriptionForOptionEi.kEnableDisableDescriptions = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZN8flags_ui31kGenericExperimentChoiceDefaultE, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZN8flags_ui31kGenericExperimentChoiceEnabledE, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZN8flags_ui32kGenericExperimentChoiceDisabledE, i32 0, i32 0)], align 16
@.str = private unnamed_addr constant [2 x i16] [i16 32, i16 0], align 2
@_ZN8flags_ui7testing15kMultiSeparatorE = hidden constant [2 x i8] c"@\00", align 1
@.str.2 = private unnamed_addr constant [34 x i8] c"../../base/strings/string_piece.h\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.4 = private unnamed_addr constant [29 x i8] c"../../base/containers/span.h\00", align 1
@.str.5 = private unnamed_addr constant [13 x i8] c"idx < size()\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8flags_ui12FeatureEntry19InternalNameMatchesERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"struct.flags_ui::FeatureEntry"* nocapture readonly, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca i32, align 4
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %13 = select i1 %9, i8* %11, i8* %12
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %8 to i64
  %17 = select i1 %9, i64 %15, i64 %16
  %18 = getelementptr inbounds %"struct.flags_ui::FeatureEntry", %"struct.flags_ui::FeatureEntry"* %0, i64 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = icmp eq i8* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %2
  %22 = tail call i64 @strlen(i8* nonnull %19) #10
  br label %26

23:                                               ; preds = %2
  %24 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #10
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #10
  br label %26

26:                                               ; preds = %21, %23
  %27 = phi i64 [ 0, %23 ], [ %22, %21 ]
  %28 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %13, i64 %17, i8* %19, i64 %27, i32 0) #10
  br i1 %28, label %29, label %103

29:                                               ; preds = %26
  %30 = load i8*, i8** %18, align 8
  %31 = call i64 @strlen(i8* %30) #11
  %32 = getelementptr inbounds %"struct.flags_ui::FeatureEntry", %"struct.flags_ui::FeatureEntry"* %0, i64 0, i32 4
  %33 = load i16, i16* %32, align 2
  %34 = zext i16 %33 to i32
  %35 = add nsw i32 %34, -2
  %36 = icmp ult i32 %35, 4
  br i1 %36, label %44, label %37

37:                                               ; preds = %29
  %38 = load i8, i8* %7, align 1
  %39 = icmp slt i8 %38, 0
  %40 = load i64, i64* %14, align 8
  %41 = zext i8 %38 to i64
  %42 = select i1 %39, i64 %40, i64 %41
  %43 = icmp eq i64 %42, %31
  br label %103

44:                                               ; preds = %29
  %45 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %45) #10
  store i32 -1, i32* %4, align 4
  %46 = load i8, i8* %7, align 1
  %47 = icmp slt i8 %46, 0
  %48 = load i64, i64* %14, align 8
  %49 = zext i8 %46 to i64
  %50 = select i1 %47, i64 %48, i64 %49
  %51 = add i64 %31, 1
  %52 = icmp ugt i64 %50, %51
  br i1 %52, label %53, label %101

53:                                               ; preds = %44
  %54 = load i8*, i8** %10, align 8
  %55 = select i1 %47, i8* %54, i8* %12
  %56 = getelementptr inbounds i8, i8* %55, i64 %31
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 64
  br i1 %58, label %59, label %101

59:                                               ; preds = %53
  %60 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #10
  %61 = bitcast %"class.std::__1::basic_string"* %1 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %5, %"class.std::__1::basic_string"* dereferenceable(24) %1, i64 %51, i64 -1, %"class.std::__1::allocator"* dereferenceable(1) %61) #10
  %62 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  %64 = load i8, i8* %63, align 1
  %65 = icmp slt i8 %64, 0
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load i8*, i8** %66, align 8
  %68 = select i1 %65, i8* %67, i8* %60
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = zext i8 %64 to i64
  %72 = select i1 %65, i64 %70, i64 %71
  %73 = call zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(i8* %68, i64 %72, i32* nonnull %4) #10
  %74 = load i32, i32* %4, align 4
  %75 = icmp sgt i32 %74, -1
  %76 = and i1 %73, %75
  br i1 %76, label %77, label %94

77:                                               ; preds = %59
  %78 = load i16, i16* %32, align 2
  switch i16 %78, label %90 [
    i16 3, label %91
    i16 4, label %91
    i16 2, label %79
    i16 5, label %84
  ]

79:                                               ; preds = %77
  %80 = getelementptr inbounds %"struct.flags_ui::FeatureEntry", %"struct.flags_ui::FeatureEntry"* %0, i64 0, i32 5
  %81 = bitcast %union.anon* %80 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = trunc i64 %82 to i32
  br label %91

84:                                               ; preds = %77
  %85 = getelementptr inbounds %"struct.flags_ui::FeatureEntry", %"struct.flags_ui::FeatureEntry"* %0, i64 0, i32 5, i32 0, i32 1
  %86 = bitcast i8** %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = trunc i64 %87 to i32
  %89 = add i32 %88, 3
  br label %91

90:                                               ; preds = %77
  br label %91

91:                                               ; preds = %77, %77, %79, %84, %90
  %92 = phi i32 [ 0, %90 ], [ %89, %84 ], [ %83, %79 ], [ 3, %77 ], [ 3, %77 ]
  %93 = icmp slt i32 %74, %92
  br label %94

94:                                               ; preds = %91, %59
  %95 = phi i1 [ false, %59 ], [ %93, %91 ]
  %96 = load i8, i8* %63, align 1
  %97 = icmp slt i8 %96, 0
  br i1 %97, label %98, label %100

98:                                               ; preds = %94
  %99 = load i8*, i8** %66, align 8
  call void @_ZdlPv(i8* %99) #12
  br label %100

100:                                              ; preds = %94, %98
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #10
  br label %101

101:                                              ; preds = %44, %53, %100
  %102 = phi i1 [ %95, %100 ], [ false, %53 ], [ false, %44 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %45) #10
  br label %103

103:                                              ; preds = %37, %101, %26
  %104 = phi i1 [ false, %26 ], [ %102, %101 ], [ %43, %37 ]
  ret i1 %104
}

declare zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8*, i64, i8*, i64, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #3

declare zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(i8*, i64, i32*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK8flags_ui12FeatureEntry10NumOptionsEv(%"struct.flags_ui::FeatureEntry"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"struct.flags_ui::FeatureEntry", %"struct.flags_ui::FeatureEntry"* %0, i64 0, i32 4
  %3 = load i16, i16* %2, align 2
  switch i16 %3, label %15 [
    i16 3, label %16
    i16 4, label %16
    i16 2, label %4
    i16 5, label %9
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"struct.flags_ui::FeatureEntry", %"struct.flags_ui::FeatureEntry"* %0, i64 0, i32 5
  %6 = bitcast %union.anon* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = trunc i64 %7 to i32
  br label %16

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"struct.flags_ui::FeatureEntry", %"struct.flags_ui::FeatureEntry"* %0, i64 0, i32 5, i32 0, i32 1
  %11 = bitcast i8** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = trunc i64 %12 to i32
  %14 = add i32 %13, 3
  br label %16

15:                                               ; preds = %1
  br label %16

16:                                               ; preds = %1, %1, %15, %9, %4
  %17 = phi i32 [ 0, %15 ], [ %14, %9 ], [ %8, %4 ], [ 3, %1 ], [ 3, %1 ]
  ret i32 %17
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8flags_ui12FeatureEntry13NameForOptionEi(%"class.std::__1::basic_string"* noalias nocapture sret, %"struct.flags_ui::FeatureEntry"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #10
  %8 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #10
  %9 = getelementptr inbounds %"struct.flags_ui::FeatureEntry", %"struct.flags_ui::FeatureEntry"* %1, i64 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = tail call i64 @strlen(i8* %10) #10
  %12 = icmp ugt i64 %11, -17
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  %14 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %14) #13
  unreachable

15:                                               ; preds = %3
  %16 = icmp ult i64 %11, 23
  br i1 %16, label %25, label %17

17:                                               ; preds = %15
  %18 = add nuw i64 %11, 16
  %19 = and i64 %18, -16
  %20 = tail call i8* @_Znwm(i64 %19) #12
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %20, i8** %21, align 8
  %22 = or i64 %19, -9223372036854775808
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %11, i64* %24, align 8
  br label %30

25:                                               ; preds = %15
  %26 = trunc i64 %11 to i8
  %27 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  store i8 %26, i8* %28, align 1
  %29 = icmp eq i64 %11, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %25, %17
  %31 = phi i8* [ %20, %17 ], [ %8, %25 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %31, i8* align 1 %10, i64 %11, i1 false) #10
  br label %32

32:                                               ; preds = %25, %30
  %33 = phi i8* [ %8, %25 ], [ %31, %30 ]
  %34 = getelementptr inbounds i8, i8* %33, i64 %11
  store i8 0, i8* %34, align 1
  %35 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @_ZN8flags_ui7testing15kMultiSeparatorE, i64 0, i64 0)) #10, !noalias !2
  %36 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %36, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 24, i1 false) #10, !noalias !2
  %37 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #10
  call void @_ZN4base14NumberToStringEi(%"class.std::__1::basic_string"* nonnull sret %6, i32 %2) #10
  %38 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1, !noalias !5
  %41 = icmp slt i8 %40, 0
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8, !noalias !5
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %45 = load i64, i64* %44, align 8, !noalias !5
  %46 = zext i8 %40 to i64
  %47 = select i1 %41, i8* %43, i8* %37
  %48 = select i1 %41, i64 %45, i64 %46
  %49 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %4, i8* %47, i64 %48) #10, !noalias !5
  %50 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %51 = bitcast %"class.std::__1::basic_string"* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %51, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 24, i1 false) #10, !noalias !5
  %52 = load i8, i8* %39, align 1
  %53 = icmp slt i8 %52, 0
  br i1 %53, label %54, label %56

54:                                               ; preds = %32
  %55 = load i8*, i8** %42, align 8
  call void @_ZdlPv(i8* %55) #12
  br label %56

56:                                               ; preds = %32, %54
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #10
  %57 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  %59 = load i8, i8* %58, align 1
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %61, label %64

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8
  call void @_ZdlPv(i8* %63) #12
  br label %64

64:                                               ; preds = %56, %61
  %65 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = load i8, i8* %66, align 1
  %68 = icmp slt i8 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  call void @_ZdlPv(i8* %71) #12
  br label %72

72:                                               ; preds = %64, %69
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #10
  ret void
}

declare void @_ZN4base14NumberToStringEi(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8flags_ui12FeatureEntry20DescriptionForOptionEi(%"class.std::__1::basic_string.5"* noalias sret, %"struct.flags_ui::FeatureEntry"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.std::__1::basic_string.5", align 8
  %9 = alloca %"class.std::__1::basic_string.5", align 8
  %10 = alloca %"class.std::__1::basic_string.5", align 8
  %11 = getelementptr inbounds %"struct.flags_ui::FeatureEntry", %"struct.flags_ui::FeatureEntry"* %1, i64 0, i32 4
  %12 = load i16, i16* %11, align 2
  switch i16 %12, label %300 [
    i16 3, label %13
    i16 4, label %13
    i16 5, label %16
  ]

13:                                               ; preds = %3, %3
  %14 = sext i32 %2 to i64
  %15 = getelementptr inbounds [3 x i8*], [3 x i8*]* @__const._ZNK8flags_ui12FeatureEntry20DescriptionForOptionEi.kEnableDisableDescriptions, i64 0, i64 %14
  br label %314

16:                                               ; preds = %3
  switch i32 %2, label %18 [
    i32 0, label %318
    i32 1, label %17
  ]

17:                                               ; preds = %16
  br label %318

18:                                               ; preds = %16
  %19 = getelementptr inbounds %"struct.flags_ui::FeatureEntry", %"struct.flags_ui::FeatureEntry"* %1, i64 0, i32 5, i32 0, i32 1
  %20 = bitcast i8** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = trunc i64 %21 to i32
  %23 = add i32 %22, 2
  %24 = icmp sgt i32 %23, %2
  br i1 %24, label %25, label %318

25:                                               ; preds = %18
  %26 = bitcast %"class.std::__1::basic_string.5"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #10
  %27 = bitcast %"class.std::__1::basic_string.5"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #10
  call void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.5"* nonnull sret %9, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZN8flags_ui31kGenericExperimentChoiceEnabledE, i64 0, i64 0), i64 7) #10
  %28 = add nsw i32 %2, -2
  %29 = bitcast %"class.std::__1::basic_string.5"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %29, i64 0, i32 1, i32 1
  %31 = load i8, i8* %30, align 1, !noalias !8
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %40

33:                                               ; preds = %25
  %34 = getelementptr inbounds %"class.std::__1::basic_string.5", %"class.std::__1::basic_string.5"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %35 = load i64, i64* %34, align 8, !noalias !8
  %36 = and i64 %35, 9223372036854775807
  %37 = add nsw i64 %36, -1
  %38 = getelementptr inbounds %"class.std::__1::basic_string.5", %"class.std::__1::basic_string.5"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8, !noalias !8
  br label %42

40:                                               ; preds = %25
  %41 = zext i8 %31 to i64
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i64 [ %37, %33 ], [ 10, %40 ]
  %44 = phi i64 [ %39, %33 ], [ %41, %40 ]
  %45 = icmp eq i64 %43, %44
  br i1 %45, label %61, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.std::__1::basic_string.5", %"class.std::__1::basic_string.5"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load i16*, i16** %47, align 8, !noalias !8
  %49 = bitcast %"class.std::__1::basic_string.5"* %9 to i16*
  %50 = select i1 %32, i16* %48, i16* %49
  %51 = getelementptr inbounds i16, i16* %50, i64 %44
  store i16 32, i16* %51, align 2, !noalias !8
  %52 = add i64 %44, 1
  %53 = load i8, i8* %30, align 1, !noalias !8
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %55, label %57

55:                                               ; preds = %46
  %56 = getelementptr inbounds %"class.std::__1::basic_string.5", %"class.std::__1::basic_string.5"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %52, i64* %56, align 8, !noalias !8
  br label %59

57:                                               ; preds = %46
  %58 = trunc i64 %52 to i8
  store i8 %58, i8* %30, align 1, !noalias !8
  br label %59

59:                                               ; preds = %57, %55
  %60 = getelementptr inbounds i16, i16* %50, i64 %52
  store i16 0, i16* %60, align 2, !noalias !8
  br label %64

61:                                               ; preds = %42
  %62 = add i64 %44, 1
  %63 = sub i64 %62, %43
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.5"* nonnull %9, i64 %43, i64 %63, i64 %44, i64 %44, i64 0, i64 1, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @.str, i64 0, i64 0)) #10, !noalias !8
  br label %64

64:                                               ; preds = %59, %61
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %26, i8* nonnull align 8 %27, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 0, i64 24, i1 false) #10, !noalias !8
  %65 = bitcast %"class.std::__1::basic_string.5"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %65) #10
  %66 = sext i32 %28 to i64
  %67 = load i64, i64* %20, align 8
  %68 = icmp ugt i64 %67, %66
  br i1 %68, label %72, label %69

69:                                               ; preds = %64
  %70 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4, i64 0, i64 0), i32 418, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0)) #10
  %71 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #10
  br label %72

72:                                               ; preds = %64, %69
  %73 = getelementptr inbounds i8*, i8** %19, i64 1
  %74 = bitcast i8** %73 to %"struct.flags_ui::FeatureEntry::FeatureVariation"**
  %75 = load %"struct.flags_ui::FeatureEntry::FeatureVariation"*, %"struct.flags_ui::FeatureEntry::FeatureVariation"** %74, align 8
  %76 = getelementptr inbounds %"struct.flags_ui::FeatureEntry::FeatureVariation", %"struct.flags_ui::FeatureEntry::FeatureVariation"* %75, i64 %66, i32 0
  %77 = load i8*, i8** %76, align 8
  %78 = icmp eq i8* %77, null
  br i1 %78, label %81, label %79

79:                                               ; preds = %72
  %80 = call i64 @strlen(i8* nonnull %77) #10
  br label %84

81:                                               ; preds = %72
  %82 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #10
  %83 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #10
  br label %84

84:                                               ; preds = %79, %81
  %85 = phi i64 [ 0, %81 ], [ %80, %79 ]
  call void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.5"* nonnull sret %10, i8* %77, i64 %85) #10
  %86 = bitcast %"class.std::__1::basic_string.5"* %10 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %87 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %86, i64 0, i32 1, i32 1
  %88 = load i8, i8* %87, align 1, !noalias !11
  %89 = icmp slt i8 %88, 0
  %90 = getelementptr inbounds %"class.std::__1::basic_string.5", %"class.std::__1::basic_string.5"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load i16*, i16** %90, align 8, !noalias !11
  %92 = getelementptr inbounds %"class.std::__1::basic_string.5", %"class.std::__1::basic_string.5"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %93 = load i64, i64* %92, align 8, !noalias !11
  %94 = bitcast %"class.std::__1::basic_string.5"* %10 to i16*
  %95 = zext i8 %88 to i64
  %96 = select i1 %89, i16* %91, i16* %94
  %97 = select i1 %89, i64 %93, i64 %95
  %98 = bitcast %"class.std::__1::basic_string.5"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %99 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %98, i64 0, i32 1, i32 1
  %100 = load i8, i8* %99, align 1, !noalias !11
  %101 = icmp slt i8 %100, 0
  br i1 %101, label %102, label %109

102:                                              ; preds = %84
  %103 = getelementptr inbounds %"class.std::__1::basic_string.5", %"class.std::__1::basic_string.5"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %104 = load i64, i64* %103, align 8, !noalias !11
  %105 = and i64 %104, 9223372036854775807
  %106 = add nsw i64 %105, -1
  %107 = getelementptr inbounds %"class.std::__1::basic_string.5", %"class.std::__1::basic_string.5"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %108 = load i64, i64* %107, align 8, !noalias !11
  br label %111

109:                                              ; preds = %84
  %110 = zext i8 %100 to i64
  br label %111

111:                                              ; preds = %109, %102
  %112 = phi i64 [ %106, %102 ], [ 10, %109 ]
  %113 = phi i64 [ %108, %102 ], [ %110, %109 ]
  %114 = sub i64 %112, %113
  %115 = icmp ult i64 %114, %97
  br i1 %115, label %277, label %116

116:                                              ; preds = %111
  %117 = icmp eq i64 %97, 0
  br i1 %117, label %280, label %118

118:                                              ; preds = %116
  %119 = getelementptr inbounds %"class.std::__1::basic_string.5", %"class.std::__1::basic_string.5"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load i16*, i16** %119, align 8, !noalias !11
  %121 = bitcast %"class.std::__1::basic_string.5"* %8 to i16*
  %122 = select i1 %101, i16* %120, i16* %121
  %123 = getelementptr inbounds i16, i16* %122, i64 %113
  %124 = icmp ult i64 %97, 16
  br i1 %124, label %214, label %125

125:                                              ; preds = %118
  %126 = add i64 %97, %113
  %127 = getelementptr i16, i16* %122, i64 %126
  %128 = getelementptr i16, i16* %96, i64 %97
  %129 = icmp ult i16* %123, %128
  %130 = icmp ult i16* %96, %127
  %131 = and i1 %129, %130
  br i1 %131, label %214, label %132

132:                                              ; preds = %125
  %133 = and i64 %97, -16
  %134 = sub i64 %97, %133
  %135 = getelementptr i16, i16* %96, i64 %133
  %136 = getelementptr i16, i16* %123, i64 %133
  %137 = add i64 %133, -16
  %138 = lshr exact i64 %137, 4
  %139 = add nuw nsw i64 %138, 1
  %140 = and i64 %139, 3
  %141 = icmp ult i64 %137, 48
  br i1 %141, label %193, label %142

142:                                              ; preds = %132
  %143 = sub nsw i64 %139, %140
  br label %144

144:                                              ; preds = %144, %142
  %145 = phi i64 [ 0, %142 ], [ %190, %144 ]
  %146 = phi i64 [ %143, %142 ], [ %191, %144 ]
  %147 = getelementptr i16, i16* %96, i64 %145
  %148 = getelementptr i16, i16* %123, i64 %145
  %149 = bitcast i16* %147 to <8 x i16>*
  %150 = load <8 x i16>, <8 x i16>* %149, align 2, !alias.scope !14, !noalias !11
  %151 = getelementptr i16, i16* %147, i64 8
  %152 = bitcast i16* %151 to <8 x i16>*
  %153 = load <8 x i16>, <8 x i16>* %152, align 2, !alias.scope !14, !noalias !11
  %154 = bitcast i16* %148 to <8 x i16>*
  store <8 x i16> %150, <8 x i16>* %154, align 2, !alias.scope !17, !noalias !19
  %155 = getelementptr i16, i16* %148, i64 8
  %156 = bitcast i16* %155 to <8 x i16>*
  store <8 x i16> %153, <8 x i16>* %156, align 2, !alias.scope !17, !noalias !19
  %157 = or i64 %145, 16
  %158 = getelementptr i16, i16* %96, i64 %157
  %159 = getelementptr i16, i16* %123, i64 %157
  %160 = bitcast i16* %158 to <8 x i16>*
  %161 = load <8 x i16>, <8 x i16>* %160, align 2, !alias.scope !14, !noalias !11
  %162 = getelementptr i16, i16* %158, i64 8
  %163 = bitcast i16* %162 to <8 x i16>*
  %164 = load <8 x i16>, <8 x i16>* %163, align 2, !alias.scope !14, !noalias !11
  %165 = bitcast i16* %159 to <8 x i16>*
  store <8 x i16> %161, <8 x i16>* %165, align 2, !alias.scope !17, !noalias !19
  %166 = getelementptr i16, i16* %159, i64 8
  %167 = bitcast i16* %166 to <8 x i16>*
  store <8 x i16> %164, <8 x i16>* %167, align 2, !alias.scope !17, !noalias !19
  %168 = or i64 %145, 32
  %169 = getelementptr i16, i16* %96, i64 %168
  %170 = getelementptr i16, i16* %123, i64 %168
  %171 = bitcast i16* %169 to <8 x i16>*
  %172 = load <8 x i16>, <8 x i16>* %171, align 2, !alias.scope !14, !noalias !11
  %173 = getelementptr i16, i16* %169, i64 8
  %174 = bitcast i16* %173 to <8 x i16>*
  %175 = load <8 x i16>, <8 x i16>* %174, align 2, !alias.scope !14, !noalias !11
  %176 = bitcast i16* %170 to <8 x i16>*
  store <8 x i16> %172, <8 x i16>* %176, align 2, !alias.scope !17, !noalias !19
  %177 = getelementptr i16, i16* %170, i64 8
  %178 = bitcast i16* %177 to <8 x i16>*
  store <8 x i16> %175, <8 x i16>* %178, align 2, !alias.scope !17, !noalias !19
  %179 = or i64 %145, 48
  %180 = getelementptr i16, i16* %96, i64 %179
  %181 = getelementptr i16, i16* %123, i64 %179
  %182 = bitcast i16* %180 to <8 x i16>*
  %183 = load <8 x i16>, <8 x i16>* %182, align 2, !alias.scope !14, !noalias !11
  %184 = getelementptr i16, i16* %180, i64 8
  %185 = bitcast i16* %184 to <8 x i16>*
  %186 = load <8 x i16>, <8 x i16>* %185, align 2, !alias.scope !14, !noalias !11
  %187 = bitcast i16* %181 to <8 x i16>*
  store <8 x i16> %183, <8 x i16>* %187, align 2, !alias.scope !17, !noalias !19
  %188 = getelementptr i16, i16* %181, i64 8
  %189 = bitcast i16* %188 to <8 x i16>*
  store <8 x i16> %186, <8 x i16>* %189, align 2, !alias.scope !17, !noalias !19
  %190 = add i64 %145, 64
  %191 = add i64 %146, -4
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %193, label %144, !llvm.loop !20

193:                                              ; preds = %144, %132
  %194 = phi i64 [ 0, %132 ], [ %190, %144 ]
  %195 = icmp eq i64 %140, 0
  br i1 %195, label %212, label %196

196:                                              ; preds = %193, %196
  %197 = phi i64 [ %209, %196 ], [ %194, %193 ]
  %198 = phi i64 [ %210, %196 ], [ %140, %193 ]
  %199 = getelementptr i16, i16* %96, i64 %197
  %200 = getelementptr i16, i16* %123, i64 %197
  %201 = bitcast i16* %199 to <8 x i16>*
  %202 = load <8 x i16>, <8 x i16>* %201, align 2, !alias.scope !14, !noalias !11
  %203 = getelementptr i16, i16* %199, i64 8
  %204 = bitcast i16* %203 to <8 x i16>*
  %205 = load <8 x i16>, <8 x i16>* %204, align 2, !alias.scope !14, !noalias !11
  %206 = bitcast i16* %200 to <8 x i16>*
  store <8 x i16> %202, <8 x i16>* %206, align 2, !alias.scope !17, !noalias !19
  %207 = getelementptr i16, i16* %200, i64 8
  %208 = bitcast i16* %207 to <8 x i16>*
  store <8 x i16> %205, <8 x i16>* %208, align 2, !alias.scope !17, !noalias !19
  %209 = add i64 %197, 16
  %210 = add i64 %198, -1
  %211 = icmp eq i64 %210, 0
  br i1 %211, label %212, label %196, !llvm.loop !22

212:                                              ; preds = %196, %193
  %213 = icmp eq i64 %97, %133
  br i1 %213, label %267, label %214

214:                                              ; preds = %212, %125, %118
  %215 = phi i64 [ %97, %125 ], [ %97, %118 ], [ %134, %212 ]
  %216 = phi i16* [ %96, %125 ], [ %96, %118 ], [ %135, %212 ]
  %217 = phi i16* [ %123, %125 ], [ %123, %118 ], [ %136, %212 ]
  %218 = add i64 %215, -1
  %219 = and i64 %215, 7
  %220 = icmp eq i64 %219, 0
  br i1 %220, label %232, label %221

221:                                              ; preds = %214, %221
  %222 = phi i64 [ %227, %221 ], [ %215, %214 ]
  %223 = phi i16* [ %229, %221 ], [ %216, %214 ]
  %224 = phi i16* [ %228, %221 ], [ %217, %214 ]
  %225 = phi i64 [ %230, %221 ], [ %219, %214 ]
  %226 = load i16, i16* %223, align 2, !noalias !11
  store i16 %226, i16* %224, align 2, !noalias !11
  %227 = add i64 %222, -1
  %228 = getelementptr inbounds i16, i16* %224, i64 1
  %229 = getelementptr inbounds i16, i16* %223, i64 1
  %230 = add i64 %225, -1
  %231 = icmp eq i64 %230, 0
  br i1 %231, label %232, label %221, !llvm.loop !24

232:                                              ; preds = %221, %214
  %233 = phi i64 [ %215, %214 ], [ %227, %221 ]
  %234 = phi i16* [ %216, %214 ], [ %229, %221 ]
  %235 = phi i16* [ %217, %214 ], [ %228, %221 ]
  %236 = icmp ult i64 %218, 7
  br i1 %236, label %267, label %237

237:                                              ; preds = %232, %237
  %238 = phi i64 [ %263, %237 ], [ %233, %232 ]
  %239 = phi i16* [ %265, %237 ], [ %234, %232 ]
  %240 = phi i16* [ %264, %237 ], [ %235, %232 ]
  %241 = load i16, i16* %239, align 2, !noalias !11
  store i16 %241, i16* %240, align 2, !noalias !11
  %242 = getelementptr inbounds i16, i16* %240, i64 1
  %243 = getelementptr inbounds i16, i16* %239, i64 1
  %244 = load i16, i16* %243, align 2, !noalias !11
  store i16 %244, i16* %242, align 2, !noalias !11
  %245 = getelementptr inbounds i16, i16* %240, i64 2
  %246 = getelementptr inbounds i16, i16* %239, i64 2
  %247 = load i16, i16* %246, align 2, !noalias !11
  store i16 %247, i16* %245, align 2, !noalias !11
  %248 = getelementptr inbounds i16, i16* %240, i64 3
  %249 = getelementptr inbounds i16, i16* %239, i64 3
  %250 = load i16, i16* %249, align 2, !noalias !11
  store i16 %250, i16* %248, align 2, !noalias !11
  %251 = getelementptr inbounds i16, i16* %240, i64 4
  %252 = getelementptr inbounds i16, i16* %239, i64 4
  %253 = load i16, i16* %252, align 2, !noalias !11
  store i16 %253, i16* %251, align 2, !noalias !11
  %254 = getelementptr inbounds i16, i16* %240, i64 5
  %255 = getelementptr inbounds i16, i16* %239, i64 5
  %256 = load i16, i16* %255, align 2, !noalias !11
  store i16 %256, i16* %254, align 2, !noalias !11
  %257 = getelementptr inbounds i16, i16* %240, i64 6
  %258 = getelementptr inbounds i16, i16* %239, i64 6
  %259 = load i16, i16* %258, align 2, !noalias !11
  store i16 %259, i16* %257, align 2, !noalias !11
  %260 = getelementptr inbounds i16, i16* %240, i64 7
  %261 = getelementptr inbounds i16, i16* %239, i64 7
  %262 = load i16, i16* %261, align 2, !noalias !11
  store i16 %262, i16* %260, align 2, !noalias !11
  %263 = add i64 %238, -8
  %264 = getelementptr inbounds i16, i16* %240, i64 8
  %265 = getelementptr inbounds i16, i16* %239, i64 8
  %266 = icmp eq i64 %263, 0
  br i1 %266, label %267, label %237, !llvm.loop !25

267:                                              ; preds = %232, %237, %212
  %268 = add i64 %113, %97
  %269 = load i8, i8* %99, align 1, !noalias !11
  %270 = icmp slt i8 %269, 0
  br i1 %270, label %271, label %273

271:                                              ; preds = %267
  %272 = getelementptr inbounds %"class.std::__1::basic_string.5", %"class.std::__1::basic_string.5"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %268, i64* %272, align 8, !noalias !11
  br label %275

273:                                              ; preds = %267
  %274 = trunc i64 %268 to i8
  store i8 %274, i8* %99, align 1, !noalias !11
  br label %275

275:                                              ; preds = %273, %271
  %276 = getelementptr inbounds i16, i16* %122, i64 %268
  store i16 0, i16* %276, align 2, !noalias !11
  br label %280

277:                                              ; preds = %111
  %278 = add i64 %113, %97
  %279 = sub i64 %278, %112
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.5"* nonnull %8, i64 %112, i64 %279, i64 %113, i64 %113, i64 0, i64 %97, i16* %96) #10, !noalias !11
  br label %280

280:                                              ; preds = %116, %275, %277
  %281 = bitcast %"class.std::__1::basic_string.5"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %281, i8* nonnull align 8 %26, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 0, i64 24, i1 false) #10, !noalias !11
  %282 = load i8, i8* %87, align 1
  %283 = icmp slt i8 %282, 0
  br i1 %283, label %285, label %284

284:                                              ; preds = %280
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %65) #10
  br label %293

285:                                              ; preds = %280
  %286 = bitcast %"class.std::__1::basic_string.5"* %10 to i8**
  %287 = load i8*, i8** %286, align 8
  call void @_ZdlPv(i8* %287) #12
  %288 = load i8, i8* %99, align 1
  %289 = icmp slt i8 %288, 0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %65) #10
  br i1 %289, label %290, label %293

290:                                              ; preds = %285
  %291 = bitcast %"class.std::__1::basic_string.5"* %8 to i8**
  %292 = load i8*, i8** %291, align 8
  call void @_ZdlPv(i8* %292) #12
  br label %293

293:                                              ; preds = %284, %285, %290
  %294 = load i8, i8* %30, align 1
  %295 = icmp slt i8 %294, 0
  br i1 %295, label %296, label %299

296:                                              ; preds = %293
  %297 = bitcast %"class.std::__1::basic_string.5"* %9 to i8**
  %298 = load i8*, i8** %297, align 8
  call void @_ZdlPv(i8* %298) #12
  br label %299

299:                                              ; preds = %293, %296
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #10
  br label %327

300:                                              ; preds = %3
  %301 = getelementptr inbounds %"struct.flags_ui::FeatureEntry", %"struct.flags_ui::FeatureEntry"* %1, i64 0, i32 5
  %302 = sext i32 %2 to i64
  %303 = bitcast %union.anon* %301 to i64*
  %304 = load i64, i64* %303, align 8
  %305 = icmp ugt i64 %304, %302
  br i1 %305, label %309, label %306

306:                                              ; preds = %300
  %307 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %307) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4, i64 0, i64 0), i32 418, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0)) #10
  %308 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %307) #10
  br label %309

309:                                              ; preds = %300, %306
  %310 = getelementptr inbounds %"struct.flags_ui::FeatureEntry", %"struct.flags_ui::FeatureEntry"* %1, i64 0, i32 5, i32 0, i32 1
  %311 = bitcast i8** %310 to %"struct.flags_ui::FeatureEntry::Choice"**
  %312 = load %"struct.flags_ui::FeatureEntry::Choice"*, %"struct.flags_ui::FeatureEntry::Choice"** %311, align 8
  %313 = getelementptr inbounds %"struct.flags_ui::FeatureEntry::Choice", %"struct.flags_ui::FeatureEntry::Choice"* %312, i64 %302, i32 0
  br label %314

314:                                              ; preds = %309, %13
  %315 = phi i8** [ %15, %13 ], [ %313, %309 ]
  %316 = load i8*, i8** %315, align 8
  %317 = icmp eq i8* %316, null
  br i1 %317, label %321, label %318

318:                                              ; preds = %18, %16, %17, %314
  %319 = phi i8* [ %316, %314 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @_ZN8flags_ui32kGenericExperimentChoiceDisabledE, i64 0, i64 0), %18 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @_ZN8flags_ui31kGenericExperimentChoiceDefaultE, i64 0, i64 0), %16 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @_ZN8flags_ui31kGenericExperimentChoiceEnabledE, i64 0, i64 0), %17 ]
  %320 = call i64 @strlen(i8* nonnull %319) #10
  br label %324

321:                                              ; preds = %314
  %322 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %322) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #10
  %323 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %322) #10
  br label %324

324:                                              ; preds = %318, %321
  %325 = phi i8* [ null, %321 ], [ %319, %318 ]
  %326 = phi i64 [ 0, %321 ], [ %320, %318 ]
  call void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.5"* sret %0, i8* %325, i64 %326) #10
  br label %327

327:                                              ; preds = %324, %299
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.5"* sret, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"struct.flags_ui::FeatureEntry::Choice"* @_ZNK8flags_ui12FeatureEntry15ChoiceForOptionEi(%"struct.flags_ui::FeatureEntry"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"struct.flags_ui::FeatureEntry", %"struct.flags_ui::FeatureEntry"* %0, i64 0, i32 5
  %5 = sext i32 %1 to i64
  %6 = bitcast %union.anon* %4 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = icmp ugt i64 %7, %5
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4, i64 0, i64 0), i32 418, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0)) #10
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #10
  br label %12

12:                                               ; preds = %2, %9
  %13 = getelementptr inbounds %"struct.flags_ui::FeatureEntry", %"struct.flags_ui::FeatureEntry"* %0, i64 0, i32 5, i32 0, i32 1
  %14 = bitcast i8** %13 to %"struct.flags_ui::FeatureEntry::Choice"**
  %15 = load %"struct.flags_ui::FeatureEntry::Choice"*, %"struct.flags_ui::FeatureEntry::Choice"** %14, align 8
  %16 = getelementptr inbounds %"struct.flags_ui::FeatureEntry::Choice", %"struct.flags_ui::FeatureEntry::Choice"* %15, i64 %5
  ret %"struct.flags_ui::FeatureEntry::Choice"* %16
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK8flags_ui12FeatureEntry14StateForOptionEi(%"struct.flags_ui::FeatureEntry"* nocapture readonly, i32) local_unnamed_addr #4 align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %24, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.flags_ui::FeatureEntry", %"struct.flags_ui::FeatureEntry"* %0, i64 0, i32 4
  %6 = load i16, i16* %5, align 2
  switch i16 %6, label %18 [
    i16 3, label %19
    i16 4, label %19
    i16 2, label %7
    i16 5, label %12
  ]

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"struct.flags_ui::FeatureEntry", %"struct.flags_ui::FeatureEntry"* %0, i64 0, i32 5
  %9 = bitcast %union.anon* %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = trunc i64 %10 to i32
  br label %19

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"struct.flags_ui::FeatureEntry", %"struct.flags_ui::FeatureEntry"* %0, i64 0, i32 5, i32 0, i32 1
  %14 = bitcast i8** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = trunc i64 %15 to i32
  %17 = add i32 %16, 3
  br label %19

18:                                               ; preds = %4
  br label %19

19:                                               ; preds = %4, %4, %7, %12, %18
  %20 = phi i32 [ 0, %18 ], [ %17, %12 ], [ %11, %7 ], [ 3, %4 ], [ 3, %4 ]
  %21 = add nsw i32 %20, -1
  %22 = icmp eq i32 %21, %1
  %23 = select i1 %22, i32 2, i32 1
  br label %24

24:                                               ; preds = %19, %2
  %25 = phi i32 [ 0, %2 ], [ %23, %19 ]
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.flags_ui::FeatureEntry::FeatureVariation"* @_ZNK8flags_ui12FeatureEntry18VariationForOptionEi(%"struct.flags_ui::FeatureEntry"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"struct.flags_ui::FeatureEntry", %"struct.flags_ui::FeatureEntry"* %0, i64 0, i32 4
  %5 = load i16, i16* %4, align 2
  %6 = icmp eq i16 %5, 5
  %7 = icmp sgt i32 %1, 1
  %8 = and i1 %7, %6
  br i1 %8, label %9, label %28

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.flags_ui::FeatureEntry", %"struct.flags_ui::FeatureEntry"* %0, i64 0, i32 5, i32 0, i32 1
  %11 = bitcast i8** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = trunc i64 %12 to i32
  %14 = add i32 %13, 2
  %15 = icmp sgt i32 %14, %1
  br i1 %15, label %16, label %28

16:                                               ; preds = %9
  %17 = add nsw i32 %1, -2
  %18 = sext i32 %17 to i64
  %19 = icmp ugt i64 %12, %18
  br i1 %19, label %23, label %20

20:                                               ; preds = %16
  %21 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4, i64 0, i64 0), i32 418, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0)) #10
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #10
  br label %23

23:                                               ; preds = %16, %20
  %24 = getelementptr inbounds i8*, i8** %10, i64 1
  %25 = bitcast i8** %24 to %"struct.flags_ui::FeatureEntry::FeatureVariation"**
  %26 = load %"struct.flags_ui::FeatureEntry::FeatureVariation"*, %"struct.flags_ui::FeatureEntry::FeatureVariation"** %25, align 8
  %27 = getelementptr inbounds %"struct.flags_ui::FeatureEntry::FeatureVariation", %"struct.flags_ui::FeatureEntry::FeatureVariation"* %26, i64 %18
  br label %28

28:                                               ; preds = %2, %9, %23
  %29 = phi %"struct.flags_ui::FeatureEntry::FeatureVariation"* [ %27, %23 ], [ null, %9 ], [ null, %2 ]
  ret %"struct.flags_ui::FeatureEntry::FeatureVariation"* %29
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator"* dereferenceable(1)) unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.5"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string.5"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #13
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string.5"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string.5", %"class.std::__1::basic_string.5"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string.5"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #13
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #12
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !26
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !26
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !29, !noalias !26
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !29, !noalias !26
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !26
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !26
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !29, !noalias !26
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !29, !noalias !26
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !26
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !26
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !29, !noalias !26
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !29, !noalias !26
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !26
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !26
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !29, !noalias !26
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !29, !noalias !26
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !31

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !26
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !26
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !29, !noalias !26
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !29, !noalias !26
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !32

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !33

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !34

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !35

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !36

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !37

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !39
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !39
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !42, !noalias !39
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !42, !noalias !39
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !39
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !39
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !42, !noalias !39
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !42, !noalias !39
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !39
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !39
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !42, !noalias !39
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !42, !noalias !39
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !39
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !39
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !42, !noalias !39
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !42, !noalias !39
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !44

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !39
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !39
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !42, !noalias !39
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !42, !noalias !39
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !45

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !46

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !47

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #12
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string.5"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string.5", %"class.std::__1::basic_string.5"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string.5", %"class.std::__1::basic_string.5"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { nounwind readonly }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!10 = distinct !{!10, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_: argument 0"}
!13 = distinct !{!13, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_"}
!14 = !{!15}
!15 = distinct !{!15, !16}
!16 = distinct !{!16, !"LVerDomain"}
!17 = !{!18}
!18 = distinct !{!18, !16}
!19 = !{!12, !15}
!20 = distinct !{!20, !21}
!21 = !{!"llvm.loop.isvectorized", i32 1}
!22 = distinct !{!22, !23}
!23 = !{!"llvm.loop.unroll.disable"}
!24 = distinct !{!24, !23}
!25 = distinct !{!25, !21}
!26 = !{!27}
!27 = distinct !{!27, !28}
!28 = distinct !{!28, !"LVerDomain"}
!29 = !{!30}
!30 = distinct !{!30, !28}
!31 = distinct !{!31, !21}
!32 = distinct !{!32, !23}
!33 = distinct !{!33, !23}
!34 = distinct !{!34, !21}
!35 = distinct !{!35, !21}
!36 = distinct !{!36, !23}
!37 = distinct !{!37, !38, !21}
!38 = !{!"llvm.loop.unroll.runtime.disable"}
!39 = !{!40}
!40 = distinct !{!40, !41}
!41 = distinct !{!41, !"LVerDomain"}
!42 = !{!43}
!43 = distinct !{!43, !41}
!44 = distinct !{!44, !21}
!45 = distinct !{!45, !23}
!46 = distinct !{!46, !23}
!47 = distinct !{!47, !21}
