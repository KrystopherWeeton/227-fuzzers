; ModuleID = '../../third_party/skia/src/core/SkPoint.cpp'
source_filename = "../../third_party/skia/src/core/SkPoint.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.SkPoint = type { float, float }

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK7SkPoint5scaleEfPS_(%struct.SkPoint* nocapture readonly, float, %struct.SkPoint* nocapture) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 0, i32 0
  %5 = load float, float* %4, align 4
  %6 = fmul float %5, %1
  %7 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 0, i32 1
  %8 = load float, float* %7, align 4
  %9 = fmul float %8, %1
  %10 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 0, i32 0
  store float %6, float* %10, align 4
  %11 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 0, i32 1
  store float %9, float* %11, align 4
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden zeroext i1 @_ZN7SkPoint9normalizeEv(%struct.SkPoint* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 0, i32 0
  %3 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 0, i32 1
  %4 = bitcast %struct.SkPoint* %0 to <2 x float>*
  %5 = load <2 x float>, <2 x float>* %4, align 4
  %6 = fpext <2 x float> %5 to <2 x double>
  %7 = fmul <2 x double> %6, %6
  %8 = extractelement <2 x double> %7, i32 0
  %9 = extractelement <2 x double> %7, i32 1
  %10 = fadd double %8, %9
  %11 = tail call double @sqrt(double %10) #6
  %12 = fdiv double 1.000000e+00, %11
  %13 = extractelement <2 x double> %6, i32 0
  %14 = fmul double %12, %13
  %15 = fptrunc double %14 to float
  %16 = extractelement <2 x double> %6, i32 1
  %17 = fmul double %12, %16
  %18 = fptrunc double %17 to float
  %19 = bitcast float %15 to i32
  %20 = and i32 %19, 2139095040
  %21 = icmp eq i32 %20, 2139095040
  br i1 %21, label %34, label %22

22:                                               ; preds = %1
  %23 = bitcast float %18 to i32
  %24 = and i32 %23, 2139095040
  %25 = icmp eq i32 %24, 2139095040
  br i1 %25, label %34, label %26

26:                                               ; preds = %22
  %27 = fcmp oeq float %15, 0.000000e+00
  %28 = fcmp oeq float %18, 0.000000e+00
  %29 = and i1 %27, %28
  %30 = select i1 %29, float 0.000000e+00, float %15
  %31 = select i1 %29, float 0.000000e+00, float %18
  %32 = and i1 %27, %28
  %33 = xor i1 %32, true
  br label %34

34:                                               ; preds = %26, %1, %22
  %35 = phi float [ 0.000000e+00, %22 ], [ 0.000000e+00, %1 ], [ %30, %26 ]
  %36 = phi float [ 0.000000e+00, %22 ], [ 0.000000e+00, %1 ], [ %31, %26 ]
  %37 = phi i1 [ false, %22 ], [ false, %1 ], [ %33, %26 ]
  store float %35, float* %2, align 4
  store float %36, float* %3, align 4
  ret i1 %37
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden zeroext i1 @_ZN7SkPoint9setLengthEfff(%struct.SkPoint* nocapture, float, float, float) local_unnamed_addr #1 align 2 {
  %5 = fpext float %1 to double
  %6 = fpext float %2 to double
  %7 = fmul double %5, %5
  %8 = fmul double %6, %6
  %9 = fadd double %7, %8
  %10 = tail call double @sqrt(double %9) #6
  %11 = fpext float %3 to double
  %12 = fdiv double %11, %10
  %13 = fmul double %12, %5
  %14 = fptrunc double %13 to float
  %15 = fmul double %12, %6
  %16 = fptrunc double %15 to float
  %17 = bitcast float %14 to i32
  %18 = and i32 %17, 2139095040
  %19 = icmp eq i32 %18, 2139095040
  br i1 %19, label %32, label %20

20:                                               ; preds = %4
  %21 = bitcast float %16 to i32
  %22 = and i32 %21, 2139095040
  %23 = icmp eq i32 %22, 2139095040
  br i1 %23, label %32, label %24

24:                                               ; preds = %20
  %25 = fcmp oeq float %14, 0.000000e+00
  %26 = fcmp oeq float %16, 0.000000e+00
  %27 = and i1 %25, %26
  %28 = select i1 %27, float 0.000000e+00, float %14
  %29 = select i1 %27, float 0.000000e+00, float %16
  %30 = and i1 %25, %26
  %31 = xor i1 %30, true
  br label %32

32:                                               ; preds = %24, %4, %20
  %33 = phi float [ 0.000000e+00, %20 ], [ 0.000000e+00, %4 ], [ %28, %24 ]
  %34 = phi float [ 0.000000e+00, %20 ], [ 0.000000e+00, %4 ], [ %29, %24 ]
  %35 = phi i1 [ false, %20 ], [ false, %4 ], [ %31, %24 ]
  %36 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 0, i32 0
  store float %33, float* %36, align 4
  %37 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 0, i32 1
  store float %34, float* %37, align 4
  ret i1 %35
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden zeroext i1 @_ZN7SkPoint12setNormalizeEff(%struct.SkPoint* nocapture, float, float) local_unnamed_addr #1 align 2 {
  %4 = fpext float %1 to double
  %5 = fpext float %2 to double
  %6 = fmul double %4, %4
  %7 = fmul double %5, %5
  %8 = fadd double %6, %7
  %9 = tail call double @sqrt(double %8) #6
  %10 = fdiv double 1.000000e+00, %9
  %11 = fmul double %10, %4
  %12 = fptrunc double %11 to float
  %13 = fmul double %10, %5
  %14 = fptrunc double %13 to float
  %15 = bitcast float %12 to i32
  %16 = and i32 %15, 2139095040
  %17 = icmp eq i32 %16, 2139095040
  br i1 %17, label %30, label %18

18:                                               ; preds = %3
  %19 = bitcast float %14 to i32
  %20 = and i32 %19, 2139095040
  %21 = icmp eq i32 %20, 2139095040
  br i1 %21, label %30, label %22

22:                                               ; preds = %18
  %23 = fcmp oeq float %12, 0.000000e+00
  %24 = fcmp oeq float %14, 0.000000e+00
  %25 = and i1 %23, %24
  %26 = select i1 %25, float 0.000000e+00, float %12
  %27 = select i1 %25, float 0.000000e+00, float %14
  %28 = and i1 %23, %24
  %29 = xor i1 %28, true
  br label %30

30:                                               ; preds = %22, %3, %18
  %31 = phi float [ 0.000000e+00, %18 ], [ 0.000000e+00, %3 ], [ %26, %22 ]
  %32 = phi float [ 0.000000e+00, %18 ], [ 0.000000e+00, %3 ], [ %27, %22 ]
  %33 = phi i1 [ false, %18 ], [ false, %3 ], [ %29, %22 ]
  %34 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 0, i32 0
  store float %31, float* %34, align 4
  %35 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 0, i32 1
  store float %32, float* %35, align 4
  ret i1 %33
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden zeroext i1 @_ZN7SkPoint9setLengthEf(%struct.SkPoint* nocapture, float) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 0, i32 0
  %4 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 0, i32 1
  %5 = bitcast %struct.SkPoint* %0 to <2 x float>*
  %6 = load <2 x float>, <2 x float>* %5, align 4
  %7 = fpext <2 x float> %6 to <2 x double>
  %8 = fmul <2 x double> %7, %7
  %9 = extractelement <2 x double> %8, i32 0
  %10 = extractelement <2 x double> %8, i32 1
  %11 = fadd double %9, %10
  %12 = tail call double @sqrt(double %11) #6
  %13 = fpext float %1 to double
  %14 = fdiv double %13, %12
  %15 = extractelement <2 x double> %7, i32 0
  %16 = fmul double %14, %15
  %17 = fptrunc double %16 to float
  %18 = extractelement <2 x double> %7, i32 1
  %19 = fmul double %14, %18
  %20 = fptrunc double %19 to float
  %21 = bitcast float %17 to i32
  %22 = and i32 %21, 2139095040
  %23 = icmp eq i32 %22, 2139095040
  br i1 %23, label %36, label %24

24:                                               ; preds = %2
  %25 = bitcast float %20 to i32
  %26 = and i32 %25, 2139095040
  %27 = icmp eq i32 %26, 2139095040
  br i1 %27, label %36, label %28

28:                                               ; preds = %24
  %29 = fcmp oeq float %17, 0.000000e+00
  %30 = fcmp oeq float %20, 0.000000e+00
  %31 = and i1 %29, %30
  %32 = select i1 %31, float 0.000000e+00, float %17
  %33 = select i1 %31, float 0.000000e+00, float %20
  %34 = and i1 %29, %30
  %35 = xor i1 %34, true
  br label %36

36:                                               ; preds = %28, %2, %24
  %37 = phi float [ 0.000000e+00, %24 ], [ 0.000000e+00, %2 ], [ %32, %28 ]
  %38 = phi float [ 0.000000e+00, %24 ], [ 0.000000e+00, %2 ], [ %33, %28 ]
  %39 = phi i1 [ false, %24 ], [ false, %2 ], [ %35, %28 ]
  store float %37, float* %3, align 4
  store float %38, float* %4, align 4
  ret i1 %39
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZN7SkPoint9NormalizeEPS_(%struct.SkPoint* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 0, i32 0
  %3 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 0, i32 1
  %4 = bitcast %struct.SkPoint* %0 to <2 x float>*
  %5 = load <2 x float>, <2 x float>* %4, align 4
  %6 = fpext <2 x float> %5 to <2 x double>
  %7 = fmul <2 x double> %6, %6
  %8 = extractelement <2 x double> %7, i32 0
  %9 = extractelement <2 x double> %7, i32 1
  %10 = fadd double %8, %9
  %11 = tail call double @sqrt(double %10) #6
  %12 = fdiv double 1.000000e+00, %11
  %13 = extractelement <2 x double> %6, i32 0
  %14 = fmul double %12, %13
  %15 = fptrunc double %14 to float
  %16 = extractelement <2 x double> %6, i32 1
  %17 = fmul double %12, %16
  %18 = fptrunc double %17 to float
  %19 = bitcast float %15 to i32
  %20 = and i32 %19, 2139095040
  %21 = icmp eq i32 %20, 2139095040
  br i1 %21, label %34, label %22

22:                                               ; preds = %1
  %23 = bitcast float %18 to i32
  %24 = and i32 %23, 2139095040
  %25 = icmp eq i32 %24, 2139095040
  br i1 %25, label %34, label %26

26:                                               ; preds = %22
  %27 = fcmp oeq float %15, 0.000000e+00
  %28 = fcmp oeq float %18, 0.000000e+00
  %29 = and i1 %27, %28
  %30 = fptrunc double %11 to float
  %31 = select i1 %29, float 0.000000e+00, float %15
  %32 = select i1 %29, float 0.000000e+00, float %18
  %33 = select i1 %29, float 0.000000e+00, float %30
  br label %34

34:                                               ; preds = %26, %22, %1
  %35 = phi float [ 0.000000e+00, %1 ], [ 0.000000e+00, %22 ], [ %31, %26 ]
  %36 = phi float [ 0.000000e+00, %1 ], [ 0.000000e+00, %22 ], [ %32, %26 ]
  %37 = phi float [ 0.000000e+00, %1 ], [ 0.000000e+00, %22 ], [ %33, %26 ]
  store float %35, float* %2, align 4
  store float %36, float* %3, align 4
  ret float %37
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden float @_ZN7SkPoint6LengthEff(float, float) local_unnamed_addr #1 align 2 {
  %3 = fmul float %0, %0
  %4 = fmul float %1, %1
  %5 = fadd float %3, %4
  %6 = bitcast float %5 to i32
  %7 = and i32 %6, 2139095040
  %8 = icmp eq i32 %7, 2139095040
  br i1 %8, label %11, label %9

9:                                                ; preds = %2
  %10 = tail call float @sqrtf(float %5) #6
  br label %19

11:                                               ; preds = %2
  %12 = fpext float %0 to double
  %13 = fpext float %1 to double
  %14 = fmul double %12, %12
  %15 = fmul double %13, %13
  %16 = fadd double %14, %15
  %17 = tail call double @sqrt(double %16) #6
  %18 = fptrunc double %17 to float
  br label %19

19:                                               ; preds = %11, %9
  %20 = phi float [ %10, %9 ], [ %18, %11 ]
  ret float %20
}

; Function Attrs: nofree nounwind
declare float @sqrtf(float) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare double @sqrt(double) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
define hidden zeroext i1 @_ZN11SkPointPriv13SetLengthFastEP7SkPointf(%struct.SkPoint* nocapture, float) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 0, i32 0
  %4 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 0, i32 1
  %5 = bitcast %struct.SkPoint* %0 to <2 x float>*
  %6 = load <2 x float>, <2 x float>* %5, align 4
  %7 = fpext <2 x float> %6 to <2 x double>
  %8 = fmul <2 x double> %7, %7
  %9 = extractelement <2 x double> %8, i32 0
  %10 = extractelement <2 x double> %8, i32 1
  %11 = fadd double %9, %10
  %12 = tail call double @sqrt(double %11) #6
  %13 = fpext float %1 to double
  %14 = fdiv double %13, %12
  %15 = extractelement <2 x double> %7, i32 0
  %16 = fmul double %14, %15
  %17 = fptrunc double %16 to float
  %18 = extractelement <2 x double> %7, i32 1
  %19 = fmul double %14, %18
  %20 = fptrunc double %19 to float
  %21 = bitcast float %17 to i32
  %22 = and i32 %21, 2139095040
  %23 = icmp eq i32 %22, 2139095040
  br i1 %23, label %36, label %24

24:                                               ; preds = %2
  %25 = bitcast float %20 to i32
  %26 = and i32 %25, 2139095040
  %27 = icmp eq i32 %26, 2139095040
  br i1 %27, label %36, label %28

28:                                               ; preds = %24
  %29 = fcmp oeq float %17, 0.000000e+00
  %30 = fcmp oeq float %20, 0.000000e+00
  %31 = and i1 %29, %30
  %32 = select i1 %31, float 0.000000e+00, float %17
  %33 = select i1 %31, float 0.000000e+00, float %20
  %34 = and i1 %29, %30
  %35 = xor i1 %34, true
  br label %36

36:                                               ; preds = %28, %2, %24
  %37 = phi float [ 0.000000e+00, %24 ], [ 0.000000e+00, %2 ], [ %32, %28 ]
  %38 = phi float [ 0.000000e+00, %24 ], [ 0.000000e+00, %2 ], [ %33, %28 ]
  %39 = phi i1 [ false, %24 ], [ false, %2 ], [ %35, %28 ]
  store float %37, float* %3, align 4
  store float %38, float* %4, align 4
  ret i1 %39
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZN11SkPointPriv24DistanceToLineBetweenSqdERK7SkPointS2_S2_PNS_4SideE(%struct.SkPoint* nocapture readonly dereferenceable(8), %struct.SkPoint* nocapture readonly dereferenceable(8), %struct.SkPoint* nocapture readonly dereferenceable(8), i32*) local_unnamed_addr #4 align 2 {
  %5 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 0, i32 0
  %6 = load float, float* %5, align 4
  %7 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 0
  %8 = load float, float* %7, align 4
  %9 = fsub float %6, %8
  %10 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 0, i32 1
  %11 = load float, float* %10, align 4
  %12 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 1
  %13 = load float, float* %12, align 4
  %14 = fsub float %11, %13
  %15 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 0, i32 0
  %16 = load float, float* %15, align 4
  %17 = fsub float %16, %8
  %18 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 0, i32 1
  %19 = load float, float* %18, align 4
  %20 = fsub float %19, %13
  %21 = fmul float %9, %9
  %22 = fmul float %14, %14
  %23 = fadd float %21, %22
  %24 = fmul float %9, %20
  %25 = fmul float %14, %17
  %26 = fsub float %24, %25
  %27 = icmp eq i32* %3, null
  br i1 %27, label %33, label %28

28:                                               ; preds = %4
  %29 = fcmp olt float %26, 0.000000e+00
  %30 = fcmp ogt float %26, 0.000000e+00
  %31 = zext i1 %30 to i32
  %32 = select i1 %29, i32 -1, i32 %31
  store i32 %32, i32* %3, align 4
  br label %33

33:                                               ; preds = %4, %28
  %34 = fdiv float %26, %23
  %35 = fmul float %26, %34
  %36 = bitcast float %35 to i32
  %37 = and i32 %36, 2139095040
  %38 = icmp eq i32 %37, 2139095040
  br i1 %38, label %39, label %43

39:                                               ; preds = %33
  %40 = fmul float %17, %17
  %41 = fmul float %20, %20
  %42 = fadd float %40, %41
  br label %43

43:                                               ; preds = %33, %39
  %44 = phi float [ %42, %39 ], [ %35, %33 ]
  ret float %44
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden float @_ZN11SkPointPriv31DistanceToLineSegmentBetweenSqdERK7SkPointS2_S2_(%struct.SkPoint* nocapture readonly dereferenceable(8), %struct.SkPoint* nocapture readonly dereferenceable(8), %struct.SkPoint* nocapture readonly dereferenceable(8)) local_unnamed_addr #5 align 2 {
  %4 = bitcast %struct.SkPoint* %2 to <2 x float>*
  %5 = load <2 x float>, <2 x float>* %4, align 4
  %6 = bitcast %struct.SkPoint* %1 to <2 x float>*
  %7 = load <2 x float>, <2 x float>* %6, align 4
  %8 = fsub <2 x float> %5, %7
  %9 = bitcast %struct.SkPoint* %0 to <2 x float>*
  %10 = load <2 x float>, <2 x float>* %9, align 4
  %11 = fsub <2 x float> %10, %7
  %12 = shufflevector <2 x float> %11, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %13 = extractelement <2 x float> %11, i32 0
  %14 = shufflevector <2 x float> %8, <2 x float> undef, <2 x i32> zeroinitializer
  %15 = shufflevector <2 x float> %11, <2 x float> %8, <2 x i32> <i32 0, i32 2>
  %16 = fmul <2 x float> %14, %15
  %17 = extractelement <2 x float> %11, i32 1
  %18 = shufflevector <2 x float> %8, <2 x float> undef, <2 x i32> <i32 1, i32 1>
  %19 = shufflevector <2 x float> %11, <2 x float> %8, <2 x i32> <i32 1, i32 3>
  %20 = fmul <2 x float> %18, %19
  %21 = fadd <2 x float> %16, %20
  %22 = extractelement <2 x float> %21, i32 0
  %23 = fcmp ugt float %22, 0.000000e+00
  br i1 %23, label %28, label %24

24:                                               ; preds = %3
  %25 = fmul float %13, %13
  %26 = fmul float %17, %17
  %27 = fadd float %25, %26
  br label %56

28:                                               ; preds = %3
  %29 = extractelement <2 x float> %21, i32 1
  %30 = fcmp ogt float %22, %29
  br i1 %30, label %31, label %41

31:                                               ; preds = %28
  %32 = extractelement <2 x float> %5, i32 0
  %33 = extractelement <2 x float> %10, i32 0
  %34 = fsub float %32, %33
  %35 = extractelement <2 x float> %5, i32 1
  %36 = extractelement <2 x float> %10, i32 1
  %37 = fsub float %35, %36
  %38 = fmul float %34, %34
  %39 = fmul float %37, %37
  %40 = fadd float %38, %39
  br label %56

41:                                               ; preds = %28
  %42 = fmul <2 x float> %8, %12
  %43 = extractelement <2 x float> %42, i32 0
  %44 = extractelement <2 x float> %42, i32 1
  %45 = fsub float %43, %44
  %46 = extractelement <2 x float> %21, i32 1
  %47 = fdiv float %45, %46
  %48 = fmul float %45, %47
  %49 = bitcast float %48 to i32
  %50 = and i32 %49, 2139095040
  %51 = icmp eq i32 %50, 2139095040
  br i1 %51, label %52, label %56

52:                                               ; preds = %41
  %53 = fmul float %13, %13
  %54 = fmul float %17, %17
  %55 = fadd float %53, %54
  br label %56

56:                                               ; preds = %41, %52, %31, %24
  %57 = phi float [ %27, %24 ], [ %40, %31 ], [ %55, %52 ], [ %48, %41 ]
  ret float %57
}

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
