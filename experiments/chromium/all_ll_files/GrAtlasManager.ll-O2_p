; ModuleID = '../../third_party/skia/src/gpu/text/GrAtlasManager.cpp'
source_filename = "../../third_party/skia/src/gpu/text/GrAtlasManager.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkMasks = type { %"struct.SkMasks::MaskInfo", %"struct.SkMasks::MaskInfo", %"struct.SkMasks::MaskInfo", %"struct.SkMasks::MaskInfo" }
%"struct.SkMasks::MaskInfo" = type { i32, i32, i32 }
%class.GrAtlasManager = type <{ %class.GrOnFlushCallbackObject, %"class.GrDrawOpAtlas::GenerationCounter", i8, [7 x i8], [3 x %"class.std::__1::unique_ptr"], %class.GrProxyProvider*, %class.sk_sp.48, %class.GrDrawOpAtlasConfig, [4 x i8] }>
%class.GrOnFlushCallbackObject = type { i32 (...)** }
%"class.GrDrawOpAtlas::GenerationCounter" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.GrDrawOpAtlas* }
%class.GrDrawOpAtlas = type { %class.GrBackendFormat, i32, i32, i32, i32, i32, i32, %"class.GrDrawOpAtlas::GenerationCounter"*, i64, %class.GrDeferredUploadToken, i32, %"class.std::__1::vector", [4 x %class.GrSurfaceProxyView], [4 x %"struct.GrDrawOpAtlas::Page"], i32, i32 }
%class.GrBackendFormat = type { i32, i8, %union.anon, i32, [4 x i8] }
%union.anon = type { %struct.anon }
%struct.anon = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%class.GrDeferredUploadToken = type { i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.GrDrawOpAtlas::EvictionCallback"**, %"class.GrDrawOpAtlas::EvictionCallback"**, %"class.std::__1::__compressed_pair.1" }
%"class.GrDrawOpAtlas::EvictionCallback" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.GrDrawOpAtlas::EvictionCallback"** }
%class.GrSurfaceProxyView = type <{ %class.sk_sp, i32, %class.GrSwizzle, [2 x i8] }>
%class.sk_sp = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt, %class.sk_sp.5, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.51" }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.5 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.9 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon.6, [4 x i8] }>
%union.anon.6 = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.7, i8* }
%class.sk_sp.7 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.8, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.8 = type { %"struct.std::__1::atomic" }
%class.GrGpu = type opaque
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.sk_sp.9 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.10, void (i8*)*, i8* }
%class.SkNVRefCnt.10 = type { %"struct.std::__1::atomic" }
%struct.SkISize = type { i32, i32 }
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.5, i32, i8, [3 x i8] }>
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.48, %class.sk_sp.50, %class.sk_sp.50 }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.25, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash.16, i32, [4 x i8] }>
%class.SkTDynamicHash.16 = type { %class.SkTHashTable.17 }
%class.SkTHashTable.17 = type { i32, i32, %class.SkAutoTArray.18 }
%class.SkAutoTArray.18 = type { %"class.std::__1::unique_ptr.19" }
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.25 = type { %class.SkTHashTable.26 }
%class.SkTHashTable.26 = type { i32, i32, %class.SkAutoTArray.27 }
%class.SkAutoTArray.27 = type { %"class.std::__1::unique_ptr.28" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.34" }
%"struct.std::__1::atomic.34" = type { %"struct.std::__1::__atomic_base.35" }
%"struct.std::__1::__atomic_base.35" = type { %"struct.std::__1::__atomic_base.36" }
%"struct.std::__1::__atomic_base.36" = type { %"struct.std::__1::__cxx_atomic_impl.37" }
%"struct.std::__1::__cxx_atomic_impl.37" = type { %"struct.std::__1::__cxx_atomic_base_impl.38" }
%"struct.std::__1::__cxx_atomic_base_impl.38" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.39, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.39 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap = type { %class.SkTHashTable.40 }
%class.SkTHashTable.40 = type { i32, i32, %class.SkAutoTArray.41 }
%class.SkAutoTArray.41 = type { %"class.std::__1::unique_ptr.42" }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%class.GrSingleOwner = type { i8 }
%class.sk_sp.50 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrBuffer = type { i32 (...)** }
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::atomic.51" = type { %"struct.std::__1::__atomic_base.52" }
%"struct.std::__1::__atomic_base.52" = type { %"struct.std::__1::__atomic_base.53" }
%"struct.std::__1::__atomic_base.53" = type { %"struct.std::__1::__cxx_atomic_impl.54" }
%"struct.std::__1::__cxx_atomic_impl.54" = type { %"struct.std::__1::__cxx_atomic_base_impl.55" }
%"struct.std::__1::__cxx_atomic_base_impl.55" = type { i64 }
%class.GrSwizzle = type { i16 }
%"struct.GrDrawOpAtlas::Page" = type { %"class.std::__1::unique_ptr.56", %class.SkTInternalLList }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %class.sk_sp.59* }
%class.sk_sp.59 = type { %"class.GrDrawOpAtlas::Plot"* }
%"class.GrDrawOpAtlas::Plot" = type { %class.SkRefCnt.base, %"class.GrDrawOpAtlas::Plot"*, %"class.GrDrawOpAtlas::Plot"*, %class.GrDeferredUploadToken, %class.GrDeferredUploadToken, i32, %struct.anon.60, %"class.GrDrawOpAtlas::GenerationCounter"*, i64, %"class.GrDrawOpAtlas::PlotLocator", i8*, i32, i32, i32, i32, %class.GrRectanizerSkyline, %struct.SkIPoint16, i32, i64, %struct.SkIRect }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%struct.anon.60 = type { i32 }
%"class.GrDrawOpAtlas::PlotLocator" = type { i64 }
%class.GrRectanizerSkyline = type <{ %class.GrRectanizer, %class.SkTDArray.61, i32, [4 x i8] }>
%class.GrRectanizer = type { i32 (...)**, i32, i32 }
%class.SkTDArray.61 = type { %"struct.GrRectanizerSkyline::SkylineSegment"*, i32, i32 }
%"struct.GrRectanizerSkyline::SkylineSegment" = type { i32, i32, i32 }
%struct.SkIPoint16 = type { i16, i16 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.SkTInternalLList = type { %"class.GrDrawOpAtlas::Plot"*, %"class.GrDrawOpAtlas::Plot"* }
%class.sk_sp.48 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.49, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.49 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.GrDrawOpAtlasConfig = type { %struct.SkISize, i32 }
%class.GrProxyProvider = type { %class.SkTDynamicHash, %class.GrImageContext* }
%class.SkTDynamicHash = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.11" }
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"struct.SkTHashTable<GrTextureProxy *, GrUniqueKey, SkTDynamicHash<GrTextureProxy, GrUniqueKey, GrProxyProvider::UniquelyKeyedProxyHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrTextureProxy *, GrUniqueKey, SkTDynamicHash<GrTextureProxy, GrUniqueKey, GrProxyProvider::UniquelyKeyedProxyHashTraits>::AdaptedTraits>::Slot" = type opaque
%class.GrImageContext = type <{ %class.GrContext_Base, %class.GrSingleOwner, [7 x i8] }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.15 }
%class.sk_sp.15 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.GrGlyph = type { %struct.SkPackedGlyphID, %"class.GrDrawOpAtlas::AtlasLocator" }
%struct.SkPackedGlyphID = type { i32 }
%"class.GrDrawOpAtlas::AtlasLocator" = type { %"class.GrDrawOpAtlas::PlotLocator", %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [4 x i16] }
%class.SkGlyph = type { i16, i16, i16, i16, i8*, %"struct.SkGlyph::PathData"*, float, float, i8, i8, %struct.SkPackedGlyphID }
%"struct.SkGlyph::PathData" = type <{ %"struct.SkGlyph::Intercept"*, %class.SkPath, i8, [7 x i8] }>
%"struct.SkGlyph::Intercept" = type { %"struct.SkGlyph::Intercept"*, [2 x float], [2 x float] }
%class.SkPath = type <{ %class.sk_sp.68, i32, %"struct.std::__1::atomic.34", %"struct.std::__1::atomic.34", i8, i8 }>
%class.sk_sp.68 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt.69, %struct.SkRect, [4 x i8], %class.SkTDArray.70, %class.SkTDArray.71, %class.SkTDArray.72, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt.69 = type { %"struct.std::__1::atomic" }
%struct.SkRect = type { float, float, float, float }
%class.SkTDArray.70 = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.71 = type { i8*, i32, i32 }
%class.SkTDArray.72 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.73 }
%class.SkTDArray.73 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.74", [3 x i8] }
%"struct.std::__1::atomic.74" = type { %"struct.std::__1::__atomic_base.75" }
%"struct.std::__1::__atomic_base.75" = type { %"struct.std::__1::__cxx_atomic_impl.76" }
%"struct.std::__1::__cxx_atomic_impl.76" = type { %"struct.std::__1::__cxx_atomic_base_impl.77" }
%"struct.std::__1::__cxx_atomic_base_impl.77" = type { i8 }
%class.GrDeferredUploadTarget = type { i32 (...)** }
%class.SkAutoSMalloc = type { i8*, i64, [256 x i32] }
%"class.GrDrawOpAtlas::BulkUseTokenUpdater" = type { %class.SkSTArray, [4 x i32] }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.78 }
%class.SkAlignedSTStorage = type { [32 x i8] }
%class.SkTArray.78 = type { %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"*, i64 }
%"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData" = type { i32, i32 }
%class.GrOnFlushResourceProvider = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque

$_ZN14GrAtlasManager8preFlushEP25GrOnFlushResourceProvider6SkSpanIKjE = comdat any

$_ZN14GrAtlasManager9postFlushE21GrDeferredUploadToken6SkSpanIKjE = comdat any

$_ZN14GrAtlasManager24retainOnFreeGpuResourcesEv = comdat any

$_ZN8SkTArrayIN13GrDrawOpAtlas19BulkUseTokenUpdater8PlotDataELb1EE12checkReallocEiNS3_11ReallocTypeE = comdat any

$_ZN13GrDrawOpAtlasD2Ev = comdat any

@_ZTV14GrAtlasManager = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrAtlasManager*)* @_ZN14GrAtlasManagerD2Ev to i8*), i8* bitcast (void (%class.GrAtlasManager*)* @_ZN14GrAtlasManagerD0Ev to i8*), i8* bitcast (void (%class.GrAtlasManager*, %class.GrOnFlushResourceProvider*, i32*, i64)* @_ZN14GrAtlasManager8preFlushEP25GrOnFlushResourceProvider6SkSpanIKjE to i8*), i8* bitcast (void (%class.GrAtlasManager*, i64, i32*, i64)* @_ZN14GrAtlasManager9postFlushE21GrDeferredUploadToken6SkSpanIKjE to i8*), i8* bitcast (i1 (%class.GrAtlasManager*)* @_ZN14GrAtlasManager24retainOnFreeGpuResourcesEv to i8*)] }, align 8
@.str = private unnamed_addr constant [55 x i8] c"../../third_party/skia/src/gpu/text/GrAtlasManager.cpp\00", align 1
@.str.1 = private unnamed_addr constant [21 x i8] c"Invalid GrMaskFormat\00", align 1
@_ZZL22get_packed_glyph_imageRK7SkGlyphi12GrMaskFormatPvE5masks = internal constant %class.SkMasks { %"struct.SkMasks::MaskInfo" { i32 63488, i32 11, i32 5 }, %"struct.SkMasks::MaskInfo" { i32 2016, i32 5, i32 6 }, %"struct.SkMasks::MaskInfo" { i32 31, i32 0, i32 5 }, %"struct.SkMasks::MaskInfo" zeroinitializer }, align 4
@switch.table._ZN14GrAtlasManager15addGlyphToAtlasERK7SkGlyphP7GrGlyphiP18GrResourceProviderP22GrDeferredUploadTargetb = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 0, i32 2, i32 1, i32 0], align 4
@switch.table._ZN14GrAtlasManager9initAtlasE12GrMaskFormat = private unnamed_addr constant [3 x i32] [i32 1, i32 2, i32 4], align 4

@_ZN14GrAtlasManagerC1EP15GrProxyProvidermN13GrDrawOpAtlas19AllowMultitexturingE = hidden unnamed_addr alias void (%class.GrAtlasManager*, %class.GrProxyProvider*, i64, i1), void (%class.GrAtlasManager*, %class.GrProxyProvider*, i64, i1)* @_ZN14GrAtlasManagerC2EP15GrProxyProvidermN13GrDrawOpAtlas19AllowMultitexturingE
@_ZN14GrAtlasManagerD1Ev = hidden unnamed_addr alias void (%class.GrAtlasManager*), void (%class.GrAtlasManager*)* @_ZN14GrAtlasManagerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14GrAtlasManagerC2EP15GrProxyProvidermN13GrDrawOpAtlas19AllowMultitexturingE(%class.GrAtlasManager*, %class.GrProxyProvider*, i64, i1 zeroext) unnamed_addr #0 align 2 {
  %5 = zext i1 %3 to i8
  %6 = getelementptr inbounds %class.GrAtlasManager, %class.GrAtlasManager* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %class.GrAtlasManager, %class.GrAtlasManager* %0, i64 0, i32 1, i32 0
  store i64 1, i64* %7, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV14GrAtlasManager, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %8 = getelementptr inbounds %class.GrAtlasManager, %class.GrAtlasManager* %0, i64 0, i32 2
  store i8 %5, i8* %8, align 8
  %9 = getelementptr %class.GrAtlasManager, %class.GrAtlasManager* %0, i64 0, i32 4, i64 0
  %10 = bitcast %"class.std::__1::unique_ptr"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false)
  %11 = getelementptr inbounds %class.GrAtlasManager, %class.GrAtlasManager* %0, i64 0, i32 5
  store %class.GrProxyProvider* %1, %class.GrProxyProvider** %11, align 8
  %12 = getelementptr inbounds %class.GrAtlasManager, %class.GrAtlasManager* %0, i64 0, i32 6
  tail call void @_ZNK15GrProxyProvider7refCapsEv(%class.sk_sp.48* sret %12, %class.GrProxyProvider* %1) #7
  %13 = getelementptr inbounds %class.GrAtlasManager, %class.GrAtlasManager* %0, i64 0, i32 7
  %14 = getelementptr inbounds %class.sk_sp.48, %class.sk_sp.48* %12, i64 0, i32 0
  %15 = load %class.GrCaps*, %class.GrCaps** %14, align 8
  %16 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %15, i64 0, i32 11
  %17 = load i32, i32* %16, align 4
  tail call void @_ZN19GrDrawOpAtlasConfigC1Eim(%class.GrDrawOpAtlasConfig* %13, i32 %17, i64 %2) #7
  ret void
}

declare void @_ZNK15GrProxyProvider7refCapsEv(%class.sk_sp.48* sret, %class.GrProxyProvider*) local_unnamed_addr #1

declare void @_ZN19GrDrawOpAtlasConfigC1Eim(%class.GrDrawOpAtlasConfig*, i32, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14GrAtlasManagerD2Ev(%class.GrAtlasManager*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrAtlasManager, %class.GrAtlasManager* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV14GrAtlasManager, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrAtlasManager, %class.GrAtlasManager* %0, i64 0, i32 6, i32 0
  %4 = load %class.GrCaps*, %class.GrCaps** %3, align 8
  %5 = icmp eq %class.GrCaps* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.GrCaps* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.GrCaps* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #7
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = getelementptr inbounds %class.GrAtlasManager, %class.GrAtlasManager* %0, i64 0, i32 4, i64 2, i32 0, i32 0, i32 0
  %18 = load %class.GrDrawOpAtlas*, %class.GrDrawOpAtlas** %17, align 8
  store %class.GrDrawOpAtlas* null, %class.GrDrawOpAtlas** %17, align 8
  %19 = icmp eq %class.GrDrawOpAtlas* %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %16
  tail call void @_ZN13GrDrawOpAtlasD2Ev(%class.GrDrawOpAtlas* nonnull %18) #7
  %21 = bitcast %class.GrDrawOpAtlas* %18 to i8*
  tail call void @_ZdlPv(i8* %21) #8
  br label %22

22:                                               ; preds = %16, %20
  %23 = getelementptr inbounds %class.GrAtlasManager, %class.GrAtlasManager* %0, i64 0, i32 4, i64 1, i32 0, i32 0, i32 0
  %24 = load %class.GrDrawOpAtlas*, %class.GrDrawOpAtlas** %23, align 8
  store %class.GrDrawOpAtlas* null, %class.GrDrawOpAtlas** %23, align 8
  %25 = icmp eq %class.GrDrawOpAtlas* %24, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %22
  tail call void @_ZN13GrDrawOpAtlasD2Ev(%class.GrDrawOpAtlas* nonnull %24) #7
  %27 = bitcast %class.GrDrawOpAtlas* %24 to i8*
  tail call void @_ZdlPv(i8* %27) #8
  br label %28

28:                                               ; preds = %26, %22
  %29 = getelementptr inbounds %class.GrAtlasManager, %class.GrAtlasManager* %0, i64 0, i32 4, i64 0, i32 0, i32 0, i32 0
  %30 = load %class.GrDrawOpAtlas*, %class.GrDrawOpAtlas** %29, align 8
  store %class.GrDrawOpAtlas* null, %class.GrDrawOpAtlas** %29, align 8
  %31 = icmp eq %class.GrDrawOpAtlas* %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %28
  tail call void @_ZN13GrDrawOpAtlasD2Ev(%class.GrDrawOpAtlas* nonnull %30) #7
  %33 = bitcast %class.GrDrawOpAtlas* %30 to i8*
  tail call void @_ZdlPv(i8* %33) #8
  br label %34

34:                                               ; preds = %32, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14GrAtlasManagerD0Ev(%class.GrAtlasManager*) unnamed_addr #0 align 2 {
  tail call void @_ZN14GrAtlasManagerD2Ev(%class.GrAtlasManager* %0) #7
  %2 = bitcast %class.GrAtlasManager* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14GrAtlasManager7freeAllEv(%class.GrAtlasManager* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrAtlasManager, %class.GrAtlasManager* %0, i64 0, i32 4, i64 0, i32 0, i32 0, i32 0
  %3 = load %class.GrDrawOpAtlas*, %class.GrDrawOpAtlas** %2, align 8
  store %class.GrDrawOpAtlas* null, %class.GrDrawOpAtlas** %2, align 8
  %4 = icmp eq %class.GrDrawOpAtlas* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN13GrDrawOpAtlasD2Ev(%class.GrDrawOpAtlas* nonnull %3) #7
  %6 = bitcast %class.GrDrawOpAtlas* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #8
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %class.GrAtlasManager, %class.GrAtlasManager* %0, i64 0, i32 4, i64 1, i32 0, i32 0, i32 0
  %9 = load %class.GrDrawOpAtlas*, %class.GrDrawOpAtlas** %8, align 8
  store %class.GrDrawOpAtlas* null, %class.GrDrawOpAtlas** %8, align 8
  %10 = icmp eq %class.GrDrawOpAtlas* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  tail call void @_ZN13GrDrawOpAtlasD2Ev(%class.GrDrawOpAtlas* nonnull %9) #7
  %12 = bitcast %class.GrDrawOpAtlas* %9 to i8*
  tail call void @_ZdlPv(i8* %12) #8
  br label %13

13:                                               ; preds = %11, %7
  %14 = getelementptr inbounds %class.GrAtlasManager, %class.GrAtlasManager* %0, i64 0, i32 4, i64 2, i32 0, i32 0, i32 0
  %15 = load %class.GrDrawOpAtlas*, %class.GrDrawOpAtlas** %14, align 8
  store %class.GrDrawOpAtlas* null, %class.GrDrawOpAtlas** %14, align 8
  %16 = icmp eq %class.GrDrawOpAtlas* %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %13
  tail call void @_ZN13GrDrawOpAtlasD2Ev(%class.GrDrawOpAtlas* nonnull %15) #7
  %18 = bitcast %class.GrDrawOpAtlas* %15 to i8*
  tail call void @_ZdlPv(i8* %18) #8
  br label %19

19:                                               ; preds = %17, %13
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN14GrAtlasManager8hasGlyphE12GrMaskFormatP7GrGlyph(%class.GrAtlasManager* nocapture readonly, i32, %class.GrGlyph* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.GrBackendFormat, align 8
  %5 = icmp eq i32 %1, 1
  %6 = bitcast %class.GrBackendFormat* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %6) #7
  br i1 %5, label %7, label %15

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.GrAtlasManager, %class.GrAtlasManager* %0, i64 0, i32 5
  %9 = load %class.GrProxyProvider*, %class.GrProxyProvider** %8, align 8
  %10 = tail call %class.GrCaps* @_ZNK15GrProxyProvider4capsEv(%class.GrProxyProvider* %9) #7
  call void @_ZNK6GrCaps23getDefaultBackendFormatE11GrColorType12GrRenderable(%class.GrBackendFormat* nonnull sret %4, %class.GrCaps* %10, i32 2, i1 zeroext false) #7
  %11 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %4, i64 0, i32 1
  %12 = load i8, i8* %11, align 4, !range !2
  %13 = icmp eq i8 %12, 0
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %6) #7
  %14 = select i1 %13, i32 2, i32 1
  br label %16

15:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %6) #7
  br label %16

16:                                               ; preds = %7, %15
  %17 = phi i32 [ %14, %7 ], [ %1, %15 ]
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds %class.GrAtlasManager, %class.GrAtlasManager* %0, i64 0, i32 4, i64 %18, i32 0, i32 0, i32 0
  %20 = load %class.GrDrawOpAtlas*, %class.GrDrawOpAtlas** %19, align 8
  %21 = getelementptr inbounds %class.GrGlyph, %class.GrGlyph* %2, i64 0, i32 1, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %47, label %24

24:                                               ; preds = %16
  %25 = lshr i64 %22, 48
  %26 = trunc i64 %25 to i32
  %27 = and i32 %26, 255
  %28 = lshr i64 %22, 56
  %29 = getelementptr inbounds %class.GrDrawOpAtlas, %class.GrDrawOpAtlas* %20, i64 0, i32 6
  %30 = load i32, i32* %29, align 4
  %31 = icmp ult i32 %27, %30
  br i1 %31, label %32, label %47

32:                                               ; preds = %24
  %33 = getelementptr inbounds %class.GrDrawOpAtlas, %class.GrDrawOpAtlas* %20, i64 0, i32 13, i64 %28, i32 0, i32 0, i32 0, i32 0
  %34 = load %class.sk_sp.59*, %class.sk_sp.59** %33, align 8
  %35 = zext i32 %27 to i64
  %36 = and i64 %22, 281474976710655
  %37 = getelementptr inbounds %class.sk_sp.59, %class.sk_sp.59* %34, i64 %35, i32 0
  %38 = load %"class.GrDrawOpAtlas::Plot"*, %"class.GrDrawOpAtlas::Plot"** %37, align 8
  %39 = getelementptr inbounds %"class.GrDrawOpAtlas::Plot", %"class.GrDrawOpAtlas::Plot"* %38, i64 0, i32 8
  %40 = load i64, i64* %39, align 8
  %41 = trunc i64 %28 to i32
  %42 = getelementptr inbounds %class.GrDrawOpAtlas, %class.GrDrawOpAtlas* %20, i64 0, i32 15
  %43 = load i32, i32* %42, align 4
  %44 = icmp ugt i32 %43, %41
  %45 = icmp eq i64 %40, %36
  %46 = and i1 %45, %44
  br label %47

47:                                               ; preds = %16, %24, %32
  %48 = phi i1 [ %46, %32 ], [ false, %24 ], [ false, %16 ]
  ret i1 %48
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN14GrAtlasManager15addGlyphToAtlasERK7SkGlyphP7GrGlyphiP18GrResourceProviderP22GrDeferredUploadTargetb(%class.GrAtlasManager* nocapture readonly, %class.SkGlyph* dereferenceable(40), %class.GrGlyph*, i32, %class.GrResourceProvider*, %class.GrDeferredUploadTarget*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %8 = alloca %class.GrBackendFormat, align 8
  %9 = alloca %class.GrBackendFormat, align 8
  %10 = alloca %class.SkAutoSMalloc, align 8
  %11 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %1, i64 0, i32 4
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %324, label %14

14:                                               ; preds = %7
  %15 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %1, i64 0, i32 8
  %16 = load i8, i8* %15, align 8
  switch i8 %16, label %18 [
    i8 0, label %28
    i8 5, label %28
    i8 1, label %28
    i8 2, label %28
    i8 4, label %19
    i8 3, label %17
  ]

17:                                               ; preds = %14
  br label %28

18:                                               ; preds = %14
  tail call void @llvm.trap() #7
  unreachable

19:                                               ; preds = %14
  %20 = bitcast %class.GrBackendFormat* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %20) #7
  %21 = getelementptr inbounds %class.GrAtlasManager, %class.GrAtlasManager* %0, i64 0, i32 5
  %22 = load %class.GrProxyProvider*, %class.GrProxyProvider** %21, align 8
  %23 = tail call %class.GrCaps* @_ZNK15GrProxyProvider4capsEv(%class.GrProxyProvider* %22) #7
  call void @_ZNK6GrCaps23getDefaultBackendFormatE11GrColorType12GrRenderable(%class.GrBackendFormat* nonnull sret %8, %class.GrCaps* %23, i32 2, i1 zeroext false) #7
  %24 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %8, i64 0, i32 1
  %25 = load i8, i8* %24, align 4, !range !2
  %26 = icmp eq i8 %25, 0
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %20) #7
  %27 = select i1 %26, i32 2, i32 1
  br label %28

28:                                               ; preds = %14, %14, %14, %14, %17, %19
  %29 = phi i32 [ %27, %19 ], [ 0, %14 ], [ 0, %14 ], [ 0, %14 ], [ 0, %14 ], [ 2, %17 ]
  %30 = shl i32 1, %29
  %31 = zext i1 %6 to i32
  %32 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %1, i64 0, i32 0
  %33 = load i16, i16* %32, align 8
  %34 = zext i16 %33 to i32
  %35 = shl nuw nsw i32 %31, 1
  %36 = add nuw nsw i32 %35, %34
  %37 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %1, i64 0, i32 1
  %38 = load i16, i16* %37, align 2
  %39 = zext i16 %38 to i32
  %40 = add nuw nsw i32 %35, %39
  %41 = shl i32 %36, %29
  %42 = mul nsw i32 %40, %41
  %43 = zext i32 %42 to i64
  %44 = bitcast %class.SkAutoSMalloc* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1040, i8* nonnull %44) #7
  %45 = getelementptr inbounds %class.SkAutoSMalloc, %class.SkAutoSMalloc* %10, i64 0, i32 2
  %46 = bitcast [256 x i32]* %45 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 1024, i1 false)
  %47 = getelementptr inbounds %class.SkAutoSMalloc, %class.SkAutoSMalloc* %10, i64 0, i32 2, i64 0
  %48 = bitcast %class.SkAutoSMalloc* %10 to i32**
  store i32* %47, i32** %48, align 8
  %49 = getelementptr inbounds %class.SkAutoSMalloc, %class.SkAutoSMalloc* %10, i64 0, i32 1
  store i64 1024, i64* %49, align 8
  %50 = icmp ult i32 %42, 1025
  %51 = bitcast i32* %47 to i8*
  br i1 %50, label %55, label %52

52:                                               ; preds = %28
  %53 = getelementptr inbounds %class.SkAutoSMalloc, %class.SkAutoSMalloc* %10, i64 0, i32 0
  %54 = call i8* @_Z15sk_malloc_flagsmj(i64 %43, i32 2) #7
  store i8* %54, i8** %53, align 8
  store i64 %43, i64* %49, align 8
  br label %55

55:                                               ; preds = %28, %52
  %56 = phi i8* [ %51, %28 ], [ %54, %52 ]
  %57 = getelementptr inbounds %class.SkAutoSMalloc, %class.SkAutoSMalloc* %10, i64 0, i32 0
  br i1 %6, label %58, label %66

58:                                               ; preds = %55
  %59 = icmp eq i32 %42, 0
  br i1 %59, label %61, label %60

60:                                               ; preds = %58
  call void @llvm.memset.p0i8.i64(i8* align 1 %56, i8 0, i64 %43, i1 false) #7
  br label %61

61:                                               ; preds = %58, %60
  %62 = zext i32 %41 to i64
  %63 = getelementptr inbounds i8, i8* %56, i64 %62
  %64 = zext i32 %30 to i64
  %65 = getelementptr inbounds i8, i8* %63, i64 %64
  br label %66

66:                                               ; preds = %61, %55
  %67 = phi i8* [ %65, %61 ], [ %56, %55 ]
  %68 = load i16, i16* %32, align 8
  %69 = zext i16 %68 to i32
  %70 = load i16, i16* %37, align 2
  %71 = zext i16 %70 to i32
  %72 = load i8*, i8** %11, align 8
  %73 = load i8, i8* %15, align 8
  %74 = icmp ult i8 %73, 6
  br i1 %74, label %76, label %75

75:                                               ; preds = %66
  call void @llvm.trap() #7
  unreachable

76:                                               ; preds = %66
  %77 = sext i8 %73 to i64
  %78 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table._ZN14GrAtlasManager15addGlyphToAtlasERK7SkGlyphP7GrGlyphiP18GrResourceProviderP22GrDeferredUploadTargetb, i64 0, i64 %77
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, %29
  br i1 %80, label %81, label %192

81:                                               ; preds = %76
  %82 = call i64 @_ZNK7SkGlyph8rowBytesEv(%class.SkGlyph* %1) #7
  %83 = load i8, i8* %15, align 8
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %118, label %85

85:                                               ; preds = %81
  %86 = trunc i64 %82 to i32
  %87 = icmp eq i32 %41, %86
  br i1 %87, label %115, label %88

88:                                               ; preds = %85
  %89 = icmp eq i16 %70, 0
  br i1 %89, label %276, label %90

90:                                               ; preds = %88
  %91 = shl i32 %69, %29
  %92 = zext i32 %91 to i64
  %93 = shl i64 %82, 32
  %94 = ashr exact i64 %93, 32
  %95 = zext i32 %41 to i64
  %96 = add nsw i32 %71, -1
  %97 = and i32 %71, 3
  %98 = icmp ult i32 %96, 3
  br i1 %98, label %253, label %99

99:                                               ; preds = %90
  %100 = sub nsw i32 %71, %97
  br label %101

101:                                              ; preds = %101, %99
  %102 = phi i8* [ %67, %99 ], [ %112, %101 ]
  %103 = phi i8* [ %72, %99 ], [ %111, %101 ]
  %104 = phi i32 [ %100, %99 ], [ %113, %101 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %102, i8* align 1 %103, i64 %92, i1 false) #7
  %105 = getelementptr inbounds i8, i8* %103, i64 %94
  %106 = getelementptr inbounds i8, i8* %102, i64 %95
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %106, i8* align 1 %105, i64 %92, i1 false) #7
  %107 = getelementptr inbounds i8, i8* %105, i64 %94
  %108 = getelementptr inbounds i8, i8* %106, i64 %95
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %108, i8* align 1 %107, i64 %92, i1 false) #7
  %109 = getelementptr inbounds i8, i8* %107, i64 %94
  %110 = getelementptr inbounds i8, i8* %108, i64 %95
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %110, i8* align 1 %109, i64 %92, i1 false) #7
  %111 = getelementptr inbounds i8, i8* %109, i64 %94
  %112 = getelementptr inbounds i8, i8* %110, i64 %95
  %113 = add i32 %104, -4
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %253, label %101

115:                                              ; preds = %85
  %116 = mul nsw i32 %41, %71
  %117 = zext i32 %116 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %67, i8* align 1 %72, i64 %117, i1 false) #7
  br label %276

118:                                              ; preds = %81
  switch i32 %29, label %191 [
    i32 0, label %119
    i32 1, label %152
  ]

119:                                              ; preds = %118
  %120 = icmp eq i16 %70, 0
  br i1 %120, label %249, label %121

121:                                              ; preds = %119
  %122 = icmp eq i16 %68, 0
  %123 = zext i32 %41 to i64
  %124 = shl i64 %82, 32
  %125 = ashr exact i64 %124, 32
  br label %126

126:                                              ; preds = %145, %121
  %127 = phi i32 [ 0, %121 ], [ %150, %145 ]
  %128 = phi i8* [ %67, %121 ], [ %148, %145 ]
  %129 = phi i8* [ %72, %121 ], [ %149, %145 ]
  br i1 %122, label %145, label %135

130:                                              ; preds = %361, %354, %347, %340, %333, %326, %135, %368
  %131 = phi i8* [ %142, %135 ], [ %330, %326 ], [ %337, %333 ], [ %344, %340 ], [ %351, %347 ], [ %358, %354 ], [ %365, %361 ], [ %372, %368 ]
  %132 = phi i32 [ %143, %135 ], [ %331, %326 ], [ %338, %333 ], [ %345, %340 ], [ %352, %347 ], [ %359, %354 ], [ %366, %361 ], [ %373, %368 ]
  %133 = getelementptr inbounds i8, i8* %137, i64 1
  %134 = icmp sgt i32 %132, 0
  br i1 %134, label %135, label %145

135:                                              ; preds = %126, %130
  %136 = phi i8* [ %131, %130 ], [ %128, %126 ]
  %137 = phi i8* [ %133, %130 ], [ %129, %126 ]
  %138 = phi i32 [ %132, %130 ], [ %69, %126 ]
  %139 = load i8, i8* %137, align 1
  %140 = zext i8 %139 to i32
  %141 = ashr i8 %139, 7
  %142 = getelementptr inbounds i8, i8* %136, i64 1
  store i8 %141, i8* %136, align 1
  %143 = add nsw i32 %138, -1
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %130, label %326

145:                                              ; preds = %130, %126
  %146 = ptrtoint i8* %128 to i64
  %147 = add nsw i64 %146, %123
  %148 = inttoptr i64 %147 to i8*
  %149 = getelementptr inbounds i8, i8* %129, i64 %125
  %150 = add nuw nsw i32 %127, 1
  %151 = icmp eq i32 %150, %71
  br i1 %151, label %276, label %126

152:                                              ; preds = %118
  %153 = icmp eq i16 %70, 0
  br i1 %153, label %154, label %158

154:                                              ; preds = %152
  %155 = load i8*, i8** %57, align 8
  %156 = getelementptr inbounds %class.GrGlyph, %class.GrGlyph* %2, i64 0, i32 1
  %157 = bitcast %class.GrBackendFormat* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %157) #7
  br label %281

158:                                              ; preds = %152
  %159 = bitcast i8* %67 to i16*
  %160 = icmp eq i16 %68, 0
  %161 = zext i32 %41 to i64
  %162 = shl i64 %82, 32
  %163 = ashr exact i64 %162, 32
  br label %164

164:                                              ; preds = %184, %158
  %165 = phi i32 [ 0, %158 ], [ %189, %184 ]
  %166 = phi i16* [ %159, %158 ], [ %187, %184 ]
  %167 = phi i8* [ %72, %158 ], [ %188, %184 ]
  br i1 %160, label %184, label %173

168:                                              ; preds = %409, %402, %395, %388, %381, %374, %173, %416
  %169 = phi i16* [ %181, %173 ], [ %378, %374 ], [ %385, %381 ], [ %392, %388 ], [ %399, %395 ], [ %406, %402 ], [ %413, %409 ], [ %420, %416 ]
  %170 = phi i32 [ %182, %173 ], [ %379, %374 ], [ %386, %381 ], [ %393, %388 ], [ %400, %395 ], [ %407, %402 ], [ %414, %409 ], [ %421, %416 ]
  %171 = getelementptr inbounds i8, i8* %175, i64 1
  %172 = icmp sgt i32 %170, 0
  br i1 %172, label %173, label %184

173:                                              ; preds = %164, %168
  %174 = phi i16* [ %169, %168 ], [ %166, %164 ]
  %175 = phi i8* [ %171, %168 ], [ %167, %164 ]
  %176 = phi i32 [ %170, %168 ], [ %69, %164 ]
  %177 = load i8, i8* %175, align 1
  %178 = zext i8 %177 to i32
  %179 = ashr i8 %177, 7
  %180 = sext i8 %179 to i16
  %181 = getelementptr inbounds i16, i16* %174, i64 1
  store i16 %180, i16* %174, align 2
  %182 = add nsw i32 %176, -1
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %168, label %374

184:                                              ; preds = %168, %164
  %185 = ptrtoint i16* %166 to i64
  %186 = add nsw i64 %185, %161
  %187 = inttoptr i64 %186 to i16*
  %188 = getelementptr inbounds i8, i8* %167, i64 %163
  %189 = add nuw nsw i32 %165, 1
  %190 = icmp eq i32 %189, %71
  br i1 %190, label %276, label %164

191:                                              ; preds = %118
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 96, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0)) #9
  unreachable

192:                                              ; preds = %76
  %193 = icmp eq i8 %73, 4
  %194 = icmp eq i32 %29, 2
  %195 = and i1 %194, %193
  %196 = icmp ne i16 %70, 0
  br i1 %195, label %208, label %197

197:                                              ; preds = %192
  br i1 %196, label %198, label %276

198:                                              ; preds = %197
  %199 = shl i32 %69, %29
  %200 = icmp eq i32 %199, 0
  %201 = zext i32 %199 to i64
  %202 = zext i32 %41 to i64
  %203 = add nsw i32 %71, -1
  %204 = and i32 %71, 3
  %205 = icmp ult i32 %203, 3
  br i1 %205, label %265, label %206

206:                                              ; preds = %198
  %207 = sub nsw i32 %71, %204
  br label %243

208:                                              ; preds = %192
  br i1 %196, label %209, label %249

209:                                              ; preds = %208
  %210 = icmp eq i16 %68, 0
  br label %211

211:                                              ; preds = %215, %209
  %212 = phi i8* [ %67, %209 ], [ %217, %215 ]
  %213 = phi i32 [ 0, %209 ], [ %218, %215 ]
  %214 = phi i8* [ %72, %209 ], [ %216, %215 ]
  br i1 %210, label %215, label %220

215:                                              ; preds = %220, %211
  %216 = phi i8* [ %214, %211 ], [ %239, %220 ]
  %217 = phi i8* [ %212, %211 ], [ %240, %220 ]
  %218 = add nuw nsw i32 %213, 1
  %219 = icmp eq i32 %218, %71
  br i1 %219, label %276, label %211

220:                                              ; preds = %211, %220
  %221 = phi i8* [ %240, %220 ], [ %212, %211 ]
  %222 = phi i32 [ %241, %220 ], [ 0, %211 ]
  %223 = phi i8* [ %239, %220 ], [ %214, %211 ]
  %224 = bitcast i8* %223 to i16*
  %225 = load i16, i16* %224, align 1
  %226 = zext i16 %225 to i32
  %227 = call zeroext i8 @_ZNK7SkMasks6getRedEj(%class.SkMasks* nonnull @_ZZL22get_packed_glyph_imageRK7SkGlyphi12GrMaskFormatPvE5masks, i32 %226) #7
  %228 = zext i8 %227 to i32
  %229 = call zeroext i8 @_ZNK7SkMasks8getGreenEj(%class.SkMasks* nonnull @_ZZL22get_packed_glyph_imageRK7SkGlyphi12GrMaskFormatPvE5masks, i32 %226) #7
  %230 = zext i8 %229 to i32
  %231 = call zeroext i8 @_ZNK7SkMasks7getBlueEj(%class.SkMasks* nonnull @_ZZL22get_packed_glyph_imageRK7SkGlyphi12GrMaskFormatPvE5masks, i32 %226) #7
  %232 = zext i8 %231 to i32
  %233 = shl nuw nsw i32 %230, 8
  %234 = shl nuw nsw i32 %232, 16
  %235 = or i32 %233, %228
  %236 = or i32 %235, %234
  %237 = or i32 %236, -16777216
  %238 = bitcast i8* %221 to i32*
  store i32 %237, i32* %238, align 1
  %239 = getelementptr inbounds i8, i8* %223, i64 2
  %240 = getelementptr inbounds i8, i8* %221, i64 4
  %241 = add nuw nsw i32 %222, 1
  %242 = icmp eq i32 %241, %69
  br i1 %242, label %215, label %220

243:                                              ; preds = %429, %206
  %244 = phi i8* [ %67, %206 ], [ %430, %429 ]
  %245 = phi i32 [ %207, %206 ], [ %431, %429 ]
  br i1 %200, label %247, label %246

246:                                              ; preds = %243
  call void @llvm.memset.p0i8.i64(i8* align 1 %244, i8 0, i64 %201, i1 false) #7
  br label %247

247:                                              ; preds = %246, %243
  %248 = getelementptr inbounds i8, i8* %244, i64 %202
  br i1 %200, label %423, label %422

249:                                              ; preds = %119, %208
  %250 = load i8*, i8** %57, align 8
  %251 = getelementptr inbounds %class.GrGlyph, %class.GrGlyph* %2, i64 0, i32 1
  %252 = bitcast %class.GrBackendFormat* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %252) #7
  br label %292

253:                                              ; preds = %101, %90
  %254 = phi i8* [ %67, %90 ], [ %112, %101 ]
  %255 = phi i8* [ %72, %90 ], [ %111, %101 ]
  %256 = icmp eq i32 %97, 0
  br i1 %256, label %276, label %257

257:                                              ; preds = %253, %257
  %258 = phi i8* [ %262, %257 ], [ %254, %253 ]
  %259 = phi i8* [ %261, %257 ], [ %255, %253 ]
  %260 = phi i32 [ %263, %257 ], [ %97, %253 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %258, i8* align 1 %259, i64 %92, i1 false) #7
  %261 = getelementptr inbounds i8, i8* %259, i64 %94
  %262 = getelementptr inbounds i8, i8* %258, i64 %95
  %263 = add i32 %260, -1
  %264 = icmp eq i32 %263, 0
  br i1 %264, label %276, label %257, !llvm.loop !3

265:                                              ; preds = %429, %198
  %266 = phi i8* [ %67, %198 ], [ %430, %429 ]
  %267 = icmp eq i32 %204, 0
  br i1 %267, label %276, label %268

268:                                              ; preds = %265, %272
  %269 = phi i8* [ %273, %272 ], [ %266, %265 ]
  %270 = phi i32 [ %274, %272 ], [ %204, %265 ]
  br i1 %200, label %272, label %271

271:                                              ; preds = %268
  call void @llvm.memset.p0i8.i64(i8* align 1 %269, i8 0, i64 %201, i1 false) #7
  br label %272

272:                                              ; preds = %271, %268
  %273 = getelementptr inbounds i8, i8* %269, i64 %202
  %274 = add i32 %270, -1
  %275 = icmp eq i32 %274, 0
  br i1 %275, label %276, label %268, !llvm.loop !5

276:                                              ; preds = %265, %272, %215, %253, %257, %184, %145, %88, %115, %197
  %277 = load i8*, i8** %57, align 8
  %278 = getelementptr inbounds %class.GrGlyph, %class.GrGlyph* %2, i64 0, i32 1
  %279 = icmp eq i32 %29, 1
  %280 = bitcast %class.GrBackendFormat* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %280) #7
  br i1 %279, label %281, label %292

281:                                              ; preds = %154, %276
  %282 = phi i8* [ %157, %154 ], [ %280, %276 ]
  %283 = phi %"class.GrDrawOpAtlas::AtlasLocator"* [ %156, %154 ], [ %278, %276 ]
  %284 = phi i8* [ %155, %154 ], [ %277, %276 ]
  %285 = getelementptr inbounds %class.GrAtlasManager, %class.GrAtlasManager* %0, i64 0, i32 5
  %286 = load %class.GrProxyProvider*, %class.GrProxyProvider** %285, align 8
  %287 = call %class.GrCaps* @_ZNK15GrProxyProvider4capsEv(%class.GrProxyProvider* %286) #7
  call void @_ZNK6GrCaps23getDefaultBackendFormatE11GrColorType12GrRenderable(%class.GrBackendFormat* nonnull sret %9, %class.GrCaps* %287, i32 2, i1 zeroext false) #7
  %288 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %9, i64 0, i32 1
  %289 = load i8, i8* %288, align 4, !range !2
  %290 = icmp eq i8 %289, 0
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %282) #7
  %291 = select i1 %290, i32 2, i32 1
  br label %296

292:                                              ; preds = %249, %276
  %293 = phi i8* [ %252, %249 ], [ %280, %276 ]
  %294 = phi %"class.GrDrawOpAtlas::AtlasLocator"* [ %251, %249 ], [ %278, %276 ]
  %295 = phi i8* [ %250, %249 ], [ %277, %276 ]
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %293) #7
  br label %296

296:                                              ; preds = %281, %292
  %297 = phi %"class.GrDrawOpAtlas::AtlasLocator"* [ %283, %281 ], [ %294, %292 ]
  %298 = phi i8* [ %284, %281 ], [ %295, %292 ]
  %299 = phi i32 [ %291, %281 ], [ %29, %292 ]
  %300 = sext i32 %299 to i64
  %301 = getelementptr inbounds %class.GrAtlasManager, %class.GrAtlasManager* %0, i64 0, i32 4, i64 %300, i32 0, i32 0, i32 0
  %302 = load %class.GrDrawOpAtlas*, %class.GrDrawOpAtlas** %301, align 8
  %303 = call i32 @_ZN13GrDrawOpAtlas10addToAtlasEP18GrResourceProviderP22GrDeferredUploadTargetiiPKvPNS_12AtlasLocatorE(%class.GrDrawOpAtlas* %302, %class.GrResourceProvider* %4, %class.GrDeferredUploadTarget* %5, i32 %36, i32 %40, i8* %298, %"class.GrDrawOpAtlas::AtlasLocator"* %297) #7
  %304 = icmp eq i32 %303, 1
  br i1 %304, label %305, label %319

305:                                              ; preds = %296
  %306 = getelementptr inbounds %"class.GrDrawOpAtlas::AtlasLocator", %"class.GrDrawOpAtlas::AtlasLocator"* %297, i64 0, i32 1, i32 0, i64 0
  %307 = load i16, i16* %306, align 2
  %308 = trunc i32 %3 to i16
  %309 = add i16 %307, %308
  store i16 %309, i16* %306, align 2
  %310 = getelementptr inbounds %"class.GrDrawOpAtlas::AtlasLocator", %"class.GrDrawOpAtlas::AtlasLocator"* %297, i64 0, i32 1, i32 0, i64 1
  %311 = load i16, i16* %310, align 2
  %312 = add i16 %311, %308
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds %"class.GrDrawOpAtlas::AtlasLocator", %"class.GrDrawOpAtlas::AtlasLocator"* %297, i64 0, i32 1, i32 0, i64 2
  %314 = load i16, i16* %313, align 2
  %315 = sub i16 %314, %308
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds %"class.GrDrawOpAtlas::AtlasLocator", %"class.GrDrawOpAtlas::AtlasLocator"* %297, i64 0, i32 1, i32 0, i64 3
  %317 = load i16, i16* %316, align 2
  %318 = sub i16 %317, %308
  store i16 %318, i16* %316, align 2
  br label %319

319:                                              ; preds = %305, %296
  %320 = load i8*, i8** %57, align 8
  %321 = icmp eq i8* %320, %51
  br i1 %321, label %323, label %322

322:                                              ; preds = %319
  call void @_Z7sk_freePv(i8* %320) #7
  br label %323

323:                                              ; preds = %319, %322
  call void @llvm.lifetime.end.p0i8(i64 1040, i8* nonnull %44) #7
  br label %324

324:                                              ; preds = %7, %323
  %325 = phi i32 [ %303, %323 ], [ 0, %7 ]
  ret i32 %325

326:                                              ; preds = %135
  %327 = shl i32 %140, 25
  %328 = ashr i32 %327, 31
  %329 = trunc i32 %328 to i8
  %330 = getelementptr inbounds i8, i8* %136, i64 2
  store i8 %329, i8* %142, align 1
  %331 = add nsw i32 %138, -2
  %332 = icmp eq i32 %331, 0
  br i1 %332, label %130, label %333

333:                                              ; preds = %326
  %334 = shl i32 %140, 26
  %335 = ashr i32 %334, 31
  %336 = trunc i32 %335 to i8
  %337 = getelementptr inbounds i8, i8* %136, i64 3
  store i8 %336, i8* %330, align 1
  %338 = add nsw i32 %138, -3
  %339 = icmp eq i32 %338, 0
  br i1 %339, label %130, label %340

340:                                              ; preds = %333
  %341 = shl i32 %140, 27
  %342 = ashr i32 %341, 31
  %343 = trunc i32 %342 to i8
  %344 = getelementptr inbounds i8, i8* %136, i64 4
  store i8 %343, i8* %337, align 1
  %345 = add nsw i32 %138, -4
  %346 = icmp eq i32 %345, 0
  br i1 %346, label %130, label %347

347:                                              ; preds = %340
  %348 = shl i32 %140, 28
  %349 = ashr i32 %348, 31
  %350 = trunc i32 %349 to i8
  %351 = getelementptr inbounds i8, i8* %136, i64 5
  store i8 %350, i8* %344, align 1
  %352 = add nsw i32 %138, -5
  %353 = icmp eq i32 %352, 0
  br i1 %353, label %130, label %354

354:                                              ; preds = %347
  %355 = shl i32 %140, 29
  %356 = ashr i32 %355, 31
  %357 = trunc i32 %356 to i8
  %358 = getelementptr inbounds i8, i8* %136, i64 6
  store i8 %357, i8* %351, align 1
  %359 = add nsw i32 %138, -6
  %360 = icmp eq i32 %359, 0
  br i1 %360, label %130, label %361

361:                                              ; preds = %354
  %362 = shl i32 %140, 30
  %363 = ashr i32 %362, 31
  %364 = trunc i32 %363 to i8
  %365 = getelementptr inbounds i8, i8* %136, i64 7
  store i8 %364, i8* %358, align 1
  %366 = add nsw i32 %138, -7
  %367 = icmp eq i32 %366, 0
  br i1 %367, label %130, label %368

368:                                              ; preds = %361
  %369 = shl i32 %140, 31
  %370 = ashr exact i32 %369, 31
  %371 = trunc i32 %370 to i8
  %372 = getelementptr inbounds i8, i8* %136, i64 8
  store i8 %371, i8* %365, align 1
  %373 = add nsw i32 %138, -8
  br label %130

374:                                              ; preds = %173
  %375 = shl i32 %178, 25
  %376 = ashr i32 %375, 31
  %377 = trunc i32 %376 to i16
  %378 = getelementptr inbounds i16, i16* %174, i64 2
  store i16 %377, i16* %181, align 2
  %379 = add nsw i32 %176, -2
  %380 = icmp eq i32 %379, 0
  br i1 %380, label %168, label %381

381:                                              ; preds = %374
  %382 = shl i32 %178, 26
  %383 = ashr i32 %382, 31
  %384 = trunc i32 %383 to i16
  %385 = getelementptr inbounds i16, i16* %174, i64 3
  store i16 %384, i16* %378, align 2
  %386 = add nsw i32 %176, -3
  %387 = icmp eq i32 %386, 0
  br i1 %387, label %168, label %388

388:                                              ; preds = %381
  %389 = shl i32 %178, 27
  %390 = ashr i32 %389, 31
  %391 = trunc i32 %390 to i16
  %392 = getelementptr inbounds i16, i16* %174, i64 4
  store i16 %391, i16* %385, align 2
  %393 = add nsw i32 %176, -4
  %394 = icmp eq i32 %393, 0
  br i1 %394, label %168, label %395

395:                                              ; preds = %388
  %396 = shl i32 %178, 28
  %397 = ashr i32 %396, 31
  %398 = trunc i32 %397 to i16
  %399 = getelementptr inbounds i16, i16* %174, i64 5
  store i16 %398, i16* %392, align 2
  %400 = add nsw i32 %176, -5
  %401 = icmp eq i32 %400, 0
  br i1 %401, label %168, label %402

402:                                              ; preds = %395
  %403 = shl i32 %178, 29
  %404 = ashr i32 %403, 31
  %405 = trunc i32 %404 to i16
  %406 = getelementptr inbounds i16, i16* %174, i64 6
  store i16 %405, i16* %399, align 2
  %407 = add nsw i32 %176, -6
  %408 = icmp eq i32 %407, 0
  br i1 %408, label %168, label %409

409:                                              ; preds = %402
  %410 = shl i32 %178, 30
  %411 = ashr i32 %410, 31
  %412 = trunc i32 %411 to i16
  %413 = getelementptr inbounds i16, i16* %174, i64 7
  store i16 %412, i16* %406, align 2
  %414 = add nsw i32 %176, -7
  %415 = icmp eq i32 %414, 0
  br i1 %415, label %168, label %416

416:                                              ; preds = %409
  %417 = shl i32 %178, 31
  %418 = ashr exact i32 %417, 31
  %419 = trunc i32 %418 to i16
  %420 = getelementptr inbounds i16, i16* %174, i64 8
  store i16 %419, i16* %413, align 2
  %421 = add nsw i32 %176, -8
  br label %168

422:                                              ; preds = %247
  call void @llvm.memset.p0i8.i64(i8* align 1 %248, i8 0, i64 %201, i1 false) #7
  br label %423

423:                                              ; preds = %422, %247
  %424 = getelementptr inbounds i8, i8* %248, i64 %202
  br i1 %200, label %426, label %425

425:                                              ; preds = %423
  call void @llvm.memset.p0i8.i64(i8* align 1 %424, i8 0, i64 %201, i1 false) #7
  br label %426

426:                                              ; preds = %425, %423
  %427 = getelementptr inbounds i8, i8* %424, i64 %202
  br i1 %200, label %429, label %428

428:                                              ; preds = %426
  call void @llvm.memset.p0i8.i64(i8* align 1 %427, i8 0, i64 %201, i1 false) #7
  br label %429

429:                                              ; preds = %428, %426
  %430 = getelementptr inbounds i8, i8* %427, i64 %202
  %431 = add i32 %245, -4
  %432 = icmp eq i32 %431, 0
  br i1 %432, label %265, label %243
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN14GrAtlasManager10addToAtlasEP18GrResourceProviderP22GrDeferredUploadTarget12GrMaskFormatiiPKvPN13GrDrawOpAtlas12AtlasLocatorE(%class.GrAtlasManager* nocapture readonly, %class.GrResourceProvider*, %class.GrDeferredUploadTarget*, i32, i32, i32, i8*, %"class.GrDrawOpAtlas::AtlasLocator"*) local_unnamed_addr #0 align 2 {
  %9 = alloca %class.GrBackendFormat, align 8
  %10 = icmp eq i32 %3, 1
  %11 = bitcast %class.GrBackendFormat* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %11) #7
  br i1 %10, label %12, label %20

12:                                               ; preds = %8
  %13 = getelementptr inbounds %class.GrAtlasManager, %class.GrAtlasManager* %0, i64 0, i32 5
  %14 = load %class.GrProxyProvider*, %class.GrProxyProvider** %13, align 8
  %15 = tail call %class.GrCaps* @_ZNK15GrProxyProvider4capsEv(%class.GrProxyProvider* %14) #7
  call void @_ZNK6GrCaps23getDefaultBackendFormatE11GrColorType12GrRenderable(%class.GrBackendFormat* nonnull sret %9, %class.GrCaps* %15, i32 2, i1 zeroext false) #7
  %16 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %9, i64 0, i32 1
  %17 = load i8, i8* %16, align 4, !range !2
  %18 = icmp eq i8 %17, 0
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %11) #7
  %19 = select i1 %18, i32 2, i32 1
  br label %21

20:                                               ; preds = %8
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %11) #7
  br label %21

21:                                               ; preds = %12, %20
  %22 = phi i32 [ %19, %12 ], [ %3, %20 ]
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds %class.GrAtlasManager, %class.GrAtlasManager* %0, i64 0, i32 4, i64 %23, i32 0, i32 0, i32 0
  %25 = load %class.GrDrawOpAtlas*, %class.GrDrawOpAtlas** %24, align 8
  %26 = call i32 @_ZN13GrDrawOpAtlas10addToAtlasEP18GrResourceProviderP22GrDeferredUploadTargetiiPKvPNS_12AtlasLocatorE(%class.GrDrawOpAtlas* %25, %class.GrResourceProvider* %1, %class.GrDeferredUploadTarget* %2, i32 %4, i32 %5, i8* %6, %"class.GrDrawOpAtlas::AtlasLocator"* %7) #7
  ret i32 %26
}

declare i32 @_ZN13GrDrawOpAtlas10addToAtlasEP18GrResourceProviderP22GrDeferredUploadTargetiiPKvPNS_12AtlasLocatorE(%class.GrDrawOpAtlas*, %class.GrResourceProvider*, %class.GrDeferredUploadTarget*, i32, i32, i8*, %"class.GrDrawOpAtlas::AtlasLocator"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14GrAtlasManager28addGlyphToBulkAndSetUseTokenEPN13GrDrawOpAtlas19BulkUseTokenUpdaterE12GrMaskFormatP7GrGlyph21GrDeferredUploadToken(%class.GrAtlasManager* nocapture readonly, %"class.GrDrawOpAtlas::BulkUseTokenUpdater"*, i32, %class.GrGlyph* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %6 = alloca %class.GrBackendFormat, align 8
  %7 = getelementptr inbounds %class.GrGlyph, %class.GrGlyph* %3, i64 0, i32 1, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = lshr i64 %8, 48
  %10 = trunc i64 %9 to i32
  %11 = and i32 %10, 255
  %12 = lshr i64 %8, 56
  %13 = getelementptr inbounds %"class.GrDrawOpAtlas::BulkUseTokenUpdater", %"class.GrDrawOpAtlas::BulkUseTokenUpdater"* %1, i64 0, i32 1, i64 %12
  %14 = load i32, i32* %13, align 4
  %15 = shl i32 1, %11
  %16 = and i32 %15, %14
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %93

18:                                               ; preds = %5
  %19 = or i32 %15, %14
  store i32 %19, i32* %13, align 4
  %20 = getelementptr inbounds %"class.GrDrawOpAtlas::BulkUseTokenUpdater", %"class.GrDrawOpAtlas::BulkUseTokenUpdater"* %1, i64 0, i32 0, i32 0, i32 0, i64 32
  %21 = bitcast i8* %20 to %class.SkTArray.78*
  tail call void @_ZN8SkTArrayIN13GrDrawOpAtlas19BulkUseTokenUpdater8PlotDataELb1EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.78* %21, i32 1, i32 1) #7
  %22 = bitcast i8* %20 to %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"**
  %23 = load %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"*, %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"** %22, align 8
  %24 = getelementptr inbounds %"class.GrDrawOpAtlas::BulkUseTokenUpdater", %"class.GrDrawOpAtlas::BulkUseTokenUpdater"* %1, i64 0, i32 0, i32 0, i32 0, i64 40
  %25 = bitcast i8* %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = lshr i64 %26, 1
  %28 = and i64 %27, 2147483647
  %29 = getelementptr inbounds %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData", %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"* %23, i64 %28
  %30 = add i64 %26, 2
  %31 = and i64 %30, 4294967294
  %32 = and i64 %26, -4294967295
  %33 = or i64 %31, %32
  store i64 %33, i64* %25, align 8
  %34 = bitcast %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"* %29 to i64*
  %35 = zext i32 %11 to i64
  %36 = shl nuw nsw i64 %35, 32
  %37 = or i64 %36, %12
  store i64 %37, i64* %34, align 4
  %38 = icmp eq i32 %2, 1
  %39 = bitcast %class.GrBackendFormat* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %39) #7
  br i1 %38, label %40, label %48

40:                                               ; preds = %18
  %41 = getelementptr inbounds %class.GrAtlasManager, %class.GrAtlasManager* %0, i64 0, i32 5
  %42 = load %class.GrProxyProvider*, %class.GrProxyProvider** %41, align 8
  %43 = tail call %class.GrCaps* @_ZNK15GrProxyProvider4capsEv(%class.GrProxyProvider* %42) #7
  call void @_ZNK6GrCaps23getDefaultBackendFormatE11GrColorType12GrRenderable(%class.GrBackendFormat* nonnull sret %6, %class.GrCaps* %43, i32 2, i1 zeroext false) #7
  %44 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %6, i64 0, i32 1
  %45 = load i8, i8* %44, align 4, !range !2
  %46 = icmp eq i8 %45, 0
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %39) #7
  %47 = select i1 %46, i32 2, i32 1
  br label %49

48:                                               ; preds = %18
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %39) #7
  br label %49

49:                                               ; preds = %40, %48
  %50 = phi i32 [ %47, %40 ], [ %2, %48 ]
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds %class.GrAtlasManager, %class.GrAtlasManager* %0, i64 0, i32 4, i64 %51, i32 0, i32 0, i32 0
  %53 = load %class.GrDrawOpAtlas*, %class.GrDrawOpAtlas** %52, align 8
  %54 = load i64, i64* %7, align 8
  %55 = lshr i64 %54, 48
  %56 = and i64 %55, 255
  %57 = lshr i64 %54, 56
  %58 = getelementptr inbounds %class.GrDrawOpAtlas, %class.GrDrawOpAtlas* %53, i64 0, i32 13, i64 %57, i32 0, i32 0, i32 0, i32 0
  %59 = load %class.sk_sp.59*, %class.sk_sp.59** %58, align 8
  %60 = getelementptr inbounds %class.sk_sp.59, %class.sk_sp.59* %59, i64 %56, i32 0
  %61 = load %"class.GrDrawOpAtlas::Plot"*, %"class.GrDrawOpAtlas::Plot"** %60, align 8
  %62 = getelementptr inbounds %class.GrDrawOpAtlas, %class.GrDrawOpAtlas* %53, i64 0, i32 13, i64 %57, i32 1
  %63 = getelementptr inbounds %class.SkTInternalLList, %class.SkTInternalLList* %62, i64 0, i32 0
  %64 = load %"class.GrDrawOpAtlas::Plot"*, %"class.GrDrawOpAtlas::Plot"** %63, align 8
  %65 = icmp eq %"class.GrDrawOpAtlas::Plot"* %64, %61
  br i1 %65, label %91, label %66

66:                                               ; preds = %49
  %67 = getelementptr inbounds %"class.GrDrawOpAtlas::Plot", %"class.GrDrawOpAtlas::Plot"* %61, i64 0, i32 1
  %68 = load %"class.GrDrawOpAtlas::Plot"*, %"class.GrDrawOpAtlas::Plot"** %67, align 8
  %69 = getelementptr inbounds %"class.GrDrawOpAtlas::Plot", %"class.GrDrawOpAtlas::Plot"* %61, i64 0, i32 2
  %70 = load %"class.GrDrawOpAtlas::Plot"*, %"class.GrDrawOpAtlas::Plot"** %69, align 8
  %71 = icmp eq %"class.GrDrawOpAtlas::Plot"* %68, null
  %72 = getelementptr inbounds %"class.GrDrawOpAtlas::Plot", %"class.GrDrawOpAtlas::Plot"* %68, i64 0, i32 2
  %73 = select i1 %71, %"class.GrDrawOpAtlas::Plot"** %63, %"class.GrDrawOpAtlas::Plot"** %72
  store %"class.GrDrawOpAtlas::Plot"* %70, %"class.GrDrawOpAtlas::Plot"** %73, align 8
  %74 = icmp eq %"class.GrDrawOpAtlas::Plot"* %70, null
  %75 = getelementptr inbounds %class.GrDrawOpAtlas, %class.GrDrawOpAtlas* %53, i64 0, i32 13, i64 %57, i32 1, i32 1
  %76 = getelementptr inbounds %"class.GrDrawOpAtlas::Plot", %"class.GrDrawOpAtlas::Plot"* %70, i64 0, i32 1
  %77 = select i1 %74, %"class.GrDrawOpAtlas::Plot"** %75, %"class.GrDrawOpAtlas::Plot"** %76
  store %"class.GrDrawOpAtlas::Plot"* %68, %"class.GrDrawOpAtlas::Plot"** %77, align 8
  %78 = bitcast %class.SkTInternalLList* %62 to i64*
  %79 = bitcast %"class.GrDrawOpAtlas::Plot"** %67 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %79, i8 0, i64 16, i1 false) #7
  %80 = load i64, i64* %78, align 8
  %81 = bitcast %"class.GrDrawOpAtlas::Plot"** %69 to i64*
  store i64 %80, i64* %81, align 8
  %82 = load %"class.GrDrawOpAtlas::Plot"*, %"class.GrDrawOpAtlas::Plot"** %63, align 8
  %83 = icmp eq %"class.GrDrawOpAtlas::Plot"* %82, null
  br i1 %83, label %86, label %84

84:                                               ; preds = %66
  %85 = getelementptr inbounds %"class.GrDrawOpAtlas::Plot", %"class.GrDrawOpAtlas::Plot"* %82, i64 0, i32 1
  store %"class.GrDrawOpAtlas::Plot"* %61, %"class.GrDrawOpAtlas::Plot"** %85, align 8
  br label %86

86:                                               ; preds = %84, %66
  store %"class.GrDrawOpAtlas::Plot"* %61, %"class.GrDrawOpAtlas::Plot"** %63, align 8
  %87 = getelementptr inbounds %class.GrDrawOpAtlas, %class.GrDrawOpAtlas* %53, i64 0, i32 13, i64 %57, i32 1, i32 1
  %88 = load %"class.GrDrawOpAtlas::Plot"*, %"class.GrDrawOpAtlas::Plot"** %87, align 8
  %89 = icmp eq %"class.GrDrawOpAtlas::Plot"* %88, null
  br i1 %89, label %90, label %91

90:                                               ; preds = %86
  store %"class.GrDrawOpAtlas::Plot"* %61, %"class.GrDrawOpAtlas::Plot"** %87, align 8
  br label %91

91:                                               ; preds = %49, %86, %90
  %92 = getelementptr inbounds %"class.GrDrawOpAtlas::Plot", %"class.GrDrawOpAtlas::Plot"* %61, i64 0, i32 4, i32 0
  store i64 %4, i64* %92, align 8
  br label %93

93:                                               ; preds = %5, %91
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14GrAtlasManager38setAtlasDimensionsToMinimum_ForTestingEv(%class.GrAtlasManager*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrAtlasManager, %class.GrAtlasManager* %0, i64 0, i32 4, i64 0, i32 0, i32 0, i32 0
  %3 = load %class.GrDrawOpAtlas*, %class.GrDrawOpAtlas** %2, align 8
  store %class.GrDrawOpAtlas* null, %class.GrDrawOpAtlas** %2, align 8
  %4 = icmp eq %class.GrDrawOpAtlas* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN13GrDrawOpAtlasD2Ev(%class.GrDrawOpAtlas* nonnull %3) #7
  %6 = bitcast %class.GrDrawOpAtlas* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #8
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %class.GrAtlasManager, %class.GrAtlasManager* %0, i64 0, i32 4, i64 1, i32 0, i32 0, i32 0
  %9 = load %class.GrDrawOpAtlas*, %class.GrDrawOpAtlas** %8, align 8
  store %class.GrDrawOpAtlas* null, %class.GrDrawOpAtlas** %8, align 8
  %10 = icmp eq %class.GrDrawOpAtlas* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  tail call void @_ZN13GrDrawOpAtlasD2Ev(%class.GrDrawOpAtlas* nonnull %9) #7
  %12 = bitcast %class.GrDrawOpAtlas* %9 to i8*
  tail call void @_ZdlPv(i8* %12) #8
  br label %13

13:                                               ; preds = %11, %7
  %14 = getelementptr inbounds %class.GrAtlasManager, %class.GrAtlasManager* %0, i64 0, i32 4, i64 2, i32 0, i32 0, i32 0
  %15 = load %class.GrDrawOpAtlas*, %class.GrDrawOpAtlas** %14, align 8
  store %class.GrDrawOpAtlas* null, %class.GrDrawOpAtlas** %14, align 8
  %16 = icmp eq %class.GrDrawOpAtlas* %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %13
  tail call void @_ZN13GrDrawOpAtlasD2Ev(%class.GrDrawOpAtlas* nonnull %15) #7
  %18 = bitcast %class.GrDrawOpAtlas* %15 to i8*
  tail call void @_ZdlPv(i8* %18) #8
  br label %19

19:                                               ; preds = %17, %13
  %20 = getelementptr inbounds %class.GrAtlasManager, %class.GrAtlasManager* %0, i64 0, i32 7
  tail call void @_ZN19GrDrawOpAtlasConfigC2Eim(%class.GrDrawOpAtlasConfig* %20, i32 2048, i64 0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN14GrAtlasManager9initAtlasE12GrMaskFormat(%class.GrAtlasManager*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.GrBackendFormat, align 8
  %4 = sext i32 %1 to i64
  %5 = getelementptr inbounds %class.GrAtlasManager, %class.GrAtlasManager* %0, i64 0, i32 4, i64 %4
  %6 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 0, i32 0, i32 0, i32 0
  %7 = load %class.GrDrawOpAtlas*, %class.GrDrawOpAtlas** %6, align 8
  %8 = icmp eq %class.GrDrawOpAtlas* %7, null
  br i1 %8, label %9, label %45

9:                                                ; preds = %2
  %10 = icmp ult i32 %1, 3
  br i1 %10, label %12, label %11

11:                                               ; preds = %9
  tail call void @llvm.trap() #7
  unreachable

12:                                               ; preds = %9
  %13 = sext i32 %1 to i64
  %14 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN14GrAtlasManager9initAtlasE12GrMaskFormat, i64 0, i64 %13
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %class.GrAtlasManager, %class.GrAtlasManager* %0, i64 0, i32 7
  %17 = tail call i64 @_ZNK19GrDrawOpAtlasConfig15atlasDimensionsE12GrMaskFormat(%class.GrDrawOpAtlasConfig* %16, i32 %1) #7
  %18 = trunc i64 %17 to i32
  %19 = lshr i64 %17, 32
  %20 = trunc i64 %19 to i32
  %21 = tail call i64 @_ZNK19GrDrawOpAtlasConfig14plotDimensionsE12GrMaskFormat(%class.GrDrawOpAtlasConfig* %16, i32 %1) #7
  %22 = trunc i64 %21 to i32
  %23 = lshr i64 %21, 32
  %24 = trunc i64 %23 to i32
  %25 = bitcast %class.GrBackendFormat* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %25) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 72, i1 false)
  %26 = getelementptr inbounds %class.GrAtlasManager, %class.GrAtlasManager* %0, i64 0, i32 6, i32 0
  %27 = load %class.GrCaps*, %class.GrCaps** %26, align 8
  call void @_ZNK6GrCaps23getDefaultBackendFormatE11GrColorType12GrRenderable(%class.GrBackendFormat* nonnull sret %3, %class.GrCaps* %27, i32 %15, i1 zeroext false) #7
  %28 = getelementptr inbounds %class.GrAtlasManager, %class.GrAtlasManager* %0, i64 0, i32 5
  %29 = load %class.GrProxyProvider*, %class.GrProxyProvider** %28, align 8
  %30 = getelementptr inbounds %class.GrAtlasManager, %class.GrAtlasManager* %0, i64 0, i32 1
  %31 = getelementptr inbounds %class.GrAtlasManager, %class.GrAtlasManager* %0, i64 0, i32 2
  %32 = load i8, i8* %31, align 8, !range !2
  %33 = icmp ne i8 %32, 0
  %34 = call %class.GrDrawOpAtlas* @_ZN13GrDrawOpAtlas4MakeEP15GrProxyProviderRK15GrBackendFormat11GrColorTypeiiiiPNS_17GenerationCounterENS_19AllowMultitexturingEPNS_16EvictionCallbackE(%class.GrProxyProvider* %29, %class.GrBackendFormat* nonnull dereferenceable(72) %3, i32 %15, i32 %18, i32 %20, i32 %22, i32 %24, %"class.GrDrawOpAtlas::GenerationCounter"* %30, i1 zeroext %33, %"class.GrDrawOpAtlas::EvictionCallback"* null) #7
  %35 = ptrtoint %class.GrDrawOpAtlas* %34 to i64
  %36 = load %class.GrDrawOpAtlas*, %class.GrDrawOpAtlas** %6, align 8
  %37 = bitcast %"class.std::__1::unique_ptr"* %5 to i64*
  store i64 %35, i64* %37, align 8
  %38 = icmp eq %class.GrDrawOpAtlas* %36, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %12
  call void @_ZN13GrDrawOpAtlasD2Ev(%class.GrDrawOpAtlas* nonnull %36) #7
  %40 = bitcast %class.GrDrawOpAtlas* %36 to i8*
  call void @_ZdlPv(i8* %40) #8
  %41 = load %class.GrDrawOpAtlas*, %class.GrDrawOpAtlas** %6, align 8
  br label %42

42:                                               ; preds = %39, %12
  %43 = phi %class.GrDrawOpAtlas* [ %41, %39 ], [ %34, %12 ]
  %44 = icmp eq %class.GrDrawOpAtlas* %43, null
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %25) #7
  br i1 %44, label %46, label %45

45:                                               ; preds = %42, %2
  br label %46

46:                                               ; preds = %42, %45
  %47 = phi i1 [ true, %45 ], [ false, %42 ]
  ret i1 %47
}

declare i64 @_ZNK19GrDrawOpAtlasConfig15atlasDimensionsE12GrMaskFormat(%class.GrDrawOpAtlasConfig*, i32) local_unnamed_addr #1

declare i64 @_ZNK19GrDrawOpAtlasConfig14plotDimensionsE12GrMaskFormat(%class.GrDrawOpAtlasConfig*, i32) local_unnamed_addr #1

declare void @_ZNK6GrCaps23getDefaultBackendFormatE11GrColorType12GrRenderable(%class.GrBackendFormat* sret, %class.GrCaps*, i32, i1 zeroext) local_unnamed_addr #1

declare %class.GrDrawOpAtlas* @_ZN13GrDrawOpAtlas4MakeEP15GrProxyProviderRK15GrBackendFormat11GrColorTypeiiiiPNS_17GenerationCounterENS_19AllowMultitexturingEPNS_16EvictionCallbackE(%class.GrProxyProvider*, %class.GrBackendFormat* dereferenceable(72), i32, i32, i32, i32, i32, %"class.GrDrawOpAtlas::GenerationCounter"*, i1 zeroext, %"class.GrDrawOpAtlas::EvictionCallback"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14GrAtlasManager8preFlushEP25GrOnFlushResourceProvider6SkSpanIKjE(%class.GrAtlasManager*, %class.GrOnFlushResourceProvider*, i32*, i64) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %class.GrAtlasManager, %class.GrAtlasManager* %0, i64 0, i32 4, i64 0, i32 0, i32 0, i32 0
  %6 = load %class.GrDrawOpAtlas*, %class.GrDrawOpAtlas** %5, align 8
  %7 = icmp eq %class.GrDrawOpAtlas* %6, null
  br i1 %7, label %9, label %8

8:                                                ; preds = %4
  tail call void @_ZN13GrDrawOpAtlas11instantiateEP25GrOnFlushResourceProvider(%class.GrDrawOpAtlas* nonnull %6, %class.GrOnFlushResourceProvider* %1) #7
  br label %9

9:                                                ; preds = %4, %8
  %10 = getelementptr inbounds %class.GrAtlasManager, %class.GrAtlasManager* %0, i64 0, i32 4, i64 1, i32 0, i32 0, i32 0
  %11 = load %class.GrDrawOpAtlas*, %class.GrDrawOpAtlas** %10, align 8
  %12 = icmp eq %class.GrDrawOpAtlas* %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %9
  tail call void @_ZN13GrDrawOpAtlas11instantiateEP25GrOnFlushResourceProvider(%class.GrDrawOpAtlas* nonnull %11, %class.GrOnFlushResourceProvider* %1) #7
  br label %14

14:                                               ; preds = %13, %9
  %15 = getelementptr inbounds %class.GrAtlasManager, %class.GrAtlasManager* %0, i64 0, i32 4, i64 2, i32 0, i32 0, i32 0
  %16 = load %class.GrDrawOpAtlas*, %class.GrDrawOpAtlas** %15, align 8
  %17 = icmp eq %class.GrDrawOpAtlas* %16, null
  br i1 %17, label %19, label %18

18:                                               ; preds = %14
  tail call void @_ZN13GrDrawOpAtlas11instantiateEP25GrOnFlushResourceProvider(%class.GrDrawOpAtlas* nonnull %16, %class.GrOnFlushResourceProvider* %1) #7
  br label %19

19:                                               ; preds = %18, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14GrAtlasManager9postFlushE21GrDeferredUploadToken6SkSpanIKjE(%class.GrAtlasManager*, i64, i32*, i64) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %class.GrAtlasManager, %class.GrAtlasManager* %0, i64 0, i32 4, i64 0, i32 0, i32 0, i32 0
  %6 = load %class.GrDrawOpAtlas*, %class.GrDrawOpAtlas** %5, align 8
  %7 = icmp eq %class.GrDrawOpAtlas* %6, null
  br i1 %7, label %9, label %8

8:                                                ; preds = %4
  tail call void @_ZN13GrDrawOpAtlas7compactE21GrDeferredUploadToken(%class.GrDrawOpAtlas* nonnull %6, i64 %1) #7
  br label %9

9:                                                ; preds = %4, %8
  %10 = getelementptr inbounds %class.GrAtlasManager, %class.GrAtlasManager* %0, i64 0, i32 4, i64 1, i32 0, i32 0, i32 0
  %11 = load %class.GrDrawOpAtlas*, %class.GrDrawOpAtlas** %10, align 8
  %12 = icmp eq %class.GrDrawOpAtlas* %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %9
  tail call void @_ZN13GrDrawOpAtlas7compactE21GrDeferredUploadToken(%class.GrDrawOpAtlas* nonnull %11, i64 %1) #7
  br label %14

14:                                               ; preds = %13, %9
  %15 = getelementptr inbounds %class.GrAtlasManager, %class.GrAtlasManager* %0, i64 0, i32 4, i64 2, i32 0, i32 0, i32 0
  %16 = load %class.GrDrawOpAtlas*, %class.GrDrawOpAtlas** %15, align 8
  %17 = icmp eq %class.GrDrawOpAtlas* %16, null
  br i1 %17, label %19, label %18

18:                                               ; preds = %14
  tail call void @_ZN13GrDrawOpAtlas7compactE21GrDeferredUploadToken(%class.GrDrawOpAtlas* nonnull %16, i64 %1) #7
  br label %19

19:                                               ; preds = %18, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN14GrAtlasManager24retainOnFreeGpuResourcesEv(%class.GrAtlasManager*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

declare %class.GrCaps* @_ZNK15GrProxyProvider4capsEv(%class.GrProxyProvider*) local_unnamed_addr #1

declare i64 @_ZNK7SkGlyph8rowBytesEv(%class.SkGlyph*) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #5

declare zeroext i8 @_ZNK7SkMasks6getRedEj(%class.SkMasks*, i32) local_unnamed_addr #1

declare zeroext i8 @_ZNK7SkMasks8getGreenEj(%class.SkMasks*, i32) local_unnamed_addr #1

declare zeroext i8 @_ZNK7SkMasks7getBlueEj(%class.SkMasks*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayIN13GrDrawOpAtlas19BulkUseTokenUpdater8PlotDataELb1EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.78*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.78, %class.SkTArray.78* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %65

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %65, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #7
  %45 = load i64, i64* %4, align 8
  %46 = shl i64 %45, 2
  %47 = and i64 %46, 17179869176
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %53, label %49

49:                                               ; preds = %35
  %50 = bitcast %class.SkTArray.78* %0 to i8**
  %51 = load i8*, i8** %50, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %44, i8* align 1 %51, i64 %47, i1 false) #7
  %52 = load i64, i64* %4, align 8
  br label %53

53:                                               ; preds = %35, %49
  %54 = phi i64 [ %45, %35 ], [ %52, %49 ]
  %55 = and i64 %54, 1
  %56 = icmp eq i64 %55, 0
  %57 = bitcast %class.SkTArray.78* %0 to i8**
  br i1 %56, label %61, label %58

58:                                               ; preds = %53
  %59 = load i8*, i8** %57, align 8
  tail call void @_Z7sk_freePv(i8* %59) #7
  %60 = load i64, i64* %4, align 8
  br label %61

61:                                               ; preds = %53, %58
  %62 = phi i64 [ %60, %58 ], [ %54, %53 ]
  store i8* %44, i8** %57, align 8
  %63 = and i64 %62, -4294967298
  %64 = or i64 %63, 1
  store i64 %64, i64* %4, align 8
  br label %65

65:                                               ; preds = %61, %32, %21
  ret void
}

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #1

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #1

declare void @_ZN19GrDrawOpAtlasConfigC2Eim(%class.GrDrawOpAtlasConfig*, i32, i64) unnamed_addr #1

declare void @_ZN13GrDrawOpAtlas11instantiateEP25GrOnFlushResourceProvider(%class.GrDrawOpAtlas*, %class.GrOnFlushResourceProvider*) local_unnamed_addr #1

declare void @_ZN13GrDrawOpAtlas7compactE21GrDeferredUploadToken(%class.GrDrawOpAtlas*, i64) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13GrDrawOpAtlasD2Ev(%class.GrDrawOpAtlas*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %class.GrDrawOpAtlas, %class.GrDrawOpAtlas* %0, i64 0, i32 13, i64 3, i32 0, i32 0, i32 0, i32 0
  %3 = load %class.sk_sp.59*, %class.sk_sp.59** %2, align 8
  store %class.sk_sp.59* null, %class.sk_sp.59** %2, align 8
  %4 = icmp eq %class.sk_sp.59* %3, null
  br i1 %4, label %32, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.sk_sp.59, %class.sk_sp.59* %3, i64 -1
  %7 = bitcast %class.sk_sp.59* %6 to i8*
  %8 = bitcast %class.sk_sp.59* %6 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %31, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %class.sk_sp.59, %class.sk_sp.59* %3, i64 %9
  br label %13

13:                                               ; preds = %29, %11
  %14 = phi %class.sk_sp.59* [ %15, %29 ], [ %12, %11 ]
  %15 = getelementptr inbounds %class.sk_sp.59, %class.sk_sp.59* %14, i64 -1
  %16 = getelementptr inbounds %class.sk_sp.59, %class.sk_sp.59* %15, i64 0, i32 0
  %17 = load %"class.GrDrawOpAtlas::Plot"*, %"class.GrDrawOpAtlas::Plot"** %16, align 8
  %18 = icmp eq %"class.GrDrawOpAtlas::Plot"* %17, null
  br i1 %18, label %29, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.GrDrawOpAtlas::Plot", %"class.GrDrawOpAtlas::Plot"* %17, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw add i32* %20, i32 -1 acq_rel
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %29

23:                                               ; preds = %19
  %24 = bitcast %"class.GrDrawOpAtlas::Plot"* %17 to %class.SkRefCntBase*
  %25 = bitcast %"class.GrDrawOpAtlas::Plot"* %17 to void (%class.SkRefCntBase*)***
  %26 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %25, align 8
  %27 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %26, i64 2
  %28 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, align 8
  tail call void %28(%class.SkRefCntBase* nonnull %24) #7
  br label %29

29:                                               ; preds = %23, %19, %13
  %30 = icmp eq %class.sk_sp.59* %15, %3
  br i1 %30, label %31, label %13

31:                                               ; preds = %29, %5
  tail call void @_ZdaPv(i8* %7) #8
  br label %32

32:                                               ; preds = %1, %31
  %33 = getelementptr inbounds %class.GrDrawOpAtlas, %class.GrDrawOpAtlas* %0, i64 0, i32 13, i64 2, i32 0, i32 0, i32 0, i32 0
  %34 = load %class.sk_sp.59*, %class.sk_sp.59** %33, align 8
  store %class.sk_sp.59* null, %class.sk_sp.59** %33, align 8
  %35 = icmp eq %class.sk_sp.59* %34, null
  br i1 %35, label %133, label %106

36:                                               ; preds = %195
  %37 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %197, i64 0, i32 1
  %38 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = atomicrmw add i32* %38, i32 -1 acq_rel
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %48

41:                                               ; preds = %36
  %42 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %37, i64 -2
  %43 = bitcast %class.SkNVRefCnt* %42 to %class.GrSurfaceProxy*
  %44 = bitcast %class.SkNVRefCnt* %42 to void (%class.GrSurfaceProxy*)***
  %45 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %44, align 8
  %46 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %45, i64 1
  %47 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %46, align 8
  tail call void %47(%class.GrSurfaceProxy* nonnull %43) #7
  br label %48

48:                                               ; preds = %195, %36, %41
  %49 = getelementptr inbounds %class.GrDrawOpAtlas, %class.GrDrawOpAtlas* %0, i64 0, i32 12, i64 2, i32 0, i32 0
  %50 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %49, align 8
  %51 = icmp eq %class.GrSurfaceProxy* %50, null
  br i1 %51, label %70, label %58

52:                                               ; preds = %102
  %53 = ptrtoint %"class.GrDrawOpAtlas::EvictionCallback"** %104 to i64
  %54 = getelementptr inbounds %class.GrDrawOpAtlas, %class.GrDrawOpAtlas* %0, i64 0, i32 11, i32 0, i32 1
  %55 = bitcast %"class.GrDrawOpAtlas::EvictionCallback"*** %54 to i64*
  store i64 %53, i64* %55, align 8
  %56 = bitcast %"class.GrDrawOpAtlas::EvictionCallback"** %104 to i8*
  tail call void @_ZdlPv(i8* %56) #8
  br label %57

57:                                               ; preds = %102, %52
  ret void

58:                                               ; preds = %48
  %59 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %50, i64 0, i32 1
  %60 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = atomicrmw add i32* %60, i32 -1 acq_rel
  %62 = icmp eq i32 %61, 1
  br i1 %62, label %63, label %70

63:                                               ; preds = %58
  %64 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %59, i64 -2
  %65 = bitcast %class.SkNVRefCnt* %64 to %class.GrSurfaceProxy*
  %66 = bitcast %class.SkNVRefCnt* %64 to void (%class.GrSurfaceProxy*)***
  %67 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %66, align 8
  %68 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %67, i64 1
  %69 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %68, align 8
  tail call void %69(%class.GrSurfaceProxy* nonnull %65) #7
  br label %70

70:                                               ; preds = %63, %58, %48
  %71 = getelementptr inbounds %class.GrDrawOpAtlas, %class.GrDrawOpAtlas* %0, i64 0, i32 12, i64 1, i32 0, i32 0
  %72 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %71, align 8
  %73 = icmp eq %class.GrSurfaceProxy* %72, null
  br i1 %73, label %86, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %72, i64 0, i32 1
  %76 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %75, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = atomicrmw add i32* %76, i32 -1 acq_rel
  %78 = icmp eq i32 %77, 1
  br i1 %78, label %79, label %86

79:                                               ; preds = %74
  %80 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %75, i64 -2
  %81 = bitcast %class.SkNVRefCnt* %80 to %class.GrSurfaceProxy*
  %82 = bitcast %class.SkNVRefCnt* %80 to void (%class.GrSurfaceProxy*)***
  %83 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %82, align 8
  %84 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %83, i64 1
  %85 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %84, align 8
  tail call void %85(%class.GrSurfaceProxy* nonnull %81) #7
  br label %86

86:                                               ; preds = %79, %74, %70
  %87 = getelementptr inbounds %class.GrDrawOpAtlas, %class.GrDrawOpAtlas* %0, i64 0, i32 12, i64 0, i32 0, i32 0
  %88 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %87, align 8
  %89 = icmp eq %class.GrSurfaceProxy* %88, null
  br i1 %89, label %102, label %90

90:                                               ; preds = %86
  %91 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %88, i64 0, i32 1
  %92 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %91, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = atomicrmw add i32* %92, i32 -1 acq_rel
  %94 = icmp eq i32 %93, 1
  br i1 %94, label %95, label %102

95:                                               ; preds = %90
  %96 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %91, i64 -2
  %97 = bitcast %class.SkNVRefCnt* %96 to %class.GrSurfaceProxy*
  %98 = bitcast %class.SkNVRefCnt* %96 to void (%class.GrSurfaceProxy*)***
  %99 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %98, align 8
  %100 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %99, i64 1
  %101 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %100, align 8
  tail call void %101(%class.GrSurfaceProxy* nonnull %97) #7
  br label %102

102:                                              ; preds = %95, %90, %86
  %103 = getelementptr inbounds %class.GrDrawOpAtlas, %class.GrDrawOpAtlas* %0, i64 0, i32 11, i32 0, i32 0
  %104 = load %"class.GrDrawOpAtlas::EvictionCallback"**, %"class.GrDrawOpAtlas::EvictionCallback"*** %103, align 8
  %105 = icmp eq %"class.GrDrawOpAtlas::EvictionCallback"** %104, null
  br i1 %105, label %57, label %52

106:                                              ; preds = %32
  %107 = getelementptr inbounds %class.sk_sp.59, %class.sk_sp.59* %34, i64 -1
  %108 = bitcast %class.sk_sp.59* %107 to i8*
  %109 = bitcast %class.sk_sp.59* %107 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %132, label %112

112:                                              ; preds = %106
  %113 = getelementptr inbounds %class.sk_sp.59, %class.sk_sp.59* %34, i64 %110
  br label %114

114:                                              ; preds = %130, %112
  %115 = phi %class.sk_sp.59* [ %116, %130 ], [ %113, %112 ]
  %116 = getelementptr inbounds %class.sk_sp.59, %class.sk_sp.59* %115, i64 -1
  %117 = getelementptr inbounds %class.sk_sp.59, %class.sk_sp.59* %116, i64 0, i32 0
  %118 = load %"class.GrDrawOpAtlas::Plot"*, %"class.GrDrawOpAtlas::Plot"** %117, align 8
  %119 = icmp eq %"class.GrDrawOpAtlas::Plot"* %118, null
  br i1 %119, label %130, label %120

120:                                              ; preds = %114
  %121 = getelementptr inbounds %"class.GrDrawOpAtlas::Plot", %"class.GrDrawOpAtlas::Plot"* %118, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %122 = atomicrmw add i32* %121, i32 -1 acq_rel
  %123 = icmp eq i32 %122, 1
  br i1 %123, label %124, label %130

124:                                              ; preds = %120
  %125 = bitcast %"class.GrDrawOpAtlas::Plot"* %118 to %class.SkRefCntBase*
  %126 = bitcast %"class.GrDrawOpAtlas::Plot"* %118 to void (%class.SkRefCntBase*)***
  %127 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %126, align 8
  %128 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %127, i64 2
  %129 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %128, align 8
  tail call void %129(%class.SkRefCntBase* nonnull %125) #7
  br label %130

130:                                              ; preds = %124, %120, %114
  %131 = icmp eq %class.sk_sp.59* %116, %34
  br i1 %131, label %132, label %114

132:                                              ; preds = %130, %106
  tail call void @_ZdaPv(i8* %108) #8
  br label %133

133:                                              ; preds = %132, %32
  %134 = getelementptr inbounds %class.GrDrawOpAtlas, %class.GrDrawOpAtlas* %0, i64 0, i32 13, i64 1, i32 0, i32 0, i32 0, i32 0
  %135 = load %class.sk_sp.59*, %class.sk_sp.59** %134, align 8
  store %class.sk_sp.59* null, %class.sk_sp.59** %134, align 8
  %136 = icmp eq %class.sk_sp.59* %135, null
  br i1 %136, label %164, label %137

137:                                              ; preds = %133
  %138 = getelementptr inbounds %class.sk_sp.59, %class.sk_sp.59* %135, i64 -1
  %139 = bitcast %class.sk_sp.59* %138 to i8*
  %140 = bitcast %class.sk_sp.59* %138 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %163, label %143

143:                                              ; preds = %137
  %144 = getelementptr inbounds %class.sk_sp.59, %class.sk_sp.59* %135, i64 %141
  br label %145

145:                                              ; preds = %161, %143
  %146 = phi %class.sk_sp.59* [ %147, %161 ], [ %144, %143 ]
  %147 = getelementptr inbounds %class.sk_sp.59, %class.sk_sp.59* %146, i64 -1
  %148 = getelementptr inbounds %class.sk_sp.59, %class.sk_sp.59* %147, i64 0, i32 0
  %149 = load %"class.GrDrawOpAtlas::Plot"*, %"class.GrDrawOpAtlas::Plot"** %148, align 8
  %150 = icmp eq %"class.GrDrawOpAtlas::Plot"* %149, null
  br i1 %150, label %161, label %151

151:                                              ; preds = %145
  %152 = getelementptr inbounds %"class.GrDrawOpAtlas::Plot", %"class.GrDrawOpAtlas::Plot"* %149, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = atomicrmw add i32* %152, i32 -1 acq_rel
  %154 = icmp eq i32 %153, 1
  br i1 %154, label %155, label %161

155:                                              ; preds = %151
  %156 = bitcast %"class.GrDrawOpAtlas::Plot"* %149 to %class.SkRefCntBase*
  %157 = bitcast %"class.GrDrawOpAtlas::Plot"* %149 to void (%class.SkRefCntBase*)***
  %158 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %157, align 8
  %159 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %158, i64 2
  %160 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %159, align 8
  tail call void %160(%class.SkRefCntBase* nonnull %156) #7
  br label %161

161:                                              ; preds = %155, %151, %145
  %162 = icmp eq %class.sk_sp.59* %147, %135
  br i1 %162, label %163, label %145

163:                                              ; preds = %161, %137
  tail call void @_ZdaPv(i8* %139) #8
  br label %164

164:                                              ; preds = %163, %133
  %165 = getelementptr inbounds %class.GrDrawOpAtlas, %class.GrDrawOpAtlas* %0, i64 0, i32 13, i64 0, i32 0, i32 0, i32 0, i32 0
  %166 = load %class.sk_sp.59*, %class.sk_sp.59** %165, align 8
  store %class.sk_sp.59* null, %class.sk_sp.59** %165, align 8
  %167 = icmp eq %class.sk_sp.59* %166, null
  br i1 %167, label %195, label %168

168:                                              ; preds = %164
  %169 = getelementptr inbounds %class.sk_sp.59, %class.sk_sp.59* %166, i64 -1
  %170 = bitcast %class.sk_sp.59* %169 to i8*
  %171 = bitcast %class.sk_sp.59* %169 to i64*
  %172 = load i64, i64* %171, align 8
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %194, label %174

174:                                              ; preds = %168
  %175 = getelementptr inbounds %class.sk_sp.59, %class.sk_sp.59* %166, i64 %172
  br label %176

176:                                              ; preds = %192, %174
  %177 = phi %class.sk_sp.59* [ %178, %192 ], [ %175, %174 ]
  %178 = getelementptr inbounds %class.sk_sp.59, %class.sk_sp.59* %177, i64 -1
  %179 = getelementptr inbounds %class.sk_sp.59, %class.sk_sp.59* %178, i64 0, i32 0
  %180 = load %"class.GrDrawOpAtlas::Plot"*, %"class.GrDrawOpAtlas::Plot"** %179, align 8
  %181 = icmp eq %"class.GrDrawOpAtlas::Plot"* %180, null
  br i1 %181, label %192, label %182

182:                                              ; preds = %176
  %183 = getelementptr inbounds %"class.GrDrawOpAtlas::Plot", %"class.GrDrawOpAtlas::Plot"* %180, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = atomicrmw add i32* %183, i32 -1 acq_rel
  %185 = icmp eq i32 %184, 1
  br i1 %185, label %186, label %192

186:                                              ; preds = %182
  %187 = bitcast %"class.GrDrawOpAtlas::Plot"* %180 to %class.SkRefCntBase*
  %188 = bitcast %"class.GrDrawOpAtlas::Plot"* %180 to void (%class.SkRefCntBase*)***
  %189 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %188, align 8
  %190 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %189, i64 2
  %191 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %190, align 8
  tail call void %191(%class.SkRefCntBase* nonnull %187) #7
  br label %192

192:                                              ; preds = %186, %182, %176
  %193 = icmp eq %class.sk_sp.59* %178, %166
  br i1 %193, label %194, label %176

194:                                              ; preds = %192, %168
  tail call void @_ZdaPv(i8* %170) #8
  br label %195

195:                                              ; preds = %194, %164
  %196 = getelementptr inbounds %class.GrDrawOpAtlas, %class.GrDrawOpAtlas* %0, i64 0, i32 12, i64 3, i32 0, i32 0
  %197 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %196, align 8
  %198 = icmp eq %class.GrSurfaceProxy* %197, null
  br i1 %198, label %48, label %36
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #2

declare i8* @_Z15sk_malloc_flagsmj(i64, i32) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
!5 = distinct !{!5, !4}
