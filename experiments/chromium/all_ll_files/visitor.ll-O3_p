; ModuleID = '../../v8/src/heap/cppgc/visitor.cc'
source_filename = "../../v8/src/heap/cppgc/visitor.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.cppgc::internal::GCInfoTable" = type { %"class.v8::PageAllocator"*, %"struct.cppgc::internal::GCInfo"*, i8*, i16, i16, %"class.v8::base::Mutex" }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"struct.cppgc::internal::GCInfo" = type { void (i8*)*, void (%"class.cppgc::Visitor"*, i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.cppgc::Visitor" = type { i32 (...)** }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.cppgc::internal::ConservativeTracingVisitor" = type { i32 (...)**, %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::PageBackend"*, %"class.cppgc::Visitor"* }
%"class.cppgc::internal::HeapBase" = type opaque
%"class.cppgc::internal::PageBackend" = type { %"class.v8::PageAllocator"*, %"class.cppgc::internal::NormalPageMemoryPool", %"class.cppgc::internal::PageMemoryRegionTree", %"class.std::__1::vector.9", %"class.std::__1::unordered_map" }
%"class.cppgc::internal::NormalPageMemoryPool" = type { [16 x %"class.std::__1::vector"] }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::pair"* }
%"class.cppgc::internal::PageMemoryRegionTree" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1", %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::unique_ptr" = type opaque
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.16", %"class.std::__1::__compressed_pair.24", %"class.std::__1::__compressed_pair.29", %"class.std::__1::__compressed_pair.31", [4 x i8] }>
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18", %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { float }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.35" }
%"struct.std::__1::pair.35" = type { i8*, %"class.cppgc::internal::PageMemoryRegion"* }
%"class.cppgc::internal::PageMemoryRegion" = type <{ i32 (...)**, %"class.v8::PageAllocator"*, %"class.cppgc::internal::MemoryRegion", i8, [7 x i8] }>
%"class.cppgc::internal::MemoryRegion" = type { i8*, i64 }
%"class.cppgc::internal::NormalPageMemoryRegion" = type { %"class.cppgc::internal::PageMemoryRegion.base", %"struct.std::__1::array", [5 x i8] }
%"class.cppgc::internal::PageMemoryRegion.base" = type <{ i32 (...)**, %"class.v8::PageAllocator"*, %"class.cppgc::internal::MemoryRegion", i8 }>
%"struct.std::__1::array" = type { [10 x i8] }
%"class.cppgc::internal::BasePage" = type <{ %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::BaseSpace"*, i8, [7 x i8] }>
%"class.cppgc::internal::BaseSpace" = type opaque
%"class.cppgc::internal::HeapObjectHeader" = type { i32, i16, i16 }
%"class.cppgc::internal::LargePage" = type { %"class.cppgc::internal::BasePage.base", i64 }
%"class.cppgc::internal::BasePage.base" = type <{ %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::BaseSpace"*, i8 }>

$_ZN5cppgc8internal26ConservativeTracingVisitorD2Ev = comdat any

$_ZN5cppgc8internal26ConservativeTracingVisitorD0Ev = comdat any

$_ZN5cppgc8internal26ConservativeTracingVisitor33VisitInConstructionConservativelyERNS0_16HeapObjectHeaderEPFvPS1_RKS2_E = comdat any

@_ZTVN5cppgc8internal26ConservativeTracingVisitorE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cppgc::internal::ConservativeTracingVisitor"*)* @_ZN5cppgc8internal26ConservativeTracingVisitorD2Ev to i8*), i8* bitcast (void (%"class.cppgc::internal::ConservativeTracingVisitor"*)* @_ZN5cppgc8internal26ConservativeTracingVisitorD0Ev to i8*), i8* bitcast (void (%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapObjectHeader"*)* @_ZN5cppgc8internal26ConservativeTracingVisitor35VisitFullyConstructedConservativelyERNS0_16HeapObjectHeaderE to i8*), i8* bitcast (void (%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapObjectHeader"*, void (%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapObjectHeader"*)*)* @_ZN5cppgc8internal26ConservativeTracingVisitor33VisitInConstructionConservativelyERNS0_16HeapObjectHeaderEPFvPS1_RKS2_E to i8*)] }, align 8
@_ZN5cppgc8internal17GlobalGCInfoTable13global_table_E = external local_unnamed_addr global %"class.cppgc::internal::GCInfoTable"*, align 8

@_ZN5cppgc8internal26ConservativeTracingVisitorC1ERNS0_8HeapBaseERNS0_11PageBackendERNS_7VisitorE = hidden unnamed_addr alias void (%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::PageBackend"*, %"class.cppgc::Visitor"*), void (%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::PageBackend"*, %"class.cppgc::Visitor"*)* @_ZN5cppgc8internal26ConservativeTracingVisitorC2ERNS0_8HeapBaseERNS0_11PageBackendERNS_7VisitorE

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5cppgc8internal26ConservativeTracingVisitorC2ERNS0_8HeapBaseERNS0_11PageBackendERNS_7VisitorE(%"class.cppgc::internal::ConservativeTracingVisitor"* nocapture, %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::PageBackend"* dereferenceable(480), %"class.cppgc::Visitor"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.cppgc::internal::ConservativeTracingVisitor", %"class.cppgc::internal::ConservativeTracingVisitor"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5cppgc8internal26ConservativeTracingVisitorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.cppgc::internal::ConservativeTracingVisitor", %"class.cppgc::internal::ConservativeTracingVisitor"* %0, i64 0, i32 1
  store %"class.cppgc::internal::HeapBase"* %1, %"class.cppgc::internal::HeapBase"** %6, align 8
  %7 = getelementptr inbounds %"class.cppgc::internal::ConservativeTracingVisitor", %"class.cppgc::internal::ConservativeTracingVisitor"* %0, i64 0, i32 2
  store %"class.cppgc::internal::PageBackend"* %2, %"class.cppgc::internal::PageBackend"** %7, align 8
  %8 = getelementptr inbounds %"class.cppgc::internal::ConservativeTracingVisitor", %"class.cppgc::internal::ConservativeTracingVisitor"* %0, i64 0, i32 3
  store %"class.cppgc::Visitor"* %3, %"class.cppgc::Visitor"** %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5cppgc8internal26ConservativeTracingVisitor27TraceConservativelyIfNeededEPKv(%"class.cppgc::internal::ConservativeTracingVisitor"*, i8*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.cppgc::internal::ConservativeTracingVisitor", %"class.cppgc::internal::ConservativeTracingVisitor"* %0, i64 0, i32 2
  %4 = load %"class.cppgc::internal::PageBackend"*, %"class.cppgc::internal::PageBackend"** %3, align 8
  %5 = getelementptr inbounds %"class.cppgc::internal::PageBackend", %"class.cppgc::internal::PageBackend"* %4, i64 0, i32 2, i32 0, i32 0, i32 1, i32 0, i32 0
  %6 = bitcast %"class.std::__1::__tree_end_node"* %5 to %"class.std::__1::__tree_node"**
  %7 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %6, align 8
  %8 = icmp eq %"class.std::__1::__tree_node"* %7, null
  br i1 %8, label %23, label %9

9:                                                ; preds = %2, %9
  %10 = phi %"class.std::__1::__tree_end_node"* [ %20, %9 ], [ %5, %2 ]
  %11 = phi %"class.std::__1::__tree_node"* [ %21, %9 ], [ %7, %2 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 1, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = icmp ugt i8* %13, %1
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0
  %16 = bitcast %"class.std::__1::__tree_node"* %11 to %"class.std::__1::__tree_node"**
  %17 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 1
  %18 = bitcast %"class.std::__1::__tree_node_base"** %17 to %"class.std::__1::__tree_node"**
  %19 = select i1 %14, %"class.std::__1::__tree_node"** %16, %"class.std::__1::__tree_node"** %18
  %20 = select i1 %14, %"class.std::__1::__tree_end_node"* %15, %"class.std::__1::__tree_end_node"* %10
  %21 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %19, align 8
  %22 = icmp eq %"class.std::__1::__tree_node"* %21, null
  br i1 %22, label %23, label %9

23:                                               ; preds = %9, %2
  %24 = phi %"class.std::__1::__tree_end_node"* [ %5, %2 ], [ %20, %9 ]
  %25 = getelementptr inbounds %"class.cppgc::internal::PageBackend", %"class.cppgc::internal::PageBackend"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  %26 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %25, align 8
  %27 = icmp eq %"class.std::__1::__tree_end_node"* %24, %26
  br i1 %27, label %110, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %24, i64 0, i32 0
  %30 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %29, align 8
  %31 = icmp eq %"class.std::__1::__tree_node_base"* %30, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %28, %32
  %33 = phi %"class.std::__1::__tree_node_base"* [ %35, %32 ], [ %30, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %33, i64 0, i32 1
  %35 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %34, align 8
  %36 = icmp eq %"class.std::__1::__tree_node_base"* %35, null
  br i1 %36, label %48, label %32

37:                                               ; preds = %28, %37
  %38 = phi %"class.std::__1::__tree_end_node"* [ %42, %37 ], [ %24, %28 ]
  %39 = bitcast %"class.std::__1::__tree_end_node"* %38 to %"class.std::__1::__tree_node_base"*
  %40 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 2
  %41 = bitcast %"class.std::__1::__tree_end_node"* %40 to %"class.std::__1::__tree_end_node"**
  %42 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %41, align 8
  %43 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %42, i64 0, i32 0
  %44 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %43, align 8
  %45 = icmp eq %"class.std::__1::__tree_node_base"* %44, %39
  br i1 %45, label %37, label %46

46:                                               ; preds = %37
  %47 = bitcast %"class.std::__1::__tree_end_node"* %42 to %"class.std::__1::__tree_node_base"*
  br label %48

48:                                               ; preds = %32, %46
  %49 = phi %"class.std::__1::__tree_node_base"* [ %47, %46 ], [ %33, %32 ]
  %50 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %49, i64 1, i32 1
  %51 = bitcast %"class.std::__1::__tree_node_base"** %50 to %"class.cppgc::internal::PageMemoryRegion"**
  %52 = load %"class.cppgc::internal::PageMemoryRegion"*, %"class.cppgc::internal::PageMemoryRegion"** %51, align 8
  %53 = getelementptr inbounds %"class.cppgc::internal::PageMemoryRegion", %"class.cppgc::internal::PageMemoryRegion"* %52, i64 0, i32 2, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = getelementptr inbounds %"class.cppgc::internal::PageMemoryRegion", %"class.cppgc::internal::PageMemoryRegion"* %52, i64 0, i32 2, i32 1
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds i8, i8* %54, i64 %56
  %58 = icmp ule i8* %57, %1
  %59 = icmp eq %"class.cppgc::internal::PageMemoryRegion"* %52, null
  %60 = or i1 %59, %58
  %61 = ptrtoint i8* %54 to i64
  br i1 %60, label %110, label %62

62:                                               ; preds = %48
  %63 = getelementptr inbounds %"class.cppgc::internal::PageMemoryRegion", %"class.cppgc::internal::PageMemoryRegion"* %52, i64 0, i32 3
  %64 = load i8, i8* %63, align 8, !range !2
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %73, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds i8, i8* %54, i64 4096
  %68 = add i64 %56, -8192
  %69 = ptrtoint i8* %67 to i64
  %70 = ptrtoint i8* %1 to i64
  %71 = sub i64 %70, %69
  %72 = icmp ult i64 %71, %68
  br i1 %72, label %88, label %110

73:                                               ; preds = %62
  %74 = bitcast %"class.cppgc::internal::PageMemoryRegion"* %52 to %"class.cppgc::internal::NormalPageMemoryRegion"*
  %75 = ptrtoint i8* %1 to i64
  %76 = sub i64 %75, %61
  %77 = lshr i64 %76, 17
  %78 = getelementptr inbounds %"class.cppgc::internal::NormalPageMemoryRegion", %"class.cppgc::internal::NormalPageMemoryRegion"* %74, i64 0, i32 1, i32 0, i64 %77
  %79 = load i8, i8* %78, align 1, !range !2
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %110, label %81

81:                                               ; preds = %73
  %82 = and i64 %76, -131072
  %83 = getelementptr inbounds i8, i8* %54, i64 %82
  %84 = getelementptr inbounds i8, i8* %83, i64 4096
  %85 = ptrtoint i8* %84 to i64
  %86 = sub i64 %75, %85
  %87 = icmp ult i64 %86, 122880
  br i1 %87, label %88, label %110

88:                                               ; preds = %81, %66
  %89 = phi i8* [ %67, %66 ], [ %84, %81 ]
  %90 = icmp eq i8* %89, null
  br i1 %90, label %110, label %91

91:                                               ; preds = %88
  %92 = bitcast i8* %89 to %"class.cppgc::internal::BasePage"*
  %93 = tail call %"class.cppgc::internal::HeapObjectHeader"* @_ZNK5cppgc8internal8BasePage31TryObjectHeaderFromInnerAddressEPv(%"class.cppgc::internal::BasePage"* nonnull %92, i8* %1) #4
  %94 = icmp eq %"class.cppgc::internal::HeapObjectHeader"* %93, null
  br i1 %94, label %110, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.cppgc::internal::HeapObjectHeader", %"class.cppgc::internal::HeapObjectHeader"* %93, i64 0, i32 1
  %97 = load i16, i16* %96, align 2
  %98 = and i16 %97, 1
  %99 = icmp eq i16 %98, 0
  br i1 %99, label %105, label %100

100:                                              ; preds = %95
  %101 = bitcast %"class.cppgc::internal::ConservativeTracingVisitor"* %0 to void (%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapObjectHeader"*)***
  %102 = load void (%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapObjectHeader"*)**, void (%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapObjectHeader"*)*** %101, align 8
  %103 = getelementptr inbounds void (%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapObjectHeader"*)*, void (%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapObjectHeader"*)** %102, i64 2
  %104 = load void (%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapObjectHeader"*)*, void (%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapObjectHeader"*)** %103, align 8
  tail call void %104(%"class.cppgc::internal::ConservativeTracingVisitor"* %0, %"class.cppgc::internal::HeapObjectHeader"* nonnull dereferenceable(8) %93) #4
  br label %110

105:                                              ; preds = %95
  %106 = bitcast %"class.cppgc::internal::ConservativeTracingVisitor"* %0 to void (%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapObjectHeader"*, void (%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapObjectHeader"*)*)***
  %107 = load void (%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapObjectHeader"*, void (%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapObjectHeader"*)*)**, void (%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapObjectHeader"*, void (%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapObjectHeader"*)*)*** %106, align 8
  %108 = getelementptr inbounds void (%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapObjectHeader"*, void (%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapObjectHeader"*)*)*, void (%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapObjectHeader"*, void (%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapObjectHeader"*)*)** %107, i64 3
  %109 = load void (%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapObjectHeader"*, void (%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapObjectHeader"*)*)*, void (%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapObjectHeader"*, void (%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapObjectHeader"*)*)** %108, align 8
  tail call void %109(%"class.cppgc::internal::ConservativeTracingVisitor"* %0, %"class.cppgc::internal::HeapObjectHeader"* nonnull dereferenceable(8) %93, void (%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapObjectHeader"*)* nonnull @_ZN5cppgc8internal12_GLOBAL__N_119TraceConservativelyEPNS0_26ConservativeTracingVisitorERKNS0_16HeapObjectHeaderE) #4
  br label %110

110:                                              ; preds = %23, %48, %73, %81, %66, %105, %100, %91, %88
  ret void
}

declare %"class.cppgc::internal::HeapObjectHeader"* @_ZNK5cppgc8internal8BasePage31TryObjectHeaderFromInnerAddressEPv(%"class.cppgc::internal::BasePage"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5cppgc8internal26ConservativeTracingVisitor27TraceConservativelyIfNeededERNS0_16HeapObjectHeaderE(%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapObjectHeader"* dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.cppgc::internal::HeapObjectHeader", %"class.cppgc::internal::HeapObjectHeader"* %1, i64 0, i32 1
  %4 = load i16, i16* %3, align 2
  %5 = and i16 %4, 1
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.cppgc::internal::ConservativeTracingVisitor"* %0 to void (%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapObjectHeader"*)***
  %9 = load void (%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapObjectHeader"*)**, void (%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapObjectHeader"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapObjectHeader"*)*, void (%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapObjectHeader"*)** %9, i64 2
  %11 = load void (%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapObjectHeader"*)*, void (%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapObjectHeader"*)** %10, align 8
  tail call void %11(%"class.cppgc::internal::ConservativeTracingVisitor"* %0, %"class.cppgc::internal::HeapObjectHeader"* dereferenceable(8) %1) #4
  br label %17

12:                                               ; preds = %2
  %13 = bitcast %"class.cppgc::internal::ConservativeTracingVisitor"* %0 to void (%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapObjectHeader"*, void (%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapObjectHeader"*)*)***
  %14 = load void (%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapObjectHeader"*, void (%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapObjectHeader"*)*)**, void (%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapObjectHeader"*, void (%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapObjectHeader"*)*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapObjectHeader"*, void (%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapObjectHeader"*)*)*, void (%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapObjectHeader"*, void (%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapObjectHeader"*)*)** %14, i64 3
  %16 = load void (%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapObjectHeader"*, void (%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapObjectHeader"*)*)*, void (%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapObjectHeader"*, void (%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapObjectHeader"*)*)** %15, align 8
  tail call void %16(%"class.cppgc::internal::ConservativeTracingVisitor"* %0, %"class.cppgc::internal::HeapObjectHeader"* dereferenceable(8) %1, void (%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapObjectHeader"*)* nonnull @_ZN5cppgc8internal12_GLOBAL__N_119TraceConservativelyEPNS0_26ConservativeTracingVisitorERKNS0_16HeapObjectHeaderE) #4
  br label %17

17:                                               ; preds = %12, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5cppgc8internal12_GLOBAL__N_119TraceConservativelyEPNS0_26ConservativeTracingVisitorERKNS0_16HeapObjectHeaderE(%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapObjectHeader"* dereferenceable(8)) #1 {
  %3 = ptrtoint %"class.cppgc::internal::HeapObjectHeader"* %1 to i64
  %4 = and i64 %3, -131072
  %5 = or i64 %4, 4096
  %6 = getelementptr inbounds %"class.cppgc::internal::HeapObjectHeader", %"class.cppgc::internal::HeapObjectHeader"* %1, i64 0, i32 2
  %7 = load i16, i16* %6, align 2
  %8 = icmp ugt i16 %7, 1
  %9 = getelementptr inbounds %"class.cppgc::internal::HeapObjectHeader", %"class.cppgc::internal::HeapObjectHeader"* %1, i64 1
  %10 = inttoptr i64 %5 to %"class.cppgc::internal::LargePage"*
  %11 = getelementptr inbounds %"class.cppgc::internal::LargePage", %"class.cppgc::internal::LargePage"* %10, i64 0, i32 1
  br i1 %8, label %16, label %12

12:                                               ; preds = %2
  %13 = load i64, i64* %11, align 8
  %14 = and i64 %13, -8
  %15 = icmp eq i64 %14, 8
  br i1 %15, label %37, label %38

16:                                               ; preds = %2
  %17 = and i16 %7, -2
  %18 = icmp eq i16 %17, 2
  br i1 %18, label %37, label %19

19:                                               ; preds = %16, %28
  %20 = phi i64 [ %30, %28 ], [ 0, %16 ]
  %21 = phi i16 [ %29, %28 ], [ %7, %16 ]
  %22 = getelementptr inbounds %"class.cppgc::internal::HeapObjectHeader", %"class.cppgc::internal::HeapObjectHeader"* %9, i64 %20
  %23 = bitcast %"class.cppgc::internal::HeapObjectHeader"* %22 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %19
  tail call void @_ZN5cppgc8internal26ConservativeTracingVisitor27TraceConservativelyIfNeededEPKv(%"class.cppgc::internal::ConservativeTracingVisitor"* %0, i8* nonnull %24)
  %27 = load i16, i16* %6, align 2
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i16 [ %27, %26 ], [ %21, %19 ]
  %30 = add nuw nsw i64 %20, 1
  %31 = lshr i16 %29, 1
  %32 = zext i16 %31 to i64
  %33 = shl nuw nsw i64 %32, 3
  %34 = add nsw i64 %33, -8
  %35 = lshr exact i64 %34, 3
  %36 = icmp ult i64 %30, %35
  br i1 %36, label %19, label %37

37:                                               ; preds = %45, %28, %12, %16
  ret void

38:                                               ; preds = %12, %45
  %39 = phi i64 [ %46, %45 ], [ 0, %12 ]
  %40 = getelementptr inbounds %"class.cppgc::internal::HeapObjectHeader", %"class.cppgc::internal::HeapObjectHeader"* %9, i64 %39
  %41 = bitcast %"class.cppgc::internal::HeapObjectHeader"* %40 to i8**
  %42 = load i8*, i8** %41, align 8
  %43 = icmp eq i8* %42, null
  br i1 %43, label %45, label %44

44:                                               ; preds = %38
  tail call void @_ZN5cppgc8internal26ConservativeTracingVisitor27TraceConservativelyIfNeededEPKv(%"class.cppgc::internal::ConservativeTracingVisitor"* %0, i8* nonnull %42)
  br label %45

45:                                               ; preds = %38, %44
  %46 = add nuw nsw i64 %39, 1
  %47 = load i64, i64* %11, align 8
  %48 = add i64 %47, -8
  %49 = lshr i64 %48, 3
  %50 = icmp ult i64 %46, %49
  br i1 %50, label %38, label %37
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5cppgc8internal26ConservativeTracingVisitor35VisitFullyConstructedConservativelyERNS0_16HeapObjectHeaderE(%"class.cppgc::internal::ConservativeTracingVisitor"* nocapture readonly, %"class.cppgc::internal::HeapObjectHeader"* dereferenceable(8)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.cppgc::internal::ConservativeTracingVisitor", %"class.cppgc::internal::ConservativeTracingVisitor"* %0, i64 0, i32 3
  %4 = load %"class.cppgc::Visitor"*, %"class.cppgc::Visitor"** %3, align 8
  %5 = getelementptr inbounds %"class.cppgc::internal::HeapObjectHeader", %"class.cppgc::internal::HeapObjectHeader"* %1, i64 1
  %6 = bitcast %"class.cppgc::internal::HeapObjectHeader"* %5 to i8*
  %7 = getelementptr inbounds %"class.cppgc::internal::HeapObjectHeader", %"class.cppgc::internal::HeapObjectHeader"* %1, i64 0, i32 1
  %8 = load i16, i16* %7, align 2
  %9 = lshr i16 %8, 2
  %10 = load %"class.cppgc::internal::GCInfoTable"*, %"class.cppgc::internal::GCInfoTable"** @_ZN5cppgc8internal17GlobalGCInfoTable13global_table_E, align 8
  %11 = getelementptr inbounds %"class.cppgc::internal::GCInfoTable", %"class.cppgc::internal::GCInfoTable"* %10, i64 0, i32 1
  %12 = load %"struct.cppgc::internal::GCInfo"*, %"struct.cppgc::internal::GCInfo"** %11, align 8
  %13 = zext i16 %9 to i64
  %14 = getelementptr inbounds %"struct.cppgc::internal::GCInfo", %"struct.cppgc::internal::GCInfo"* %12, i64 %13, i32 1
  %15 = load void (%"class.cppgc::Visitor"*, i8*)*, void (%"class.cppgc::Visitor"*, i8*)** %14, align 8
  %16 = bitcast %"class.cppgc::Visitor"* %4 to void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)***
  %17 = load void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)**, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)** %17, i64 4
  %19 = load void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)** %18, align 8
  tail call void %19(%"class.cppgc::Visitor"* %4, i8* %6, i8* %6, void (%"class.cppgc::Visitor"*, i8*)* %15) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc8internal26ConservativeTracingVisitorD2Ev(%"class.cppgc::internal::ConservativeTracingVisitor"*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc8internal26ConservativeTracingVisitorD0Ev(%"class.cppgc::internal::ConservativeTracingVisitor"*) unnamed_addr #1 comdat align 2 {
  %2 = bitcast %"class.cppgc::internal::ConservativeTracingVisitor"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc8internal26ConservativeTracingVisitor33VisitInConstructionConservativelyERNS0_16HeapObjectHeaderEPFvPS1_RKS2_E(%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapObjectHeader"* dereferenceable(8), void (%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapObjectHeader"*)*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
