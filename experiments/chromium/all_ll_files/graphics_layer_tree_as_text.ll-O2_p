; ModuleID = '../../third_party/blink/renderer/platform/graphics/graphics_layer_tree_as_text.cc'
source_filename = "../../third_party/blink/renderer/platform/graphics/graphics_layer_tree_as_text.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::JSONObject" = type { %"class.blink::JSONValue.base", [4 x i8], %"class.WTF::HashMap", %"class.WTF::Vector" }
%"class.blink::JSONValue.base" = type <{ i32 (...)**, i32 }>
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::GraphicsLayer" = type { %"class.blink::DisplayItemClient.base", %"class.blink::LayerAsJSONClient", %"class.cc::ContentLayerClient", %"class.blink::GraphicsLayerClient"*, %"class.blink::IntSize", %"class.blink::TransformationMatrix", i8, i32, %"class.WTF::Vector.4", %"class.blink::GraphicsLayer"*, %"class.blink::IntRect", %class.scoped_refptr.9, %class.scoped_refptr.10, %class.scoped_refptr.87, i32, %"class.std::__1::unique_ptr.198", %"class.blink::IntRect", %"class.std::__1::unique_ptr.316", %"class.std::__1::unique_ptr.316", %"class.std::__1::unique_ptr.322", %"class.base::RepeatingCallback.355", i32, i64 }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayerAsJSONClient" = type { i32 (...)** }
%"class.cc::ContentLayerClient" = type { i32 (...)** }
%"class.blink::GraphicsLayerClient" = type { i32 (...)** }
%"class.blink::IntSize" = type { i32, i32 }
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.WTF::Vector.4" = type { %"class.WTF::VectorBuffer.5" }
%"class.WTF::VectorBuffer.5" = type { %"class.WTF::VectorBufferBase.6" }
%"class.WTF::VectorBufferBase.6" = type { %"class.blink::GraphicsLayer"**, i32, i32 }
%class.scoped_refptr.9 = type { %"class.cc::PictureLayer"* }
%"class.cc::PictureLayer" = type <{ %"class.cc::Layer", %"struct.cc::PictureLayer::PictureLayerInputs", %"class.std::__1::unique_ptr.192", %"struct.cc::devtools_instrumentation::ScopedLayerObjectTracker", %"class.cc::Region", i32, [4 x i8] }>
%"class.cc::Layer" = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8], %"class.cc::Layer"*, %"class.cc::LayerTreeHost"*, %"struct.cc::Layer::Inputs", %"class.std::__1::unique_ptr.21", i32, i32, i32, i32, i32, i32, %"class.gfx::Vector2dF", i8, i16, [5 x i8], %"class.std::__1::unique_ptr.61" }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.cc::LayerTreeHost" = type opaque
%"struct.cc::Layer::Inputs" = type { %"class.std::__1::vector", %"class.gfx::Rect", %"class.gfx::Size", i32, i8, i32, %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", %"struct.cc::ElementId" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.scoped_refptr.10*, %class.scoped_refptr.10*, %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %class.scoped_refptr.10* }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.cc::TouchActionRegion" = type { %"class.base::flat_map" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.14" }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.16" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.std::__1::pair"* }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"struct.cc::Layer::LayerTreeInputs"* }
%"struct.cc::Layer::LayerTreeInputs" = type { %"class.gfx::Rect", %"class.cc::PictureLayer"*, float, i32, i8, %"class.gfx::PointF", %"class.gfx::Transform", %"class.gfx::Point3F", %"class.viz::SubtreeCaptureId", i32, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.44", float, i32, %"class.gfx::ScrollOffset", %"class.gfx::Size", %"class.gfx::RoundedCornersF", %"class.base::RepeatingCallback", %"class.std::__1::vector.50" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.gfx::Point3F" = type { float, float, float }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.24" }
%"class.std::__1::vector.24" = type { %"class.std::__1::__vector_base.25" }
%"class.std::__1::__vector_base.25" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.39" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp, [20 x float], i32, [4 x i8], %"class.std::__1::vector.32", i32, [4 x i8] }>
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.31, i32, %"class.absl::optional", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.26" }>
%"struct.std::__1::atomic.26" = type { %"struct.std::__1::__atomic_base.27" }
%"struct.std::__1::__atomic_base.27" = type { %"struct.std::__1::__atomic_base.28" }
%"struct.std::__1::__atomic_base.28" = type { %"struct.std::__1::__cxx_atomic_impl.29" }
%"struct.std::__1::__cxx_atomic_impl.29" = type { %"struct.std::__1::__cxx_atomic_base_impl.30" }
%"struct.std::__1::__cxx_atomic_base_impl.30" = type { i32 }
%class.sk_sp.31 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::vector.32" = type { %"class.std::__1::__vector_base.33" }
%"class.std::__1::__vector_base.33" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.cc::FilterOperation"* }
%"class.absl::optional.44" = type { %"class.absl::optional_internal::optional_data.45" }
%"class.absl::optional_internal::optional_data.45" = type { %"class.absl::optional_internal::optional_data_base.46" }
%"class.absl::optional_internal::optional_data_base.46" = type { %"class.absl::optional_internal::optional_data_dtor_base.47" }
%"class.absl::optional_internal::optional_data_dtor_base.47" = type { i8, %union.anon.48 }
%union.anon.48 = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.gfx::RoundedCornersF" = type { float, float, float, float }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.49 }
%class.scoped_refptr.49 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.26" }
%"class.std::__1::vector.50" = type { %"class.std::__1::__vector_base.51" }
%"class.std::__1::__vector_base.51" = type { %"class.std::__1::unique_ptr.52"*, %"class.std::__1::unique_ptr.52"*, %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::unique_ptr.52" = type opaque
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.std::__1::unique_ptr.52"* }
%"class.gfx::Vector2dF" = type { float, float }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"struct.cc::LayerDebugInfo"* }
%"struct.cc::LayerDebugInfo" = type { %"class.std::__1::basic_string", i32, i32, %"class.std::__1::vector.70", %"class.std::__1::vector.70", %"class.std::__1::vector.77" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.66 }
%union.anon.66 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.70" = type { %"class.std::__1::__vector_base.71" }
%"class.std::__1::__vector_base.71" = type { i8**, i8**, %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { i8** }
%"class.std::__1::vector.77" = type { %"class.std::__1::__vector_base.78" }
%"class.std::__1::__vector_base.78" = type { %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"*, %"class.std::__1::__compressed_pair.79" }
%"struct.cc::LayerDebugInfo::Invalidation" = type { %"class.gfx::Rect", i8*, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"struct.cc::LayerDebugInfo::Invalidation"* }
%"struct.cc::PictureLayer::PictureLayerInputs" = type <{ %"class.cc::ContentLayerClient"*, i8, i8, [6 x i8], %class.scoped_refptr.87, %"class.absl::optional.187", [4 x i8] }>
%"class.absl::optional.187" = type { %"class.absl::optional_internal::optional_data.188" }
%"class.absl::optional_internal::optional_data.188" = type { %"class.absl::optional_internal::optional_data_base.189" }
%"class.absl::optional_internal::optional_data_base.189" = type { %"class.absl::optional_internal::optional_data_dtor_base.190" }
%"class.absl::optional_internal::optional_data_dtor_base.190" = type { i8, %union.anon.191 }
%union.anon.191 = type { %"class.gfx::Size" }
%"class.std::__1::unique_ptr.192" = type { %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"class.cc::RecordingSource"* }
%"class.cc::RecordingSource" = type opaque
%"struct.cc::devtools_instrumentation::ScopedLayerObjectTracker" = type { %"class.base::trace_event::TraceScopedTrackableObject.base", [4 x i8] }
%"class.base::trace_event::TraceScopedTrackableObject.base" = type <{ i8*, i32 }>
%"class.cc::Region" = type { %class.SkRegion }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"struct.SkRegion::RunHead" = type opaque
%class.scoped_refptr.10 = type { %"class.cc::Layer"* }
%class.scoped_refptr.87 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type <{ %"class.base::RefCountedThreadSafe.88", [4 x i8], %"class.cc::RTree", %"class.cc::DiscardableImageMap", %"class.cc::PaintOpBuffer", %"class.std::__1::vector.32", %"class.std::__1::vector.173", %"class.std::__1::vector.180", i32, [4 x i8] }>
%"class.base::RefCountedThreadSafe.88" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.cc::RTree" = type <{ i64, %"struct.cc::RTree<unsigned long>::Branch", %"class.std::__1::vector.89", i8, [7 x i8] }>
%"struct.cc::RTree<unsigned long>::Branch" = type { %"struct.cc::RTree<unsigned long>::Node"*, i64, %"class.gfx::Rect" }
%"struct.cc::RTree<unsigned long>::Node" = type opaque
%"class.std::__1::vector.89" = type { %"class.std::__1::__vector_base.90" }
%"class.std::__1::__vector_base.90" = type { %"struct.cc::RTree<unsigned long>::Node"*, %"struct.cc::RTree<unsigned long>::Node"*, %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"struct.cc::RTree<unsigned long>::Node"* }
%"class.cc::DiscardableImageMap" = type { %"class.base::flat_map.96", %"class.std::__1::vector.106", %"class.base::flat_map.120", i8, i8, [6 x i8], %"class.cc::RTree.130", %"class.std::__1::vector.165" }
%"class.base::flat_map.96" = type { %"class.base::internal::flat_tree.97" }
%"class.base::internal::flat_tree.97" = type { %"class.std::__1::vector.98" }
%"class.std::__1::vector.98" = type { %"class.std::__1::__vector_base.99" }
%"class.std::__1::__vector_base.99" = type { %"struct.std::__1::pair.100"*, %"struct.std::__1::pair.100"*, %"class.std::__1::__compressed_pair.101" }
%"struct.std::__1::pair.100" = type opaque
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"struct.std::__1::pair.100"* }
%"class.std::__1::vector.106" = type { %"class.std::__1::__vector_base.107" }
%"class.std::__1::__vector_base.107" = type { %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"*, %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"*, %"class.std::__1::__compressed_pair.115" }
%"struct.cc::DiscardableImageMap::AnimatedImageMetadata" = type { i32, i32, %"class.std::__1::vector.108", i32, i32 }
%"class.std::__1::vector.108" = type { %"class.std::__1::__vector_base.109" }
%"class.std::__1::__vector_base.109" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.110" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"struct.cc::FrameMetadata"* }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"* }
%"class.base::flat_map.120" = type { %"class.base::internal::flat_tree.121" }
%"class.base::internal::flat_tree.121" = type { %"class.std::__1::vector.122" }
%"class.std::__1::vector.122" = type { %"class.std::__1::__vector_base.123" }
%"class.std::__1::__vector_base.123" = type { %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"*, %"class.std::__1::__compressed_pair.125" }
%"struct.std::__1::pair.124" = type { i32, i32 }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"struct.std::__1::pair.124"* }
%"class.cc::RTree.130" = type <{ i64, %"struct.cc::RTree<cc::DrawImage>::Branch", %"class.std::__1::vector.157", i8, [7 x i8] }>
%"struct.cc::RTree<cc::DrawImage>::Branch" = type { %"struct.cc::RTree<cc::DrawImage>::Node"*, %"class.cc::DrawImage", %"class.gfx::Rect" }
%"struct.cc::RTree<cc::DrawImage>::Node" = type opaque
%"class.cc::DrawImage" = type <{ %"class.cc::PaintImage", i8, [3 x i8], %struct.SkIRect, i32, %struct.SkSize, i8, [7 x i8], %"class.absl::optional.147", %"class.absl::optional.152", float, [4 x i8] }>
%"class.cc::PaintImage" = type { %class.sk_sp.131, %class.sk_sp.138, %"class.gfx::Rect", i32, %class.sk_sp.143, %class.sk_sp.144, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.131, %class.scoped_refptr.145 }
%class.sk_sp.138 = type { %"class.cc::PaintOpBuffer"* }
%class.sk_sp.143 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector.108" }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.132, i32, i32 }
%class.sk_sp.132 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.26" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.133" }
%"struct.std::__1::atomic.133" = type { %"struct.std::__1::__atomic_base.134" }
%"struct.std::__1::__atomic_base.134" = type { %"struct.std::__1::__atomic_base.135" }
%"struct.std::__1::__atomic_base.135" = type { %"struct.std::__1::__cxx_atomic_impl.136" }
%"struct.std::__1::__cxx_atomic_impl.136" = type { %"struct.std::__1::__cxx_atomic_base_impl.137" }
%"struct.std::__1::__cxx_atomic_base_impl.137" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.144 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.131 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.scoped_refptr.145 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.146", [4 x i8] }>
%"class.base::RefCountedThreadSafe.146" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%struct.SkSize = type { float, float }
%"class.absl::optional.147" = type { %"class.absl::optional_internal::optional_data.148" }
%"class.absl::optional_internal::optional_data.148" = type { %"class.absl::optional_internal::optional_data_base.149" }
%"class.absl::optional_internal::optional_data_base.149" = type { %"class.absl::optional_internal::optional_data_dtor_base.150" }
%"class.absl::optional_internal::optional_data_dtor_base.150" = type { i8, %union.anon.151 }
%union.anon.151 = type { i64 }
%"class.absl::optional.152" = type { %"class.absl::optional_internal::optional_data.153" }
%"class.absl::optional_internal::optional_data.153" = type { %"class.absl::optional_internal::optional_data_base.154" }
%"class.absl::optional_internal::optional_data_base.154" = type { %"class.absl::optional_internal::optional_data_dtor_base.155" }
%"class.absl::optional_internal::optional_data_dtor_base.155" = type { i8, %union.anon.156 }
%union.anon.156 = type { %"class.gfx::ColorSpace" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.std::__1::vector.157" = type { %"class.std::__1::__vector_base.158" }
%"class.std::__1::__vector_base.158" = type { %"struct.cc::RTree<cc::DrawImage>::Node"*, %"struct.cc::RTree<cc::DrawImage>::Node"*, %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"struct.cc::RTree<cc::DrawImage>::Node"* }
%"class.std::__1::vector.165" = type { %"class.std::__1::__vector_base.166" }
%"class.std::__1::__vector_base.166" = type { %"struct.std::__1::pair.167"*, %"struct.std::__1::pair.167"*, %"class.std::__1::__compressed_pair.168" }
%"struct.std::__1::pair.167" = type opaque
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"struct.std::__1::pair.167"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.139", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { i8* }
%"class.std::__1::vector.173" = type { %"class.std::__1::__vector_base.174" }
%"class.std::__1::__vector_base.174" = type { i64*, i64*, %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { i64* }
%"class.std::__1::vector.180" = type { %"class.std::__1::__vector_base.181" }
%"class.std::__1::__vector_base.181" = type { %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"class.std::__1::__compressed_pair.182" }
%"struct.cc::DisplayItemList::PairedBeginInfo" = type { i64, i64 }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"struct.cc::DisplayItemList::PairedBeginInfo"* }
%"class.std::__1::unique_ptr.198" = type { %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.201, %class.scoped_refptr.201, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.293", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.298", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.201 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.208" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted.202" }
%"class.base::RefCounted.202" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.203", i32, [4 x i8] }>
%"class.WTF::Vector.203" = type { %"class.WTF::VectorBuffer.204" }
%"class.WTF::VectorBuffer.204" = type { %"class.WTF::VectorBufferBase.205" }
%"class.WTF::VectorBufferBase.205" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.208" = type { %"class.WTF::VectorBuffer.209" }
%"class.WTF::VectorBuffer.209" = type { %"class.WTF::VectorBufferBase.210" }
%"class.WTF::VectorBufferBase.210" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.214", %"class.std::__1::unique_ptr.263", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"class.blink::Color" = type { i32 }
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.211, %class.scoped_refptr.212, %class.scoped_refptr.213 }
%class.scoped_refptr.211 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.227", i8, i8, %class.scoped_refptr.211, i32, i32 }
%"class.WTF::RefCounted.227" = type { %"class.base::RefCounted.228" }
%"class.base::RefCounted.228" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.212 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.374" }
%"class.blink::PaintPropertyNode.374" = type { %"class.WTF::RefCounted.375", i8, i8, %class.scoped_refptr.212, i32, i32 }
%"class.WTF::RefCounted.375" = type { %"class.base::RefCounted.376" }
%"class.base::RefCounted.376" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.213 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.371" }
%"class.blink::PaintPropertyNode.371" = type { %"class.WTF::RefCounted.372", i8, i8, %class.scoped_refptr.213, i32, i32 }
%"class.WTF::RefCounted.372" = type { %"class.base::RefCounted.373" }
%"class.base::RefCounted.373" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.214" = type { %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.217", %"class.WTF::Vector.222", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.217" = type { %"class.WTF::VectorBuffer.218" }
%"class.WTF::VectorBuffer.218" = type { %"class.WTF::VectorBufferBase.219" }
%"class.WTF::VectorBufferBase.219" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.222" = type { %"class.WTF::VectorBuffer.223" }
%"class.WTF::VectorBuffer.223" = type { %"class.WTF::VectorBufferBase.224" }
%"class.WTF::VectorBufferBase.224" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.242" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.235, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.236", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.229" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.235 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.356", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.356" = type { %"class.WTF::RefCounted.357", i8, i8, %class.scoped_refptr.235, i32, i32 }
%"class.WTF::RefCounted.357" = type { %"class.base::RefCounted.358" }
%"class.base::RefCounted.358" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.359" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.359" = type { %"class.absl::optional_internal::optional_data.360" }
%"class.absl::optional_internal::optional_data.360" = type { %"class.absl::optional_internal::optional_data_base.361" }
%"class.absl::optional_internal::optional_data_base.361" = type { %"class.absl::optional_internal::optional_data_dtor_base.362" }
%"class.absl::optional_internal::optional_data_dtor_base.362" = type { i8, %union.anon.363 }
%union.anon.363 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.364", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::vector.364" = type { %"class.std::__1::__vector_base.365" }
%"class.std::__1::__vector_base.365" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.366" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.367" }
%"struct.std::__1::__compressed_pair_elem.367" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.std::__1::unique_ptr.242" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.245", %"class.std::__1::unique_ptr.251", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.245" = type { %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.266", %"class.absl::optional.266" }
%"class.absl::optional.266" = type { %"class.absl::optional_internal::optional_data.267" }
%"class.absl::optional_internal::optional_data.267" = type { %"class.absl::optional_internal::optional_data_base.268" }
%"class.absl::optional_internal::optional_data_base.268" = type { %"class.absl::optional_internal::optional_data_dtor_base.269" }
%"class.absl::optional_internal::optional_data_dtor_base.269" = type { i8, [3 x i8], %union.anon.270 }
%union.anon.270 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.208"*, %"class.absl::optional.276", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.276" = type { %"class.absl::optional_internal::optional_data.277" }
%"class.absl::optional_internal::optional_data.277" = type { %"class.absl::optional_internal::optional_data_base.278" }
%"class.absl::optional_internal::optional_data_base.278" = type { %"class.absl::optional_internal::optional_data_dtor_base.279" }
%"class.absl::optional_internal::optional_data_dtor_base.279" = type { i8, %union.anon.280 }
%union.anon.280 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.283", %"class.WTF::Vector.288" }
%"class.WTF::Vector.283" = type { %"class.WTF::VectorBuffer.284" }
%"class.WTF::VectorBuffer.284" = type { %"class.WTF::VectorBufferBase.285", [128 x i8] }
%"class.WTF::VectorBufferBase.285" = type { i32*, i32, i32 }
%"class.WTF::Vector.288" = type { %"class.WTF::VectorBuffer.289" }
%"class.WTF::VectorBuffer.289" = type { %"class.WTF::VectorBufferBase.290", [128 x i8] }
%"class.WTF::VectorBufferBase.290" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.293" = type { %"class.WTF::VectorBuffer.294" }
%"class.WTF::VectorBuffer.294" = type { %"class.WTF::VectorBufferBase.295" }
%"class.WTF::VectorBufferBase.295" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.298" = type { %"class.WTF::HashTable.299" }
%"class.WTF::HashTable.299" = type <{ %"struct.WTF::KeyValuePair.302"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.302" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.303", %"class.WTF::Vector.308" }
%"class.WTF::HashMap.303" = type { %"class.WTF::HashTable.304" }
%"class.WTF::HashTable.304" = type <{ %"struct.WTF::KeyValuePair.307"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.307" = type opaque
%"class.WTF::Vector.308" = type { %"class.WTF::VectorBuffer.309" }
%"class.WTF::VectorBuffer.309" = type { %"class.WTF::VectorBufferBase.310" }
%"class.WTF::VectorBufferBase.310" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.std::__1::unique_ptr.316" = type { %"class.std::__1::__compressed_pair.317" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.318" }
%"struct.std::__1::__compressed_pair_elem.318" = type { %"struct.blink::GraphicsLayer::LayerState"* }
%"struct.blink::GraphicsLayer::LayerState" = type { %"class.blink::RefCountedPropertyTreeState", %"class.blink::IntPoint" }
%"class.std::__1::unique_ptr.322" = type { %"class.std::__1::__compressed_pair.323" }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"struct.std::__1::__compressed_pair_elem.324" = type { %"class.blink::RasterInvalidator"* }
%"class.blink::RasterInvalidator" = type { %"class.gfx::Rect", %"class.WTF::Vector.325", %class.scoped_refptr.330, %"class.std::__1::unique_ptr.331" }
%"class.WTF::Vector.325" = type { %"class.WTF::VectorBuffer.326" }
%"class.WTF::VectorBuffer.326" = type { %"class.WTF::VectorBufferBase.327" }
%"class.WTF::VectorBufferBase.327" = type { %"struct.blink::RasterInvalidator::PaintChunkInfo"*, i32, i32 }
%"struct.blink::RasterInvalidator::PaintChunkInfo" = type { i32, %"class.blink::IntRect", %"class.blink::FloatClipRect", %class.SkMatrix }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%class.SkMatrix = type { [9 x float], i32 }
%class.scoped_refptr.330 = type { %"class.blink::PaintArtifact"* }
%"class.std::__1::unique_ptr.331" = type { %"class.std::__1::__compressed_pair.332" }
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.333" }
%"struct.std::__1::__compressed_pair_elem.333" = type { %"struct.blink::RasterInvalidator::RasterInvalidationTrackingInfo"* }
%"struct.blink::RasterInvalidator::RasterInvalidationTrackingInfo" = type { %"class.WTF::HashMap.334", %"class.blink::RasterInvalidationTracking" }
%"class.WTF::HashMap.334" = type { %"class.WTF::HashTable.335" }
%"class.WTF::HashTable.335" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type opaque
%"class.blink::RasterInvalidationTracking" = type { %"class.WTF::Vector.339", %class.sk_sp.138, %"class.blink::IntRect", %"class.blink::Region", %"class.WTF::Vector.344", %class.sk_sp.138 }
%"class.WTF::Vector.339" = type { %"class.WTF::VectorBuffer.340" }
%"class.WTF::VectorBuffer.340" = type { %"class.WTF::VectorBufferBase.341" }
%"class.WTF::VectorBufferBase.341" = type { %"struct.blink::RasterInvalidationInfo"*, i32, i32 }
%"struct.blink::RasterInvalidationInfo" = type <{ %"class.blink::DisplayItemClient"*, %"class.WTF::String", %"class.blink::IntRect", i8, [7 x i8] }>
%"class.WTF::Vector.344" = type { %"class.WTF::VectorBuffer.345" }
%"class.WTF::VectorBuffer.345" = type { %"class.WTF::VectorBufferBase.346" }
%"class.WTF::VectorBufferBase.346" = type { %"struct.blink::RasterUnderInvalidation"*, i32, i32 }
%"struct.blink::RasterUnderInvalidation" = type { i32, i32, i32, i32 }
%"class.base::RepeatingCallback.355" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.blink::JSONArray" = type { %"class.blink::JSONValue.base", %"class.WTF::Vector.380" }
%"class.WTF::Vector.380" = type { %"class.WTF::VectorBuffer.381" }
%"class.WTF::VectorBuffer.381" = type { %"class.WTF::VectorBufferBase.382" }
%"class.WTF::VectorBufferBase.382" = type { %"class.std::__1::unique_ptr.383"*, i32, i32 }
%"class.std::__1::unique_ptr.383" = type { %"class.std::__1::__compressed_pair.384" }
%"class.std::__1::__compressed_pair.384" = type { %"struct.std::__1::__compressed_pair_elem.385" }
%"struct.std::__1::__compressed_pair_elem.385" = type { %"class.blink::JSONValue"* }
%"class.blink::JSONValue" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZNK3WTF6VectorIPN5blink13GraphicsLayerELj0ENS_18PartitionAllocatorEE2atEj = comdat any

@.str = private unnamed_addr constant [9 x i8] c"children\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.2 = private unnamed_addr constant [18 x i8] c"ccContentsLayerId\00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"offsetFromLayoutObject\00", align 1
@.str.4 = private unnamed_addr constant [16 x i8] c"contentsVisible\00", align 1
@.str.5 = private unnamed_addr constant [11 x i8] c"layerState\00", align 1
@.str.6 = private unnamed_addr constant [12 x i8] c"layerOffset\00", align 1
@.str.7 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.8 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::JSONObject"* @_ZN5blink23GraphicsLayerTreeAsJSONEPKNS_13GraphicsLayerEj(%"class.blink::GraphicsLayer"*, i32) local_unnamed_addr #0 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.blink::PropertyTreeStateOrAlias", align 16
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = getelementptr inbounds %"class.blink::GraphicsLayer", %"class.blink::GraphicsLayer"* %0, i64 0, i32 11, i32 0
  %14 = load %"class.cc::PictureLayer"*, %"class.cc::PictureLayer"** %13, align 8
  %15 = getelementptr inbounds %"class.cc::PictureLayer", %"class.cc::PictureLayer"* %14, i64 0, i32 0
  %16 = tail call %"class.blink::JSONObject"* @_ZN5blink13CCLayerAsJSONERKN2cc5LayerEj(%"class.cc::Layer"* dereferenceable(232) %15, i32 %1) #5
  %17 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #5
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i64 4) #5
  %18 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #5
  %19 = getelementptr inbounds %"class.blink::GraphicsLayer", %"class.blink::GraphicsLayer"* %0, i64 0, i32 3
  %20 = load %"class.blink::GraphicsLayerClient"*, %"class.blink::GraphicsLayerClient"** %19, align 8
  %21 = bitcast %"class.blink::GraphicsLayerClient"* %20 to %"class.WTF::StringImpl"* (%"class.blink::GraphicsLayerClient"*, %"class.blink::GraphicsLayer"*)***
  %22 = load %"class.WTF::StringImpl"* (%"class.blink::GraphicsLayerClient"*, %"class.blink::GraphicsLayer"*)**, %"class.WTF::StringImpl"* (%"class.blink::GraphicsLayerClient"*, %"class.blink::GraphicsLayer"*)*** %21, align 8
  %23 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::GraphicsLayerClient"*, %"class.blink::GraphicsLayer"*)*, %"class.WTF::StringImpl"* (%"class.blink::GraphicsLayerClient"*, %"class.blink::GraphicsLayer"*)** %22, i64 11
  %24 = load %"class.WTF::StringImpl"* (%"class.blink::GraphicsLayerClient"*, %"class.blink::GraphicsLayer"*)*, %"class.WTF::StringImpl"* (%"class.blink::GraphicsLayerClient"*, %"class.blink::GraphicsLayer"*)** %23, align 8
  %25 = call %"class.WTF::StringImpl"* %24(%"class.blink::GraphicsLayerClient"* %20, %"class.blink::GraphicsLayer"* %0) #5
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink10JSONObject9SetStringERKN3WTF6StringES4_(%"class.blink::JSONObject"* %16, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.WTF::String"* nonnull dereferenceable(8) %4) #5
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %2
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #5
  br label %42

42:                                               ; preds = %41, %38, %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #5
  %43 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %45, label %59, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  br i1 %50, label %53, label %55

53:                                               ; preds = %46
  %54 = add i32 %52, -1
  store i32 %54, i32* %51, align 4
  br label %55

55:                                               ; preds = %53, %46
  %56 = phi i32 [ %54, %53 ], [ %52, %46 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %44) #5
  br label %59

59:                                               ; preds = %58, %55, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #5
  %60 = and i32 %1, 1
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %123, label %62

62:                                               ; preds = %59
  %63 = getelementptr inbounds %"class.blink::GraphicsLayer", %"class.blink::GraphicsLayer"* %0, i64 0, i32 12, i32 0
  %64 = load %"class.cc::Layer"*, %"class.cc::Layer"** %63, align 8
  %65 = icmp eq %"class.cc::Layer"* %64, null
  br i1 %65, label %88, label %66

66:                                               ; preds = %62
  %67 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #5
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i64 17) #5
  %68 = load %"class.cc::Layer"*, %"class.cc::Layer"** %63, align 8
  %69 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %68, i64 0, i32 5, i32 3
  %70 = load i32, i32* %69, align 8
  call void @_ZN5blink10JSONObject10SetIntegerERKN3WTF6StringEi(%"class.blink::JSONObject"* %16, %"class.WTF::String"* nonnull dereferenceable(8) %5, i32 %70) #5
  %71 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %87, label %74

74:                                               ; preds = %66
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  br i1 %78, label %81, label %83

81:                                               ; preds = %74
  %82 = add i32 %80, -1
  store i32 %82, i32* %79, align 4
  br label %83

83:                                               ; preds = %81, %74
  %84 = phi i32 [ %82, %81 ], [ %80, %74 ]
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %83
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %72) #5
  br label %87

87:                                               ; preds = %86, %83, %66
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #5
  br label %88

88:                                               ; preds = %87, %62
  %89 = getelementptr inbounds %"class.blink::GraphicsLayer", %"class.blink::GraphicsLayer"* %0, i64 0, i32 4
  %90 = bitcast %"class.blink::IntSize"* %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = trunc i64 %91 to i32
  %93 = icmp ne i32 %92, 0
  %94 = icmp ugt i64 %91, 4294967295
  %95 = or i1 %94, %93
  br i1 %95, label %96, label %123

96:                                               ; preds = %88
  %97 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %97) #5
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i64 22) #5
  %98 = load i64, i64* %90, align 8
  %99 = trunc i64 %98 to i32
  %100 = lshr i64 %98, 32
  %101 = trunc i64 %100 to i32
  %102 = call noalias i8* @malloc(i64 32) #5
  %103 = bitcast i8* %102 to %"class.blink::JSONArray"*
  call void @_ZN5blink9JSONArrayC1Ev(%"class.blink::JSONArray"* %103) #5
  %104 = sitofp i32 %99 to double
  call void @_ZN5blink9JSONArray10PushDoubleEd(%"class.blink::JSONArray"* %103, double %104) #5
  %105 = sitofp i32 %101 to double
  call void @_ZN5blink9JSONArray10PushDoubleEd(%"class.blink::JSONArray"* %103, double %105) #5
  call void @_ZN5blink10JSONObject8SetArrayERKN3WTF6StringENSt3__110unique_ptrINS_9JSONArrayENS5_14default_deleteIS7_EEEE(%"class.blink::JSONObject"* %16, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.blink::JSONArray"* %103) #5
  %106 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %107 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %106, align 8
  %108 = icmp eq %"class.WTF::StringImpl"* %107, null
  br i1 %108, label %122, label %109

109:                                              ; preds = %96
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = load atomic i32, i32* %110 monotonic, align 4
  %112 = and i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  br i1 %113, label %116, label %118

116:                                              ; preds = %109
  %117 = add i32 %115, -1
  store i32 %117, i32* %114, align 4
  br label %118

118:                                              ; preds = %116, %109
  %119 = phi i32 [ %117, %116 ], [ %115, %109 ]
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %122

121:                                              ; preds = %118
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %107) #5
  br label %122

122:                                              ; preds = %121, %118, %96
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97) #5
  br label %123

123:                                              ; preds = %122, %88, %59
  %124 = getelementptr inbounds %"class.blink::GraphicsLayer", %"class.blink::GraphicsLayer"* %0, i64 0, i32 6
  %125 = load i8, i8* %124, align 8
  %126 = and i8 %125, 4
  %127 = icmp eq i8 %126, 0
  br i1 %127, label %128, label %147

128:                                              ; preds = %123
  %129 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %129) #5
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0), i64 15) #5
  call void @_ZN5blink10JSONObject10SetBooleanERKN3WTF6StringEb(%"class.blink::JSONObject"* %16, %"class.WTF::String"* nonnull dereferenceable(8) %7, i1 zeroext false) #5
  %130 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %131 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %130, align 8
  %132 = icmp eq %"class.WTF::StringImpl"* %131, null
  br i1 %132, label %146, label %133

133:                                              ; preds = %128
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %131, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = load atomic i32, i32* %134 monotonic, align 4
  %136 = and i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %131, i64 0, i32 0
  %139 = load i32, i32* %138, align 4
  br i1 %137, label %140, label %142

140:                                              ; preds = %133
  %141 = add i32 %139, -1
  store i32 %141, i32* %138, align 4
  br label %142

142:                                              ; preds = %140, %133
  %143 = phi i32 [ %141, %140 ], [ %139, %133 ]
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %146

145:                                              ; preds = %142
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %131) #5
  br label %146

146:                                              ; preds = %145, %142, %128
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %129) #5
  br label %147

147:                                              ; preds = %146, %123
  %148 = getelementptr inbounds %"class.blink::GraphicsLayer", %"class.blink::GraphicsLayer"* %0, i64 0, i32 17, i32 0, i32 0, i32 0
  %149 = load %"struct.blink::GraphicsLayer::LayerState"*, %"struct.blink::GraphicsLayer::LayerState"** %148, align 8
  %150 = icmp eq %"struct.blink::GraphicsLayer::LayerState"* %149, null
  %151 = and i32 %1, 65
  %152 = icmp eq i32 %151, 0
  %153 = or i1 %152, %150
  br i1 %153, label %232, label %154

154:                                              ; preds = %147
  %155 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %155) #5
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i64 10) #5
  %156 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %156) #5
  %157 = bitcast %"class.blink::PropertyTreeStateOrAlias"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %157) #5
  %158 = load %"struct.blink::GraphicsLayer::LayerState"*, %"struct.blink::GraphicsLayer::LayerState"** %148, align 8, !noalias !2
  %159 = bitcast %"struct.blink::GraphicsLayer::LayerState"* %158 to <2 x i64>*
  %160 = load <2 x i64>, <2 x i64>* %159, align 8, !noalias !5
  %161 = getelementptr inbounds %"struct.blink::GraphicsLayer::LayerState", %"struct.blink::GraphicsLayer::LayerState"* %158, i64 0, i32 0, i32 2, i32 0
  %162 = bitcast %"class.blink::EffectPaintPropertyNodeOrAlias"** %161 to i64*
  %163 = load i64, i64* %162, align 8, !noalias !5
  %164 = bitcast %"class.blink::PropertyTreeStateOrAlias"* %10 to <2 x i64>*
  store <2 x i64> %160, <2 x i64>* %164, align 16, !alias.scope !5
  %165 = getelementptr inbounds %"class.blink::PropertyTreeStateOrAlias", %"class.blink::PropertyTreeStateOrAlias"* %10, i64 0, i32 2
  %166 = bitcast %"class.blink::EffectPaintPropertyNodeOrAlias"** %165 to i64*
  store i64 %163, i64* %166, align 16, !alias.scope !5
  %167 = call %"class.WTF::StringImpl"* @_ZNK5blink24PropertyTreeStateOrAlias8ToStringEv(%"class.blink::PropertyTreeStateOrAlias"* nonnull %10) #5
  %168 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %167, %"class.WTF::StringImpl"** %168, align 8
  call void @_ZN5blink10JSONObject9SetStringERKN3WTF6StringES4_(%"class.blink::JSONObject"* %16, %"class.WTF::String"* nonnull dereferenceable(8) %8, %"class.WTF::String"* nonnull dereferenceable(8) %9) #5
  %169 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %168, align 8
  %170 = icmp eq %"class.WTF::StringImpl"* %169, null
  br i1 %170, label %184, label %171

171:                                              ; preds = %154
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %169, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %173 = load atomic i32, i32* %172 monotonic, align 4
  %174 = and i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %169, i64 0, i32 0
  %177 = load i32, i32* %176, align 4
  br i1 %175, label %178, label %180

178:                                              ; preds = %171
  %179 = add i32 %177, -1
  store i32 %179, i32* %176, align 4
  br label %180

180:                                              ; preds = %178, %171
  %181 = phi i32 [ %179, %178 ], [ %177, %171 ]
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %184

183:                                              ; preds = %180
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %169) #5
  br label %184

184:                                              ; preds = %183, %180, %154
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %157) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %156) #5
  %185 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %186 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %185, align 8
  %187 = icmp eq %"class.WTF::StringImpl"* %186, null
  br i1 %187, label %201, label %188

188:                                              ; preds = %184
  %189 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %186, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %190 = load atomic i32, i32* %189 monotonic, align 4
  %191 = and i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %186, i64 0, i32 0
  %194 = load i32, i32* %193, align 4
  br i1 %192, label %195, label %197

195:                                              ; preds = %188
  %196 = add i32 %194, -1
  store i32 %196, i32* %193, align 4
  br label %197

197:                                              ; preds = %195, %188
  %198 = phi i32 [ %196, %195 ], [ %194, %188 ]
  %199 = icmp eq i32 %198, 0
  br i1 %199, label %200, label %201

200:                                              ; preds = %197
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %186) #5
  br label %201

201:                                              ; preds = %200, %197, %184
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %155) #5
  %202 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %202) #5
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %11, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i64 11) #5
  %203 = load %"struct.blink::GraphicsLayer::LayerState"*, %"struct.blink::GraphicsLayer::LayerState"** %148, align 8
  %204 = getelementptr inbounds %"struct.blink::GraphicsLayer::LayerState", %"struct.blink::GraphicsLayer::LayerState"* %203, i64 0, i32 1
  %205 = bitcast %"class.blink::IntPoint"* %204 to i64*
  %206 = load i64, i64* %205, align 8
  %207 = trunc i64 %206 to i32
  %208 = lshr i64 %206, 32
  %209 = trunc i64 %208 to i32
  %210 = call noalias i8* @malloc(i64 32) #5
  %211 = bitcast i8* %210 to %"class.blink::JSONArray"*
  call void @_ZN5blink9JSONArrayC1Ev(%"class.blink::JSONArray"* %211) #5
  %212 = sitofp i32 %207 to double
  call void @_ZN5blink9JSONArray10PushDoubleEd(%"class.blink::JSONArray"* %211, double %212) #5
  %213 = sitofp i32 %209 to double
  call void @_ZN5blink9JSONArray10PushDoubleEd(%"class.blink::JSONArray"* %211, double %213) #5
  %214 = bitcast i8* %210 to %"class.blink::JSONValue"*
  call void @_ZN5blink10JSONObject8SetValueERKN3WTF6StringENSt3__110unique_ptrINS_9JSONValueENS5_14default_deleteIS7_EEEE(%"class.blink::JSONObject"* %16, %"class.WTF::String"* nonnull dereferenceable(8) %11, %"class.blink::JSONValue"* %214) #5
  %215 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  %216 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %215, align 8
  %217 = icmp eq %"class.WTF::StringImpl"* %216, null
  br i1 %217, label %231, label %218

218:                                              ; preds = %201
  %219 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %216, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %220 = load atomic i32, i32* %219 monotonic, align 4
  %221 = and i32 %220, 2
  %222 = icmp eq i32 %221, 0
  %223 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %216, i64 0, i32 0
  %224 = load i32, i32* %223, align 4
  br i1 %222, label %225, label %227

225:                                              ; preds = %218
  %226 = add i32 %224, -1
  store i32 %226, i32* %223, align 4
  br label %227

227:                                              ; preds = %225, %218
  %228 = phi i32 [ %226, %225 ], [ %224, %218 ]
  %229 = icmp eq i32 %228, 0
  br i1 %229, label %230, label %231

230:                                              ; preds = %227
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %216) #5
  br label %231

231:                                              ; preds = %230, %227, %201
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %202) #5
  br label %232

232:                                              ; preds = %147, %231
  %233 = load %"class.cc::PictureLayer"*, %"class.cc::PictureLayer"** %13, align 8
  %234 = getelementptr inbounds %"class.cc::PictureLayer", %"class.cc::PictureLayer"* %233, i64 0, i32 0
  %235 = bitcast %"class.blink::GraphicsLayer"* %0 to void (%"class.blink::GraphicsLayer"*, i32, %"class.cc::Layer"*, %"class.blink::JSONObject"*)***
  %236 = load void (%"class.blink::GraphicsLayer"*, i32, %"class.cc::Layer"*, %"class.blink::JSONObject"*)**, void (%"class.blink::GraphicsLayer"*, i32, %"class.cc::Layer"*, %"class.blink::JSONObject"*)*** %235, align 8
  %237 = getelementptr inbounds void (%"class.blink::GraphicsLayer"*, i32, %"class.cc::Layer"*, %"class.blink::JSONObject"*)*, void (%"class.blink::GraphicsLayer"*, i32, %"class.cc::Layer"*, %"class.blink::JSONObject"*)** %236, i64 5
  %238 = load void (%"class.blink::GraphicsLayer"*, i32, %"class.cc::Layer"*, %"class.blink::JSONObject"*)*, void (%"class.blink::GraphicsLayer"*, i32, %"class.cc::Layer"*, %"class.blink::JSONObject"*)** %237, align 8
  call void %238(%"class.blink::GraphicsLayer"* %0, i32 %1, %"class.cc::Layer"* dereferenceable(232) %234, %"class.blink::JSONObject"* dereferenceable(56) %16) #5
  %239 = getelementptr inbounds %"class.blink::GraphicsLayer", %"class.blink::GraphicsLayer"* %0, i64 0, i32 8
  %240 = getelementptr inbounds %"class.blink::GraphicsLayer", %"class.blink::GraphicsLayer"* %0, i64 0, i32 8, i32 0, i32 0, i32 2
  %241 = load i32, i32* %240, align 4
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %275, label %243

243:                                              ; preds = %232
  %244 = call noalias i8* @malloc(i64 32) #5
  %245 = bitcast i8* %244 to %"class.blink::JSONArray"*
  call void @_ZN5blink9JSONArrayC1Ev(%"class.blink::JSONArray"* %245) #5
  %246 = load i32, i32* %240, align 4
  %247 = icmp eq i32 %246, 0
  br i1 %247, label %248, label %267

248:                                              ; preds = %267, %243
  %249 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %249) #5
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %12, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i64 8) #5
  call void @_ZN5blink10JSONObject8SetArrayERKN3WTF6StringENSt3__110unique_ptrINS_9JSONArrayENS5_14default_deleteIS7_EEEE(%"class.blink::JSONObject"* %16, %"class.WTF::String"* nonnull dereferenceable(8) %12, %"class.blink::JSONArray"* %245) #5
  %250 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  %251 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %250, align 8
  %252 = icmp eq %"class.WTF::StringImpl"* %251, null
  br i1 %252, label %266, label %253

253:                                              ; preds = %248
  %254 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %251, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %255 = load atomic i32, i32* %254 monotonic, align 4
  %256 = and i32 %255, 2
  %257 = icmp eq i32 %256, 0
  %258 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %251, i64 0, i32 0
  %259 = load i32, i32* %258, align 4
  br i1 %257, label %260, label %262

260:                                              ; preds = %253
  %261 = add i32 %259, -1
  store i32 %261, i32* %258, align 4
  br label %262

262:                                              ; preds = %260, %253
  %263 = phi i32 [ %261, %260 ], [ %259, %253 ]
  %264 = icmp eq i32 %263, 0
  br i1 %264, label %265, label %266

265:                                              ; preds = %262
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %251) #5
  br label %266

266:                                              ; preds = %265, %262, %248
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %249) #5
  br label %275

267:                                              ; preds = %243, %267
  %268 = phi i32 [ %272, %267 ], [ 0, %243 ]
  %269 = call dereferenceable(8) %"class.blink::GraphicsLayer"** @_ZNK3WTF6VectorIPN5blink13GraphicsLayerELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.4"* %239, i32 %268) #5
  %270 = load %"class.blink::GraphicsLayer"*, %"class.blink::GraphicsLayer"** %269, align 8
  %271 = call %"class.blink::JSONObject"* @_ZN5blink23GraphicsLayerTreeAsJSONEPKNS_13GraphicsLayerEj(%"class.blink::GraphicsLayer"* %270, i32 %1)
  call void @_ZN5blink9JSONArray10PushObjectENSt3__110unique_ptrINS_10JSONObjectENS1_14default_deleteIS3_EEEE(%"class.blink::JSONArray"* %245, %"class.blink::JSONObject"* %271) #5
  %272 = add nuw i32 %268, 1
  %273 = load i32, i32* %240, align 4
  %274 = icmp ult i32 %272, %273
  br i1 %274, label %267, label %248

275:                                              ; preds = %266, %232
  ret %"class.blink::JSONObject"* %16
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN5blink9JSONArray10PushObjectENSt3__110unique_ptrINS_10JSONObjectENS1_14default_deleteIS3_EEEE(%"class.blink::JSONArray"*, %"class.blink::JSONObject"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN5blink10JSONObject8SetArrayERKN3WTF6StringENSt3__110unique_ptrINS_9JSONArrayENS5_14default_deleteIS7_EEEE(%"class.blink::JSONObject"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::JSONArray"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink33GraphicsLayerTreeAsTextForTestingEPKNS_13GraphicsLayerEj(%"class.blink::GraphicsLayer"*, i32) local_unnamed_addr #0 {
  %3 = tail call %"class.blink::JSONObject"* @_ZN5blink23GraphicsLayerTreeAsJSONEPKNS_13GraphicsLayerEj(%"class.blink::GraphicsLayer"* %0, i32 %1)
  %4 = bitcast %"class.blink::JSONObject"* %3 to %"class.blink::JSONValue"*
  %5 = tail call %"class.WTF::StringImpl"* @_ZNK5blink9JSONValue18ToPrettyJSONStringEv(%"class.blink::JSONValue"* %4) #5
  %6 = icmp eq %"class.blink::JSONObject"* %3, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.blink::JSONObject"* %3 to void (%"class.blink::JSONObject"*)***
  %9 = load void (%"class.blink::JSONObject"*)**, void (%"class.blink::JSONObject"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::JSONObject"*)*, void (%"class.blink::JSONObject"*)** %9, i64 1
  %11 = load void (%"class.blink::JSONObject"*)*, void (%"class.blink::JSONObject"*)** %10, align 8
  tail call void %11(%"class.blink::JSONObject"* nonnull %3) #5
  br label %12

12:                                               ; preds = %2, %7
  ret %"class.WTF::StringImpl"* %5
}

declare %"class.WTF::StringImpl"* @_ZNK5blink9JSONValue18ToPrettyJSONStringEv(%"class.blink::JSONValue"*) local_unnamed_addr #2

declare %"class.blink::JSONObject"* @_ZN5blink13CCLayerAsJSONERKN2cc5LayerEj(%"class.cc::Layer"* dereferenceable(232), i32) local_unnamed_addr #2

declare void @_ZN5blink10JSONObject9SetStringERKN3WTF6StringES4_(%"class.blink::JSONObject"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink10JSONObject10SetIntegerERKN3WTF6StringEi(%"class.blink::JSONObject"*, %"class.WTF::String"* dereferenceable(8), i32) local_unnamed_addr #2

declare void @_ZN5blink10JSONObject10SetBooleanERKN3WTF6StringEb(%"class.blink::JSONObject"*, %"class.WTF::String"* dereferenceable(8), i1 zeroext) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink24PropertyTreeStateOrAlias8ToStringEv(%"class.blink::PropertyTreeStateOrAlias"*) local_unnamed_addr #2

declare void @_ZN5blink10JSONObject8SetValueERKN3WTF6StringENSt3__110unique_ptrINS_9JSONValueENS5_14default_deleteIS7_EEEE(%"class.blink::JSONObject"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::JSONValue"*) local_unnamed_addr #2

declare void @_ZN5blink9JSONArray10PushDoubleEd(%"class.blink::JSONArray"*, double) local_unnamed_addr #2

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN5blink9JSONArrayC1Ev(%"class.blink::JSONArray"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::GraphicsLayer"** @_ZNK3WTF6VectorIPN5blink13GraphicsLayerELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.4"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #5
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #5
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i8* %14, i8* %15) #5
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #5
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #5
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #5
  %23 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::GraphicsLayer"**, %"class.blink::GraphicsLayer"*** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::GraphicsLayer"*, %"class.blink::GraphicsLayer"** %24, i64 %25
  ret %"class.blink::GraphicsLayer"** %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK5blink13GraphicsLayer20GetPropertyTreeStateEv: argument 0"}
!4 = distinct !{!4, !"_ZNK5blink13GraphicsLayer20GetPropertyTreeStateEv"}
!5 = !{!6, !3}
!6 = distinct !{!6, !7, !"_ZNK5blink27RefCountedPropertyTreeState20GetPropertyTreeStateEv: argument 0"}
!7 = distinct !{!7, !"_ZNK5blink27RefCountedPropertyTreeState20GetPropertyTreeStateEv"}
