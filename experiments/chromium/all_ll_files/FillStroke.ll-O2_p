; ModuleID = '../../third_party/skia/modules/skottie/src/layers/shapelayer/FillStroke.cpp'
source_filename = "../../third_party/skia/modules/skottie/src/layers/shapelayer/FillStroke.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.skjson::ObjectValue" = type { %"class.skjson::VectorValue" }
%"class.skjson::VectorValue" = type { %"class.skjson::Value" }
%"class.skjson::Value" = type { [8 x i8] }
%"class.skottie::internal::AnimationBuilder" = type { %class.sk_sp, %"struct.skottie::internal::AnimationBuilder::LazyResolveFontMgr", %class.sk_sp.2, %class.sk_sp.3, %class.sk_sp.4, %class.sk_sp.5, %"struct.skottie::Animation::Builder::Stats"*, %struct.SkSize, float, float, i32, %"class.std::__1::vector"*, i8*, i8, %class.SkTHashMap, %class.SkTHashMap.11, %class.SkTHashMap.20 }
%class.sk_sp = type { %"class.skresources::ResourceProvider"* }
%"class.skresources::ResourceProvider" = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.skottie::internal::AnimationBuilder::LazyResolveFontMgr" = type { %class.sk_sp.1 }
%class.sk_sp.1 = type { %class.SkFontMgr* }
%class.SkFontMgr = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.2 = type { %"class.skottie::PropertyObserver"* }
%"class.skottie::PropertyObserver" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.3 = type { %"class.skottie::Logger"* }
%"class.skottie::Logger" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.4 = type { %"class.skottie::MarkerObserver"* }
%"class.skottie::MarkerObserver" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.5 = type { %"class.skottie::PrecompInterceptor"* }
%"class.skottie::PrecompInterceptor" = type { %class.SkRefCnt.base, [4 x i8] }
%"struct.skottie::Animation::Builder::Stats" = type { float, float, float, i64, i64 }
%struct.SkSize = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.sk_sp.6*, %class.sk_sp.6*, %"class.std::__1::__compressed_pair" }
%class.sk_sp.6 = type { %"class.skottie::internal::Animator"* }
%"class.skottie::internal::Animator" = type { %class.SkRefCnt.base, [4 x i8] }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.sk_sp.6* }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.11 = type { %class.SkTHashTable.12 }
%class.SkTHashTable.12 = type { i32, i32, %class.SkAutoTArray.13 }
%class.SkAutoTArray.13 = type { %"class.std::__1::unique_ptr.14" }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.20 = type { %class.SkTHashTable.21 }
%class.SkTHashTable.21 = type { i32, i32, %class.SkAutoTArray.22 }
%class.SkAutoTArray.22 = type { %"class.std::__1::unique_ptr.23" }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair>::Slot" = type opaque
%class.sk_sp.29 = type { %"class.sksg::PaintNode"* }
%"class.sksg::PaintNode" = type { %"class.sksg::Node.base", float, float, float, i8, i32, i8, i8, i32 }
%"class.sksg::Node.base" = type <{ %class.SkRefCnt.base, [4 x i8], %union.anon, %struct.SkRect, i16 }>
%union.anon = type { %"class.sksg::Node"* }
%"class.sksg::Node" = type <{ %class.SkRefCnt.base, [4 x i8], %union.anon, %struct.SkRect, i16, [6 x i8] }>
%struct.SkRect = type { float, float, float, float }
%class.sk_sp.31 = type { %"class.skottie::internal::AnimatablePropertyContainer"* }
%"class.skottie::internal::AnimatablePropertyContainer" = type <{ %"class.skottie::internal::Animator.base", [4 x i8], %"class.std::__1::vector", i8, [7 x i8] }>
%"class.skottie::internal::Animator.base" = type { %class.SkRefCnt.base }
%"class.skottie::VectorValue" = type { %"class.std::__1::vector.56" }
%"class.std::__1::vector.56" = type { %"class.std::__1::__vector_base.57" }
%"class.std::__1::__vector_base.57" = type { float*, float*, %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { float* }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.sk_sp.32 = type { %"class.sksg::Color"* }
%"class.sksg::Color" = type { %"class.sksg::PaintNode", i32, [4 x i8] }
%"class.std::__1::vector.33" = type { %"class.std::__1::__vector_base.34" }
%"class.std::__1::__vector_base.34" = type { %class.sk_sp.35*, %class.sk_sp.35*, %"class.std::__1::__compressed_pair.36" }
%class.sk_sp.35 = type { %"class.sksg::GeometryNode"* }
%"class.sksg::GeometryNode" = type { %"class.sksg::Node.base", [6 x i8] }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %class.sk_sp.35* }
%"class.sksg::GeometryEffect" = type { %"class.sksg::GeometryNode.base", %class.sk_sp.35, %class.SkPath }
%"class.sksg::GeometryNode.base" = type { %"class.sksg::Node.base" }
%class.SkPath = type <{ %class.sk_sp.43, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.43 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.44, %class.SkTDArray.45, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.44 = type { i8*, i32, i32 }
%class.SkTDArray.45 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.51 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.51 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.52", [3 x i8] }
%"struct.std::__1::atomic.52" = type { %"struct.std::__1::__atomic_base.53" }
%"struct.std::__1::__atomic_base.53" = type { %"struct.std::__1::__cxx_atomic_impl.54" }
%"struct.std::__1::__cxx_atomic_impl.54" = type { %"struct.std::__1::__cxx_atomic_base_impl.55" }
%"struct.std::__1::__cxx_atomic_base_impl.55" = type { i8 }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"class.sksg::DashEffect" = type <{ %"class.sksg::GeometryEffect", %"class.std::__1::vector.56", float, [4 x i8] }>
%"class.skottie::internal::(anonymous namespace)::FillStrokeAdapter" = type { %"class.skottie::internal::DiscardableAdapterBase", i32, %"class.skottie::VectorValue", float, float }
%"class.skottie::internal::DiscardableAdapterBase" = type { %"class.skottie::internal::AnimatablePropertyContainer.base", %class.sk_sp.29 }
%"class.skottie::internal::AnimatablePropertyContainer.base" = type <{ %"class.skottie::internal::Animator.base", [4 x i8], %"class.std::__1::vector", i8 }>
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.skottie::internal::(anonymous namespace)::DashAdapter" = type <{ %"class.skottie::internal::DiscardableAdapterBase.67", %"class.std::__1::vector.56", float, [4 x i8] }>
%"class.skottie::internal::DiscardableAdapterBase.67" = type { %"class.skottie::internal::AnimatablePropertyContainer.base", %class.sk_sp.42 }
%class.sk_sp.42 = type { %"class.sksg::DashEffect"* }

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNSt3__16vectorI5sk_spIN7skottie8internal8AnimatorEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_ = comdat any

$_ZNSt3__16vectorIfNS_9allocatorIfEEE8__appendEmRKf = comdat any

$_ZNSt3__16vectorIfNS_9allocatorIfEEE6assignIPfEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIfNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

@.str = private unnamed_addr constant [2 x i8] c"d\00", align 1
@_ZTVN7skottie8internal12_GLOBAL__N_117FillStrokeAdapterE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.skottie::internal::(anonymous namespace)::FillStrokeAdapter"*)* @_ZN7skottie8internal12_GLOBAL__N_117FillStrokeAdapterD2Ev to i8*), i8* bitcast (void (%"class.skottie::internal::(anonymous namespace)::FillStrokeAdapter"*)* @_ZN7skottie8internal12_GLOBAL__N_117FillStrokeAdapterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i1 (%"class.skottie::internal::AnimatablePropertyContainer"*, float)* @_ZN7skottie8internal27AnimatablePropertyContainer6onSeekEf to i8*), i8* bitcast (void (%"class.skottie::internal::(anonymous namespace)::FillStrokeAdapter"*)* @_ZN7skottie8internal12_GLOBAL__N_117FillStrokeAdapter6onSyncEv to i8*)] }, align 8
@.str.1 = private unnamed_addr constant [2 x i8] c"o\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"ml\00", align 1
@_ZZN7skottie8internal12_GLOBAL__N_117FillStrokeAdapterC1ERKN6skjson11ObjectValueERKNS0_16AnimationBuilderE5sk_spIN4sksg9PaintNodeEESA_INS0_27AnimatablePropertyContainerEENS2_4TypeEE6gJoins = internal unnamed_addr constant [3 x i8] c"\00\01\02", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c"lj\00", align 1
@_ZZN7skottie8internal12_GLOBAL__N_117FillStrokeAdapterC1ERKN6skjson11ObjectValueERKNS0_16AnimationBuilderE5sk_spIN4sksg9PaintNodeEESA_INS0_27AnimatablePropertyContainerEENS2_4TypeEE5gCaps = internal unnamed_addr constant [3 x i32] [i32 0, i32 1, i32 2], align 4
@.str.5 = private unnamed_addr constant [3 x i8] c"lc\00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@_ZTVN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_117FillStrokeAdapterEN4sksg9PaintNodeEEE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.skottie::internal::DiscardableAdapterBase"*)* @_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_117FillStrokeAdapterEN4sksg9PaintNodeEED2Ev to i8*), i8* bitcast (void (%"class.skottie::internal::DiscardableAdapterBase"*)* @_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_117FillStrokeAdapterEN4sksg9PaintNodeEED0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i1 (%"class.skottie::internal::AnimatablePropertyContainer"*, float)* @_ZN7skottie8internal27AnimatablePropertyContainer6onSeekEf to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN7skottie8internal27AnimatablePropertyContainerE = external unnamed_addr constant { [7 x i8*] }, align 8
@_ZTVN7skottie8internal12_GLOBAL__N_111DashAdapterE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.skottie::internal::(anonymous namespace)::DashAdapter"*)* @_ZN7skottie8internal12_GLOBAL__N_111DashAdapterD2Ev to i8*), i8* bitcast (void (%"class.skottie::internal::(anonymous namespace)::DashAdapter"*)* @_ZN7skottie8internal12_GLOBAL__N_111DashAdapterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i1 (%"class.skottie::internal::AnimatablePropertyContainer"*, float)* @_ZN7skottie8internal27AnimatablePropertyContainer6onSeekEf to i8*), i8* bitcast (void (%"class.skottie::internal::(anonymous namespace)::DashAdapter"*)* @_ZN7skottie8internal12_GLOBAL__N_111DashAdapter6onSyncEv to i8*)] }, align 8
@.str.8 = private unnamed_addr constant [2 x i8] c"v\00", align 1
@_ZTVN4sksg10DashEffectE = external unnamed_addr constant { [11 x i8*] }, align 8
@_ZTVN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_111DashAdapterEN4sksg10DashEffectEEE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.skottie::internal::DiscardableAdapterBase.67"*)* @_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_111DashAdapterEN4sksg10DashEffectEED2Ev to i8*), i8* bitcast (void (%"class.skottie::internal::DiscardableAdapterBase.67"*)* @_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_111DashAdapterEN4sksg10DashEffectEED0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i1 (%"class.skottie::internal::AnimatablePropertyContainer"*, float)* @_ZN7skottie8internal27AnimatablePropertyContainer6onSeekEf to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7skottie8internal12ShapeBuilder10AttachFillERKN6skjson11ObjectValueEPKNS0_16AnimationBuilderE5sk_spIN4sksg9PaintNodeEES9_INS0_27AnimatablePropertyContainerEE(%class.sk_sp.29* noalias sret, %"class.skjson::ObjectValue"* dereferenceable(8), %"class.skottie::internal::AnimationBuilder"*, %class.sk_sp.29* nocapture, %class.sk_sp.31* nocapture) local_unnamed_addr #0 align 2 {
  %6 = alloca i32, align 4
  %7 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #10
  store i32 0, i32* %6, align 4
  call fastcc void @_ZNK7skottie8internal16AnimationBuilder24attachDiscardableAdapterINS0_12_GLOBAL__N_117FillStrokeAdapterEJRKN6skjson11ObjectValueERKS1_5sk_spIN4sksg9PaintNodeEESB_INS0_27AnimatablePropertyContainerEENS4_4TypeEEEENSt3__15decayIDTclptclsrT_4Makespclsr3stdE7forwardIT0_Efp_EE4nodeEEE4typeEDpOSL_(%class.sk_sp.29* sret %0, %"class.skottie::internal::AnimationBuilder"* %2, %"class.skjson::ObjectValue"* dereferenceable(8) %1, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %2, %class.sk_sp.29* dereferenceable(8) %3, %class.sk_sp.31* dereferenceable(8) %4, i32* nonnull dereferenceable(4) %6)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZNK7skottie8internal16AnimationBuilder24attachDiscardableAdapterINS0_12_GLOBAL__N_117FillStrokeAdapterEJRKN6skjson11ObjectValueERKS1_5sk_spIN4sksg9PaintNodeEESB_INS0_27AnimatablePropertyContainerEENS4_4TypeEEEENSt3__15decayIDTclptclsrT_4Makespclsr3stdE7forwardIT0_Efp_EE4nodeEEE4typeEDpOSL_(%class.sk_sp.29* noalias sret, %"class.skottie::internal::AnimationBuilder"* nocapture readonly, %"class.skjson::ObjectValue"* dereferenceable(8), %"class.skottie::internal::AnimationBuilder"* dereferenceable(152), %class.sk_sp.29* nocapture dereferenceable(8), %class.sk_sp.31* nocapture dereferenceable(8), i32* nocapture readonly dereferenceable(4)) unnamed_addr #0 align 2 {
  %8 = alloca float, align 4
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca %class.sk_sp.31, align 8
  %12 = alloca %class.sk_sp.6, align 8
  %13 = getelementptr inbounds %class.sk_sp.29, %class.sk_sp.29* %0, i64 0, i32 0
  store %"class.sksg::PaintNode"* null, %"class.sksg::PaintNode"** %13, align 8
  %14 = tail call i8* @_Znwm(i64 96) #11, !noalias !2
  %15 = getelementptr inbounds %class.sk_sp.29, %class.sk_sp.29* %4, i64 0, i32 0
  %16 = bitcast %class.sk_sp.29* %4 to i64*
  %17 = load i64, i64* %16, align 8, !noalias !2
  store %"class.sksg::PaintNode"* null, %"class.sksg::PaintNode"** %15, align 8, !noalias !2
  %18 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %5, i64 0, i32 0
  %19 = bitcast %class.sk_sp.31* %5 to i64*
  %20 = load i64, i64* %19, align 8, !noalias !2
  store %"class.skottie::internal::AnimatablePropertyContainer"* null, %"class.skottie::internal::AnimatablePropertyContainer"** %18, align 8, !noalias !2
  %21 = load i32, i32* %6, align 4, !noalias !2
  %22 = bitcast %class.sk_sp.31* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #10, !noalias !2
  %23 = getelementptr inbounds i8, i8* %14, i64 8
  %24 = bitcast i8* %23 to i32*
  store i32 1, i32* %24, align 4, !noalias !2
  %25 = bitcast i8* %14 to i32 (...)***
  %26 = getelementptr inbounds i8, i8* %14, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 25, i1 false) #10, !noalias !2
  %27 = getelementptr inbounds i8, i8* %14, i64 48
  %28 = bitcast i8* %27 to i64*
  store i64 %17, i64* %28, align 8, !noalias !2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal12_GLOBAL__N_117FillStrokeAdapterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %25, align 8, !noalias !2
  %29 = getelementptr inbounds i8, i8* %14, i64 56
  %30 = bitcast i8* %29 to i32*
  %31 = icmp ne i64 %20, 0
  %32 = zext i1 %31 to i32
  store i32 %32, i32* %30, align 8, !noalias !2
  %33 = getelementptr inbounds i8, i8* %14, i64 64
  %34 = bitcast i8* %33 to %"class.skottie::VectorValue"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 24, i1 false) #10, !noalias !2
  %35 = getelementptr inbounds i8, i8* %14, i64 88
  %36 = bitcast i8* %35 to float*
  store float 1.000000e+02, float* %36, align 8, !noalias !2
  %37 = getelementptr inbounds i8, i8* %14, i64 92
  %38 = bitcast i8* %37 to float*
  store float 1.000000e+00, float* %38, align 4, !noalias !2
  %39 = bitcast i8* %14 to %"class.skottie::internal::AnimatablePropertyContainer"*
  %40 = bitcast %class.sk_sp.31* %11 to i64*
  store i64 %20, i64* %40, align 8, !noalias !2
  call void @_ZN7skottie8internal27AnimatablePropertyContainer24attachDiscardableAdapterE5sk_spIS1_E(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %39, %class.sk_sp.31* nonnull %11) #10, !noalias !2
  %41 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %11, i64 0, i32 0
  %42 = load %"class.skottie::internal::AnimatablePropertyContainer"*, %"class.skottie::internal::AnimatablePropertyContainer"** %41, align 8, !noalias !2
  %43 = icmp eq %"class.skottie::internal::AnimatablePropertyContainer"* %42, null
  br i1 %43, label %54, label %44

44:                                               ; preds = %7
  %45 = getelementptr inbounds %"class.skottie::internal::AnimatablePropertyContainer", %"class.skottie::internal::AnimatablePropertyContainer"* %42, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = atomicrmw add i32* %45, i32 -1 acq_rel, !noalias !2
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %54

48:                                               ; preds = %44
  %49 = bitcast %"class.skottie::internal::AnimatablePropertyContainer"* %42 to %class.SkRefCntBase*
  %50 = bitcast %"class.skottie::internal::AnimatablePropertyContainer"* %42 to void (%class.SkRefCntBase*)***
  %51 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %50, align 8, !noalias !2
  %52 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %51, i64 2
  %53 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %52, align 8, !noalias !2
  call void %53(%class.SkRefCntBase* nonnull %49) #10, !noalias !2
  br label %54

54:                                               ; preds = %48, %44, %7
  %55 = call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #10, !noalias !2
  %56 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %55, i64 0, i32 0, i64 0
  %57 = load i8, i8* %56, align 8, !noalias !2
  %58 = and i8 %57, 7
  %59 = icmp eq i8 %58, 7
  %60 = bitcast %"class.skjson::Value"* %55 to %"class.skjson::ObjectValue"*
  %61 = select i1 %59, %"class.skjson::ObjectValue"* %60, %"class.skjson::ObjectValue"* null
  %62 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %39, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %3, %"class.skjson::ObjectValue"* %61, float* %36) #10, !noalias !2
  %63 = bitcast i8* %27 to %"class.sksg::PaintNode"**
  %64 = load %"class.sksg::PaintNode"*, %"class.sksg::PaintNode"** %63, align 8, !noalias !2
  %65 = getelementptr inbounds %"class.sksg::PaintNode", %"class.sksg::PaintNode"* %64, i64 0, i32 4
  %66 = load i8, i8* %65, align 8, !range !5, !noalias !2
  %67 = icmp eq i8 %66, 1
  br i1 %67, label %70, label %68

68:                                               ; preds = %54
  store i8 1, i8* %65, align 8, !noalias !2
  %69 = bitcast %"class.sksg::PaintNode"* %64 to %"class.sksg::Node"*
  call void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"* %69, i1 zeroext true) #10, !noalias !2
  br label %70

70:                                               ; preds = %68, %54
  %71 = icmp eq i32 %21, 1
  br i1 %71, label %72, label %146

72:                                               ; preds = %70
  %73 = call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #10, !noalias !2
  %74 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %73, i64 0, i32 0, i64 0
  %75 = load i8, i8* %74, align 8, !noalias !2
  %76 = and i8 %75, 7
  %77 = icmp eq i8 %76, 7
  %78 = bitcast %"class.skjson::Value"* %73 to %"class.skjson::ObjectValue"*
  %79 = select i1 %77, %"class.skjson::ObjectValue"* %78, %"class.skjson::ObjectValue"* null
  %80 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %39, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %3, %"class.skjson::ObjectValue"* %79, float* %38) #10, !noalias !2
  %81 = load %"class.sksg::PaintNode"*, %"class.sksg::PaintNode"** %63, align 8, !noalias !2
  %82 = getelementptr inbounds %"class.sksg::PaintNode", %"class.sksg::PaintNode"* %81, i64 0, i32 6
  %83 = load i8, i8* %82, align 8, !noalias !2
  %84 = icmp eq i8 %83, 1
  br i1 %84, label %88, label %85

85:                                               ; preds = %72
  store i8 1, i8* %82, align 8, !noalias !2
  %86 = bitcast %"class.sksg::PaintNode"* %81 to %"class.sksg::Node"*
  call void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"* %86, i1 zeroext true) #10, !noalias !2
  %87 = load %"class.sksg::PaintNode"*, %"class.sksg::PaintNode"** %63, align 8, !noalias !2
  br label %88

88:                                               ; preds = %85, %72
  %89 = phi %"class.sksg::PaintNode"* [ %81, %72 ], [ %87, %85 ]
  %90 = call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0)) #10, !noalias !2
  %91 = bitcast float* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %91) #10, !noalias !2
  store float 0xFFFFFFFFE0000000, float* %8, align 4, !noalias !2
  %92 = call zeroext i1 @_ZN7skottie5ParseIfEEbRKN6skjson5ValueEPT_(%"class.skjson::Value"* dereferenceable(8) %90, float* nonnull %8) #10, !noalias !2
  br i1 %92, label %93, label %95

93:                                               ; preds = %88
  %94 = load float, float* %8, align 4, !noalias !2
  br label %97

95:                                               ; preds = %88
  %96 = bitcast float* %8 to i32*
  store i32 1082130432, i32* %96, align 4, !noalias !2
  br label %97

97:                                               ; preds = %95, %93
  %98 = phi float [ %94, %93 ], [ 4.000000e+00, %95 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %91) #10, !noalias !2
  %99 = getelementptr inbounds %"class.sksg::PaintNode", %"class.sksg::PaintNode"* %89, i64 0, i32 3
  %100 = load float, float* %99, align 4, !noalias !2
  %101 = fcmp oeq float %100, %98
  br i1 %101, label %104, label %102

102:                                              ; preds = %97
  store float %98, float* %99, align 4, !noalias !2
  %103 = bitcast %"class.sksg::PaintNode"* %89 to %"class.sksg::Node"*
  call void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"* %103, i1 zeroext true) #10, !noalias !2
  br label %104

104:                                              ; preds = %102, %97
  %105 = load %"class.sksg::PaintNode"*, %"class.sksg::PaintNode"** %63, align 8, !noalias !2
  %106 = call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0)) #10, !noalias !2
  %107 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %107) #10, !noalias !2
  store i64 -6148914691236517206, i64* %9, align 8, !noalias !2
  %108 = call zeroext i1 @_ZN7skottie5ParseImEEbRKN6skjson5ValueEPT_(%"class.skjson::Value"* dereferenceable(8) %106, i64* nonnull %9) #10, !noalias !2
  br i1 %108, label %110, label %109

109:                                              ; preds = %104
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %107) #10, !noalias !2
  br label %114

110:                                              ; preds = %104
  %111 = load i64, i64* %9, align 8, !noalias !2
  %112 = add i64 %111, -1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %107) #10, !noalias !2
  %113 = icmp ult i64 %112, 2
  br i1 %113, label %114, label %116

114:                                              ; preds = %110, %109
  %115 = phi i64 [ 0, %109 ], [ %112, %110 ]
  br label %116

116:                                              ; preds = %114, %110
  %117 = phi i64 [ %115, %114 ], [ 2, %110 ]
  %118 = getelementptr inbounds [3 x i8], [3 x i8]* @_ZZN7skottie8internal12_GLOBAL__N_117FillStrokeAdapterC1ERKN6skjson11ObjectValueERKNS0_16AnimationBuilderE5sk_spIN4sksg9PaintNodeEESA_INS0_27AnimatablePropertyContainerEENS2_4TypeEE6gJoins, i64 0, i64 %117
  %119 = getelementptr inbounds %"class.sksg::PaintNode", %"class.sksg::PaintNode"* %105, i64 0, i32 7
  %120 = load i8, i8* %119, align 1, !noalias !2
  %121 = load i8, i8* %118, align 1, !noalias !2
  %122 = icmp eq i8 %120, %121
  br i1 %122, label %125, label %123

123:                                              ; preds = %116
  store i8 %121, i8* %119, align 1, !noalias !2
  %124 = bitcast %"class.sksg::PaintNode"* %105 to %"class.sksg::Node"*
  call void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"* %124, i1 zeroext true) #10, !noalias !2
  br label %125

125:                                              ; preds = %123, %116
  %126 = load %"class.sksg::PaintNode"*, %"class.sksg::PaintNode"** %63, align 8, !noalias !2
  %127 = call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0)) #10, !noalias !2
  %128 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %128) #10, !noalias !2
  store i64 -6148914691236517206, i64* %10, align 8, !noalias !2
  %129 = call zeroext i1 @_ZN7skottie5ParseImEEbRKN6skjson5ValueEPT_(%"class.skjson::Value"* dereferenceable(8) %127, i64* nonnull %10) #10, !noalias !2
  br i1 %129, label %131, label %130

130:                                              ; preds = %125
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %128) #10, !noalias !2
  br label %135

131:                                              ; preds = %125
  %132 = load i64, i64* %10, align 8, !noalias !2
  %133 = add i64 %132, -1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %128) #10, !noalias !2
  %134 = icmp ult i64 %133, 2
  br i1 %134, label %135, label %137

135:                                              ; preds = %131, %130
  %136 = phi i64 [ 0, %130 ], [ %133, %131 ]
  br label %137

137:                                              ; preds = %135, %131
  %138 = phi i64 [ %136, %135 ], [ 2, %131 ]
  %139 = getelementptr inbounds [3 x i32], [3 x i32]* @_ZZN7skottie8internal12_GLOBAL__N_117FillStrokeAdapterC1ERKN6skjson11ObjectValueERKNS0_16AnimationBuilderE5sk_spIN4sksg9PaintNodeEESA_INS0_27AnimatablePropertyContainerEENS2_4TypeEE5gCaps, i64 0, i64 %138
  %140 = getelementptr inbounds %"class.sksg::PaintNode", %"class.sksg::PaintNode"* %126, i64 0, i32 8
  %141 = load i32, i32* %140, align 4, !noalias !2
  %142 = load i32, i32* %139, align 4, !noalias !2
  %143 = icmp eq i32 %141, %142
  br i1 %143, label %146, label %144

144:                                              ; preds = %137
  store i32 %142, i32* %140, align 4, !noalias !2
  %145 = bitcast %"class.sksg::PaintNode"* %126 to %"class.sksg::Node"*
  call void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"* %145, i1 zeroext true) #10, !noalias !2
  br label %146

146:                                              ; preds = %144, %137, %70
  %147 = load i32, i32* %30, align 8, !noalias !2
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %158

149:                                              ; preds = %146
  %150 = call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #10, !noalias !2
  %151 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %150, i64 0, i32 0, i64 0
  %152 = load i8, i8* %151, align 8, !noalias !2
  %153 = and i8 %152, 7
  %154 = icmp eq i8 %153, 7
  %155 = bitcast %"class.skjson::Value"* %150 to %"class.skjson::ObjectValue"*
  %156 = select i1 %154, %"class.skjson::ObjectValue"* %155, %"class.skjson::ObjectValue"* null
  %157 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindINS_11VectorValueEEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %39, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %3, %"class.skjson::ObjectValue"* %156, %"class.skottie::VectorValue"* %34) #10, !noalias !2
  br label %158

158:                                              ; preds = %149, %146
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #10, !noalias !2
  %159 = ptrtoint i8* %14 to i64
  call void @_ZN7skottie8internal27AnimatablePropertyContainer13shrink_to_fitEv(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %39) #10, !noalias !2
  %160 = bitcast i8* %27 to %class.sk_sp.29*
  %161 = icmp eq %class.sk_sp.29* %160, %0
  br i1 %161, label %181, label %162

162:                                              ; preds = %158
  %163 = load %"class.sksg::PaintNode"*, %"class.sksg::PaintNode"** %63, align 8
  %164 = icmp eq %"class.sksg::PaintNode"* %163, null
  br i1 %164, label %168, label %165

165:                                              ; preds = %162
  %166 = getelementptr inbounds %"class.sksg::PaintNode", %"class.sksg::PaintNode"* %163, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %167 = atomicrmw add i32* %166, i32 1 monotonic
  br label %168

168:                                              ; preds = %165, %162
  %169 = load %"class.sksg::PaintNode"*, %"class.sksg::PaintNode"** %13, align 8
  store %"class.sksg::PaintNode"* %163, %"class.sksg::PaintNode"** %13, align 8
  %170 = icmp eq %"class.sksg::PaintNode"* %169, null
  br i1 %170, label %181, label %171

171:                                              ; preds = %168
  %172 = getelementptr inbounds %"class.sksg::PaintNode", %"class.sksg::PaintNode"* %169, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %173 = atomicrmw add i32* %172, i32 -1 acq_rel
  %174 = icmp eq i32 %173, 1
  br i1 %174, label %175, label %181

175:                                              ; preds = %171
  %176 = bitcast %"class.sksg::PaintNode"* %169 to %class.SkRefCntBase*
  %177 = bitcast %"class.sksg::PaintNode"* %169 to void (%class.SkRefCntBase*)***
  %178 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %177, align 8
  %179 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %178, i64 2
  %180 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %179, align 8
  call void %180(%class.SkRefCntBase* nonnull %176) #10
  br label %181

181:                                              ; preds = %158, %168, %171, %175
  %182 = bitcast i8* %26 to %class.sk_sp.6**
  %183 = load %class.sk_sp.6*, %class.sk_sp.6** %182, align 8
  %184 = getelementptr inbounds i8, i8* %14, i64 24
  %185 = bitcast i8* %184 to %class.sk_sp.6**
  %186 = load %class.sk_sp.6*, %class.sk_sp.6** %185, align 8
  %187 = icmp eq %class.sk_sp.6* %183, %186
  br i1 %187, label %220, label %188

188:                                              ; preds = %181
  %189 = getelementptr inbounds %"class.skottie::internal::AnimationBuilder", %"class.skottie::internal::AnimationBuilder"* %1, i64 0, i32 11
  %190 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %189, align 8
  %191 = bitcast %class.sk_sp.6* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %191) #10
  %192 = bitcast %class.sk_sp.6* %12 to i64*
  store i64 %159, i64* %192, align 8
  %193 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %190, i64 0, i32 0, i32 1
  %194 = load %class.sk_sp.6*, %class.sk_sp.6** %193, align 8
  %195 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %190, i64 0, i32 0, i32 2, i32 0, i32 0
  %196 = load %class.sk_sp.6*, %class.sk_sp.6** %195, align 8
  %197 = icmp ult %class.sk_sp.6* %194, %196
  br i1 %197, label %198, label %204

198:                                              ; preds = %188
  %199 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %12, i64 0, i32 0
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %199, align 8
  %200 = bitcast %class.sk_sp.6* %194 to i64*
  store i64 %159, i64* %200, align 8
  %201 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %194, i64 1
  %202 = ptrtoint %class.sk_sp.6* %201 to i64
  %203 = bitcast %class.sk_sp.6** %193 to i64*
  store i64 %202, i64* %203, align 8
  br label %205

204:                                              ; preds = %188
  call void @_ZNSt3__16vectorI5sk_spIN7skottie8internal8AnimatorEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector"* %190, %class.sk_sp.6* nonnull dereferenceable(8) %12) #10
  br label %205

205:                                              ; preds = %204, %198
  %206 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %12, i64 0, i32 0
  %207 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %206, align 8
  %208 = icmp eq %"class.skottie::internal::Animator"* %207, null
  br i1 %208, label %219, label %209

209:                                              ; preds = %205
  %210 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %207, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %211 = atomicrmw add i32* %210, i32 -1 acq_rel
  %212 = icmp eq i32 %211, 1
  br i1 %212, label %213, label %219

213:                                              ; preds = %209
  %214 = bitcast %"class.skottie::internal::Animator"* %207 to %class.SkRefCntBase*
  %215 = bitcast %"class.skottie::internal::Animator"* %207 to void (%class.SkRefCntBase*)***
  %216 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %215, align 8
  %217 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %216, i64 2
  %218 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %217, align 8
  call void %218(%class.SkRefCntBase* nonnull %214) #10
  br label %219

219:                                              ; preds = %205, %209, %213
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %191) #10
  br label %235

220:                                              ; preds = %181
  %221 = bitcast i8* %14 to %"class.skottie::internal::Animator"*
  %222 = bitcast i8* %14 to i1 (%"class.skottie::internal::Animator"*, float)***
  %223 = load i1 (%"class.skottie::internal::Animator"*, float)**, i1 (%"class.skottie::internal::Animator"*, float)*** %222, align 8
  %224 = getelementptr inbounds i1 (%"class.skottie::internal::Animator"*, float)*, i1 (%"class.skottie::internal::Animator"*, float)** %223, i64 3
  %225 = load i1 (%"class.skottie::internal::Animator"*, float)*, i1 (%"class.skottie::internal::Animator"*, float)** %224, align 8
  %226 = call zeroext i1 %225(%"class.skottie::internal::Animator"* nonnull %221, float 0.000000e+00) #10
  %227 = atomicrmw add i32* %24, i32 -1 acq_rel
  %228 = icmp eq i32 %227, 1
  br i1 %228, label %229, label %235

229:                                              ; preds = %220
  %230 = bitcast i8* %14 to %class.SkRefCntBase*
  %231 = bitcast i8* %14 to void (%class.SkRefCntBase*)***
  %232 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %231, align 8
  %233 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %232, i64 2
  %234 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %233, align 8
  call void %234(%class.SkRefCntBase* nonnull %230) #10
  br label %235

235:                                              ; preds = %219, %220, %229
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7skottie8internal12ShapeBuilder12AttachStrokeERKN6skjson11ObjectValueEPKNS0_16AnimationBuilderE5sk_spIN4sksg9PaintNodeEES9_INS0_27AnimatablePropertyContainerEE(%class.sk_sp.29* noalias sret, %"class.skjson::ObjectValue"* dereferenceable(8), %"class.skottie::internal::AnimationBuilder"*, %class.sk_sp.29* nocapture, %class.sk_sp.31* nocapture) local_unnamed_addr #0 align 2 {
  %6 = alloca i32, align 4
  %7 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #10
  store i32 1, i32* %6, align 4
  call fastcc void @_ZNK7skottie8internal16AnimationBuilder24attachDiscardableAdapterINS0_12_GLOBAL__N_117FillStrokeAdapterEJRKN6skjson11ObjectValueERKS1_5sk_spIN4sksg9PaintNodeEESB_INS0_27AnimatablePropertyContainerEENS4_4TypeEEEENSt3__15decayIDTclptclsrT_4Makespclsr3stdE7forwardIT0_Efp_EE4nodeEEE4typeEDpOSL_(%class.sk_sp.29* sret %0, %"class.skottie::internal::AnimationBuilder"* %2, %"class.skjson::ObjectValue"* dereferenceable(8) %1, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %2, %class.sk_sp.29* dereferenceable(8) %3, %class.sk_sp.31* dereferenceable(8) %4, i32* nonnull dereferenceable(4) %6)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7skottie8internal12ShapeBuilder15AttachColorFillERKN6skjson11ObjectValueEPKNS0_16AnimationBuilderE(%class.sk_sp.29* noalias sret, %"class.skjson::ObjectValue"* dereferenceable(8), %"class.skottie::internal::AnimationBuilder"*) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca %class.sk_sp.32, align 8
  %6 = alloca %class.sk_sp.29, align 8
  %7 = alloca %class.sk_sp.31, align 8
  %8 = bitcast %class.sk_sp.32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #10
  %9 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %5, i64 0, i32 0
  store %"class.sksg::Color"* inttoptr (i64 -6148914691236517206 to %"class.sksg::Color"*), %"class.sksg::Color"** %9, align 8
  call void @_ZN4sksg5Color4MakeEj(%class.sk_sp.32* nonnull sret %5, i32 -16777216) #10
  %10 = call zeroext i1 @_ZNK7skottie8internal16AnimationBuilder21dispatchColorPropertyERK5sk_spIN4sksg5ColorEE(%"class.skottie::internal::AnimationBuilder"* %2, %class.sk_sp.32* nonnull dereferenceable(8) %5) #10
  %11 = getelementptr inbounds %class.sk_sp.29, %class.sk_sp.29* %6, i64 0, i32 0
  %12 = load %"class.sksg::Color"*, %"class.sksg::Color"** %9, align 8
  store %"class.sksg::Color"* null, %"class.sksg::Color"** %9, align 8
  %13 = getelementptr inbounds %"class.sksg::Color", %"class.sksg::Color"* %12, i64 0, i32 0
  store %"class.sksg::PaintNode"* %13, %"class.sksg::PaintNode"** %11, align 8
  %14 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %7, i64 0, i32 0
  store %"class.skottie::internal::AnimatablePropertyContainer"* null, %"class.skottie::internal::AnimatablePropertyContainer"** %14, align 8
  %15 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #10, !noalias !6
  store i32 0, i32* %4, align 4, !noalias !6
  call fastcc void @_ZNK7skottie8internal16AnimationBuilder24attachDiscardableAdapterINS0_12_GLOBAL__N_117FillStrokeAdapterEJRKN6skjson11ObjectValueERKS1_5sk_spIN4sksg9PaintNodeEESB_INS0_27AnimatablePropertyContainerEENS4_4TypeEEEENSt3__15decayIDTclptclsrT_4Makespclsr3stdE7forwardIT0_Efp_EE4nodeEEE4typeEDpOSL_(%class.sk_sp.29* sret %0, %"class.skottie::internal::AnimationBuilder"* %2, %"class.skjson::ObjectValue"* dereferenceable(8) %1, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %2, %class.sk_sp.29* nonnull dereferenceable(8) %6, %class.sk_sp.31* nonnull dereferenceable(8) %7, i32* nonnull dereferenceable(4) %4) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #10, !noalias !6
  %16 = load %"class.skottie::internal::AnimatablePropertyContainer"*, %"class.skottie::internal::AnimatablePropertyContainer"** %14, align 8
  %17 = icmp eq %"class.skottie::internal::AnimatablePropertyContainer"* %16, null
  br i1 %17, label %28, label %18

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.skottie::internal::AnimatablePropertyContainer", %"class.skottie::internal::AnimatablePropertyContainer"* %16, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw add i32* %19, i32 -1 acq_rel
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %28

22:                                               ; preds = %18
  %23 = bitcast %"class.skottie::internal::AnimatablePropertyContainer"* %16 to %class.SkRefCntBase*
  %24 = bitcast %"class.skottie::internal::AnimatablePropertyContainer"* %16 to void (%class.SkRefCntBase*)***
  %25 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %24, align 8
  %26 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %25, i64 2
  %27 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %26, align 8
  call void %27(%class.SkRefCntBase* nonnull %23) #10
  br label %28

28:                                               ; preds = %3, %18, %22
  %29 = load %"class.sksg::PaintNode"*, %"class.sksg::PaintNode"** %11, align 8
  %30 = icmp eq %"class.sksg::PaintNode"* %29, null
  br i1 %30, label %41, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"class.sksg::PaintNode", %"class.sksg::PaintNode"* %29, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = atomicrmw add i32* %32, i32 -1 acq_rel
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %35, label %41

35:                                               ; preds = %31
  %36 = bitcast %"class.sksg::PaintNode"* %29 to %class.SkRefCntBase*
  %37 = bitcast %"class.sksg::PaintNode"* %29 to void (%class.SkRefCntBase*)***
  %38 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %37, align 8
  %39 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %38, i64 2
  %40 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, align 8
  call void %40(%class.SkRefCntBase* nonnull %36) #10
  br label %41

41:                                               ; preds = %28, %31, %35
  %42 = load %"class.sksg::Color"*, %"class.sksg::Color"** %9, align 8
  %43 = icmp eq %"class.sksg::Color"* %42, null
  br i1 %43, label %54, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.sksg::Color", %"class.sksg::Color"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = atomicrmw add i32* %45, i32 -1 acq_rel
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %54

48:                                               ; preds = %44
  %49 = bitcast %"class.sksg::Color"* %42 to %class.SkRefCntBase*
  %50 = bitcast %"class.sksg::Color"* %42 to void (%class.SkRefCntBase*)***
  %51 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %50, align 8
  %52 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %51, i64 2
  %53 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %52, align 8
  call void %53(%class.SkRefCntBase* nonnull %49) #10
  br label %54

54:                                               ; preds = %41, %44, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #10
  ret void
}

declare void @_ZN4sksg5Color4MakeEj(%class.sk_sp.32* sret, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK7skottie8internal16AnimationBuilder21dispatchColorPropertyERK5sk_spIN4sksg5ColorEE(%"class.skottie::internal::AnimationBuilder"*, %class.sk_sp.32* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7skottie8internal12ShapeBuilder17AttachColorStrokeERKN6skjson11ObjectValueEPKNS0_16AnimationBuilderE(%class.sk_sp.29* noalias sret, %"class.skjson::ObjectValue"* dereferenceable(8), %"class.skottie::internal::AnimationBuilder"*) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca %class.sk_sp.32, align 8
  %6 = alloca %class.sk_sp.29, align 8
  %7 = alloca %class.sk_sp.31, align 8
  %8 = bitcast %class.sk_sp.32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #10
  %9 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %5, i64 0, i32 0
  store %"class.sksg::Color"* inttoptr (i64 -6148914691236517206 to %"class.sksg::Color"*), %"class.sksg::Color"** %9, align 8
  call void @_ZN4sksg5Color4MakeEj(%class.sk_sp.32* nonnull sret %5, i32 -16777216) #10
  %10 = call zeroext i1 @_ZNK7skottie8internal16AnimationBuilder21dispatchColorPropertyERK5sk_spIN4sksg5ColorEE(%"class.skottie::internal::AnimationBuilder"* %2, %class.sk_sp.32* nonnull dereferenceable(8) %5) #10
  %11 = getelementptr inbounds %class.sk_sp.29, %class.sk_sp.29* %6, i64 0, i32 0
  %12 = load %"class.sksg::Color"*, %"class.sksg::Color"** %9, align 8
  store %"class.sksg::Color"* null, %"class.sksg::Color"** %9, align 8
  %13 = getelementptr inbounds %"class.sksg::Color", %"class.sksg::Color"* %12, i64 0, i32 0
  store %"class.sksg::PaintNode"* %13, %"class.sksg::PaintNode"** %11, align 8
  %14 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %7, i64 0, i32 0
  store %"class.skottie::internal::AnimatablePropertyContainer"* null, %"class.skottie::internal::AnimatablePropertyContainer"** %14, align 8
  %15 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #10, !noalias !9
  store i32 1, i32* %4, align 4, !noalias !9
  call fastcc void @_ZNK7skottie8internal16AnimationBuilder24attachDiscardableAdapterINS0_12_GLOBAL__N_117FillStrokeAdapterEJRKN6skjson11ObjectValueERKS1_5sk_spIN4sksg9PaintNodeEESB_INS0_27AnimatablePropertyContainerEENS4_4TypeEEEENSt3__15decayIDTclptclsrT_4Makespclsr3stdE7forwardIT0_Efp_EE4nodeEEE4typeEDpOSL_(%class.sk_sp.29* sret %0, %"class.skottie::internal::AnimationBuilder"* %2, %"class.skjson::ObjectValue"* dereferenceable(8) %1, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %2, %class.sk_sp.29* nonnull dereferenceable(8) %6, %class.sk_sp.31* nonnull dereferenceable(8) %7, i32* nonnull dereferenceable(4) %4) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #10, !noalias !9
  %16 = load %"class.skottie::internal::AnimatablePropertyContainer"*, %"class.skottie::internal::AnimatablePropertyContainer"** %14, align 8
  %17 = icmp eq %"class.skottie::internal::AnimatablePropertyContainer"* %16, null
  br i1 %17, label %28, label %18

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.skottie::internal::AnimatablePropertyContainer", %"class.skottie::internal::AnimatablePropertyContainer"* %16, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw add i32* %19, i32 -1 acq_rel
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %28

22:                                               ; preds = %18
  %23 = bitcast %"class.skottie::internal::AnimatablePropertyContainer"* %16 to %class.SkRefCntBase*
  %24 = bitcast %"class.skottie::internal::AnimatablePropertyContainer"* %16 to void (%class.SkRefCntBase*)***
  %25 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %24, align 8
  %26 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %25, i64 2
  %27 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %26, align 8
  call void %27(%class.SkRefCntBase* nonnull %23) #10
  br label %28

28:                                               ; preds = %3, %18, %22
  %29 = load %"class.sksg::PaintNode"*, %"class.sksg::PaintNode"** %11, align 8
  %30 = icmp eq %"class.sksg::PaintNode"* %29, null
  br i1 %30, label %41, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"class.sksg::PaintNode", %"class.sksg::PaintNode"* %29, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = atomicrmw add i32* %32, i32 -1 acq_rel
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %35, label %41

35:                                               ; preds = %31
  %36 = bitcast %"class.sksg::PaintNode"* %29 to %class.SkRefCntBase*
  %37 = bitcast %"class.sksg::PaintNode"* %29 to void (%class.SkRefCntBase*)***
  %38 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %37, align 8
  %39 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %38, i64 2
  %40 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, align 8
  call void %40(%class.SkRefCntBase* nonnull %36) #10
  br label %41

41:                                               ; preds = %28, %31, %35
  %42 = load %"class.sksg::Color"*, %"class.sksg::Color"** %9, align 8
  %43 = icmp eq %"class.sksg::Color"* %42, null
  br i1 %43, label %54, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.sksg::Color", %"class.sksg::Color"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = atomicrmw add i32* %45, i32 -1 acq_rel
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %54

48:                                               ; preds = %44
  %49 = bitcast %"class.sksg::Color"* %42 to %class.SkRefCntBase*
  %50 = bitcast %"class.sksg::Color"* %42 to void (%class.SkRefCntBase*)***
  %51 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %50, align 8
  %52 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %51, i64 2
  %53 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %52, align 8
  call void %53(%class.SkRefCntBase* nonnull %49) #10
  br label %54

54:                                               ; preds = %41, %44, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7skottie8internal12ShapeBuilder20AdjustStrokeGeometryERKN6skjson11ObjectValueEPKNS0_16AnimationBuilderEONSt3__16vectorI5sk_spIN4sksg12GeometryNodeEENS9_9allocatorISE_EEEE(%"class.std::__1::vector.33"* noalias nocapture sret, %"class.skjson::ObjectValue"* dereferenceable(8), %"class.skottie::internal::AnimationBuilder"*, %"class.std::__1::vector.33"* nocapture dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.sk_sp.35, align 8
  %6 = alloca float, align 4
  %7 = alloca %class.sk_sp.6, align 8
  %8 = tail call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0)) #10
  %9 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %8, i64 0, i32 0, i64 0
  %10 = load i8, i8* %9, align 8
  %11 = and i8 %10, 7
  %12 = icmp ne i8 %11, 6
  %13 = icmp eq %"class.skjson::Value"* %8, null
  %14 = or i1 %13, %12
  br i1 %14, label %217, label %15

15:                                               ; preds = %4
  %16 = bitcast %"class.skjson::Value"* %8 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = and i64 %17, -8
  %19 = inttoptr i64 %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = icmp ugt i64 %20, 1
  br i1 %21, label %22, label %217

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %3, i64 0, i32 0, i32 1
  %24 = bitcast %class.sk_sp.35** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.std::__1::vector.33"* %3 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %217, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %3, i64 0, i32 0, i32 0
  %31 = bitcast %class.sk_sp.35* %5 to i8*
  %32 = bitcast %class.sk_sp.35* %5 to i64*
  %33 = getelementptr inbounds %class.sk_sp.35, %class.sk_sp.35* %5, i64 0, i32 0
  %34 = bitcast float* %6 to i8*
  %35 = getelementptr inbounds %"class.skottie::internal::AnimationBuilder", %"class.skottie::internal::AnimationBuilder"* %2, i64 0, i32 11
  %36 = bitcast %class.sk_sp.6* %7 to i8*
  %37 = bitcast %class.sk_sp.6* %7 to i64*
  %38 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %7, i64 0, i32 0
  br label %39

39:                                               ; preds = %29, %210
  %40 = phi i64 [ %27, %29 ], [ %213, %210 ]
  %41 = phi i64 [ 0, %29 ], [ %211, %210 ]
  %42 = inttoptr i64 %40 to %class.sk_sp.35*
  %43 = getelementptr inbounds %class.sk_sp.35, %class.sk_sp.35* %42, i64 %41
  %44 = call i8* @_Znwm(i64 88) #11, !noalias !12
  %45 = getelementptr inbounds %class.sk_sp.35, %class.sk_sp.35* %43, i64 0, i32 0
  %46 = bitcast %class.sk_sp.35* %43 to i64*
  %47 = load i64, i64* %46, align 8, !noalias !12
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %45, align 8, !noalias !12
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %68, label %49

49:                                               ; preds = %39
  %50 = call i8* @_Znwm(i64 104) #11, !noalias !17
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #10, !noalias !20
  %51 = bitcast i8* %50 to %"class.sksg::GeometryEffect"*
  store i64 %47, i64* %32, align 8, !noalias !20
  call void @_ZN4sksg14GeometryEffectC2E5sk_spINS_12GeometryNodeEE(%"class.sksg::GeometryEffect"* nonnull %51, %class.sk_sp.35* nonnull %5) #10, !noalias !17
  %52 = load %"class.sksg::GeometryNode"*, %"class.sksg::GeometryNode"** %33, align 8, !noalias !20
  %53 = icmp eq %"class.sksg::GeometryNode"* %52, null
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.sksg::GeometryNode", %"class.sksg::GeometryNode"* %52, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = atomicrmw add i32* %55, i32 -1 acq_rel, !noalias !17
  %57 = icmp eq i32 %56, 1
  br i1 %57, label %58, label %64

58:                                               ; preds = %54
  %59 = bitcast %"class.sksg::GeometryNode"* %52 to %class.SkRefCntBase*
  %60 = bitcast %"class.sksg::GeometryNode"* %52 to void (%class.SkRefCntBase*)***
  %61 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %60, align 8, !noalias !17
  %62 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %61, i64 2
  %63 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %62, align 8, !noalias !17
  call void %63(%class.SkRefCntBase* nonnull %59) #10, !noalias !17
  br label %64

64:                                               ; preds = %58, %54, %49
  %65 = bitcast i8* %50 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN4sksg10DashEffectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %65, align 8, !noalias !20
  %66 = getelementptr inbounds i8, i8* %50, i64 72
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 28, i1 false) #10, !noalias !20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #10, !noalias !20
  %67 = ptrtoint i8* %50 to i64
  br label %68

68:                                               ; preds = %64, %39
  %69 = phi i64 [ %67, %64 ], [ 0, %39 ]
  %70 = getelementptr inbounds i8, i8* %44, i64 8
  %71 = bitcast i8* %70 to i32*
  store i32 1, i32* %71, align 4, !noalias !12
  %72 = bitcast i8* %44 to i32 (...)***
  %73 = getelementptr inbounds i8, i8* %44, i64 16
  call void @llvm.memset.p0i8.i64(i8* align 8 %73, i8 0, i64 25, i1 false) #10, !noalias !12
  %74 = getelementptr inbounds i8, i8* %44, i64 48
  %75 = bitcast i8* %74 to i64*
  store i64 %69, i64* %75, align 8, !noalias !12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal12_GLOBAL__N_111DashAdapterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %72, align 8, !noalias !12
  %76 = getelementptr inbounds i8, i8* %44, i64 56
  %77 = getelementptr inbounds i8, i8* %44, i64 80
  %78 = bitcast i8* %77 to float*
  call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 28, i1 false) #10, !noalias !12
  %79 = load i64, i64* %16, align 8, !noalias !12
  %80 = and i64 %79, -8
  %81 = inttoptr i64 %80 to i64*
  %82 = load i64, i64* %81, align 8, !noalias !12
  %83 = add i64 %82, -1
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %34) #10, !noalias !12
  store float 0.000000e+00, float* %6, align 4, !noalias !12
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %85, label %86

85:                                               ; preds = %68
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %34) #10, !noalias !12
  br label %95

86:                                               ; preds = %68
  %87 = bitcast i8* %76 to %"class.std::__1::vector.56"*
  call void @_ZNSt3__16vectorIfNS_9allocatorIfEEE8__appendEmRKf(%"class.std::__1::vector.56"* %87, i64 %83, float* nonnull dereferenceable(4) %6) #10, !noalias !21
  %88 = load i64, i64* %16, align 8, !noalias !12
  %89 = and i64 %88, -8
  %90 = inttoptr i64 %89 to i64*
  %91 = load i64, i64* %90, align 8, !noalias !21
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %34) #10, !noalias !12
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %93, label %95

93:                                               ; preds = %86
  %94 = bitcast i8* %44 to %"class.skottie::internal::AnimatablePropertyContainer"*
  br label %134

95:                                               ; preds = %86, %85
  %96 = phi i64 [ %79, %85 ], [ %88, %86 ]
  %97 = phi i64* [ %81, %85 ], [ %90, %86 ]
  %98 = bitcast i8* %76 to float**
  %99 = bitcast i8* %44 to %"class.skottie::internal::AnimatablePropertyContainer"*
  br label %100

100:                                              ; preds = %127, %95
  %101 = phi i64 [ %96, %95 ], [ %128, %127 ]
  %102 = phi i64* [ %97, %95 ], [ %131, %127 ]
  %103 = phi i64 [ 0, %95 ], [ %129, %127 ]
  %104 = getelementptr inbounds i64, i64* %102, i64 1
  %105 = getelementptr inbounds i64, i64* %104, i64 %103
  %106 = bitcast i64* %105 to i8*
  %107 = load i8, i8* %106, align 8, !noalias !21
  %108 = and i8 %107, 7
  %109 = icmp eq i8 %108, 7
  %110 = bitcast i64* %105 to %"class.skjson::ObjectValue"*
  br i1 %109, label %111, label %127

111:                                              ; preds = %100
  %112 = icmp ult i64 %103, %83
  br i1 %112, label %113, label %116

113:                                              ; preds = %111
  %114 = load float*, float** %98, align 8, !noalias !12
  %115 = getelementptr inbounds float, float* %114, i64 %103
  br label %116

116:                                              ; preds = %113, %111
  %117 = phi float* [ %115, %113 ], [ %78, %111 ]
  %118 = call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* nonnull %110, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #10, !noalias !21
  %119 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %118, i64 0, i32 0, i64 0
  %120 = load i8, i8* %119, align 8, !noalias !21
  %121 = and i8 %120, 7
  %122 = icmp eq i8 %121, 7
  %123 = bitcast %"class.skjson::Value"* %118 to %"class.skjson::ObjectValue"*
  %124 = select i1 %122, %"class.skjson::ObjectValue"* %123, %"class.skjson::ObjectValue"* null
  %125 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %99, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %2, %"class.skjson::ObjectValue"* %124, float* %117) #10, !noalias !21
  %126 = load i64, i64* %16, align 8, !noalias !12
  br label %127

127:                                              ; preds = %116, %100
  %128 = phi i64 [ %101, %100 ], [ %126, %116 ]
  %129 = add nuw i64 %103, 1
  %130 = and i64 %128, -8
  %131 = inttoptr i64 %130 to i64*
  %132 = load i64, i64* %131, align 8, !noalias !21
  %133 = icmp ult i64 %129, %132
  br i1 %133, label %100, label %134

134:                                              ; preds = %127, %93
  %135 = phi %"class.skottie::internal::AnimatablePropertyContainer"* [ %94, %93 ], [ %99, %127 ]
  %136 = ptrtoint i8* %44 to i64
  call void @_ZN7skottie8internal27AnimatablePropertyContainer13shrink_to_fitEv(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %135) #10, !noalias !12
  %137 = bitcast i8* %74 to %"class.sksg::DashEffect"**
  %138 = load %"class.sksg::DashEffect"*, %"class.sksg::DashEffect"** %137, align 8, !noalias !22
  %139 = icmp eq %"class.sksg::DashEffect"* %138, null
  br i1 %139, label %143, label %140

140:                                              ; preds = %134
  %141 = getelementptr inbounds %"class.sksg::DashEffect", %"class.sksg::DashEffect"* %138, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = atomicrmw add i32* %141, i32 1 monotonic
  br label %143

143:                                              ; preds = %134, %140
  %144 = ptrtoint %"class.sksg::DashEffect"* %138 to i64
  %145 = bitcast i8* %73 to %class.sk_sp.6**
  %146 = load %class.sk_sp.6*, %class.sk_sp.6** %145, align 8, !noalias !22
  %147 = getelementptr inbounds i8, i8* %44, i64 24
  %148 = bitcast i8* %147 to %class.sk_sp.6**
  %149 = load %class.sk_sp.6*, %class.sk_sp.6** %148, align 8, !noalias !22
  %150 = icmp eq %class.sk_sp.6* %146, %149
  br i1 %150, label %178, label %151

151:                                              ; preds = %143
  %152 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %35, align 8, !noalias !22
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #10, !noalias !22
  store i64 %136, i64* %37, align 8, !noalias !22
  %153 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %152, i64 0, i32 0, i32 1
  %154 = load %class.sk_sp.6*, %class.sk_sp.6** %153, align 8
  %155 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %152, i64 0, i32 0, i32 2, i32 0, i32 0
  %156 = load %class.sk_sp.6*, %class.sk_sp.6** %155, align 8
  %157 = icmp ult %class.sk_sp.6* %154, %156
  br i1 %157, label %158, label %163

158:                                              ; preds = %151
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %38, align 8, !noalias !22
  %159 = bitcast %class.sk_sp.6* %154 to i64*
  store i64 %136, i64* %159, align 8
  %160 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %154, i64 1
  %161 = ptrtoint %class.sk_sp.6* %160 to i64
  %162 = bitcast %class.sk_sp.6** %153 to i64*
  store i64 %161, i64* %162, align 8
  br label %164

163:                                              ; preds = %151
  call void @_ZNSt3__16vectorI5sk_spIN7skottie8internal8AnimatorEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector"* %152, %class.sk_sp.6* nonnull dereferenceable(8) %7) #10
  br label %164

164:                                              ; preds = %163, %158
  %165 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %38, align 8, !noalias !22
  %166 = icmp eq %"class.skottie::internal::Animator"* %165, null
  br i1 %166, label %177, label %167

167:                                              ; preds = %164
  %168 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %165, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = atomicrmw add i32* %168, i32 -1 acq_rel
  %170 = icmp eq i32 %169, 1
  br i1 %170, label %171, label %177

171:                                              ; preds = %167
  %172 = bitcast %"class.skottie::internal::Animator"* %165 to %class.SkRefCntBase*
  %173 = bitcast %"class.skottie::internal::Animator"* %165 to void (%class.SkRefCntBase*)***
  %174 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %173, align 8
  %175 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %174, i64 2
  %176 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %175, align 8
  call void %176(%class.SkRefCntBase* nonnull %172) #10
  br label %177

177:                                              ; preds = %171, %167, %164
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #10, !noalias !22
  br label %193

178:                                              ; preds = %143
  %179 = bitcast i8* %44 to %"class.skottie::internal::Animator"*
  %180 = bitcast i8* %44 to i1 (%"class.skottie::internal::Animator"*, float)***
  %181 = load i1 (%"class.skottie::internal::Animator"*, float)**, i1 (%"class.skottie::internal::Animator"*, float)*** %180, align 8, !noalias !22
  %182 = getelementptr inbounds i1 (%"class.skottie::internal::Animator"*, float)*, i1 (%"class.skottie::internal::Animator"*, float)** %181, i64 3
  %183 = load i1 (%"class.skottie::internal::Animator"*, float)*, i1 (%"class.skottie::internal::Animator"*, float)** %182, align 8
  %184 = call zeroext i1 %183(%"class.skottie::internal::Animator"* nonnull %179, float 0.000000e+00) #10
  %185 = atomicrmw add i32* %71, i32 -1 acq_rel, !noalias !22
  %186 = icmp eq i32 %185, 1
  br i1 %186, label %187, label %193

187:                                              ; preds = %178
  %188 = bitcast i8* %44 to %class.SkRefCntBase*
  %189 = bitcast i8* %44 to void (%class.SkRefCntBase*)***
  %190 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %189, align 8, !noalias !22
  %191 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %190, i64 2
  %192 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %191, align 8
  call void %192(%class.SkRefCntBase* nonnull %188) #10
  br label %193

193:                                              ; preds = %177, %178, %187
  %194 = load %class.sk_sp.35*, %class.sk_sp.35** %30, align 8
  %195 = getelementptr inbounds %class.sk_sp.35, %class.sk_sp.35* %194, i64 %41
  %196 = getelementptr inbounds %class.sk_sp.35, %class.sk_sp.35* %195, i64 0, i32 0
  %197 = load %"class.sksg::GeometryNode"*, %"class.sksg::GeometryNode"** %196, align 8
  %198 = bitcast %class.sk_sp.35* %195 to i64*
  store i64 %144, i64* %198, align 8
  %199 = icmp eq %"class.sksg::GeometryNode"* %197, null
  br i1 %199, label %210, label %200

200:                                              ; preds = %193
  %201 = getelementptr inbounds %"class.sksg::GeometryNode", %"class.sksg::GeometryNode"* %197, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %202 = atomicrmw add i32* %201, i32 -1 acq_rel
  %203 = icmp eq i32 %202, 1
  br i1 %203, label %204, label %210

204:                                              ; preds = %200
  %205 = bitcast %"class.sksg::GeometryNode"* %197 to %class.SkRefCntBase*
  %206 = bitcast %"class.sksg::GeometryNode"* %197 to void (%class.SkRefCntBase*)***
  %207 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %206, align 8
  %208 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %207, i64 2
  %209 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %208, align 8
  call void %209(%class.SkRefCntBase* nonnull %205) #10
  br label %210

210:                                              ; preds = %204, %200, %193
  %211 = add nuw i64 %41, 1
  %212 = load i64, i64* %24, align 8
  %213 = load i64, i64* %26, align 8
  %214 = sub i64 %212, %213
  %215 = ashr exact i64 %214, 3
  %216 = icmp ult i64 %211, %215
  br i1 %216, label %39, label %217

217:                                              ; preds = %210, %22, %4, %15
  %218 = bitcast %"class.std::__1::vector.33"* %3 to <2 x i64>*
  %219 = load <2 x i64>, <2 x i64>* %218, align 8
  %220 = bitcast %"class.std::__1::vector.33"* %0 to <2 x i64>*
  store <2 x i64> %219, <2 x i64>* %220, align 8
  %221 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %222 = bitcast %class.sk_sp.35** %221 to i64*
  %223 = load i64, i64* %222, align 8
  %224 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %225 = bitcast %class.sk_sp.35** %224 to i64*
  store i64 %223, i64* %225, align 8
  %226 = bitcast %"class.std::__1::vector.33"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %226, i8 0, i64 24, i1 false) #10
  ret void
}

declare dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"*, i8*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

declare void @_ZN7skottie8internal27AnimatablePropertyContainer13shrink_to_fitEv(%"class.skottie::internal::AnimatablePropertyContainer"*) local_unnamed_addr #2

declare void @_ZN7skottie8internal27AnimatablePropertyContainer24attachDiscardableAdapterE5sk_spIS1_E(%"class.skottie::internal::AnimatablePropertyContainer"*, %class.sk_sp.31*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN7skottie8internal12_GLOBAL__N_117FillStrokeAdapterD2Ev(%"class.skottie::internal::(anonymous namespace)::FillStrokeAdapter"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::FillStrokeAdapter", %"class.skottie::internal::(anonymous namespace)::FillStrokeAdapter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal12_GLOBAL__N_117FillStrokeAdapterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::FillStrokeAdapter", %"class.skottie::internal::(anonymous namespace)::FillStrokeAdapter"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load float*, float** %3, align 8
  %5 = icmp eq float* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint float* %4 to i64
  %8 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::FillStrokeAdapter", %"class.skottie::internal::(anonymous namespace)::FillStrokeAdapter"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %9 = bitcast float** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast float* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_117FillStrokeAdapterEN4sksg9PaintNodeEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %12 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::FillStrokeAdapter", %"class.skottie::internal::(anonymous namespace)::FillStrokeAdapter"* %0, i64 0, i32 0, i32 1, i32 0
  %13 = load %"class.sksg::PaintNode"*, %"class.sksg::PaintNode"** %12, align 8
  %14 = icmp eq %"class.sksg::PaintNode"* %13, null
  br i1 %14, label %25, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.sksg::PaintNode", %"class.sksg::PaintNode"* %13, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 -1 acq_rel
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %25

19:                                               ; preds = %15
  %20 = bitcast %"class.sksg::PaintNode"* %13 to %class.SkRefCntBase*
  %21 = bitcast %"class.sksg::PaintNode"* %13 to void (%class.SkRefCntBase*)***
  %22 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %22, i64 2
  %24 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %23, align 8
  tail call void %24(%class.SkRefCntBase* nonnull %20) #10
  br label %25

25:                                               ; preds = %19, %15, %11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal27AnimatablePropertyContainerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %26 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::FillStrokeAdapter", %"class.skottie::internal::(anonymous namespace)::FillStrokeAdapter"* %0, i64 0, i32 0, i32 0, i32 2
  %27 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %26, i64 0, i32 0, i32 0
  %28 = load %class.sk_sp.6*, %class.sk_sp.6** %27, align 8
  %29 = icmp eq %class.sk_sp.6* %28, null
  br i1 %29, label %58, label %30

30:                                               ; preds = %25
  %31 = bitcast %class.sk_sp.6* %28 to i8*
  %32 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::FillStrokeAdapter", %"class.skottie::internal::(anonymous namespace)::FillStrokeAdapter"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %33 = load %class.sk_sp.6*, %class.sk_sp.6** %32, align 8
  %34 = icmp eq %class.sk_sp.6* %33, %28
  br i1 %34, label %56, label %35

35:                                               ; preds = %30, %51
  %36 = phi %class.sk_sp.6* [ %37, %51 ], [ %33, %30 ]
  %37 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %36, i64 -1
  %38 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %37, i64 0, i32 0
  %39 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %38, align 8
  %40 = icmp eq %"class.skottie::internal::Animator"* %39, null
  br i1 %40, label %51, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %39, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = atomicrmw add i32* %42, i32 -1 acq_rel
  %44 = icmp eq i32 %43, 1
  br i1 %44, label %45, label %51

45:                                               ; preds = %41
  %46 = bitcast %"class.skottie::internal::Animator"* %39 to %class.SkRefCntBase*
  %47 = bitcast %"class.skottie::internal::Animator"* %39 to void (%class.SkRefCntBase*)***
  %48 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %47, align 8
  %49 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %48, i64 2
  %50 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %49, align 8
  tail call void %50(%class.SkRefCntBase* nonnull %46) #10
  br label %51

51:                                               ; preds = %45, %41, %35
  %52 = icmp eq %class.sk_sp.6* %37, %28
  br i1 %52, label %53, label %35

53:                                               ; preds = %51
  %54 = bitcast %"class.std::__1::vector"* %26 to i8**
  %55 = load i8*, i8** %54, align 8
  br label %56

56:                                               ; preds = %53, %30
  %57 = phi i8* [ %55, %53 ], [ %31, %30 ]
  store %class.sk_sp.6* %28, %class.sk_sp.6** %32, align 8
  tail call void @_ZdlPv(i8* %57) #11
  br label %58

58:                                               ; preds = %25, %56
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN7skottie8internal12_GLOBAL__N_117FillStrokeAdapterD0Ev(%"class.skottie::internal::(anonymous namespace)::FillStrokeAdapter"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::FillStrokeAdapter", %"class.skottie::internal::(anonymous namespace)::FillStrokeAdapter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal12_GLOBAL__N_117FillStrokeAdapterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::FillStrokeAdapter", %"class.skottie::internal::(anonymous namespace)::FillStrokeAdapter"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load float*, float** %3, align 8
  %5 = icmp eq float* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint float* %4 to i64
  %8 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::FillStrokeAdapter", %"class.skottie::internal::(anonymous namespace)::FillStrokeAdapter"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %9 = bitcast float** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast float* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  br label %11

11:                                               ; preds = %6, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_117FillStrokeAdapterEN4sksg9PaintNodeEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %12 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::FillStrokeAdapter", %"class.skottie::internal::(anonymous namespace)::FillStrokeAdapter"* %0, i64 0, i32 0, i32 1, i32 0
  %13 = load %"class.sksg::PaintNode"*, %"class.sksg::PaintNode"** %12, align 8
  %14 = icmp eq %"class.sksg::PaintNode"* %13, null
  br i1 %14, label %25, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.sksg::PaintNode", %"class.sksg::PaintNode"* %13, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 -1 acq_rel
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %25

19:                                               ; preds = %15
  %20 = bitcast %"class.sksg::PaintNode"* %13 to %class.SkRefCntBase*
  %21 = bitcast %"class.sksg::PaintNode"* %13 to void (%class.SkRefCntBase*)***
  %22 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %22, i64 2
  %24 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %23, align 8
  tail call void %24(%class.SkRefCntBase* nonnull %20) #10
  br label %25

25:                                               ; preds = %19, %15, %11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal27AnimatablePropertyContainerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %26 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::FillStrokeAdapter", %"class.skottie::internal::(anonymous namespace)::FillStrokeAdapter"* %0, i64 0, i32 0, i32 0, i32 2
  %27 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %26, i64 0, i32 0, i32 0
  %28 = load %class.sk_sp.6*, %class.sk_sp.6** %27, align 8
  %29 = icmp eq %class.sk_sp.6* %28, null
  br i1 %29, label %58, label %30

30:                                               ; preds = %25
  %31 = bitcast %class.sk_sp.6* %28 to i8*
  %32 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::FillStrokeAdapter", %"class.skottie::internal::(anonymous namespace)::FillStrokeAdapter"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %33 = load %class.sk_sp.6*, %class.sk_sp.6** %32, align 8
  %34 = icmp eq %class.sk_sp.6* %33, %28
  br i1 %34, label %56, label %35

35:                                               ; preds = %30, %51
  %36 = phi %class.sk_sp.6* [ %37, %51 ], [ %33, %30 ]
  %37 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %36, i64 -1
  %38 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %37, i64 0, i32 0
  %39 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %38, align 8
  %40 = icmp eq %"class.skottie::internal::Animator"* %39, null
  br i1 %40, label %51, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %39, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = atomicrmw add i32* %42, i32 -1 acq_rel
  %44 = icmp eq i32 %43, 1
  br i1 %44, label %45, label %51

45:                                               ; preds = %41
  %46 = bitcast %"class.skottie::internal::Animator"* %39 to %class.SkRefCntBase*
  %47 = bitcast %"class.skottie::internal::Animator"* %39 to void (%class.SkRefCntBase*)***
  %48 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %47, align 8
  %49 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %48, i64 2
  %50 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %49, align 8
  tail call void %50(%class.SkRefCntBase* nonnull %46) #10
  br label %51

51:                                               ; preds = %45, %41, %35
  %52 = icmp eq %class.sk_sp.6* %37, %28
  br i1 %52, label %53, label %35

53:                                               ; preds = %51
  %54 = bitcast %"class.std::__1::vector"* %26 to i8**
  %55 = load i8*, i8** %54, align 8
  br label %56

56:                                               ; preds = %53, %30
  %57 = phi i8* [ %55, %53 ], [ %31, %30 ]
  store %class.sk_sp.6* %28, %class.sk_sp.6** %32, align 8
  tail call void @_ZdlPv(i8* %57) #11
  br label %58

58:                                               ; preds = %25, %56
  %59 = bitcast %"class.skottie::internal::(anonymous namespace)::FillStrokeAdapter"* %0 to i8*
  tail call void @_ZdlPv(i8* %59) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #10
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

declare zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer6onSeekEf(%"class.skottie::internal::AnimatablePropertyContainer"*, float) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7skottie8internal12_GLOBAL__N_117FillStrokeAdapter6onSyncEv(%"class.skottie::internal::(anonymous namespace)::FillStrokeAdapter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::FillStrokeAdapter", %"class.skottie::internal::(anonymous namespace)::FillStrokeAdapter"* %0, i64 0, i32 0, i32 1, i32 0
  %3 = load %"class.sksg::PaintNode"*, %"class.sksg::PaintNode"** %2, align 8
  %4 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::FillStrokeAdapter", %"class.skottie::internal::(anonymous namespace)::FillStrokeAdapter"* %0, i64 0, i32 3
  %5 = load float, float* %4, align 8
  %6 = fmul float %5, 0x3F847AE140000000
  %7 = getelementptr inbounds %"class.sksg::PaintNode", %"class.sksg::PaintNode"* %3, i64 0, i32 1
  %8 = load float, float* %7, align 4
  %9 = fcmp oeq float %8, %6
  br i1 %9, label %13, label %10

10:                                               ; preds = %1
  store float %6, float* %7, align 4
  %11 = bitcast %"class.sksg::PaintNode"* %3 to %"class.sksg::Node"*
  tail call void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"* %11, i1 zeroext true) #10
  %12 = load %"class.sksg::PaintNode"*, %"class.sksg::PaintNode"** %2, align 8
  br label %13

13:                                               ; preds = %1, %10
  %14 = phi %"class.sksg::PaintNode"* [ %3, %1 ], [ %12, %10 ]
  %15 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::FillStrokeAdapter", %"class.skottie::internal::(anonymous namespace)::FillStrokeAdapter"* %0, i64 0, i32 4
  %16 = getelementptr inbounds %"class.sksg::PaintNode", %"class.sksg::PaintNode"* %14, i64 0, i32 2
  %17 = load float, float* %16, align 8
  %18 = load float, float* %15, align 4
  %19 = fcmp oeq float %17, %18
  br i1 %19, label %22, label %20

20:                                               ; preds = %13
  store float %18, float* %16, align 8
  %21 = bitcast %"class.sksg::PaintNode"* %14 to %"class.sksg::Node"*
  tail call void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"* %21, i1 zeroext true) #10
  br label %22

22:                                               ; preds = %13, %20
  %23 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::FillStrokeAdapter", %"class.skottie::internal::(anonymous namespace)::FillStrokeAdapter"* %0, i64 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %36

26:                                               ; preds = %22
  %27 = bitcast %"class.sksg::PaintNode"** %2 to %"class.sksg::Color"**
  %28 = load %"class.sksg::Color"*, %"class.sksg::Color"** %27, align 8
  %29 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::FillStrokeAdapter", %"class.skottie::internal::(anonymous namespace)::FillStrokeAdapter"* %0, i64 0, i32 2
  %30 = tail call i32 @_ZNK7skottie11VectorValuecvjEv(%"class.skottie::VectorValue"* %29) #10
  %31 = getelementptr inbounds %"class.sksg::Color", %"class.sksg::Color"* %28, i64 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = icmp eq i32 %32, %30
  br i1 %33, label %36, label %34

34:                                               ; preds = %26
  store i32 %30, i32* %31, align 8
  %35 = bitcast %"class.sksg::Color"* %28 to %"class.sksg::Node"*
  tail call void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"* %35, i1 zeroext true) #10
  br label %36

36:                                               ; preds = %34, %26, %22
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_117FillStrokeAdapterEN4sksg9PaintNodeEED2Ev(%"class.skottie::internal::DiscardableAdapterBase"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.skottie::internal::DiscardableAdapterBase", %"class.skottie::internal::DiscardableAdapterBase"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_117FillStrokeAdapterEN4sksg9PaintNodeEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.skottie::internal::DiscardableAdapterBase", %"class.skottie::internal::DiscardableAdapterBase"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.sksg::PaintNode"*, %"class.sksg::PaintNode"** %3, align 8
  %5 = icmp eq %"class.sksg::PaintNode"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.sksg::PaintNode", %"class.sksg::PaintNode"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.sksg::PaintNode"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.sksg::PaintNode"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #10
  br label %16

16:                                               ; preds = %1, %6, %10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal27AnimatablePropertyContainerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %17 = getelementptr inbounds %"class.skottie::internal::DiscardableAdapterBase", %"class.skottie::internal::DiscardableAdapterBase"* %0, i64 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %17, i64 0, i32 0, i32 0
  %19 = load %class.sk_sp.6*, %class.sk_sp.6** %18, align 8
  %20 = icmp eq %class.sk_sp.6* %19, null
  br i1 %20, label %49, label %21

21:                                               ; preds = %16
  %22 = bitcast %class.sk_sp.6* %19 to i8*
  %23 = getelementptr inbounds %"class.skottie::internal::DiscardableAdapterBase", %"class.skottie::internal::DiscardableAdapterBase"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %24 = load %class.sk_sp.6*, %class.sk_sp.6** %23, align 8
  %25 = icmp eq %class.sk_sp.6* %24, %19
  br i1 %25, label %47, label %26

26:                                               ; preds = %21, %42
  %27 = phi %class.sk_sp.6* [ %28, %42 ], [ %24, %21 ]
  %28 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %27, i64 -1
  %29 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %28, i64 0, i32 0
  %30 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %29, align 8
  %31 = icmp eq %"class.skottie::internal::Animator"* %30, null
  br i1 %31, label %42, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %30, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 -1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %42

36:                                               ; preds = %32
  %37 = bitcast %"class.skottie::internal::Animator"* %30 to %class.SkRefCntBase*
  %38 = bitcast %"class.skottie::internal::Animator"* %30 to void (%class.SkRefCntBase*)***
  %39 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %38, align 8
  %40 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, i64 2
  %41 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %40, align 8
  tail call void %41(%class.SkRefCntBase* nonnull %37) #10
  br label %42

42:                                               ; preds = %36, %32, %26
  %43 = icmp eq %class.sk_sp.6* %28, %19
  br i1 %43, label %44, label %26

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::vector"* %17 to i8**
  %46 = load i8*, i8** %45, align 8
  br label %47

47:                                               ; preds = %44, %21
  %48 = phi i8* [ %46, %44 ], [ %22, %21 ]
  store %class.sk_sp.6* %19, %class.sk_sp.6** %23, align 8
  tail call void @_ZdlPv(i8* %48) #11
  br label %49

49:                                               ; preds = %16, %47
  ret void
}

; Function Attrs: inlinehint noreturn nounwind ssp uwtable
define internal void @_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_117FillStrokeAdapterEN4sksg9PaintNodeEED0Ev(%"class.skottie::internal::DiscardableAdapterBase"* nocapture readnone) unnamed_addr #5 align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"*, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152), %"class.skjson::ObjectValue"*, float*) local_unnamed_addr #2

declare void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"*, i1 zeroext) local_unnamed_addr #2

declare zeroext i1 @_ZN7skottie5ParseIfEEbRKN6skjson5ValueEPT_(%"class.skjson::Value"* dereferenceable(8), float*) local_unnamed_addr #2

declare zeroext i1 @_ZN7skottie5ParseImEEbRKN6skjson5ValueEPT_(%"class.skjson::Value"* dereferenceable(8), i64*) local_unnamed_addr #2

declare zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindINS_11VectorValueEEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"*, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152), %"class.skjson::ObjectValue"*, %"class.skottie::VectorValue"*) local_unnamed_addr #2

declare i32 @_ZNK7skottie11VectorValuecvjEv(%"class.skottie::VectorValue"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI5sk_spIN7skottie8internal8AnimatorEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector"*, %class.sk_sp.6* dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %class.sk_sp.6** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %class.sk_sp.6** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #12
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #11
  %33 = bitcast i8* %32 to %class.sk_sp.6*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %class.sk_sp.6* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %36, i64 %9
  %38 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %36, i64 %35
  %39 = ptrtoint %class.sk_sp.6* %38 to i64
  %40 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %1, i64 0, i32 0
  %41 = bitcast %class.sk_sp.6* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %40, align 8
  %43 = bitcast %class.sk_sp.6* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %37, i64 1
  %45 = ptrtoint %class.sk_sp.6* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %47 = load %class.sk_sp.6*, %class.sk_sp.6** %46, align 8
  %48 = ptrtoint %class.sk_sp.6* %47 to i64
  %49 = load %class.sk_sp.6*, %class.sk_sp.6** %3, align 8
  %50 = icmp eq %class.sk_sp.6* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %class.sk_sp.6, %class.sk_sp.6* %49, i64 -1, i32 0
  %53 = ptrtoint %"class.skottie::internal::Animator"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %class.sk_sp.6* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %class.sk_sp.6* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %60, i64 -1
  %64 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %61, i64 -1
  %65 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %64, i64 0, i32 0
  %66 = bitcast %class.sk_sp.6* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %65, align 8
  %68 = bitcast %class.sk_sp.6* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !23

71:                                               ; preds = %59, %51
  %72 = phi %class.sk_sp.6* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %class.sk_sp.6* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %class.sk_sp.6* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %class.sk_sp.6* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %class.sk_sp.6* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -1
  %80 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -1
  %81 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %80, i64 0, i32 0
  %82 = bitcast %class.sk_sp.6* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %81, align 8
  %84 = bitcast %class.sk_sp.6* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -2
  %86 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -2
  %87 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %86, i64 0, i32 0
  %88 = bitcast %class.sk_sp.6* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %87, align 8
  %90 = bitcast %class.sk_sp.6* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -3
  %92 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -3
  %93 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %92, i64 0, i32 0
  %94 = bitcast %class.sk_sp.6* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %93, align 8
  %96 = bitcast %class.sk_sp.6* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -4
  %98 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -4
  %99 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %98, i64 0, i32 0
  %100 = bitcast %class.sk_sp.6* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %99, align 8
  %102 = bitcast %class.sk_sp.6* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -5
  %104 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -5
  %105 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %104, i64 0, i32 0
  %106 = bitcast %class.sk_sp.6* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %105, align 8
  %108 = bitcast %class.sk_sp.6* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -6
  %110 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -6
  %111 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %110, i64 0, i32 0
  %112 = bitcast %class.sk_sp.6* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %111, align 8
  %114 = bitcast %class.sk_sp.6* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -7
  %116 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -7
  %117 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %116, i64 0, i32 0
  %118 = bitcast %class.sk_sp.6* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %117, align 8
  %120 = bitcast %class.sk_sp.6* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -8
  %122 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -8
  %123 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %122, i64 0, i32 0
  %124 = bitcast %class.sk_sp.6* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %123, align 8
  %126 = bitcast %class.sk_sp.6* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %class.sk_sp.6* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %class.sk_sp.6* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %class.sk_sp.6*, %class.sk_sp.6** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %class.sk_sp.6* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %class.sk_sp.6* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %class.sk_sp.6* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %class.sk_sp.6*
  %138 = icmp eq %class.sk_sp.6* %133, %137
  br i1 %138, label %157, label %139

139:                                              ; preds = %132, %155
  %140 = phi %class.sk_sp.6* [ %141, %155 ], [ %133, %132 ]
  %141 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %140, i64 -1
  %142 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %141, i64 0, i32 0
  %143 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %142, align 8
  %144 = icmp eq %"class.skottie::internal::Animator"* %143, null
  br i1 %144, label %155, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %143, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = atomicrmw add i32* %146, i32 -1 acq_rel
  %148 = icmp eq i32 %147, 1
  br i1 %148, label %149, label %155

149:                                              ; preds = %145
  %150 = bitcast %"class.skottie::internal::Animator"* %143 to %class.SkRefCntBase*
  %151 = bitcast %"class.skottie::internal::Animator"* %143 to void (%class.SkRefCntBase*)***
  %152 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %151, align 8
  %153 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %152, i64 2
  %154 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %153, align 8
  tail call void %154(%class.SkRefCntBase* nonnull %150) #10
  br label %155

155:                                              ; preds = %149, %145, %139
  %156 = icmp eq %class.sk_sp.6* %141, %137
  br i1 %156, label %157, label %139

157:                                              ; preds = %155, %132
  %158 = icmp eq i64 %135, 0
  br i1 %158, label %161, label %159

159:                                              ; preds = %157
  %160 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %160) #11
  br label %161

161:                                              ; preds = %157, %159
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN7skottie8internal12_GLOBAL__N_111DashAdapterD2Ev(%"class.skottie::internal::(anonymous namespace)::DashAdapter"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DashAdapter", %"class.skottie::internal::(anonymous namespace)::DashAdapter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal12_GLOBAL__N_111DashAdapterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DashAdapter", %"class.skottie::internal::(anonymous namespace)::DashAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load float*, float** %3, align 8
  %5 = icmp eq float* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint float* %4 to i64
  %8 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DashAdapter", %"class.skottie::internal::(anonymous namespace)::DashAdapter"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast float** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast float* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_111DashAdapterEN4sksg10DashEffectEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %12 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DashAdapter", %"class.skottie::internal::(anonymous namespace)::DashAdapter"* %0, i64 0, i32 0, i32 1, i32 0
  %13 = load %"class.sksg::DashEffect"*, %"class.sksg::DashEffect"** %12, align 8
  %14 = icmp eq %"class.sksg::DashEffect"* %13, null
  br i1 %14, label %25, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.sksg::DashEffect", %"class.sksg::DashEffect"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 -1 acq_rel
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %25

19:                                               ; preds = %15
  %20 = bitcast %"class.sksg::DashEffect"* %13 to %class.SkRefCntBase*
  %21 = bitcast %"class.sksg::DashEffect"* %13 to void (%class.SkRefCntBase*)***
  %22 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %22, i64 2
  %24 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %23, align 8
  tail call void %24(%class.SkRefCntBase* nonnull %20) #10
  br label %25

25:                                               ; preds = %19, %15, %11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal27AnimatablePropertyContainerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %26 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DashAdapter", %"class.skottie::internal::(anonymous namespace)::DashAdapter"* %0, i64 0, i32 0, i32 0, i32 2
  %27 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %26, i64 0, i32 0, i32 0
  %28 = load %class.sk_sp.6*, %class.sk_sp.6** %27, align 8
  %29 = icmp eq %class.sk_sp.6* %28, null
  br i1 %29, label %58, label %30

30:                                               ; preds = %25
  %31 = bitcast %class.sk_sp.6* %28 to i8*
  %32 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DashAdapter", %"class.skottie::internal::(anonymous namespace)::DashAdapter"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %33 = load %class.sk_sp.6*, %class.sk_sp.6** %32, align 8
  %34 = icmp eq %class.sk_sp.6* %33, %28
  br i1 %34, label %56, label %35

35:                                               ; preds = %30, %51
  %36 = phi %class.sk_sp.6* [ %37, %51 ], [ %33, %30 ]
  %37 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %36, i64 -1
  %38 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %37, i64 0, i32 0
  %39 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %38, align 8
  %40 = icmp eq %"class.skottie::internal::Animator"* %39, null
  br i1 %40, label %51, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %39, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = atomicrmw add i32* %42, i32 -1 acq_rel
  %44 = icmp eq i32 %43, 1
  br i1 %44, label %45, label %51

45:                                               ; preds = %41
  %46 = bitcast %"class.skottie::internal::Animator"* %39 to %class.SkRefCntBase*
  %47 = bitcast %"class.skottie::internal::Animator"* %39 to void (%class.SkRefCntBase*)***
  %48 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %47, align 8
  %49 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %48, i64 2
  %50 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %49, align 8
  tail call void %50(%class.SkRefCntBase* nonnull %46) #10
  br label %51

51:                                               ; preds = %45, %41, %35
  %52 = icmp eq %class.sk_sp.6* %37, %28
  br i1 %52, label %53, label %35

53:                                               ; preds = %51
  %54 = bitcast %"class.std::__1::vector"* %26 to i8**
  %55 = load i8*, i8** %54, align 8
  br label %56

56:                                               ; preds = %53, %30
  %57 = phi i8* [ %55, %53 ], [ %31, %30 ]
  store %class.sk_sp.6* %28, %class.sk_sp.6** %32, align 8
  tail call void @_ZdlPv(i8* %57) #11
  br label %58

58:                                               ; preds = %25, %56
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN7skottie8internal12_GLOBAL__N_111DashAdapterD0Ev(%"class.skottie::internal::(anonymous namespace)::DashAdapter"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DashAdapter", %"class.skottie::internal::(anonymous namespace)::DashAdapter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal12_GLOBAL__N_111DashAdapterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DashAdapter", %"class.skottie::internal::(anonymous namespace)::DashAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load float*, float** %3, align 8
  %5 = icmp eq float* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint float* %4 to i64
  %8 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DashAdapter", %"class.skottie::internal::(anonymous namespace)::DashAdapter"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast float** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast float* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  br label %11

11:                                               ; preds = %6, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_111DashAdapterEN4sksg10DashEffectEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %12 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DashAdapter", %"class.skottie::internal::(anonymous namespace)::DashAdapter"* %0, i64 0, i32 0, i32 1, i32 0
  %13 = load %"class.sksg::DashEffect"*, %"class.sksg::DashEffect"** %12, align 8
  %14 = icmp eq %"class.sksg::DashEffect"* %13, null
  br i1 %14, label %25, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.sksg::DashEffect", %"class.sksg::DashEffect"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 -1 acq_rel
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %25

19:                                               ; preds = %15
  %20 = bitcast %"class.sksg::DashEffect"* %13 to %class.SkRefCntBase*
  %21 = bitcast %"class.sksg::DashEffect"* %13 to void (%class.SkRefCntBase*)***
  %22 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %22, i64 2
  %24 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %23, align 8
  tail call void %24(%class.SkRefCntBase* nonnull %20) #10
  br label %25

25:                                               ; preds = %19, %15, %11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal27AnimatablePropertyContainerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %26 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DashAdapter", %"class.skottie::internal::(anonymous namespace)::DashAdapter"* %0, i64 0, i32 0, i32 0, i32 2
  %27 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %26, i64 0, i32 0, i32 0
  %28 = load %class.sk_sp.6*, %class.sk_sp.6** %27, align 8
  %29 = icmp eq %class.sk_sp.6* %28, null
  br i1 %29, label %58, label %30

30:                                               ; preds = %25
  %31 = bitcast %class.sk_sp.6* %28 to i8*
  %32 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DashAdapter", %"class.skottie::internal::(anonymous namespace)::DashAdapter"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %33 = load %class.sk_sp.6*, %class.sk_sp.6** %32, align 8
  %34 = icmp eq %class.sk_sp.6* %33, %28
  br i1 %34, label %56, label %35

35:                                               ; preds = %30, %51
  %36 = phi %class.sk_sp.6* [ %37, %51 ], [ %33, %30 ]
  %37 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %36, i64 -1
  %38 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %37, i64 0, i32 0
  %39 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %38, align 8
  %40 = icmp eq %"class.skottie::internal::Animator"* %39, null
  br i1 %40, label %51, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %39, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = atomicrmw add i32* %42, i32 -1 acq_rel
  %44 = icmp eq i32 %43, 1
  br i1 %44, label %45, label %51

45:                                               ; preds = %41
  %46 = bitcast %"class.skottie::internal::Animator"* %39 to %class.SkRefCntBase*
  %47 = bitcast %"class.skottie::internal::Animator"* %39 to void (%class.SkRefCntBase*)***
  %48 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %47, align 8
  %49 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %48, i64 2
  %50 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %49, align 8
  tail call void %50(%class.SkRefCntBase* nonnull %46) #10
  br label %51

51:                                               ; preds = %45, %41, %35
  %52 = icmp eq %class.sk_sp.6* %37, %28
  br i1 %52, label %53, label %35

53:                                               ; preds = %51
  %54 = bitcast %"class.std::__1::vector"* %26 to i8**
  %55 = load i8*, i8** %54, align 8
  br label %56

56:                                               ; preds = %53, %30
  %57 = phi i8* [ %55, %53 ], [ %31, %30 ]
  store %class.sk_sp.6* %28, %class.sk_sp.6** %32, align 8
  tail call void @_ZdlPv(i8* %57) #11
  br label %58

58:                                               ; preds = %25, %56
  %59 = bitcast %"class.skottie::internal::(anonymous namespace)::DashAdapter"* %0 to i8*
  tail call void @_ZdlPv(i8* %59) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7skottie8internal12_GLOBAL__N_111DashAdapter6onSyncEv(%"class.skottie::internal::(anonymous namespace)::DashAdapter"* readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DashAdapter", %"class.skottie::internal::(anonymous namespace)::DashAdapter"* %0, i64 0, i32 0, i32 1, i32 0
  %3 = load %"class.sksg::DashEffect"*, %"class.sksg::DashEffect"** %2, align 8
  %4 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DashAdapter", %"class.skottie::internal::(anonymous namespace)::DashAdapter"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.sksg::DashEffect", %"class.sksg::DashEffect"* %3, i64 0, i32 2
  %6 = load float, float* %5, align 8
  %7 = load float, float* %4, align 4
  %8 = fcmp oeq float %6, %7
  br i1 %8, label %12, label %9

9:                                                ; preds = %1
  store float %7, float* %5, align 8
  %10 = bitcast %"class.sksg::DashEffect"* %3 to %"class.sksg::Node"*
  tail call void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"* %10, i1 zeroext true) #10
  %11 = load %"class.sksg::DashEffect"*, %"class.sksg::DashEffect"** %2, align 8
  br label %12

12:                                               ; preds = %1, %9
  %13 = phi %"class.sksg::DashEffect"* [ %3, %1 ], [ %11, %9 ]
  %14 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DashAdapter", %"class.skottie::internal::(anonymous namespace)::DashAdapter"* %0, i64 0, i32 1
  %15 = getelementptr inbounds %"class.sksg::DashEffect", %"class.sksg::DashEffect"* %13, i64 0, i32 1
  %16 = getelementptr inbounds %"class.sksg::DashEffect", %"class.sksg::DashEffect"* %13, i64 0, i32 1, i32 0, i32 1
  %17 = bitcast float** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.std::__1::vector.56"* %15 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %18, %20
  %22 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DashAdapter", %"class.skottie::internal::(anonymous namespace)::DashAdapter"* %0, i64 0, i32 1, i32 0, i32 1
  %23 = bitcast float** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.std::__1::vector.56"* %14 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %24, %26
  %28 = icmp eq i64 %21, %27
  %29 = inttoptr i64 %20 to float*
  %30 = inttoptr i64 %18 to float*
  %31 = inttoptr i64 %26 to float*
  %32 = inttoptr i64 %24 to float*
  br i1 %28, label %33, label %45

33:                                               ; preds = %12
  %34 = icmp eq float* %29, %30
  br i1 %34, label %50, label %35

35:                                               ; preds = %33, %41
  %36 = phi float* [ %43, %41 ], [ %31, %33 ]
  %37 = phi float* [ %42, %41 ], [ %29, %33 ]
  %38 = load float, float* %37, align 4
  %39 = load float, float* %36, align 4
  %40 = fcmp oeq float %38, %39
  br i1 %40, label %41, label %45

41:                                               ; preds = %35
  %42 = getelementptr inbounds float, float* %37, i64 1
  %43 = getelementptr inbounds float, float* %36, i64 1
  %44 = icmp eq float* %42, %30
  br i1 %44, label %50, label %35

45:                                               ; preds = %35, %12
  %46 = icmp eq %"class.std::__1::vector.56"* %15, %14
  br i1 %46, label %48, label %47

47:                                               ; preds = %45
  tail call void @_ZNSt3__16vectorIfNS_9allocatorIfEEE6assignIPfEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIfNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.56"* %15, float* %31, float* %32) #10
  br label %48

48:                                               ; preds = %47, %45
  %49 = bitcast %"class.sksg::DashEffect"* %13 to %"class.sksg::Node"*
  tail call void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"* %49, i1 zeroext true) #10
  br label %50

50:                                               ; preds = %41, %33, %48
  ret void
}

declare void @_ZN4sksg14GeometryEffectC2E5sk_spINS_12GeometryNodeEE(%"class.sksg::GeometryEffect"*, %class.sk_sp.35*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_111DashAdapterEN4sksg10DashEffectEED2Ev(%"class.skottie::internal::DiscardableAdapterBase.67"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.skottie::internal::DiscardableAdapterBase.67", %"class.skottie::internal::DiscardableAdapterBase.67"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_111DashAdapterEN4sksg10DashEffectEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.skottie::internal::DiscardableAdapterBase.67", %"class.skottie::internal::DiscardableAdapterBase.67"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.sksg::DashEffect"*, %"class.sksg::DashEffect"** %3, align 8
  %5 = icmp eq %"class.sksg::DashEffect"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.sksg::DashEffect", %"class.sksg::DashEffect"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.sksg::DashEffect"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.sksg::DashEffect"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #10
  br label %16

16:                                               ; preds = %1, %6, %10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal27AnimatablePropertyContainerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %17 = getelementptr inbounds %"class.skottie::internal::DiscardableAdapterBase.67", %"class.skottie::internal::DiscardableAdapterBase.67"* %0, i64 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %17, i64 0, i32 0, i32 0
  %19 = load %class.sk_sp.6*, %class.sk_sp.6** %18, align 8
  %20 = icmp eq %class.sk_sp.6* %19, null
  br i1 %20, label %49, label %21

21:                                               ; preds = %16
  %22 = bitcast %class.sk_sp.6* %19 to i8*
  %23 = getelementptr inbounds %"class.skottie::internal::DiscardableAdapterBase.67", %"class.skottie::internal::DiscardableAdapterBase.67"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %24 = load %class.sk_sp.6*, %class.sk_sp.6** %23, align 8
  %25 = icmp eq %class.sk_sp.6* %24, %19
  br i1 %25, label %47, label %26

26:                                               ; preds = %21, %42
  %27 = phi %class.sk_sp.6* [ %28, %42 ], [ %24, %21 ]
  %28 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %27, i64 -1
  %29 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %28, i64 0, i32 0
  %30 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %29, align 8
  %31 = icmp eq %"class.skottie::internal::Animator"* %30, null
  br i1 %31, label %42, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %30, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 -1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %42

36:                                               ; preds = %32
  %37 = bitcast %"class.skottie::internal::Animator"* %30 to %class.SkRefCntBase*
  %38 = bitcast %"class.skottie::internal::Animator"* %30 to void (%class.SkRefCntBase*)***
  %39 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %38, align 8
  %40 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, i64 2
  %41 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %40, align 8
  tail call void %41(%class.SkRefCntBase* nonnull %37) #10
  br label %42

42:                                               ; preds = %36, %32, %26
  %43 = icmp eq %class.sk_sp.6* %28, %19
  br i1 %43, label %44, label %26

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::vector"* %17 to i8**
  %46 = load i8*, i8** %45, align 8
  br label %47

47:                                               ; preds = %44, %21
  %48 = phi i8* [ %46, %44 ], [ %22, %21 ]
  store %class.sk_sp.6* %19, %class.sk_sp.6** %23, align 8
  tail call void @_ZdlPv(i8* %48) #11
  br label %49

49:                                               ; preds = %16, %47
  ret void
}

; Function Attrs: inlinehint noreturn nounwind ssp uwtable
define internal void @_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_111DashAdapterEN4sksg10DashEffectEED0Ev(%"class.skottie::internal::DiscardableAdapterBase.67"* nocapture readnone) unnamed_addr #5 align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIfNS_9allocatorIfEEE8__appendEmRKf(%"class.std::__1::vector.56"*, i64, float* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = bitcast float* %2 to i8*
  %5 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %6 = bitcast float** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %0, i64 0, i32 0, i32 1
  %9 = bitcast float** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %7, %10
  %12 = ashr exact i64 %11, 2
  %13 = icmp ult i64 %12, %1
  br i1 %13, label %139, label %14

14:                                               ; preds = %3
  %15 = inttoptr i64 %10 to float*
  %16 = inttoptr i64 %10 to i8*
  %17 = getelementptr inbounds float, float* %15, i64 %1
  %18 = icmp eq i64 %1, 0
  br i1 %18, label %137, label %19

19:                                               ; preds = %14
  %20 = bitcast float* %2 to i32*
  %21 = shl nsw i64 %1, 2
  %22 = add i64 %21, -4
  %23 = lshr exact i64 %22, 2
  %24 = add nuw nsw i64 %23, 1
  %25 = icmp ult i64 %24, 8
  br i1 %25, label %26, label %48

26:                                               ; preds = %106, %48, %19
  %27 = phi float* [ %15, %48 ], [ %15, %19 ], [ %60, %106 ]
  %28 = ptrtoint float* %27 to i64
  %29 = add i64 %1, -1
  %30 = getelementptr float, float* %15, i64 %29
  %31 = ptrtoint float* %30 to i64
  %32 = sub i64 %31, %28
  %33 = lshr i64 %32, 2
  %34 = add nuw nsw i64 %33, 1
  %35 = and i64 %34, 7
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %45, label %37

37:                                               ; preds = %26, %37
  %38 = phi float* [ %42, %37 ], [ %27, %26 ]
  %39 = phi i64 [ %43, %37 ], [ %35, %26 ]
  %40 = load i32, i32* %20, align 4
  %41 = bitcast float* %38 to i32*
  store i32 %40, i32* %41, align 4
  %42 = getelementptr inbounds float, float* %38, i64 1
  %43 = add i64 %39, -1
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %37, !llvm.loop !25

45:                                               ; preds = %37, %26
  %46 = phi float* [ %27, %26 ], [ %42, %37 ]
  %47 = icmp ult i64 %32, 28
  br i1 %47, label %108, label %110

48:                                               ; preds = %19
  %49 = shl nsw i64 %1, 2
  %50 = add i64 %49, -4
  %51 = lshr exact i64 %50, 2
  %52 = add nuw nsw i64 %51, 1
  %53 = getelementptr float, float* %15, i64 %52
  %54 = getelementptr i8, i8* %4, i64 1
  %55 = icmp ugt i8* %54, %16
  %56 = icmp ugt float* %53, %2
  %57 = and i1 %55, %56
  br i1 %57, label %26, label %58

58:                                               ; preds = %48
  %59 = and i64 %24, 9223372036854775800
  %60 = getelementptr float, float* %15, i64 %59
  %61 = add nsw i64 %59, -8
  %62 = lshr exact i64 %61, 3
  %63 = add nuw nsw i64 %62, 1
  %64 = and i64 %63, 1
  %65 = icmp eq i64 %61, 0
  br i1 %65, label %93, label %66

66:                                               ; preds = %58
  %67 = sub nuw nsw i64 %63, %64
  %68 = load i32, i32* %20, align 4, !alias.scope !26
  %69 = insertelement <4 x i32> undef, i32 %68, i32 0
  %70 = shufflevector <4 x i32> %69, <4 x i32> undef, <4 x i32> zeroinitializer
  %71 = insertelement <4 x i32> undef, i32 %68, i32 0
  %72 = shufflevector <4 x i32> %71, <4 x i32> undef, <4 x i32> zeroinitializer
  %73 = load i32, i32* %20, align 4, !alias.scope !26
  %74 = insertelement <4 x i32> undef, i32 %73, i32 0
  %75 = shufflevector <4 x i32> %74, <4 x i32> undef, <4 x i32> zeroinitializer
  %76 = insertelement <4 x i32> undef, i32 %73, i32 0
  %77 = shufflevector <4 x i32> %76, <4 x i32> undef, <4 x i32> zeroinitializer
  br label %78

78:                                               ; preds = %78, %66
  %79 = phi i64 [ 0, %66 ], [ %90, %78 ]
  %80 = phi i64 [ %67, %66 ], [ %91, %78 ]
  %81 = getelementptr float, float* %15, i64 %79
  %82 = bitcast float* %81 to <4 x i32>*
  store <4 x i32> %70, <4 x i32>* %82, align 4, !alias.scope !29, !noalias !26
  %83 = getelementptr float, float* %81, i64 4
  %84 = bitcast float* %83 to <4 x i32>*
  store <4 x i32> %72, <4 x i32>* %84, align 4, !alias.scope !29, !noalias !26
  %85 = or i64 %79, 8
  %86 = getelementptr float, float* %15, i64 %85
  %87 = bitcast float* %86 to <4 x i32>*
  store <4 x i32> %75, <4 x i32>* %87, align 4, !alias.scope !29, !noalias !26
  %88 = getelementptr float, float* %86, i64 4
  %89 = bitcast float* %88 to <4 x i32>*
  store <4 x i32> %77, <4 x i32>* %89, align 4, !alias.scope !29, !noalias !26
  %90 = add i64 %79, 16
  %91 = add i64 %80, -2
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %93, label %78, !llvm.loop !31

93:                                               ; preds = %78, %58
  %94 = phi i64 [ 0, %58 ], [ %90, %78 ]
  %95 = icmp eq i64 %64, 0
  br i1 %95, label %106, label %96

96:                                               ; preds = %93
  %97 = getelementptr float, float* %15, i64 %94
  %98 = load i32, i32* %20, align 4, !alias.scope !26
  %99 = insertelement <4 x i32> undef, i32 %98, i32 0
  %100 = shufflevector <4 x i32> %99, <4 x i32> undef, <4 x i32> zeroinitializer
  %101 = insertelement <4 x i32> undef, i32 %98, i32 0
  %102 = shufflevector <4 x i32> %101, <4 x i32> undef, <4 x i32> zeroinitializer
  %103 = bitcast float* %97 to <4 x i32>*
  store <4 x i32> %100, <4 x i32>* %103, align 4, !alias.scope !29, !noalias !26
  %104 = getelementptr float, float* %97, i64 4
  %105 = bitcast float* %104 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %105, align 4, !alias.scope !29, !noalias !26
  br label %106

106:                                              ; preds = %93, %96
  %107 = icmp eq i64 %24, %59
  br i1 %107, label %108, label %26

108:                                              ; preds = %45, %110, %106
  %109 = ptrtoint float* %17 to i64
  br label %137

110:                                              ; preds = %45, %110
  %111 = phi float* [ %135, %110 ], [ %46, %45 ]
  %112 = load i32, i32* %20, align 4
  %113 = bitcast float* %111 to i32*
  store i32 %112, i32* %113, align 4
  %114 = getelementptr inbounds float, float* %111, i64 1
  %115 = load i32, i32* %20, align 4
  %116 = bitcast float* %114 to i32*
  store i32 %115, i32* %116, align 4
  %117 = getelementptr inbounds float, float* %111, i64 2
  %118 = load i32, i32* %20, align 4
  %119 = bitcast float* %117 to i32*
  store i32 %118, i32* %119, align 4
  %120 = getelementptr inbounds float, float* %111, i64 3
  %121 = load i32, i32* %20, align 4
  %122 = bitcast float* %120 to i32*
  store i32 %121, i32* %122, align 4
  %123 = getelementptr inbounds float, float* %111, i64 4
  %124 = load i32, i32* %20, align 4
  %125 = bitcast float* %123 to i32*
  store i32 %124, i32* %125, align 4
  %126 = getelementptr inbounds float, float* %111, i64 5
  %127 = load i32, i32* %20, align 4
  %128 = bitcast float* %126 to i32*
  store i32 %127, i32* %128, align 4
  %129 = getelementptr inbounds float, float* %111, i64 6
  %130 = load i32, i32* %20, align 4
  %131 = bitcast float* %129 to i32*
  store i32 %130, i32* %131, align 4
  %132 = getelementptr inbounds float, float* %111, i64 7
  %133 = load i32, i32* %20, align 4
  %134 = bitcast float* %132 to i32*
  store i32 %133, i32* %134, align 4
  %135 = getelementptr inbounds float, float* %111, i64 8
  %136 = icmp eq float* %135, %17
  br i1 %136, label %108, label %110, !llvm.loop !33

137:                                              ; preds = %14, %108
  %138 = phi i64 [ %109, %108 ], [ %10, %14 ]
  store i64 %138, i64* %9, align 8
  br label %311

139:                                              ; preds = %3
  %140 = bitcast %"class.std::__1::vector.56"* %0 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = sub i64 %10, %141
  %143 = ashr exact i64 %142, 2
  %144 = add i64 %143, %1
  %145 = icmp ugt i64 %144, 4611686018427387903
  br i1 %145, label %146, label %148

146:                                              ; preds = %139
  %147 = bitcast %"class.std::__1::vector.56"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %147) #12
  unreachable

148:                                              ; preds = %139
  %149 = sub i64 %7, %141
  %150 = ashr exact i64 %149, 2
  %151 = icmp ult i64 %150, 2305843009213693951
  br i1 %151, label %152, label %160

152:                                              ; preds = %148
  %153 = ashr exact i64 %149, 1
  %154 = icmp ult i64 %153, %144
  %155 = select i1 %154, i64 %144, i64 %153
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %165, label %157

157:                                              ; preds = %152
  %158 = icmp ugt i64 %155, 4611686018427387903
  br i1 %158, label %159, label %160

159:                                              ; preds = %157
  tail call void @abort() #12
  unreachable

160:                                              ; preds = %148, %157
  %161 = phi i64 [ %155, %157 ], [ 4611686018427387903, %148 ]
  %162 = shl i64 %161, 2
  %163 = tail call i8* @_Znwm(i64 %162) #11
  %164 = bitcast i8* %163 to float*
  br label %165

165:                                              ; preds = %160, %152
  %166 = phi i64 [ %161, %160 ], [ 0, %152 ]
  %167 = phi float* [ %164, %160 ], [ null, %152 ]
  %168 = getelementptr inbounds float, float* %167, i64 %143
  %169 = getelementptr inbounds float, float* %167, i64 %166
  %170 = getelementptr inbounds float, float* %168, i64 %1
  %171 = bitcast float* %2 to i32*
  %172 = shl nsw i64 %1, 2
  %173 = add i64 %172, -4
  %174 = lshr exact i64 %173, 2
  %175 = add nuw nsw i64 %174, 1
  %176 = icmp ult i64 %175, 8
  br i1 %176, label %239, label %177

177:                                              ; preds = %165
  %178 = bitcast float* %168 to i8*
  %179 = shl nsw i64 %1, 2
  %180 = add i64 %179, -4
  %181 = lshr exact i64 %180, 2
  %182 = add nsw i64 %143, %181
  %183 = add i64 %182, 1
  %184 = getelementptr float, float* %167, i64 %183
  %185 = getelementptr i8, i8* %4, i64 1
  %186 = icmp ugt i8* %185, %178
  %187 = icmp ugt float* %184, %2
  %188 = and i1 %186, %187
  br i1 %188, label %239, label %189

189:                                              ; preds = %177
  %190 = and i64 %175, 9223372036854775800
  %191 = getelementptr float, float* %168, i64 %190
  %192 = add nsw i64 %190, -8
  %193 = lshr exact i64 %192, 3
  %194 = add nuw nsw i64 %193, 1
  %195 = and i64 %194, 1
  %196 = icmp eq i64 %192, 0
  br i1 %196, label %224, label %197

197:                                              ; preds = %189
  %198 = sub nuw nsw i64 %194, %195
  %199 = load i32, i32* %171, align 4, !alias.scope !34
  %200 = insertelement <4 x i32> undef, i32 %199, i32 0
  %201 = shufflevector <4 x i32> %200, <4 x i32> undef, <4 x i32> zeroinitializer
  %202 = insertelement <4 x i32> undef, i32 %199, i32 0
  %203 = shufflevector <4 x i32> %202, <4 x i32> undef, <4 x i32> zeroinitializer
  %204 = load i32, i32* %171, align 4, !alias.scope !34
  %205 = insertelement <4 x i32> undef, i32 %204, i32 0
  %206 = shufflevector <4 x i32> %205, <4 x i32> undef, <4 x i32> zeroinitializer
  %207 = insertelement <4 x i32> undef, i32 %204, i32 0
  %208 = shufflevector <4 x i32> %207, <4 x i32> undef, <4 x i32> zeroinitializer
  br label %209

209:                                              ; preds = %209, %197
  %210 = phi i64 [ 0, %197 ], [ %221, %209 ]
  %211 = phi i64 [ %198, %197 ], [ %222, %209 ]
  %212 = getelementptr float, float* %168, i64 %210
  %213 = bitcast float* %212 to <4 x i32>*
  store <4 x i32> %201, <4 x i32>* %213, align 4, !alias.scope !37, !noalias !34
  %214 = getelementptr float, float* %212, i64 4
  %215 = bitcast float* %214 to <4 x i32>*
  store <4 x i32> %203, <4 x i32>* %215, align 4, !alias.scope !37, !noalias !34
  %216 = or i64 %210, 8
  %217 = getelementptr float, float* %168, i64 %216
  %218 = bitcast float* %217 to <4 x i32>*
  store <4 x i32> %206, <4 x i32>* %218, align 4, !alias.scope !37, !noalias !34
  %219 = getelementptr float, float* %217, i64 4
  %220 = bitcast float* %219 to <4 x i32>*
  store <4 x i32> %208, <4 x i32>* %220, align 4, !alias.scope !37, !noalias !34
  %221 = add i64 %210, 16
  %222 = add i64 %211, -2
  %223 = icmp eq i64 %222, 0
  br i1 %223, label %224, label %209, !llvm.loop !39

224:                                              ; preds = %209, %189
  %225 = phi i64 [ 0, %189 ], [ %221, %209 ]
  %226 = icmp eq i64 %195, 0
  br i1 %226, label %237, label %227

227:                                              ; preds = %224
  %228 = getelementptr float, float* %168, i64 %225
  %229 = load i32, i32* %171, align 4, !alias.scope !34
  %230 = insertelement <4 x i32> undef, i32 %229, i32 0
  %231 = shufflevector <4 x i32> %230, <4 x i32> undef, <4 x i32> zeroinitializer
  %232 = insertelement <4 x i32> undef, i32 %229, i32 0
  %233 = shufflevector <4 x i32> %232, <4 x i32> undef, <4 x i32> zeroinitializer
  %234 = bitcast float* %228 to <4 x i32>*
  store <4 x i32> %231, <4 x i32>* %234, align 4, !alias.scope !37, !noalias !34
  %235 = getelementptr float, float* %228, i64 4
  %236 = bitcast float* %235 to <4 x i32>*
  store <4 x i32> %233, <4 x i32>* %236, align 4, !alias.scope !37, !noalias !34
  br label %237

237:                                              ; preds = %224, %227
  %238 = icmp eq i64 %175, %190
  br i1 %238, label %289, label %239

239:                                              ; preds = %237, %177, %165
  %240 = phi float* [ %168, %177 ], [ %168, %165 ], [ %191, %237 ]
  %241 = ptrtoint float* %240 to i64
  %242 = add i64 %143, %1
  %243 = add i64 %242, -1
  %244 = getelementptr float, float* %167, i64 %243
  %245 = ptrtoint float* %244 to i64
  %246 = sub i64 %245, %241
  %247 = lshr i64 %246, 2
  %248 = add nuw nsw i64 %247, 1
  %249 = and i64 %248, 7
  %250 = icmp eq i64 %249, 0
  br i1 %250, label %259, label %251

251:                                              ; preds = %239, %251
  %252 = phi float* [ %256, %251 ], [ %240, %239 ]
  %253 = phi i64 [ %257, %251 ], [ %249, %239 ]
  %254 = load i32, i32* %171, align 4
  %255 = bitcast float* %252 to i32*
  store i32 %254, i32* %255, align 4
  %256 = getelementptr inbounds float, float* %252, i64 1
  %257 = add i64 %253, -1
  %258 = icmp eq i64 %257, 0
  br i1 %258, label %259, label %251, !llvm.loop !40

259:                                              ; preds = %251, %239
  %260 = phi float* [ %240, %239 ], [ %256, %251 ]
  %261 = icmp ult i64 %246, 28
  br i1 %261, label %289, label %262

262:                                              ; preds = %259, %262
  %263 = phi float* [ %287, %262 ], [ %260, %259 ]
  %264 = load i32, i32* %171, align 4
  %265 = bitcast float* %263 to i32*
  store i32 %264, i32* %265, align 4
  %266 = getelementptr inbounds float, float* %263, i64 1
  %267 = load i32, i32* %171, align 4
  %268 = bitcast float* %266 to i32*
  store i32 %267, i32* %268, align 4
  %269 = getelementptr inbounds float, float* %263, i64 2
  %270 = load i32, i32* %171, align 4
  %271 = bitcast float* %269 to i32*
  store i32 %270, i32* %271, align 4
  %272 = getelementptr inbounds float, float* %263, i64 3
  %273 = load i32, i32* %171, align 4
  %274 = bitcast float* %272 to i32*
  store i32 %273, i32* %274, align 4
  %275 = getelementptr inbounds float, float* %263, i64 4
  %276 = load i32, i32* %171, align 4
  %277 = bitcast float* %275 to i32*
  store i32 %276, i32* %277, align 4
  %278 = getelementptr inbounds float, float* %263, i64 5
  %279 = load i32, i32* %171, align 4
  %280 = bitcast float* %278 to i32*
  store i32 %279, i32* %280, align 4
  %281 = getelementptr inbounds float, float* %263, i64 6
  %282 = load i32, i32* %171, align 4
  %283 = bitcast float* %281 to i32*
  store i32 %282, i32* %283, align 4
  %284 = getelementptr inbounds float, float* %263, i64 7
  %285 = load i32, i32* %171, align 4
  %286 = bitcast float* %284 to i32*
  store i32 %285, i32* %286, align 4
  %287 = getelementptr inbounds float, float* %263, i64 8
  %288 = icmp eq float* %170, %287
  br i1 %288, label %289, label %262, !llvm.loop !41

289:                                              ; preds = %259, %262, %237
  %290 = ptrtoint float* %169 to i64
  %291 = ptrtoint float* %170 to i64
  %292 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %0, i64 0, i32 0, i32 0
  %293 = load float*, float** %292, align 8
  %294 = load i64, i64* %9, align 8
  %295 = ptrtoint float* %293 to i64
  %296 = sub i64 %294, %295
  %297 = ashr exact i64 %296, 2
  %298 = sub nsw i64 0, %297
  %299 = getelementptr inbounds float, float* %168, i64 %298
  %300 = ptrtoint float* %299 to i64
  %301 = icmp sgt i64 %296, 0
  br i1 %301, label %302, label %306

302:                                              ; preds = %289
  %303 = bitcast float* %299 to i8*
  %304 = bitcast float* %293 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %303, i8* align 4 %304, i64 %296, i1 false) #10
  %305 = load float*, float** %292, align 8
  br label %306

306:                                              ; preds = %289, %302
  %307 = phi float* [ %293, %289 ], [ %305, %302 ]
  store i64 %300, i64* %140, align 8
  store i64 %291, i64* %9, align 8
  store i64 %290, i64* %6, align 8
  %308 = icmp eq float* %307, null
  br i1 %308, label %311, label %309

309:                                              ; preds = %306
  %310 = bitcast float* %307 to i8*
  tail call void @_ZdlPv(i8* %310) #11
  br label %311

311:                                              ; preds = %309, %306, %137
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIfNS_9allocatorIfEEE6assignIPfEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIfNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.56"*, float*, float*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint float* %2 to i64
  %5 = ptrtoint float* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  %8 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast float** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.56"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to float*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %0, i64 0, i32 0, i32 1
  %19 = bitcast float** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 2
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds float, float* %1, i64 %22
  %25 = select i1 %23, float* %24, float* %2
  %26 = ptrtoint float* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 2
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast float* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #10
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 2
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast float* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #10
  %42 = inttoptr i64 %35 to float*
  %43 = getelementptr inbounds float, float* %42, i64 %39
  %44 = ptrtoint float* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds float, float* %16, i64 %28
  store float* %48, float** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %0, i64 0, i32 0, i32 1
  %53 = bitcast float** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #11
  %55 = bitcast %"class.std::__1::vector.56"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #10
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.56"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #12
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 2
  %63 = icmp ult i64 %62, 2305843009213693951
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 1
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 4611686018427387903
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.56"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #12
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 4611686018427387903, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 2
  %74 = tail call i8* @_Znwm(i64 %73) #11
  %75 = bitcast i8* %74 to float*
  %76 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %0, i64 0, i32 0, i32 1
  %77 = bitcast float** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.56"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds float, float* %75, i64 %72
  store float* %79, float** %8, align 8
  %80 = bitcast float** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 2
  %85 = bitcast float* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #10
  %86 = getelementptr inbounds float, float* %75, i64 %84
  %87 = ptrtoint float* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_117FillStrokeAdapterEN4sksg9PaintNodeEE4MakeIJRKN6skjson11ObjectValueERKNS0_16AnimationBuilderE5sk_spIS5_ESF_INS0_27AnimatablePropertyContainerEENS3_4TypeEEEESF_IS3_EDpOT_: argument 0"}
!4 = distinct !{!4, !"_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_117FillStrokeAdapterEN4sksg9PaintNodeEE4MakeIJRKN6skjson11ObjectValueERKNS0_16AnimationBuilderE5sk_spIS5_ESF_INS0_27AnimatablePropertyContainerEENS3_4TypeEEEESF_IS3_EDpOT_"}
!5 = !{i8 0, i8 2}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN7skottie8internal12ShapeBuilder10AttachFillERKN6skjson11ObjectValueEPKNS0_16AnimationBuilderE5sk_spIN4sksg9PaintNodeEES9_INS0_27AnimatablePropertyContainerEE: argument 0"}
!8 = distinct !{!8, !"_ZN7skottie8internal12ShapeBuilder10AttachFillERKN6skjson11ObjectValueEPKNS0_16AnimationBuilderE5sk_spIN4sksg9PaintNodeEES9_INS0_27AnimatablePropertyContainerEE"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN7skottie8internal12ShapeBuilder12AttachStrokeERKN6skjson11ObjectValueEPKNS0_16AnimationBuilderE5sk_spIN4sksg9PaintNodeEES9_INS0_27AnimatablePropertyContainerEE: argument 0"}
!11 = distinct !{!11, !"_ZN7skottie8internal12ShapeBuilder12AttachStrokeERKN6skjson11ObjectValueEPKNS0_16AnimationBuilderE5sk_spIN4sksg9PaintNodeEES9_INS0_27AnimatablePropertyContainerEE"}
!12 = !{!13, !15}
!13 = distinct !{!13, !14, !"_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_111DashAdapterEN4sksg10DashEffectEE4MakeIJRKN6skjson10ArrayValueERKNS0_16AnimationBuilderE5sk_spINS4_12GeometryNodeEEEEESF_IS3_EDpOT_: argument 0"}
!14 = distinct !{!14, !"_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_111DashAdapterEN4sksg10DashEffectEE4MakeIJRKN6skjson10ArrayValueERKNS0_16AnimationBuilderE5sk_spINS4_12GeometryNodeEEEEESF_IS3_EDpOT_"}
!15 = distinct !{!15, !16, !"_ZNK7skottie8internal16AnimationBuilder24attachDiscardableAdapterINS0_12_GLOBAL__N_111DashAdapterEJRKN6skjson10ArrayValueERKS1_5sk_spIN4sksg12GeometryNodeEEEEENSt3__15decayIDTclptclsrT_4Makespclsr3stdE7forwardIT0_Efp_EE4nodeEEE4typeEDpOSI_: argument 0"}
!16 = distinct !{!16, !"_ZNK7skottie8internal16AnimationBuilder24attachDiscardableAdapterINS0_12_GLOBAL__N_111DashAdapterEJRKN6skjson10ArrayValueERKS1_5sk_spIN4sksg12GeometryNodeEEEEENSt3__15decayIDTclptclsrT_4Makespclsr3stdE7forwardIT0_Efp_EE4nodeEEE4typeEDpOSI_"}
!17 = !{!18, !13}
!18 = distinct !{!18, !19, !"_ZN4sksg10DashEffect4MakeE5sk_spINS_12GeometryNodeEE: argument 0"}
!19 = distinct !{!19, !"_ZN4sksg10DashEffect4MakeE5sk_spINS_12GeometryNodeEE"}
!20 = !{!18, !13, !15}
!21 = !{!13}
!22 = !{!15}
!23 = distinct !{!23, !24}
!24 = !{!"llvm.loop.unroll.disable"}
!25 = distinct !{!25, !24}
!26 = !{!27}
!27 = distinct !{!27, !28}
!28 = distinct !{!28, !"LVerDomain"}
!29 = !{!30}
!30 = distinct !{!30, !28}
!31 = distinct !{!31, !32}
!32 = !{!"llvm.loop.isvectorized", i32 1}
!33 = distinct !{!33, !32}
!34 = !{!35}
!35 = distinct !{!35, !36}
!36 = distinct !{!36, !"LVerDomain"}
!37 = !{!38}
!38 = distinct !{!38, !36}
!39 = distinct !{!39, !32}
!40 = distinct !{!40, !24}
!41 = distinct !{!41, !32}
