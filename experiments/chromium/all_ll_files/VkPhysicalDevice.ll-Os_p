; ModuleID = '../../third_party/swiftshader/src/Vulkan/VkPhysicalDevice.cpp'
source_filename = "../../third_party/swiftshader/src/Vulkan/VkPhysicalDevice.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.VkPhysicalDeviceFeatures = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceLimits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, i64, i64, i64 }
%struct.VkPhysicalDeviceProperties = type { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceSparseProperties }
%struct.VkPhysicalDeviceSparseProperties = type { i32, i32, i32, i32, i32 }
%struct.VkMemoryType = type { i32, i32 }
%struct.VkMemoryHeap = type { i64, i32 }
%"class.vk::PhysicalDevice" = type { i8 }
%class.VkNonDispatchableHandle = type { i64 }
%class.VkNonDispatchableHandle.0 = type { i64 }
%class.VkNonDispatchableHandle.1 = type { i64 }
%class.VkNonDispatchableHandle.2 = type { i64 }
%class.VkNonDispatchableHandle.3 = type { i64 }
%class.VkNonDispatchableHandle.4 = type { i64 }
%class.VkNonDispatchableHandle.5 = type { i64 }
%class.VkNonDispatchableHandle.6 = type { i64 }
%class.VkNonDispatchableHandle.7 = type { i64 }
%class.VkNonDispatchableHandle.8 = type { i64 }
%class.VkNonDispatchableHandle.9 = type { i64 }
%class.VkNonDispatchableHandle.10 = type { i64 }
%class.VkNonDispatchableHandle.11 = type { i64 }
%class.VkNonDispatchableHandle.12 = type { i64 }
%class.VkNonDispatchableHandle.13 = type { i64 }
%class.VkNonDispatchableHandle.14 = type { i64 }
%class.VkNonDispatchableHandle.15 = type { i64 }
%class.VkNonDispatchableHandle.16 = type { i64 }
%class.VkNonDispatchableHandle.17 = type { i64 }
%class.VkNonDispatchableHandle.18 = type { i64 }
%class.VkNonDispatchableHandle.19 = type { i64 }
%class.VkNonDispatchableHandle.20 = type { i64 }
%class.VkNonDispatchableHandle.21 = type { i64 }
%class.VkNonDispatchableHandle.22 = type { i64 }
%class.VkNonDispatchableHandle.23 = type { i64 }
%class.VkNonDispatchableHandle.24 = type { i64 }
%class.VkNonDispatchableHandle.25 = type { i64 }
%class.VkNonDispatchableHandle.26 = type { i64 }
%class.VkNonDispatchableHandle.27 = type { i64 }
%class.VkNonDispatchableHandle.28 = type { i64 }
%class.VkNonDispatchableHandle.29 = type { i64 }
%class.VkNonDispatchableHandle.30 = type { i64 }
%class.VkNonDispatchableHandle.31 = type { i64 }
%class.VkNonDispatchableHandle.32 = type { i64 }
%class.VkNonDispatchableHandle.33 = type { i64 }
%class.VkNonDispatchableHandle.34 = type { i64 }
%class.VkNonDispatchableHandle.35 = type { i64 }
%struct.VkPhysicalDeviceFeatures2 = type { i32, i8*, %struct.VkPhysicalDeviceFeatures }
%struct.VkBaseOutStructure = type { i32, %struct.VkBaseOutStructure* }
%struct.VkPhysicalDeviceVulkan11Features = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceVulkan12Features = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceMultiviewFeatures = type { i32, i8*, i32, i32, i32 }
%struct.VkPhysicalDeviceVariablePointersFeatures = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDeviceLineRasterizationFeaturesEXT = type { i32, i8*, i32, i32, i32, i32, i32, i32 }
%struct.VkPhysicalDevice8BitStorageFeatures = type { i32, i8*, i32, i32, i32 }
%struct.VkPhysicalDeviceVulkanMemoryModelFeatures = type { i32, i8*, i32, i32, i32 }
%struct.VkPhysicalDeviceShaderAtomicInt64Features = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDeviceShaderFloat16Int8Features = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDeviceBufferDeviceAddressFeatures = type { i32, i8*, i32, i32, i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%struct.VkPhysicalDeviceIDProperties = type { i32, i8*, [16 x i8], [16 x i8], [8 x i8], i32, i32 }
%struct.VkPhysicalDeviceMaintenance3Properties = type { i32, i8*, i32, i64 }
%struct.VkPhysicalDeviceMultiviewProperties = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDevicePointClippingProperties = type { i32, i8*, i32 }
%struct.VkPhysicalDeviceProtectedMemoryProperties = type { i32, i8*, i32 }
%struct.VkPhysicalDeviceSubgroupProperties = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceVulkan11Properties = type { i32, i8*, [16 x i8], [16 x i8], [8 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64 }
%struct.VkExternalImageFormatProperties = type { i32, i8*, %struct.VkExternalMemoryProperties }
%struct.VkExternalMemoryProperties = type { i32, i32, i32 }
%struct.VkExternalBufferProperties = type { i32, i8*, %struct.VkExternalMemoryProperties }
%struct.VkSamplerYcbcrConversionImageFormatProperties = type { i32, i8*, i32 }
%struct.VkPhysicalDeviceExternalBufferInfo = type { i32, i8*, i32, i32, i32 }
%struct.VkPhysicalDeviceExternalFenceInfo = type { i32, i8*, i32 }
%struct.VkExternalFenceProperties = type { i32, i8*, i32, i32, i32 }
%struct.VkPhysicalDeviceExternalSemaphoreInfo = type { i32, i8*, i32 }
%struct.VkExternalSemaphoreProperties = type { i32, i8*, i32, i32, i32 }
%struct.VkBaseInStructure = type { i32, %struct.VkBaseInStructure* }
%struct.VkPhysicalDeviceExternalMemoryHostPropertiesEXT = type { i32, i8*, i64 }
%struct.VkPhysicalDeviceDriverProperties = type { i32, i8*, i32, [256 x i8], [256 x i8], %struct.VkConformanceVersion }
%struct.VkConformanceVersion = type { i8, i8, i8, i8 }
%struct.VkPhysicalDeviceLineRasterizationPropertiesEXT = type { i32, i8*, i32 }
%struct.VkPhysicalDeviceProvokingVertexPropertiesEXT = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDeviceFloatControlsProperties = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceDescriptorIndexingProperties = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceDepthStencilResolveProperties = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceSamplerFilterMinmaxProperties = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDeviceTimelineSemaphoreProperties = type { i32, i8*, i64 }
%struct.VkPhysicalDeviceVulkan12Properties = type { i32, i8*, i32, [256 x i8], [256 x i8], %struct.VkConformanceVersion, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32 }
%struct.VkFormatProperties = type { i32, i32, i32 }
%"class.vk::Format" = type { i32 }
%struct.VkImageFormatProperties = type { %struct.VkExtent3D, i32, i32, i32, i64 }
%struct.VkExtent3D = type { i32, i32, i32 }
%struct.VkQueueFamilyProperties = type { i32, i32, i32, %struct.VkExtent3D }
%struct.VkQueueFamilyProperties2 = type { i32, i8*, %struct.VkQueueFamilyProperties }
%struct.VkPhysicalDeviceMemoryProperties = type { i32, [32 x %struct.VkMemoryType], i32, [16 x %struct.VkMemoryHeap] }

$_ZNK23VkNonDispatchableHandleIP10VkBuffer_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP10VkBuffer_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP9VkImage_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP9VkImage_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP13VkSemaphore_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP13VkSemaphore_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP9VkFence_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP9VkFence_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP16VkDeviceMemory_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP16VkDeviceMemory_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP9VkEvent_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP9VkEvent_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP13VkQueryPool_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP13VkQueryPool_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP14VkBufferView_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP14VkBufferView_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP13VkImageView_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP13VkImageView_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP16VkShaderModule_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP16VkShaderModule_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP17VkPipelineCache_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP17VkPipelineCache_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP18VkPipelineLayout_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP18VkPipelineLayout_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP12VkPipeline_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP12VkPipeline_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP14VkRenderPass_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP14VkRenderPass_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP23VkDescriptorSetLayout_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP23VkDescriptorSetLayout_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP11VkSampler_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP11VkSampler_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP17VkDescriptorSet_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP17VkDescriptorSet_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP18VkDescriptorPool_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP18VkDescriptorPool_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP15VkFramebuffer_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP15VkFramebuffer_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP15VkCommandPool_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP15VkCommandPool_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP26VkSamplerYcbcrConversion_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP26VkSamplerYcbcrConversion_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP28VkDescriptorUpdateTemplate_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP28VkDescriptorUpdateTemplate_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP14VkSurfaceKHR_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP14VkSurfaceKHR_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP16VkSwapchainKHR_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP16VkSwapchainKHR_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP14VkDisplayKHR_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP14VkDisplayKHR_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP18VkDisplayModeKHR_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP18VkDisplayModeKHR_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP24VkDeferredOperationKHR_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP24VkDeferredOperationKHR_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP26VkDebugReportCallbackEXT_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP26VkDebugReportCallbackEXT_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP15VkCuModuleNVX_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP15VkCuModuleNVX_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP17VkCuFunctionNVX_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP17VkCuFunctionNVX_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP26VkDebugUtilsMessengerEXT_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP26VkDebugUtilsMessengerEXT_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP22VkValidationCacheEXT_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP22VkValidationCacheEXT_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP27VkAccelerationStructureNV_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP27VkAccelerationStructureNV_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP33VkPerformanceConfigurationINTEL_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP33VkPerformanceConfigurationINTEL_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP28VkIndirectCommandsLayoutNV_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP28VkIndirectCommandsLayoutNV_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP22VkPrivateDataSlotEXT_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP22VkPrivateDataSlotEXT_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP28VkAccelerationStructureKHR_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP28VkAccelerationStructureKHR_TEaSEm = comdat any

@_ZZNK2vk14PhysicalDevice11getFeaturesEvE8features = internal constant %struct.VkPhysicalDeviceFeatures { i32 1, i32 1, i32 1, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 0, i32 1, i32 0, i32 0, i32 1, i32 1, i32 1, i32 1, i32 1, i32 0, i32 1, i32 1, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0 }, align 4
@_ZZNK2vk14PhysicalDevice9getLimitsEvE6limits = internal global %struct.VkPhysicalDeviceLimits zeroinitializer, align 16
@_ZGVZNK2vk14PhysicalDevice9getLimitsEvE6limits = internal global i64 0, align 8
@_ZZNK2vk14PhysicalDevice13getPropertiesEvE10properties = internal global %struct.VkPhysicalDeviceProperties zeroinitializer, align 16
@_ZGVZNK2vk14PhysicalDevice13getPropertiesEvE10properties = internal global i64 0, align 8
@.str = private unnamed_addr constant [37 x i8] c"%s:%d WARNING: nextInfo->sType = %s\0A\00", align 1
@.str.1 = private unnamed_addr constant [62 x i8] c"../../third_party/swiftshader/src/Vulkan/VkPhysicalDevice.cpp\00", align 1
@.str.2 = private unnamed_addr constant [45 x i8] c"%s:%d WARNING: UNREACHABLE: VkImageType: %d\0A\00", align 1
@_ZZN2vk14PhysicalDevice19GetMemoryPropertiesEvE10properties = internal constant { i32, <{ %struct.VkMemoryType, [31 x %struct.VkMemoryType] }>, i32, <{ %struct.VkMemoryHeap, [15 x %struct.VkMemoryHeap] }> } { i32 1, <{ %struct.VkMemoryType, [31 x %struct.VkMemoryType] }> <{ %struct.VkMemoryType { i32 15, i32 0 }, [31 x %struct.VkMemoryType] zeroinitializer }>, i32 1, <{ %struct.VkMemoryHeap, [15 x %struct.VkMemoryHeap] }> <{ %struct.VkMemoryHeap { i64 2147483648, i32 1 }, [15 x %struct.VkMemoryHeap] zeroinitializer }> }, align 8
@"__const._ZZNK2vk14PhysicalDevice13getPropertiesEvENK3$_0clEv.properties" = private unnamed_addr constant { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], [4 x i8], { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, [4 x i8], i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, [4 x i8], i64, i64, i64 }, %struct.VkPhysicalDeviceSparseProperties, [4 x i8] } { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, [256 x i8] cx i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA", [4 x i8] c"\AA\AA\AA\AA", { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, [4 x i8], i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, [4 x i8], i64, i64, i64 } { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", i64 -6148914691236517206, i64 -6148914691236517206, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, [3 x i32] [i32 -1431655766, i32 -1431655766, i32 -1431655766], i32 -1431655766, [3 x i32] [i32 -1431655766, i32 -1431655766, i32 -1431655766], i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i32 -1431655766, [2 x i32] [i32 -1431655766, i32 -1431655766], [2 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, [2 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [2 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206 }, %struct.VkPhysicalDeviceSparseProperties { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA" }, align 8
@.str.4 = private unnamed_addr constant [16 x i8] c"SwiftShaderUUID\00", align 1
@.str.5 = private unnamed_addr constant [8 x i8] c"%s (%s)\00", align 1
@.str.6 = private unnamed_addr constant [19 x i8] c"SwiftShader Device\00", align 1
@.str.7 = private unnamed_addr constant [19 x i8] c"SwiftShader driver\00", align 1

@_ZN2vk14PhysicalDeviceC1EPKvPv = hidden unnamed_addr alias void (%"class.vk::PhysicalDevice"*, i8*, i8*), void (%"class.vk::PhysicalDevice"*, i8*, i8*)* @_ZN2vk14PhysicalDeviceC2EPKvPv

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP10VkBuffer_TEcvPvEv(%class.VkNonDispatchableHandle*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP10VkBuffer_TEaSEm(%class.VkNonDispatchableHandle*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle, %class.VkNonDispatchableHandle* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP9VkImage_TEcvPvEv(%class.VkNonDispatchableHandle.0*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.0* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP9VkImage_TEaSEm(%class.VkNonDispatchableHandle.0*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.0, %class.VkNonDispatchableHandle.0* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP13VkSemaphore_TEcvPvEv(%class.VkNonDispatchableHandle.1*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.1* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP13VkSemaphore_TEaSEm(%class.VkNonDispatchableHandle.1*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.1, %class.VkNonDispatchableHandle.1* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP9VkFence_TEcvPvEv(%class.VkNonDispatchableHandle.2*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.2* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP9VkFence_TEaSEm(%class.VkNonDispatchableHandle.2*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.2, %class.VkNonDispatchableHandle.2* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP16VkDeviceMemory_TEcvPvEv(%class.VkNonDispatchableHandle.3*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.3* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP16VkDeviceMemory_TEaSEm(%class.VkNonDispatchableHandle.3*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.3, %class.VkNonDispatchableHandle.3* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP9VkEvent_TEcvPvEv(%class.VkNonDispatchableHandle.4*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.4* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP9VkEvent_TEaSEm(%class.VkNonDispatchableHandle.4*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.4, %class.VkNonDispatchableHandle.4* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP13VkQueryPool_TEcvPvEv(%class.VkNonDispatchableHandle.5*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.5* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP13VkQueryPool_TEaSEm(%class.VkNonDispatchableHandle.5*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.5, %class.VkNonDispatchableHandle.5* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP14VkBufferView_TEcvPvEv(%class.VkNonDispatchableHandle.6*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.6* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP14VkBufferView_TEaSEm(%class.VkNonDispatchableHandle.6*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.6, %class.VkNonDispatchableHandle.6* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP13VkImageView_TEcvPvEv(%class.VkNonDispatchableHandle.7*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.7* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP13VkImageView_TEaSEm(%class.VkNonDispatchableHandle.7*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.7, %class.VkNonDispatchableHandle.7* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP16VkShaderModule_TEcvPvEv(%class.VkNonDispatchableHandle.8*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.8* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP16VkShaderModule_TEaSEm(%class.VkNonDispatchableHandle.8*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.8, %class.VkNonDispatchableHandle.8* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP17VkPipelineCache_TEcvPvEv(%class.VkNonDispatchableHandle.9*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.9* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP17VkPipelineCache_TEaSEm(%class.VkNonDispatchableHandle.9*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.9, %class.VkNonDispatchableHandle.9* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP18VkPipelineLayout_TEcvPvEv(%class.VkNonDispatchableHandle.10*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.10* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP18VkPipelineLayout_TEaSEm(%class.VkNonDispatchableHandle.10*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.10, %class.VkNonDispatchableHandle.10* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP12VkPipeline_TEcvPvEv(%class.VkNonDispatchableHandle.11*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.11* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP12VkPipeline_TEaSEm(%class.VkNonDispatchableHandle.11*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.11, %class.VkNonDispatchableHandle.11* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP14VkRenderPass_TEcvPvEv(%class.VkNonDispatchableHandle.12*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.12* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP14VkRenderPass_TEaSEm(%class.VkNonDispatchableHandle.12*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.12, %class.VkNonDispatchableHandle.12* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP23VkDescriptorSetLayout_TEcvPvEv(%class.VkNonDispatchableHandle.13*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.13* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP23VkDescriptorSetLayout_TEaSEm(%class.VkNonDispatchableHandle.13*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.13, %class.VkNonDispatchableHandle.13* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP11VkSampler_TEcvPvEv(%class.VkNonDispatchableHandle.14*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.14* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP11VkSampler_TEaSEm(%class.VkNonDispatchableHandle.14*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.14, %class.VkNonDispatchableHandle.14* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP17VkDescriptorSet_TEcvPvEv(%class.VkNonDispatchableHandle.15*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.15* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP17VkDescriptorSet_TEaSEm(%class.VkNonDispatchableHandle.15*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.15, %class.VkNonDispatchableHandle.15* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP18VkDescriptorPool_TEcvPvEv(%class.VkNonDispatchableHandle.16*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.16* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP18VkDescriptorPool_TEaSEm(%class.VkNonDispatchableHandle.16*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.16, %class.VkNonDispatchableHandle.16* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP15VkFramebuffer_TEcvPvEv(%class.VkNonDispatchableHandle.17*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.17* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP15VkFramebuffer_TEaSEm(%class.VkNonDispatchableHandle.17*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.17, %class.VkNonDispatchableHandle.17* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP15VkCommandPool_TEcvPvEv(%class.VkNonDispatchableHandle.18*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.18* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP15VkCommandPool_TEaSEm(%class.VkNonDispatchableHandle.18*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.18, %class.VkNonDispatchableHandle.18* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP26VkSamplerYcbcrConversion_TEcvPvEv(%class.VkNonDispatchableHandle.19*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.19* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP26VkSamplerYcbcrConversion_TEaSEm(%class.VkNonDispatchableHandle.19*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.19, %class.VkNonDispatchableHandle.19* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP28VkDescriptorUpdateTemplate_TEcvPvEv(%class.VkNonDispatchableHandle.20*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.20* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP28VkDescriptorUpdateTemplate_TEaSEm(%class.VkNonDispatchableHandle.20*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.20, %class.VkNonDispatchableHandle.20* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP14VkSurfaceKHR_TEcvPvEv(%class.VkNonDispatchableHandle.21*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.21* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP14VkSurfaceKHR_TEaSEm(%class.VkNonDispatchableHandle.21*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.21, %class.VkNonDispatchableHandle.21* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP16VkSwapchainKHR_TEcvPvEv(%class.VkNonDispatchableHandle.22*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.22* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP16VkSwapchainKHR_TEaSEm(%class.VkNonDispatchableHandle.22*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.22, %class.VkNonDispatchableHandle.22* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP14VkDisplayKHR_TEcvPvEv(%class.VkNonDispatchableHandle.23*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.23* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP14VkDisplayKHR_TEaSEm(%class.VkNonDispatchableHandle.23*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.23, %class.VkNonDispatchableHandle.23* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP18VkDisplayModeKHR_TEcvPvEv(%class.VkNonDispatchableHandle.24*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.24* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP18VkDisplayModeKHR_TEaSEm(%class.VkNonDispatchableHandle.24*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.24, %class.VkNonDispatchableHandle.24* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP24VkDeferredOperationKHR_TEcvPvEv(%class.VkNonDispatchableHandle.25*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.25* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP24VkDeferredOperationKHR_TEaSEm(%class.VkNonDispatchableHandle.25*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.25, %class.VkNonDispatchableHandle.25* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP26VkDebugReportCallbackEXT_TEcvPvEv(%class.VkNonDispatchableHandle.26*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.26* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP26VkDebugReportCallbackEXT_TEaSEm(%class.VkNonDispatchableHandle.26*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.26, %class.VkNonDispatchableHandle.26* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP15VkCuModuleNVX_TEcvPvEv(%class.VkNonDispatchableHandle.27*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.27* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP15VkCuModuleNVX_TEaSEm(%class.VkNonDispatchableHandle.27*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.27, %class.VkNonDispatchableHandle.27* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP17VkCuFunctionNVX_TEcvPvEv(%class.VkNonDispatchableHandle.28*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.28* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP17VkCuFunctionNVX_TEaSEm(%class.VkNonDispatchableHandle.28*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.28, %class.VkNonDispatchableHandle.28* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP26VkDebugUtilsMessengerEXT_TEcvPvEv(%class.VkNonDispatchableHandle.29*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.29* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP26VkDebugUtilsMessengerEXT_TEaSEm(%class.VkNonDispatchableHandle.29*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.29, %class.VkNonDispatchableHandle.29* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP22VkValidationCacheEXT_TEcvPvEv(%class.VkNonDispatchableHandle.30*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.30* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP22VkValidationCacheEXT_TEaSEm(%class.VkNonDispatchableHandle.30*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.30, %class.VkNonDispatchableHandle.30* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP27VkAccelerationStructureNV_TEcvPvEv(%class.VkNonDispatchableHandle.31*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.31* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP27VkAccelerationStructureNV_TEaSEm(%class.VkNonDispatchableHandle.31*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.31, %class.VkNonDispatchableHandle.31* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP33VkPerformanceConfigurationINTEL_TEcvPvEv(%class.VkNonDispatchableHandle.32*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.32* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP33VkPerformanceConfigurationINTEL_TEaSEm(%class.VkNonDispatchableHandle.32*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.32, %class.VkNonDispatchableHandle.32* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP28VkIndirectCommandsLayoutNV_TEcvPvEv(%class.VkNonDispatchableHandle.33*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.33* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP28VkIndirectCommandsLayoutNV_TEaSEm(%class.VkNonDispatchableHandle.33*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.33, %class.VkNonDispatchableHandle.33* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP22VkPrivateDataSlotEXT_TEcvPvEv(%class.VkNonDispatchableHandle.34*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.34* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP22VkPrivateDataSlotEXT_TEaSEm(%class.VkNonDispatchableHandle.34*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.34, %class.VkNonDispatchableHandle.34* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP28VkAccelerationStructureKHR_TEcvPvEv(%class.VkNonDispatchableHandle.35*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.35* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP28VkAccelerationStructureKHR_TEaSEm(%class.VkNonDispatchableHandle.35*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.35, %class.VkNonDispatchableHandle.35* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZN2vk14PhysicalDeviceC2EPKvPv(%"class.vk::PhysicalDevice"* nocapture, i8* nocapture, i8* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden nonnull dereferenceable(220) %struct.VkPhysicalDeviceFeatures* @_ZNK2vk14PhysicalDevice11getFeaturesEv(%"class.vk::PhysicalDevice"* nocapture readnone) local_unnamed_addr #1 align 2 {
  ret %struct.VkPhysicalDeviceFeatures* @_ZZNK2vk14PhysicalDevice11getFeaturesEvE8features
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZNK2vk14PhysicalDevice12getFeatures2EP25VkPhysicalDeviceFeatures2(%"class.vk::PhysicalDevice"* nocapture readnone, %struct.VkPhysicalDeviceFeatures2* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures2, %struct.VkPhysicalDeviceFeatures2* %1, i64 0, i32 2
  %4 = bitcast %struct.VkPhysicalDeviceFeatures* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 4 bitcast (%struct.VkPhysicalDeviceFeatures* @_ZZNK2vk14PhysicalDevice11getFeaturesEvE8features to i8*), i64 220, i1 false)
  %5 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures2, %struct.VkPhysicalDeviceFeatures2* %1, i64 0, i32 1
  %6 = bitcast i8** %5 to %struct.VkBaseOutStructure**
  %7 = load %struct.VkBaseOutStructure*, %struct.VkBaseOutStructure** %6, align 8
  %8 = icmp eq %struct.VkBaseOutStructure* %7, null
  br i1 %8, label %114, label %9

9:                                                ; preds = %2, %110
  %10 = phi %struct.VkBaseOutStructure* [ %112, %110 ], [ %7, %2 ]
  %11 = getelementptr inbounds %struct.VkBaseOutStructure, %struct.VkBaseOutStructure* %10, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  switch i32 %12, label %110 [
    i32 49, label %13
    i32 51, label %23
    i32 1000053001, label %36
    i32 1000120000, label %42
    i32 1000083000, label %46
    i32 1000156004, label %49
    i32 1000145001, label %51
    i32 1000063000, label %53
    i32 1000261000, label %55
    i32 1000335000, label %57
    i32 1000259000, label %59
    i32 1000241000, label %65
    i32 1000177000, label %67
    i32 1000254000, label %73
    i32 1000108000, label %75
    i32 1000175000, label %77
    i32 1000221000, label %79
    i32 1000253000, label %81
    i32 1000211000, label %83
    i32 1000207000, label %89
    i32 1000180000, label %91
    i32 1000082000, label %95
    i32 1000257000, label %99
    i32 1000161001, label %105
    i32 1000102000, label %108
  ]

13:                                               ; preds = %9
  %14 = bitcast %struct.VkBaseOutStructure* %10 to %struct.VkPhysicalDeviceVulkan11Features*
  %15 = getelementptr inbounds %struct.VkBaseOutStructure, %struct.VkBaseOutStructure* %10, i64 1, i32 0
  %16 = bitcast i32* %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #10
  %17 = getelementptr inbounds %struct.VkBaseOutStructure, %struct.VkBaseOutStructure* %10, i64 2, i32 0
  store i32 1, i32* %17, align 8
  %18 = getelementptr inbounds %struct.VkPhysicalDeviceVulkan11Features, %struct.VkPhysicalDeviceVulkan11Features* %14, i64 0, i32 7
  %19 = getelementptr inbounds %struct.VkBaseOutStructure, %struct.VkBaseOutStructure* %10, i64 3, i32 1
  %20 = bitcast %struct.VkBaseOutStructure** %19 to i32*
  %21 = bitcast i32* %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %21, i8 0, i64 20, i1 false) #10
  store i32 1, i32* %20, align 8
  %22 = getelementptr inbounds %struct.VkPhysicalDeviceVulkan11Features, %struct.VkPhysicalDeviceVulkan11Features* %14, i64 0, i32 13
  store i32 0, i32* %22, align 4
  br label %110

23:                                               ; preds = %9
  %24 = bitcast %struct.VkBaseOutStructure* %10 to %struct.VkPhysicalDeviceVulkan12Features*
  %25 = getelementptr inbounds %struct.VkBaseOutStructure, %struct.VkBaseOutStructure* %10, i64 1, i32 0
  %26 = getelementptr inbounds %struct.VkPhysicalDeviceVulkan12Features, %struct.VkPhysicalDeviceVulkan12Features* %24, i64 0, i32 33
  %27 = bitcast i32* %25 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 124, i1 false) #10
  %28 = bitcast i32* %26 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %28, align 4
  %29 = getelementptr inbounds %struct.VkPhysicalDeviceVulkan12Features, %struct.VkPhysicalDeviceVulkan12Features* %24, i64 0, i32 37
  store i32 1, i32* %29, align 4
  %30 = getelementptr inbounds %struct.VkBaseOutStructure, %struct.VkBaseOutStructure* %10, i64 10, i32 0
  store i32 1, i32* %30, align 8
  %31 = getelementptr inbounds %struct.VkPhysicalDeviceVulkan12Features, %struct.VkPhysicalDeviceVulkan12Features* %24, i64 0, i32 39
  store i32 1, i32* %31, align 4
  %32 = getelementptr inbounds %struct.VkBaseOutStructure, %struct.VkBaseOutStructure* %10, i64 10, i32 1
  %33 = getelementptr inbounds %struct.VkBaseOutStructure, %struct.VkBaseOutStructure* %10, i64 12, i32 1
  %34 = bitcast %struct.VkBaseOutStructure** %33 to i32*
  %35 = bitcast %struct.VkBaseOutStructure** %32 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 32, i1 false) #10
  store i32 1, i32* %34, align 8
  br label %110

36:                                               ; preds = %9
  %37 = bitcast %struct.VkBaseOutStructure* %10 to %struct.VkPhysicalDeviceMultiviewFeatures*
  %38 = getelementptr inbounds %struct.VkBaseOutStructure, %struct.VkBaseOutStructure* %10, i64 1, i32 0
  store i32 1, i32* %38, align 8
  %39 = getelementptr inbounds %struct.VkPhysicalDeviceMultiviewFeatures, %struct.VkPhysicalDeviceMultiviewFeatures* %37, i64 0, i32 3
  store i32 0, i32* %39, align 4
  %40 = getelementptr inbounds %struct.VkBaseOutStructure, %struct.VkBaseOutStructure* %10, i64 1, i32 1
  %41 = bitcast %struct.VkBaseOutStructure** %40 to i32*
  store i32 0, i32* %41, align 8
  br label %110

42:                                               ; preds = %9
  %43 = bitcast %struct.VkBaseOutStructure* %10 to %struct.VkPhysicalDeviceVariablePointersFeatures*
  %44 = getelementptr inbounds %struct.VkBaseOutStructure, %struct.VkBaseOutStructure* %10, i64 1, i32 0
  store i32 0, i32* %44, align 8
  %45 = getelementptr inbounds %struct.VkPhysicalDeviceVariablePointersFeatures, %struct.VkPhysicalDeviceVariablePointersFeatures* %43, i64 0, i32 3
  store i32 0, i32* %45, align 4
  br label %110

46:                                               ; preds = %9
  %47 = getelementptr inbounds %struct.VkBaseOutStructure, %struct.VkBaseOutStructure* %10, i64 1, i32 0
  %48 = bitcast i32* %47 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 16, i1 false) #10
  br label %110

49:                                               ; preds = %9
  %50 = getelementptr inbounds %struct.VkBaseOutStructure, %struct.VkBaseOutStructure* %10, i64 1, i32 0
  store i32 1, i32* %50, align 8
  br label %110

51:                                               ; preds = %9
  %52 = getelementptr inbounds %struct.VkBaseOutStructure, %struct.VkBaseOutStructure* %10, i64 1, i32 0
  store i32 0, i32* %52, align 8
  br label %110

53:                                               ; preds = %9
  %54 = getelementptr inbounds %struct.VkBaseOutStructure, %struct.VkBaseOutStructure* %10, i64 1, i32 0
  store i32 0, i32* %54, align 8
  br label %110

55:                                               ; preds = %9
  %56 = getelementptr inbounds %struct.VkBaseOutStructure, %struct.VkBaseOutStructure* %10, i64 1, i32 0
  store i32 1, i32* %56, align 8
  br label %110

57:                                               ; preds = %9
  %58 = getelementptr inbounds %struct.VkBaseOutStructure, %struct.VkBaseOutStructure* %10, i64 1, i32 0
  store i32 1, i32* %58, align 8
  br label %110

59:                                               ; preds = %9
  %60 = bitcast %struct.VkBaseOutStructure* %10 to %struct.VkPhysicalDeviceLineRasterizationFeaturesEXT*
  %61 = getelementptr inbounds %struct.VkBaseOutStructure, %struct.VkBaseOutStructure* %10, i64 1, i32 0
  store i32 1, i32* %61, align 8
  %62 = getelementptr inbounds %struct.VkPhysicalDeviceLineRasterizationFeaturesEXT, %struct.VkPhysicalDeviceLineRasterizationFeaturesEXT* %60, i64 0, i32 3
  store i32 1, i32* %62, align 4
  %63 = getelementptr inbounds %struct.VkBaseOutStructure, %struct.VkBaseOutStructure* %10, i64 1, i32 1
  %64 = bitcast %struct.VkBaseOutStructure** %63 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 16, i1 false) #10
  br label %110

65:                                               ; preds = %9
  %66 = getelementptr inbounds %struct.VkBaseOutStructure, %struct.VkBaseOutStructure* %10, i64 1, i32 0
  store i32 1, i32* %66, align 8
  br label %110

67:                                               ; preds = %9
  %68 = bitcast %struct.VkBaseOutStructure* %10 to %struct.VkPhysicalDevice8BitStorageFeatures*
  %69 = getelementptr inbounds %struct.VkBaseOutStructure, %struct.VkBaseOutStructure* %10, i64 1, i32 0
  store i32 0, i32* %69, align 8
  %70 = getelementptr inbounds %struct.VkPhysicalDevice8BitStorageFeatures, %struct.VkPhysicalDevice8BitStorageFeatures* %68, i64 0, i32 3
  store i32 0, i32* %70, align 4
  %71 = getelementptr inbounds %struct.VkBaseOutStructure, %struct.VkBaseOutStructure* %10, i64 1, i32 1
  %72 = bitcast %struct.VkBaseOutStructure** %71 to i32*
  store i32 0, i32* %72, align 8
  br label %110

73:                                               ; preds = %9
  %74 = getelementptr inbounds %struct.VkBaseOutStructure, %struct.VkBaseOutStructure* %10, i64 1, i32 0
  store i32 1, i32* %74, align 8
  br label %110

75:                                               ; preds = %9
  %76 = getelementptr inbounds %struct.VkBaseOutStructure, %struct.VkBaseOutStructure* %10, i64 1, i32 0
  store i32 1, i32* %76, align 8
  br label %110

77:                                               ; preds = %9
  %78 = getelementptr inbounds %struct.VkBaseOutStructure, %struct.VkBaseOutStructure* %10, i64 1, i32 0
  store i32 1, i32* %78, align 8
  br label %110

79:                                               ; preds = %9
  %80 = getelementptr inbounds %struct.VkBaseOutStructure, %struct.VkBaseOutStructure* %10, i64 1, i32 0
  store i32 1, i32* %80, align 8
  br label %110

81:                                               ; preds = %9
  %82 = getelementptr inbounds %struct.VkBaseOutStructure, %struct.VkBaseOutStructure* %10, i64 1, i32 0
  store i32 1, i32* %82, align 8
  br label %110

83:                                               ; preds = %9
  %84 = bitcast %struct.VkBaseOutStructure* %10 to %struct.VkPhysicalDeviceVulkanMemoryModelFeatures*
  %85 = getelementptr inbounds %struct.VkBaseOutStructure, %struct.VkBaseOutStructure* %10, i64 1, i32 0
  store i32 0, i32* %85, align 8
  %86 = getelementptr inbounds %struct.VkPhysicalDeviceVulkanMemoryModelFeatures, %struct.VkPhysicalDeviceVulkanMemoryModelFeatures* %84, i64 0, i32 3
  store i32 0, i32* %86, align 4
  %87 = getelementptr inbounds %struct.VkBaseOutStructure, %struct.VkBaseOutStructure* %10, i64 1, i32 1
  %88 = bitcast %struct.VkBaseOutStructure** %87 to i32*
  store i32 0, i32* %88, align 8
  br label %110

89:                                               ; preds = %9
  %90 = getelementptr inbounds %struct.VkBaseOutStructure, %struct.VkBaseOutStructure* %10, i64 1, i32 0
  store i32 1, i32* %90, align 8
  br label %110

91:                                               ; preds = %9
  %92 = bitcast %struct.VkBaseOutStructure* %10 to %struct.VkPhysicalDeviceShaderAtomicInt64Features*
  %93 = getelementptr inbounds %struct.VkBaseOutStructure, %struct.VkBaseOutStructure* %10, i64 1, i32 0
  store i32 0, i32* %93, align 8
  %94 = getelementptr inbounds %struct.VkPhysicalDeviceShaderAtomicInt64Features, %struct.VkPhysicalDeviceShaderAtomicInt64Features* %92, i64 0, i32 3
  store i32 0, i32* %94, align 4
  br label %110

95:                                               ; preds = %9
  %96 = bitcast %struct.VkBaseOutStructure* %10 to %struct.VkPhysicalDeviceShaderFloat16Int8Features*
  %97 = getelementptr inbounds %struct.VkBaseOutStructure, %struct.VkBaseOutStructure* %10, i64 1, i32 0
  store i32 0, i32* %97, align 8
  %98 = getelementptr inbounds %struct.VkPhysicalDeviceShaderFloat16Int8Features, %struct.VkPhysicalDeviceShaderFloat16Int8Features* %96, i64 0, i32 3
  store i32 0, i32* %98, align 4
  br label %110

99:                                               ; preds = %9
  %100 = bitcast %struct.VkBaseOutStructure* %10 to %struct.VkPhysicalDeviceBufferDeviceAddressFeatures*
  %101 = getelementptr inbounds %struct.VkBaseOutStructure, %struct.VkBaseOutStructure* %10, i64 1, i32 0
  store i32 0, i32* %101, align 8
  %102 = getelementptr inbounds %struct.VkPhysicalDeviceBufferDeviceAddressFeatures, %struct.VkPhysicalDeviceBufferDeviceAddressFeatures* %100, i64 0, i32 3
  store i32 0, i32* %102, align 4
  %103 = getelementptr inbounds %struct.VkBaseOutStructure, %struct.VkBaseOutStructure* %10, i64 1, i32 1
  %104 = bitcast %struct.VkBaseOutStructure** %103 to i32*
  store i32 0, i32* %104, align 8
  br label %110

105:                                              ; preds = %9
  %106 = getelementptr inbounds %struct.VkBaseOutStructure, %struct.VkBaseOutStructure* %10, i64 1, i32 0
  %107 = bitcast i32* %106 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %107, i8 0, i64 80, i1 false) #10
  br label %110

108:                                              ; preds = %9
  %109 = getelementptr inbounds %struct.VkBaseOutStructure, %struct.VkBaseOutStructure* %10, i64 1, i32 0
  store i32 1, i32* %109, align 8
  br label %110

110:                                              ; preds = %9, %108, %105, %99, %95, %91, %89, %83, %81, %79, %77, %75, %73, %67, %65, %59, %57, %55, %53, %51, %49, %46, %42, %36, %23, %13
  %111 = getelementptr inbounds %struct.VkBaseOutStructure, %struct.VkBaseOutStructure* %10, i64 0, i32 1
  %112 = load %struct.VkBaseOutStructure*, %struct.VkBaseOutStructure** %111, align 8
  %113 = icmp eq %struct.VkBaseOutStructure* %112, null
  br i1 %113, label %114, label %9

114:                                              ; preds = %110, %2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden i32 @_ZNK2vk14PhysicalDevice15getSampleCountsEv(%"class.vk::PhysicalDevice"* nocapture readnone) local_unnamed_addr #1 align 2 {
  ret i32 5
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden nonnull dereferenceable(504) %struct.VkPhysicalDeviceLimits* @_ZNK2vk14PhysicalDevice9getLimitsEv(%"class.vk::PhysicalDevice"* nocapture readnone) local_unnamed_addr #0 align 2 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZNK2vk14PhysicalDevice9getLimitsEvE6limits to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %9, !prof !2

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK2vk14PhysicalDevice9getLimitsEvE6limits) #10
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %4
  store <4 x i32> <i32 8192, i32 8192, i32 1024, i32 8192>, <4 x i32>* bitcast (%struct.VkPhysicalDeviceLimits* @_ZZNK2vk14PhysicalDevice9getLimitsEvE6limits to <4 x i32>*), align 16
  store <4 x i32> <i32 2048, i32 65536, i32 16384, i32 134217728>, <4 x i32>* bitcast (i32* getelementptr inbounds (%struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* @_ZZNK2vk14PhysicalDevice9getLimitsEvE6limits, i64 0, i32 4) to <4 x i32>*), align 16
  store i32 128, i32* getelementptr inbounds (%struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* @_ZZNK2vk14PhysicalDevice9getLimitsEvE6limits, i64 0, i32 8), align 16
  store i32 4096, i32* getelementptr inbounds (%struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* @_ZZNK2vk14PhysicalDevice9getLimitsEvE6limits, i64 0, i32 9), align 4
  store i32 4000, i32* getelementptr inbounds (%struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* @_ZZNK2vk14PhysicalDevice9getLimitsEvE6limits, i64 0, i32 10), align 8
  store <2 x i64> <i64 131072, i64 0>, <2 x i64>* bitcast (i64* getelementptr inbounds (%struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* @_ZZNK2vk14PhysicalDevice9getLimitsEvE6limits, i64 0, i32 11) to <2 x i64>*), align 16
  store i32 4, i32* getelementptr inbounds (%struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* @_ZZNK2vk14PhysicalDevice9getLimitsEvE6limits, i64 0, i32 13), align 16
  store i32 16, i32* getelementptr inbounds (%struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* @_ZZNK2vk14PhysicalDevice9getLimitsEvE6limits, i64 0, i32 14), align 4
  store i32 14, i32* getelementptr inbounds (%struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* @_ZZNK2vk14PhysicalDevice9getLimitsEvE6limits, i64 0, i32 15), align 8
  store <4 x i32> <i32 16, i32 16, i32 4, i32 8>, <4 x i32>* bitcast (i32* getelementptr inbounds (%struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* @_ZZNK2vk14PhysicalDevice9getLimitsEvE6limits, i64 0, i32 16) to <4 x i32>*), align 4
  store <4 x i32> <i32 128, i32 96, i32 72, i32 8>, <4 x i32>* bitcast (i32* getelementptr inbounds (%struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* @_ZZNK2vk14PhysicalDevice9getLimitsEvE6limits, i64 0, i32 20) to <4 x i32>*), align 4
  store <4 x i32> <i32 24, i32 4, i32 96, i32 24>, <4 x i32>* bitcast (i32* getelementptr inbounds (%struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* @_ZZNK2vk14PhysicalDevice9getLimitsEvE6limits, i64 0, i32 24) to <4 x i32>*), align 4
  store <4 x i32> <i32 8, i32 16, i32 16, i32 2047>, <4 x i32>* bitcast (i32* getelementptr inbounds (%struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* @_ZZNK2vk14PhysicalDevice9getLimitsEvE6limits, i64 0, i32 28) to <4 x i32>*), align 4
  store i32 2048, i32* getelementptr inbounds (%struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* @_ZZNK2vk14PhysicalDevice9getLimitsEvE6limits, i64 0, i32 32), align 4
  store i32 128, i32* getelementptr inbounds (%struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* @_ZZNK2vk14PhysicalDevice9getLimitsEvE6limits, i64 0, i32 33), align 16
  call void @llvm.memset.p0i8.i64(i8* align 4 bitcast (i32* getelementptr inbounds (%struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* @_ZZNK2vk14PhysicalDevice9getLimitsEvE6limits, i64 0, i32 34) to i8*), i8 0, i64 52, i1 false)
  store <4 x i32> <i32 128, i32 8, i32 1, i32 4>, <4 x i32>* bitcast (i32* getelementptr inbounds (%struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* @_ZZNK2vk14PhysicalDevice9getLimitsEvE6limits, i64 0, i32 47) to <4 x i32>*), align 8
  store <4 x i32> <i32 16384, i32 65535, i32 65535, i32 65535>, <4 x i32>* bitcast (i32* getelementptr inbounds (%struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* @_ZZNK2vk14PhysicalDevice9getLimitsEvE6limits, i64 0, i32 51) to <4 x i32>*), align 8
  store <4 x i32> <i32 128, i32 128, i32 128, i32 64>, <4 x i32>* bitcast (i32* getelementptr inbounds (%struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* @_ZZNK2vk14PhysicalDevice9getLimitsEvE6limits, i64 0, i32 53) to <4 x i32>*), align 8
  store i32 4, i32* getelementptr inbounds (%struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* @_ZZNK2vk14PhysicalDevice9getLimitsEvE6limits, i64 0, i32 55), align 8
  store i32 4, i32* getelementptr inbounds (%struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* @_ZZNK2vk14PhysicalDevice9getLimitsEvE6limits, i64 0, i32 56), align 4
  store i32 4, i32* getelementptr inbounds (%struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* @_ZZNK2vk14PhysicalDevice9getLimitsEvE6limits, i64 0, i32 57), align 16
  store i32 -1, i32* getelementptr inbounds (%struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* @_ZZNK2vk14PhysicalDevice9getLimitsEvE6limits, i64 0, i32 58), align 4
  store i32 -1, i32* getelementptr inbounds (%struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* @_ZZNK2vk14PhysicalDevice9getLimitsEvE6limits, i64 0, i32 59), align 8
  store float 1.500000e+01, float* getelementptr inbounds (%struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* @_ZZNK2vk14PhysicalDevice9getLimitsEvE6limits, i64 0, i32 60), align 4
  store float 1.600000e+01, float* getelementptr inbounds (%struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* @_ZZNK2vk14PhysicalDevice9getLimitsEvE6limits, i64 0, i32 61), align 16
  store i32 16, i32* getelementptr inbounds (%struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* @_ZZNK2vk14PhysicalDevice9getLimitsEvE6limits, i64 0, i32 62), align 4
  store i32 4096, i32* getelementptr inbounds (%struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* @_ZZNK2vk14PhysicalDevice9getLimitsEvE6limits, i64 0, i32 63, i64 0), align 8
  store i32 4096, i32* getelementptr inbounds (%struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* @_ZZNK2vk14PhysicalDevice9getLimitsEvE6limits, i64 0, i32 63, i64 1), align 4
  store float -8.192000e+03, float* getelementptr inbounds (%struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* @_ZZNK2vk14PhysicalDevice9getLimitsEvE6limits, i64 0, i32 64, i64 0), align 16
  store float 8.191000e+03, float* getelementptr inbounds (%struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* @_ZZNK2vk14PhysicalDevice9getLimitsEvE6limits, i64 0, i32 64, i64 1), align 4
  store i32 0, i32* getelementptr inbounds (%struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* @_ZZNK2vk14PhysicalDevice9getLimitsEvE6limits, i64 0, i32 65), align 8
  store <2 x i64> <i64 64, i64 256>, <2 x i64>* bitcast (i64* getelementptr inbounds (%struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* @_ZZNK2vk14PhysicalDevice9getLimitsEvE6limits, i64 0, i32 66) to <2 x i64>*), align 16
  store <2 x i64> <i64 256, i64 256>, <2 x i64>* bitcast (i64* getelementptr inbounds (%struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* @_ZZNK2vk14PhysicalDevice9getLimitsEvE6limits, i64 0, i32 68) to <2 x i64>*), align 16
  store i32 -8, i32* getelementptr inbounds (%struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* @_ZZNK2vk14PhysicalDevice9getLimitsEvE6limits, i64 0, i32 70), align 16
  store i32 7, i32* getelementptr inbounds (%struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* @_ZZNK2vk14PhysicalDevice9getLimitsEvE6limits, i64 0, i32 71), align 4
  store i32 -8, i32* getelementptr inbounds (%struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* @_ZZNK2vk14PhysicalDevice9getLimitsEvE6limits, i64 0, i32 72), align 8
  store i32 7, i32* getelementptr inbounds (%struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* @_ZZNK2vk14PhysicalDevice9getLimitsEvE6limits, i64 0, i32 73), align 4
  store float -5.000000e-01, float* getelementptr inbounds (%struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* @_ZZNK2vk14PhysicalDevice9getLimitsEvE6limits, i64 0, i32 74), align 16
  store float 5.000000e-01, float* getelementptr inbounds (%struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* @_ZZNK2vk14PhysicalDevice9getLimitsEvE6limits, i64 0, i32 75), align 4
  store <4 x i32> <i32 4, i32 4096, i32 4096, i32 256>, <4 x i32>* bitcast (i32* getelementptr inbounds (%struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* @_ZZNK2vk14PhysicalDevice9getLimitsEvE6limits, i64 0, i32 76) to <4 x i32>*), align 8
  store <4 x i32> <i32 5, i32 5, i32 5, i32 5>, <4 x i32>* bitcast (i32* getelementptr inbounds (%struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* @_ZZNK2vk14PhysicalDevice9getLimitsEvE6limits, i64 0, i32 80) to <4 x i32>*), align 8
  store i32 8, i32* getelementptr inbounds (%struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* @_ZZNK2vk14PhysicalDevice9getLimitsEvE6limits, i64 0, i32 84), align 8
  store i32 5, i32* getelementptr inbounds (%struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* @_ZZNK2vk14PhysicalDevice9getLimitsEvE6limits, i64 0, i32 85), align 4
  store i32 5, i32* getelementptr inbounds (%struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* @_ZZNK2vk14PhysicalDevice9getLimitsEvE6limits, i64 0, i32 86), align 16
  store <4 x i32> <i32 5, i32 5, i32 5, i32 1>, <4 x i32>* bitcast (i32* getelementptr inbounds (%struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* @_ZZNK2vk14PhysicalDevice9getLimitsEvE6limits, i64 0, i32 87) to <4 x i32>*), align 4
  store i32 1, i32* getelementptr inbounds (%struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* @_ZZNK2vk14PhysicalDevice9getLimitsEvE6limits, i64 0, i32 91), align 4
  store float 1.000000e+00, float* getelementptr inbounds (%struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* @_ZZNK2vk14PhysicalDevice9getLimitsEvE6limits, i64 0, i32 92), align 8
  store <4 x i32> <i32 8, i32 8, i32 16, i32 2>, <4 x i32>* bitcast (i32* getelementptr inbounds (%struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* @_ZZNK2vk14PhysicalDevice9getLimitsEvE6limits, i64 0, i32 93) to <4 x i32>*), align 4
  store <4 x float> <float 1.000000e+00, float 1.023000e+03, float 1.000000e+00, float 1.000000e+00>, <4 x float>* bitcast (float* getelementptr inbounds (%struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* @_ZZNK2vk14PhysicalDevice9getLimitsEvE6limits, i64 0, i32 97, i64 0) to <4 x float>*), align 4
  store float 0.000000e+00, float* getelementptr inbounds (%struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* @_ZZNK2vk14PhysicalDevice9getLimitsEvE6limits, i64 0, i32 99), align 4
  store float 0.000000e+00, float* getelementptr inbounds (%struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* @_ZZNK2vk14PhysicalDevice9getLimitsEvE6limits, i64 0, i32 100), align 16
  store i32 1, i32* getelementptr inbounds (%struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* @_ZZNK2vk14PhysicalDevice9getLimitsEvE6limits, i64 0, i32 101), align 4
  store i32 1, i32* getelementptr inbounds (%struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* @_ZZNK2vk14PhysicalDevice9getLimitsEvE6limits, i64 0, i32 102), align 8
  store <2 x i64> <i64 64, i64 64>, <2 x i64>* bitcast (i64* getelementptr inbounds (%struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* @_ZZNK2vk14PhysicalDevice9getLimitsEvE6limits, i64 0, i32 103) to <2 x i64>*), align 16
  store i64 256, i64* getelementptr inbounds (%struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* @_ZZNK2vk14PhysicalDevice9getLimitsEvE6limits, i64 0, i32 105), align 16
  %8 = tail call {}* @llvm.invariant.start.p0i8(i64 504, i8* bitcast (%struct.VkPhysicalDeviceLimits* @_ZZNK2vk14PhysicalDevice9getLimitsEvE6limits to i8*))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZNK2vk14PhysicalDevice9getLimitsEvE6limits) #10
  br label %9

9:                                                ; preds = %4, %7, %1
  ret %struct.VkPhysicalDeviceLimits* @_ZZNK2vk14PhysicalDevice9getLimitsEvE6limits
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare {}* @llvm.invariant.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define hidden nonnull dereferenceable(824) %struct.VkPhysicalDeviceProperties* @_ZNK2vk14PhysicalDevice13getPropertiesEv(%"class.vk::PhysicalDevice"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = load atomic i8, i8* bitcast (i64* @_ZGVZNK2vk14PhysicalDevice13getPropertiesEvE10properties to i8*) acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %25, !prof !2

5:                                                ; preds = %1
  %6 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK2vk14PhysicalDevice13getPropertiesEvE10properties) #10
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %25, label %8

8:                                                ; preds = %5
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast (%struct.VkPhysicalDeviceProperties* @_ZZNK2vk14PhysicalDevice13getPropertiesEvE10properties to i8*), i8* align 8 bitcast ({ i32, i32, i32, i32, i32, [256 x i8], [16 x i8], [4 x i8], { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, [4 x i8], i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, [4 x i8], i64, i64, i64 }, %struct.VkPhysicalDeviceSparseProperties, [4 x i8] }* @"__const._ZZNK2vk14PhysicalDevice13getPropertiesEvENK3$_0clEv.properties" to i8*), i64 824, i1 false) #10
  store <4 x i32> <i32 4202496, i32 20971520, i32 6880, i32 49374>, <4 x i32>* bitcast (%struct.VkPhysicalDeviceProperties* @_ZZNK2vk14PhysicalDevice13getPropertiesEvE10properties to <4 x i32>*), align 16
  store i32 4, i32* getelementptr inbounds (%struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceProperties* @_ZZNK2vk14PhysicalDevice13getPropertiesEvE10properties, i64 0, i32 4), align 16
  tail call void @llvm.memset.p0i8.i64(i8* align 4 getelementptr inbounds (%struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceProperties* @_ZZNK2vk14PhysicalDevice13getPropertiesEvE10properties, i64 0, i32 5, i64 0), i8 0, i64 256, i1 false) #10
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 getelementptr inbounds (%struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceProperties* @_ZZNK2vk14PhysicalDevice13getPropertiesEvE10properties, i64 0, i32 6, i64 0), i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0), i64 16, i1 false) #10
  %9 = tail call dereferenceable(504) %struct.VkPhysicalDeviceLimits* @_ZNK2vk14PhysicalDevice9getLimitsEv(%"class.vk::PhysicalDevice"* undef) #11
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 bitcast (%struct.VkPhysicalDeviceLimits* getelementptr inbounds (%struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceProperties* @_ZZNK2vk14PhysicalDevice13getPropertiesEvE10properties, i64 0, i32 7) to i8*), i8* align 16 bitcast (%struct.VkPhysicalDeviceLimits* @_ZZNK2vk14PhysicalDevice9getLimitsEvE6limits to i8*), i64 504, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 16 bitcast (%struct.VkPhysicalDeviceSparseProperties* getelementptr inbounds (%struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceProperties* @_ZZNK2vk14PhysicalDevice13getPropertiesEvE10properties, i64 0, i32 8) to i8*), i8 0, i64 20, i1 false) #10
  %10 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #10
  call void @_ZN2rr11BackendNameEv(%"class.std::__1::basic_string"* nonnull sret %2) #11
  %11 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = select i1 %14, i8* %16, i8* %10
  %18 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds (%struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceProperties* @_ZZNK2vk14PhysicalDevice13getPropertiesEvE10properties, i64 0, i32 5, i64 0), i64 256, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6, i64 0, i64 0), i8* %17) #11
  %19 = load i8, i8* %12, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %8
  %22 = load i8*, i8** %15, align 8
  call void @_ZdlPv(i8* %22) #12
  br label %23

23:                                               ; preds = %8, %21
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #10
  %24 = call {}* @llvm.invariant.start.p0i8(i64 824, i8* bitcast (%struct.VkPhysicalDeviceProperties* @_ZZNK2vk14PhysicalDevice13getPropertiesEvE10properties to i8*))
  call void @__cxa_guard_release(i64* nonnull @_ZGVZNK2vk14PhysicalDevice13getPropertiesEvE10properties) #10
  br label %25

25:                                               ; preds = %5, %23, %1
  ret %struct.VkPhysicalDeviceProperties* @_ZZNK2vk14PhysicalDevice13getPropertiesEvE10properties
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZNK2vk14PhysicalDevice13getPropertiesEP28VkPhysicalDeviceIDProperties(%"class.vk::PhysicalDevice"* nocapture readnone, %struct.VkPhysicalDeviceIDProperties* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %struct.VkPhysicalDeviceIDProperties, %struct.VkPhysicalDeviceIDProperties* %1, i64 0, i32 2, i64 0
  %4 = getelementptr inbounds %struct.VkPhysicalDeviceIDProperties, %struct.VkPhysicalDeviceIDProperties* %1, i64 0, i32 3, i64 0
  %5 = getelementptr %struct.VkPhysicalDeviceIDProperties, %struct.VkPhysicalDeviceIDProperties* %1, i64 0, i32 2, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false) #10
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0), i64 16, i1 false) #10
  %6 = bitcast i8* %4 to i64*
  store i64 20971520, i64* %6, align 8
  %7 = getelementptr inbounds %struct.VkPhysicalDeviceIDProperties, %struct.VkPhysicalDeviceIDProperties* %1, i64 0, i32 5
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %struct.VkPhysicalDeviceIDProperties, %struct.VkPhysicalDeviceIDProperties* %1, i64 0, i32 6
  store i32 0, i32* %8, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden void @_ZNK2vk14PhysicalDevice13getPropertiesEP38VkPhysicalDeviceMaintenance3Properties(%"class.vk::PhysicalDevice"* nocapture readnone, %struct.VkPhysicalDeviceMaintenance3Properties* nocapture) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %struct.VkPhysicalDeviceMaintenance3Properties, %struct.VkPhysicalDeviceMaintenance3Properties* %1, i64 0, i32 3
  store i64 1073741824, i64* %3, align 8
  %4 = getelementptr inbounds %struct.VkPhysicalDeviceMaintenance3Properties, %struct.VkPhysicalDeviceMaintenance3Properties* %1, i64 0, i32 2
  store i32 1024, i32* %4, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden void @_ZNK2vk14PhysicalDevice13getPropertiesEP35VkPhysicalDeviceMultiviewProperties(%"class.vk::PhysicalDevice"* nocapture readnone, %struct.VkPhysicalDeviceMultiviewProperties* nocapture) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %struct.VkPhysicalDeviceMultiviewProperties, %struct.VkPhysicalDeviceMultiviewProperties* %1, i64 0, i32 2
  store i32 6, i32* %3, align 8
  %4 = getelementptr inbounds %struct.VkPhysicalDeviceMultiviewProperties, %struct.VkPhysicalDeviceMultiviewProperties* %1, i64 0, i32 3
  store i32 134217728, i32* %4, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden void @_ZNK2vk14PhysicalDevice13getPropertiesEP39VkPhysicalDevicePointClippingProperties(%"class.vk::PhysicalDevice"* nocapture readnone, %struct.VkPhysicalDevicePointClippingProperties* nocapture) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %struct.VkPhysicalDevicePointClippingProperties, %struct.VkPhysicalDevicePointClippingProperties* %1, i64 0, i32 2
  store i32 0, i32* %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden void @_ZNK2vk14PhysicalDevice13getPropertiesEP41VkPhysicalDeviceProtectedMemoryProperties(%"class.vk::PhysicalDevice"* nocapture readnone, %struct.VkPhysicalDeviceProtectedMemoryProperties* nocapture) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %struct.VkPhysicalDeviceProtectedMemoryProperties, %struct.VkPhysicalDeviceProtectedMemoryProperties* %1, i64 0, i32 2
  store i32 0, i32* %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden void @_ZNK2vk14PhysicalDevice13getPropertiesEP34VkPhysicalDeviceSubgroupProperties(%"class.vk::PhysicalDevice"* nocapture readnone, %struct.VkPhysicalDeviceSubgroupProperties* nocapture) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %struct.VkPhysicalDeviceSubgroupProperties, %struct.VkPhysicalDeviceSubgroupProperties* %1, i64 0, i32 2
  %4 = bitcast i32* %3 to <4 x i32>*
  store <4 x i32> <i32 4, i32 49, i32 63, i32 0>, <4 x i32>* %4, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZNK2vk14PhysicalDevice13getPropertiesEP34VkPhysicalDeviceVulkan11Properties(%"class.vk::PhysicalDevice"* nocapture readnone, %struct.VkPhysicalDeviceVulkan11Properties* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %struct.VkPhysicalDeviceVulkan11Properties, %struct.VkPhysicalDeviceVulkan11Properties* %1, i64 0, i32 2, i64 0
  %4 = getelementptr inbounds %struct.VkPhysicalDeviceVulkan11Properties, %struct.VkPhysicalDeviceVulkan11Properties* %1, i64 0, i32 3, i64 0
  %5 = getelementptr %struct.VkPhysicalDeviceVulkan11Properties, %struct.VkPhysicalDeviceVulkan11Properties* %1, i64 0, i32 2, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false) #10
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0), i64 16, i1 false) #10
  %6 = bitcast i8* %4 to i64*
  store i64 20971520, i64* %6, align 8
  %7 = getelementptr inbounds %struct.VkPhysicalDeviceVulkan11Properties, %struct.VkPhysicalDeviceVulkan11Properties* %1, i64 0, i32 5
  %8 = bitcast i32* %7 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 4, i32 49>, <4 x i32>* %8, align 8
  %9 = getelementptr inbounds %struct.VkPhysicalDeviceVulkan11Properties, %struct.VkPhysicalDeviceVulkan11Properties* %1, i64 0, i32 9
  %10 = bitcast i32* %9 to <4 x i32>*
  store <4 x i32> <i32 63, i32 0, i32 0, i32 6>, <4 x i32>* %10, align 8
  %11 = getelementptr inbounds %struct.VkPhysicalDeviceVulkan11Properties, %struct.VkPhysicalDeviceVulkan11Properties* %1, i64 0, i32 13
  store i32 134217728, i32* %11, align 8
  %12 = getelementptr inbounds %struct.VkPhysicalDeviceVulkan11Properties, %struct.VkPhysicalDeviceVulkan11Properties* %1, i64 0, i32 14
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds %struct.VkPhysicalDeviceVulkan11Properties, %struct.VkPhysicalDeviceVulkan11Properties* %1, i64 0, i32 16
  store i64 1073741824, i64* %13, align 8
  %14 = getelementptr inbounds %struct.VkPhysicalDeviceVulkan11Properties, %struct.VkPhysicalDeviceVulkan11Properties* %1, i64 0, i32 15
  store i32 1024, i32* %14, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZNK2vk14PhysicalDevice13getPropertiesEPK34VkExternalMemoryHandleTypeFlagBitsP31VkExternalImageFormatProperties(%"class.vk::PhysicalDevice"* nocapture readnone, i32* nocapture readonly, %struct.VkExternalImageFormatProperties* nocapture) local_unnamed_addr #5 align 2 {
  %4 = load i32, i32* %1, align 4
  %5 = icmp eq i32 %4, 1
  %6 = getelementptr inbounds %struct.VkExternalImageFormatProperties, %struct.VkExternalImageFormatProperties* %2, i64 0, i32 2, i32 2
  %7 = zext i1 %5 to i32
  %8 = zext i1 %5 to i32
  %9 = select i1 %5, i32 6, i32 0
  store i32 %7, i32* %6, align 4
  %10 = getelementptr inbounds %struct.VkExternalImageFormatProperties, %struct.VkExternalImageFormatProperties* %2, i64 0, i32 2, i32 1
  store i32 %8, i32* %10, align 4
  %11 = getelementptr inbounds %struct.VkExternalImageFormatProperties, %struct.VkExternalImageFormatProperties* %2, i64 0, i32 2, i32 0
  store i32 %9, i32* %11, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZNK2vk14PhysicalDevice13getPropertiesEPK34VkExternalMemoryHandleTypeFlagBitsP26VkExternalBufferProperties(%"class.vk::PhysicalDevice"* nocapture readnone, i32* nocapture readonly, %struct.VkExternalBufferProperties* nocapture) local_unnamed_addr #5 align 2 {
  %4 = load i32, i32* %1, align 4
  %5 = icmp eq i32 %4, 1
  %6 = getelementptr inbounds %struct.VkExternalBufferProperties, %struct.VkExternalBufferProperties* %2, i64 0, i32 2, i32 2
  %7 = zext i1 %5 to i32
  %8 = zext i1 %5 to i32
  %9 = select i1 %5, i32 6, i32 0
  store i32 %7, i32* %6, align 4
  %10 = getelementptr inbounds %struct.VkExternalBufferProperties, %struct.VkExternalBufferProperties* %2, i64 0, i32 2, i32 1
  store i32 %8, i32* %10, align 4
  %11 = getelementptr inbounds %struct.VkExternalBufferProperties, %struct.VkExternalBufferProperties* %2, i64 0, i32 2, i32 0
  store i32 %9, i32* %11, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden void @_ZNK2vk14PhysicalDevice13getPropertiesEP45VkSamplerYcbcrConversionImageFormatProperties(%"class.vk::PhysicalDevice"* nocapture readnone, %struct.VkSamplerYcbcrConversionImageFormatProperties* nocapture) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %struct.VkSamplerYcbcrConversionImageFormatProperties, %struct.VkSamplerYcbcrConversionImageFormatProperties* %1, i64 0, i32 2
  store i32 1, i32* %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZNK2vk14PhysicalDevice13getPropertiesEPK34VkPhysicalDeviceExternalBufferInfoP26VkExternalBufferProperties(%"class.vk::PhysicalDevice"* nocapture readnone, %struct.VkPhysicalDeviceExternalBufferInfo* nocapture readonly, %struct.VkExternalBufferProperties* nocapture) local_unnamed_addr #5 align 2 {
  %4 = getelementptr inbounds %struct.VkPhysicalDeviceExternalBufferInfo, %struct.VkPhysicalDeviceExternalBufferInfo* %1, i64 0, i32 4
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 1
  %7 = getelementptr inbounds %struct.VkExternalBufferProperties, %struct.VkExternalBufferProperties* %2, i64 0, i32 2, i32 2
  %8 = zext i1 %6 to i32
  %9 = zext i1 %6 to i32
  %10 = select i1 %6, i32 6, i32 0
  store i32 %8, i32* %7, align 4
  %11 = getelementptr inbounds %struct.VkExternalBufferProperties, %struct.VkExternalBufferProperties* %2, i64 0, i32 2, i32 1
  store i32 %9, i32* %11, align 4
  %12 = getelementptr inbounds %struct.VkExternalBufferProperties, %struct.VkExternalBufferProperties* %2, i64 0, i32 2, i32 0
  store i32 %10, i32* %12, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden void @_ZNK2vk14PhysicalDevice13getPropertiesEPK33VkPhysicalDeviceExternalFenceInfoP25VkExternalFenceProperties(%"class.vk::PhysicalDevice"* nocapture readnone, %struct.VkPhysicalDeviceExternalFenceInfo* nocapture readnone, %struct.VkExternalFenceProperties* nocapture) local_unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %struct.VkExternalFenceProperties, %struct.VkExternalFenceProperties* %2, i64 0, i32 3
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %struct.VkExternalFenceProperties, %struct.VkExternalFenceProperties* %2, i64 0, i32 2
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %struct.VkExternalFenceProperties, %struct.VkExternalFenceProperties* %2, i64 0, i32 4
  store i32 0, i32* %6, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZNK2vk14PhysicalDevice13getPropertiesEPK37VkPhysicalDeviceExternalSemaphoreInfoP29VkExternalSemaphoreProperties(%"class.vk::PhysicalDevice"* nocapture readnone, %struct.VkPhysicalDeviceExternalSemaphoreInfo* nocapture readonly, %struct.VkExternalSemaphoreProperties* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %struct.VkPhysicalDeviceExternalSemaphoreInfo, %struct.VkPhysicalDeviceExternalSemaphoreInfo* %1, i64 0, i32 1
  %6 = bitcast i8** %5 to %struct.VkBaseInStructure**
  %7 = load %struct.VkBaseInStructure*, %struct.VkBaseInStructure** %6, align 8
  %8 = icmp eq %struct.VkBaseInStructure* %7, null
  br i1 %8, label %39, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %11 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %14

14:                                               ; preds = %9, %33
  %15 = phi %struct.VkBaseInStructure* [ %7, %9 ], [ %35, %33 ]
  %16 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %15, i64 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 1000207002
  br i1 %18, label %19, label %23

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %15, i64 1, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %37, label %33

23:                                               ; preds = %14
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #10
  call void @_ZN2vk9StringifyE15VkStructureType(%"class.std::__1::basic_string"* nonnull sret %4, i32 %17) #11
  %24 = load i8, i8* %12, align 1
  %25 = icmp slt i8 %24, 0
  %26 = load i8*, i8** %13, align 8
  %27 = select i1 %25, i8* %26, i8* %10
  call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.1, i64 0, i64 0), i32 848, i8* %27) #11
  %28 = load i8, i8* %12, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %23
  %31 = load i8*, i8** %13, align 8
  call void @_ZdlPv(i8* %31) #12
  br label %32

32:                                               ; preds = %23, %30
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #10
  br label %33

33:                                               ; preds = %19, %32
  %34 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %15, i64 0, i32 1
  %35 = load %struct.VkBaseInStructure*, %struct.VkBaseInStructure** %34, align 8
  %36 = icmp eq %struct.VkBaseInStructure* %35, null
  br i1 %36, label %39, label %14

37:                                               ; preds = %19
  %38 = getelementptr inbounds %struct.VkExternalSemaphoreProperties, %struct.VkExternalSemaphoreProperties* %2, i64 0, i32 3
  store i32 0, i32* %38, align 4
  br label %46

39:                                               ; preds = %33, %3
  %40 = getelementptr inbounds %struct.VkPhysicalDeviceExternalSemaphoreInfo, %struct.VkPhysicalDeviceExternalSemaphoreInfo* %1, i64 0, i32 2
  %41 = load i32, i32* %40, align 8
  %42 = icmp eq i32 %41, 1
  %43 = getelementptr inbounds %struct.VkExternalSemaphoreProperties, %struct.VkExternalSemaphoreProperties* %2, i64 0, i32 3
  br i1 %42, label %44, label %45

44:                                               ; preds = %39
  store i32 1, i32* %43, align 4
  br label %46

45:                                               ; preds = %39
  store i32 0, i32* %43, align 4
  br label %46

46:                                               ; preds = %37, %45, %44
  %47 = phi i32 [ 0, %37 ], [ 0, %45 ], [ 1, %44 ]
  %48 = phi i32 [ 0, %37 ], [ 0, %45 ], [ 3, %44 ]
  %49 = getelementptr inbounds %struct.VkExternalSemaphoreProperties, %struct.VkExternalSemaphoreProperties* %2, i64 0, i32 2
  store i32 %47, i32* %49, align 8
  %50 = getelementptr inbounds %struct.VkExternalSemaphoreProperties, %struct.VkExternalSemaphoreProperties* %2, i64 0, i32 4
  store i32 %48, i32* %50, align 8
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw4warnEPKcz(i8*, ...) local_unnamed_addr #6

; Function Attrs: optsize
declare void @_ZN2vk9StringifyE15VkStructureType(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #6

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden void @_ZNK2vk14PhysicalDevice13getPropertiesEP47VkPhysicalDeviceExternalMemoryHostPropertiesEXT(%"class.vk::PhysicalDevice"* nocapture readnone, %struct.VkPhysicalDeviceExternalMemoryHostPropertiesEXT* nocapture) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %struct.VkPhysicalDeviceExternalMemoryHostPropertiesEXT, %struct.VkPhysicalDeviceExternalMemoryHostPropertiesEXT* %1, i64 0, i32 2
  store i64 16, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZNK2vk14PhysicalDevice13getPropertiesEP32VkPhysicalDeviceDriverProperties(%"class.vk::PhysicalDevice"* nocapture readnone, %struct.VkPhysicalDeviceDriverProperties* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %struct.VkPhysicalDeviceDriverProperties, %struct.VkPhysicalDeviceDriverProperties* %1, i64 0, i32 2
  store i32 10, i32* %3, align 8
  %4 = getelementptr inbounds %struct.VkPhysicalDeviceDriverProperties, %struct.VkPhysicalDeviceDriverProperties* %1, i64 0, i32 3, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %4, i8* align 1 getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7, i64 0, i64 0), i64 19, i1 false) #10
  %5 = getelementptr inbounds %struct.VkPhysicalDeviceDriverProperties, %struct.VkPhysicalDeviceDriverProperties* %1, i64 0, i32 4, i64 0
  store i8 0, i8* %5, align 1
  %6 = getelementptr inbounds %struct.VkPhysicalDeviceDriverProperties, %struct.VkPhysicalDeviceDriverProperties* %1, i64 0, i32 5, i32 0
  store i8 1, i8* %6, align 4
  %7 = getelementptr inbounds %struct.VkPhysicalDeviceDriverProperties, %struct.VkPhysicalDeviceDriverProperties* %1, i64 0, i32 5, i32 1
  store i8 1, i8* %7, align 1
  %8 = getelementptr inbounds %struct.VkPhysicalDeviceDriverProperties, %struct.VkPhysicalDeviceDriverProperties* %1, i64 0, i32 5, i32 2
  store i8 3, i8* %8, align 2
  %9 = getelementptr inbounds %struct.VkPhysicalDeviceDriverProperties, %struct.VkPhysicalDeviceDriverProperties* %1, i64 0, i32 5, i32 3
  store i8 3, i8* %9, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden void @_ZNK2vk14PhysicalDevice13getPropertiesEP46VkPhysicalDeviceLineRasterizationPropertiesEXT(%"class.vk::PhysicalDevice"* nocapture readnone, %struct.VkPhysicalDeviceLineRasterizationPropertiesEXT* nocapture) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %struct.VkPhysicalDeviceLineRasterizationPropertiesEXT, %struct.VkPhysicalDeviceLineRasterizationPropertiesEXT* %1, i64 0, i32 2
  store i32 4, i32* %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden void @_ZNK2vk14PhysicalDevice13getPropertiesEP44VkPhysicalDeviceProvokingVertexPropertiesEXT(%"class.vk::PhysicalDevice"* nocapture readnone, %struct.VkPhysicalDeviceProvokingVertexPropertiesEXT* nocapture) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %struct.VkPhysicalDeviceProvokingVertexPropertiesEXT, %struct.VkPhysicalDeviceProvokingVertexPropertiesEXT* %1, i64 0, i32 2
  store i32 1, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZNK2vk14PhysicalDevice13getPropertiesEP39VkPhysicalDeviceFloatControlsProperties(%"class.vk::PhysicalDevice"* nocapture readnone, %struct.VkPhysicalDeviceFloatControlsProperties* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %struct.VkPhysicalDeviceFloatControlsProperties, %struct.VkPhysicalDeviceFloatControlsProperties* %1, i64 0, i32 2
  store i32 2, i32* %3, align 8
  %4 = getelementptr inbounds %struct.VkPhysicalDeviceFloatControlsProperties, %struct.VkPhysicalDeviceFloatControlsProperties* %1, i64 0, i32 3
  store i32 2, i32* %4, align 4
  %5 = getelementptr inbounds %struct.VkPhysicalDeviceFloatControlsProperties, %struct.VkPhysicalDeviceFloatControlsProperties* %1, i64 0, i32 4
  %6 = bitcast i32* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 60, i1 false) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZNK2vk14PhysicalDevice13getPropertiesEP44VkPhysicalDeviceDescriptorIndexingProperties(%"class.vk::PhysicalDevice"* nocapture readnone, %struct.VkPhysicalDeviceDescriptorIndexingProperties* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %struct.VkPhysicalDeviceDescriptorIndexingProperties, %struct.VkPhysicalDeviceDescriptorIndexingProperties* %1, i64 0, i32 2
  %4 = bitcast i32* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 92, i1 false) #10
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden void @_ZNK2vk14PhysicalDevice13getPropertiesEP45VkPhysicalDeviceDepthStencilResolveProperties(%"class.vk::PhysicalDevice"* nocapture readnone, %struct.VkPhysicalDeviceDepthStencilResolveProperties* nocapture) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %struct.VkPhysicalDeviceDepthStencilResolveProperties, %struct.VkPhysicalDeviceDepthStencilResolveProperties* %1, i64 0, i32 2
  %4 = bitcast i32* %3 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %4, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden void @_ZNK2vk14PhysicalDevice13getPropertiesEP45VkPhysicalDeviceSamplerFilterMinmaxProperties(%"class.vk::PhysicalDevice"* nocapture readnone, %struct.VkPhysicalDeviceSamplerFilterMinmaxProperties* nocapture) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %struct.VkPhysicalDeviceSamplerFilterMinmaxProperties, %struct.VkPhysicalDeviceSamplerFilterMinmaxProperties* %1, i64 0, i32 2
  store i32 0, i32* %3, align 8
  %4 = getelementptr inbounds %struct.VkPhysicalDeviceSamplerFilterMinmaxProperties, %struct.VkPhysicalDeviceSamplerFilterMinmaxProperties* %1, i64 0, i32 3
  store i32 0, i32* %4, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden void @_ZNK2vk14PhysicalDevice13getPropertiesEP43VkPhysicalDeviceTimelineSemaphoreProperties(%"class.vk::PhysicalDevice"* nocapture readnone, %struct.VkPhysicalDeviceTimelineSemaphoreProperties* nocapture) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %struct.VkPhysicalDeviceTimelineSemaphoreProperties, %struct.VkPhysicalDeviceTimelineSemaphoreProperties* %1, i64 0, i32 2
  store i64 -1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZNK2vk14PhysicalDevice13getPropertiesEP34VkPhysicalDeviceVulkan12Properties(%"class.vk::PhysicalDevice"* nocapture readnone, %struct.VkPhysicalDeviceVulkan12Properties* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %struct.VkPhysicalDeviceVulkan12Properties, %struct.VkPhysicalDeviceVulkan12Properties* %1, i64 0, i32 2
  store i32 10, i32* %3, align 8
  %4 = getelementptr inbounds %struct.VkPhysicalDeviceVulkan12Properties, %struct.VkPhysicalDeviceVulkan12Properties* %1, i64 0, i32 3, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %4, i8* align 1 getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7, i64 0, i64 0), i64 19, i1 false) #10
  %5 = getelementptr inbounds %struct.VkPhysicalDeviceVulkan12Properties, %struct.VkPhysicalDeviceVulkan12Properties* %1, i64 0, i32 4, i64 0
  store i8 0, i8* %5, align 1
  %6 = getelementptr inbounds %struct.VkPhysicalDeviceVulkan12Properties, %struct.VkPhysicalDeviceVulkan12Properties* %1, i64 0, i32 5, i32 0
  store i8 1, i8* %6, align 4
  %7 = getelementptr inbounds %struct.VkPhysicalDeviceVulkan12Properties, %struct.VkPhysicalDeviceVulkan12Properties* %1, i64 0, i32 5, i32 1
  store i8 1, i8* %7, align 1
  %8 = getelementptr inbounds %struct.VkPhysicalDeviceVulkan12Properties, %struct.VkPhysicalDeviceVulkan12Properties* %1, i64 0, i32 5, i32 2
  store i8 3, i8* %8, align 2
  %9 = getelementptr inbounds %struct.VkPhysicalDeviceVulkan12Properties, %struct.VkPhysicalDeviceVulkan12Properties* %1, i64 0, i32 5, i32 3
  store i8 3, i8* %9, align 1
  %10 = getelementptr inbounds %struct.VkPhysicalDeviceVulkan12Properties, %struct.VkPhysicalDeviceVulkan12Properties* %1, i64 0, i32 6
  store i32 2, i32* %10, align 8
  %11 = getelementptr inbounds %struct.VkPhysicalDeviceVulkan12Properties, %struct.VkPhysicalDeviceVulkan12Properties* %1, i64 0, i32 7
  store i32 2, i32* %11, align 4
  %12 = getelementptr inbounds %struct.VkPhysicalDeviceVulkan12Properties, %struct.VkPhysicalDeviceVulkan12Properties* %1, i64 0, i32 8
  %13 = getelementptr inbounds %struct.VkPhysicalDeviceVulkan12Properties, %struct.VkPhysicalDeviceVulkan12Properties* %1, i64 0, i32 46
  %14 = bitcast i32* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 152, i1 false)
  %15 = bitcast i32* %13 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %15, align 8
  %16 = getelementptr inbounds %struct.VkPhysicalDeviceVulkan12Properties, %struct.VkPhysicalDeviceVulkan12Properties* %1, i64 0, i32 50
  store i32 0, i32* %16, align 8
  %17 = getelementptr inbounds %struct.VkPhysicalDeviceVulkan12Properties, %struct.VkPhysicalDeviceVulkan12Properties* %1, i64 0, i32 51
  store i32 0, i32* %17, align 4
  %18 = getelementptr inbounds %struct.VkPhysicalDeviceVulkan12Properties, %struct.VkPhysicalDeviceVulkan12Properties* %1, i64 0, i32 52
  store i64 -1, i64* %18, align 8
  %19 = getelementptr inbounds %struct.VkPhysicalDeviceVulkan12Properties, %struct.VkPhysicalDeviceVulkan12Properties* %1, i64 0, i32 53
  store i32 1, i32* %19, align 8
  ret void
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZNK2vk14PhysicalDevice11hasFeaturesERK24VkPhysicalDeviceFeatures(%"class.vk::PhysicalDevice"* nocapture readnone, %struct.VkPhysicalDeviceFeatures* nocapture readonly dereferenceable(220)) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %1, i64 0, i32 0
  br label %4

4:                                                ; preds = %13, %2
  %5 = phi i64 [ 0, %2 ], [ %14, %13 ]
  %6 = getelementptr inbounds i32, i32* %3, i64 %5
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds i32, i32* getelementptr inbounds (%struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* @_ZZNK2vk14PhysicalDevice11getFeaturesEvE8features, i64 0, i32 0), i64 %5
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %4, %9
  %14 = add nuw nsw i64 %5, 1
  %15 = icmp eq i64 %14, 55
  br i1 %15, label %16, label %4

16:                                               ; preds = %13, %9
  %17 = phi i1 [ false, %9 ], [ true, %13 ]
  ret i1 %17
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk14PhysicalDevice19GetFormatPropertiesENS_6FormatEP18VkFormatProperties(i32, %struct.VkFormatProperties* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.vk::Format", align 4
  %4 = getelementptr inbounds %"class.vk::Format", %"class.vk::Format"* %3, i64 0, i32 0
  store i32 %0, i32* %4, align 4
  %5 = getelementptr inbounds %struct.VkFormatProperties, %struct.VkFormatProperties* %1, i64 0, i32 0
  store i32 0, i32* %5, align 4
  %6 = getelementptr inbounds %struct.VkFormatProperties, %struct.VkFormatProperties* %1, i64 0, i32 1
  store i32 0, i32* %6, align 4
  %7 = getelementptr inbounds %struct.VkFormatProperties, %struct.VkFormatProperties* %1, i64 0, i32 2
  store i32 0, i32* %7, align 4
  switch i32 %0, label %12 [
    i32 3, label %8
    i32 4, label %8
    i32 8, label %8
    i32 9, label %8
    i32 15, label %8
    i32 10, label %8
    i32 16, label %8
    i32 22, label %8
    i32 17, label %8
    i32 37, label %8
    i32 38, label %8
    i32 43, label %8
    i32 44, label %8
    i32 50, label %8
    i32 51, label %8
    i32 52, label %8
    i32 57, label %8
    i32 64, label %8
    i32 58, label %8
    i32 70, label %8
    i32 71, label %8
    i32 76, label %8
    i32 77, label %8
    i32 78, label %8
    i32 83, label %8
    i32 91, label %8
    i32 92, label %8
    i32 97, label %8
    i32 100, label %8
    i32 103, label %8
    i32 109, label %8
    i32 122, label %8
    i32 123, label %8
    i32 131, label %8
    i32 132, label %8
    i32 133, label %8
    i32 134, label %8
    i32 135, label %8
    i32 136, label %8
    i32 137, label %8
    i32 138, label %8
    i32 139, label %8
    i32 140, label %8
    i32 141, label %8
    i32 142, label %8
    i32 143, label %8
    i32 144, label %8
    i32 145, label %8
    i32 146, label %8
    i32 147, label %8
    i32 148, label %8
    i32 149, label %8
    i32 150, label %8
    i32 151, label %8
    i32 152, label %8
    i32 153, label %8
    i32 154, label %8
    i32 155, label %8
    i32 156, label %8
    i32 157, label %8
    i32 159, label %8
    i32 161, label %8
    i32 163, label %8
    i32 165, label %8
    i32 167, label %8
    i32 169, label %8
    i32 171, label %8
    i32 173, label %8
    i32 175, label %8
    i32 177, label %8
    i32 179, label %8
    i32 181, label %8
    i32 183, label %8
    i32 158, label %8
    i32 160, label %8
    i32 162, label %8
    i32 164, label %8
    i32 166, label %8
    i32 168, label %8
    i32 170, label %8
    i32 172, label %8
    i32 174, label %8
    i32 176, label %8
    i32 178, label %8
    i32 180, label %8
    i32 182, label %8
    i32 184, label %8
    i32 124, label %8
    i32 126, label %8
    i32 130, label %8
    i32 13, label %10
    i32 14, label %10
    i32 20, label %10
    i32 21, label %10
    i32 41, label %10
    i32 42, label %10
    i32 55, label %10
    i32 56, label %10
    i32 68, label %10
    i32 62, label %10
    i32 74, label %10
    i32 75, label %10
    i32 81, label %10
    i32 82, label %10
    i32 95, label %10
    i32 96, label %10
    i32 98, label %10
    i32 99, label %10
    i32 101, label %10
    i32 102, label %10
    i32 107, label %10
    i32 108, label %10
    i32 127, label %10
    i32 1000156002, label %9
    i32 1000156003, label %9
  ]

8:                                                ; preds = %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2
  store i32 4096, i32* %6, align 4
  br label %10

9:                                                ; preds = %2, %2
  br label %10

10:                                               ; preds = %8, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %9
  %11 = phi i32 [ 8441857, %9 ], [ 50177, %2 ], [ 50177, %2 ], [ 50177, %2 ], [ 50177, %2 ], [ 50177, %2 ], [ 50177, %2 ], [ 50177, %2 ], [ 50177, %2 ], [ 50177, %2 ], [ 50177, %2 ], [ 50177, %2 ], [ 50177, %2 ], [ 50177, %2 ], [ 50177, %2 ], [ 50177, %2 ], [ 50177, %2 ], [ 50177, %2 ], [ 50177, %2 ], [ 50177, %2 ], [ 50177, %2 ], [ 50177, %2 ], [ 50177, %2 ], [ 50177, %2 ], [ 54273, %8 ]
  store i32 %11, i32* %6, align 4
  br label %12

12:                                               ; preds = %10, %2
  %13 = phi i32 [ 0, %2 ], [ %11, %10 ]
  switch i32 %0, label %20 [
    i32 98, label %14
    i32 99, label %14
    i32 37, label %16
    i32 38, label %16
    i32 41, label %16
    i32 42, label %16
    i32 51, label %16
    i32 52, label %16
    i32 55, label %16
    i32 56, label %16
    i32 95, label %16
    i32 96, label %16
    i32 97, label %16
    i32 100, label %16
    i32 101, label %16
    i32 102, label %16
    i32 103, label %16
    i32 107, label %16
    i32 108, label %16
    i32 109, label %16
    i32 83, label %16
    i32 122, label %16
    i32 76, label %16
    i32 91, label %16
    i32 64, label %16
    i32 77, label %16
    i32 16, label %16
    i32 70, label %16
    i32 9, label %16
    i32 92, label %16
    i32 78, label %16
    i32 17, label %16
    i32 71, label %16
    i32 10, label %16
    i32 82, label %16
    i32 21, label %16
    i32 75, label %16
    i32 14, label %16
    i32 68, label %16
    i32 81, label %16
    i32 20, label %16
    i32 74, label %16
    i32 13, label %16
  ]

14:                                               ; preds = %12, %12
  %15 = or i32 %13, 4
  store i32 %15, i32* %6, align 4
  store i32 32, i32* %7, align 4
  br label %16

16:                                               ; preds = %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %14
  %17 = phi i
  %18 = phi i
  %19 = or i32 %18, 2
  store i32 %19, i32* %6, align 4
  store i32 %17, i32* %7, align 4
  br label %20

20:                                               ; preds = %12, %16
  %21 = phi i32 [ %13, %12 ], [ %19, %16 ]
  switch i32 %0, label %26 [
    i32 4, label %23
    i32 8, label %23
    i32 9, label %23
    i32 16, label %23
    i32 37, label %23
    i32 43, label %23
    i32 44, label %23
    i32 50, label %23
    i32 51, label %23
    i32 57, label %23
    i32 64, label %23
    i32 58, label %23
    i32 76, label %23
    i32 83, label %23
    i32 97, label %23
    i32 100, label %23
    i32 103, label %23
    i32 109, label %23
    i32 122, label %23
    i32 13, label %23
    i32 14, label %23
    i32 20, label %23
    i32 21, label %23
    i32 41, label %23
    i32 42, label %23
    i32 55, label %23
    i32 56, label %23
    i32 68, label %23
    i32 62, label %23
    i32 74, label %23
    i32 75, label %23
    i32 81, label %23
    i32 82, label %23
    i32 95, label %23
    i32 96, label %23
    i32 98, label %23
    i32 99, label %23
    i32 101, label %23
    i32 102, label %23
    i32 107, label %23
    i32 108, label %23
    i32 127, label %22
    i32 124, label %22
    i32 126, label %22
    i32 130, label %22
  ]

22:                                               ; preds = %20, %20, %20, %20
  br label %23

23:                                               ; preds = %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %22
  %24 = phi i32 [ 512, %22 ], [ 2176, %20 ], [ 2176, %20 ], [ 2176, %20 ], [ 2176, %20 ], [ 2176, %20 ], [ 2176, %20 ], [ 2176, %20 ], [ 2176, %20 ], [ 2176, %20 ], [ 2176, %20 ], [ 2176, %20 ], [ 2176, %20 ], [ 2176, %20 ], [ 2176, %20 ], [ 2176, %20 ], [ 2176, %20 ], [ 2176, %20 ], [ 2176, %20 ], [ 2176, %20 ], [ 2176, %20 ], [ 2176, %20 ], [ 2176, %20 ], [ 2176, %20 ], [ 2176, %20 ], [ 2176, %20 ], [ 2176, %20 ], [ 2176, %20 ], [ 2176, %20 ], [ 2176, %20 ], [ 2176, %20 ], [ 2176, %20 ], [ 2176, %20 ], [ 2176, %20 ], [ 2176, %20 ], [ 2176, %20 ], [ 2176, %20 ], [ 2176, %20 ], [ 2176, %20 ], [ 2176, %20 ], [ 2176, %20 ], [ 2176, %20 ]
  %25 = or i32 %21, %24
  store i32 %25, i32* %6, align 4
  br label %26

26:                                               ; preds = %23, %20
  %27 = call zeroext i1 @_ZNK2vk6Format28supportsColorAttachmentBlendEv(%"class.vk::Format"* nonnull %3) #11
  br i1 %27, label %28, label %31

28:                                               ; preds = %26
  %29 = load i32, i32* %6, align 4
  %30 = or i32 %29, 256
  store i32 %30, i32* %6, align 4
  br label %31

31:                                               ; preds = %28, %26
  %32 = load i32, i32* %4, align 4
  switch i32 %32, label %36 [
    i32 9, label %33
    i32 10, label %33
    i32 13, label %33
    i32 14, label %33
    i32 16, label %33
    i32 17, label %33
    i32 20, label %33
    i32 21, label %33
    i32 37, label %33
    i32 38, label %33
    i32 41, label %33
    i32 42, label %33
    i32 44, label %33
    i32 51, label %33
    i32 52, label %33
    i32 55, label %33
    i32 56, label %33
    i32 58, label %33
    i32 59, label %33
    i32 62, label %33
    i32 63, label %33
    i32 64, label %33
    i32 65, label %33
    i32 68, label %33
    i32 69, label %33
    i32 70, label %33
    i32 71, label %33
    i32 74, label %33
    i32 75, label %33
    i32 76, label %33
    i32 77, label %33
    i32 78, label %33
    i32 81, label %33
    i32 82, label %33
    i32 83, label %33
    i32 91, label %33
    i32 92, label %33
    i32 95, label %33
    i32 96, label %33
    i32 97, label %33
    i32 98, label %33
    i32 99, label %33
    i32 100, label %33
    i32 101, label %33
    i32 102, label %33
    i32 103, label %33
    i32 104, label %33
    i32 105, label %33
    i32 106, label %33
    i32 107, label %33
    i32 108, label %33
    i32 109, label %33
  ]

33:                                               ; preds = %31, %31, %31, %31, %31, %31, %31, %31, %31, %31, %31, %31, %31, %31, %31, %31, %31, %31, %31, %31, %31, %31, %31, %31, %31, %31, %31, %31, %31, %31, %31, %31, %31, %31, %31, %31, %31, %31, %31, %31, %31, %31, %31, %31, %31, %31, %31, %31, %31, %31, %31, %31
  %34 = load i32, i32* %7, align 4
  %35 = or i32 %34, 64
  store i32 %35, i32* %7, align 4
  br label %36

36:                                               ; preds = %31, %33
  switch i32 %32, label %40 [
    i32 9, label %37
    i32 10, label %37
    i32 13, label %37
    i32 14, label %37
    i32 16, label %37
    i32 17, label %37
    i32 20, label %37
    i32 21, label %37
    i32 37, label %37
    i32 38, label %37
    i32 41, label %37
    i32 42, label %37
    i32 44, label %37
    i32 51, label %37
    i32 52, label %37
    i32 55, label %37
    i32 56, label %37
    i32 64, label %37
    i32 68, label %37
    i32 74, label %37
    i32 75, label %37
    i32 76, label %37
    i32 81, label %37
    i32 82, label %37
    i32 83, label %37
    i32 95, label %37
    i32 96, label %37
    i32 97, label %37
    i32 98, label %37
    i32 99, label %37
    i32 100, label %37
    i32 101, label %37
    i32 102, label %37
    i32 103, label %37
    i32 107, label %37
    i32 108, label %37
    i32 109, label %37
    i32 122, label %37
    i32 58, label %37
    i32 62, label %37
  ]

37:                                               ; preds = %36, %36, %36, %36, %36, %36, %36, %36, %36, %36, %36, %36, %36, %36, %36, %36, %36, %36, %36, %36, %36, %36, %36, %36, %36, %36, %36, %36, %36, %36, %36, %36, %36, %36, %36, %36, %36, %36, %36, %36
  %38 = load i32, i32* %7, align 4
  %39 = or i32 %38, 8
  store i32 %39, i32* %7, align 4
  br label %40

40:                                               ; preds = %36, %37
  %41 = load i32, i32* %6, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %58, label %43

43:                                               ; preds = %40
  store i32 49152, i32* %5, align 4
  %44 = call zeroext i1 @_ZNK2vk6Format12isCompressedEv(%"class.vk::Format"* nonnull %3) #11
  br i1 %44, label %58, label %45

45:                                               ; preds = %43
  %46 = load i32, i32* %6, align 4
  %47 = and i32 %46, 1
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %52, label %49

49:                                               ; preds = %45
  %50 = load i32, i32* %5, align 4
  %51 = or i32 %50, 1
  store i32 %51, i32* %5, align 4
  br label %52

52:                                               ; preds = %45, %49
  %53 = and i32 %46, 4096
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %52
  %56 = load i32, i32* %5, align 4
  %57 = or i32 %56, 4096
  store i32 %57, i32* %5, align 4
  br label %58

58:                                               ; preds = %52, %40, %43, %55
  ret void
}

; Function Attrs: optsize
declare zeroext i1 @_ZNK2vk6Format28supportsColorAttachmentBlendEv(%"class.vk::Format"*) local_unnamed_addr #6

; Function Attrs: optsize
declare zeroext i1 @_ZNK2vk6Format12isCompressedEv(%"class.vk::Format"*) local_unnamed_addr #6

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZNK2vk14PhysicalDevice24getImageFormatPropertiesENS_6FormatE11VkImageType13VkImageTilingjjP23VkImageFormatProperties(%"class.vk::PhysicalDevice"* nocapture readnone, i32, i32, i32, i32, i32, %struct.VkImageFormatProperties* nocapture) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.vk::Format", align 4
  %9 = alloca %struct.VkFormatProperties, align 4
  %10 = getelementptr inbounds %"class.vk::Format", %"class.vk::Format"* %8, i64 0, i32 0
  store i32 %1, i32* %10, align 4
  %11 = getelementptr inbounds %struct.VkImageFormatProperties, %struct.VkImageFormatProperties* %6, i64 0, i32 3
  store i32 1, i32* %11, align 4
  %12 = getelementptr inbounds %struct.VkImageFormatProperties, %struct.VkImageFormatProperties* %6, i64 0, i32 2
  store i32 2048, i32* %12, align 8
  %13 = getelementptr inbounds %struct.VkImageFormatProperties, %struct.VkImageFormatProperties* %6, i64 0, i32 0, i32 2
  store i32 1, i32* %13, align 8
  switch i32 %2, label %39 [
    i32 0, label %14
    i32 1, label %18
    i32 2, label %37
  ]

14:                                               ; preds = %7
  %15 = getelementptr inbounds %struct.VkImageFormatProperties, %struct.VkImageFormatProperties* %6, i64 0, i32 1
  store i32 14, i32* %15, align 4
  %16 = getelementptr inbounds %struct.VkImageFormatProperties, %struct.VkImageFormatProperties* %6, i64 0, i32 0, i32 0
  store i32 8192, i32* %16, align 8
  %17 = getelementptr inbounds %struct.VkImageFormatProperties, %struct.VkImageFormatProperties* %6, i64 0, i32 0, i32 1
  store i32 1, i32* %17, align 4
  br label %40

18:                                               ; preds = %7
  %19 = and i32 %5, 16
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %struct.VkImageFormatProperties, %struct.VkImageFormatProperties* %6, i64 0, i32 1
  store i32 14, i32* %21, align 4
  %22 = getelementptr inbounds %struct.VkImageFormatProperties, %struct.VkImageFormatProperties* %6, i64 0, i32 0, i32 0
  store i32 8192, i32* %22, align 8
  %23 = getelementptr inbounds %struct.VkImageFormatProperties, %struct.VkImageFormatProperties* %6, i64 0, i32 0, i32 1
  store i32 8192, i32* %23, align 4
  br i1 %20, label %24, label %40

24:                                               ; preds = %18
  %25 = bitcast %struct.VkFormatProperties* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %25) #10
  %26 = getelementptr inbounds %struct.VkFormatProperties, %struct.VkFormatProperties* %9, i64 0, i32 0
  store i32 -1431655766, i32* %26, align 4
  %27 = getelementptr inbounds %struct.VkFormatProperties, %struct.VkFormatProperties* %9, i64 0, i32 1
  store i32 -1431655766, i32* %27, align 4
  %28 = getelementptr inbounds %struct.VkFormatProperties, %struct.VkFormatProperties* %9, i64 0, i32 2
  store i32 -1431655766, i32* %28, align 4
  call void @_ZN2vk14PhysicalDevice19GetFormatPropertiesENS_6FormatEP18VkFormatProperties(i32 %1, %struct.VkFormatProperties* nonnull %9) #13
  %29 = icmp eq i32 %3, 1
  %30 = load i32, i32* %26, align 4
  %31 = load i32, i32* %27, align 4
  %32 = select i1 %29, i32 %30, i32 %31
  %33 = and i32 %32, 640
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %36, label %35

35:                                               ; preds = %24
  store i32 5, i32* %11, align 4
  br label %36

36:                                               ; preds = %24, %35
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %25) #10
  br label %40

37:                                               ; preds = %7
  %38 = bitcast %struct.VkImageFormatProperties* %6 to <4 x i32>*
  store <4 x i32> <i32 1024, i32 1024, i32 1024, i32 11>, <4 x i32>* %38, align 8
  store i32 1, i32* %12, align 8
  br label %40

39:                                               ; preds = %7
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.1, i64 0, i64 0), i32 1495, i32 %2) #11
  br label %40

40:                                               ; preds = %18, %36, %39, %37, %14
  %41 = getelementptr inbounds %struct.VkImageFormatProperties, %struct.VkImageFormatProperties* %6, i64 0, i32 4
  store i64 2147483648, i64* %41, align 8
  %42 = icmp eq i32 %3, 1
  br i1 %42, label %43, label %45

43:                                               ; preds = %40
  %44 = getelementptr inbounds %struct.VkImageFormatProperties, %struct.VkImageFormatProperties* %6, i64 0, i32 1
  store i32 1, i32* %44, align 4
  store i32 1, i32* %12, align 8
  store i32 1, i32* %11, align 4
  br label %45

45:                                               ; preds = %43, %40
  %46 = call zeroext i1 @_ZNK2vk6Format13isYcbcrFormatEv(%"class.vk::Format"* nonnull %8) #11
  br i1 %46, label %47, label %49

47:                                               ; preds = %45
  %48 = getelementptr inbounds %struct.VkImageFormatProperties, %struct.VkImageFormatProperties* %6, i64 0, i32 1
  store i32 1, i32* %48, align 4
  store i32 1, i32* %12, align 8
  store i32 1, i32* %11, align 4
  br label %49

49:                                               ; preds = %47, %45
  ret void
}

; Function Attrs: optsize
declare zeroext i1 @_ZNK2vk6Format13isYcbcrFormatEv(%"class.vk::Format"*) local_unnamed_addr #6

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden i32 @_ZNK2vk14PhysicalDevice27getQueueFamilyPropertyCountEv(%"class.vk::PhysicalDevice"* nocapture readnone) local_unnamed_addr #1 align 2 {
  ret i32 1
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZNK2vk14PhysicalDevice24getQueueFamilyPropertiesEv(%struct.VkQueueFamilyProperties* noalias nocapture sret, %"class.vk::PhysicalDevice"* nocapture readnone) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %struct.VkQueueFamilyProperties, %struct.VkQueueFamilyProperties* %0, i64 0, i32 3, i32 1
  store i32 1, i32* %3, align 4
  %4 = getelementptr inbounds %struct.VkQueueFamilyProperties, %struct.VkQueueFamilyProperties* %0, i64 0, i32 3, i32 2
  store i32 1, i32* %4, align 4
  %5 = bitcast %struct.VkQueueFamilyProperties* %0 to <4 x i32>*
  store <4 x i32> <i32 7, i32 1, i32 64, i32 1>, <4 x i32>* %5, align 4
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZNK2vk14PhysicalDevice24getQueueFamilyPropertiesEjP23VkQueueFamilyProperties(%"class.vk::PhysicalDevice"* nocapture readnone, i32, %struct.VkQueueFamilyProperties* nocapture) local_unnamed_addr #0 align 2 {
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %3
  %6 = zext i32 %1 to i64
  br label %8

7:                                                ; preds = %8, %3
  ret void

8:                                                ; preds = %8, %5
  %9 = phi i64 [ 0, %5 ], [ %14, %8 ]
  %10 = getelementptr inbounds %struct.VkQueueFamilyProperties, %struct.VkQueueFamilyProperties* %2, i64 %9, i32 0
  %11 = bitcast i32* %10 to <4 x i32>*
  store <4 x i32> <i32 7, i32 1, i32 64, i32 1>, <4 x i32>* %11, align 4
  %12 = getelementptr inbounds %struct.VkQueueFamilyProperties, %struct.VkQueueFamilyProperties* %2, i64 %9, i32 3, i32 1
  store i32 1, i32* %12, align 4
  %13 = getelementptr inbounds %struct.VkQueueFamilyProperties, %struct.VkQueueFamilyProperties* %2, i64 %9, i32 3, i32 2
  store i32 1, i32* %13, align 4
  %14 = add nuw nsw i64 %9, 1
  %15 = icmp eq i64 %14, %6
  br i1 %15, label %7, label %8
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZNK2vk14PhysicalDevice24getQueueFamilyPropertiesEjP24VkQueueFamilyProperties2(%"class.vk::PhysicalDevice"* nocapture readnone, i32, %struct.VkQueueFamilyProperties2* nocapture) local_unnamed_addr #0 align 2 {
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %3
  %6 = zext i32 %1 to i64
  br label %8

7:                                                ; preds = %8, %3
  ret void

8:                                                ; preds = %8, %5
  %9 = phi i64 [ 0, %5 ], [ %14, %8 ]
  %10 = getelementptr inbounds %struct.VkQueueFamilyProperties2, %struct.VkQueueFamilyProperties2* %2, i64 %9, i32 2, i32 0
  %11 = bitcast i32* %10 to <4 x i32>*
  store <4 x i32> <i32 7, i32 1, i32 64, i32 1>, <4 x i32>* %11, align 8
  %12 = getelementptr inbounds %struct.VkQueueFamilyProperties2, %struct.VkQueueFamilyProperties2* %2, i64 %9, i32 2, i32 3, i32 1
  store i32 1, i32* %12, align 8
  %13 = getelementptr inbounds %struct.VkQueueFamilyProperties2, %struct.VkQueueFamilyProperties2* %2, i64 %9, i32 2, i32 3, i32 2
  store i32 1, i32* %13, align 4
  %14 = add nuw nsw i64 %9, 1
  %15 = icmp eq i64 %14, %6
  br i1 %15, label %7, label %8
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden dereferenceable(520) %struct.VkPhysicalDeviceMemoryProperties* @_ZN2vk14PhysicalDevice19GetMemoryPropertiesEv() local_unnamed_addr #1 align 2 {
  ret %struct.VkPhysicalDeviceMemoryProperties* bitcast ({ i32, <{ %struct.VkMemoryType, [31 x %struct.VkMemoryType] }>, i32, <{ %struct.VkMemoryHeap, [15 x %struct.VkMemoryHeap] }> }* @_ZZN2vk14PhysicalDevice19GetMemoryPropertiesEvE10properties to %struct.VkPhysicalDeviceMemoryProperties*)
}

; Function Attrs: nofree nounwind optsize
declare i32 @snprintf(i8* nocapture, i64, i8* nocapture readonly, ...) local_unnamed_addr #8

; Function Attrs: optsize
declare void @_ZN2rr11BackendNameEv(%"class.std::__1::basic_string"* sret) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind optsize
declare void @_ZdlPv(i8*) local_unnamed_addr #9

attributes #0 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind optsize readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree nounwind }
attributes #4 = { nofree norecurse nounwind optsize ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind optsize readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { nounwind optsize }
attributes #12 = { builtin nounwind optsize }
attributes #13 = { optsize }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
