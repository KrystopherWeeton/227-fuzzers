; ModuleID = '../../net/tools/huffman_trie/trie/trie_bit_buffer.cc'
source_filename = "../../net/tools/huffman_trie/trie/trie_bit_buffer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.net::huffman_trie::TrieBitBuffer" = type { i8, i32, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"*, %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"*, %"class.std::__1::__compressed_pair" }
%"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition" = type { i8, i8, i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1", %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.net::huffman_trie::HuffmanBuilder" = type { %"class.std::__1::map.9" }
%"class.std::__1::map.9" = type { %"class.std::__1::__tree.10" }
%"class.std::__1::__tree.10" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.11", %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i8, %"struct.net::huffman_trie::HuffmanRepresentation" }
%"struct.net::huffman_trie::HuffmanRepresentation" = type { i32, i32 }
%"class.net::huffman_trie::BitWriter" = type { i8, i8, i32, %"class.std::__1::vector.18" }
%"class.std::__1::vector.18" = type { %"class.std::__1::__vector_base.19" }
%"class.std::__1::__vector_base.19" = type { i8*, i8*, %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { i8* }

@_ZN3net12huffman_trie13TrieBitBufferC1Ev = hidden unnamed_addr alias void (%"class.net::huffman_trie::TrieBitBuffer"*), void (%"class.net::huffman_trie::TrieBitBuffer"*)* @_ZN3net12huffman_trie13TrieBitBufferC2Ev
@_ZN3net12huffman_trie13TrieBitBufferD1Ev = hidden unnamed_addr alias void (%"class.net::huffman_trie::TrieBitBuffer"*), void (%"class.net::huffman_trie::TrieBitBuffer"*)* @_ZN3net12huffman_trie13TrieBitBufferD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net12huffman_trie13TrieBitBufferC2Ev(%"class.net::huffman_trie::TrieBitBuffer"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::huffman_trie::TrieBitBuffer", %"class.net::huffman_trie::TrieBitBuffer"* %0, i64 0, i32 0
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %"class.net::huffman_trie::TrieBitBuffer", %"class.net::huffman_trie::TrieBitBuffer"* %0, i64 0, i32 1
  %4 = bitcast i32* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %4, i8 0, i64 28, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net12huffman_trie13TrieBitBufferD2Ev(%"class.net::huffman_trie::TrieBitBuffer"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::huffman_trie::TrieBitBuffer", %"class.net::huffman_trie::TrieBitBuffer"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"*, %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"** %2, align 8
  %4 = icmp eq %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"* %3 to i64
  %7 = getelementptr inbounds %"class.net::huffman_trie::TrieBitBuffer", %"class.net::huffman_trie::TrieBitBuffer"* %0, i64 0, i32 2, i32 0, i32 1
  %8 = bitcast %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = getelementptr inbounds %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition", %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"* %3, i64 0, i32 0
  tail call void @_ZdlPv(i8* %9) #9
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net12huffman_trie13TrieBitBuffer8WriteBitEh(%"class.net::huffman_trie::TrieBitBuffer"*, i8 zeroext) local_unnamed_addr #0 align 2 {
  %3 = zext i8 %1 to i32
  %4 = getelementptr inbounds %"class.net::huffman_trie::TrieBitBuffer", %"class.net::huffman_trie::TrieBitBuffer"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = sub i32 7, %5
  %7 = shl i32 %3, %6
  %8 = getelementptr inbounds %"class.net::huffman_trie::TrieBitBuffer", %"class.net::huffman_trie::TrieBitBuffer"* %0, i64 0, i32 0
  %9 = load i8, i8* %8, align 8
  %10 = trunc i32 %7 to i8
  %11 = or i8 %9, %10
  store i8 %11, i8* %8, align 8
  %12 = add i32 %5, 1
  store i32 %12, i32* %4, align 4
  %13 = icmp eq i32 %12, 8
  br i1 %13, label %14, label %15

14:                                               ; preds = %2
  tail call void @_ZN3net12huffman_trie13TrieBitBuffer17AppendBitsElementEhh(%"class.net::huffman_trie::TrieBitBuffer"* %0, i8 zeroext undef, i8 zeroext undef) #10
  store i32 0, i32* %4, align 4
  store i8 0, i8* %8, align 8
  br label %15

15:                                               ; preds = %14, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net12huffman_trie13TrieBitBuffer5FlushEv(%"class.net::huffman_trie::TrieBitBuffer"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::huffman_trie::TrieBitBuffer", %"class.net::huffman_trie::TrieBitBuffer"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.net::huffman_trie::TrieBitBuffer", %"class.net::huffman_trie::TrieBitBuffer"* %0, i64 0, i32 0
  tail call void @_ZN3net12huffman_trie13TrieBitBuffer17AppendBitsElementEhh(%"class.net::huffman_trie::TrieBitBuffer"* %0, i8 zeroext undef, i8 zeroext undef)
  store i32 0, i32* %2, align 4
  store i8 0, i8* %6, align 8
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net12huffman_trie13TrieBitBuffer9WriteBitsEjh(%"class.net::huffman_trie::TrieBitBuffer"*, i32, i8 zeroext) local_unnamed_addr #0 align 2 {
  %4 = icmp eq i8 %2, 0
  br i1 %4, label %11, label %5

5:                                                ; preds = %3
  %6 = zext i8 %2 to i32
  %7 = getelementptr inbounds %"class.net::huffman_trie::TrieBitBuffer", %"class.net::huffman_trie::TrieBitBuffer"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.net::huffman_trie::TrieBitBuffer", %"class.net::huffman_trie::TrieBitBuffer"* %0, i64 0, i32 0
  %9 = load i32, i32* %7, align 4
  %10 = load i8, i8* %8, align 8
  br label %12

11:                                               ; preds = %27, %3
  ret void

12:                                               ; preds = %5, %27
  %13 = phi i8 [ %10, %5 ], [ %28, %27 ]
  %14 = phi i32 [ %9, %5 ], [ %29, %27 ]
  %15 = phi i8 [ 1, %5 ], [ %30, %27 ]
  %16 = zext i8 %15 to i32
  %17 = sub nsw i32 %6, %16
  %18 = lshr i32 %1, %17
  %19 = and i32 %18, 1
  %20 = sub i32 7, %14
  %21 = shl i32 %19, %20
  %22 = trunc i32 %21 to i8
  %23 = or i8 %13, %22
  store i8 %23, i8* %8, align 8
  %24 = add i32 %14, 1
  store i32 %24, i32* %7, align 4
  %25 = icmp eq i32 %24, 8
  br i1 %25, label %26, label %27

26:                                               ; preds = %12
  tail call void @_ZN3net12huffman_trie13TrieBitBuffer17AppendBitsElementEhh(%"class.net::huffman_trie::TrieBitBuffer"* %0, i8 zeroext undef, i8 zeroext undef) #10
  store i32 0, i32* %7, align 4
  store i8 0, i8* %8, align 8
  br label %27

27:                                               ; preds = %12, %26
  %28 = phi i8 [ %23, %12 ], [ 0, %26 ]
  %29 = phi i32 [ %24, %12 ], [ 0, %26 ]
  %30 = add i8 %15, 1
  %31 = icmp ugt i8 %30, %2
  br i1 %31, label %11, label %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net12huffman_trie13TrieBitBuffer13WritePositionEjPi(%"class.net::huffman_trie::TrieBitBuffer"*, i32, i32* nocapture) local_unnamed_addr #0 align 2 {
  %4 = load i32, i32* %2, align 4
  %5 = icmp eq i32 %4, -1
  br i1 %5, label %103, label %6

6:                                                ; preds = %3
  %7 = sub i32 %1, %4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %6
  %10 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 true) #10, !range !2
  %11 = trunc i32 %10 to i8
  %12 = sub nuw nsw i8 32, %11
  %13 = icmp ugt i8 %11, 24
  br i1 %13, label %14, label %45

14:                                               ; preds = %6, %9
  %15 = getelementptr inbounds %"class.net::huffman_trie::TrieBitBuffer", %"class.net::huffman_trie::TrieBitBuffer"* %0, i64 0, i32 1
  %16 = getelementptr inbounds %"class.net::huffman_trie::TrieBitBuffer", %"class.net::huffman_trie::TrieBitBuffer"* %0, i64 0, i32 0
  %17 = load i32, i32* %15, align 4
  %18 = load i8, i8* %16, align 8
  %19 = add i32 %17, 1
  store i32 %19, i32* %15, align 4
  %20 = icmp eq i32 %19, 8
  br i1 %20, label %21, label %22

21:                                               ; preds = %14
  tail call void @_ZN3net12huffman_trie13TrieBitBuffer17AppendBitsElementEhh(%"class.net::huffman_trie::TrieBitBuffer"* %0, i8 zeroext undef, i8 zeroext undef) #10
  store i32 0, i32* %15, align 4
  store i8 0, i8* %16, align 8
  br label %22

22:                                               ; preds = %21, %14
  %23 = phi i8 [ 0, %21 ], [ %18, %14 ]
  %24 = phi i32 [ 0, %21 ], [ %19, %14 ]
  %25 = lshr i32 %7, 6
  %26 = and i32 %25, 1
  %27 = sub i32 7, %24
  %28 = shl i32 %26, %27
  %29 = trunc i32 %28 to i8
  %30 = or i8 %23, %29
  store i8 %30, i8* %16, align 8
  %31 = add i32 %24, 1
  store i32 %31, i32* %15, align 4
  %32 = icmp eq i32 %31, 8
  br i1 %32, label %33, label %34

33:                                               ; preds = %22
  tail call void @_ZN3net12huffman_trie13TrieBitBuffer17AppendBitsElementEhh(%"class.net::huffman_trie::TrieBitBuffer"* %0, i8 zeroext undef, i8 zeroext undef) #10
  store i32 0, i32* %15, align 4
  store i8 0, i8* %16, align 8
  br label %34

34:                                               ; preds = %33, %22
  %35 = phi i8 [ %30, %22 ], [ 0, %33 ]
  %36 = phi i32 [ %31, %22 ], [ 0, %33 ]
  %37 = lshr i32 %7, 5
  %38 = and i32 %37, 1
  %39 = sub i32 7, %36
  %40 = shl i32 %38, %39
  %41 = trunc i32 %40 to i8
  %42 = or i8 %35, %41
  store i8 %42, i8* %16, align 8
  %43 = add i32 %36, 1
  store i32 %43, i32* %15, align 4
  %44 = icmp eq i32 %43, 8
  br i1 %44, label %111, label %112

45:                                               ; preds = %9
  %46 = getelementptr inbounds %"class.net::huffman_trie::TrieBitBuffer", %"class.net::huffman_trie::TrieBitBuffer"* %0, i64 0, i32 1
  %47 = getelementptr inbounds %"class.net::huffman_trie::TrieBitBuffer", %"class.net::huffman_trie::TrieBitBuffer"* %0, i64 0, i32 0
  %48 = load i32, i32* %46, align 4
  %49 = load i8, i8* %47, align 8
  %50 = sub i32 7, %48
  %51 = shl i32 1, %50
  %52 = trunc i32 %51 to i8
  %53 = or i8 %49, %52
  store i8 %53, i8* %47, align 8
  %54 = add i32 %48, 1
  store i32 %54, i32* %46, align 4
  %55 = icmp eq i32 %54, 8
  br i1 %55, label %56, label %57

56:                                               ; preds = %45
  tail call void @_ZN3net12huffman_trie13TrieBitBuffer17AppendBitsElementEhh(%"class.net::huffman_trie::TrieBitBuffer"* %0, i8 zeroext undef, i8 zeroext undef) #10
  store i32 0, i32* %46, align 4
  store i8 0, i8* %47, align 8
  br label %57

57:                                               ; preds = %56, %45
  %58 = phi i8 [ 0, %56 ], [ %53, %45 ]
  %59 = phi i32 [ 0, %56 ], [ %54, %45 ]
  %60 = zext i8 %12 to i32
  %61 = add nsw i32 %60, -8
  %62 = lshr i32 %61, 3
  %63 = and i32 %62, 1
  %64 = sub i32 7, %59
  %65 = shl i32 %63, %64
  %66 = trunc i32 %65 to i8
  %67 = or i8 %58, %66
  store i8 %67, i8* %47, align 8
  %68 = add i32 %59, 1
  store i32 %68, i32* %46, align 4
  %69 = icmp eq i32 %68, 8
  br i1 %69, label %70, label %71

70:                                               ; preds = %57
  tail call void @_ZN3net12huffman_trie13TrieBitBuffer17AppendBitsElementEhh(%"class.net::huffman_trie::TrieBitBuffer"* %0, i8 zeroext undef, i8 zeroext undef) #10
  store i32 0, i32* %46, align 4
  store i8 0, i8* %47, align 8
  br label %71

71:                                               ; preds = %70, %57
  %72 = phi i8 [ %67, %57 ], [ 0, %70 ]
  %73 = phi i32 [ %68, %57 ], [ 0, %70 ]
  %74 = lshr i32 %61, 2
  %75 = and i32 %74, 1
  %76 = sub i32 7, %73
  %77 = shl i32 %75, %76
  %78 = trunc i32 %77 to i8
  %79 = or i8 %72, %78
  store i8 %79, i8* %47, align 8
  %80 = add i32 %73, 1
  store i32 %80, i32* %46, align 4
  %81 = icmp eq i32 %80, 8
  br i1 %81, label %171, label %172

82:                                               ; preds = %195
  %83 = sub nuw nsw i32 33, %10
  br label %84

84:                                               ; preds = %98, %82
  %85 = phi i32 [ %101, %98 ], [ 1, %82 ]
  %86 = phi i8 [ %99, %98 ], [ %196, %82 ]
  %87 = phi i32 [ %100, %98 ], [ %197, %82 ]
  %88 = sub nsw i32 %60, %85
  %89 = lshr i32 %7, %88
  %90 = and i32 %89, 1
  %91 = sub i32 7, %87
  %92 = shl i32 %90, %91
  %93 = trunc i32 %92 to i8
  %94 = or i8 %86, %93
  store i8 %94, i8* %47, align 8
  %95 = add i32 %87, 1
  store i32 %95, i32* %46, align 4
  %96 = icmp eq i32 %95, 8
  br i1 %96, label %97, label %98

97:                                               ; preds = %84
  tail call void @_ZN3net12huffman_trie13TrieBitBuffer17AppendBitsElementEhh(%"class.net::huffman_trie::TrieBitBuffer"* %0, i8 zeroext undef, i8 zeroext undef) #10
  store i32 0, i32* %46, align 4
  store i8 0, i8* %47, align 8
  br label %98

98:                                               ; preds = %97, %84
  %99 = phi i8 [ %94, %84 ], [ 0, %97 ]
  %100 = phi i32 [ %95, %84 ], [ 0, %97 ]
  %101 = add nuw nsw i32 %85, 1
  %102 = icmp eq i32 %101, %83
  br i1 %102, label %110, label %84

103:                                              ; preds = %3
  %104 = getelementptr inbounds %"class.net::huffman_trie::TrieBitBuffer", %"class.net::huffman_trie::TrieBitBuffer"* %0, i64 0, i32 1
  %105 = load i32, i32* %104, align 4
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %109, label %107

107:                                              ; preds = %103
  %108 = getelementptr inbounds %"class.net::huffman_trie::TrieBitBuffer", %"class.net::huffman_trie::TrieBitBuffer"* %0, i64 0, i32 0
  tail call void @_ZN3net12huffman_trie13TrieBitBuffer17AppendBitsElementEhh(%"class.net::huffman_trie::TrieBitBuffer"* %0, i8 zeroext undef, i8 zeroext undef) #10
  store i32 0, i32* %104, align 4
  store i8 0, i8* %108, align 8
  br label %109

109:                                              ; preds = %103, %107
  tail call void @_ZN3net12huffman_trie13TrieBitBuffer21AppendPositionElementEj(%"class.net::huffman_trie::TrieBitBuffer"* %0, i32 %1)
  br label %110

110:                                              ; preds = %98, %160, %170, %195, %109
  store i32 %1, i32* %2, align 4
  ret void

111:                                              ; preds = %34
  tail call void @_ZN3net12huffman_trie13TrieBitBuffer17AppendBitsElementEhh(%"class.net::huffman_trie::TrieBitBuffer"* %0, i8 zeroext undef, i8 zeroext undef) #10
  store i32 0, i32* %15, align 4
  store i8 0, i8* %16, align 8
  br label %112

112:                                              ; preds = %111, %34
  %113 = phi i8 [ %42, %34 ], [ 0, %111 ]
  %114 = phi i32 [ %43, %34 ], [ 0, %111 ]
  %115 = lshr i32 %7, 4
  %116 = and i32 %115, 1
  %117 = sub i32 7, %114
  %118 = shl i32 %116, %117
  %119 = trunc i32 %118 to i8
  %120 = or i8 %113, %119
  store i8 %120, i8* %16, align 8
  %121 = add i32 %114, 1
  store i32 %121, i32* %15, align 4
  %122 = icmp eq i32 %121, 8
  br i1 %122, label %123, label %124

123:                                              ; preds = %112
  tail call void @_ZN3net12huffman_trie13TrieBitBuffer17AppendBitsElementEhh(%"class.net::huffman_trie::TrieBitBuffer"* %0, i8 zeroext undef, i8 zeroext undef) #10
  store i32 0, i32* %15, align 4
  store i8 0, i8* %16, align 8
  br label %124

124:                                              ; preds = %123, %112
  %125 = phi i8 [ %120, %112 ], [ 0, %123 ]
  %126 = phi i32 [ %121, %112 ], [ 0, %123 ]
  %127 = lshr i32 %7, 3
  %128 = and i32 %127, 1
  %129 = sub i32 7, %126
  %130 = shl i32 %128, %129
  %131 = trunc i32 %130 to i8
  %132 = or i8 %125, %131
  store i8 %132, i8* %16, align 8
  %133 = add i32 %126, 1
  store i32 %133, i32* %15, align 4
  %134 = icmp eq i32 %133, 8
  br i1 %134, label %135, label %136

135:                                              ; preds = %124
  tail call void @_ZN3net12huffman_trie13TrieBitBuffer17AppendBitsElementEhh(%"class.net::huffman_trie::TrieBitBuffer"* %0, i8 zeroext undef, i8 zeroext undef) #10
  store i32 0, i32* %15, align 4
  store i8 0, i8* %16, align 8
  br label %136

136:                                              ; preds = %135, %124
  %137 = phi i8 [ %132, %124 ], [ 0, %135 ]
  %138 = phi i32 [ %133, %124 ], [ 0, %135 ]
  %139 = lshr i32 %7, 2
  %140 = and i32 %139, 1
  %141 = sub i32 7, %138
  %142 = shl i32 %140, %141
  %143 = trunc i32 %142 to i8
  %144 = or i8 %137, %143
  store i8 %144, i8* %16, align 8
  %145 = add i32 %138, 1
  store i32 %145, i32* %15, align 4
  %146 = icmp eq i32 %145, 8
  br i1 %146, label %147, label %148

147:                                              ; preds = %136
  tail call void @_ZN3net12huffman_trie13TrieBitBuffer17AppendBitsElementEhh(%"class.net::huffman_trie::TrieBitBuffer"* %0, i8 zeroext undef, i8 zeroext undef) #10
  store i32 0, i32* %15, align 4
  store i8 0, i8* %16, align 8
  br label %148

148:                                              ; preds = %147, %136
  %149 = phi i8 [ %144, %136 ], [ 0, %147 ]
  %150 = phi i32 [ %145, %136 ], [ 0, %147 ]
  %151 = lshr i32 %7, 1
  %152 = and i32 %151, 1
  %153 = sub i32 7, %150
  %154 = shl i32 %152, %153
  %155 = trunc i32 %154 to i8
  %156 = or i8 %149, %155
  store i8 %156, i8* %16, align 8
  %157 = add i32 %150, 1
  store i32 %157, i32* %15, align 4
  %158 = icmp eq i32 %157, 8
  br i1 %158, label %159, label %160

159:                                              ; preds = %148
  tail call void @_ZN3net12huffman_trie13TrieBitBuffer17AppendBitsElementEhh(%"class.net::huffman_trie::TrieBitBuffer"* %0, i8 zeroext undef, i8 zeroext undef) #10
  store i32 0, i32* %15, align 4
  store i8 0, i8* %16, align 8
  br label %160

160:                                              ; preds = %159, %148
  %161 = phi i8 [ %156, %148 ], [ 0, %159 ]
  %162 = phi i32 [ %157, %148 ], [ 0, %159 ]
  %163 = and i32 %7, 1
  %164 = sub i32 7, %162
  %165 = shl i32 %163, %164
  %166 = trunc i32 %165 to i8
  %167 = or i8 %161, %166
  store i8 %167, i8* %16, align 8
  %168 = add i32 %162, 1
  store i32 %168, i32* %15, align 4
  %169 = icmp eq i32 %168, 8
  br i1 %169, label %170, label %110

170:                                              ; preds = %160
  tail call void @_ZN3net12huffman_trie13TrieBitBuffer17AppendBitsElementEhh(%"class.net::huffman_trie::TrieBitBuffer"* %0, i8 zeroext undef, i8 zeroext undef) #10
  store i32 0, i32* %15, align 4
  store i8 0, i8* %16, align 8
  br label %110

171:                                              ; preds = %71
  tail call void @_ZN3net12huffman_trie13TrieBitBuffer17AppendBitsElementEhh(%"class.net::huffman_trie::TrieBitBuffer"* %0, i8 zeroext undef, i8 zeroext undef) #10
  store i32 0, i32* %46, align 4
  store i8 0, i8* %47, align 8
  br label %172

172:                                              ; preds = %171, %71
  %173 = phi i8 [ %79, %71 ], [ 0, %171 ]
  %174 = phi i32 [ %80, %71 ], [ 0, %171 ]
  %175 = lshr i32 %61, 1
  %176 = and i32 %175, 1
  %177 = sub i32 7, %174
  %178 = shl i32 %176, %177
  %179 = trunc i32 %178 to i8
  %180 = or i8 %173, %179
  store i8 %180, i8* %47, align 8
  %181 = add i32 %174, 1
  store i32 %181, i32* %46, align 4
  %182 = icmp eq i32 %181, 8
  br i1 %182, label %183, label %184

183:                                              ; preds = %172
  tail call void @_ZN3net12huffman_trie13TrieBitBuffer17AppendBitsElementEhh(%"class.net::huffman_trie::TrieBitBuffer"* %0, i8 zeroext undef, i8 zeroext undef) #10
  store i32 0, i32* %46, align 4
  store i8 0, i8* %47, align 8
  br label %184

184:                                              ; preds = %183, %172
  %185 = phi i8 [ %180, %172 ], [ 0, %183 ]
  %186 = phi i32 [ %181, %172 ], [ 0, %183 ]
  %187 = and i32 %61, 1
  %188 = sub i32 7, %186
  %189 = shl i32 %187, %188
  %190 = trunc i32 %189 to i8
  %191 = or i8 %185, %190
  store i8 %191, i8* %47, align 8
  %192 = add i32 %186, 1
  store i32 %192, i32* %46, align 4
  %193 = icmp eq i32 %192, 8
  br i1 %193, label %194, label %195

194:                                              ; preds = %184
  tail call void @_ZN3net12huffman_trie13TrieBitBuffer17AppendBitsElementEhh(%"class.net::huffman_trie::TrieBitBuffer"* %0, i8 zeroext undef, i8 zeroext undef) #10
  store i32 0, i32* %46, align 4
  store i8 0, i8* %47, align 8
  br label %195

195:                                              ; preds = %194, %184
  %196 = phi i8 [ 0, %194 ], [ %191, %184 ]
  %197 = phi i32 [ 0, %194 ], [ %192, %184 ]
  %198 = icmp eq i8 %12, 0
  br i1 %198, label %110, label %82
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i8 @_ZNK3net12huffman_trie13TrieBitBuffer9BitLengthEj(%"class.net::huffman_trie::TrieBitBuffer"* nocapture readnone, i32) local_unnamed_addr #1 align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %8, label %4

4:                                                ; preds = %2
  %5 = call i32 @llvm.ctlz.i32(i32 %1, i1 true), !range !2
  %6 = trunc i32 %5 to i8
  %7 = sub nuw nsw i8 32, %6
  br label %8

8:                                                ; preds = %4, %2
  %9 = phi i8 [ 0, %2 ], [ %7, %4 ]
  ret i8 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net12huffman_trie13TrieBitBuffer21AppendPositionElementEj(%"class.net::huffman_trie::TrieBitBuffer"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::huffman_trie::TrieBitBuffer", %"class.net::huffman_trie::TrieBitBuffer"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.net::huffman_trie::TrieBitBuffer", %"class.net::huffman_trie::TrieBitBuffer"* %0, i64 0, i32 2, i32 0, i32 1
  %5 = load %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"*, %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"** %4, align 8
  %6 = getelementptr inbounds %"class.net::huffman_trie::TrieBitBuffer", %"class.net::huffman_trie::TrieBitBuffer"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %7 = load %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"*, %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"** %6, align 8
  %8 = icmp eq %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"* %5, %7
  %9 = ptrtoint %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"* %7 to i64
  br i1 %8, label %18, label %10

10:                                               ; preds = %2
  %11 = bitcast %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"* %5 to i64*
  %12 = zext i32 %1 to i64
  %13 = shl nuw i64 %12, 32
  %14 = or i64 %13, 2863268010
  store i64 %14, i64* %11, align 4
  %15 = getelementptr inbounds %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition", %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"* %5, i64 1
  %16 = ptrtoint %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"* %15 to i64
  %17 = bitcast %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"** %4 to i64*
  store i64 %16, i64* %17, align 8
  br label %78

18:                                               ; preds = %2
  %19 = ptrtoint %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"* %5 to i64
  %20 = bitcast %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"** %4 to i64*
  %21 = bitcast %"class.std::__1::vector"* %3 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %19, %22
  %24 = ashr exact i64 %23, 3
  %25 = add nsw i64 %24, 1
  %26 = icmp ugt i64 %25, 2305843009213693951
  br i1 %26, label %27, label %29

27:                                               ; preds = %18
  %28 = bitcast %"class.std::__1::vector"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %28) #11
  unreachable

29:                                               ; preds = %18
  %30 = bitcast %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"** %6 to i64*
  %31 = sub i64 %9, %22
  %32 = ashr exact i64 %31, 3
  %33 = icmp ult i64 %32, 1152921504606846975
  br i1 %33, label %34, label %42

34:                                               ; preds = %29
  %35 = ashr exact i64 %31, 2
  %36 = icmp ult i64 %35, %25
  %37 = select i1 %36, i64 %25, i64 %35
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %47, label %39

39:                                               ; preds = %34
  %40 = icmp ugt i64 %37, 2305843009213693951
  br i1 %40, label %41, label %42

41:                                               ; preds = %39
  tail call void @abort() #11
  unreachable

42:                                               ; preds = %39, %29
  %43 = phi i64 [ %37, %39 ], [ 2305843009213693951, %29 ]
  %44 = shl i64 %43, 3
  %45 = tail call i8* @_Znwm(i64 %44) #9
  %46 = bitcast i8* %45 to %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"*
  br label %47

47:                                               ; preds = %42, %34
  %48 = phi i64 [ %43, %42 ], [ 0, %34 ]
  %49 = phi %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"* [ %46, %42 ], [ null, %34 ]
  %50 = getelementptr inbounds %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition", %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"* %49, i64 %24
  %51 = getelementptr inbounds %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition", %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"* %49, i64 %48
  %52 = ptrtoint %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"* %51 to i64
  %53 = bitcast %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"* %50 to i64*
  %54 = zext i32 %1 to i64
  %55 = shl nuw i64 %54, 32
  %56 = or i64 %55, 2863268010
  store i64 %56, i64* %53, align 4
  %57 = getelementptr inbounds %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition", %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"* %50, i64 1
  %58 = ptrtoint %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"* %57 to i64
  %59 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %60 = load %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"*, %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"** %59, align 8
  %61 = load i64, i64* %20, align 8
  %62 = ptrtoint %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"* %60 to i64
  %63 = sub i64 %61, %62
  %64 = ashr exact i64 %63, 3
  %65 = sub nsw i64 0, %64
  %66 = getelementptr inbounds %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition", %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"* %50, i64 %65
  %67 = ptrtoint %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"* %66 to i64
  %68 = icmp sgt i64 %63, 0
  br i1 %68, label %69, label %73

69:                                               ; preds = %47
  %70 = getelementptr inbounds %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition", %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"* %66, i64 0, i32 0
  %71 = getelementptr inbounds %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition", %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"* %60, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %70, i8* align 4 %71, i64 %63, i1 false) #10
  %72 = load %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"*, %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"** %59, align 8
  br label %73

73:                                               ; preds = %69, %47
  %74 = phi %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"* [ %60, %47 ], [ %72, %69 ]
  store i64 %67, i64* %21, align 8
  store i64 %58, i64* %20, align 8
  store i64 %52, i64* %30, align 8
  %75 = icmp eq %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"* %74, null
  br i1 %75, label %78, label %76

76:                                               ; preds = %73
  %77 = getelementptr inbounds %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition", %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"* %74, i64 0, i32 0
  tail call void @_ZdlPv(i8* %77) #9
  br label %78

78:                                               ; preds = %10, %73, %76
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net12huffman_trie13TrieBitBuffer9WriteCharEhRKNSt3__13mapIhNS0_21HuffmanRepresentationENS2_4lessIhEENS2_9allocatorINS2_4pairIKhS4_EEEEEEPNS0_14HuffmanBuilderE(%"class.net::huffman_trie::TrieBitBuffer"*, i8 zeroext, %"class.std::__1::map"* dereferenceable(24), %"class.net::huffman_trie::HuffmanBuilder"*) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  %6 = bitcast %"class.std::__1::__tree_end_node"* %5 to %"class.std::__1::__tree_node"**
  %7 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %6, align 8
  %8 = icmp eq %"class.std::__1::__tree_node"* %7, null
  br i1 %8, label %30, label %9

9:                                                ; preds = %4, %9
  %10 = phi %"class.std::__1::__tree_end_node"* [ %20, %9 ], [ %5, %4 ]
  %11 = phi %"class.std::__1::__tree_node"* [ %21, %9 ], [ %7, %4 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 1, i32 0, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp ult i8 %13, %1
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.std::__1::__tree_node_base"** %15 to %"class.std::__1::__tree_node"**
  %17 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0
  %18 = bitcast %"class.std::__1::__tree_node"* %11 to %"class.std::__1::__tree_node"**
  %19 = select i1 %14, %"class.std::__1::__tree_node"** %16, %"class.std::__1::__tree_node"** %18
  %20 = select i1 %14, %"class.std::__1::__tree_end_node"* %10, %"class.std::__1::__tree_end_node"* %17
  %21 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %19, align 8
  %22 = icmp eq %"class.std::__1::__tree_node"* %21, null
  br i1 %22, label %23, label %9

23:                                               ; preds = %9
  %24 = icmp eq %"class.std::__1::__tree_end_node"* %20, %5
  br i1 %24, label %30, label %25

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::__tree_end_node"* %20 to %"class.std::__1::__tree_node"*
  %27 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %26, i64 0, i32 1, i32 0, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp ugt i8 %28, %1
  br i1 %29, label %30, label %31

30:                                               ; preds = %25, %23, %4
  br label %31

31:                                               ; preds = %25, %30
  %32 = phi %"class.std::__1::__tree_end_node"* [ %5, %30 ], [ %20, %25 ]
  %33 = icmp eq %"class.net::huffman_trie::HuffmanBuilder"* %3, null
  br i1 %33, label %35, label %34

34:                                               ; preds = %31
  tail call void @_ZN3net12huffman_trie14HuffmanBuilder11RecordUsageEh(%"class.net::huffman_trie::HuffmanBuilder"* nonnull %3, i8 zeroext %1) #10
  br label %35

35:                                               ; preds = %31, %34
  %36 = bitcast %"class.std::__1::__tree_end_node"* %32 to %"class.std::__1::__tree_node"*
  %37 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %32, i64 4
  %38 = bitcast %"class.std::__1::__tree_end_node"* %37 to i32*
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %36, i64 0, i32 1, i32 0, i32 1, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = trunc i32 %41 to i8
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %70, label %44

44:                                               ; preds = %35
  %45 = and i32 %41, 255
  %46 = getelementptr inbounds %"class.net::huffman_trie::TrieBitBuffer", %"class.net::huffman_trie::TrieBitBuffer"* %0, i64 0, i32 1
  %47 = getelementptr inbounds %"class.net::huffman_trie::TrieBitBuffer", %"class.net::huffman_trie::TrieBitBuffer"* %0, i64 0, i32 0
  %48 = load i32, i32* %46, align 4
  %49 = load i8, i8* %47, align 8
  br label %50

50:                                               ; preds = %65, %44
  %51 = phi i8 [ %49, %44 ], [ %66, %65 ]
  %52 = phi i32 [ %48, %44 ], [ %67, %65 ]
  %53 = phi i8 [ 1, %44 ], [ %68, %65 ]
  %54 = zext i8 %53 to i32
  %55 = sub nsw i32 %45, %54
  %56 = lshr i32 %39, %55
  %57 = and i32 %56, 1
  %58 = sub i32 7, %52
  %59 = shl i32 %57, %58
  %60 = trunc i32 %59 to i8
  %61 = or i8 %51, %60
  store i8 %61, i8* %47, align 8
  %62 = add i32 %52, 1
  store i32 %62, i32* %46, align 4
  %63 = icmp eq i32 %62, 8
  br i1 %63, label %64, label %65

64:                                               ; preds = %50
  tail call void @_ZN3net12huffman_trie13TrieBitBuffer17AppendBitsElementEhh(%"class.net::huffman_trie::TrieBitBuffer"* %0, i8 zeroext undef, i8 zeroext undef) #10
  store i32 0, i32* %46, align 4
  store i8 0, i8* %47, align 8
  br label %65

65:                                               ; preds = %64, %50
  %66 = phi i8 [ %61, %50 ], [ 0, %64 ]
  %67 = phi i32 [ %62, %50 ], [ 0, %64 ]
  %68 = add i8 %53, 1
  %69 = icmp ugt i8 %68, %42
  br i1 %69, label %70, label %50

70:                                               ; preds = %65, %35
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN3net12huffman_trie14HuffmanBuilder11RecordUsageEh(%"class.net::huffman_trie::HuffmanBuilder"*, i8 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net12huffman_trie13TrieBitBuffer9WriteSizeEm(%"class.net::huffman_trie::TrieBitBuffer"*, i64) local_unnamed_addr #0 align 2 {
  switch i64 %1, label %64 [
    i64 0, label %3
    i64 1, label %13
    i64 2, label %28
    i64 3, label %43
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"class.net::huffman_trie::TrieBitBuffer", %"class.net::huffman_trie::TrieBitBuffer"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.net::huffman_trie::TrieBitBuffer", %"class.net::huffman_trie::TrieBitBuffer"* %0, i64 0, i32 0
  %6 = load i32, i32* %4, align 4
  %7 = add i32 %6, 1
  store i32 %7, i32* %4, align 4
  %8 = icmp eq i32 %7, 8
  br i1 %8, label %9, label %10

9:                                                ; preds = %3
  tail call void @_ZN3net12huffman_trie13TrieBitBuffer17AppendBitsElementEhh(%"class.net::huffman_trie::TrieBitBuffer"* %0, i8 zeroext undef, i8 zeroext undef) #10
  store i8 0, i8* %5, align 8
  store i32 1, i32* %4, align 4
  br label %105

10:                                               ; preds = %3
  %11 = add i32 %6, 2
  store i32 %11, i32* %4, align 4
  %12 = icmp eq i32 %11, 8
  br i1 %12, label %106, label %105

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.net::huffman_trie::TrieBitBuffer", %"class.net::huffman_trie::TrieBitBuffer"* %0, i64 0, i32 1
  %15 = getelementptr inbounds %"class.net::huffman_trie::TrieBitBuffer", %"class.net::huffman_trie::TrieBitBuffer"* %0, i64 0, i32 0
  %16 = load i32, i32* %14, align 4
  %17 = load i8, i8* %15, align 8
  %18 = sub i32 7, %16
  %19 = shl i32 1, %18
  %20 = trunc i32 %19 to i8
  %21 = or i8 %17, %20
  store i8 %21, i8* %15, align 8
  %22 = add i32 %16, 1
  store i32 %22, i32* %14, align 4
  %23 = icmp eq i32 %22, 8
  br i1 %23, label %24, label %25

24:                                               ; preds = %13
  tail call void @_ZN3net12huffman_trie13TrieBitBuffer17AppendBitsElementEhh(%"class.net::huffman_trie::TrieBitBuffer"* %0, i8 zeroext undef, i8 zeroext undef) #10
  store i8 0, i8* %15, align 8
  store i32 1, i32* %14, align 4
  br label %108

25:                                               ; preds = %13
  store i8 %21, i8* %15, align 8
  %26 = add i32 %16, 2
  store i32 %26, i32* %14, align 4
  %27 = icmp eq i32 %26, 8
  br i1 %27, label %107, label %110

28:                                               ; preds = %2
  %29 = getelementptr inbounds %"class.net::huffman_trie::TrieBitBuffer", %"class.net::huffman_trie::TrieBitBuffer"* %0, i64 0, i32 1
  %30 = getelementptr inbounds %"class.net::huffman_trie::TrieBitBuffer", %"class.net::huffman_trie::TrieBitBuffer"* %0, i64 0, i32 0
  %31 = load i32, i32* %29, align 4
  %32 = load i8, i8* %30, align 8
  %33 = sub i32 7, %31
  %34 = shl i32 1, %33
  %35 = trunc i32 %34 to i8
  %36 = or i8 %32, %35
  store i8 %36, i8* %30, align 8
  %37 = add i32 %31, 1
  store i32 %37, i32* %29, align 4
  %38 = icmp eq i32 %37, 8
  br i1 %38, label %39, label %40

39:                                               ; preds = %28
  tail call void @_ZN3net12huffman_trie13TrieBitBuffer17AppendBitsElementEhh(%"class.net::huffman_trie::TrieBitBuffer"* %0, i8 zeroext undef, i8 zeroext undef) #10
  store i8 0, i8* %30, align 8
  store i32 1, i32* %29, align 4
  br label %115

40:                                               ; preds = %28
  store i8 %36, i8* %30, align 8
  %41 = add i32 %31, 2
  store i32 %41, i32* %29, align 4
  %42 = icmp eq i32 %41, 8
  br i1 %42, label %114, label %115

43:                                               ; preds = %2
  %44 = getelementptr inbounds %"class.net::huffman_trie::TrieBitBuffer", %"class.net::huffman_trie::TrieBitBuffer"* %0, i64 0, i32 1
  %45 = getelementptr inbounds %"class.net::huffman_trie::TrieBitBuffer", %"class.net::huffman_trie::TrieBitBuffer"* %0, i64 0, i32 0
  %46 = load i32, i32* %44, align 4
  %47 = load i8, i8* %45, align 8
  %48 = sub i32 7, %46
  %49 = shl i32 1, %48
  %50 = trunc i32 %49 to i8
  %51 = or i8 %47, %50
  store i8 %51, i8* %45, align 8
  %52 = add i32 %46, 1
  store i32 %52, i32* %44, align 4
  %53 = icmp eq i32 %52, 8
  br i1 %53, label %54, label %55

54:                                               ; preds = %43
  tail call void @_ZN3net12huffman_trie13TrieBitBuffer17AppendBitsElementEhh(%"class.net::huffman_trie::TrieBitBuffer"* %0, i8 zeroext undef, i8 zeroext undef) #10
  store i32 0, i32* %44, align 4
  store i8 0, i8* %45, align 8
  br label %55

55:                                               ; preds = %54, %43
  %56 = phi i8 [ %51, %43 ], [ 0, %54 ]
  %57 = phi i32 [ %52, %43 ], [ 0, %54 ]
  %58 = sub i32 7, %57
  %59 = shl i32 1, %58
  %60 = trunc i32 %59 to i8
  %61 = or i8 %56, %60
  store i8 %61, i8* %45, align 8
  %62 = add i32 %57, 1
  store i32 %62, i32* %44, align 4
  %63 = icmp eq i32 %62, 8
  br i1 %63, label %125, label %126

64:                                               ; preds = %2
  %65 = trunc i64 %1 to i32
  %66 = and i32 %65, 1
  %67 = getelementptr inbounds %"class.net::huffman_trie::TrieBitBuffer", %"class.net::huffman_trie::TrieBitBuffer"* %0, i64 0, i32 1
  %68 = load i32, i32* %67, align 4
  %69 = sub i32 7, %68
  %70 = shl i32 %66, %69
  %71 = getelementptr inbounds %"class.net::huffman_trie::TrieBitBuffer", %"class.net::huffman_trie::TrieBitBuffer"* %0, i64 0, i32 0
  %72 = load i8, i8* %71, align 8
  %73 = trunc i32 %70 to i8
  %74 = or i8 %72, %73
  store i8 %74, i8* %71, align 8
  %75 = add i32 %68, 1
  store i32 %75, i32* %67, align 4
  %76 = icmp eq i32 %75, 8
  br i1 %76, label %77, label %78

77:                                               ; preds = %64
  tail call void @_ZN3net12huffman_trie13TrieBitBuffer17AppendBitsElementEhh(%"class.net::huffman_trie::TrieBitBuffer"* %0, i8 zeroext undef, i8 zeroext undef) #10
  store i32 0, i32* %67, align 4
  store i8 0, i8* %71, align 8
  br label %78

78:                                               ; preds = %64, %77
  %79 = phi i8 [ %74, %64 ], [ 0, %77 ]
  %80 = phi i32 [ %75, %64 ], [ 0, %77 ]
  %81 = add i64 %1, 1
  %82 = lshr i64 %81, 1
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %84, label %89

84:                                               ; preds = %100, %78
  %85 = phi i32 [ %80, %78 ], [ %101, %100 ]
  %86 = add i32 %85, 1
  store i32 %86, i32* %67, align 4
  %87 = icmp eq i32 %86, 8
  br i1 %87, label %88, label %105

88:                                               ; preds = %84
  tail call void @_ZN3net12huffman_trie13TrieBitBuffer17AppendBitsElementEhh(%"class.net::huffman_trie::TrieBitBuffer"* %0, i8 zeroext undef, i8 zeroext undef) #10
  store i32 0, i32* %67, align 4
  store i8 0, i8* %71, align 8
  br label %105

89:                                               ; preds = %78, %100
  %90 = phi i8 [ %102, %100 ], [ %79, %78 ]
  %91 = phi i32 [ %101, %100 ], [ %80, %78 ]
  %92 = phi i64 [ %103, %100 ], [ %82, %78 ]
  %93 = sub i32 7, %91
  %94 = shl i32 1, %93
  %95 = trunc i32 %94 to i8
  %96 = or i8 %90, %95
  store i8 %96, i8* %71, align 8
  %97 = add i32 %91, 1
  store i32 %97, i32* %67, align 4
  %98 = icmp eq i32 %97, 8
  br i1 %98, label %99, label %100

99:                                               ; preds = %89
  tail call void @_ZN3net12huffman_trie13TrieBitBuffer17AppendBitsElementEhh(%"class.net::huffman_trie::TrieBitBuffer"* %0, i8 zeroext undef, i8 zeroext undef) #10
  store i32 0, i32* %67, align 4
  store i8 0, i8* %71, align 8
  br label %100

100:                                              ; preds = %89, %99
  %101 = phi i32 [ %97, %89 ], [ 0, %99 ]
  %102 = phi i8 [ %96, %89 ], [ 0, %99 ]
  %103 = add nsw i64 %92, -1
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %84, label %89

105:                                              ; preds = %126, %129, %125, %115, %124, %110, %113, %108, %10, %106, %9, %88, %84
  ret void

106:                                              ; preds = %10
  tail call void @_ZN3net12huffman_trie13TrieBitBuffer17AppendBitsElementEhh(%"class.net::huffman_trie::TrieBitBuffer"* %0, i8 zeroext undef, i8 zeroext undef) #10
  store i32 0, i32* %4, align 4
  store i8 0, i8* %5, align 8
  br label %105

107:                                              ; preds = %25
  tail call void @_ZN3net12huffman_trie13TrieBitBuffer17AppendBitsElementEhh(%"class.net::huffman_trie::TrieBitBuffer"* %0, i8 zeroext undef, i8 zeroext undef) #10
  store i32 0, i32* %14, align 4
  store i8 0, i8* %15, align 8
  br label %108

108:                                              ; preds = %107, %24
  %109 = phi i32 [ 2, %24 ], [ 1, %107 ]
  store i8 0, i8* %15, align 8
  store i32 %109, i32* %14, align 4
  br label %105

110:                                              ; preds = %25
  store i8 %21, i8* %15, align 8
  %111 = add i32 %16, 3
  store i32 %111, i32* %14, align 4
  %112 = icmp eq i32 %111, 8
  br i1 %112, label %113, label %105

113:                                              ; preds = %110
  tail call void @_ZN3net12huffman_trie13TrieBitBuffer17AppendBitsElementEhh(%"class.net::huffman_trie::TrieBitBuffer"* %0, i8 zeroext undef, i8 zeroext undef) #10
  store i32 0, i32* %14, align 4
  store i8 0, i8* %15, align 8
  br label %105

114:                                              ; preds = %40
  tail call void @_ZN3net12huffman_trie13TrieBitBuffer17AppendBitsElementEhh(%"class.net::huffman_trie::TrieBitBuffer"* %0, i8 zeroext undef, i8 zeroext undef) #10
  store i32 0, i32* %29, align 4
  store i8 0, i8* %30, align 8
  br label %115

115:                                              ; preds = %39, %114, %40
  %116 = phi i8 [ %36, %40 ], [ 0, %114 ], [ 0, %39 ]
  %117 = phi i32 [ %41, %40 ], [ 0, %114 ], [ 1, %39 ]
  %118 = sub i32 7, %117
  %119 = shl i32 1, %118
  %120 = trunc i32 %119 to i8
  %121 = or i8 %116, %120
  store i8 %121, i8* %30, align 8
  %122 = add i32 %117, 1
  store i32 %122, i32* %29, align 4
  %123 = icmp eq i32 %122, 8
  br i1 %123, label %124, label %105

124:                                              ; preds = %115
  tail call void @_ZN3net12huffman_trie13TrieBitBuffer17AppendBitsElementEhh(%"class.net::huffman_trie::TrieBitBuffer"* %0, i8 zeroext undef, i8 zeroext undef) #10
  store i32 0, i32* %29, align 4
  store i8 0, i8* %30, align 8
  br label %105

125:                                              ; preds = %55
  tail call void @_ZN3net12huffman_trie13TrieBitBuffer17AppendBitsElementEhh(%"class.net::huffman_trie::TrieBitBuffer"* %0, i8 zeroext undef, i8 zeroext undef) #10
  store i8 0, i8* %45, align 8
  store i32 1, i32* %44, align 4
  br label %105

126:                                              ; preds = %55
  store i8 %61, i8* %45, align 8
  %127 = add i32 %57, 2
  store i32 %127, i32* %44, align 4
  %128 = icmp eq i32 %127, 8
  br i1 %128, label %129, label %105

129:                                              ; preds = %126
  tail call void @_ZN3net12huffman_trie13TrieBitBuffer17AppendBitsElementEhh(%"class.net::huffman_trie::TrieBitBuffer"* %0, i8 zeroext undef, i8 zeroext undef) #10
  store i32 0, i32* %44, align 4
  store i8 0, i8* %45, align 8
  br label %105
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net12huffman_trie13TrieBitBuffer17AppendBitsElementEhh(%"class.net::huffman_trie::TrieBitBuffer"*, i8 zeroext, i8 zeroext) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.net::huffman_trie::TrieBitBuffer", %"class.net::huffman_trie::TrieBitBuffer"* %0, i64 0, i32 0
  %5 = load i8, i8* %4, align 8
  %6 = getelementptr inbounds %"class.net::huffman_trie::TrieBitBuffer", %"class.net::huffman_trie::TrieBitBuffer"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.net::huffman_trie::TrieBitBuffer", %"class.net::huffman_trie::TrieBitBuffer"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.net::huffman_trie::TrieBitBuffer", %"class.net::huffman_trie::TrieBitBuffer"* %0, i64 0, i32 2, i32 0, i32 1
  %10 = load %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"*, %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"** %9, align 8
  %11 = getelementptr inbounds %"class.net::huffman_trie::TrieBitBuffer", %"class.net::huffman_trie::TrieBitBuffer"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %12 = load %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"*, %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"** %11, align 8
  %13 = icmp eq %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"* %10, %12
  %14 = ptrtoint %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"* %12 to i64
  br i1 %13, label %26, label %15

15:                                               ; preds = %3
  %16 = bitcast %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"* %10 to i64*
  %17 = shl i32 %7, 8
  %18 = and i32 %17, 65280
  %19 = zext i32 %18 to i64
  %20 = zext i8 %5 to i64
  %21 = or i64 %20, %19
  %22 = or i64 %21, -6148914691236560896
  store i64 %22, i64* %16, align 4
  %23 = getelementptr inbounds %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition", %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"* %10, i64 1
  %24 = ptrtoint %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"* %23 to i64
  %25 = bitcast %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"** %9 to i64*
  store i64 %24, i64* %25, align 8
  br label %89

26:                                               ; preds = %3
  %27 = ptrtoint %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"* %10 to i64
  %28 = bitcast %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"** %9 to i64*
  %29 = bitcast %"class.std::__1::vector"* %8 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 %27, %30
  %32 = ashr exact i64 %31, 3
  %33 = add nsw i64 %32, 1
  %34 = icmp ugt i64 %33, 2305843009213693951
  br i1 %34, label %35, label %37

35:                                               ; preds = %26
  %36 = bitcast %"class.std::__1::vector"* %8 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %36) #11
  unreachable

37:                                               ; preds = %26
  %38 = bitcast %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"** %11 to i64*
  %39 = sub i64 %14, %30
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, 1152921504606846975
  br i1 %41, label %42, label %50

42:                                               ; preds = %37
  %43 = ashr exact i64 %39, 2
  %44 = icmp ult i64 %43, %33
  %45 = select i1 %44, i64 %33, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 2305843009213693951
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #11
  unreachable

50:                                               ; preds = %47, %37
  %51 = phi i64 [ %45, %47 ], [ 2305843009213693951, %37 ]
  %52 = shl i64 %51, 3
  %53 = tail call i8* @_Znwm(i64 %52) #9
  %54 = bitcast i8* %53 to %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"*
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition", %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"* %57, i64 %32
  %59 = getelementptr inbounds %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition", %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"* %57, i64 %56
  %60 = ptrtoint %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"* %59 to i64
  %61 = bitcast %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"* %58 to i64*
  %62 = shl i32 %7, 8
  %63 = and i32 %62, 65280
  %64 = zext i32 %63 to i64
  %65 = zext i8 %5 to i64
  %66 = or i64 %65, %64
  %67 = or i64 %66, -6148914691236560896
  store i64 %67, i64* %61, align 4
  %68 = getelementptr inbounds %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition", %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"* %58, i64 1
  %69 = ptrtoint %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"* %68 to i64
  %70 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %71 = load %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"*, %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"** %70, align 8
  %72 = load i64, i64* %28, align 8
  %73 = ptrtoint %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"* %71 to i64
  %74 = sub i64 %72, %73
  %75 = ashr exact i64 %74, 3
  %76 = sub nsw i64 0, %75
  %77 = getelementptr inbounds %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition", %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"* %58, i64 %76
  %78 = ptrtoint %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"* %77 to i64
  %79 = icmp sgt i64 %74, 0
  br i1 %79, label %80, label %84

80:                                               ; preds = %55
  %81 = getelementptr inbounds %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition", %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"* %77, i64 0, i32 0
  %82 = getelementptr inbounds %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition", %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"* %71, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %81, i8* align 4 %82, i64 %74, i1 false) #10
  %83 = load %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"*, %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"** %70, align 8
  br label %84

84:                                               ; preds = %80, %55
  %85 = phi %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"* [ %71, %55 ], [ %83, %80 ]
  store i64 %78, i64* %29, align 8
  store i64 %69, i64* %28, align 8
  store i64 %60, i64* %38, align 8
  %86 = icmp eq %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"* %85, null
  br i1 %86, label %89, label %87

87:                                               ; preds = %84
  %88 = getelementptr inbounds %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition", %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"* %85, i64 0, i32 0
  tail call void @_ZdlPv(i8* %88) #9
  br label %89

89:                                               ; preds = %15, %84, %87
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net12huffman_trie13TrieBitBuffer16WriteToBitWriterEPNS0_9BitWriterE(%"class.net::huffman_trie::TrieBitBuffer"*, %"class.net::huffman_trie::BitWriter"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::huffman_trie::TrieBitBuffer", %"class.net::huffman_trie::TrieBitBuffer"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.net::huffman_trie::TrieBitBuffer", %"class.net::huffman_trie::TrieBitBuffer"* %0, i64 0, i32 0
  tail call void @_ZN3net12huffman_trie13TrieBitBuffer17AppendBitsElementEhh(%"class.net::huffman_trie::TrieBitBuffer"* %0, i8 zeroext undef, i8 zeroext undef) #10
  store i32 0, i32* %3, align 4
  store i8 0, i8* %7, align 8
  br label %8

8:                                                ; preds = %2, %6
  %9 = getelementptr inbounds %"class.net::huffman_trie::BitWriter", %"class.net::huffman_trie::BitWriter"* %1, i64 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.net::huffman_trie::TrieBitBuffer", %"class.net::huffman_trie::TrieBitBuffer"* %0, i64 0, i32 2, i32 0, i32 0
  %12 = load %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"*, %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"** %11, align 8
  %13 = getelementptr inbounds %"class.net::huffman_trie::TrieBitBuffer", %"class.net::huffman_trie::TrieBitBuffer"* %0, i64 0, i32 2, i32 0, i32 1
  %14 = load %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"*, %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"** %13, align 8
  %15 = icmp eq %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"* %12, %14
  br i1 %15, label %16, label %17

16:                                               ; preds = %41, %8
  ret i32 %10

17:                                               ; preds = %8, %41
  %18 = phi %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"* [ %42, %41 ], [ %12, %8 ]
  %19 = getelementptr inbounds %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition", %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"* %18, i64 0, i32 1
  %20 = load i8, i8* %19, align 1
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %29, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition", %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"* %18, i64 0, i32 0
  %24 = load i8, i8* %23, align 4
  %25 = zext i8 %24 to i32
  %26 = zext i8 %20 to i32
  %27 = sub nsw i32 8, %26
  %28 = lshr i32 %25, %27
  tail call void @_ZN3net12huffman_trie9BitWriter9WriteBitsEjh(%"class.net::huffman_trie::BitWriter"* %1, i32 %28, i8 zeroext %20) #10
  br label %41

29:                                               ; preds = %17
  %30 = getelementptr inbounds %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition", %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"* %18, i64 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = sub i32 %10, %31
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %38, label %34

34:                                               ; preds = %29
  %35 = tail call i32 @llvm.ctlz.i32(i32 %32, i1 true) #10, !range !2
  %36 = trunc i32 %35 to i8
  %37 = sub nuw nsw i8 32, %36
  br label %38

38:                                               ; preds = %29, %34
  %39 = phi i8 [ 0, %29 ], [ %37, %34 ]
  %40 = zext i8 %39 to i32
  tail call void @_ZN3net12huffman_trie9BitWriter9WriteBitsEjh(%"class.net::huffman_trie::BitWriter"* %1, i32 %40, i8 zeroext 5) #10
  tail call void @_ZN3net12huffman_trie9BitWriter9WriteBitsEjh(%"class.net::huffman_trie::BitWriter"* %1, i32 %32, i8 zeroext %39) #10
  br label %41

41:                                               ; preds = %38, %22
  %42 = getelementptr inbounds %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition", %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"* %18, i64 1
  %43 = icmp eq %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"* %42, %14
  br i1 %43, label %16, label %17
}

declare void @_ZN3net12huffman_trie9BitWriter9WriteBitsEjh(%"class.net::huffman_trie::BitWriter"*, i32, i8 zeroext) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { builtin nounwind }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 0, i32 33}
