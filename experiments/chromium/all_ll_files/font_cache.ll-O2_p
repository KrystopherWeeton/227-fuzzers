; ModuleID = '../../third_party/blink/renderer/platform/fonts/font_cache.cc'
source_filename = "../../third_party/blink/renderer/platform/fonts/font_cache.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkFontMgr = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.base::Feature" = type { i8*, i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.177 }
%class.scoped_refptr.177 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.178" }
%"struct.std::__1::atomic.178" = type { %"struct.std::__1::__atomic_base.179" }
%"struct.std::__1::__atomic_base.179" = type { %"struct.std::__1::__atomic_base.180" }
%"struct.std::__1::__atomic_base.180" = type { %"struct.std::__1::__cxx_atomic_impl.181" }
%"struct.std::__1::__cxx_atomic_impl.181" = type { %"struct.std::__1::__cxx_atomic_base_impl.182" }
%"struct.std::__1::__cxx_atomic_base_impl.182" = type { i32 }
%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.scoped_refptr.188 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, float }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<blink::CustomCountHistogram>::InstanceStorage" }
%"class.WTF::StaticSingleton<blink::CustomCountHistogram>::InstanceStorage" = type { [8 x i8] }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.304, %class.scoped_refptr.188, %class.scoped_refptr.314, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.320 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.303 }
%class.scoped_refptr.303 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.321", [4 x i8] }>
%"class.WTF::RefCounted.321" = type { %"class.base::RefCounted.322" }
%"class.base::RefCounted.322" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.304 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings.305", %"class.WTF::RefCounted.312", [4 x i8] }>
%"class.blink::FontSettings.305" = type { %"class.WTF::Vector.306" }
%"class.WTF::Vector.306" = type { %"class.WTF::VectorBuffer.307" }
%"class.WTF::VectorBuffer.307" = type { %"class.WTF::VectorBufferBase.308" }
%"class.WTF::VectorBufferBase.308" = type { %"class.blink::FontTagValuePair.309"*, i32, i32 }
%"class.blink::FontTagValuePair.309" = type { i32, i32 }
%"class.WTF::RefCounted.312" = type { %"class.base::RefCounted.313" }
%"class.base::RefCounted.313" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.314 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.315", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.317, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.315" = type { %"class.base::RefCounted.316" }
%"class.base::RefCounted.316" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.317 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.318", [4 x i8] }>
%"class.WTF::RefCounted.318" = type { %"class.base::RefCounted.319" }
%"class.base::RefCounted.319" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.320 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.130", %"class.std::__1::unique_ptr.130", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.140", %"class.std::__1::unique_ptr.146", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.158", %"class.std::__1::unique_ptr.164", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.170", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.7", %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.42", %"class.std::__1::unique_ptr.49", %"class.std::__1::unique_ptr.49", %"class.std::__1::unique_ptr.56", %"class.std::__1::unique_ptr.63", %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.77", %"class.std::__1::unique_ptr.84", %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.114", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.34" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.34" = type { %"struct.std::__1::__atomic_base.35" }
%"struct.std::__1::__atomic_base.35" = type { %"struct.std::__1::__atomic_base.36" }
%"struct.std::__1::__atomic_base.36" = type { %"struct.std::__1::__cxx_atomic_impl.37" }
%"struct.std::__1::__cxx_atomic_impl.37" = type { %"struct.std::__1::__cxx_atomic_base_impl.38" }
%"struct.std::__1::__cxx_atomic_base_impl.38" = type { i64 }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.blink::Worklist.45"* }
%"class.blink::Worklist.45" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.34" }
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.blink::Worklist.52"* }
%"class.blink::Worklist.52" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.34" }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.blink::Worklist.59"* }
%"class.blink::Worklist.59" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.34" }
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.blink::Worklist.66"* }
%"class.blink::Worklist.66" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.34" }
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.blink::Worklist.73"* }
%"class.blink::Worklist.73" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.34" }
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.blink::Worklist.80"* }
%"class.blink::Worklist.80" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.34" }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.blink::Worklist.87"* }
%"class.blink::Worklist.87" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.34" }
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.94", %"class.std::__1::__compressed_pair.101", %"class.std::__1::__compressed_pair.106", %"class.std::__1::__compressed_pair.108", [4 x i8] }>
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96", %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { i64 }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { float }
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.117", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.138" }
%"class.WTF::VectorBuffer.138" = type { %"class.WTF::VectorBufferBase.139" }
%"class.WTF::VectorBufferBase.139" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.152" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.45"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.52"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.59"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.66"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.73"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.298" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.170" = type { %"struct.std::__1::__atomic_base.171" }
%"struct.std::__1::__atomic_base.171" = type { %"struct.std::__1::__cxx_atomic_impl.172" }
%"struct.std::__1::__cxx_atomic_impl.172" = type { %"struct.std::__1::__cxx_atomic_base_impl.173" }
%"struct.std::__1::__cxx_atomic_base_impl.173" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic" }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::FontCache" = type <{ i8, [3 x i8], i32, %class.sk_sp, i16, i8, [5 x i8], %"class.blink::Persistent", %"class.WTF::HashMap", %"class.WTF::HashMap.212", %"class.blink::FontDataCache", %"class.blink::Persistent.288", float, [4 x i8] }>
%class.sk_sp = type { %class.SkFontMgr* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::HeapHashSet"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::FontCacheClient"* }
%"class.blink::FontCacheClient" = type { i32 (...)** }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.174" }
%"class.WTF::HashTable.174" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"struct.blink::FontCacheKey", %"class.WTF::HashMap.194" }
%"struct.blink::FontCacheKey" = type <{ %"class.blink::FontFaceCreationParams", i32, i32, float, [4 x i8], %class.scoped_refptr.188, i8, [7 x i8] }>
%"class.blink::FontFaceCreationParams" = type { i32, %"class.WTF::AtomicString", %"class.std::__1::basic_string", i32, i32 }
%"class.WTF::HashMap.194" = type { %"class.WTF::HashTable.195" }
%"class.WTF::HashTable.195" = type <{ %"struct.WTF::KeyValuePair.198"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.198" = type { i32, %"class.std::__1::unique_ptr.199" }
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.blink::FontPlatformData"* }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp.202, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.208, i8, [7 x i8] }>
%class.sk_sp.202 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.203" }
%"struct.std::__1::atomic.203" = type { %"struct.std::__1::__atomic_base.204" }
%"struct.std::__1::__atomic_base.204" = type { %"struct.std::__1::__atomic_base.205" }
%"struct.std::__1::__atomic_base.205" = type { %"struct.std::__1::__cxx_atomic_impl.206" }
%"struct.std::__1::__cxx_atomic_impl.206" = type { %"struct.std::__1::__cxx_atomic_base_impl.207" }
%"struct.std::__1::__cxx_atomic_base_impl.207" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.208 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%"class.WTF::HashMap.212" = type { %"class.WTF::HashTable.213" }
%"class.WTF::HashTable.213" = type <{ %"struct.WTF::KeyValuePair.216"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.216" = type { %"struct.blink::FallbackListCompositeKey", %"class.std::__1::unique_ptr.222" }
%"struct.blink::FallbackListCompositeKey" = type { %"class.WTF::Vector.217", i32, float, float, float, i32, i32 }
%"class.WTF::Vector.217" = type { %"class.WTF::VectorBuffer.218" }
%"class.WTF::VectorBuffer.218" = type { %"class.WTF::VectorBufferBase.219" }
%"class.WTF::VectorBufferBase.219" = type { %"struct.blink::FontCacheKey"*, i32, i32 }
%"class.std::__1::unique_ptr.222" = type { %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"class.blink::ShapeCache"* }
%"class.blink::ShapeCache" = type { %"class.WTF::HashMap.225", %"class.WTF::HashMap.264", i32, %"class.base::WeakPtrFactory" }
%"class.WTF::HashMap.225" = type { %"class.WTF::HashTable.226" }
%"class.WTF::HashTable.226" = type <{ %"struct.WTF::KeyValuePair.229"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.229" = type { i32, %class.scoped_refptr.230 }
%class.scoped_refptr.230 = type { %"class.blink::ShapeResult"* }
%"class.blink::ShapeResult" = type <{ %"class.WTF::RefCounted.231", float, %"class.blink::FloatRect", %"class.WTF::Vector.233", %class.scoped_refptr.239, %"class.std::__1::unique_ptr.253", i32, i32, i32, [4 x i8] }>
%"class.WTF::RefCounted.231" = type { %"class.base::RefCounted.232" }
%"class.base::RefCounted.232" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%"class.WTF::Vector.233" = type { %"class.WTF::VectorBuffer.234" }
%"class.WTF::VectorBuffer.234" = type { %"class.WTF::VectorBufferBase.235" }
%"class.WTF::VectorBufferBase.235" = type { %class.scoped_refptr.236*, i32, i32 }
%class.scoped_refptr.236 = type opaque
%class.scoped_refptr.239 = type { %"class.blink::SimpleFontData"* }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.243", %class.scoped_refptr.250, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.240" }>
%"class.WTF::RefCounted.240" = type { %"class.base::RefCounted.241" }
%"class.base::RefCounted.241" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.242 }
%union.anon.242 = type { float }
%class.SkFont = type <{ %class.sk_sp.202, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.243" = type { %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.246, %class.scoped_refptr.246 }
%class.scoped_refptr.246 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.250 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.251", [4 x i8] }>
%"class.WTF::RefCounted.251" = type { %"class.base::RefCounted.252" }
%"class.base::RefCounted.252" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.std::__1::unique_ptr.253" = type { %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.blink::ShapeResult::CharacterPositionData"* }
%"class.blink::ShapeResult::CharacterPositionData" = type { %"class.WTF::Vector.256", i32, float }
%"class.WTF::Vector.256" = type { %"class.WTF::VectorBuffer.257" }
%"class.WTF::VectorBuffer.257" = type { %"class.WTF::VectorBufferBase.258" }
%"class.WTF::VectorBufferBase.258" = type { %"struct.blink::ShapeResultCharacterData"*, i32, i32 }
%"struct.blink::ShapeResultCharacterData" = type { float, i8 }
%"class.WTF::HashMap.264" = type { %"class.WTF::HashTable.265" }
%"class.WTF::HashTable.265" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type { %"class.blink::ShapeCache::SmallStringKey", %class.scoped_refptr.230 }
%"class.blink::ShapeCache::SmallStringKey" = type { i32, i16, [15 x i16] }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.269 }
%class.scoped_refptr.269 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.203" }
%"class.blink::FontDataCache" = type { %"class.WTF::HashMap.273", %"class.WTF::LinkedHashSet" }
%"class.WTF::HashMap.273" = type { %"class.WTF::HashTable.274" }
%"class.WTF::HashTable.274" = type <{ %"struct.WTF::KeyValuePair.277"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.277" = type { %"class.blink::FontPlatformData"*, %"struct.std::__1::pair.411" }
%"struct.std::__1::pair.411" = type <{ %class.scoped_refptr.246, i32, [4 x i8] }>
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.278", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.278" = type { %"class.WTF::HashTable.279" }
%"class.WTF::HashTable.279" = type <{ %"struct.WTF::KeyValuePair.282"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.282" = type <{ %class.scoped_refptr.246, i32, [4 x i8] }>
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.283", i32, i32 }
%"class.WTF::Vector.283" = type { %"class.WTF::VectorBuffer.284" }
%"class.WTF::VectorBuffer.284" = type { %"class.WTF::VectorBufferBase.285" }
%"class.WTF::VectorBufferBase.285" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type { i32, i32, %class.scoped_refptr.246 }
%"class.blink::Persistent.288" = type { %"class.blink::PersistentBase.289" }
%"class.blink::PersistentBase.289" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type { %"class.blink::FontCacheClient", %"class.blink::FontSelectorClient", %"class.blink::Member", %"class.WTF::HashMap.293" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase.290" }
%"class.blink::MemberBase.290" = type { %"class.blink::FontSelector"* }
%"class.blink::FontSelector" = type { %"class.blink::FontCacheClient", %"class.blink::Member.291" }
%"class.blink::Member.291" = type { %"class.blink::MemberBase.292" }
%"class.blink::MemberBase.292" = type { %"class.blink::FontFallbackMap"* }
%"class.WTF::HashMap.293" = type { %"class.WTF::HashTable.294" }
%"class.WTF::HashTable.294" = type <{ %"struct.WTF::KeyValuePair.297"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.297" = type { %"class.blink::FontDescription", %class.scoped_refptr.399 }
%class.scoped_refptr.399 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.400", %"class.WTF::Vector.402", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.400" = type { %"class.base::RefCounted.401" }
%"class.base::RefCounted.401" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404", [8 x i8] }
%"class.WTF::VectorBufferBase.404" = type { %class.scoped_refptr.405*, i32, i32 }
%class.scoped_refptr.405 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.240", [4 x i8] }>
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase.408" }
%"class.blink::PersistentBase.408" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr.409" }
%"class.blink::PersistentNodePtr.409" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.410 }
%class.scoped_refptr.410 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::FontGlobalContext" = type { %"class.blink::FontCache", %"class.std::__1::unique_ptr.340", %struct.hb_font_funcs_t*, %struct.hb_font_funcs_t*, %"class.std::__1::unique_ptr.346", %"class.WTF::LruCache", %"class.WTF::LruCache" }
%"class.std::__1::unique_ptr.340" = type { %"class.std::__1::__compressed_pair.341" }
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.342" }
%"struct.std::__1::__compressed_pair_elem.342" = type { %"class.blink::HarfBuzzFontCache"* }
%"class.blink::HarfBuzzFontCache" = type opaque
%struct.hb_font_funcs_t = type opaque
%"class.std::__1::unique_ptr.346" = type { %"class.std::__1::__compressed_pair.347" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.348" }
%"struct.std::__1::__compressed_pair_elem.348" = type { %"class.blink::FontUniqueNameLookup"* }
%"class.blink::FontUniqueNameLookup" = type { i32 (...)** }
%"class.WTF::LruCache" = type { %"class.WTF::HashMap.352", %"class.WTF::DoublyLinkedList", i64 }
%"class.WTF::HashMap.352" = type { %"class.WTF::HashTable.353" }
%"class.WTF::HashTable.353" = type <{ %"struct.WTF::KeyValuePair.356"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.356" = type opaque
%"class.WTF::DoublyLinkedList" = type { %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"*, %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* }
%"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey" = type opaque
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.WTF::Vector.331" = type { %"class.WTF::VectorBuffer.332" }
%"class.WTF::VectorBuffer.332" = type { %"class.WTF::VectorBufferBase.333" }
%"class.WTF::VectorBufferBase.333" = type { i32*, i32, i32 }
%"class.blink::CustomCountHistogram" = type { %"class.base::HistogramBase"* }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.178", [4 x i8] }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::trace_event::ProcessMemoryDump" = type { %"class.base::UnguessableToken", %"class.std::__1::map", %"class.std::__1::map.365", %"struct.base::trace_event::MemoryDumpArgs", %"class.std::__1::unique_ptr.376" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.357", %"class.std::__1::__compressed_pair.362" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.357" = type { %"struct.std::__1::__compressed_pair_elem.358" }
%"struct.std::__1::__compressed_pair_elem.358" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.362" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"class.std::__1::map.365" = type { %"class.std::__1::__tree.366" }
%"class.std::__1::__tree.366" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.367", %"class.std::__1::__compressed_pair.371" }
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.358" }
%"class.std::__1::__compressed_pair.371" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.base::trace_event::MemoryDumpArgs" = type { i32, i32, i64 }
%"class.std::__1::unique_ptr.376" = type { %"class.std::__1::__compressed_pair.377" }
%"class.std::__1::__compressed_pair.377" = type { %"struct.std::__1::__compressed_pair_elem.378" }
%"struct.std::__1::__compressed_pair_elem.378" = type { %"class.base::trace_event::MemoryAllocatorDump"* }
%"class.base::trace_event::MemoryAllocatorDump" = type { %"class.std::__1::basic_string", %"class.base::trace_event::MemoryAllocatorDumpGuid", i32, i32, %"class.absl::optional.379", %"class.std::__1::vector.384" }
%"class.base::trace_event::MemoryAllocatorDumpGuid" = type { i64 }
%"class.absl::optional.379" = type { %"class.absl::optional_internal::optional_data.380" }
%"class.absl::optional_internal::optional_data.380" = type { %"class.absl::optional_internal::optional_data_base.381" }
%"class.absl::optional_internal::optional_data_base.381" = type { %"class.absl::optional_internal::optional_data_dtor_base.382" }
%"class.absl::optional_internal::optional_data_dtor_base.382" = type { i8, %union.anon.383 }
%union.anon.383 = type { i64 }
%"class.std::__1::vector.384" = type { %"class.std::__1::__vector_base.385" }
%"class.std::__1::__vector_base.385" = type { %"struct.base::trace_event::MemoryAllocatorDump::Entry"*, %"struct.base::trace_event::MemoryAllocatorDump::Entry"*, %"class.std::__1::__compressed_pair.386" }
%"struct.base::trace_event::MemoryAllocatorDump::Entry" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i64, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.386" = type { %"struct.std::__1::__compressed_pair_elem.387" }
%"struct.std::__1::__compressed_pair_elem.387" = type { %"struct.base::trace_event::MemoryAllocatorDump::Entry"* }
%"class.WTF::Vector.394" = type { %"class.WTF::VectorBuffer.395" }
%"class.WTF::VectorBuffer.395" = type { %"class.WTF::VectorBufferBase.396", [32 x i8] }
%"class.WTF::VectorBufferBase.396" = type { i8**, i32, i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.WTF::StringHasher" = type { i32, i8, i16 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.blink::HeapHashTableBacking" = type { i8 }

$_ZN5blink19AlternateFamilyNameERKN3WTF12AtomicStringE = comdat any

$_ZN3WTF7HashMapIjNSt3__110unique_ptrIN5blink16FontPlatformDataENS1_14default_deleteIS4_EEEENS_7IntHashIjEENS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIS7_EENS_18PartitionAllocatorEE9RemoveAllINS_6VectorIjLj0ESE_EEEEvRKT_ = comdat any

$_ZN3WTF7HashMapIN5blink12FontCacheKeyENS0_IjNSt3__110unique_ptrINS1_16FontPlatformDataENS3_14default_deleteIS5_EEEENS_7IntHashIjEENS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIS8_EENS_18PartitionAllocatorEEENS1_16FontCacheKeyHashENSD_IS2_EENSD_ISG_EESF_E9RemoveAllINS_6VectorIS2_Lj0ESF_EEEEvRKT_ = comdat any

$_ZN5blink15FontDescriptionD2Ev = comdat any

$_ZNK5blink10ShapeCache8ByteSizeEv = comdat any

$_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeI13scoped_refptrIN5blink14SimpleFontDataEENS_18PartitionAllocatorEEELj0ES6_E14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_26VectorBackedLinkedListNodeI13scoped_refptrIN5blink14SimpleFontDataEES0_EEEEmm = comdat any

$_ZN5blink10FontFamilyD2Ev = comdat any

$_ZN5blink16SharedFontFamilyD2Ev = comdat any

$_ZN3WTF12VectorBufferIPKcLj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN3WTF6VectorIN5blink12FontCacheKeyELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink12FontCacheKeyELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink12FontCacheKeyEEEmm = comdat any

$_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_NS_7HashMapIjNSt3__110unique_ptrINS1_16FontPlatformDataENS5_14default_deleteIS7_EEEENS_7IntHashIjEENS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsISA_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINSF_IS2_EENSF_ISI_EEEESN_SH_E6insertINS_17HashMapTranslatorISP_SL_SH_EERS2_SI_EENS_18HashTableAddResultISQ_SJ_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_NS_7HashMapIjNSt3__110unique_ptrINS1_16FontPlatformDataENS5_14default_deleteIS7_EEEENS_7IntHashIjEENS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsISA_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINSF_IS2_EENSF_ISI_EEEESN_SH_E6ExpandEPSJ_ = comdat any

$_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_NS_7HashMapIjNSt3__110unique_ptrINS1_16FontPlatformDataENS5_14default_deleteIS7_EEEENS_7IntHashIjEENS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsISA_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINSF_IS2_EENSF_ISI_EEEESN_SH_E13AllocateTableEj = comdat any

$_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_NS_7HashMapIjNSt3__110unique_ptrINS1_16FontPlatformDataENS5_14default_deleteIS7_EEEENS_7IntHashIjEENS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsISA_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINSF_IS2_EENSF_ISI_EEEESN_SH_E8RehashToEPSJ_jSR_ = comdat any

$_ZN3WTF12KeyValuePairIN5blink12FontCacheKeyENS_7HashMapIjNSt3__110unique_ptrINS1_16FontPlatformDataENS4_14default_deleteIS6_EEEENS_7IntHashIjEENS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIS9_EENS_18PartitionAllocatorEEEED2Ev = comdat any

$_ZN3WTF27HashTraitsEmptyValueCheckerINS_10HashTraitsIN5blink12FontCacheKeyEEELb0EE12IsEmptyValueIS3_EEbRKT_ = comdat any

$_ZNK5blink22FontFaceCreationParamseqERKS0_ = comdat any

$_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_NS_7HashMapIjNSt3__110unique_ptrINS1_16FontPlatformDataENS5_14default_deleteIS7_EEEENS_7IntHashIjEENS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsISA_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINSF_IS2_EENSF_ISI_EEEESN_SH_E16LookupForWritingINS_22IdentityHashTranslatorISL_SP_SH_EES2_EENS5_4pairIPSJ_bEERKT0_ = comdat any

$_ZN5blink16FontCacheKeyHash7GetHashERKNS_12FontCacheKeyE = comdat any

$_ZNK5blink22FontFaceCreationParams7GetHashEv = comdat any

$_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE = comdat any

$_ZN3WTF12StringHasher28AddCharactersAssumingAlignedIDsXadL_ZNS_15CaseFoldingHash8FoldCaseIDsEEDsT_EEEEvPKS4_j = comdat any

$_ZN5blink22FontFaceCreationParamsaSERKS0_ = comdat any

$_ZN3WTF9HashTableIjNS_12KeyValuePairIjNSt3__110unique_ptrIN5blink16FontPlatformDataENS2_14default_deleteIS5_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIS8_EEEESF_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISI_SC_SJ_EERjDnEENS_18HashTableAddResultISK_S9_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIjNS_12KeyValuePairIjNSt3__110unique_ptrIN5blink16FontPlatformDataENS2_14default_deleteIS5_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIS8_EEEESF_NS_18PartitionAllocatorEE6ExpandEPS9_ = comdat any

$_ZN3WTF9HashTableIjNS_12KeyValuePairIjNSt3__110unique_ptrIN5blink16FontPlatformDataENS2_14default_deleteIS5_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIS8_EEEESF_NS_18PartitionAllocatorEE8RehashToEPS9_jSL_ = comdat any

$_ZN3WTF9HashTableIjNS_12KeyValuePairIjNSt3__110unique_ptrIN5blink16FontPlatformDataENS2_14default_deleteIS5_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIS8_EEEESF_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISI_SC_SJ_EERjS8_EENS_18HashTableAddResultISK_S9_EEOT0_OT1_ = comdat any

$_ZNK3WTF9HashTableIN5blink24FallbackListCompositeKeyENS_12KeyValuePairIS2_NSt3__110unique_ptrINS1_10ShapeCacheENS4_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS1_28FallbackListCompositeKeyHashENS_18HashMapValueTraitsINS1_30FallbackListCompositeKeyTraitsENS_10HashTraitsIS9_EEEESE_NS_18PartitionAllocatorEE6LookupINS_22IdentityHashTranslatorISC_SH_SI_EES2_EEPKSA_RKT0_ = comdat any

$_ZN3WTF14VectorComparerILb0EN5blink12FontCacheKeyEE7CompareEPKS2_S5_m = comdat any

$_ZN5blink10ShapeCacheD2Ev = comdat any

$_ZN3WTF9HashTableIN5blink24FallbackListCompositeKeyENS_12KeyValuePairIS2_NSt3__110unique_ptrINS1_10ShapeCacheENS4_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS1_28FallbackListCompositeKeyHashENS_18HashMapValueTraitsINS1_30FallbackListCompositeKeyTraitsENS_10HashTraitsIS9_EEEESE_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EERKS2_S9_EENS_18HashTableAddResultISJ_SA_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink24FallbackListCompositeKeyENS_12KeyValuePairIS2_NSt3__110unique_ptrINS1_10ShapeCacheENS4_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS1_28FallbackListCompositeKeyHashENS_18HashMapValueTraitsINS1_30FallbackListCompositeKeyTraitsENS_10HashTraitsIS9_EEEESE_NS_18PartitionAllocatorEE6ExpandEPSA_ = comdat any

$_ZN3WTF9HashTableIN5blink24FallbackListCompositeKeyENS_12KeyValuePairIS2_NSt3__110unique_ptrINS1_10ShapeCacheENS4_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS1_28FallbackListCompositeKeyHashENS_18HashMapValueTraitsINS1_30FallbackListCompositeKeyTraitsENS_10HashTraitsIS9_EEEESE_NS_18PartitionAllocatorEE8RehashToEPSA_jSK_ = comdat any

$_ZN3WTF9HashTableIN5blink24FallbackListCompositeKeyENS_12KeyValuePairIS2_NSt3__110unique_ptrINS1_10ShapeCacheENS4_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS1_28FallbackListCompositeKeyHashENS_18HashMapValueTraitsINS1_30FallbackListCompositeKeyTraitsENS_10HashTraitsIS9_EEEESE_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorISC_SH_SI_EES2_EENS4_4pairIPSA_bEERKT0_ = comdat any

$_ZN3WTF12KeyValuePairIN5blink24FallbackListCompositeKeyENSt3__110unique_ptrINS1_10ShapeCacheENS3_14default_deleteIS5_EEEEED2Ev = comdat any

$_ZN3WTF6VectorIN5blink12FontCacheKeyELj0ENS_18PartitionAllocatorEEaSERKS4_ = comdat any

$_ZN3WTF12VectorCopierILb0EN5blink12FontCacheKeyENS_18PartitionAllocatorEE4CopyEPKS2_S6_PS2_ = comdat any

$_ZN3WTF12VectorCopierILb0EN5blink12FontCacheKeyENS_18PartitionAllocatorEE17UninitializedCopyIS2_EEvPKT_S8_PS2_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm = comdat any

$_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKjEEvOT_ = comdat any

$_ZN3WTF9HashTableIjNS_12KeyValuePairIjNSt3__110unique_ptrIN5blink16FontPlatformDataENS2_14default_deleteIS5_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIS8_EEEESF_NS_18PartitionAllocatorEE5eraseEPKS9_ = comdat any

$_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_NS_7HashMapIjNSt3__110unique_ptrINS1_16FontPlatformDataENS5_14default_deleteIS7_EEEENS_7IntHashIjEENS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsISA_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINSF_IS2_EENSF_ISI_EEEESN_SH_E6LookupINS_22IdentityHashTranslatorISL_SP_SH_EES2_EEPSJ_RKT0_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_11HeapHashSetINS_10WeakMemberINS_15FontCacheClientEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_11HeapHashSetINS_10WeakMemberINS_15FontCacheClientEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_11HeapHashSetINS_10WeakMemberINS_15FontCacheClientEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF29WeakProcessingHashTableHelperILNS_16WeakHandlingFlagE1EN5blink10WeakMemberINS2_15FontCacheClientEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS2_13HeapAllocatorEE7ProcessERKNS2_14LivenessBrokerEPKv = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_15FontCacheClientEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_15FontCacheClientEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink14PersistentBaseINS_11HeapHashSetINS_10WeakMemberINS_15FontCacheClientEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPSA_ = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_11HeapHashSetINS_10WeakMemberINS_15FontCacheClientEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKSE_15TracePersistentEPNS_7VisitorEEEE10TrampolineESG_PKv = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_15FontCacheClientEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_15FontCacheClientEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_ = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_15FontCacheClientEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_15FontCacheClientEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_15FontCacheClientEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_15FontCacheClientEEES5_NS1_17IdentityExtractorENS1_10MemberHashIS4_EENS1_10HashTraitsIS5_EESA_NS_13HeapAllocatorEEEE14AllocateObjectISD_EEPvm = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_15FontCacheClientEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_15FontCacheClientEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5clearEv = comdat any

$_ZN3WTF6VectorIPKcLj4ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIPKcLj4ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIPKcLj4ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIPKcEEmm = comdat any

$_ZN3WTF6VectorIPKcLj4ENS_18PartitionAllocatorEE14AppendSlowCaseIRA9_S1_EEvOT_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15FontCacheClientEEEPhm = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15FontCacheClientEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15FontCacheClientEE7GetNameEPKv = comdat any

$_ZN5blink14PersistentBaseINS_15FontFallbackMapELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS1_ = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_15FontFallbackMapELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink10TraceTraitINS_15FontFallbackMapEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_11HeapHashSetINS_10WeakMemberINS_15FontCacheClientEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_11HeapHashSetINS_10WeakMemberINS_15FontCacheClientEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_15FontCacheClientEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_15FontCacheClientEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_15FontCacheClientEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15FontCacheClientEE5IndexEvE13gc_info_index = comdat any

@_ZN5blink17kColorEmojiLocaleE = hidden constant [9 x i8] c"und-Zsye\00", align 1
@_ZN5blink9FontCache20static_font_manager_E = hidden local_unnamed_addr global %class.SkFontMgr* null, align 8
@_ZN5blink9FontCache20device_scale_factor_E = hidden local_unnamed_addr global float 1.000000e+00, align 4
@_ZN5blink12_GLOBAL__N_121kFontCacheNoSizeInKeyE = internal constant %"struct.base::Feature" { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14, i32 0, i32 0), i32 0 }, align 8
@_ZN5blink17font_family_names9kSystemUiE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [31 x i8] c"FontCache::GetFontPlatformData\00", align 1
@__const._ZN5blink9FontCache19GetFontPlatformDataERKNS_15FontDescriptionERKNS_22FontFaceCreationParamsENS_17AlternateFontNameE.key = private unnamed_addr constant <{ { i32, [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", i32, i32 }, i32, i32, float, [4 x i8], %class.scoped_refptr.188, i8, [7 x i8] }> <{ { i32, [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", i32, i32 } { i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.WTF::AtomicString" { %"class.WTF::String" { %class.scoped_refptr.177 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } }, %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair.183" { %"struct.std::__1::__compressed_pair_elem.184" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, i32 -1431655766, i32 -1431655766 }, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA", %class.scoped_refptr.188 { %"class.blink::FontVariationSettings"* inttoptr (i64 -6148914691236517206 to %"class.blink::FontVariationSettings"*) }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }>, align 8
@_ZZN5blink9FontCache21ScaleFontPlatformDataERKNS_16FontPlatformDataERKNS_15FontDescriptionERKNS_22FontFaceCreationParamsEfE28trace_event_unique_atomic245 = internal global i64 0, align 8
@.str.1 = private unnamed_addr constant [9 x i8] c"fonts,ui\00", align 1
@.str.2 = private unnamed_addr constant [33 x i8] c"FontCache::ScaleFontPlatformData\00", align 1
@.str.3 = private unnamed_addr constant [36 x i8] c"FontCache::FallbackFontForCharacter\00", align 1
@_ZZN5blink9FontCache26PurgePlatformFontDataCacheEvE28trace_event_unique_atomic367 = internal global i64 0, align 8
@.str.4 = private unnamed_addr constant [38 x i8] c"FontCache::PurgePlatformFontDataCache\00", align 1
@_ZZN5blink9FontCache28PurgeFallbackListShaperCacheEvE28trace_event_unique_atomic386 = internal global i64 0, align 8
@.str.5 = private unnamed_addr constant [40 x i8] c"FontCache::PurgeFallbackListShaperCache\00", align 1
@_ZZN5blink9FontCache28PurgeFallbackListShaperCacheEvE23s_shape_cache_histogram = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink9FontCache28PurgeFallbackListShaperCacheEvE23s_shape_cache_histogram = internal global i64 0, align 8
@.str.6 = private unnamed_addr constant [62 x i8] c"../../third_party/blink/renderer/platform/fonts/font_cache.cc\00", align 1
@.str.7 = private unnamed_addr constant [7 x i8] c"client\00", align 1
@_ZZN5blink9FontCache10InvalidateEvE28trace_event_unique_atomic433 = internal global i64 0, align 8
@.str.8 = private unnamed_addr constant [22 x i8] c"FontCache::Invalidate\00", align 1
@__const._ZN5blink9FontCache17CrashWithFontInfoEPKNS_15FontDescriptionE.font_description_copy = private unnamed_addr constant %"class.blink::FontDescription" { %"class.blink::FontFamily" { %"class.WTF::AtomicString" { %"class.WTF::String" { %class.scoped_refptr.177 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } }, %class.scoped_refptr.303 { %"class.blink::SharedFontFamily"* inttoptr (i64 -6148914691236517206 to %"class.blink::SharedFontFamily"*) } }, %class.scoped_refptr.304 { %"class.blink::FontFeatureSettings"* inttoptr (i64 -6148914691236517206 to %"class.blink::FontFeatureSettings"*) }, %class.scoped_refptr.188 { %"class.blink::FontVariationSettings"* inttoptr (i64 -6148914691236517206 to %"class.blink::FontVariationSettings"*) }, %class.scoped_refptr.314 { %"class.blink::LayoutLocale"* inttoptr (i64 -6148914691236517206 to %"class.blink::LayoutLocale"*) }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %"struct.blink::FontSelectionRequest" { %"class.blink::FontSelectionValue" { i16 -21846 }, %"class.blink::FontSelectionValue" { i16 -21846 }, %"class.blink::FontSelectionValue" { i16 -21846 } }, %"class.blink::FontSelectionValue" { i16 -21846 }, %union.anon.320 { %"struct.blink::FontDescription::BitFields" { i56 -24019198012642646 } } }, align 8
@.str.9 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str.10 = private unnamed_addr constant [37 x i8] c"font_caches/font_platform_data_cache\00", align 1
@.str.11 = private unnamed_addr constant [5 x i8] c"size\00", align 1
@.str.12 = private unnamed_addr constant [6 x i8] c"bytes\00", align 1
@_ZN3WTF10Partitions24kAllocatedObjectPoolNameE = external local_unnamed_addr constant i8*, align 8
@.str.13 = private unnamed_addr constant [25 x i8] c"font_caches/shape_caches\00", align 1
@.str.14 = private unnamed_addr constant [21 x i8] c"FontCacheNoSizeInKey\00", align 1
@.str.15 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.16 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.17 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.18 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_26VectorBackedLinkedListNodeI13scoped_refptrIN5blink14SimpleFontDataEENS_18PartitionAllocatorEEEEEPKcv = private unnamed_addr constant [142 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::VectorBackedLinkedListNode<scoped_refptr<blink::SimpleFontData>, WTF::PartitionAllocator>]\00", align 1
@_ZN5blink17font_family_names8kCourierE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink17font_family_names11kCourierNewE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink17font_family_names6kTimesE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink17font_family_names14kTimesNewRomanE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink17font_family_names6kArialE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink17font_family_names10kHelveticaE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN3WTF12g_empty_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12FontCacheKeyEEEPKcv = private unnamed_addr constant [67 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::FontCacheKey]\00", align 1
@.str.20 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.21 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink12FontCacheKeyENS_7HashMapIjNSt3__110unique_ptrINS2_16FontPlatformDataENS5_14default_deleteIS7_EEEENS_7IntHashIjEENS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsISA_EENS_18PartitionAllocatorEEEEEEEPKcv = private unnamed_addr constant [434 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<blink::FontCacheKey, WTF::HashMap<unsigned int, std::__1::unique_ptr<blink::FontPlatformData, std::__1::default_delete<blink::FontPlatformData> >, WTF::IntHash<unsigned int>, WTF::UnsignedWithZeroKeyHashTraits<unsigned int>, WTF::HashTraits<std::__1::unique_ptr<blink::FontPlatformData, std::__1::default_delete<blink::FontPlatformData> > >, WTF::PartitionAllocator> >]\00", align 1
@.str.22 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZN3WTF10StringImpl20kLatin1CaseFoldTableE = external local_unnamed_addr constant [256 x i16], align 16
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIjNSt3__110unique_ptrIN5blink16FontPlatformDataENS2_14default_deleteIS5_EEEEEEEEPKcv = private unnamed_addr constant [179 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<unsigned int, std::__1::unique_ptr<blink::FontPlatformData, std::__1::default_delete<blink::FontPlatformData> > >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink24FallbackListCompositeKeyENSt3__110unique_ptrINS2_10ShapeCacheENS4_14default_deleteIS6_EEEEEEEEPKcv = private unnamed_addr constant [186 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<blink::FallbackListCompositeKey, std::__1::unique_ptr<blink::ShapeCache, std::__1::default_delete<blink::ShapeCache> > >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv = private unnamed_addr constant [60 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned int]\00", align 1
@.str.23 = private unnamed_addr constant [23 x i8] c"Blink.Fonts.ShapeCache\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11HeapHashSetINS1_10WeakMemberINS1_15FontCacheClientEEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [212 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashSet<blink::WeakMember<blink::FontCacheClient>, WTF::MemberHash<blink::FontCacheClient>, WTF::HashTraits<blink::WeakMember<blink::FontCacheClient> > >]\00", align 1
@.str.24 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.25 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_11HeapHashSetINS_10WeakMemberINS_15FontCacheClientEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_11HeapHashSetINS_10WeakMemberINS_15FontCacheClientEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_11HeapHashSetINS_10WeakMemberINS_15FontCacheClientEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_11HeapHashSetINS_10WeakMemberINS_15FontCacheClientEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.26 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.27 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.28 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_15FontCacheClientEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_15FontCacheClientEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_15FontCacheClientEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_15FontCacheClientEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_10WeakMemberINS1_15FontCacheClientEEES6_NS_17IdentityExtractorENS_10MemberHashIS5_EENS_10HashTraitsIS6_EESB_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [387 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::WeakMember<blink::FontCacheClient>, blink::WeakMember<blink::FontCacheClient>, WTF::IdentityExtractor, WTF::MemberHash<blink::FontCacheClient>, WTF::HashTraits<blink::WeakMember<blink::FontCacheClient> >, WTF::HashTraits<blink::WeakMember<blink::FontCacheClient> >, blink::HeapAllocator> >]\00", align 1
@.str.29 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKcEES2_v = private unnamed_addr constant [60 x i8] c"const char *WTF::GetStringWithTypeName() [T = const char *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15FontCacheClientEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::FontCacheClient]\00", align 1
@_ZZN5blink11GCInfoTraitINS_15FontCacheClientEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15FontCacheClientEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15FontCacheClientEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15FontCacheClientEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15FontCacheClientEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink15FontFallbackMapE = external unnamed_addr constant { [7 x i8*], [6 x i8*] }, align 8

@_ZN5blink9FontCacheC1Ev = hidden unnamed_addr alias void (%"class.blink::FontCache"*), void (%"class.blink::FontCache"*)* @_ZN5blink9FontCacheC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::FontCache"* @_ZN5blink9FontCache12GetFontCacheENS_14CreateIfNeededE(i32) local_unnamed_addr #0 align 2 {
  %2 = tail call %"class.blink::FontGlobalContext"* @_ZN5blink17FontGlobalContext3GetENS_14CreateIfNeededE(i32 %0) #17
  %3 = getelementptr inbounds %"class.blink::FontGlobalContext", %"class.blink::FontGlobalContext"* %2, i64 0, i32 0
  ret %"class.blink::FontCache"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9FontCacheC2Ev(%"class.blink::FontCache"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::VectorBackedLinkedListNode", align 8
  %3 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %0, i64 0, i32 0
  %4 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink12_GLOBAL__N_121kFontCacheNoSizeInKeyE) #17
  %5 = zext i1 %4 to i8
  store i8 %5, i8* %3, align 8
  %6 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %0, i64 0, i32 2
  store i32 0, i32* %6, align 4
  %7 = load %class.SkFontMgr*, %class.SkFontMgr** @_ZN5blink9FontCache20static_font_manager_E, align 8
  %8 = icmp eq %class.SkFontMgr* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %class.SkFontMgr, %class.SkFontMgr* %7, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw add i32* %10, i32 1 monotonic, !noalias !2
  br label %12

12:                                               ; preds = %1, %9
  %13 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %0, i64 0, i32 3, i32 0
  store %class.SkFontMgr* %7, %class.SkFontMgr** %13, align 8, !alias.scope !2
  %14 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %0, i64 0, i32 4
  store i16 0, i16* %14, align 8
  %15 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %0, i64 0, i32 5
  store i8 0, i8* %15, align 2
  %16 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %0, i64 0, i32 7
  %17 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %0, i64 0, i32 9
  %18 = bitcast %"class.WTF::HashMap.212"* %17 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 20, i1 false) #17
  %19 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %0, i64 0, i32 10
  %20 = bitcast %"class.blink::FontDataCache"* %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 20, i1 false) #17
  %21 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %0, i64 0, i32 10, i32 1
  %22 = bitcast %"class.WTF::LinkedHashSet"* %21 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 20, i1 false) #17
  %23 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %0, i64 0, i32 10, i32 1, i32 1
  %24 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %2 to i8*
  %25 = bitcast %"class.WTF::VectorBackedLinkedList"* %23 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 24, i1 false) #17
  %26 = bitcast %"class.blink::Persistent"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 36, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 0, i64 16, i1 false) #17
  %27 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %2, i64 0, i32 2, i32 0
  %28 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %23, i64 0, i32 0
  call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeI13scoped_refptrIN5blink14SimpleFontDataEENS_18PartitionAllocatorEEELj0ES6_E14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.283"* %28, %"class.WTF::VectorBackedLinkedListNode"* nonnull dereferenceable(16) %2) #17
  %29 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %27, align 8
  %30 = icmp eq %"class.blink::SimpleFontData"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %12
  %32 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %29, i64 0, i32 0, i32 1, i32 0
  %33 = getelementptr inbounds %"class.base::RefCounted.241", %"class.base::RefCounted.241"* %32, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %33) #17
  %34 = getelementptr inbounds %"class.base::RefCounted.241", %"class.base::RefCounted.241"* %32, i64 0, i32 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %44

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.base::RefCounted.241", %"class.base::RefCounted.241"* %32, i64 -2
  %39 = bitcast %"class.base::RefCounted.241"* %38 to %"class.blink::FontData"*
  %40 = bitcast %"class.base::RefCounted.241"* %38 to void (%"class.blink::FontData"*)***
  %41 = load void (%"class.blink::FontData"*)**, void (%"class.blink::FontData"*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %41, i64 1
  %43 = load void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %42, align 8
  call void %43(%"class.blink::FontData"* nonnull %39) #17
  br label %44

44:                                               ; preds = %12, %31, %37
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #17
  %45 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %0, i64 0, i32 11
  %46 = bitcast %"class.blink::Persistent.288"* %45 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 16, i1 false) #17
  %47 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %0, i64 0, i32 12
  %48 = call float @nextafterf(float 0x41847AE140000000, float 0.000000e+00) #17
  store float %48, float* %47, align 8
  ret void
}

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::FontPlatformData"* @_ZN5blink9FontCache22SystemFontPlatformDataERKNS_15FontDescriptionE(%"class.blink::FontCache"*, %"class.blink::FontDescription"* dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::FontFaceCreationParams", align 8
  %4 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink9FontCache16SystemFontFamilyEv() #17
  %5 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %94, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %94, label %12

12:                                               ; preds = %8
  %13 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink17font_family_names9kSystemUiE, align 8
  %14 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %6, %15
  br i1 %16, label %94, label %17

17:                                               ; preds = %12
  %18 = bitcast %"class.blink::FontFaceCreationParams"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %18) #17
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %35

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = zext i32 %25 to i33
  %27 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %26, i33 1) #17
  %28 = extractvalue { i33, i1 } %27, 1
  %29 = extractvalue { i33, i1 } %27, 0
  %30 = icmp slt i33 %29, 0
  %31 = or i1 %28, %30
  br i1 %31, label %32, label %33, !prof !5

32:                                               ; preds = %23
  tail call void @llvm.trap() #17
  unreachable

33:                                               ; preds = %23
  %34 = trunc i33 %29 to i32
  store i32 %34, i32* %24, align 4
  br label %35

35:                                               ; preds = %17, %33
  %36 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %3, i64 0, i32 0
  store i32 0, i32* %36, align 8
  %37 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %6, %"class.WTF::StringImpl"** %37, align 8
  %38 = load atomic i32, i32* %19 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %53

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #17
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !5

50:                                               ; preds = %41
  tail call void @llvm.trap() #17
  unreachable

51:                                               ; preds = %41
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %42, align 4
  br label %53

53:                                               ; preds = %51, %35
  %54 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %3, i64 0, i32 2
  %55 = bitcast %"class.std::__1::basic_string"* %54 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 32, i1 false) #17
  %56 = load atomic i32, i32* %19 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %53
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %53
  %64 = phi i32 [ %62, %61 ], [ %60, %53 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %6) #17
  br label %67

67:                                               ; preds = %63, %66
  %68 = call %"class.blink::FontPlatformData"* @_ZN5blink9FontCache19GetFontPlatformDataERKNS_15FontDescriptionERKNS_22FontFaceCreationParamsENS_17AlternateFontNameE(%"class.blink::FontCache"* %0, %"class.blink::FontDescription"* dereferenceable(80) %1, %"class.blink::FontFaceCreationParams"* nonnull dereferenceable(48) %3, i32 1)
  %69 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %3, i64 0, i32 2
  %70 = bitcast %"class.std::__1::basic_string"* %69 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %67
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %69, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load i8*, i8** %75, align 8
  call void @_ZdlPv(i8* %76) #18
  br label %77

77:                                               ; preds = %74, %67
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %79 = icmp eq %"class.WTF::StringImpl"* %78, null
  br i1 %79, label %93, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  br i1 %84, label %87, label %89

87:                                               ; preds = %80
  %88 = add i32 %86, -1
  store i32 %88, i32* %85, align 4
  br label %89

89:                                               ; preds = %87, %80
  %90 = phi i32 [ %88, %87 ], [ %86, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %78) #17
  br label %93

93:                                               ; preds = %77, %89, %92
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %18) #17
  br label %94

94:                                               ; preds = %2, %8, %12, %93
  %95 = phi %"class.blink::FontPlatformData"* [ %68, %93 ], [ null, %12 ], [ null, %8 ], [ null, %2 ]
  ret %"class.blink::FontPlatformData"* %95
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink9FontCache16SystemFontFamilyEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::FontPlatformData"* @_ZN5blink9FontCache19GetFontPlatformDataERKNS_15FontDescriptionERKNS_22FontFaceCreationParamsENS_17AlternateFontNameE(%"class.blink::FontCache"*, %"class.blink::FontDescription"* dereferenceable(80), %"class.blink::FontFaceCreationParams"* dereferenceable(48), i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::TimeTicks", align 8
  %6 = alloca i32, align 4
  %7 = alloca %"struct.blink::FontCacheKey", align 8
  %8 = alloca %"struct.blink::FontSelectionRequest", align 2
  %9 = alloca %"class.WTF::HashMap.194", align 8
  %10 = alloca i8*, align 8
  %11 = alloca %"class.WTF::AtomicString", align 8
  %12 = alloca %"class.blink::FontFaceCreationParams", align 8
  %13 = alloca %"class.WTF::HashMap.194", align 8
  %14 = alloca %"class.std::__1::unique_ptr.199", align 8
  %15 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 57, i32 0), align 16
  %16 = and i8 %15, 25
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %24, label %18, !prof !6

18:                                               ; preds = %4
  %19 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #17
  %20 = bitcast %"class.base::TimeTicks"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #17
  %21 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %5, i64 0, i32 0, i32 0
  %22 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #17
  store i64 %22, i64* %21, align 8
  %23 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 57, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %19, %"class.base::TimeTicks"* nonnull dereferenceable(8) %5, %"class.base::trace_event::TraceArguments"* null, i32 0) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #17
  br label %24

24:                                               ; preds = %4, %18
  %25 = phi i8* [ null, %4 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 57, i32 0), %18 ]
  %26 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %4 ], [ getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0), %18 ]
  %27 = phi i64 [ -6148914691236517206, %4 ], [ %23, %18 ]
  %28 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %0, i64 0, i32 5
  %29 = load i8, i8* %28, align 2, !range !7
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %24
  store i8 1, i8* %28, align 2
  call void @_ZN5blink9FontCache12PlatformInitEv(%"class.blink::FontCache"* %0) #17
  br label %32

32:                                               ; preds = %24, %31
  %33 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %2, i64 0, i32 0
  %34 = load i32, i32* %33, align 8
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %81

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %57, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %62

47:                                               ; preds = %40
  %48 = zext i32 %46 to i33
  %49 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %48, i33 1) #17
  %50 = extractvalue { i33, i1 } %49, 1
  %51 = extractvalue { i33, i1 } %49, 0
  %52 = icmp slt i33 %51, 0
  %53 = or i1 %50, %52
  br i1 %53, label %54, label %55, !prof !5

54:                                               ; preds = %47
  call void @llvm.trap() #17
  unreachable

55:                                               ; preds = %47
  %56 = trunc i33 %51 to i32
  store i32 %56, i32* %45, align 4
  br label %62

57:                                               ; preds = %36
  %58 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink17font_family_names9kSystemUiE, align 8
  %59 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %79, label %81

62:                                               ; preds = %40, %55
  %63 = phi i32 [ %56, %55 ], [ %46, %40 ]
  %64 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink17font_family_names9kSystemUiE, align 8
  %65 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %38, %66
  %68 = load atomic i32, i32* %41 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %74

71:                                               ; preds = %62
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %73 = add i32 %63, -1
  store i32 %73, i32* %72, align 4
  br label %74

74:                                               ; preds = %71, %62
  %75 = phi i32 [ %73, %71 ], [ %63, %62 ]
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %78

77:                                               ; preds = %74
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #17
  br i1 %67, label %79, label %81

78:                                               ; preds = %74
  br i1 %67, label %79, label %81

79:                                               ; preds = %77, %57, %78
  %80 = call %"class.blink::FontPlatformData"* @_ZN5blink9FontCache22SystemFontPlatformDataERKNS_15FontDescriptionE(%"class.blink::FontCache"* %0, %"class.blink::FontDescription"* dereferenceable(80) %1)
  br label %437

81:                                               ; preds = %32, %77, %57, %78
  %82 = call float @_ZNK5blink15FontDescription17EffectiveFontSizeEv(%"class.blink::FontDescription"* %1) #17
  %83 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %0, i64 0, i32 12
  %84 = load float, float* %83, align 4
  %85 = fcmp olt float %84, %82
  %86 = select i1 %85, float %84, float %82
  %87 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %87) #17
  %88 = fmul float %86, 1.000000e+02
  %89 = fptoui float %88 to i32
  store i32 %89, i32* %6, align 4
  %90 = icmp eq i32 %3, 2
  %91 = bitcast %"struct.blink::FontCacheKey"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %91) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %91, i8* align 8 bitcast (<{ { i32, [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", i32, i32 }, i32, i32, float, [4 x i8], %class.scoped_refptr.188, i8, [7 x i8] }>* @__const._ZN5blink9FontCache19GetFontPlatformDataERKNS_15FontDescriptionERKNS_22FontFaceCreationParamsENS_17AlternateFontNameE.key to i8*), i64 80, i1 false)
  %92 = bitcast %"struct.blink::FontSelectionRequest"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %92) #17
  %93 = bitcast %"struct.blink::FontSelectionRequest"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %93, i8 0, i64 6, i1 false)
  call void @_ZNK5blink15FontDescription8CacheKeyERKNS_22FontFaceCreationParamsEbRKNS_20FontSelectionRequestE(%"struct.blink::FontCacheKey"* nonnull sret %7, %"class.blink::FontDescription"* %1, %"class.blink::FontFaceCreationParams"* dereferenceable(48) %2, i1 zeroext %90, %"struct.blink::FontSelectionRequest"* nonnull dereferenceable(6) %8) #17
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %92) #17
  %94 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %0, i64 0, i32 0
  %95 = load i8, i8* %94, align 8, !range !7
  %96 = icmp eq i8 %95, 0
  br i1 %96, label %99, label %97

97:                                               ; preds = %81
  %98 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %7, i64 0, i32 1
  store i32 0, i32* %98, align 8
  br label %99

99:                                               ; preds = %81, %97
  %100 = bitcast %"class.WTF::HashMap.194"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %100) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %100, i8 0, i64 20, i1 false) #17
  %101 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %0, i64 0, i32 8, i32 0
  %102 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_NS_7HashMapIjNSt3__110unique_ptrINS1_16FontPlatformDataENS5_14default_deleteIS7_EEEENS_7IntHashIjEENS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsISA_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINSF_IS2_EENSF_ISI_EEEESN_SH_E6insertINS_17HashMapTranslatorISP_SL_SH_EERS2_SI_EENS_18HashTableAddResultISQ_SJ_EEOT0_OT1_(%"class.WTF::HashTable.174"* %101, %"struct.blink::FontCacheKey"* nonnull dereferenceable(80) %7, %"class.WTF::HashMap.194"* nonnull dereferenceable(24) %9) #17
  %103 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %102, 0
  %104 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %103, i64 0, i32 1
  %105 = getelementptr inbounds %"class.WTF::HashMap.194", %"class.WTF::HashMap.194"* %9, i64 0, i32 0, i32 0
  %106 = load %"struct.WTF::KeyValuePair.198"*, %"struct.WTF::KeyValuePair.198"** %105, align 8
  %107 = icmp eq %"struct.WTF::KeyValuePair.198"* %106, null
  br i1 %107, label %130, label %108, !prof !6

108:                                              ; preds = %99
  %109 = getelementptr inbounds %"class.WTF::HashMap.194", %"class.WTF::HashMap.194"* %9, i64 0, i32 0, i32 1
  %110 = load i32, i32* %109, align 8
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %128, label %112

112:                                              ; preds = %108
  %113 = zext i32 %110 to i64
  br label %114

114:                                              ; preds = %125, %112
  %115 = phi i64 [ 0, %112 ], [ %126, %125 ]
  %116 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %106, i64 %115, i32 0
  %117 = load i32, i32* %116, align 4
  %118 = icmp eq i32 %117, -2
  br i1 %118, label %125, label %119

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %106, i64 %115, i32 1, i32 0, i32 0, i32 0
  %121 = load %"class.blink::FontPlatformData"*, %"class.blink::FontPlatformData"** %120, align 8
  store %"class.blink::FontPlatformData"* null, %"class.blink::FontPlatformData"** %120, align 8
  %122 = icmp eq %"class.blink::FontPlatformData"* %121, null
  br i1 %122, label %125, label %123

123:                                              ; preds = %119
  call void @_ZN5blink16FontPlatformDataD1Ev(%"class.blink::FontPlatformData"* nonnull %121) #17
  %124 = bitcast %"class.blink::FontPlatformData"* %121 to i8*
  call void @free(i8* %124) #17
  br label %125

125:                                              ; preds = %123, %119, %114
  %126 = add nuw nsw i64 %115, 1
  %127 = icmp eq i64 %126, %113
  br i1 %127, label %128, label %114

128:                                              ; preds = %125, %108
  %129 = bitcast %"struct.WTF::KeyValuePair.198"* %106 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %129) #17
  store %"struct.WTF::KeyValuePair.198"* null, %"struct.WTF::KeyValuePair.198"** %105, align 8
  br label %130

130:                                              ; preds = %99, %128
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %100) #17
  %131 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %103, i64 0, i32 1, i32 0, i32 2
  %132 = load i32, i32* %131, align 4
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %154, label %134

134:                                              ; preds = %130
  %135 = getelementptr inbounds %"class.WTF::HashMap.194", %"class.WTF::HashMap.194"* %104, i64 0, i32 0, i32 0
  %136 = load %"struct.WTF::KeyValuePair.198"*, %"struct.WTF::KeyValuePair.198"** %135, align 8
  %137 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %103, i64 0, i32 1, i32 0, i32 1
  %138 = load i32, i32* %137, align 8
  %139 = zext i32 %138 to i64
  %140 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %136, i64 %139
  %141 = icmp eq i32 %138, 0
  br i1 %141, label %150, label %142

142:                                              ; preds = %134, %147
  %143 = phi %"struct.WTF::KeyValuePair.198"* [ %148, %147 ], [ %136, %134 ]
  %144 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %143, i64 0, i32 0
  %145 = load i32, i32* %144, align 4
  %146 = icmp ugt i32 %145, -3
  br i1 %146, label %147, label %150

147:                                              ; preds = %142
  %148 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %143, i64 1
  %149 = icmp eq %"struct.WTF::KeyValuePair.198"* %148, %140
  br i1 %149, label %150, label %142

150:                                              ; preds = %142, %147, %134
  %151 = phi %"struct.WTF::KeyValuePair.198"* [ %136, %134 ], [ %140, %147 ], [ %143, %142 ]
  %152 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %151, i64 0, i32 1, i32 0, i32 0, i32 0
  %153 = load %"class.blink::FontPlatformData"*, %"class.blink::FontPlatformData"** %152, align 8
  br label %154

154:                                              ; preds = %130, %150
  %155 = phi %"class.blink::FontPlatformData"* [ %153, %150 ], [ null, %130 ]
  %156 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %156) #17
  store i8* null, i8** %10, align 8
  %157 = getelementptr inbounds %"class.WTF::HashMap.194", %"class.WTF::HashMap.194"* %104, i64 0, i32 0
  %158 = call { %"struct.WTF::KeyValuePair.198"*, i8 } @_ZN3WTF9HashTableIjNS_12KeyValuePairIjNSt3__110unique_ptrIN5blink16FontPlatformDataENS2_14default_deleteIS5_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIS8_EEEESF_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISI_SC_SJ_EERjDnEENS_18HashTableAddResultISK_S9_EEOT0_OT1_(%"class.WTF::HashTable.195"* %157, i32* nonnull dereferenceable(4) %6, i8** nonnull dereferenceable(8) %10) #17
  %159 = extractvalue { %"struct.WTF::KeyValuePair.198"*, i8 } %158, 0
  %160 = extractvalue { %"struct.WTF::KeyValuePair.198"*, i8 } %158, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %156) #17
  %161 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %159, i64 0, i32 1
  %162 = and i8 %160, 1
  %163 = icmp ne i8 %162, 0
  br i1 %163, label %164, label %185

164:                                              ; preds = %154
  br i1 %133, label %165, label %174

165:                                              ; preds = %164
  %166 = call %"class.blink::FontPlatformData"* @_ZN5blink9FontCache22CreateFontPlatformDataERKNS_15FontDescriptionERKNS_22FontFaceCreationParamsEfNS_17AlternateFontNameE(%"class.blink::FontCache"* %0, %"class.blink::FontDescription"* dereferenceable(80) %1, %"class.blink::FontFaceCreationParams"* dereferenceable(48) %2, float %86, i32 %3) #17
  %167 = ptrtoint %"class.blink::FontPlatformData"* %166 to i64
  %168 = getelementptr inbounds %"class.std::__1::unique_ptr.199", %"class.std::__1::unique_ptr.199"* %161, i64 0, i32 0, i32 0, i32 0
  %169 = load %"class.blink::FontPlatformData"*, %"class.blink::FontPlatformData"** %168, align 8
  %170 = bitcast %"class.std::__1::unique_ptr.199"* %161 to i64*
  store i64 %167, i64* %170, align 8
  %171 = icmp eq %"class.blink::FontPlatformData"* %169, null
  br i1 %171, label %185, label %172

172:                                              ; preds = %165
  call void @_ZN5blink16FontPlatformDataD1Ev(%"class.blink::FontPlatformData"* nonnull %169) #17
  %173 = bitcast %"class.blink::FontPlatformData"* %169 to i8*
  call void @free(i8* %173) #17
  br label %185

174:                                              ; preds = %164
  %175 = icmp eq %"class.blink::FontPlatformData"* %155, null
  br i1 %175, label %185, label %176

176:                                              ; preds = %174
  %177 = call %"class.blink::FontPlatformData"* @_ZN5blink9FontCache21ScaleFontPlatformDataERKNS_16FontPlatformDataERKNS_15FontDescriptionERKNS_22FontFaceCreationParamsEf(%"class.blink::FontCache"* undef, %"class.blink::FontPlatformData"* nonnull dereferenceable(72) %155, %"class.blink::FontDescription"* dereferenceable(80) undef, %"class.blink::FontFaceCreationParams"* dereferenceable(48) undef, float %86)
  %178 = ptrtoint %"class.blink::FontPlatformData"* %177 to i64
  %179 = getelementptr inbounds %"class.std::__1::unique_ptr.199", %"class.std::__1::unique_ptr.199"* %161, i64 0, i32 0, i32 0, i32 0
  %180 = load %"class.blink::FontPlatformData"*, %"class.blink::FontPlatformData"** %179, align 8
  %181 = bitcast %"class.std::__1::unique_ptr.199"* %161 to i64*
  store i64 %178, i64* %181, align 8
  %182 = icmp eq %"class.blink::FontPlatformData"* %180, null
  br i1 %182, label %185, label %183

183:                                              ; preds = %176
  call void @_ZN5blink16FontPlatformDataD1Ev(%"class.blink::FontPlatformData"* nonnull %180) #17
  %184 = bitcast %"class.blink::FontPlatformData"* %180 to i8*
  call void @free(i8* %184) #17
  br label %185

185:                                              ; preds = %176, %183, %165, %172, %174, %154
  %186 = getelementptr inbounds %"class.std::__1::unique_ptr.199", %"class.std::__1::unique_ptr.199"* %161, i64 0, i32 0, i32 0, i32 0
  %187 = load %"class.blink::FontPlatformData"*, %"class.blink::FontPlatformData"** %186, align 8
  %188 = icmp eq %"class.blink::FontPlatformData"* %187, null
  %189 = and i1 %163, %188
  %190 = load i32, i32* %33, align 8
  %191 = or i32 %190, %3
  %192 = icmp eq i32 %191, 0
  %193 = and i1 %189, %192
  br i1 %193, label %194, label %385

194:                                              ; preds = %185
  %195 = bitcast %"class.WTF::AtomicString"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %195) #17
  %196 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  %197 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %196, align 8
  %198 = icmp eq %"class.WTF::StringImpl"* %197, null
  br i1 %198, label %216, label %199

199:                                              ; preds = %194
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %197, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %201 = load atomic i32, i32* %200 monotonic, align 4
  %202 = and i32 %201, 2
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %204, label %216

204:                                              ; preds = %199
  %205 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %197, i64 0, i32 0
  %206 = load i32, i32* %205, align 4
  %207 = zext i32 %206 to i33
  %208 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %207, i33 1) #17
  %209 = extractvalue { i33, i1 } %208, 1
  %210 = extractvalue { i33, i1 } %208, 0
  %211 = icmp slt i33 %210, 0
  %212 = or i1 %209, %211
  br i1 %212, label %213, label %214, !prof !5

213:                                              ; preds = %204
  call void @llvm.trap() #17
  unreachable

214:                                              ; preds = %204
  %215 = trunc i33 %210 to i32
  store i32 %215, i32* %205, align 4
  br label %216

216:                                              ; preds = %194, %199, %214
  %217 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %197, %"class.WTF::StringImpl"** %217, align 8
  %218 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink19AlternateFamilyNameERKN3WTF12AtomicStringE(%"class.WTF::AtomicString"* nonnull dereferenceable(8) %11)
  %219 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %217, align 8
  %220 = icmp eq %"class.WTF::StringImpl"* %219, null
  br i1 %220, label %234, label %221

221:                                              ; preds = %216
  %222 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %219, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %223 = load atomic i32, i32* %222 monotonic, align 4
  %224 = and i32 %223, 2
  %225 = icmp eq i32 %224, 0
  %226 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %219, i64 0, i32 0
  %227 = load i32, i32* %226, align 4
  br i1 %225, label %228, label %230

228:                                              ; preds = %221
  %229 = add i32 %227, -1
  store i32 %229, i32* %226, align 4
  br label %230

230:                                              ; preds = %228, %221
  %231 = phi i32 [ %229, %228 ], [ %227, %221 ]
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %233, label %234

233:                                              ; preds = %230
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %219) #17
  br label %234

234:                                              ; preds = %216, %230, %233
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %195) #17
  %235 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %218, i64 0, i32 0, i32 0, i32 0
  %236 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %235, align 8
  %237 = icmp eq %"class.WTF::StringImpl"* %236, null
  br i1 %237, label %385, label %238

238:                                              ; preds = %234
  %239 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %236, i64 0, i32 1
  %240 = load i32, i32* %239, align 4
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %385, label %242

242:                                              ; preds = %238
  %243 = bitcast %"class.blink::FontFaceCreationParams"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %243) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %243, i8 -86, i64 48, i1 false)
  %244 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %235, align 8
  %245 = icmp eq %"class.WTF::StringImpl"* %244, null
  br i1 %245, label %295, label %246

246:                                              ; preds = %242
  %247 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %244, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %248 = load atomic i32, i32* %247 monotonic, align 4
  %249 = and i32 %248, 2
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %251, label %263

251:                                              ; preds = %246
  %252 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %244, i64 0, i32 0
  %253 = load i32, i32* %252, align 4
  %254 = zext i32 %253 to i33
  %255 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %254, i33 1) #17
  %256 = extractvalue { i33, i1 } %255, 1
  %257 = extractvalue { i33, i1 } %255, 0
  %258 = icmp slt i33 %257, 0
  %259 = or i1 %256, %258
  br i1 %259, label %260, label %261, !prof !5

260:                                              ; preds = %251
  call void @llvm.trap() #17
  unreachable

261:                                              ; preds = %251
  %262 = trunc i33 %257 to i32
  store i32 %262, i32* %252, align 4
  br label %263

263:                                              ; preds = %246, %261
  %264 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %12, i64 0, i32 0
  store i32 0, i32* %264, align 8
  %265 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %12, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %244, %"class.WTF::StringImpl"** %265, align 8
  %266 = load atomic i32, i32* %247 monotonic, align 4
  %267 = and i32 %266, 2
  %268 = icmp eq i32 %267, 0
  br i1 %268, label %269, label %281

269:                                              ; preds = %263
  %270 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %244, i64 0, i32 0
  %271 = load i32, i32* %270, align 4
  %272 = zext i32 %271 to i33
  %273 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %272, i33 1) #17
  %274 = extractvalue { i33, i1 } %273, 1
  %275 = extractvalue { i33, i1 } %273, 0
  %276 = icmp slt i33 %275, 0
  %277 = or i1 %274, %276
  br i1 %277, label %278, label %279, !prof !5

278:                                              ; preds = %269
  call void @llvm.trap() #17
  unreachable

279:                                              ; preds = %269
  %280 = trunc i33 %275 to i32
  store i32 %280, i32* %270, align 4
  br label %281

281:                                              ; preds = %279, %263
  %282 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %12, i64 0, i32 2
  %283 = bitcast %"class.std::__1::basic_string"* %282 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %283, i8 0, i64 32, i1 false) #17
  %284 = load atomic i32, i32* %247 monotonic, align 4
  %285 = and i32 %284, 2
  %286 = icmp eq i32 %285, 0
  %287 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %244, i64 0, i32 0
  %288 = load i32, i32* %287, align 4
  br i1 %286, label %289, label %291

289:                                              ; preds = %281
  %290 = add i32 %288, -1
  store i32 %290, i32* %287, align 4
  br label %291

291:                                              ; preds = %289, %281
  %292 = phi i32 [ %290, %289 ], [ %288, %281 ]
  %293 = icmp eq i32 %292, 0
  br i1 %293, label %294, label %299

294:                                              ; preds = %291
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %244) #17
  br label %299

295:                                              ; preds = %242
  %296 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %12, i64 0, i32 0
  store i32 0, i32* %296, align 8
  %297 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %12, i64 0, i32 1, i32 0, i32 0, i32 0
  %298 = bitcast %"class.WTF::StringImpl"** %297 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %298, i8 0, i64 40, i1 false)
  br label %299

299:                                              ; preds = %291, %294, %295
  %300 = phi %"class.WTF::StringImpl"** [ %265, %291 ], [ %265, %294 ], [ %297, %295 ]
  %301 = call %"class.blink::FontPlatformData"* @_ZN5blink9FontCache19GetFontPlatformDataERKNS_15FontDescriptionERKNS_22FontFaceCreationParamsENS_17AlternateFontNameE(%"class.blink::FontCache"* %0, %"class.blink::FontDescription"* dereferenceable(80) %1, %"class.blink::FontFaceCreationParams"* nonnull dereferenceable(48) %12, i32 1)
  %302 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %12, i64 0, i32 2
  %303 = bitcast %"class.std::__1::basic_string"* %302 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %304 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %303, i64 0, i32 1, i32 0
  %305 = load i8, i8* %304, align 1
  %306 = icmp slt i8 %305, 0
  br i1 %306, label %307, label %310

307:                                              ; preds = %299
  %308 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %302, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %309 = load i8*, i8** %308, align 8
  call void @_ZdlPv(i8* %309) #18
  br label %310

310:                                              ; preds = %307, %299
  %311 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %300, align 8
  %312 = icmp eq %"class.WTF::StringImpl"* %311, null
  br i1 %312, label %326, label %313

313:                                              ; preds = %310
  %314 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %311, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %315 = load atomic i32, i32* %314 monotonic, align 4
  %316 = and i32 %315, 2
  %317 = icmp eq i32 %316, 0
  %318 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %311, i64 0, i32 0
  %319 = load i32, i32* %318, align 4
  br i1 %317, label %320, label %322

320:                                              ; preds = %313
  %321 = add i32 %319, -1
  store i32 %321, i32* %318, align 4
  br label %322

322:                                              ; preds = %320, %313
  %323 = phi i32 [ %321, %320 ], [ %319, %313 ]
  %324 = icmp eq i32 %323, 0
  br i1 %324, label %325, label %326

325:                                              ; preds = %322
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %311) #17
  br label %326

326:                                              ; preds = %325, %322, %310
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %243) #17
  %327 = icmp eq %"class.blink::FontPlatformData"* %301, null
  br i1 %327, label %385, label %328

328:                                              ; preds = %326
  %329 = bitcast %"class.WTF::HashMap.194"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %329) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %329, i8 0, i64 20, i1 false) #17
  %330 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_NS_7HashMapIjNSt3__110unique_ptrINS1_16FontPlatformDataENS5_14default_deleteIS7_EEEENS_7IntHashIjEENS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsISA_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINSF_IS2_EENSF_ISI_EEEESN_SH_E6insertINS_17HashMapTranslatorISP_SL_SH_EERS2_SI_EENS_18HashTableAddResultISQ_SJ_EEOT0_OT1_(%"class.WTF::HashTable.174"* %101, %"struct.blink::FontCacheKey"* nonnull dereferenceable(80) %7, %"class.WTF::HashMap.194"* nonnull dereferenceable(24) %13) #17
  %331 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %330, 0
  %332 = getelementptr inbounds %"class.WTF::HashMap.194", %"class.WTF::HashMap.194"* %13, i64 0, i32 0, i32 0
  %333 = load %"struct.WTF::KeyValuePair.198"*, %"struct.WTF::KeyValuePair.198"** %332, align 8
  %334 = icmp eq %"struct.WTF::KeyValuePair.198"* %333, null
  br i1 %334, label %357, label %335, !prof !6

335:                                              ; preds = %328
  %336 = getelementptr inbounds %"class.WTF::HashMap.194", %"class.WTF::HashMap.194"* %13, i64 0, i32 0, i32 1
  %337 = load i32, i32* %336, align 8
  %338 = icmp eq i32 %337, 0
  br i1 %338, label %355, label %339

339:                                              ; preds = %335
  %340 = zext i32 %337 to i64
  br label %341

341:                                              ; preds = %352, %339
  %342 = phi i64 [ 0, %339 ], [ %353, %352 ]
  %343 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %333, i64 %342, i32 0
  %344 = load i32, i32* %343, align 4
  %345 = icmp eq i32 %344, -2
  br i1 %345, label %352, label %346

346:                                              ; preds = %341
  %347 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %333, i64 %342, i32 1, i32 0, i32 0, i32 0
  %348 = load %"class.blink::FontPlatformData"*, %"class.blink::FontPlatformData"** %347, align 8
  store %"class.blink::FontPlatformData"* null, %"class.blink::FontPlatformData"** %347, align 8
  %349 = icmp eq %"class.blink::FontPlatformData"* %348, null
  br i1 %349, label %352, label %350

350:                                              ; preds = %346
  call void @_ZN5blink16FontPlatformDataD1Ev(%"class.blink::FontPlatformData"* nonnull %348) #17
  %351 = bitcast %"class.blink::FontPlatformData"* %348 to i8*
  call void @free(i8* %351) #17
  br label %352

352:                                              ; preds = %350, %346, %341
  %353 = add nuw nsw i64 %342, 1
  %354 = icmp eq i64 %353, %340
  br i1 %354, label %355, label %341

355:                                              ; preds = %352, %335
  %356 = bitcast %"struct.WTF::KeyValuePair.198"* %333 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %356) #17
  store %"struct.WTF::KeyValuePair.198"* null, %"struct.WTF::KeyValuePair.198"** %332, align 8
  br label %357

357:                                              ; preds = %328, %355
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %329) #17
  %358 = bitcast %"class.std::__1::unique_ptr.199"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %358) #17
  %359 = call noalias i8* @malloc(i64 72) #17
  %360 = bitcast i8* %359 to %"class.blink::FontPlatformData"*
  call void @_ZN5blink16FontPlatformDataC1ERKS0_(%"class.blink::FontPlatformData"* %360, %"class.blink::FontPlatformData"* nonnull dereferenceable(72) %301) #17
  %361 = getelementptr inbounds %"class.std::__1::unique_ptr.199", %"class.std::__1::unique_ptr.199"* %14, i64 0, i32 0, i32 0, i32 0
  %362 = bitcast %"class.std::__1::unique_ptr.199"* %14 to i8**
  store i8* %359, i8** %362, align 8
  %363 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %331, i64 0, i32 1, i32 0
  %364 = call { %"struct.WTF::KeyValuePair.198"*, i8 } @_ZN3WTF9HashTableIjNS_12KeyValuePairIjNSt3__110unique_ptrIN5blink16FontPlatformDataENS2_14default_deleteIS5_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIS8_EEEESF_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISI_SC_SJ_EERjS8_EENS_18HashTableAddResultISK_S9_EEOT0_OT1_(%"class.WTF::HashTable.195"* %363, i32* nonnull dereferenceable(4) %6, %"class.std::__1::unique_ptr.199"* nonnull dereferenceable(8) %14) #17
  %365 = extractvalue { %"struct.WTF::KeyValuePair.198"*, i8 } %364, 1
  %366 = and i8 %365, 1
  %367 = icmp eq i8 %366, 0
  br i1 %367, label %368, label %379

368:                                              ; preds = %357
  %369 = extractvalue { %"struct.WTF::KeyValuePair.198"*, i8 } %364, 0
  %370 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %369, i64 0, i32 1
  %371 = bitcast %"class.std::__1::unique_ptr.199"* %14 to i64*
  %372 = load i64, i64* %371, align 8
  store %"class.blink::FontPlatformData"* null, %"class.blink::FontPlatformData"** %361, align 8
  %373 = getelementptr inbounds %"class.std::__1::unique_ptr.199", %"class.std::__1::unique_ptr.199"* %370, i64 0, i32 0, i32 0, i32 0
  %374 = load %"class.blink::FontPlatformData"*, %"class.blink::FontPlatformData"** %373, align 8
  %375 = bitcast %"class.std::__1::unique_ptr.199"* %370 to i64*
  store i64 %372, i64* %375, align 8
  %376 = icmp eq %"class.blink::FontPlatformData"* %374, null
  br i1 %376, label %379, label %377

377:                                              ; preds = %368
  call void @_ZN5blink16FontPlatformDataD1Ev(%"class.blink::FontPlatformData"* nonnull %374) #17
  %378 = bitcast %"class.blink::FontPlatformData"* %374 to i8*
  call void @free(i8* %378) #17
  br label %379

379:                                              ; preds = %357, %368, %377
  %380 = load %"class.blink::FontPlatformData"*, %"class.blink::FontPlatformData"** %361, align 8
  store %"class.blink::FontPlatformData"* null, %"class.blink::FontPlatformData"** %361, align 8
  %381 = icmp eq %"class.blink::FontPlatformData"* %380, null
  br i1 %381, label %384, label %382

382:                                              ; preds = %379
  call void @_ZN5blink16FontPlatformDataD1Ev(%"class.blink::FontPlatformData"* nonnull %380) #17
  %383 = bitcast %"class.blink::FontPlatformData"* %380 to i8*
  call void @free(i8* %383) #17
  br label %384

384:                                              ; preds = %379, %382
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %358) #17
  br label %385

385:                                              ; preds = %234, %238, %384, %326, %185
  %386 = phi %"class.blink::FontPlatformData"* [ %187, %185 ], [ null, %326 ], [ %301, %384 ], [ null, %238 ], [ null, %234 ]
  %387 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %7, i64 0, i32 5, i32 0
  %388 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %387, align 8
  %389 = icmp eq %"class.blink::FontVariationSettings"* %388, null
  br i1 %389, label %410, label %390

390:                                              ; preds = %385
  %391 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %388, i64 0, i32 1, i32 0
  %392 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %391, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %392) #17
  %393 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %391, i64 0, i32 0, i32 0
  %394 = load i32, i32* %393, align 4
  %395 = icmp eq i32 %394, 0
  br i1 %395, label %396, label %410

396:                                              ; preds = %390
  %397 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %391, i64 -4
  %398 = bitcast %"class.base::RefCounted"* %397 to %"class.blink::FontTagValuePair"**
  %399 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %398, align 8
  %400 = icmp eq %"class.blink::FontTagValuePair"* %399, null
  %401 = bitcast %"class.blink::FontTagValuePair"* %399 to i8*
  br i1 %400, label %408, label %402, !prof !6

402:                                              ; preds = %396
  %403 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %391, i64 -1, i32 0, i32 0
  %404 = load i32, i32* %403, align 4
  %405 = icmp eq i32 %404, 0
  br i1 %405, label %407, label %406, !prof !5

406:                                              ; preds = %402
  store i32 0, i32* %403, align 4
  br label %407

407:                                              ; preds = %406, %402
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %401) #17
  br label %408

408:                                              ; preds = %407, %396
  %409 = bitcast %"class.base::RefCounted"* %397 to i8*
  call void @free(i8* %409) #17
  br label %410

410:                                              ; preds = %408, %390, %385
  %411 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %7, i64 0, i32 0, i32 2
  %412 = bitcast %"class.std::__1::basic_string"* %411 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %413 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %412, i64 0, i32 1, i32 0
  %414 = load i8, i8* %413, align 1
  %415 = icmp slt i8 %414, 0
  br i1 %415, label %416, label %419

416:                                              ; preds = %410
  %417 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %411, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %418 = load i8*, i8** %417, align 8
  call void @_ZdlPv(i8* %418) #18
  br label %419

419:                                              ; preds = %416, %410
  %420 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %7, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %421 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %420, align 8
  %422 = icmp eq %"class.WTF::StringImpl"* %421, null
  br i1 %422, label %436, label %423

423:                                              ; preds = %419
  %424 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %421, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %425 = load atomic i32, i32* %424 monotonic, align 4
  %426 = and i32 %425, 2
  %427 = icmp eq i32 %426, 0
  %428 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %421, i64 0, i32 0
  %429 = load i32, i32* %428, align 4
  br i1 %427, label %430, label %432

430:                                              ; preds = %423
  %431 = add i32 %429, -1
  store i32 %431, i32* %428, align 4
  br label %432

432:                                              ; preds = %430, %423
  %433 = phi i32 [ %431, %430 ], [ %429, %423 ]
  %434 = icmp eq i32 %433, 0
  br i1 %434, label %435, label %436

435:                                              ; preds = %432
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %421) #17
  br label %436

436:                                              ; preds = %419, %432, %435
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %91) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %87) #17
  br label %437

437:                                              ; preds = %436, %79
  %438 = phi %"class.blink::FontPlatformData"* [ %80, %79 ], [ %386, %436 ]
  %439 = icmp eq i8* %25, null
  br i1 %439, label %444, label %440

440:                                              ; preds = %437
  %441 = load i8, i8* %25, align 1
  %442 = icmp eq i8 %441, 0
  br i1 %442, label %444, label %443

443:                                              ; preds = %440
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %25, i8* %26, i64 %27) #17
  br label %444

444:                                              ; preds = %437, %440, %443
  ret %"class.blink::FontPlatformData"* %438
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN5blink9FontCache12PlatformInitEv(%"class.blink::FontCache"*) local_unnamed_addr #1

declare float @_ZNK5blink15FontDescription17EffectiveFontSizeEv(%"class.blink::FontDescription"*) local_unnamed_addr #1

declare void @_ZNK5blink15FontDescription8CacheKeyERKNS_22FontFaceCreationParamsEbRKNS_20FontSelectionRequestE(%"struct.blink::FontCacheKey"* sret, %"class.blink::FontDescription"*, %"class.blink::FontFaceCreationParams"* dereferenceable(48), i1 zeroext, %"struct.blink::FontSelectionRequest"* dereferenceable(6)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare %"class.blink::FontPlatformData"* @_ZN5blink9FontCache22CreateFontPlatformDataERKNS_15FontDescriptionERKNS_22FontFaceCreationParamsEfNS_17AlternateFontNameE(%"class.blink::FontCache"*, %"class.blink::FontDescription"* dereferenceable(80), %"class.blink::FontFaceCreationParams"* dereferenceable(48), float, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::FontPlatformData"* @_ZN5blink9FontCache21ScaleFontPlatformDataERKNS_16FontPlatformDataERKNS_15FontDescriptionERKNS_22FontFaceCreationParamsEf(%"class.blink::FontCache"* nocapture readnone, %"class.blink::FontPlatformData"* dereferenceable(72), %"class.blink::FontDescription"* nocapture readnone dereferenceable(80), %"class.blink::FontFaceCreationParams"* nocapture readnone dereferenceable(48), float) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::TimeTicks", align 8
  %7 = load atomic i64, i64* @_ZZN5blink9FontCache21ScaleFontPlatformDataERKNS_16FontPlatformDataERKNS_15FontDescriptionERKNS_22FontFaceCreationParamsEfE28trace_event_unique_atomic245 monotonic, align 8
  %8 = inttoptr i64 %7 to i8*
  %9 = icmp eq i64 %7, 0
  br i1 %9, label %10, label %13, !prof !5

10:                                               ; preds = %5
  %11 = tail call i8* @_ZN4base11trace_event8TraceLog23GetCategoryGroupEnabledEPKc(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0)) #17
  %12 = ptrtoint i8* %11 to i64
  store atomic volatile i64 %12, i64* @_ZZN5blink9FontCache21ScaleFontPlatformDataERKNS_16FontPlatformDataERKNS_15FontDescriptionERKNS_22FontFaceCreationParamsEfE28trace_event_unique_atomic245 monotonic, align 8
  br label %13

13:                                               ; preds = %10, %5
  %14 = phi i8* [ %11, %10 ], [ %8, %5 ]
  %15 = load i8, i8* %14, align 1
  %16 = and i8 %15, 25
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %24, label %18, !prof !6

18:                                               ; preds = %13
  %19 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #17
  %20 = bitcast %"class.base::TimeTicks"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #17
  %21 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %6, i64 0, i32 0, i32 0
  %22 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #17
  store i64 %22, i64* %21, align 8
  %23 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* %14, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %19, %"class.base::TimeTicks"* nonnull dereferenceable(8) %6, %"class.base::trace_event::TraceArguments"* null, i32 0) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #17
  br label %24

24:                                               ; preds = %13, %18
  %25 = phi i64 [ -6148914691236517206, %13 ], [ %23, %18 ]
  %26 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %13 ], [ getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), %18 ]
  %27 = phi i8* [ null, %13 ], [ %14, %18 ]
  %28 = call noalias i8* @malloc(i64 72) #17
  %29 = bitcast i8* %28 to %"class.blink::FontPlatformData"*
  call void @_ZN5blink16FontPlatformDataC1ERKS0_f(%"class.blink::FontPlatformData"* %29, %"class.blink::FontPlatformData"* dereferenceable(72) %1, float %4) #17
  %30 = icmp eq i8* %27, null
  br i1 %30, label %35, label %31

31:                                               ; preds = %24
  %32 = load i8, i8* %27, align 1
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %35, label %34

34:                                               ; preds = %31
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %27, i8* %26, i64 %25) #17
  br label %35

35:                                               ; preds = %24, %31, %34
  ret %"class.blink::FontPlatformData"* %29
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink19AlternateFamilyNameERKN3WTF12AtomicStringE(%"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #3 comdat {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #17
  %15 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %18, label %22

18:                                               ; preds = %1
  %19 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* null, i8** %19, align 8
  %20 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %21 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %20, i64* %21, align 8
  br label %29

22:                                               ; preds = %1
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %16, %"class.WTF::StringImpl"** %23, align 8
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 1
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %28 = bitcast i8** %27 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %26, %"class.WTF::StringImpl"** %28, align 8
  br label %29

29:                                               ; preds = %18, %22
  %30 = phi i32 [ %25, %22 ], [ 0, %18 ]
  %31 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %30, i32* %31, align 8
  %32 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #17
  %33 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink17font_family_names8kCourierE, align 8
  %34 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %37, label %41

37:                                               ; preds = %29
  %38 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %38, align 8
  %39 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %40 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %39, i64* %40, align 8
  br label %48

41:                                               ; preds = %29
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %42, align 8
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 1
  %46 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %47 = bitcast i8** %46 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %45, %"class.WTF::StringImpl"** %47, align 8
  br label %48

48:                                               ; preds = %37, %41
  %49 = phi i32 [ %44, %41 ], [ 0, %37 ]
  %50 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %49, i32* %50, align 8
  %51 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #17
  br i1 %51, label %243, label %52

52:                                               ; preds = %48
  %53 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #17
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %56, label %60

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %57, align 8
  %58 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %59 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %58, i64* %59, align 8
  br label %67

60:                                               ; preds = %52
  %61 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %54, %"class.WTF::StringImpl"** %61, align 8
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 1
  %65 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %66 = bitcast i8** %65 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %64, %"class.WTF::StringImpl"** %66, align 8
  br label %67

67:                                               ; preds = %56, %60
  %68 = phi i32 [ %63, %60 ], [ 0, %56 ]
  %69 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %68, i32* %69, align 8
  %70 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #17
  %71 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink17font_family_names11kCourierNewE, align 8
  %72 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %71, i64 0, i32 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %75, label %79

75:                                               ; preds = %67
  %76 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %76, align 8
  %77 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %78 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %77, i64* %78, align 8
  br label %86

79:                                               ; preds = %67
  %80 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %73, %"class.WTF::StringImpl"** %80, align 8
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 1
  %82 = load i32, i32* %81, align 4
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 1
  %84 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %85 = bitcast i8** %84 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %83, %"class.WTF::StringImpl"** %85, align 8
  br label %86

86:                                               ; preds = %75, %79
  %87 = phi i32 [ %82, %79 ], [ 0, %75 ]
  %88 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %87, i32* %88, align 8
  %89 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #17
  br i1 %89, label %243, label %90

90:                                               ; preds = %86
  %91 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %91) #17
  %92 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %93 = icmp eq %"class.WTF::StringImpl"* %92, null
  br i1 %93, label %94, label %98

94:                                               ; preds = %90
  %95 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %95, align 8
  %96 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %97 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %96, i64* %97, align 8
  br label %105

98:                                               ; preds = %90
  %99 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %92, %"class.WTF::StringImpl"** %99, align 8
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 1
  %101 = load i32, i32* %100, align 4
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 1
  %103 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %104 = bitcast i8** %103 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %102, %"class.WTF::StringImpl"** %104, align 8
  br label %105

105:                                              ; preds = %94, %98
  %106 = phi i32 [ %101, %98 ], [ 0, %94 ]
  %107 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %106, i32* %107, align 8
  %108 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %108) #17
  %109 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink17font_family_names6kTimesE, align 8
  %110 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %109, i64 0, i32 0, i32 0, i32 0
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %110, align 8
  %112 = icmp eq %"class.WTF::StringImpl"* %111, null
  br i1 %112, label %113, label %117

113:                                              ; preds = %105
  %114 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* null, i8** %114, align 8
  %115 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %116 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %115, i64* %116, align 8
  br label %124

117:                                              ; preds = %105
  %118 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %111, %"class.WTF::StringImpl"** %118, align 8
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 1
  %120 = load i32, i32* %119, align 4
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 1
  %122 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %123 = bitcast i8** %122 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %121, %"class.WTF::StringImpl"** %123, align 8
  br label %124

124:                                              ; preds = %113, %117
  %125 = phi i32 [ %120, %117 ], [ 0, %113 ]
  %126 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %125, i32* %126, align 8
  %127 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %108) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %91) #17
  br i1 %127, label %243, label %128

128:                                              ; preds = %124
  %129 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %129) #17
  %130 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %131 = icmp eq %"class.WTF::StringImpl"* %130, null
  br i1 %131, label %132, label %136

132:                                              ; preds = %128
  %133 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* null, i8** %133, align 8
  %134 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %135 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %134, i64* %135, align 8
  br label %143

136:                                              ; preds = %128
  %137 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %130, %"class.WTF::StringImpl"** %137, align 8
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 1
  %139 = load i32, i32* %138, align 4
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 1
  %141 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %142 = bitcast i8** %141 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %140, %"class.WTF::StringImpl"** %142, align 8
  br label %143

143:                                              ; preds = %132, %136
  %144 = phi i32 [ %139, %136 ], [ 0, %132 ]
  %145 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %144, i32* %145, align 8
  %146 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %146) #17
  %147 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink17font_family_names14kTimesNewRomanE, align 8
  %148 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %147, i64 0, i32 0, i32 0, i32 0
  %149 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %148, align 8
  %150 = icmp eq %"class.WTF::StringImpl"* %149, null
  br i1 %150, label %151, label %155

151:                                              ; preds = %143
  %152 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* null, i8** %152, align 8
  %153 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %154 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %153, i64* %154, align 8
  br label %162

155:                                              ; preds = %143
  %156 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 0
  store %"class.WTF::StringImpl"* %149, %"class.WTF::StringImpl"** %156, align 8
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 0, i32 1
  %158 = load i32, i32* %157, align 4
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 1
  %160 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %161 = bitcast i8** %160 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %159, %"class.WTF::StringImpl"** %161, align 8
  br label %162

162:                                              ; preds = %151, %155
  %163 = phi i32 [ %158, %155 ], [ 0, %151 ]
  %164 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 %163, i32* %164, align 8
  %165 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %8, %"class.WTF::StringView"* nonnull dereferenceable(24) %9) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %146) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %129) #17
  br i1 %165, label %243, label %166

166:                                              ; preds = %162
  %167 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %167) #17
  %168 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %169 = icmp eq %"class.WTF::StringImpl"* %168, null
  br i1 %169, label %170, label %174

170:                                              ; preds = %166
  %171 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* null, i8** %171, align 8
  %172 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %173 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %172, i64* %173, align 8
  br label %181

174:                                              ; preds = %166
  %175 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 0
  store %"class.WTF::StringImpl"* %168, %"class.WTF::StringImpl"** %175, align 8
  %176 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %168, i64 0, i32 1
  %177 = load i32, i32* %176, align 4
  %178 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %168, i64 1
  %179 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %180 = bitcast i8** %179 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %178, %"class.WTF::StringImpl"** %180, align 8
  br label %181

181:                                              ; preds = %170, %174
  %182 = phi i32 [ %177, %174 ], [ 0, %170 ]
  %183 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 %182, i32* %183, align 8
  %184 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %184) #17
  %185 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink17font_family_names6kArialE, align 8
  %186 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %185, i64 0, i32 0, i32 0, i32 0
  %187 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %186, align 8
  %188 = icmp eq %"class.WTF::StringImpl"* %187, null
  br i1 %188, label %189, label %193

189:                                              ; preds = %181
  %190 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* null, i8** %190, align 8
  %191 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %192 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %191, i64* %192, align 8
  br label %200

193:                                              ; preds = %181
  %194 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 0
  store %"class.WTF::StringImpl"* %187, %"class.WTF::StringImpl"** %194, align 8
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %187, i64 0, i32 1
  %196 = load i32, i32* %195, align 4
  %197 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %187, i64 1
  %198 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  %199 = bitcast i8** %198 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %197, %"class.WTF::StringImpl"** %199, align 8
  br label %200

200:                                              ; preds = %189, %193
  %201 = phi i32 [ %196, %193 ], [ 0, %189 ]
  %202 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 %201, i32* %202, align 8
  %203 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %11) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %184) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %167) #17
  br i1 %203, label %243, label %204

204:                                              ; preds = %200
  %205 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %205) #17
  %206 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %207 = icmp eq %"class.WTF::StringImpl"* %206, null
  br i1 %207, label %208, label %212

208:                                              ; preds = %204
  %209 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  store i8* null, i8** %209, align 8
  %210 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %211 = bitcast %"class.WTF::StringView"* %12 to i64*
  store i64 %210, i64* %211, align 8
  br label %219

212:                                              ; preds = %204
  %213 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 0
  store %"class.WTF::StringImpl"* %206, %"class.WTF::StringImpl"** %213, align 8
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %206, i64 0, i32 1
  %215 = load i32, i32* %214, align 4
  %216 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %206, i64 1
  %217 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  %218 = bitcast i8** %217 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %216, %"class.WTF::StringImpl"** %218, align 8
  br label %219

219:                                              ; preds = %208, %212
  %220 = phi i32 [ %215, %212 ], [ 0, %208 ]
  %221 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 %220, i32* %221, align 8
  %222 = bitcast %"class.WTF::StringView"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %222) #17
  %223 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink17font_family_names10kHelveticaE, align 8
  %224 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %223, i64 0, i32 0, i32 0, i32 0
  %225 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %224, align 8
  %226 = icmp eq %"class.WTF::StringImpl"* %225, null
  br i1 %226, label %227, label %231

227:                                              ; preds = %219
  %228 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  store i8* null, i8** %228, align 8
  %229 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %230 = bitcast %"class.WTF::StringView"* %13 to i64*
  store i64 %229, i64* %230, align 8
  br label %238

231:                                              ; preds = %219
  %232 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 0
  store %"class.WTF::StringImpl"* %225, %"class.WTF::StringImpl"** %232, align 8
  %233 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %225, i64 0, i32 1
  %234 = load i32, i32* %233, align 4
  %235 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %225, i64 1
  %236 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  %237 = bitcast i8** %236 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %235, %"class.WTF::StringImpl"** %237, align 8
  br label %238

238:                                              ; preds = %227, %231
  %239 = phi i32 [ %234, %231 ], [ 0, %227 ]
  %240 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 %239, i32* %240, align 8
  %241 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %12, %"class.WTF::StringView"* nonnull dereferenceable(24) %13) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %222) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %205) #17
  %242 = select i1 %241, %"class.WTF::AtomicString"** @_ZN5blink17font_family_names6kArialE, %"class.WTF::AtomicString"** @_ZN3WTF12g_empty_atomE
  br label %243

243:                                              ; preds = %238, %200, %162, %124, %86, %48
  %244 = phi %"class.WTF::AtomicString"** [ @_ZN5blink17font_family_names11kCourierNewE, %48 ], [ @_ZN5blink17font_family_names8kCourierE, %86 ], [ @_ZN5blink17font_family_names14kTimesNewRomanE, %124 ], [ @_ZN5blink17font_family_names6kTimesE, %162 ], [ @_ZN5blink17font_family_names10kHelveticaE, %200 ], [ %242, %238 ]
  %245 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %244, align 8
  ret %"class.WTF::AtomicString"* %245
}

declare i8* @_ZN4base11trace_event8TraceLog23GetCategoryGroupEnabledEPKc(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ShapeCache"* @_ZN5blink9FontCache13GetShapeCacheERKNS_24FallbackListCompositeKeyE(%"class.blink::FontCache"*, %"struct.blink::FallbackListCompositeKey"* dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.222", align 8
  %4 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %0, i64 0, i32 9
  %5 = getelementptr inbounds %"class.WTF::HashMap.212", %"class.WTF::HashMap.212"* %4, i64 0, i32 0
  %6 = tail call %"struct.WTF::KeyValuePair.216"* @_ZNK3WTF9HashTableIN5blink24FallbackListCompositeKeyENS_12KeyValuePairIS2_NSt3__110unique_ptrINS1_10ShapeCacheENS4_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS1_28FallbackListCompositeKeyHashENS_18HashMapValueTraitsINS1_30FallbackListCompositeKeyTraitsENS_10HashTraitsIS9_EEEESE_NS_18PartitionAllocatorEE6LookupINS_22IdentityHashTranslatorISC_SH_SI_EES2_EEPKSA_RKT0_(%"class.WTF::HashTable.213"* %5, %"struct.blink::FallbackListCompositeKey"* dereferenceable(40) %1) #17
  %7 = icmp eq %"struct.WTF::KeyValuePair.216"* %6, null
  %8 = getelementptr inbounds %"class.WTF::HashMap.212", %"class.WTF::HashMap.212"* %4, i64 0, i32 0, i32 0
  %9 = load %"struct.WTF::KeyValuePair.216"*, %"struct.WTF::KeyValuePair.216"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %0, i64 0, i32 9, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %9, i64 %12
  %14 = select i1 %7, %"struct.WTF::KeyValuePair.216"* %13, %"struct.WTF::KeyValuePair.216"* %6
  %15 = icmp eq %"struct.WTF::KeyValuePair.216"* %14, %13
  br i1 %15, label %16, label %49

16:                                               ; preds = %2
  %17 = tail call noalias i8* @malloc(i64 72) #17
  %18 = bitcast i8* %17 to %"class.blink::ShapeCache"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 20, i1 false) #17
  %19 = getelementptr inbounds i8, i8* %17, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 20, i1 false) #17
  %20 = getelementptr inbounds i8, i8* %17, i64 48
  %21 = bitcast i8* %20 to i32*
  store i32 0, i32* %21, align 8
  %22 = getelementptr inbounds i8, i8* %17, i64 56
  %23 = bitcast i8* %22 to %"class.base::internal::WeakPtrFactoryBase"*
  %24 = ptrtoint i8* %17 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %23, i64 %24) #17
  %25 = bitcast %"class.std::__1::unique_ptr.222"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #17
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.222", %"class.std::__1::unique_ptr.222"* %3, i64 0, i32 0, i32 0, i32 0
  %27 = bitcast %"class.std::__1::unique_ptr.222"* %3 to i8**
  store i8* %17, i8** %27, align 8
  %28 = call { %"struct.WTF::KeyValuePair.216"*, i8 } @_ZN3WTF9HashTableIN5blink24FallbackListCompositeKeyENS_12KeyValuePairIS2_NSt3__110unique_ptrINS1_10ShapeCacheENS4_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS1_28FallbackListCompositeKeyHashENS_18HashMapValueTraitsINS1_30FallbackListCompositeKeyTraitsENS_10HashTraitsIS9_EEEESE_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EERKS2_S9_EENS_18HashTableAddResultISJ_SA_EEOT0_OT1_(%"class.WTF::HashTable.213"* %5, %"struct.blink::FallbackListCompositeKey"* dereferenceable(40) %1, %"class.std::__1::unique_ptr.222"* nonnull dereferenceable(8) %3) #17
  %29 = extractvalue { %"struct.WTF::KeyValuePair.216"*, i8 } %28, 1
  %30 = and i8 %29, 1
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %43

32:                                               ; preds = %16
  %33 = extractvalue { %"struct.WTF::KeyValuePair.216"*, i8 } %28, 0
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %33, i64 0, i32 1
  %35 = bitcast %"class.std::__1::unique_ptr.222"* %3 to i64*
  %36 = load i64, i64* %35, align 8
  store %"class.blink::ShapeCache"* null, %"class.blink::ShapeCache"** %26, align 8
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.222", %"class.std::__1::unique_ptr.222"* %34, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.blink::ShapeCache"*, %"class.blink::ShapeCache"** %37, align 8
  %39 = bitcast %"class.std::__1::unique_ptr.222"* %34 to i64*
  store i64 %36, i64* %39, align 8
  %40 = icmp eq %"class.blink::ShapeCache"* %38, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %32
  call void @_ZN5blink10ShapeCacheD2Ev(%"class.blink::ShapeCache"* nonnull %38) #17
  %42 = bitcast %"class.blink::ShapeCache"* %38 to i8*
  call void @free(i8* %42) #17
  br label %43

43:                                               ; preds = %16, %32, %41
  %44 = load %"class.blink::ShapeCache"*, %"class.blink::ShapeCache"** %26, align 8
  store %"class.blink::ShapeCache"* null, %"class.blink::ShapeCache"** %26, align 8
  %45 = icmp eq %"class.blink::ShapeCache"* %44, null
  br i1 %45, label %48, label %46

46:                                               ; preds = %43
  call void @_ZN5blink10ShapeCacheD2Ev(%"class.blink::ShapeCache"* nonnull %44) #17
  %47 = bitcast %"class.blink::ShapeCache"* %44 to i8*
  call void @free(i8* %47) #17
  br label %48

48:                                               ; preds = %43, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #17
  br label %52

49:                                               ; preds = %2
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %14, i64 0, i32 1, i32 0, i32 0, i32 0
  %51 = load %"class.blink::ShapeCache"*, %"class.blink::ShapeCache"** %50, align 8
  br label %52

52:                                               ; preds = %49, %48
  %53 = phi %"class.blink::ShapeCache"* [ %18, %48 ], [ %51, %49 ]
  ret %"class.blink::ShapeCache"* %53
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink9FontCache14SetFontManagerE5sk_spI9SkFontMgrE(%class.sk_sp* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  %3 = bitcast %class.sk_sp* %0 to i64*
  %4 = load i64, i64* %3, align 8
  store %class.SkFontMgr* null, %class.SkFontMgr** %2, align 8
  store i64 %4, i64* bitcast (%class.SkFontMgr** @_ZN5blink9FontCache20static_font_manager_E to i64*), align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9FontCache22AcceptLanguagesChangedERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink12LayoutLocale22AcceptLanguagesChangedERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %0) #17
  %2 = tail call %"class.blink::FontGlobalContext"* @_ZN5blink17FontGlobalContext3GetENS_14CreateIfNeededE(i32 1) #17
  %3 = getelementptr inbounds %"class.blink::FontGlobalContext", %"class.blink::FontGlobalContext"* %2, i64 0, i32 0
  tail call void @_ZN5blink9FontCache28PurgeFallbackListShaperCacheEv(%"class.blink::FontCache"* %3) #17
  ret void
}

declare void @_ZN5blink12LayoutLocale22AcceptLanguagesChangedERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9FontCache20InvalidateShapeCacheEv(%"class.blink::FontCache"* nocapture) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink9FontCache28PurgeFallbackListShaperCacheEv(%"class.blink::FontCache"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SimpleFontData"* @_ZN5blink9FontCache11GetFontDataERKNS_15FontDescriptionERKN3WTF12AtomicStringENS_17AlternateFontNameENS_12ShouldRetainE(%"class.blink::FontCache"*, %"class.blink::FontDescription"* dereferenceable(80), %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8), i32, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::FontFaceCreationParams", align 8
  %7 = bitcast %"class.blink::FontFaceCreationParams"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %7) #17
  %8 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %60, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #17
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !5

25:                                               ; preds = %16
  tail call void @llvm.trap() #17
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %11, %26
  %29 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %6, i64 0, i32 0
  store i32 0, i32* %29, align 8
  %30 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %30, align 8
  %31 = load atomic i32, i32* %12 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %46

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i33
  %38 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %37, i33 1) #17
  %39 = extractvalue { i33, i1 } %38, 1
  %40 = extractvalue { i33, i1 } %38, 0
  %41 = icmp slt i33 %40, 0
  %42 = or i1 %39, %41
  br i1 %42, label %43, label %44, !prof !5

43:                                               ; preds = %34
  tail call void @llvm.trap() #17
  unreachable

44:                                               ; preds = %34
  %45 = trunc i33 %40 to i32
  store i32 %45, i32* %35, align 4
  br label %46

46:                                               ; preds = %44, %28
  %47 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %6, i64 0, i32 2
  %48 = bitcast %"class.std::__1::basic_string"* %47 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 32, i1 false) #17
  %49 = load atomic i32, i32* %12 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  br i1 %51, label %54, label %56

54:                                               ; preds = %46
  %55 = add i32 %53, -1
  store i32 %55, i32* %52, align 4
  br label %56

56:                                               ; preds = %54, %46
  %57 = phi i32 [ %55, %54 ], [ %53, %46 ]
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %64

59:                                               ; preds = %56
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %9) #17
  br label %64

60:                                               ; preds = %5
  %61 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %6, i64 0, i32 0
  store i32 0, i32* %61, align 8
  %62 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  %63 = bitcast %"class.WTF::StringImpl"** %62 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 40, i1 false)
  br label %64

64:                                               ; preds = %56, %59, %60
  %65 = phi %"class.WTF::StringImpl"** [ %30, %56 ], [ %30, %59 ], [ %62, %60 ]
  %66 = call %"class.blink::FontPlatformData"* @_ZN5blink9FontCache19GetFontPlatformDataERKNS_15FontDescriptionERKNS_22FontFaceCreationParamsENS_17AlternateFontNameE(%"class.blink::FontCache"* %0, %"class.blink::FontDescription"* dereferenceable(80) %1, %"class.blink::FontFaceCreationParams"* nonnull dereferenceable(48) %6, i32 %3)
  %67 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %6, i64 0, i32 2
  %68 = bitcast %"class.std::__1::basic_string"* %67 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %64
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  call void @_ZdlPv(i8* %74) #18
  br label %75

75:                                               ; preds = %72, %64
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %91, label %78

78:                                               ; preds = %75
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %87

85:                                               ; preds = %78
  %86 = add i32 %84, -1
  store i32 %86, i32* %83, align 4
  br label %87

87:                                               ; preds = %85, %78
  %88 = phi i32 [ %86, %85 ], [ %84, %78 ]
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %91

90:                                               ; preds = %87
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %76) #17
  br label %91

91:                                               ; preds = %75, %87, %90
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #17
  %92 = icmp eq %"class.blink::FontPlatformData"* %66, null
  br i1 %92, label %101, label %93

93:                                               ; preds = %91
  %94 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 12, i32 0
  %95 = bitcast %"struct.blink::FontDescription::BitFields"* %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = and i64 %96, 1125899906842624
  %98 = icmp ne i64 %97, 0
  %99 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %0, i64 0, i32 10
  %100 = call %"class.blink::SimpleFontData"* @_ZN5blink13FontDataCache3GetEPKNS_16FontPlatformDataENS_12ShouldRetainEb(%"class.blink::FontDataCache"* %99, %"class.blink::FontPlatformData"* nonnull %66, i32 %4, i1 zeroext %98) #17
  br label %101

101:                                              ; preds = %91, %93
  %102 = phi %"class.blink::SimpleFontData"* [ %100, %93 ], [ null, %91 ]
  ret %"class.blink::SimpleFontData"* %102
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SimpleFontData"* @_ZN5blink9FontCache28FontDataFromFontPlatformDataEPKNS_16FontPlatformDataENS_12ShouldRetainEb(%"class.blink::FontCache"*, %"class.blink::FontPlatformData"*, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %0, i64 0, i32 10
  %6 = tail call %"class.blink::SimpleFontData"* @_ZN5blink13FontDataCache3GetEPKNS_16FontPlatformDataENS_12ShouldRetainEb(%"class.blink::FontDataCache"* %5, %"class.blink::FontPlatformData"* %1, i32 %2, i1 zeroext %3) #17
  ret %"class.blink::SimpleFontData"* %6
}

declare %"class.blink::SimpleFontData"* @_ZN5blink13FontDataCache3GetEPKNS_16FontPlatformDataENS_12ShouldRetainEb(%"class.blink::FontDataCache"*, %"class.blink::FontPlatformData"*, i32, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink9FontCache30IsPlatformFamilyMatchAvailableERKNS_15FontDescriptionERKN3WTF12AtomicStringE(%"class.blink::FontCache"*, %"class.blink::FontDescription"* dereferenceable(80), %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::FontFaceCreationParams", align 8
  %5 = bitcast %"class.blink::FontFaceCreationParams"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i33
  %18 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %17, i33 1) #17
  %19 = extractvalue { i33, i1 } %18, 1
  %20 = extractvalue { i33, i1 } %18, 0
  %21 = icmp slt i33 %20, 0
  %22 = or i1 %19, %21
  br i1 %22, label %23, label %24, !prof !5

23:                                               ; preds = %14
  tail call void @llvm.trap() #17
  unreachable

24:                                               ; preds = %14
  %25 = trunc i33 %20 to i32
  store i32 %25, i32* %15, align 4
  br label %26

26:                                               ; preds = %9, %24
  %27 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %4, i64 0, i32 0
  store i32 0, i32* %27, align 8
  %28 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"** %28, align 8
  %29 = load atomic i32, i32* %10 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %44

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = zext i32 %34 to i33
  %36 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #17
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !5

41:                                               ; preds = %32
  tail call void @llvm.trap() #17
  unreachable

42:                                               ; preds = %32
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %33, align 4
  br label %44

44:                                               ; preds = %42, %26
  %45 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %4, i64 0, i32 2
  %46 = bitcast %"class.std::__1::basic_string"* %45 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 32, i1 false) #17
  %47 = load atomic i32, i32* %10 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %44
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %44
  %55 = phi i32 [ %53, %52 ], [ %51, %44 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %62

57:                                               ; preds = %54
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #17
  br label %62

58:                                               ; preds = %3
  %59 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %4, i64 0, i32 0
  store i32 0, i32* %59, align 8
  %60 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %61 = bitcast %"class.WTF::StringImpl"** %60 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 40, i1 false)
  br label %62

62:                                               ; preds = %54, %57, %58
  %63 = phi %"class.WTF::StringImpl"** [ %28, %54 ], [ %28, %57 ], [ %60, %58 ]
  %64 = call %"class.blink::FontPlatformData"* @_ZN5blink9FontCache19GetFontPlatformDataERKNS_15FontDescriptionERKNS_22FontFaceCreationParamsENS_17AlternateFontNameE(%"class.blink::FontCache"* %0, %"class.blink::FontDescription"* dereferenceable(80) %1, %"class.blink::FontFaceCreationParams"* nonnull dereferenceable(48) %4, i32 1)
  %65 = icmp ne %"class.blink::FontPlatformData"* %64, null
  %66 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %4, i64 0, i32 2
  %67 = bitcast %"class.std::__1::basic_string"* %66 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  %69 = load i8, i8* %68, align 1
  %70 = icmp slt i8 %69, 0
  br i1 %70, label %71, label %74

71:                                               ; preds = %62
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load i8*, i8** %72, align 8
  call void @_ZdlPv(i8* %73) #18
  br label %74

74:                                               ; preds = %71, %62
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %76 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %76, label %90, label %77

77:                                               ; preds = %74
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  br i1 %81, label %84, label %86

84:                                               ; preds = %77
  %85 = add i32 %83, -1
  store i32 %85, i32* %82, align 4
  br label %86

86:                                               ; preds = %84, %77
  %87 = phi i32 [ %85, %84 ], [ %83, %77 ]
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %86
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %75) #17
  br label %90

90:                                               ; preds = %74, %86, %89
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %5) #17
  ret i1 %65
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink9FontCache38IsPlatformFontUniqueNameMatchAvailableERKNS_15FontDescriptionERKN3WTF12AtomicStringE(%"class.blink::FontCache"*, %"class.blink::FontDescription"* dereferenceable(80), %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::FontFaceCreationParams", align 8
  %5 = bitcast %"class.blink::FontFaceCreationParams"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i33
  %18 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %17, i33 1) #17
  %19 = extractvalue { i33, i1 } %18, 1
  %20 = extractvalue { i33, i1 } %18, 0
  %21 = icmp slt i33 %20, 0
  %22 = or i1 %19, %21
  br i1 %22, label %23, label %24, !prof !5

23:                                               ; preds = %14
  tail call void @llvm.trap() #17
  unreachable

24:                                               ; preds = %14
  %25 = trunc i33 %20 to i32
  store i32 %25, i32* %15, align 4
  br label %26

26:                                               ; preds = %9, %24
  %27 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %4, i64 0, i32 0
  store i32 0, i32* %27, align 8
  %28 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"** %28, align 8
  %29 = load atomic i32, i32* %10 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %44

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = zext i32 %34 to i33
  %36 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #17
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !5

41:                                               ; preds = %32
  tail call void @llvm.trap() #17
  unreachable

42:                                               ; preds = %32
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %33, align 4
  br label %44

44:                                               ; preds = %42, %26
  %45 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %4, i64 0, i32 2
  %46 = bitcast %"class.std::__1::basic_string"* %45 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 32, i1 false) #17
  %47 = load atomic i32, i32* %10 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %44
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %44
  %55 = phi i32 [ %53, %52 ], [ %51, %44 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %62

57:                                               ; preds = %54
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #17
  br label %62

58:                                               ; preds = %3
  %59 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %4, i64 0, i32 0
  store i32 0, i32* %59, align 8
  %60 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %61 = bitcast %"class.WTF::StringImpl"** %60 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 40, i1 false)
  br label %62

62:                                               ; preds = %54, %57, %58
  %63 = phi %"class.WTF::StringImpl"** [ %28, %54 ], [ %28, %57 ], [ %60, %58 ]
  %64 = call %"class.blink::FontPlatformData"* @_ZN5blink9FontCache19GetFontPlatformDataERKNS_15FontDescriptionERKNS_22FontFaceCreationParamsENS_17AlternateFontNameE(%"class.blink::FontCache"* %0, %"class.blink::FontDescription"* dereferenceable(80) %1, %"class.blink::FontFaceCreationParams"* nonnull dereferenceable(48) %4, i32 2)
  %65 = icmp ne %"class.blink::FontPlatformData"* %64, null
  %66 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %4, i64 0, i32 2
  %67 = bitcast %"class.std::__1::basic_string"* %66 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  %69 = load i8, i8* %68, align 1
  %70 = icmp slt i8 %69, 0
  br i1 %70, label %71, label %74

71:                                               ; preds = %62
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load i8*, i8** %72, align 8
  call void @_ZdlPv(i8* %73) #18
  br label %74

74:                                               ; preds = %71, %62
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %76 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %76, label %90, label %77

77:                                               ; preds = %74
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  br i1 %81, label %84, label %86

84:                                               ; preds = %77
  %85 = add i32 %83, -1
  store i32 %85, i32* %82, align 4
  br label %86

86:                                               ; preds = %84, %77
  %87 = phi i32 [ %85, %84 ], [ %83, %77 ]
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %86
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %75) #17
  br label %90

90:                                               ; preds = %74, %86, %89
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %5) #17
  ret i1 %65
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink9FontCache21FirstAvailableOrFirstERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #17
  %6 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #17
  %7 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #17
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %4, %"class.WTF::String"* %0, i32 0) #17
  %8 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = select i1 %11, i8* %13, i8* %7
  %15 = call i64 @strlen(i8* %14) #17
  %16 = icmp ugt i64 %15, -17
  br i1 %16, label %17, label %19

17:                                               ; preds = %1
  %18 = bitcast %"class.std::__1::basic_string"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %18) #19
  unreachable

19:                                               ; preds = %1
  %20 = icmp ult i64 %15, 23
  br i1 %20, label %29, label %21

21:                                               ; preds = %19
  %22 = add nuw i64 %15, 16
  %23 = and i64 %22, -16
  %24 = call i8* @_Znwm(i64 %23) #18
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %24, i8** %25, align 8
  %26 = or i64 %23, -9223372036854775808
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %26, i64* %27, align 8
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %15, i64* %28, align 8
  br label %34

29:                                               ; preds = %19
  %30 = trunc i64 %15 to i8
  %31 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  store i8 %30, i8* %32, align 1
  %33 = icmp eq i64 %15, 0
  br i1 %33, label %36, label %34

34:                                               ; preds = %29, %21
  %35 = phi i8* [ %24, %21 ], [ %6, %29 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %35, i8* align 1 %14, i64 %15, i1 false) #17
  br label %36

36:                                               ; preds = %29, %34
  %37 = phi i8* [ %6, %29 ], [ %35, %34 ]
  %38 = getelementptr inbounds i8, i8* %37, i64 %15
  store i8 0, i8* %38, align 1
  call void @_ZN3gfx8FontList21FirstAvailableOrFirstERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #17
  %39 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = select i1 %42, i8* %44, i8* %5
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %47 = load i64, i64* %46, align 8
  %48 = zext i8 %41 to i64
  %49 = select i1 %42, i64 %47, i64 %48
  %50 = call %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %45, i64 %49) #17
  %51 = load i8, i8* %40, align 1
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %53, label %55

53:                                               ; preds = %36
  %54 = load i8*, i8** %43, align 8
  call void @_ZdlPv(i8* %54) #18
  br label %55

55:                                               ; preds = %36, %53
  %56 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  %58 = load i8, i8* %57, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load i8*, i8** %61, align 8
  call void @_ZdlPv(i8* %62) #18
  br label %63

63:                                               ; preds = %55, %60
  %64 = load i8, i8* %9, align 1
  %65 = icmp slt i8 %64, 0
  br i1 %65, label %66, label %68

66:                                               ; preds = %63
  %67 = load i8*, i8** %12, align 8
  call void @_ZdlPv(i8* %67) #18
  br label %68

68:                                               ; preds = %63, %66
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #17
  ret %"class.WTF::StringImpl"* %50
}

declare %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #1

declare void @_ZN3gfx8FontList21FirstAvailableOrFirstERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SimpleFontData"* @_ZN5blink9FontCache36GetNonRetainedLastResortFallbackFontERKNS_15FontDescriptionE(%"class.blink::FontCache"*, %"class.blink::FontDescription"* dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.blink::SimpleFontData"* @_ZN5blink9FontCache25GetLastResortFallbackFontERKNS_15FontDescriptionENS_12ShouldRetainE(%"class.blink::FontCache"* %0, %"class.blink::FontDescription"* dereferenceable(80) %1, i32 1) #17
  %4 = icmp eq %"class.blink::SimpleFontData"* %3, null
  br i1 %4, label %19, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %6) #17
  %7 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %3, i64 0, i32 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.base::RefCounted.241", %"class.base::RefCounted.241"* %7, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %8) #17
  %9 = getelementptr inbounds %"class.base::RefCounted.241", %"class.base::RefCounted.241"* %7, i64 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %19

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.base::RefCounted.241", %"class.base::RefCounted.241"* %7, i64 -2
  %14 = bitcast %"class.base::RefCounted.241"* %13 to %"class.blink::FontData"*
  %15 = bitcast %"class.base::RefCounted.241"* %13 to void (%"class.blink::FontData"*)***
  %16 = load void (%"class.blink::FontData"*)**, void (%"class.blink::FontData"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %16, i64 1
  %18 = load void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %17, align 8
  tail call void %18(%"class.blink::FontData"* nonnull %14) #17
  br label %19

19:                                               ; preds = %2, %5, %12
  ret %"class.blink::SimpleFontData"* %3
}

declare %"class.blink::SimpleFontData"* @_ZN5blink9FontCache25GetLastResortFallbackFontERKNS_15FontDescriptionENS_12ShouldRetainE(%"class.blink::FontCache"*, %"class.blink::FontDescription"* dereferenceable(80), i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SimpleFontData"* @_ZN5blink9FontCache24FallbackFontForCharacterERKNS_15FontDescriptionEiPKNS_14SimpleFontDataENS_20FontFallbackPriorityE(%"class.blink::FontCache"*, %"class.blink::FontDescription"* dereferenceable(80), i32, %"class.blink::SimpleFontData"*, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::TimeTicks", align 8
  %7 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 57, i32 0), align 16
  %8 = and i8 %7, 25
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %16, label %10, !prof !6

10:                                               ; preds = %5
  %11 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #17
  %12 = bitcast %"class.base::TimeTicks"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #17
  %13 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %6, i64 0, i32 0, i32 0
  %14 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #17
  store i64 %14, i64* %13, align 8
  %15 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 57, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.3, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %11, %"class.base::TimeTicks"* nonnull dereferenceable(8) %6, %"class.base::trace_event::TraceArguments"* null, i32 0) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #17
  br label %16

16:                                               ; preds = %5, %10
  %17 = phi i64 [ -6148914691236517206, %5 ], [ %15, %10 ]
  %18 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %5 ], [ getelementptr inbounds ([36 x i8], [36 x i8]* @.str.3, i64 0, i64 0), %10 ]
  %19 = phi i8* [ null, %5 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 57, i32 0), %10 ]
  %20 = call zeroext i1 @_ZN5blink9Character12IsPrivateUseEi(i32 %2) #17
  br i1 %20, label %25, label %21

21:                                               ; preds = %16
  %22 = call zeroext i1 @_ZN5blink9Character14IsNonCharacterEi(i32 %2) #17
  br i1 %22, label %25, label %23

23:                                               ; preds = %21
  %24 = call %"class.blink::SimpleFontData"* @_ZN5blink9FontCache32PlatformFallbackFontForCharacterERKNS_15FontDescriptionEiPKNS_14SimpleFontDataENS_20FontFallbackPriorityE(%"class.blink::FontCache"* %0, %"class.blink::FontDescription"* dereferenceable(80) %1, i32 %2, %"class.blink::SimpleFontData"* %3, i32 %4) #17
  br label %25

25:                                               ; preds = %16, %21, %23
  %26 = phi %"class.blink::SimpleFontData"* [ %24, %23 ], [ null, %21 ], [ null, %16 ]
  %27 = icmp eq i8* %19, null
  br i1 %27, label %32, label %28

28:                                               ; preds = %25
  %29 = load i8, i8* %19, align 1
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %32, label %31

31:                                               ; preds = %28
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %19, i8* %18, i64 %17) #17
  br label %32

32:                                               ; preds = %25, %28, %31
  ret %"class.blink::SimpleFontData"* %26
}

declare zeroext i1 @_ZN5blink9Character12IsPrivateUseEi(i32) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink9Character14IsNonCharacterEi(i32) local_unnamed_addr #1

declare %"class.blink::SimpleFontData"* @_ZN5blink9FontCache32PlatformFallbackFontForCharacterERKNS_15FontDescriptionEiPKNS_14SimpleFontDataENS_20FontFallbackPriorityE(%"class.blink::FontCache"*, %"class.blink::FontDescription"* dereferenceable(80), i32, %"class.blink::SimpleFontData"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9FontCache15ReleaseFontDataEPKNS_14SimpleFontDataE(%"class.blink::FontCache"*, %"class.blink::SimpleFontData"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %0, i64 0, i32 10
  tail call void @_ZN5blink13FontDataCache7ReleaseEPKNS_14SimpleFontDataE(%"class.blink::FontDataCache"* %3, %"class.blink::SimpleFontData"* %1) #17
  ret void
}

declare void @_ZN5blink13FontDataCache7ReleaseEPKNS_14SimpleFontDataE(%"class.blink::FontDataCache"*, %"class.blink::SimpleFontData"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9FontCache26PurgePlatformFontDataCacheEv(%"class.blink::FontCache"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::TimeTicks", align 8
  %3 = alloca %"class.WTF::Vector.217", align 8
  %4 = alloca %"class.WTF::Vector.331", align 8
  %5 = load atomic i64, i64* @_ZZN5blink9FontCache26PurgePlatformFontDataCacheEvE28trace_event_unique_atomic367 monotonic, align 8
  %6 = inttoptr i64 %5 to i8*
  %7 = icmp eq i64 %5, 0
  br i1 %7, label %8, label %11, !prof !5

8:                                                ; preds = %1
  %9 = tail call i8* @_ZN4base11trace_event8TraceLog23GetCategoryGroupEnabledEPKc(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0)) #17
  %10 = ptrtoint i8* %9 to i64
  store atomic volatile i64 %10, i64* @_ZZN5blink9FontCache26PurgePlatformFontDataCacheEvE28trace_event_unique_atomic367 monotonic, align 8
  br label %11

11:                                               ; preds = %8, %1
  %12 = phi i8* [ %9, %8 ], [ %6, %1 ]
  %13 = load i8, i8* %12, align 1
  %14 = and i8 %13, 25
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %22, label %16, !prof !6

16:                                               ; preds = %11
  %17 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #17
  %18 = bitcast %"class.base::TimeTicks"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #17
  %19 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 0, i32 0, i32 0
  %20 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #17
  store i64 %20, i64* %19, align 8
  %21 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* %12, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %17, %"class.base::TimeTicks"* nonnull dereferenceable(8) %2, %"class.base::trace_event::TraceArguments"* null, i32 0) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #17
  br label %22

22:                                               ; preds = %11, %16
  %23 = phi i8* [ null, %11 ], [ %12, %16 ]
  %24 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %11 ], [ getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0), %16 ]
  %25 = phi i64 [ -6148914691236517206, %11 ], [ %21, %16 ]
  %26 = bitcast %"class.WTF::Vector.217"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #17
  %27 = getelementptr inbounds %"class.WTF::Vector.217", %"class.WTF::Vector.217"* %3, i64 0, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.WTF::Vector.217", %"class.WTF::Vector.217"* %3, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::Vector.217", %"class.WTF::Vector.217"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 0, i64 16, i1 false) #17
  %30 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %0, i64 0, i32 8
  %31 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %0, i64 0, i32 8, i32 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %41

34:                                               ; preds = %22
  %35 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %30, i64 0, i32 0, i32 0
  %36 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %0, i64 0, i32 8, i32 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %39
  br label %78

41:                                               ; preds = %22
  %42 = zext i32 %32 to i64
  %43 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink12FontCacheKeyEEEmm(i64 %42) #17
  %44 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %43, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12FontCacheKeyEEEPKcv, i64 0, i64 0)) #17
  %45 = ptrtoint i8* %44 to i64
  %46 = bitcast %"class.WTF::Vector.217"* %3 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  %47 = udiv i64 %43, 80
  %48 = trunc i64 %47 to i32
  store i32 %48, i32* %28, align 8
  %49 = load i32, i32* %31, align 4
  %50 = icmp eq i32 %49, 0
  %51 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %30, i64 0, i32 0, i32 0
  %52 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %0, i64 0, i32 8, i32 0, i32 1
  %54 = load i32, i32* %53, align 8
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %52, i64 %55
  br i1 %50, label %78, label %57

57:                                               ; preds = %41
  %58 = icmp eq i32 %54, 0
  br i1 %58, label %78, label %59

59:                                               ; preds = %57, %71
  %60 = phi %"struct.WTF::KeyValuePair"* [ %72, %71 ], [ %52, %57 ]
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %60, i64 0, i32 0
  %62 = call zeroext i1 @_ZN3WTF27HashTraitsEmptyValueCheckerINS_10HashTraitsIN5blink12FontCacheKeyEEELb0EE12IsEmptyValueIS3_EEbRKT_(%"struct.blink::FontCacheKey"* dereferenceable(80) %61) #17
  br i1 %62, label %71, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %60, i64 0, i32 0, i32 1
  %65 = load i32, i32* %64, align 8
  %66 = icmp eq i32 %65, -1
  br i1 %66, label %67, label %74

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %60, i64 0, i32 0, i32 3
  %69 = load float, float* %68, align 8
  %70 = fcmp oeq float %69, 0x47EFFFFFE0000000
  br i1 %70, label %71, label %74

71:                                               ; preds = %67, %59
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %60, i64 1
  %73 = icmp eq %"struct.WTF::KeyValuePair"* %72, %56
  br i1 %73, label %74, label %59

74:                                               ; preds = %71, %67, %63
  %75 = phi %"struct.WTF::KeyValuePair"* [ %60, %63 ], [ %60, %67 ], [ %56, %71 ]
  %76 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %51, align 8
  %77 = load i32, i32* %53, align 8
  br label %78

78:                                               ; preds = %34, %74, %41, %57
  %79 = phi %"struct.WTF::KeyValuePair"* [ %56, %41 ], [ %56, %57 ], [ %56, %74 ], [ %40, %34 ]
  %80 = phi i32 [ %54, %41 ], [ 0, %57 ], [ %77, %74 ], [ %38, %34 ]
  %81 = phi %"struct.WTF::KeyValuePair"* [ %52, %41 ], [ %52, %57 ], [ %76, %74 ], [ %36, %34 ]
  %82 = phi %"struct.WTF::KeyValuePair"* [ %56, %41 ], [ %52, %57 ], [ %75, %74 ], [ %40, %34 ]
  %83 = zext i32 %80 to i64
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %81, i64 %83
  %85 = icmp eq %"struct.WTF::KeyValuePair"* %82, %84
  br i1 %85, label %93, label %86

86:                                               ; preds = %78
  %87 = bitcast %"class.WTF::Vector.331"* %4 to i8*
  %88 = getelementptr inbounds %"class.WTF::Vector.331", %"class.WTF::Vector.331"* %4, i64 0, i32 0, i32 0, i32 0
  %89 = getelementptr inbounds %"class.WTF::Vector.331", %"class.WTF::Vector.331"* %4, i64 0, i32 0, i32 0, i32 1
  %90 = getelementptr inbounds %"class.WTF::Vector.331", %"class.WTF::Vector.331"* %4, i64 0, i32 0, i32 0, i32 2
  %91 = bitcast %"class.WTF::Vector.331"* %4 to i64*
  %92 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %0, i64 0, i32 10
  br label %169

93:                                               ; preds = %338, %78
  call void @_ZN3WTF7HashMapIN5blink12FontCacheKeyENS0_IjNSt3__110unique_ptrINS1_16FontPlatformDataENS3_14default_deleteIS5_EEEENS_7IntHashIjEENS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIS8_EENS_18PartitionAllocatorEEENS1_16FontCacheKeyHashENSD_IS2_EENSD_ISG_EESF_E9RemoveAllINS_6VectorIS2_Lj0ESF_EEEEvRKT_(%"class.WTF::HashMap"* %30, %"class.WTF::Vector.217"* nonnull dereferenceable(16) %3)
  %94 = load %"struct.blink::FontCacheKey"*, %"struct.blink::FontCacheKey"** %27, align 8
  %95 = icmp eq %"struct.blink::FontCacheKey"* %94, null
  br i1 %95, label %162, label %96, !prof !6

96:                                               ; preds = %93
  %97 = bitcast %"struct.blink::FontCacheKey"* %94 to i8*
  %98 = load i32, i32* %29, align 4
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %160, label %100, !prof !5

100:                                              ; preds = %96
  %101 = zext i32 %98 to i64
  %102 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %94, i64 %101
  br label %103

103:                                              ; preds = %154, %100
  %104 = phi %"struct.blink::FontCacheKey"* [ %155, %154 ], [ %94, %100 ]
  %105 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %104, i64 0, i32 5, i32 0
  %106 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %105, align 8
  %107 = icmp eq %"class.blink::FontVariationSettings"* %106, null
  br i1 %107, label %128, label %108

108:                                              ; preds = %103
  %109 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %106, i64 0, i32 1, i32 0
  %110 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %109, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %110) #17
  %111 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %109, i64 0, i32 0, i32 0
  %112 = load i32, i32* %111, align 4
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %128

114:                                              ; preds = %108
  %115 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %109, i64 -4
  %116 = bitcast %"class.base::RefCounted"* %115 to %"class.blink::FontTagValuePair"**
  %117 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %116, align 8
  %118 = icmp eq %"class.blink::FontTagValuePair"* %117, null
  %119 = bitcast %"class.blink::FontTagValuePair"* %117 to i8*
  br i1 %118, label %126, label %120, !prof !6

120:                                              ; preds = %114
  %121 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %109, i64 -1, i32 0, i32 0
  %122 = load i32, i32* %121, align 4
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %125, label %124, !prof !5

124:                                              ; preds = %120
  store i32 0, i32* %121, align 4
  br label %125

125:                                              ; preds = %124, %120
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %119) #17
  br label %126

126:                                              ; preds = %125, %114
  %127 = bitcast %"class.base::RefCounted"* %115 to i8*
  call void @free(i8* %127) #17
  br label %128

128:                                              ; preds = %126, %108, %103
  %129 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %104, i64 0, i32 0, i32 2
  %130 = bitcast %"class.std::__1::basic_string"* %129 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %131 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %130, i64 0, i32 1, i32 0
  %132 = load i8, i8* %131, align 1
  %133 = icmp slt i8 %132, 0
  br i1 %133, label %134, label %137

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %129, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load i8*, i8** %135, align 8
  call void @_ZdlPv(i8* %136) #18
  br label %137

137:                                              ; preds = %134, %128
  %138 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %104, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %139 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %138, align 8
  %140 = icmp eq %"class.WTF::StringImpl"* %139, null
  br i1 %140, label %154, label %141

141:                                              ; preds = %137
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load atomic i32, i32* %142 monotonic, align 4
  %144 = and i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 0
  %147 = load i32, i32* %146, align 4
  br i1 %145, label %148, label %150

148:                                              ; preds = %141
  %149 = add i32 %147, -1
  store i32 %149, i32* %146, align 4
  br label %150

150:                                              ; preds = %148, %141
  %151 = phi i32 [ %149, %148 ], [ %147, %141 ]
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %150
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %139) #17
  br label %154

154:                                              ; preds = %137, %150, %153
  %155 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %104, i64 1
  %156 = icmp eq %"struct.blink::FontCacheKey"* %155, %102
  br i1 %156, label %157, label %103

157:                                              ; preds = %154
  store i32 0, i32* %29, align 4
  %158 = bitcast %"class.WTF::Vector.217"* %3 to i8**
  %159 = load i8*, i8** %158, align 8
  br label %160

160:                                              ; preds = %157, %96
  %161 = phi i8* [ %159, %157 ], [ %97, %96 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %161) #17
  store %"struct.blink::FontCacheKey"* null, %"struct.blink::FontCacheKey"** %27, align 8
  br label %162

162:                                              ; preds = %93, %160
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #17
  %163 = icmp eq i8* %23, null
  br i1 %163, label %168, label %164

164:                                              ; preds = %162
  %165 = load i8, i8* %23, align 1
  %166 = icmp eq i8 %165, 0
  br i1 %166, label %168, label %167

167:                                              ; preds = %164
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %23, i8* %24, i64 %25) #17
  br label %168

168:                                              ; preds = %162, %164, %167
  ret void

169:                                              ; preds = %86, %338
  %170 = phi %"struct.WTF::KeyValuePair"* [ %82, %86 ], [ %339, %338 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %87) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %87, i8 0, i64 16, i1 false) #17
  %171 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %170, i64 0, i32 1
  %172 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %170, i64 0, i32 1, i32 0, i32 2
  %173 = load i32, i32* %172, align 4
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %183, label %175

175:                                              ; preds = %169
  %176 = zext i32 %173 to i64
  %177 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm(i64 %176) #17
  %178 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %177, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv, i64 0, i64 0)) #17
  %179 = ptrtoint i8* %178 to i64
  store atomic i64 %179, i64* %91 monotonic, align 8
  %180 = lshr i64 %177, 2
  %181 = trunc i64 %180 to i32
  store i32 %181, i32* %89, align 8
  %182 = load i32, i32* %172, align 4
  br label %183

183:                                              ; preds = %169, %175
  %184 = phi i32 [ 0, %169 ], [ %182, %175 ]
  %185 = icmp eq i32 %184, 0
  %186 = getelementptr inbounds %"class.WTF::HashMap.194", %"class.WTF::HashMap.194"* %171, i64 0, i32 0, i32 0
  %187 = load %"struct.WTF::KeyValuePair.198"*, %"struct.WTF::KeyValuePair.198"** %186, align 8
  %188 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %170, i64 0, i32 1, i32 0, i32 1
  %189 = load i32, i32* %188, align 8
  %190 = zext i32 %189 to i64
  %191 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %187, i64 %190
  br i1 %185, label %205, label %192

192:                                              ; preds = %183
  %193 = icmp eq i32 %189, 0
  br i1 %193, label %202, label %194

194:                                              ; preds = %192, %199
  %195 = phi %"struct.WTF::KeyValuePair.198"* [ %200, %199 ], [ %187, %192 ]
  %196 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %195, i64 0, i32 0
  %197 = load i32, i32* %196, align 4
  %198 = icmp ugt i32 %197, -3
  br i1 %198, label %199, label %202

199:                                              ; preds = %194
  %200 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %195, i64 1
  %201 = icmp eq %"struct.WTF::KeyValuePair.198"* %200, %191
  br i1 %201, label %205, label %194

202:                                              ; preds = %194, %192
  %203 = phi %"struct.WTF::KeyValuePair.198"* [ %187, %192 ], [ %195, %194 ]
  %204 = icmp eq %"struct.WTF::KeyValuePair.198"* %203, %191
  br i1 %204, label %205, label %208

205:                                              ; preds = %199, %228, %239, %236, %183, %202
  call void @_ZN3WTF7HashMapIjNSt3__110unique_ptrIN5blink16FontPlatformDataENS1_14default_deleteIS4_EEEENS_7IntHashIjEENS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIS7_EENS_18PartitionAllocatorEE9RemoveAllINS_6VectorIjLj0ESE_EEEEvRKT_(%"class.WTF::HashMap.194"* %171, %"class.WTF::Vector.331"* nonnull dereferenceable(16) %4)
  %206 = load i32, i32* %172, align 4
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %241, label %311

208:                                              ; preds = %202, %239
  %209 = phi %"struct.WTF::KeyValuePair.198"* [ %232, %239 ], [ %203, %202 ]
  %210 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %209, i64 0, i32 1, i32 0, i32 0, i32 0
  %211 = load %"class.blink::FontPlatformData"*, %"class.blink::FontPlatformData"** %210, align 8
  %212 = icmp eq %"class.blink::FontPlatformData"* %211, null
  br i1 %212, label %228, label %213

213:                                              ; preds = %208
  %214 = call zeroext i1 @_ZNK5blink13FontDataCache8ContainsEPKNS_16FontPlatformDataE(%"class.blink::FontDataCache"* %92, %"class.blink::FontPlatformData"* nonnull %211) #17
  br i1 %214, label %228, label %215

215:                                              ; preds = %213
  %216 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %209, i64 0, i32 0
  %217 = load i32, i32* %90, align 4
  %218 = load i32, i32* %89, align 8
  %219 = icmp eq i32 %217, %218
  br i1 %219, label %227, label %220, !prof !5

220:                                              ; preds = %215
  %221 = load i32*, i32** %88, align 8
  %222 = zext i32 %217 to i64
  %223 = getelementptr inbounds i32, i32* %221, i64 %222
  %224 = load i32, i32* %216, align 4
  store i32 %224, i32* %223, align 4
  %225 = load i32, i32* %90, align 4
  %226 = add i32 %225, 1
  store i32 %226, i32* %90, align 4
  br label %228

227:                                              ; preds = %215
  call void @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKjEEvOT_(%"class.WTF::Vector.331"* nonnull %4, i32* dereferenceable(4) %216) #17
  br label %228

228:                                              ; preds = %208, %227, %220, %213
  %229 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %209, i64 1
  %230 = icmp eq %"struct.WTF::KeyValuePair.198"* %229, %191
  br i1 %230, label %205, label %231

231:                                              ; preds = %228, %236
  %232 = phi %"struct.WTF::KeyValuePair.198"* [ %237, %236 ], [ %229, %228 ]
  %233 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %232, i64 0, i32 0
  %234 = load i32, i32* %233, align 4
  %235 = icmp ugt i32 %234, -3
  br i1 %235, label %236, label %239

236:                                              ; preds = %231
  %237 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %232, i64 1
  %238 = icmp eq %"struct.WTF::KeyValuePair.198"* %237, %191
  br i1 %238, label %205, label %231

239:                                              ; preds = %231
  %240 = icmp eq %"struct.WTF::KeyValuePair.198"* %232, %191
  br i1 %240, label %205, label %208

241:                                              ; preds = %205
  %242 = load i32, i32* %29, align 4
  %243 = load i32, i32* %28, align 8
  %244 = icmp eq i32 %242, %243
  br i1 %244, label %309, label %245, !prof !5

245:                                              ; preds = %241
  %246 = load %"struct.blink::FontCacheKey"*, %"struct.blink::FontCacheKey"** %27, align 8
  %247 = zext i32 %242 to i64
  %248 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %246, i64 %247, i32 0, i32 0
  %249 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %170, i64 0, i32 0, i32 0, i32 0
  %250 = load i32, i32* %249, align 8
  store i32 %250, i32* %248, align 8
  %251 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %170, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %252 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %251, align 8
  %253 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %246, i64 %247, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %252, %"class.WTF::StringImpl"** %253, align 8
  %254 = icmp eq %"class.WTF::StringImpl"* %252, null
  br i1 %254, label %272, label %255

255:                                              ; preds = %245
  %256 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %252, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %257 = load atomic i32, i32* %256 monotonic, align 4
  %258 = and i32 %257, 2
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %260, label %272

260:                                              ; preds = %255
  %261 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %252, i64 0, i32 0
  %262 = load i32, i32* %261, align 4
  %263 = zext i32 %262 to i33
  %264 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %263, i33 1) #17
  %265 = extractvalue { i33, i1 } %264, 1
  %266 = extractvalue { i33, i1 } %264, 0
  %267 = icmp slt i33 %266, 0
  %268 = or i1 %265, %267
  br i1 %268, label %269, label %270, !prof !5

269:                                              ; preds = %260
  call void @llvm.trap() #17
  unreachable

270:                                              ; preds = %260
  %271 = trunc i33 %266 to i32
  store i32 %271, i32* %261, align 4
  br label %272

272:                                              ; preds = %270, %255, %245
  %273 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %246, i64 %247, i32 0, i32 2
  %274 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %170, i64 0, i32 0, i32 0, i32 2
  %275 = bitcast %"class.std::__1::basic_string"* %274 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %276 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %275, i64 0, i32 1, i32 0
  %277 = load i8, i8* %276, align 1
  %278 = icmp slt i8 %277, 0
  br i1 %278, label %282, label %279

279:                                              ; preds = %272
  %280 = bitcast %"class.std::__1::basic_string"* %273 to i8*
  %281 = bitcast %"class.std::__1::basic_string"* %274 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %280, i8* align 8 %281, i64 24, i1 false) #17
  br label %287

282:                                              ; preds = %272
  %283 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %274, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %284 = load i8*, i8** %283, align 8
  %285 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %170, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %286 = load i64, i64* %285, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %273, i8* %284, i64 %286) #17
  br label %287

287:                                              ; preds = %282, %279
  %288 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %246, i64 %247, i32 0, i32 3
  %289 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %170, i64 0, i32 0, i32 0, i32 3
  %290 = bitcast i32* %289 to i64*
  %291 = bitcast i32* %288 to i64*
  %292 = load i64, i64* %290, align 8
  store i64 %292, i64* %291, align 8
  %293 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %246, i64 %247, i32 1
  %294 = bitcast i32* %293 to i8*
  %295 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %170, i64 0, i32 0, i32 1
  %296 = bitcast i32* %295 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %294, i8* align 8 %296, i64 12, i1 false) #17
  %297 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %170, i64 0, i32 0, i32 5, i32 0
  %298 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %297, align 8
  %299 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %246, i64 %247, i32 5, i32 0
  store %"class.blink::FontVariationSettings"* %298, %"class.blink::FontVariationSettings"** %299, align 8
  %300 = icmp eq %"class.blink::FontVariationSettings"* %298, null
  br i1 %300, label %303, label %301

301:                                              ; preds = %287
  %302 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %298, i64 0, i32 1, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %302) #17
  br label %303

303:                                              ; preds = %301, %287
  %304 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %246, i64 %247, i32 6
  %305 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %170, i64 0, i32 0, i32 6
  %306 = load i8, i8* %305, align 8, !range !7
  store i8 %306, i8* %304, align 8
  %307 = load i32, i32* %29, align 4
  %308 = add i32 %307, 1
  store i32 %308, i32* %29, align 4
  br label %311

309:                                              ; preds = %241
  %310 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %170, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink12FontCacheKeyELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.217"* nonnull %3, %"struct.blink::FontCacheKey"* dereferenceable(80) %310) #17
  br label %311

311:                                              ; preds = %309, %303, %205
  %312 = load i32*, i32** %88, align 8
  %313 = icmp eq i32* %312, null
  %314 = bitcast i32* %312 to i8*
  br i1 %313, label %320, label %315, !prof !6

315:                                              ; preds = %311
  %316 = load i32, i32* %90, align 4
  %317 = icmp eq i32 %316, 0
  br i1 %317, label %319, label %318, !prof !5

318:                                              ; preds = %315
  store i32 0, i32* %90, align 4
  br label %319

319:                                              ; preds = %318, %315
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %314) #17
  store i32* null, i32** %88, align 8
  br label %320

320:                                              ; preds = %311, %319
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87) #17
  %321 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %170, i64 1
  %322 = icmp eq %"struct.WTF::KeyValuePair"* %321, %79
  br i1 %322, label %338, label %323

323:                                              ; preds = %320, %335
  %324 = phi %"struct.WTF::KeyValuePair"* [ %336, %335 ], [ %321, %320 ]
  %325 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %324, i64 0, i32 0
  %326 = call zeroext i1 @_ZN3WTF27HashTraitsEmptyValueCheckerINS_10HashTraitsIN5blink12FontCacheKeyEEELb0EE12IsEmptyValueIS3_EEbRKT_(%"struct.blink::FontCacheKey"* dereferenceable(80) %325) #17
  br i1 %326, label %335, label %327

327:                                              ; preds = %323
  %328 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %324, i64 0, i32 0, i32 1
  %329 = load i32, i32* %328, align 8
  %330 = icmp eq i32 %329, -1
  br i1 %330, label %331, label %338

331:                                              ; preds = %327
  %332 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %324, i64 0, i32 0, i32 3
  %333 = load float, float* %332, align 8
  %334 = fcmp oeq float %333, 0x47EFFFFFE0000000
  br i1 %334, label %335, label %338

335:                                              ; preds = %331, %323
  %336 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %324, i64 1
  %337 = icmp eq %"struct.WTF::KeyValuePair"* %336, %79
  br i1 %337, label %338, label %323

338:                                              ; preds = %327, %331, %335, %320
  %339 = phi %"struct.WTF::KeyValuePair"* [ %79, %320 ], [ %324, %327 ], [ %324, %331 ], [ %79, %335 ]
  %340 = icmp eq %"struct.WTF::KeyValuePair"* %339, %84
  br i1 %340, label %93, label %169
}

declare zeroext i1 @_ZNK5blink13FontDataCache8ContainsEPKNS_16FontPlatformDataE(%"class.blink::FontDataCache"*, %"class.blink::FontPlatformData"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF7HashMapIjNSt3__110unique_ptrIN5blink16FontPlatformDataENS1_14default_deleteIS4_EEEENS_7IntHashIjEENS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIS7_EENS_18PartitionAllocatorEE9RemoveAllINS_6VectorIjLj0ESE_EEEEvRKT_(%"class.WTF::HashMap.194"*, %"class.WTF::Vector.331"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashMap.194", %"class.WTF::HashMap.194"* %0, i64 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %91, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::Vector.331", %"class.WTF::Vector.331"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %91, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.WTF::Vector.331", %"class.WTF::Vector.331"* %1, i64 0, i32 0, i32 0, i32 0
  %12 = load i32*, i32** %11, align 8
  %13 = zext i32 %8 to i64
  %14 = getelementptr inbounds i32, i32* %12, i64 %13
  %15 = getelementptr inbounds %"class.WTF::HashMap.194", %"class.WTF::HashMap.194"* %0, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.WTF::HashMap.194", %"class.WTF::HashMap.194"* %0, i64 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::HashMap.194", %"class.WTF::HashMap.194"* %0, i64 0, i32 0
  br label %18

18:                                               ; preds = %88, %10
  %19 = phi i32* [ %12, %10 ], [ %89, %88 ]
  %20 = load %"struct.WTF::KeyValuePair.198"*, %"struct.WTF::KeyValuePair.198"** %15, align 8
  %21 = icmp eq %"struct.WTF::KeyValuePair.198"* %20, null
  %22 = load i32, i32* %16, align 8
  br i1 %21, label %79, label %23

23:                                               ; preds = %18
  %24 = add i32 %22, -1
  %25 = zext i32 %24 to i64
  %26 = load i32, i32* %19, align 4
  %27 = shl i32 %26, 15
  %28 = xor i32 %27, -1
  %29 = add i32 %26, %28
  %30 = lshr i32 %29, 10
  %31 = xor i32 %30, %29
  %32 = mul i32 %31, 9
  %33 = lshr i32 %32, 6
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 11
  %36 = xor i32 %35, -1
  %37 = add i32 %34, %36
  %38 = lshr i32 %37, 16
  %39 = xor i32 %38, %37
  %40 = and i32 %39, %24
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %20, i64 %41
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %42, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, %26
  br i1 %45, label %74, label %46

46:                                               ; preds = %23
  %47 = xor i32 %39, -1
  %48 = lshr i32 %37, 23
  %49 = add i32 %48, %47
  %50 = shl i32 %49, 12
  %51 = xor i32 %50, %49
  %52 = lshr i32 %51, 7
  %53 = xor i32 %52, %51
  %54 = shl i32 %53, 2
  %55 = xor i32 %54, %53
  %56 = lshr i32 %55, 20
  %57 = xor i32 %56, %55
  %58 = or i32 %57, 1
  %59 = zext i32 %58 to i64
  br label %60

60:                                               ; preds = %65, %46
  %61 = phi i32 [ %44, %46 ], [ %72, %65 ]
  %62 = phi i64 [ %41, %46 ], [ %69, %65 ]
  %63 = phi i64 [ 0, %46 ], [ %67, %65 ]
  %64 = icmp eq i32 %61, -1
  br i1 %64, label %79, label %65

65:                                               ; preds = %60
  %66 = icmp eq i64 %63, 0
  %67 = select i1 %66, i64 %59, i64 %63
  %68 = add i64 %67, %62
  %69 = and i64 %68, %25
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %20, i64 %69
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %70, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, %26
  br i1 %73, label %74, label %60

74:                                               ; preds = %65, %23
  %75 = phi %"struct.WTF::KeyValuePair.198"* [ %42, %23 ], [ %70, %65 ]
  %76 = icmp eq %"struct.WTF::KeyValuePair.198"* %75, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %74
  %78 = zext i32 %22 to i64
  br label %82

79:                                               ; preds = %60, %74, %18
  %80 = zext i32 %22 to i64
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %20, i64 %80
  br label %82

82:                                               ; preds = %79, %77
  %83 = phi i64 [ %78, %77 ], [ %80, %79 ]
  %84 = phi %"struct.WTF::KeyValuePair.198"* [ %75, %77 ], [ %81, %79 ]
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %20, i64 %83
  %86 = icmp eq %"struct.WTF::KeyValuePair.198"* %85, %84
  br i1 %86, label %88, label %87

87:                                               ; preds = %82
  tail call void @_ZN3WTF9HashTableIjNS_12KeyValuePairIjNSt3__110unique_ptrIN5blink16FontPlatformDataENS2_14default_deleteIS5_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIS8_EEEESF_NS_18PartitionAllocatorEE5eraseEPKS9_(%"class.WTF::HashTable.195"* %17, %"struct.WTF::KeyValuePair.198"* %84) #17
  br label %88

88:                                               ; preds = %87, %82
  %89 = getelementptr inbounds i32, i32* %19, i64 1
  %90 = icmp eq i32* %89, %14
  br i1 %90, label %91, label %18

91:                                               ; preds = %88, %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF7HashMapIN5blink12FontCacheKeyENS0_IjNSt3__110unique_ptrINS1_16FontPlatformDataENS3_14default_deleteIS5_EEEENS_7IntHashIjEENS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIS8_EENS_18PartitionAllocatorEEENS1_16FontCacheKeyHashENSD_IS2_EENSD_ISG_EESF_E9RemoveAllINS_6VectorIS2_Lj0ESF_EEEEvRKT_(%"class.WTF::HashMap"*, %"class.WTF::Vector.217"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %0, i64 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %55, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::Vector.217", %"class.WTF::Vector.217"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %55, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.WTF::Vector.217", %"class.WTF::Vector.217"* %1, i64 0, i32 0, i32 0, i32 0
  %12 = load %"struct.blink::FontCacheKey"*, %"struct.blink::FontCacheKey"** %11, align 8
  %13 = zext i32 %8 to i64
  %14 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %12, i64 %13
  %15 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %0, i64 0, i32 0
  %16 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %0, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %0, i64 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %0, i64 0, i32 0, i32 3
  br label %19

19:                                               ; preds = %52, %10
  %20 = phi %"struct.blink::FontCacheKey"* [ %12, %10 ], [ %53, %52 ]
  %21 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_NS_7HashMapIjNSt3__110unique_ptrINS1_16FontPlatformDataENS5_14default_deleteIS7_EEEENS_7IntHashIjEENS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsISA_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINSF_IS2_EENSF_ISI_EEEESN_SH_E6LookupINS_22IdentityHashTranslatorISL_SP_SH_EES2_EEPSJ_RKT0_(%"class.WTF::HashTable.174"* %15, %"struct.blink::FontCacheKey"* dereferenceable(80) %20) #17
  %22 = icmp eq %"struct.WTF::KeyValuePair"* %21, null
  %23 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %16, align 8
  %24 = load i32, i32* %17, align 8
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %23, i64 %25
  %27 = select i1 %22, %"struct.WTF::KeyValuePair"* %26, %"struct.WTF::KeyValuePair"* %21
  %28 = icmp eq %"struct.WTF::KeyValuePair"* %26, %27
  br i1 %28, label %52, label %29

29:                                               ; preds = %19
  tail call void @_ZN3WTF12KeyValuePairIN5blink12FontCacheKeyENS_7HashMapIjNSt3__110unique_ptrINS1_16FontPlatformDataENS4_14default_deleteIS6_EEEENS_7IntHashIjEENS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIS9_EENS_18PartitionAllocatorEEEED2Ev(%"struct.WTF::KeyValuePair"* %27) #17
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %27, i64 0, i32 0, i32 0, i32 0
  store i32 0, i32* %30, align 8
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %27, i64 0, i32 0, i32 0, i32 1
  %32 = bitcast %"class.WTF::AtomicString"* %31 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 40, i1 false) #17
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %27, i64 0, i32 0, i32 1
  store i32 -1, i32* %33, align 8
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %27, i64 0, i32 0, i32 3
  store float 0x47EFFFFFE0000000, float* %34, align 8
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %27, i64 0, i32 0, i32 5, i32 0
  store %"class.blink::FontVariationSettings"* null, %"class.blink::FontVariationSettings"** %35, align 8
  %36 = load i32, i32* %18, align 8
  %37 = add i32 %36, 1
  %38 = and i32 %37, 2147483647
  %39 = and i32 %36, -2147483648
  %40 = or i32 %38, %39
  store i32 %40, i32* %18, align 8
  %41 = load i32, i32* %3, align 4
  %42 = add i32 %41, -1
  store i32 %42, i32* %3, align 4
  %43 = mul i32 %42, 6
  %44 = load i32, i32* %17, align 8
  %45 = icmp ult i32 %43, %44
  %46 = icmp ugt i32 %44, 8
  %47 = and i1 %45, %46
  br i1 %47, label %48, label %52

48:                                               ; preds = %29
  %49 = lshr i32 %44, 1
  %50 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_NS_7HashMapIjNSt3__110unique_ptrINS1_16FontPlatformDataENS5_14default_deleteIS7_EEEENS_7IntHashIjEENS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsISA_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINSF_IS2_EENSF_ISI_EEEESN_SH_E13AllocateTableEj(i32 %49) #17
  %51 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_NS_7HashMapIjNSt3__110unique_ptrINS1_16FontPlatformDataENS5_14default_deleteIS7_EEEENS_7IntHashIjEENS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsISA_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINSF_IS2_EENSF_ISI_EEEESN_SH_E8RehashToEPSJ_jSR_(%"class.WTF::HashTable.174"* %15, %"struct.WTF::KeyValuePair"* %50, i32 %49, %"struct.WTF::KeyValuePair"* null) #17
  br label %52

52:                                               ; preds = %48, %29, %19
  %53 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %20, i64 1
  %54 = icmp eq %"struct.blink::FontCacheKey"* %53, %14
  br i1 %54, label %55, label %19

55:                                               ; preds = %52, %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9FontCache28PurgeFallbackListShaperCacheEv(%"class.blink::FontCache"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::TimeTicks", align 8
  %3 = load atomic i64, i64* @_ZZN5blink9FontCache28PurgeFallbackListShaperCacheEvE28trace_event_unique_atomic386 monotonic, align 8
  %4 = inttoptr i64 %3 to i8*
  %5 = icmp eq i64 %3, 0
  br i1 %5, label %6, label %9, !prof !5

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN4base11trace_event8TraceLog23GetCategoryGroupEnabledEPKc(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0)) #17
  %8 = ptrtoint i8* %7 to i64
  store atomic volatile i64 %8, i64* @_ZZN5blink9FontCache28PurgeFallbackListShaperCacheEvE28trace_event_unique_atomic386 monotonic, align 8
  br label %9

9:                                                ; preds = %6, %1
  %10 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %11 = load i8, i8* %10, align 1
  %12 = and i8 %11, 25
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %20, label %14, !prof !6

14:                                               ; preds = %9
  %15 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #17
  %16 = bitcast %"class.base::TimeTicks"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #17
  %17 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 0, i32 0, i32 0
  %18 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #17
  store i64 %18, i64* %17, align 8
  %19 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* %10, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %15, %"class.base::TimeTicks"* nonnull dereferenceable(8) %2, %"class.base::trace_event::TraceArguments"* null, i32 0) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #17
  br label %20

20:                                               ; preds = %9, %14
  %21 = phi i8* [ null, %9 ], [ %10, %14 ]
  %22 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %9 ], [ getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5, i64 0, i64 0), %14 ]
  %23 = phi i64 [ -6148914691236517206, %9 ], [ %19, %14 ]
  %24 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %0, i64 0, i32 9
  %25 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %0, i64 0, i32 9, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::HashMap.212", %"class.WTF::HashMap.212"* %24, i64 0, i32 0, i32 0
  %29 = load %"struct.WTF::KeyValuePair.216"*, %"struct.WTF::KeyValuePair.216"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %0, i64 0, i32 9, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %29, i64 %32
  br i1 %27, label %116, label %34

34:                                               ; preds = %20
  %35 = icmp eq i32 %31, 0
  br i1 %35, label %67, label %36

36:                                               ; preds = %34, %64
  %37 = phi %"struct.WTF::KeyValuePair.216"* [ %65, %64 ], [ %29, %34 ]
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %37, i64 0, i32 0, i32 1
  %39 = load i32, i32* %38, align 8
  switch i32 %39, label %67 [
    i32 0, label %40
    i32 1, label %64
  ]

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %37, i64 0, i32 0, i32 2
  %42 = load float, float* %41, align 4
  %43 = fcmp oeq float %42, 0.000000e+00
  br i1 %43, label %44, label %67

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %37, i64 0, i32 0, i32 3
  %46 = load float, float* %45, align 8
  %47 = fcmp oeq float %46, 0.000000e+00
  br i1 %47, label %48, label %67

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %37, i64 0, i32 0, i32 4
  %50 = load float, float* %49, align 4
  %51 = fcmp oeq float %50, 0.000000e+00
  br i1 %51, label %52, label %67

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %37, i64 0, i32 0, i32 5
  %54 = load i32, i32* %53, align 8
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %67

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %37, i64 0, i32 0, i32 6
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %67

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %67

64:                                               ; preds = %60, %36
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %37, i64 1
  %66 = icmp eq %"struct.WTF::KeyValuePair.216"* %65, %33
  br i1 %66, label %116, label %36

67:                                               ; preds = %36, %40, %44, %48, %52, %56, %60, %34
  %68 = phi %"struct.WTF::KeyValuePair.216"* [ %29, %34 ], [ %37, %60 ], [ %37, %56 ], [ %37, %52 ], [ %37, %48 ], [ %37, %44 ], [ %37, %40 ], [ %37, %36 ]
  %69 = icmp eq %"struct.WTF::KeyValuePair.216"* %68, %33
  br i1 %69, label %116, label %70

70:                                               ; preds = %67, %114
  %71 = phi i32 [ %80, %114 ], [ 0, %67 ]
  %72 = phi %"struct.WTF::KeyValuePair.216"* [ %84, %114 ], [ %68, %67 ]
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %72, i64 0, i32 1, i32 0, i32 0, i32 0
  %74 = load %"class.blink::ShapeCache"*, %"class.blink::ShapeCache"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::ShapeCache", %"class.blink::ShapeCache"* %74, i64 0, i32 0, i32 0, i32 2
  %76 = load i32, i32* %75, align 4
  %77 = getelementptr inbounds %"class.blink::ShapeCache", %"class.blink::ShapeCache"* %74, i64 0, i32 1, i32 0, i32 2
  %78 = load i32, i32* %77, align 4
  %79 = add i32 %76, %71
  %80 = add i32 %79, %78
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %72, i64 1
  %82 = icmp eq %"struct.WTF::KeyValuePair.216"* %81, %33
  br i1 %82, label %116, label %83

83:                                               ; preds = %70, %111
  %84 = phi %"struct.WTF::KeyValuePair.216"* [ %112, %111 ], [ %81, %70 ]
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %84, i64 0, i32 0, i32 1
  %86 = load i32, i32* %85, align 8
  switch i32 %86, label %114 [
    i32 0, label %87
    i32 1, label %111
  ]

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %84, i64 0, i32 0, i32 2
  %89 = load float, float* %88, align 4
  %90 = fcmp oeq float %89, 0.000000e+00
  br i1 %90, label %91, label %114

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %84, i64 0, i32 0, i32 3
  %93 = load float, float* %92, align 8
  %94 = fcmp oeq float %93, 0.000000e+00
  br i1 %94, label %95, label %114

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %84, i64 0, i32 0, i32 4
  %97 = load float, float* %96, align 4
  %98 = fcmp oeq float %97, 0.000000e+00
  br i1 %98, label %99, label %114

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %84, i64 0, i32 0, i32 5
  %101 = load i32, i32* %100, align 8
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %114

103:                                              ; preds = %99
  %104 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %84, i64 0, i32 0, i32 6
  %105 = load i32, i32* %104, align 4
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %114

107:                                              ; preds = %103
  %108 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %84, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %109 = load i32, i32* %108, align 4
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %114

111:                                              ; preds = %107, %83
  %112 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %84, i64 1
  %113 = icmp eq %"struct.WTF::KeyValuePair.216"* %112, %33
  br i1 %113, label %116, label %83

114:                                              ; preds = %83, %87, %91, %95, %99, %103, %107
  %115 = icmp eq %"struct.WTF::KeyValuePair.216"* %84, %33
  br i1 %115, label %116, label %70

116:                                              ; preds = %64, %70, %114, %111, %20, %67
  %117 = phi i32 [ 0, %67 ], [ 0, %20 ], [ %80, %111 ], [ %80, %114 ], [ %80, %70 ], [ 0, %64 ]
  %118 = icmp eq %"struct.WTF::KeyValuePair.216"* %29, null
  br i1 %118, label %134, label %119

119:                                              ; preds = %116
  %120 = icmp eq i32 %31, 0
  br i1 %120, label %131, label %121

121:                                              ; preds = %119, %128
  %122 = phi i64 [ %129, %128 ], [ 0, %119 ]
  %123 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %29, i64 %122, i32 0, i32 1
  %124 = load i32, i32* %123, align 8
  %125 = icmp eq i32 %124, 1
  br i1 %125, label %128, label %126

126:                                              ; preds = %121
  %127 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %29, i64 %122
  call void @_ZN3WTF12KeyValuePairIN5blink24FallbackListCompositeKeyENSt3__110unique_ptrINS1_10ShapeCacheENS3_14default_deleteIS5_EEEEED2Ev(%"struct.WTF::KeyValuePair.216"* %127) #17
  br label %128

128:                                              ; preds = %126, %121
  %129 = add nuw nsw i64 %122, 1
  %130 = icmp eq i64 %129, %32
  br i1 %130, label %131, label %121

131:                                              ; preds = %128, %119
  %132 = bitcast %"struct.WTF::KeyValuePair.216"* %29 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %132) #17
  %133 = bitcast %"class.WTF::HashMap.212"* %24 to i64*
  store atomic i64 0, i64* %133 monotonic, align 8
  store i32 0, i32* %30, align 8
  store i32 0, i32* %25, align 4
  br label %134

134:                                              ; preds = %116, %131
  %135 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink9FontCache28PurgeFallbackListShaperCacheEvE23s_shape_cache_histogram to i8*) acquire, align 8
  %136 = icmp eq i8 %135, 0
  br i1 %136, label %137, label %141, !prof !8

137:                                              ; preds = %134
  %138 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink9FontCache28PurgeFallbackListShaperCacheEvE23s_shape_cache_histogram) #17
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %141, label %140

140:                                              ; preds = %137
  call void @_ZN5blink20CustomCountHistogramC1EPKciii(%"class.blink::CustomCountHistogram"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink9FontCache28PurgeFallbackListShaperCacheEvE23s_shape_cache_histogram to %"class.blink::CustomCountHistogram"*), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.23, i64 0, i64 0), i32 1, i32 1000000, i32 50) #17
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink9FontCache28PurgeFallbackListShaperCacheEvE23s_shape_cache_histogram) #17
  br label %141

141:                                              ; preds = %137, %140, %134
  call void @_ZN5blink20CustomCountHistogram5CountEi(%"class.blink::CustomCountHistogram"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink9FontCache28PurgeFallbackListShaperCacheEvE23s_shape_cache_histogram to %"class.blink::CustomCountHistogram"*), i32 %117) #17
  %142 = icmp eq i8* %21, null
  br i1 %142, label %147, label %143

143:                                              ; preds = %141
  %144 = load i8, i8* %21, align 1
  %145 = icmp eq i8 %144, 0
  br i1 %145, label %147, label %146

146:                                              ; preds = %143
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %21, i8* %22, i64 %23) #17
  br label %147

147:                                              ; preds = %141, %143, %146
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #5

declare void @_ZN5blink20CustomCountHistogram5CountEi(%"class.blink::CustomCountHistogram"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9FontCache5PurgeENS_13PurgeSeverityE(%"class.blink::FontCache"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %10

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %0, i64 0, i32 10
  %8 = tail call zeroext i1 @_ZN5blink13FontDataCache5PurgeENS_13PurgeSeverityE(%"class.blink::FontDataCache"* %7, i32 %1) #17
  br i1 %8, label %9, label %10

9:                                                ; preds = %6
  tail call void @_ZN5blink9FontCache26PurgePlatformFontDataCacheEv(%"class.blink::FontCache"* %0)
  tail call void @_ZN5blink9FontCache28PurgeFallbackListShaperCacheEv(%"class.blink::FontCache"* %0)
  br label %10

10:                                               ; preds = %2, %6, %9
  ret void
}

declare zeroext i1 @_ZN5blink13FontDataCache5PurgeENS_13PurgeSeverityE(%"class.blink::FontDataCache"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9FontCache9AddClientEPNS_15FontCacheClientE(%"class.blink::FontCache"*, %"class.blink::FontCacheClient"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::FontCacheClient"*, align 8
  %4 = alloca %"class.logging::CheckError", align 8
  store %"class.blink::FontCacheClient"* %1, %"class.blink::FontCacheClient"** %3, align 8
  %5 = icmp eq %"class.blink::FontCacheClient"* %1, null
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #17
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.6, i64 0, i64 0), i32 418, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i64 0, i64 0)) #17
  %8 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #17
  br label %9

9:                                                ; preds = %2, %6
  %10 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %0, i64 0, i32 7, i32 0
  %11 = getelementptr inbounds %"class.blink::PersistentBase", %"class.blink::PersistentBase"* %10, i64 0, i32 0
  %12 = load %"class.blink::HeapHashSet"*, %"class.blink::HeapHashSet"** %11, align 8
  %13 = icmp eq %"class.blink::HeapHashSet"* %12, null
  br i1 %13, label %14, label %22

14:                                               ; preds = %9
  %15 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_11HeapHashSetINS_10WeakMemberINS_15FontCacheClientEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEEEPhm(i64 24) #17
  %16 = bitcast i8* %15 to %"class.blink::HeapHashSet"*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 20, i1 false) #17
  %17 = getelementptr inbounds i8, i8* %15, i64 -4
  %18 = bitcast i8* %17 to i16*
  %19 = load atomic i16, i16* %18 monotonic, align 2
  %20 = or i16 %19, 1
  store atomic i16 %20, i16* %18 release, align 2
  call void @_ZN5blink14PersistentBaseINS_11HeapHashSetINS_10WeakMemberINS_15FontCacheClientEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPSA_(%"class.blink::PersistentBase"* %10, %"class.blink::HeapHashSet"* %16) #17
  %21 = load %"class.blink::HeapHashSet"*, %"class.blink::HeapHashSet"** %11, align 8
  br label %22

22:                                               ; preds = %9, %14
  %23 = phi %"class.blink::HeapHashSet"* [ %12, %9 ], [ %21, %14 ]
  %24 = getelementptr inbounds %"class.blink::HeapHashSet", %"class.blink::HeapHashSet"* %23, i64 0, i32 0, i32 0
  %25 = call { %"class.blink::WeakMember"*, i8 } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_15FontCacheClientEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable"* %24, %"class.blink::FontCacheClient"** nonnull dereferenceable(8) %3, %"class.blink::FontCacheClient"** nonnull dereferenceable(8) %3) #17
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i16 @_ZN5blink9FontCache10GenerationEv(%"class.blink::FontCache"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %0, i64 0, i32 4
  %3 = load i16, i16* %2, align 8
  ret i16 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9FontCache10InvalidateEv(%"class.blink::FontCache"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::TimeTicks", align 8
  %3 = load atomic i64, i64* @_ZZN5blink9FontCache10InvalidateEvE28trace_event_unique_atomic433 monotonic, align 8
  %4 = inttoptr i64 %3 to i8*
  %5 = icmp eq i64 %3, 0
  br i1 %5, label %6, label %9, !prof !5

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN4base11trace_event8TraceLog23GetCategoryGroupEnabledEPKc(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0)) #17
  %8 = ptrtoint i8* %7 to i64
  store atomic volatile i64 %8, i64* @_ZZN5blink9FontCache10InvalidateEvE28trace_event_unique_atomic433 monotonic, align 8
  br label %9

9:                                                ; preds = %6, %1
  %10 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %11 = load i8, i8* %10, align 1
  %12 = and i8 %11, 25
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %20, label %14, !prof !6

14:                                               ; preds = %9
  %15 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #17
  %16 = bitcast %"class.base::TimeTicks"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #17
  %17 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 0, i32 0, i32 0
  %18 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #17
  store i64 %18, i64* %17, align 8
  %19 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* %10, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.8, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %15, %"class.base::TimeTicks"* nonnull dereferenceable(8) %2, %"class.base::trace_event::TraceArguments"* null, i32 0) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #17
  br label %20

20:                                               ; preds = %9, %14
  %21 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %9 ], [ getelementptr inbounds ([22 x i8], [22 x i8]* @.str.8, i64 0, i64 0), %14 ]
  %22 = phi i8* [ null, %9 ], [ %10, %14 ]
  %23 = phi i64 [ -6148914691236517206, %9 ], [ %19, %14 ]
  %24 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %0, i64 0, i32 8
  %25 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %24, i64 0, i32 0, i32 0
  %26 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %25, align 8
  %27 = icmp eq %"struct.WTF::KeyValuePair"* %26, null
  br i1 %27, label %52, label %28

28:                                               ; preds = %20
  %29 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %0, i64 0, i32 8, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %48, label %32

32:                                               ; preds = %28
  %33 = zext i32 %30 to i64
  br label %34

34:                                               ; preds = %45, %32
  %35 = phi i64 [ 0, %32 ], [ %46, %45 ]
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %26, i64 %35
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %26, i64 %35, i32 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = icmp eq i32 %38, -1
  br i1 %39, label %40, label %44

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %26, i64 %35, i32 0, i32 3
  %42 = load float, float* %41, align 8
  %43 = fcmp oeq float %42, 0x47EFFFFFE0000000
  br i1 %43, label %45, label %44

44:                                               ; preds = %40, %34
  call void @_ZN3WTF12KeyValuePairIN5blink12FontCacheKeyENS_7HashMapIjNSt3__110unique_ptrINS1_16FontPlatformDataENS4_14default_deleteIS6_EEEENS_7IntHashIjEENS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIS9_EENS_18PartitionAllocatorEEEED2Ev(%"struct.WTF::KeyValuePair"* %36) #17
  br label %45

45:                                               ; preds = %44, %40
  %46 = add nuw nsw i64 %35, 1
  %47 = icmp eq i64 %46, %33
  br i1 %47, label %48, label %34

48:                                               ; preds = %45, %28
  %49 = bitcast %"struct.WTF::KeyValuePair"* %26 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %49) #17
  %50 = bitcast %"class.WTF::HashMap"* %24 to i64*
  store atomic i64 0, i64* %50 monotonic, align 8
  store i32 0, i32* %29, align 8
  %51 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %0, i64 0, i32 8, i32 0, i32 2
  store i32 0, i32* %51, align 4
  br label %52

52:                                               ; preds = %20, %48
  %53 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %0, i64 0, i32 4
  %54 = load i16, i16* %53, align 8
  %55 = add i16 %54, 1
  store i16 %55, i16* %53, align 8
  %56 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %0, i64 0, i32 7, i32 0, i32 0
  %57 = load %"class.blink::HeapHashSet"*, %"class.blink::HeapHashSet"** %56, align 8
  %58 = icmp eq %"class.blink::HeapHashSet"* %57, null
  br i1 %58, label %100, label %59

59:                                               ; preds = %52
  %60 = getelementptr inbounds %"class.blink::HeapHashSet", %"class.blink::HeapHashSet"* %57, i64 0, i32 0, i32 0, i32 2
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %61, 0
  %63 = getelementptr inbounds %"class.blink::HeapHashSet", %"class.blink::HeapHashSet"* %57, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::WeakMember"*, %"class.blink::WeakMember"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::HeapHashSet", %"class.blink::HeapHashSet"* %57, i64 0, i32 0, i32 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %64, i64 %67
  br i1 %62, label %100, label %69

69:                                               ; preds = %59
  %70 = icmp eq i32 %66, 0
  br i1 %70, label %78, label %71

71:                                               ; preds = %69, %75
  %72 = phi %"class.blink::WeakMember"* [ %76, %75 ], [ %64, %69 ]
  %73 = bitcast %"class.blink::WeakMember"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  switch i64 %74, label %78 [
    i64 -1, label %75
    i64 0, label %75
  ]

75:                                               ; preds = %71, %71
  %76 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %72, i64 1
  %77 = icmp eq %"class.blink::WeakMember"* %76, %68
  br i1 %77, label %100, label %71

78:                                               ; preds = %71, %69
  %79 = phi %"class.blink::WeakMember"* [ %64, %69 ], [ %72, %71 ]
  %80 = icmp eq %"class.blink::WeakMember"* %79, %68
  br i1 %80, label %100, label %81

81:                                               ; preds = %78, %98
  %82 = phi %"class.blink::WeakMember"* [ %92, %98 ], [ %79, %78 ]
  %83 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %82, i64 0, i32 0, i32 0
  %84 = load %"class.blink::FontCacheClient"*, %"class.blink::FontCacheClient"** %83, align 8
  %85 = bitcast %"class.blink::FontCacheClient"* %84 to void (%"class.blink::FontCacheClient"*)***
  %86 = load void (%"class.blink::FontCacheClient"*)**, void (%"class.blink::FontCacheClient"*)*** %85, align 8
  %87 = getelementptr inbounds void (%"class.blink::FontCacheClient"*)*, void (%"class.blink::FontCacheClient"*)** %86, i64 2
  %88 = load void (%"class.blink::FontCacheClient"*)*, void (%"class.blink::FontCacheClient"*)** %87, align 8
  call void %88(%"class.blink::FontCacheClient"* %84) #17
  %89 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %82, i64 1
  %90 = icmp eq %"class.blink::WeakMember"* %89, %68
  br i1 %90, label %100, label %91

91:                                               ; preds = %81, %95
  %92 = phi %"class.blink::WeakMember"* [ %96, %95 ], [ %89, %81 ]
  %93 = bitcast %"class.blink::WeakMember"* %92 to i64*
  %94 = load i64, i64* %93, align 8
  switch i64 %94, label %98 [
    i64 -1, label %95
    i64 0, label %95
  ]

95:                                               ; preds = %91, %91
  %96 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %92, i64 1
  %97 = icmp eq %"class.blink::WeakMember"* %96, %68
  br i1 %97, label %100, label %91

98:                                               ; preds = %91
  %99 = icmp eq %"class.blink::WeakMember"* %92, %68
  br i1 %99, label %100, label %81

100:                                              ; preds = %75, %81, %98, %95, %59, %78, %52
  %101 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %0, i64 0, i32 2
  %102 = load i32, i32* %101, align 4
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %108

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %0, i64 0, i32 10
  %106 = call zeroext i1 @_ZN5blink13FontDataCache5PurgeENS_13PurgeSeverityE(%"class.blink::FontDataCache"* %105, i32 1) #17
  br i1 %106, label %107, label %108

107:                                              ; preds = %104
  call void @_ZN5blink9FontCache26PurgePlatformFontDataCacheEv(%"class.blink::FontCache"* %0) #17
  call void @_ZN5blink9FontCache28PurgeFallbackListShaperCacheEv(%"class.blink::FontCache"* %0) #17
  br label %108

108:                                              ; preds = %100, %104, %107
  %109 = icmp eq i8* %22, null
  br i1 %109, label %114, label %110

110:                                              ; preds = %108
  %111 = load i8, i8* %22, align 1
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %114, label %113

113:                                              ; preds = %110
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %22, i8* %21, i64 %23) #17
  br label %114

114:                                              ; preds = %108, %110, %113
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9FontCache17CrashWithFontInfoEPKNS_15FontDescriptionE(%"class.blink::FontDescription"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.SkFontMgr*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i8, align 1
  %5 = alloca %class.SkFontMgr*, align 8
  %6 = alloca %class.SkFontMgr*, align 8
  %7 = alloca %class.sk_sp, align 8
  %8 = alloca %"class.blink::FontDescription", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = bitcast %class.SkFontMgr** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #17
  store %class.SkFontMgr* null, %class.SkFontMgr** %2, align 8
  %11 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #17
  store i32 -2147483648, i32* %3, align 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #17
  store i8 0, i8* %4, align 1
  %12 = tail call %"class.blink::FontGlobalContext"* @_ZN5blink17FontGlobalContext3GetENS_14CreateIfNeededE(i32 0) #17
  %13 = icmp eq %"class.blink::FontGlobalContext"* %12, null
  br i1 %13, label %23, label %14

14:                                               ; preds = %1
  %15 = tail call %"class.blink::FontGlobalContext"* @_ZN5blink17FontGlobalContext3GetENS_14CreateIfNeededE(i32 1) #17
  %16 = icmp eq %"class.blink::FontGlobalContext"* %15, null
  br i1 %16, label %23, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.blink::FontGlobalContext", %"class.blink::FontGlobalContext"* %15, i64 0, i32 0, i32 3, i32 0
  %19 = load %class.SkFontMgr*, %class.SkFontMgr** %18, align 8
  store %class.SkFontMgr* %19, %class.SkFontMgr** %2, align 8
  %20 = icmp eq %class.SkFontMgr* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %17
  %22 = tail call i32 @_ZNK9SkFontMgr13countFamiliesEv(%class.SkFontMgr* nonnull %19) #17
  store i32 %22, i32* %3, align 4
  br label %23

23:                                               ; preds = %17, %14, %1, %21
  %24 = bitcast %class.SkFontMgr** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #17
  %25 = load i64, i64* bitcast (%class.SkFontMgr** @_ZN5blink9FontCache20static_font_manager_E to i64*), align 8
  %26 = bitcast %class.SkFontMgr** %5 to i64*
  store i64 %25, i64* %26, align 8
  %27 = bitcast %class.SkFontMgr** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #17
  store %class.SkFontMgr* inttoptr (i64 -6148914691236517206 to %class.SkFontMgr*), %class.SkFontMgr** %6, align 8
  %28 = bitcast %class.sk_sp* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #17
  call void @_ZN9SkFontMgr10RefDefaultEv(%class.sk_sp* nonnull sret %7) #17
  %29 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %7, i64 0, i32 0
  %30 = load %class.SkFontMgr*, %class.SkFontMgr** %29, align 8
  %31 = icmp eq %class.SkFontMgr* %30, null
  br i1 %31, label %42, label %32

32:                                               ; preds = %23
  %33 = getelementptr inbounds %class.SkFontMgr, %class.SkFontMgr* %30, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 -1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %42

36:                                               ; preds = %32
  %37 = bitcast %class.SkFontMgr* %30 to %class.SkRefCntBase*
  %38 = bitcast %class.SkFontMgr* %30 to void (%class.SkRefCntBase*)***
  %39 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %38, align 8
  %40 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, i64 2
  %41 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %40, align 8
  call void %41(%class.SkRefCntBase* nonnull %37) #17
  br label %42

42:                                               ; preds = %23, %32, %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #17
  store %class.SkFontMgr* %30, %class.SkFontMgr** %6, align 8
  call void @_ZN4base5debug5AliasEPKv(i8* nonnull %10) #17
  call void @_ZN4base5debug5AliasEPKv(i8* nonnull %24) #17
  call void @_ZN4base5debug5AliasEPKv(i8* nonnull %27) #17
  %43 = bitcast %"class.blink::FontDescription"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %43) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %43, i8* align 8 bitcast (%"class.blink::FontDescription"* @__const._ZN5blink9FontCache17CrashWithFontInfoEPKNS_15FontDescriptionE.font_description_copy to i8*), i64 80, i1 false)
  call void @_ZN5blink15FontDescriptionC1ERKS0_(%"class.blink::FontDescription"* nonnull %8, %"class.blink::FontDescription"* dereferenceable(80) %0) #17
  call void @_ZN4base5debug5AliasEPKv(i8* nonnull %43) #17
  call void @_ZN4base5debug5AliasEPKv(i8* nonnull %4) #17
  call void @_ZN4base5debug5AliasEPKv(i8* nonnull %11) #17
  %44 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #17
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.6, i64 0, i64 0), i32 475, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i64 0, i64 0)) #17
  %45 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #17
  call void @_ZN5blink15FontDescriptionD2Ev(%"class.blink::FontDescription"* nonnull %8) #17
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %43) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #17
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #17
  ret void
}

declare %"class.blink::FontGlobalContext"* @_ZN5blink17FontGlobalContext3GetENS_14CreateIfNeededE(i32) local_unnamed_addr #1

declare i32 @_ZNK9SkFontMgr13countFamiliesEv(%class.SkFontMgr*) local_unnamed_addr #1

declare void @_ZN9SkFontMgr10RefDefaultEv(%class.sk_sp* sret) local_unnamed_addr #1

declare void @_ZN4base5debug5AliasEPKv(i8*) local_unnamed_addr #1

declare void @_ZN5blink15FontDescriptionC1ERKS0_(%"class.blink::FontDescription"*, %"class.blink::FontDescription"* dereferenceable(80)) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15FontDescriptionD2Ev(%"class.blink::FontDescription"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 3, i32 0
  %3 = load %"class.blink::LayoutLocale"*, %"class.blink::LayoutLocale"** %2, align 8
  %4 = icmp eq %"class.blink::LayoutLocale"* %3, null
  br i1 %4, label %55, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #17
  %7 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %55

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %3, i64 0, i32 5, i32 0
  %12 = load %"class.blink::Hyphenation"*, %"class.blink::Hyphenation"** %11, align 8
  %13 = icmp eq %"class.blink::Hyphenation"* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::Hyphenation", %"class.blink::Hyphenation"* %12, i64 0, i32 1, i32 0
  %16 = getelementptr inbounds %"class.base::RefCounted.319", %"class.base::RefCounted.319"* %15, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %16) #17
  %17 = getelementptr inbounds %"class.base::RefCounted.319", %"class.base::RefCounted.319"* %15, i64 0, i32 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %27

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.base::RefCounted.319", %"class.base::RefCounted.319"* %15, i64 -2
  %22 = bitcast %"class.base::RefCounted.319"* %21 to %"class.blink::Hyphenation"*
  %23 = bitcast %"class.base::RefCounted.319"* %21 to void (%"class.blink::Hyphenation"*)***
  %24 = load void (%"class.blink::Hyphenation"*)**, void (%"class.blink::Hyphenation"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.blink::Hyphenation"*)*, void (%"class.blink::Hyphenation"*)** %24, i64 1
  %26 = load void (%"class.blink::Hyphenation"*)*, void (%"class.blink::Hyphenation"*)** %25, align 8
  tail call void %26(%"class.blink::Hyphenation"* nonnull %22) #17
  br label %27

27:                                               ; preds = %20, %14, %10
  %28 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %3, i64 0, i32 3
  %29 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  tail call void @_ZdlPv(i8* %35) #18
  br label %36

36:                                               ; preds = %33, %27
  %37 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #17
  br label %53

53:                                               ; preds = %36, %49, %52
  %54 = bitcast %"class.blink::LayoutLocale"* %3 to i8*
  tail call void @free(i8* %54) #17
  br label %55

55:                                               ; preds = %1, %5, %53
  %56 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 2, i32 0
  %57 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %56, align 8
  %58 = icmp eq %"class.blink::FontVariationSettings"* %57, null
  br i1 %58, label %79, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %57, i64 0, i32 1, i32 0
  %61 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %60, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %61) #17
  %62 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %60, i64 0, i32 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %79

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %60, i64 -4
  %67 = bitcast %"class.base::RefCounted"* %66 to %"class.blink::FontTagValuePair"**
  %68 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %67, align 8
  %69 = icmp eq %"class.blink::FontTagValuePair"* %68, null
  %70 = bitcast %"class.blink::FontTagValuePair"* %68 to i8*
  br i1 %69, label %77, label %71, !prof !6

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %60, i64 -1, i32 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %76, label %75, !prof !5

75:                                               ; preds = %71
  store i32 0, i32* %72, align 4
  br label %76

76:                                               ; preds = %75, %71
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %70) #17
  br label %77

77:                                               ; preds = %76, %65
  %78 = bitcast %"class.base::RefCounted"* %66 to i8*
  tail call void @free(i8* %78) #17
  br label %79

79:                                               ; preds = %55, %59, %77
  %80 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 1, i32 0
  %81 = load %"class.blink::FontFeatureSettings"*, %"class.blink::FontFeatureSettings"** %80, align 8
  %82 = icmp eq %"class.blink::FontFeatureSettings"* %81, null
  br i1 %82, label %103, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.blink::FontFeatureSettings", %"class.blink::FontFeatureSettings"* %81, i64 0, i32 1, i32 0
  %85 = getelementptr inbounds %"class.base::RefCounted.313", %"class.base::RefCounted.313"* %84, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %85) #17
  %86 = getelementptr inbounds %"class.base::RefCounted.313", %"class.base::RefCounted.313"* %84, i64 0, i32 0, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %103

89:                                               ; preds = %83
  %90 = getelementptr inbounds %"class.base::RefCounted.313", %"class.base::RefCounted.313"* %84, i64 -4
  %91 = bitcast %"class.base::RefCounted.313"* %90 to %"class.blink::FontTagValuePair.309"**
  %92 = load %"class.blink::FontTagValuePair.309"*, %"class.blink::FontTagValuePair.309"** %91, align 8
  %93 = icmp eq %"class.blink::FontTagValuePair.309"* %92, null
  %94 = bitcast %"class.blink::FontTagValuePair.309"* %92 to i8*
  br i1 %93, label %101, label %95, !prof !6

95:                                               ; preds = %89
  %96 = getelementptr inbounds %"class.base::RefCounted.313", %"class.base::RefCounted.313"* %84, i64 -1, i32 0, i32 0
  %97 = load i32, i32* %96, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %100, label %99, !prof !5

99:                                               ; preds = %95
  store i32 0, i32* %96, align 4
  br label %100

100:                                              ; preds = %99, %95
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %94) #17
  br label %101

101:                                              ; preds = %100, %89
  %102 = bitcast %"class.base::RefCounted.313"* %90 to i8*
  tail call void @free(i8* %102) #17
  br label %103

103:                                              ; preds = %79, %83, %101
  %104 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 0
  tail call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %104) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9FontCache25DumpFontPlatformDataCacheEPN4base11trace_event17ProcessMemoryDumpE(%"class.blink::FontCache"* nocapture readonly, %"class.base::trace_event::ProcessMemoryDump"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #17
  %6 = tail call i8* @_Znwm(i64 48) #18
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %6, i8** %7, align 8
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast i64* %8 to <2 x i64>*
  store <2 x i64> <i64 36, i64 -9223372036854775760>, <2 x i64>* %9, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %6, i8* align 1 getelementptr inbounds ([37 x i8], [37 x i8]* @.str.10, i64 0, i64 0), i64 36, i1 false) #17
  %10 = getelementptr inbounds i8, i8* %6, i64 36
  store i8 0, i8* %10, align 1
  %11 = call %"class.base::trace_event::MemoryAllocatorDump"* @_ZN4base11trace_event17ProcessMemoryDump19CreateAllocatorDumpERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.base::trace_event::ProcessMemoryDump"* %1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #17
  %12 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %2
  %17 = load i8*, i8** %7, align 8
  call void @_ZdlPv(i8* %17) #18
  br label %18

18:                                               ; preds = %2, %16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #17
  %19 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %0, i64 0, i32 8, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i64
  %22 = mul nuw nsw i64 %21, 72
  call void @_ZN4base11trace_event19MemoryAllocatorDump9AddScalarEPKcS3_m(%"class.base::trace_event::MemoryAllocatorDump"* %11, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0), i64 %22) #17
  %23 = getelementptr inbounds %"class.base::trace_event::MemoryAllocatorDump", %"class.base::trace_event::MemoryAllocatorDump"* %11, i64 0, i32 1
  %24 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #17
  %25 = load i8*, i8** @_ZN3WTF10Partitions24kAllocatedObjectPoolNameE, align 8
  %26 = call i64 @strlen(i8* %25) #17
  %27 = icmp ugt i64 %26, -17
  br i1 %27, label %28, label %30

28:                                               ; preds = %18
  %29 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %29) #19
  unreachable

30:                                               ; preds = %18
  %31 = icmp ult i64 %26, 23
  br i1 %31, label %41, label %32

32:                                               ; preds = %30
  %33 = add nuw i64 %26, 16
  %34 = and i64 %33, -16
  %35 = call i8* @_Znwm(i64 %34) #18
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %35, i8** %36, align 8
  %37 = or i64 %34, -9223372036854775808
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %37, i64* %38, align 8
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %26, i64* %39, align 8
  %40 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %46

41:                                               ; preds = %30
  %42 = trunc i64 %26 to i8
  %43 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  store i8 %42, i8* %44, align 1
  %45 = icmp eq i64 %26, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %41, %32
  %47 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %43, %41 ], [ %40, %32 ]
  %48 = phi i8* [ %24, %41 ], [ %35, %32 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %48, i8* align 1 %25, i64 %26, i1 false) #17
  br label %49

49:                                               ; preds = %41, %46
  %50 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %43, %41 ], [ %47, %46 ]
  %51 = phi i8* [ %24, %41 ], [ %48, %46 ]
  %52 = getelementptr inbounds i8, i8* %51, i64 %26
  store i8 0, i8* %52, align 1
  call void @_ZN4base11trace_event17ProcessMemoryDump16AddSuballocationERKNS0_23MemoryAllocatorDumpGuidERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"class.base::trace_event::ProcessMemoryDump"* %1, %"class.base::trace_event::MemoryAllocatorDumpGuid"* dereferenceable(8) %23, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #17
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  %54 = load i8, i8* %53, align 1
  %55 = icmp slt i8 %54, 0
  br i1 %55, label %56, label %59

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  call void @_ZdlPv(i8* %58) #18
  br label %59

59:                                               ; preds = %49, %56
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #17
  ret void
}

declare %"class.base::trace_event::MemoryAllocatorDump"* @_ZN4base11trace_event17ProcessMemoryDump19CreateAllocatorDumpERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.base::trace_event::ProcessMemoryDump"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN4base11trace_event19MemoryAllocatorDump9AddScalarEPKcS3_m(%"class.base::trace_event::MemoryAllocatorDump"*, i8*, i8*, i64) local_unnamed_addr #1

declare void @_ZN4base11trace_event17ProcessMemoryDump16AddSuballocationERKNS0_23MemoryAllocatorDumpGuidERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"class.base::trace_event::ProcessMemoryDump"*, %"class.base::trace_event::MemoryAllocatorDumpGuid"* dereferenceable(8), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9FontCache20DumpShapeResultCacheEPN4base11trace_event17ProcessMemoryDumpE(%"class.blink::FontCache"* nocapture readonly, %"class.base::trace_event::ProcessMemoryDump"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #17
  %6 = tail call i8* @_Znwm(i64 32) #18
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %6, i8** %7, align 8
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast i64* %8 to <2 x i64>*
  store <2 x i64> <i64 24, i64 -9223372036854775776>, <2 x i64>* %9, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %6, i8* align 1 getelementptr inbounds ([25 x i8], [25 x i8]* @.str.13, i64 0, i64 0), i64 24, i1 false) #17
  %10 = getelementptr inbounds i8, i8* %6, i64 24
  store i8 0, i8* %10, align 1
  %11 = call %"class.base::trace_event::MemoryAllocatorDump"* @_ZN4base11trace_event17ProcessMemoryDump19CreateAllocatorDumpERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.base::trace_event::ProcessMemoryDump"* %1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #17
  %12 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %2
  %17 = load i8*, i8** %7, align 8
  call void @_ZdlPv(i8* %17) #18
  br label %18

18:                                               ; preds = %2, %16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #17
  %19 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %0, i64 0, i32 9, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %0, i64 0, i32 9, i32 0, i32 0
  %23 = load %"struct.WTF::KeyValuePair.216"*, %"struct.WTF::KeyValuePair.216"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %0, i64 0, i32 9, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %23, i64 %26
  br i1 %21, label %111, label %28

28:                                               ; preds = %18
  %29 = icmp eq i32 %25, 0
  br i1 %29, label %61, label %30

30:                                               ; preds = %28, %58
  %31 = phi %"struct.WTF::KeyValuePair.216"* [ %59, %58 ], [ %23, %28 ]
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %31, i64 0, i32 0, i32 1
  %33 = load i32, i32* %32, align 8
  switch i32 %33, label %61 [
    i32 0, label %34
    i32 1, label %58
  ]

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %31, i64 0, i32 0, i32 2
  %36 = load float, float* %35, align 4
  %37 = fcmp oeq float %36, 0.000000e+00
  br i1 %37, label %38, label %61

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %31, i64 0, i32 0, i32 3
  %40 = load float, float* %39, align 8
  %41 = fcmp oeq float %40, 0.000000e+00
  br i1 %41, label %42, label %61

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %31, i64 0, i32 0, i32 4
  %44 = load float, float* %43, align 4
  %45 = fcmp oeq float %44, 0.000000e+00
  br i1 %45, label %46, label %61

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %31, i64 0, i32 0, i32 5
  %48 = load i32, i32* %47, align 8
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %61

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %31, i64 0, i32 0, i32 6
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %61

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %54, %30
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %31, i64 1
  %60 = icmp eq %"struct.WTF::KeyValuePair.216"* %59, %27
  br i1 %60, label %111, label %30

61:                                               ; preds = %30, %34, %38, %42, %46, %50, %54, %28
  %62 = phi %"struct.WTF::KeyValuePair.216"* [ %23, %28 ], [ %31, %54 ], [ %31, %50 ], [ %31, %46 ], [ %31, %42 ], [ %31, %38 ], [ %31, %34 ], [ %31, %30 ]
  %63 = icmp eq %"struct.WTF::KeyValuePair.216"* %62, %27
  br i1 %63, label %111, label %64

64:                                               ; preds = %61, %104
  %65 = phi i64 [ %70, %104 ], [ 0, %61 ]
  %66 = phi %"struct.WTF::KeyValuePair.216"* [ %105, %104 ], [ %62, %61 ]
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %66, i64 0, i32 1, i32 0, i32 0, i32 0
  %68 = load %"class.blink::ShapeCache"*, %"class.blink::ShapeCache"** %67, align 8
  %69 = call i64 @_ZNK5blink10ShapeCache8ByteSizeEv(%"class.blink::ShapeCache"* %68)
  %70 = add i64 %69, %65
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %66, i64 1
  %72 = icmp eq %"struct.WTF::KeyValuePair.216"* %71, %27
  br i1 %72, label %104, label %73

73:                                               ; preds = %64, %101
  %74 = phi %"struct.WTF::KeyValuePair.216"* [ %102, %101 ], [ %71, %64 ]
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %74, i64 0, i32 0, i32 1
  %76 = load i32, i32* %75, align 8
  switch i32 %76, label %104 [
    i32 0, label %77
    i32 1, label %101
  ]

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %74, i64 0, i32 0, i32 2
  %79 = load float, float* %78, align 4
  %80 = fcmp oeq float %79, 0.000000e+00
  br i1 %80, label %81, label %104

81:                                               ; preds = %77
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %74, i64 0, i32 0, i32 3
  %83 = load float, float* %82, align 8
  %84 = fcmp oeq float %83, 0.000000e+00
  br i1 %84, label %85, label %104

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %74, i64 0, i32 0, i32 4
  %87 = load float, float* %86, align 4
  %88 = fcmp oeq float %87, 0.000000e+00
  br i1 %88, label %89, label %104

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %74, i64 0, i32 0, i32 5
  %91 = load i32, i32* %90, align 8
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %104

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %74, i64 0, i32 0, i32 6
  %95 = load i32, i32* %94, align 4
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %104

97:                                               ; preds = %93
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %99 = load i32, i32* %98, align 4
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %104

101:                                              ; preds = %97, %73
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %74, i64 1
  %103 = icmp eq %"struct.WTF::KeyValuePair.216"* %102, %27
  br i1 %103, label %104, label %73

104:                                              ; preds = %73, %77, %81, %85, %89, %93, %97, %101, %64
  %105 = phi %"struct.WTF::KeyValuePair.216"* [ %27, %64 ], [ %74, %77 ], [ %74, %81 ], [ %74, %85 ], [ %74, %89 ], [ %74, %93 ], [ %74, %97 ], [ %27, %101 ], [ %74, %73 ]
  %106 = load %"struct.WTF::KeyValuePair.216"*, %"struct.WTF::KeyValuePair.216"** %22, align 8
  %107 = load i32, i32* %24, align 8
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %106, i64 %108
  %110 = icmp eq %"struct.WTF::KeyValuePair.216"* %105, %109
  br i1 %110, label %111, label %64

111:                                              ; preds = %58, %104, %18, %61
  %112 = phi i64 [ 0, %61 ], [ 0, %18 ], [ %70, %104 ], [ 0, %58 ]
  call void @_ZN4base11trace_event19MemoryAllocatorDump9AddScalarEPKcS3_m(%"class.base::trace_event::MemoryAllocatorDump"* %11, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0), i64 %112) #17
  %113 = getelementptr inbounds %"class.base::trace_event::MemoryAllocatorDump", %"class.base::trace_event::MemoryAllocatorDump"* %11, i64 0, i32 1
  %114 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %114) #17
  %115 = load i8*, i8** @_ZN3WTF10Partitions24kAllocatedObjectPoolNameE, align 8
  %116 = call i64 @strlen(i8* %115) #17
  %117 = icmp ugt i64 %116, -17
  br i1 %117, label %118, label %120

118:                                              ; preds = %111
  %119 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %119) #19
  unreachable

120:                                              ; preds = %111
  %121 = icmp ult i64 %116, 23
  br i1 %121, label %131, label %122

122:                                              ; preds = %120
  %123 = add nuw i64 %116, 16
  %124 = and i64 %123, -16
  %125 = call i8* @_Znwm(i64 %124) #18
  %126 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %125, i8** %126, align 8
  %127 = or i64 %124, -9223372036854775808
  %128 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %116, i64* %129, align 8
  %130 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %136

131:                                              ; preds = %120
  %132 = trunc i64 %116 to i8
  %133 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %134 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %133, i64 0, i32 1, i32 0
  store i8 %132, i8* %134, align 1
  %135 = icmp eq i64 %116, 0
  br i1 %135, label %139, label %136

136:                                              ; preds = %131, %122
  %137 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %133, %131 ], [ %130, %122 ]
  %138 = phi i8* [ %114, %131 ], [ %125, %122 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %138, i8* align 1 %115, i64 %116, i1 false) #17
  br label %139

139:                                              ; preds = %131, %136
  %140 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %133, %131 ], [ %137, %136 ]
  %141 = phi i8* [ %114, %131 ], [ %138, %136 ]
  %142 = getelementptr inbounds i8, i8* %141, i64 %116
  store i8 0, i8* %142, align 1
  call void @_ZN4base11trace_event17ProcessMemoryDump16AddSuballocationERKNS0_23MemoryAllocatorDumpGuidERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"class.base::trace_event::ProcessMemoryDump"* %1, %"class.base::trace_event::MemoryAllocatorDumpGuid"* dereferenceable(8) %113, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #17
  %143 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %140, i64 0, i32 1, i32 0
  %144 = load i8, i8* %143, align 1
  %145 = icmp slt i8 %144, 0
  br i1 %145, label %146, label %149

146:                                              ; preds = %139
  %147 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %148 = load i8*, i8** %147, align 8
  call void @_ZdlPv(i8* %148) #18
  br label %149

149:                                              ; preds = %139, %146
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %114) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink10ShapeCache8ByteSizeEv(%"class.blink::ShapeCache"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ShapeCache", %"class.blink::ShapeCache"* %0, i64 0, i32 0, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  %5 = getelementptr inbounds %"class.blink::ShapeCache", %"class.blink::ShapeCache"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair.229"*, %"struct.WTF::KeyValuePair.229"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ShapeCache", %"class.blink::ShapeCache"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"struct.WTF::KeyValuePair.229", %"struct.WTF::KeyValuePair.229"* %6, i64 %9
  br i1 %4, label %24, label %11

11:                                               ; preds = %1
  %12 = icmp eq i32 %8, 0
  br i1 %12, label %21, label %13

13:                                               ; preds = %11, %18
  %14 = phi %"struct.WTF::KeyValuePair.229"* [ %19, %18 ], [ %6, %11 ]
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair.229", %"struct.WTF::KeyValuePair.229"* %14, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp ugt i32 %16, -3
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair.229", %"struct.WTF::KeyValuePair.229"* %14, i64 1
  %20 = icmp eq %"struct.WTF::KeyValuePair.229"* %19, %10
  br i1 %20, label %24, label %13

21:                                               ; preds = %13, %11
  %22 = phi %"struct.WTF::KeyValuePair.229"* [ %6, %11 ], [ %14, %13 ]
  %23 = icmp eq %"struct.WTF::KeyValuePair.229"* %22, %10
  br i1 %23, label %24, label %50

24:                                               ; preds = %18, %68, %80, %77, %1, %21
  %25 = phi i64 [ 0, %21 ], [ 0, %1 ], [ %69, %77 ], [ %69, %80 ], [ %69, %68 ], [ 0, %18 ]
  %26 = getelementptr inbounds %"class.blink::ShapeCache", %"class.blink::ShapeCache"* %0, i64 0, i32 1, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  %29 = getelementptr inbounds %"class.blink::ShapeCache", %"class.blink::ShapeCache"* %0, i64 0, i32 1, i32 0, i32 0
  %30 = load %"struct.WTF::KeyValuePair.268"*, %"struct.WTF::KeyValuePair.268"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::ShapeCache", %"class.blink::ShapeCache"* %0, i64 0, i32 1, i32 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.268", %"struct.WTF::KeyValuePair.268"* %30, i64 %33
  br i1 %28, label %82, label %35

35:                                               ; preds = %24
  %36 = icmp eq i32 %32, 0
  br i1 %36, label %47, label %37

37:                                               ; preds = %35, %44
  %38 = phi %"struct.WTF::KeyValuePair.268"* [ %45, %44 ], [ %30, %35 ]
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.268", %"struct.WTF::KeyValuePair.268"* %38, i64 0, i32 0, i32 1
  %40 = load i16, i16* %39, align 4
  %41 = and i16 %40, 32766
  %42 = or i16 %41, 1
  %43 = icmp eq i16 %42, 17
  br i1 %43, label %44, label %47

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair.268", %"struct.WTF::KeyValuePair.268"* %38, i64 1
  %46 = icmp eq %"struct.WTF::KeyValuePair.268"* %45, %34
  br i1 %46, label %82, label %37

47:                                               ; preds = %37, %35
  %48 = phi %"struct.WTF::KeyValuePair.268"* [ %30, %35 ], [ %38, %37 ]
  %49 = icmp eq %"struct.WTF::KeyValuePair.268"* %48, %34
  br i1 %49, label %82, label %84

50:                                               ; preds = %21, %80
  %51 = phi i64 [ %69, %80 ], [ 0, %21 ]
  %52 = phi %"struct.WTF::KeyValuePair.229"* [ %73, %80 ], [ %22, %21 ]
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.229", %"struct.WTF::KeyValuePair.229"* %52, i64 0, i32 1, i32 0
  %54 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %53, align 8
  %55 = icmp eq %"class.blink::ShapeResult"* %54, null
  br i1 %55, label %56, label %59

56:                                               ; preds = %50
  %57 = tail call i64 @_ZNK5blink11ShapeResult8ByteSizeEv(%"class.blink::ShapeResult"* null) #17
  %58 = add i64 %57, %51
  br label %68

59:                                               ; preds = %50
  %60 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %54, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %60) #17
  %61 = tail call i64 @_ZNK5blink11ShapeResult8ByteSizeEv(%"class.blink::ShapeResult"* nonnull %54) #17
  %62 = add i64 %61, %51
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %60) #17
  %63 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %68

66:                                               ; preds = %59
  tail call void @_ZN5blink11ShapeResultD1Ev(%"class.blink::ShapeResult"* nonnull %54) #17
  %67 = bitcast %"class.blink::ShapeResult"* %54 to i8*
  tail call void @free(i8* %67) #17
  br label %68

68:                                               ; preds = %56, %59, %66
  %69 = phi i64 [ %58, %56 ], [ %62, %59 ], [ %62, %66 ]
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair.229", %"struct.WTF::KeyValuePair.229"* %52, i64 1
  %71 = icmp eq %"struct.WTF::KeyValuePair.229"* %70, %10
  br i1 %71, label %24, label %72

72:                                               ; preds = %68, %77
  %73 = phi %"struct.WTF::KeyValuePair.229"* [ %78, %77 ], [ %70, %68 ]
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.229", %"struct.WTF::KeyValuePair.229"* %73, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = icmp ugt i32 %75, -3
  br i1 %76, label %77, label %80

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.229", %"struct.WTF::KeyValuePair.229"* %73, i64 1
  %79 = icmp eq %"struct.WTF::KeyValuePair.229"* %78, %10
  br i1 %79, label %24, label %72

80:                                               ; preds = %72
  %81 = icmp eq %"struct.WTF::KeyValuePair.229"* %73, %10
  br i1 %81, label %24, label %50

82:                                               ; preds = %44, %102, %116, %113, %24, %47
  %83 = phi i64 [ %25, %47 ], [ %25, %24 ], [ %103, %113 ], [ %103, %116 ], [ %103, %102 ], [ %25, %44 ]
  ret i64 %83

84:                                               ; preds = %47, %116
  %85 = phi i64 [ %103, %116 ], [ %25, %47 ]
  %86 = phi %"struct.WTF::KeyValuePair.268"* [ %107, %116 ], [ %48, %47 ]
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair.268", %"struct.WTF::KeyValuePair.268"* %86, i64 0, i32 1, i32 0
  %88 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %87, align 8
  %89 = icmp eq %"class.blink::ShapeResult"* %88, null
  br i1 %89, label %90, label %93

90:                                               ; preds = %84
  %91 = tail call i64 @_ZNK5blink11ShapeResult8ByteSizeEv(%"class.blink::ShapeResult"* null) #17
  %92 = add i64 %91, %85
  br label %102

93:                                               ; preds = %84
  %94 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %88, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %94) #17
  %95 = tail call i64 @_ZNK5blink11ShapeResult8ByteSizeEv(%"class.blink::ShapeResult"* nonnull %88) #17
  %96 = add i64 %95, %85
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %94) #17
  %97 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %88, i64 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %102

100:                                              ; preds = %93
  tail call void @_ZN5blink11ShapeResultD1Ev(%"class.blink::ShapeResult"* nonnull %88) #17
  %101 = bitcast %"class.blink::ShapeResult"* %88 to i8*
  tail call void @free(i8* %101) #17
  br label %102

102:                                              ; preds = %90, %93, %100
  %103 = phi i64 [ %92, %90 ], [ %96, %93 ], [ %96, %100 ]
  %104 = getelementptr inbounds %"struct.WTF::KeyValuePair.268", %"struct.WTF::KeyValuePair.268"* %86, i64 1
  %105 = icmp eq %"struct.WTF::KeyValuePair.268"* %104, %34
  br i1 %105, label %82, label %106

106:                                              ; preds = %102, %113
  %107 = phi %"struct.WTF::KeyValuePair.268"* [ %114, %113 ], [ %104, %102 ]
  %108 = getelementptr inbounds %"struct.WTF::KeyValuePair.268", %"struct.WTF::KeyValuePair.268"* %107, i64 0, i32 0, i32 1
  %109 = load i16, i16* %108, align 4
  %110 = and i16 %109, 32766
  %111 = or i16 %110, 1
  %112 = icmp eq i16 %111, 17
  br i1 %112, label %113, label %116

113:                                              ; preds = %106
  %114 = getelementptr inbounds %"struct.WTF::KeyValuePair.268", %"struct.WTF::KeyValuePair.268"* %107, i64 1
  %115 = icmp eq %"struct.WTF::KeyValuePair.268"* %114, %34
  br i1 %115, label %82, label %106

116:                                              ; preds = %106
  %117 = icmp eq %"struct.WTF::KeyValuePair.268"* %107, %34
  br i1 %117, label %82, label %84
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9FontCache28CreateTypefaceFromUniqueNameERKNS_22FontFaceCreationParamsE(%class.sk_sp.202* noalias nocapture sret, %"class.blink::FontCache"* nocapture readnone, %"class.blink::FontFaceCreationParams"* nocapture readonly dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp.202, align 8
  %5 = alloca %"class.WTF::AtomicString", align 8
  %6 = tail call %"class.blink::FontGlobalContext"* @_ZN5blink17FontGlobalContext3GetENS_14CreateIfNeededE(i32 1) #17
  %7 = tail call %"class.blink::FontUniqueNameLookup"* @_ZN5blink17FontGlobalContext23GetFontUniqueNameLookupEv() #17
  %8 = bitcast %class.sk_sp.202* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #17
  %9 = getelementptr inbounds %class.sk_sp.202, %class.sk_sp.202* %4, i64 0, i32 0
  store %class.SkTypeface* inttoptr (i64 -6148914691236517206 to %class.SkTypeface*), %class.SkTypeface** %9, align 8
  %10 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #17
  %11 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %31, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %31

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i33
  %23 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %22, i33 1) #17
  %24 = extractvalue { i33, i1 } %23, 1
  %25 = extractvalue { i33, i1 } %23, 0
  %26 = icmp slt i33 %25, 0
  %27 = or i1 %24, %26
  br i1 %27, label %28, label %29, !prof !5

28:                                               ; preds = %19
  tail call void @llvm.trap() #17
  unreachable

29:                                               ; preds = %19
  %30 = trunc i33 %25 to i32
  store i32 %30, i32* %20, align 4
  br label %31

31:                                               ; preds = %3, %14, %29
  %32 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %32, align 8
  %33 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0
  %34 = bitcast %"class.blink::FontUniqueNameLookup"* %7 to void (%class.sk_sp.202*, %"class.blink::FontUniqueNameLookup"*, %"class.WTF::String"*)***
  %35 = load void (%class.sk_sp.202*, %"class.blink::FontUniqueNameLookup"*, %"class.WTF::String"*)**, void (%class.sk_sp.202*, %"class.blink::FontUniqueNameLookup"*, %"class.WTF::String"*)*** %34, align 8
  %36 = load void (%class.sk_sp.202*, %"class.blink::FontUniqueNameLookup"*, %"class.WTF::String"*)*, void (%class.sk_sp.202*, %"class.blink::FontUniqueNameLookup"*, %"class.WTF::String"*)** %35, align 8
  call void %36(%class.sk_sp.202* nonnull sret %4, %"class.blink::FontUniqueNameLookup"* %7, %"class.WTF::String"* nonnull dereferenceable(8) %33) #17
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %31
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #17
  br label %52

52:                                               ; preds = %31, %48, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #17
  %53 = load %class.SkTypeface*, %class.SkTypeface** %9, align 8
  %54 = icmp eq %class.SkTypeface* %53, null
  br i1 %54, label %58, label %55

55:                                               ; preds = %52
  %56 = ptrtoint %class.SkTypeface* %53 to i64
  store %class.SkTypeface* null, %class.SkTypeface** %9, align 8
  %57 = bitcast %class.sk_sp.202* %0 to i64*
  store i64 %56, i64* %57, align 8
  br label %60

58:                                               ; preds = %52
  %59 = getelementptr inbounds %class.sk_sp.202, %class.sk_sp.202* %0, i64 0, i32 0
  store %class.SkTypeface* null, %class.SkTypeface** %59, align 8
  br label %60

60:                                               ; preds = %55, %58
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #17
  ret void
}

declare %"class.blink::FontUniqueNameLookup"* @_ZN5blink17FontGlobalContext23GetFontUniqueNameLookupEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9FontCache24GetBcp47LocaleForRequestERKNS_15FontDescriptionENS_20FontFallbackPriorityE(%"class.WTF::Vector.394"* noalias sret, %"class.blink::FontDescription"* nocapture readonly dereferenceable(80), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.394", %"class.WTF::Vector.394"* %0, i64 0, i32 0, i32 1, i64 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 -86, i64 32, i1 false)
  %8 = getelementptr inbounds %"class.WTF::Vector.394", %"class.WTF::Vector.394"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast %"class.WTF::Vector.394"* %0 to i8**
  store i8* %8, i8** %9, align 8
  %10 = getelementptr inbounds %"class.WTF::Vector.394", %"class.WTF::Vector.394"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %10, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.394", %"class.WTF::Vector.394"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %11, align 4
  %12 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 3, i32 0
  %13 = load %"class.blink::LayoutLocale"*, %"class.blink::LayoutLocale"** %12, align 8
  %14 = tail call %"class.blink::LayoutLocale"* @_ZN5blink12LayoutLocale12LocaleForHanEPKS0_(%"class.blink::LayoutLocale"* %13) #17
  %15 = icmp eq %"class.blink::LayoutLocale"* %14, null
  br i1 %15, label %33, label %16

16:                                               ; preds = %3
  %17 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #17
  %18 = tail call i8* @_ZNK5blink12LayoutLocale24LocaleForHanForSkFontMgrEv(%"class.blink::LayoutLocale"* nonnull %14) #17
  store i8* %18, i8** %4, align 8
  %19 = load i32, i32* %11, align 4
  %20 = load i32, i32* %10, align 8
  %21 = icmp eq i32 %19, %20
  br i1 %21, label %31, label %22, !prof !5

22:                                               ; preds = %16
  %23 = ptrtoint i8* %18 to i64
  %24 = getelementptr inbounds %"class.WTF::Vector.394", %"class.WTF::Vector.394"* %0, i64 0, i32 0, i32 0, i32 0
  %25 = load i8**, i8*** %24, align 8
  %26 = zext i32 %19 to i64
  %27 = getelementptr inbounds i8*, i8** %25, i64 %26
  %28 = bitcast i8** %27 to i64*
  store i64 %23, i64* %28, align 8
  %29 = load i32, i32* %11, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %11, align 4
  br label %32

31:                                               ; preds = %16
  call void @_ZN3WTF6VectorIPKcLj4ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.394"* %0, i8** nonnull dereferenceable(8) %4) #17
  br label %32

32:                                               ; preds = %22, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #17
  br label %33

33:                                               ; preds = %3, %32
  %34 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #17
  %35 = call dereferenceable(80) %"class.blink::LayoutLocale"* @_ZN5blink12LayoutLocale10GetDefaultEv() #17
  %36 = call i8* @_ZNK5blink12LayoutLocale18LocaleForSkFontMgrEv(%"class.blink::LayoutLocale"* %35) #17
  store i8* %36, i8** %5, align 8
  %37 = load i32, i32* %11, align 4
  %38 = load i32, i32* %10, align 8
  %39 = icmp eq i32 %37, %38
  br i1 %39, label %49, label %40, !prof !5

40:                                               ; preds = %33
  %41 = ptrtoint i8* %36 to i64
  %42 = getelementptr inbounds %"class.WTF::Vector.394", %"class.WTF::Vector.394"* %0, i64 0, i32 0, i32 0, i32 0
  %43 = load i8**, i8*** %42, align 8
  %44 = zext i32 %37 to i64
  %45 = getelementptr inbounds i8*, i8** %43, i64 %44
  %46 = bitcast i8** %45 to i64*
  store i64 %41, i64* %46, align 8
  %47 = load i32, i32* %11, align 4
  %48 = add i32 %47, 1
  store i32 %48, i32* %11, align 4
  br label %50

49:                                               ; preds = %33
  call void @_ZN3WTF6VectorIPKcLj4ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.394"* %0, i8** nonnull dereferenceable(8) %5) #17
  br label %50

50:                                               ; preds = %40, %49
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #17
  %51 = icmp eq %"class.blink::LayoutLocale"* %13, null
  br i1 %51, label %69, label %52

52:                                               ; preds = %50
  %53 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #17
  %54 = call i8* @_ZNK5blink12LayoutLocale18LocaleForSkFontMgrEv(%"class.blink::LayoutLocale"* nonnull %13) #17
  store i8* %54, i8** %6, align 8
  %55 = load i32, i32* %11, align 4
  %56 = load i32, i32* %10, align 8
  %57 = icmp eq i32 %55, %56
  br i1 %57, label %67, label %58, !prof !5

58:                                               ; preds = %52
  %59 = ptrtoint i8* %54 to i64
  %60 = getelementptr inbounds %"class.WTF::Vector.394", %"class.WTF::Vector.394"* %0, i64 0, i32 0, i32 0, i32 0
  %61 = load i8**, i8*** %60, align 8
  %62 = zext i32 %55 to i64
  %63 = getelementptr inbounds i8*, i8** %61, i64 %62
  %64 = bitcast i8** %63 to i64*
  store i64 %59, i64* %64, align 8
  %65 = load i32, i32* %11, align 4
  %66 = add i32 %65, 1
  store i32 %66, i32* %11, align 4
  br label %68

67:                                               ; preds = %52
  call void @_ZN3WTF6VectorIPKcLj4ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.394"* %0, i8** nonnull dereferenceable(8) %6) #17
  br label %68

68:                                               ; preds = %58, %67
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #17
  br label %69

69:                                               ; preds = %50, %68
  %70 = icmp eq i32 %2, 2
  br i1 %70, label %71, label %83

71:                                               ; preds = %69
  %72 = load i32, i32* %11, align 4
  %73 = load i32, i32* %10, align 8
  %74 = icmp eq i32 %72, %73
  br i1 %74, label %82, label %75, !prof !5

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.WTF::Vector.394", %"class.WTF::Vector.394"* %0, i64 0, i32 0, i32 0, i32 0
  %77 = load i8**, i8*** %76, align 8
  %78 = zext i32 %72 to i64
  %79 = getelementptr inbounds i8*, i8** %77, i64 %78
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZN5blink17kColorEmojiLocaleE, i64 0, i64 0), i8** %79, align 8
  %80 = load i32, i32* %11, align 4
  %81 = add i32 %80, 1
  store i32 %81, i32* %11, align 4
  br label %83

82:                                               ; preds = %71
  call void @_ZN3WTF6VectorIPKcLj4ENS_18PartitionAllocatorEE14AppendSlowCaseIRA9_S1_EEvOT_(%"class.WTF::Vector.394"* %0, [9 x i8]* nonnull dereferenceable(9) @_ZN5blink17kColorEmojiLocaleE) #17
  br label %83

83:                                               ; preds = %82, %75, %69
  ret void
}

declare %"class.blink::LayoutLocale"* @_ZN5blink12LayoutLocale12LocaleForHanEPKS0_(%"class.blink::LayoutLocale"*) local_unnamed_addr #1

declare i8* @_ZNK5blink12LayoutLocale24LocaleForHanForSkFontMgrEv(%"class.blink::LayoutLocale"*) local_unnamed_addr #1

declare dereferenceable(80) %"class.blink::LayoutLocale"* @_ZN5blink12LayoutLocale10GetDefaultEv() local_unnamed_addr #1

declare i8* @_ZNK5blink12LayoutLocale18LocaleForSkFontMgrEv(%"class.blink::LayoutLocale"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(48) %"class.blink::FontFallbackMap"* @_ZN5blink9FontCache18GetFontFallbackMapEv(%"class.blink::FontCache"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %0, i64 0, i32 11, i32 0
  %3 = getelementptr inbounds %"class.blink::PersistentBase.289", %"class.blink::PersistentBase.289"* %2, i64 0, i32 0
  %4 = load %"class.blink::FontFallbackMap"*, %"class.blink::FontFallbackMap"** %3, align 8
  %5 = icmp eq %"class.blink::FontFallbackMap"* %4, null
  br i1 %5, label %6, label %18

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15FontCacheClientEEEPhm(i64 48) #17
  %8 = bitcast i8* %7 to %"class.blink::FontFallbackMap"*
  %9 = bitcast i8* %7 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [6 x i8*] }, { [7 x i8*], [6 x i8*] }* @_ZTVN5blink15FontFallbackMapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [6 x i8*] }, { [7 x i8*], [6 x i8*] }* @_ZTVN5blink15FontFallbackMapE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %9, align 8
  %10 = getelementptr inbounds i8, i8* %7, i64 16
  %11 = getelementptr inbounds i8, i8* %7, i64 -4
  %12 = bitcast i8* %11 to i16*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 28, i1 false) #17
  %13 = load atomic i16, i16* %12 monotonic, align 2
  %14 = or i16 %13, 1
  store atomic i16 %14, i16* %12 release, align 2
  tail call void @_ZN5blink14PersistentBaseINS_15FontFallbackMapELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS1_(%"class.blink::PersistentBase.289"* %2, %"class.blink::FontFallbackMap"* %8) #17
  %15 = load %"class.blink::FontFallbackMap"*, %"class.blink::FontFallbackMap"** %3, align 8
  %16 = getelementptr inbounds %"class.blink::FontFallbackMap", %"class.blink::FontFallbackMap"* %15, i64 0, i32 0
  tail call void @_ZN5blink9FontCache9AddClientEPNS_15FontCacheClientE(%"class.blink::FontCache"* %0, %"class.blink::FontCacheClient"* %16)
  %17 = load %"class.blink::FontFallbackMap"*, %"class.blink::FontFallbackMap"** %3, align 8
  br label %18

18:                                               ; preds = %1, %6
  %19 = phi %"class.blink::FontFallbackMap"* [ %4, %1 ], [ %17, %6 ]
  ret %"class.blink::FontFallbackMap"* %19
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeI13scoped_refptrIN5blink14SimpleFontDataEENS_18PartitionAllocatorEEELj0ES6_E14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.283"*, %"class.WTF::VectorBackedLinkedListNode"* dereferenceable(16)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.283", %"class.WTF::Vector.283"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.283", %"class.WTF::Vector.283"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %6, align 8
  %8 = icmp ugt %"class.WTF::VectorBackedLinkedListNode"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::VectorBackedLinkedListNode"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.283", %"class.WTF::Vector.283"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !6

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::VectorBackedLinkedListNode"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_26VectorBackedLinkedListNodeI13scoped_refptrIN5blink14SimpleFontDataEES0_EEEEmm(i64 %26) #17
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([142 x i8], [142 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_26VectorBackedLinkedListNodeI13scoped_refptrIN5blink14SimpleFontDataEENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #17
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.283"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 4
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.WTF::VectorBackedLinkedListNode"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 4
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.WTF::VectorBackedLinkedListNode"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !6

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #17
  %47 = bitcast %"class.WTF::Vector.283"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #17
  %51 = bitcast %"class.WTF::Vector.283"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.WTF::VectorBackedLinkedListNode"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %1 to i64
  %56 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 4
  %59 = getelementptr inbounds %"class.WTF::Vector.283", %"class.WTF::Vector.283"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !6

69:                                               ; preds = %54
  %70 = icmp eq %"class.WTF::VectorBackedLinkedListNode"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_26VectorBackedLinkedListNodeI13scoped_refptrIN5blink14SimpleFontDataEES0_EEEEmm(i64 %71) #17
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([142 x i8], [142 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_26VectorBackedLinkedListNodeI13scoped_refptrIN5blink14SimpleFontDataEENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #17
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.283"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.WTF::VectorBackedLinkedListNode"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !6

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #17
  %87 = bitcast %"class.WTF::Vector.283"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #17
  %91 = bitcast %"class.WTF::Vector.283"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 4
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.WTF::VectorBackedLinkedListNode"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %100, i64 %103
  %105 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %101 to i64*
  %106 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %104 to i64*
  %107 = load i64, i64* %105, align 8
  store i64 %107, i64* %106, align 8
  %108 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %100, i64 %103, i32 2
  %109 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %101, i64 0, i32 2
  %110 = getelementptr inbounds %class.scoped_refptr.246, %class.scoped_refptr.246* %109, i64 0, i32 0
  %111 = bitcast %class.scoped_refptr.246* %109 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast %class.scoped_refptr.246* %108 to i64*
  store i64 %112, i64* %113, align 8
  store %"class.blink::SimpleFontData"* null, %"class.blink::SimpleFontData"** %110, align 8
  %114 = load i32, i32* %3, align 4
  %115 = add i32 %114, 1
  store i32 %115, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_26VectorBackedLinkedListNodeI13scoped_refptrIN5blink14SimpleFontDataEES0_EEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #17
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.17, i64 0, i64 0), i8* %11, i8* %12) #17
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.18, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #17
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #17
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #17
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #17
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare float @nextafterf(float, float) local_unnamed_addr #6

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #9

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #1

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #1

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #6

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #11

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FontFamily", %"class.blink::FontFamily"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %2, align 8
  store %"class.blink::SharedFontFamily"* null, %"class.blink::SharedFontFamily"** %2, align 8
  %4 = icmp eq %"class.blink::SharedFontFamily"* %3, null
  br i1 %4, label %47, label %5

5:                                                ; preds = %1, %22
  %6 = phi %"class.blink::SharedFontFamily"* [ %12, %22 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %24

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 0, i32 1, i32 0
  %12 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %11, align 8
  store %"class.blink::SharedFontFamily"* null, %"class.blink::SharedFontFamily"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 1, i32 0
  %14 = getelementptr inbounds %"class.base::RefCounted.322", %"class.base::RefCounted.322"* %13, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %14) #17
  %15 = getelementptr inbounds %"class.base::RefCounted.322", %"class.base::RefCounted.322"* %13, i64 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %22

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.base::RefCounted.322", %"class.base::RefCounted.322"* %13, i64 -4
  %20 = bitcast %"class.base::RefCounted.322"* %19 to %"class.blink::SharedFontFamily"*
  tail call void @_ZN5blink16SharedFontFamilyD2Ev(%"class.blink::SharedFontFamily"* nonnull %20) #17
  %21 = bitcast %"class.base::RefCounted.322"* %19 to i8*
  tail call void @free(i8* %21) #17
  br label %22

22:                                               ; preds = %18, %10
  %23 = icmp eq %"class.blink::SharedFontFamily"* %12, null
  br i1 %23, label %34, label %5

24:                                               ; preds = %5
  %25 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 1, i32 0
  %26 = getelementptr inbounds %"class.base::RefCounted.322", %"class.base::RefCounted.322"* %25, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %26) #17
  %27 = getelementptr inbounds %"class.base::RefCounted.322", %"class.base::RefCounted.322"* %25, i64 0, i32 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %34

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.base::RefCounted.322", %"class.base::RefCounted.322"* %25, i64 -4
  %32 = bitcast %"class.base::RefCounted.322"* %31 to %"class.blink::FontFamily"*
  tail call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %32) #17
  %33 = bitcast %"class.base::RefCounted.322"* %31 to i8*
  tail call void @free(i8* %33) #17
  br label %34

34:                                               ; preds = %22, %30, %24
  %35 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %2, align 8
  %36 = icmp eq %"class.blink::SharedFontFamily"* %35, null
  br i1 %36, label %47, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %35, i64 0, i32 1, i32 0
  %39 = getelementptr inbounds %"class.base::RefCounted.322", %"class.base::RefCounted.322"* %38, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %39) #17
  %40 = getelementptr inbounds %"class.base::RefCounted.322", %"class.base::RefCounted.322"* %38, i64 0, i32 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %47

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.base::RefCounted.322", %"class.base::RefCounted.322"* %38, i64 -4
  %45 = bitcast %"class.base::RefCounted.322"* %44 to %"class.blink::FontFamily"*
  tail call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %45) #17
  %46 = bitcast %"class.base::RefCounted.322"* %44 to i8*
  tail call void @free(i8* %46) #17
  br label %47

47:                                               ; preds = %1, %43, %37, %34
  %48 = getelementptr inbounds %"class.blink::FontFamily", %"class.blink::FontFamily"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #17
  br label %64

64:                                               ; preds = %47, %60, %63
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16SharedFontFamilyD2Ev(%"class.blink::SharedFontFamily"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %0, i64 0, i32 0, i32 1, i32 0
  %3 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %2, align 8
  store %"class.blink::SharedFontFamily"* null, %"class.blink::SharedFontFamily"** %2, align 8
  %4 = icmp eq %"class.blink::SharedFontFamily"* %3, null
  br i1 %4, label %47, label %5

5:                                                ; preds = %1, %22
  %6 = phi %"class.blink::SharedFontFamily"* [ %12, %22 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %24

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 0, i32 1, i32 0
  %12 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %11, align 8
  store %"class.blink::SharedFontFamily"* null, %"class.blink::SharedFontFamily"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 1, i32 0
  %14 = getelementptr inbounds %"class.base::RefCounted.322", %"class.base::RefCounted.322"* %13, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %14) #17
  %15 = getelementptr inbounds %"class.base::RefCounted.322", %"class.base::RefCounted.322"* %13, i64 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %22

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.base::RefCounted.322", %"class.base::RefCounted.322"* %13, i64 -4
  %20 = bitcast %"class.base::RefCounted.322"* %19 to %"class.blink::SharedFontFamily"*
  tail call void @_ZN5blink16SharedFontFamilyD2Ev(%"class.blink::SharedFontFamily"* nonnull %20) #17
  %21 = bitcast %"class.base::RefCounted.322"* %19 to i8*
  tail call void @free(i8* %21) #17
  br label %22

22:                                               ; preds = %18, %10
  %23 = icmp eq %"class.blink::SharedFontFamily"* %12, null
  br i1 %23, label %34, label %5

24:                                               ; preds = %5
  %25 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 1, i32 0
  %26 = getelementptr inbounds %"class.base::RefCounted.322", %"class.base::RefCounted.322"* %25, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %26) #17
  %27 = getelementptr inbounds %"class.base::RefCounted.322", %"class.base::RefCounted.322"* %25, i64 0, i32 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %34

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.base::RefCounted.322", %"class.base::RefCounted.322"* %25, i64 -4
  %32 = bitcast %"class.base::RefCounted.322"* %31 to %"class.blink::FontFamily"*
  tail call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %32) #17
  %33 = bitcast %"class.base::RefCounted.322"* %31 to i8*
  tail call void @free(i8* %33) #17
  br label %34

34:                                               ; preds = %22, %30, %24
  %35 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %2, align 8
  %36 = icmp eq %"class.blink::SharedFontFamily"* %35, null
  br i1 %36, label %47, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %35, i64 0, i32 1, i32 0
  %39 = getelementptr inbounds %"class.base::RefCounted.322", %"class.base::RefCounted.322"* %38, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %39) #17
  %40 = getelementptr inbounds %"class.base::RefCounted.322", %"class.base::RefCounted.322"* %38, i64 0, i32 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %47

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.base::RefCounted.322", %"class.base::RefCounted.322"* %38, i64 -4
  %45 = bitcast %"class.base::RefCounted.322"* %44 to %"class.blink::FontFamily"*
  tail call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %45) #17
  %46 = bitcast %"class.base::RefCounted.322"* %44 to i8*
  tail call void @free(i8* %46) #17
  br label %47

47:                                               ; preds = %1, %43, %37, %34
  %48 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #17
  br label %64

64:                                               ; preds = %47, %60, %63
  ret void
}

declare i64 @_ZNK5blink11ShapeResult8ByteSizeEv(%"class.blink::ShapeResult"*) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink11ShapeResultD1Ev(%"class.blink::ShapeResult"*) unnamed_addr #6

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIPKcLj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.395"*, i8**) local_unnamed_addr #8 comdat align 2 {
  %3 = bitcast i8** %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #17
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #12

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink12FontCacheKeyELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.217"*, %"struct.blink::FontCacheKey"* dereferenceable(80)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.217", %"class.WTF::Vector.217"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.217", %"class.WTF::Vector.217"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.blink::FontCacheKey"*, %"struct.blink::FontCacheKey"** %6, align 8
  %8 = icmp ugt %"struct.blink::FontCacheKey"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %7, i64 %10
  %12 = icmp ugt %"struct.blink::FontCacheKey"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.217", %"class.WTF::Vector.217"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !6

24:                                               ; preds = %13
  %25 = icmp eq %"struct.blink::FontCacheKey"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink12FontCacheKeyEEEmm(i64 %27) #17
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12FontCacheKeyEEEPKcv, i64 0, i64 0)) #17
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.217"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = udiv i64 %28, 80
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"struct.blink::FontCacheKey"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN5blink12FontCacheKeyELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.217"* %0, i32 %22) #17
  %36 = load %"struct.blink::FontCacheKey"*, %"struct.blink::FontCacheKey"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"struct.blink::FontCacheKey"* %1 to i64
  %39 = ptrtoint %"struct.blink::FontCacheKey"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = sdiv exact i64 %40, 80
  %42 = getelementptr inbounds %"class.WTF::Vector.217", %"class.WTF::Vector.217"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !6

52:                                               ; preds = %37
  %53 = icmp eq %"struct.blink::FontCacheKey"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink12FontCacheKeyEEEmm(i64 %55) #17
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12FontCacheKeyEEEPKcv, i64 0, i64 0)) #17
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.217"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = udiv i64 %56, 80
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"struct.blink::FontCacheKey"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN5blink12FontCacheKeyELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.217"* %0, i32 %50) #17
  %64 = load %"struct.blink::FontCacheKey"*, %"struct.blink::FontCacheKey"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"struct.blink::FontCacheKey"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"struct.blink::FontCacheKey"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"struct.blink::FontCacheKey"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %69, i64 %72, i32 0, i32 0
  %74 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %70, i64 0, i32 0, i32 0
  %75 = load i32, i32* %74, align 8
  store i32 %75, i32* %73, align 8
  %76 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %70, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %69, i64 %72, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %77, %"class.WTF::StringImpl"** %78, align 8
  %79 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %79, label %97, label %80

80:                                               ; preds = %68
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %97

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = zext i32 %87 to i33
  %89 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %88, i33 1) #17
  %90 = extractvalue { i33, i1 } %89, 1
  %91 = extractvalue { i33, i1 } %89, 0
  %92 = icmp slt i33 %91, 0
  %93 = or i1 %90, %92
  br i1 %93, label %94, label %95, !prof !5

94:                                               ; preds = %85
  tail call void @llvm.trap() #17
  unreachable

95:                                               ; preds = %85
  %96 = trunc i33 %91 to i32
  store i32 %96, i32* %86, align 4
  br label %97

97:                                               ; preds = %95, %80, %68
  %98 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %69, i64 %72, i32 0, i32 2
  %99 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %70, i64 0, i32 0, i32 2
  %100 = bitcast %"class.std::__1::basic_string"* %99 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %100, i64 0, i32 1, i32 0
  %102 = load i8, i8* %101, align 1
  %103 = icmp slt i8 %102, 0
  br i1 %103, label %107, label %104

104:                                              ; preds = %97
  %105 = bitcast %"class.std::__1::basic_string"* %98 to i8*
  %106 = bitcast %"class.std::__1::basic_string"* %99 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* align 8 %106, i64 24, i1 false) #17
  br label %112

107:                                              ; preds = %97
  %108 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %99, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load i8*, i8** %108, align 8
  %110 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %70, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %111 = load i64, i64* %110, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %98, i8* %109, i64 %111) #17
  br label %112

112:                                              ; preds = %107, %104
  %113 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %69, i64 %72, i32 0, i32 3
  %114 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %70, i64 0, i32 0, i32 3
  %115 = bitcast i32* %114 to i64*
  %116 = bitcast i32* %113 to i64*
  %117 = load i64, i64* %115, align 8
  store i64 %117, i64* %116, align 8
  %118 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %69, i64 %72, i32 1
  %119 = bitcast i32* %118 to i8*
  %120 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %70, i64 0, i32 1
  %121 = bitcast i32* %120 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* align 8 %121, i64 12, i1 false) #17
  %122 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %70, i64 0, i32 5, i32 0
  %123 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %122, align 8
  %124 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %69, i64 %72, i32 5, i32 0
  store %"class.blink::FontVariationSettings"* %123, %"class.blink::FontVariationSettings"** %124, align 8
  %125 = icmp eq %"class.blink::FontVariationSettings"* %123, null
  br i1 %125, label %128, label %126

126:                                              ; preds = %112
  %127 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %123, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %127) #17
  br label %128

128:                                              ; preds = %112, %126
  %129 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %69, i64 %72, i32 6
  %130 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %70, i64 0, i32 6
  %131 = load i8, i8* %130, align 8, !range !7
  store i8 %131, i8* %129, align 8
  %132 = load i32, i32* %3, align 4
  %133 = add i32 %132, 1
  store i32 %133, i32* %3, align 4
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink12FontCacheKeyELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.217"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %102

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.217", %"class.WTF::Vector.217"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.blink::FontCacheKey"*, %"struct.blink::FontCacheKey"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.217", %"class.WTF::Vector.217"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.217"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.217", %"class.WTF::Vector.217"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %100, label %14

14:                                               ; preds = %4, %96
  %15 = phi %"struct.blink::FontCacheKey"* [ %98, %96 ], [ %6, %4 ]
  %16 = phi %"struct.blink::FontCacheKey"* [ %97, %96 ], [ null, %4 ]
  %17 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %16, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %15, i64 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 8
  store i32 %19, i32* %17, align 8
  %20 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %16, i64 0, i32 0, i32 1
  %21 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %15, i64 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = bitcast %"class.WTF::AtomicString"* %21 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.WTF::AtomicString"* %20 to i64*
  store i64 %24, i64* %25, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %22, align 8
  %26 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %16, i64 0, i32 0, i32 2
  %27 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  %28 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %15, i64 0, i32 0, i32 2
  %29 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %29, i64 24, i1 false) #17
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 24, i1 false) #17
  %30 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %16, i64 0, i32 0, i32 3
  %31 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %15, i64 0, i32 0, i32 3
  %32 = bitcast i32* %31 to i64*
  %33 = bitcast i32* %30 to i64*
  %34 = load i64, i64* %32, align 8
  store i64 %34, i64* %33, align 8
  %35 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %16, i64 0, i32 1
  %36 = bitcast i32* %35 to i8*
  %37 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %15, i64 0, i32 1
  %38 = bitcast i32* %37 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %38, i64 12, i1 false) #17
  %39 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %16, i64 0, i32 5
  %40 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %15, i64 0, i32 5
  %41 = getelementptr inbounds %class.scoped_refptr.188, %class.scoped_refptr.188* %40, i64 0, i32 0
  %42 = bitcast %class.scoped_refptr.188* %40 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %class.scoped_refptr.188* %39 to i64*
  store i64 %43, i64* %44, align 8
  store %"class.blink::FontVariationSettings"* null, %"class.blink::FontVariationSettings"** %41, align 8
  %45 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %16, i64 0, i32 6
  %46 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %15, i64 0, i32 6
  %47 = load i8, i8* %46, align 8, !range !7
  store i8 %47, i8* %45, align 8
  %48 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %15, i64 0, i32 5, i32 0
  %49 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %48, align 8
  %50 = icmp eq %"class.blink::FontVariationSettings"* %49, null
  br i1 %50, label %71, label %51

51:                                               ; preds = %14
  %52 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %49, i64 0, i32 1, i32 0
  %53 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %52, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %53) #17
  %54 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %52, i64 0, i32 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %71

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %52, i64 -4
  %59 = bitcast %"class.base::RefCounted"* %58 to %"class.blink::FontTagValuePair"**
  %60 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %59, align 8
  %61 = icmp eq %"class.blink::FontTagValuePair"* %60, null
  %62 = bitcast %"class.blink::FontTagValuePair"* %60 to i8*
  br i1 %61, label %69, label %63, !prof !6

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %52, i64 -1, i32 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %68, label %67, !prof !5

67:                                               ; preds = %63
  store i32 0, i32* %64, align 4
  br label %68

68:                                               ; preds = %67, %63
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %62) #17
  br label %69

69:                                               ; preds = %68, %57
  %70 = bitcast %"class.base::RefCounted"* %58 to i8*
  tail call void @free(i8* %70) #17
  br label %71

71:                                               ; preds = %69, %51, %14
  %72 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %72, i64 0, i32 1, i32 0
  %74 = load i8, i8* %73, align 1
  %75 = icmp slt i8 %74, 0
  br i1 %75, label %76, label %79

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load i8*, i8** %77, align 8
  tail call void @_ZdlPv(i8* %78) #18
  br label %79

79:                                               ; preds = %76, %71
  %80 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %15, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %96, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  br i1 %87, label %90, label %92

90:                                               ; preds = %83
  %91 = add i32 %89, -1
  store i32 %91, i32* %88, align 4
  br label %92

92:                                               ; preds = %90, %83
  %93 = phi i32 [ %91, %90 ], [ %89, %83 ]
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %96

95:                                               ; preds = %92
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %81) #17
  br label %96

96:                                               ; preds = %79, %92, %95
  %97 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %16, i64 1
  %98 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %15, i64 1
  %99 = icmp eq %"struct.blink::FontCacheKey"* %98, %10
  br i1 %99, label %100, label %14

100:                                              ; preds = %96, %4
  %101 = bitcast %"struct.blink::FontCacheKey"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %101) #17
  br label %213

102:                                              ; preds = %2
  %103 = zext i32 %1 to i64
  %104 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink12FontCacheKeyEEEmm(i64 %103) #17
  %105 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %104, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12FontCacheKeyEEEPKcv, i64 0, i64 0)) #17
  %106 = udiv i64 %104, 80
  %107 = ptrtoint i8* %105 to i64
  %108 = getelementptr inbounds %"class.WTF::Vector.217", %"class.WTF::Vector.217"* %0, i64 0, i32 0, i32 0, i32 0
  %109 = load %"struct.blink::FontCacheKey"*, %"struct.blink::FontCacheKey"** %108, align 8
  %110 = getelementptr inbounds %"class.WTF::Vector.217", %"class.WTF::Vector.217"* %0, i64 0, i32 0, i32 0, i32 2
  %111 = load i32, i32* %110, align 4
  %112 = zext i32 %111 to i64
  %113 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %109, i64 %112
  %114 = icmp eq i32 %111, 0
  br i1 %114, label %115, label %117

115:                                              ; preds = %102
  %116 = bitcast %"struct.blink::FontCacheKey"* %109 to i8*
  br label %208

117:                                              ; preds = %102
  %118 = bitcast i8* %105 to %"struct.blink::FontCacheKey"*
  br label %119

119:                                              ; preds = %117, %201
  %120 = phi %"struct.blink::FontCacheKey"* [ %203, %201 ], [ %109, %117 ]
  %121 = phi %"struct.blink::FontCacheKey"* [ %202, %201 ], [ %118, %117 ]
  %122 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %121, i64 0, i32 0, i32 0
  %123 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %120, i64 0, i32 0, i32 0
  %124 = load i32, i32* %123, align 8
  store i32 %124, i32* %122, align 8
  %125 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %121, i64 0, i32 0, i32 1
  %126 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %120, i64 0, i32 0, i32 1
  %127 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %126, i64 0, i32 0, i32 0, i32 0
  %128 = bitcast %"class.WTF::AtomicString"* %126 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.WTF::AtomicString"* %125 to i64*
  store i64 %129, i64* %130, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %127, align 8
  %131 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %121, i64 0, i32 0, i32 2
  %132 = bitcast %"class.std::__1::basic_string"* %131 to i8*
  %133 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %120, i64 0, i32 0, i32 2
  %134 = bitcast %"class.std::__1::basic_string"* %133 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %132, i8* align 8 %134, i64 24, i1 false) #17
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %134, i8 0, i64 24, i1 false) #17
  %135 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %121, i64 0, i32 0, i32 3
  %136 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %120, i64 0, i32 0, i32 3
  %137 = bitcast i32* %136 to i64*
  %138 = bitcast i32* %135 to i64*
  %139 = load i64, i64* %137, align 8
  store i64 %139, i64* %138, align 8
  %140 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %121, i64 0, i32 1
  %141 = bitcast i32* %140 to i8*
  %142 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %120, i64 0, i32 1
  %143 = bitcast i32* %142 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %141, i8* align 8 %143, i64 12, i1 false) #17
  %144 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %121, i64 0, i32 5
  %145 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %120, i64 0, i32 5
  %146 = getelementptr inbounds %class.scoped_refptr.188, %class.scoped_refptr.188* %145, i64 0, i32 0
  %147 = bitcast %class.scoped_refptr.188* %145 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = bitcast %class.scoped_refptr.188* %144 to i64*
  store i64 %148, i64* %149, align 8
  store %"class.blink::FontVariationSettings"* null, %"class.blink::FontVariationSettings"** %146, align 8
  %150 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %121, i64 0, i32 6
  %151 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %120, i64 0, i32 6
  %152 = load i8, i8* %151, align 8, !range !7
  store i8 %152, i8* %150, align 8
  %153 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %120, i64 0, i32 5, i32 0
  %154 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %153, align 8
  %155 = icmp eq %"class.blink::FontVariationSettings"* %154, null
  br i1 %155, label %176, label %156

156:                                              ; preds = %119
  %157 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %154, i64 0, i32 1, i32 0
  %158 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %157, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %158) #17
  %159 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %157, i64 0, i32 0, i32 0
  %160 = load i32, i32* %159, align 4
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %176

162:                                              ; preds = %156
  %163 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %157, i64 -4
  %164 = bitcast %"class.base::RefCounted"* %163 to %"class.blink::FontTagValuePair"**
  %165 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %164, align 8
  %166 = icmp eq %"class.blink::FontTagValuePair"* %165, null
  %167 = bitcast %"class.blink::FontTagValuePair"* %165 to i8*
  br i1 %166, label %174, label %168, !prof !6

168:                                              ; preds = %162
  %169 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %157, i64 -1, i32 0, i32 0
  %170 = load i32, i32* %169, align 4
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %173, label %172, !prof !5

172:                                              ; preds = %168
  store i32 0, i32* %169, align 4
  br label %173

173:                                              ; preds = %172, %168
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %167) #17
  br label %174

174:                                              ; preds = %173, %162
  %175 = bitcast %"class.base::RefCounted"* %163 to i8*
  tail call void @free(i8* %175) #17
  br label %176

176:                                              ; preds = %174, %156, %119
  %177 = bitcast %"class.std::__1::basic_string"* %133 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %178 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %177, i64 0, i32 1, i32 0
  %179 = load i8, i8* %178, align 1
  %180 = icmp slt i8 %179, 0
  br i1 %180, label %181, label %184

181:                                              ; preds = %176
  %182 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %133, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %183 = load i8*, i8** %182, align 8
  tail call void @_ZdlPv(i8* %183) #18
  br label %184

184:                                              ; preds = %181, %176
  %185 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %120, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %186 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %185, align 8
  %187 = icmp eq %"class.WTF::StringImpl"* %186, null
  br i1 %187, label %201, label %188

188:                                              ; preds = %184
  %189 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %186, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %190 = load atomic i32, i32* %189 monotonic, align 4
  %191 = and i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %186, i64 0, i32 0
  %194 = load i32, i32* %193, align 4
  br i1 %192, label %195, label %197

195:                                              ; preds = %188
  %196 = add i32 %194, -1
  store i32 %196, i32* %193, align 4
  br label %197

197:                                              ; preds = %195, %188
  %198 = phi i32 [ %196, %195 ], [ %194, %188 ]
  %199 = icmp eq i32 %198, 0
  br i1 %199, label %200, label %201

200:                                              ; preds = %197
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %186) #17
  br label %201

201:                                              ; preds = %184, %197, %200
  %202 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %121, i64 1
  %203 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %120, i64 1
  %204 = icmp eq %"struct.blink::FontCacheKey"* %203, %113
  br i1 %204, label %205, label %119

205:                                              ; preds = %201
  %206 = bitcast %"class.WTF::Vector.217"* %0 to i8**
  %207 = load i8*, i8** %206, align 8
  br label %208

208:                                              ; preds = %115, %205
  %209 = phi i8* [ %207, %205 ], [ %116, %115 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %209) #17
  %210 = bitcast %"class.WTF::Vector.217"* %0 to i64*
  store atomic i64 %107, i64* %210 monotonic, align 8
  %211 = trunc i64 %106 to i32
  %212 = getelementptr inbounds %"class.WTF::Vector.217", %"class.WTF::Vector.217"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %211, i32* %212, align 8
  br label %213

213:                                              ; preds = %208, %100
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink12FontCacheKeyEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 26817331
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #17
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 26817331) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.17, i64 0, i64 0), i8* %11, i8* %12) #17
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.18, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #17
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #17
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #17
  %20 = mul i64 %0, 80
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #17
  ret i64 %21
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #13

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #14

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_NS_7HashMapIjNSt3__110unique_ptrINS1_16FontPlatformDataENS5_14default_deleteIS7_EEEENS_7IntHashIjEENS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsISA_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINSF_IS2_EENSF_ISI_EEEESN_SH_E6insertINS_17HashMapTranslatorISP_SL_SH_EERS2_SI_EENS_18HashTableAddResultISQ_SJ_EEOT0_OT1_(%"class.WTF::HashTable.174"*, %"struct.blink::FontCacheKey"* dereferenceable(80), %"class.WTF::HashMap.194"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.WTF::KeyValuePair", align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.174", %"class.WTF::HashTable.174"* %0, i64 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %5, align 8
  %7 = icmp eq %"struct.WTF::KeyValuePair"* %6, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_NS_7HashMapIjNSt3__110unique_ptrINS1_16FontPlatformDataENS5_14default_deleteIS7_EEEENS_7IntHashIjEENS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsISA_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINSF_IS2_EENSF_ISI_EEEESN_SH_E6ExpandEPSJ_(%"class.WTF::HashTable.174"* %0, %"struct.WTF::KeyValuePair"* null)
  %10 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %5, align 8
  br label %11

11:                                               ; preds = %3, %8
  %12 = phi %"struct.WTF::KeyValuePair"* [ %6, %3 ], [ %10, %8 ]
  %13 = getelementptr inbounds %"class.WTF::HashTable.174", %"class.WTF::HashTable.174"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = add i32 %14, -1
  %16 = zext i32 %15 to i64
  %17 = tail call i32 @_ZN5blink16FontCacheKeyHash7GetHashERKNS_12FontCacheKeyE(%"struct.blink::FontCacheKey"* dereferenceable(80) %1) #17
  %18 = and i32 %17, %15
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %12, i64 %19
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %20, i64 0, i32 0
  %22 = tail call zeroext i1 @_ZN3WTF27HashTraitsEmptyValueCheckerINS_10HashTraitsIN5blink12FontCacheKeyEEELb0EE12IsEmptyValueIS3_EEbRKT_(%"struct.blink::FontCacheKey"* dereferenceable(80) %21) #17
  br i1 %22, label %174, label %23

23:                                               ; preds = %11
  %24 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 5, i32 0
  %25 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 0
  %26 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 1
  %27 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 2
  %28 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 3
  %29 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 6
  %30 = xor i32 %17, -1
  %31 = lshr i32 %17, 23
  %32 = add i32 %31, %30
  %33 = shl i32 %32, 12
  %34 = xor i32 %33, %32
  %35 = lshr i32 %34, 7
  %36 = xor i32 %35, %34
  %37 = shl i32 %36, 2
  %38 = xor i32 %37, %36
  %39 = lshr i32 %38, 20
  %40 = xor i32 %39, %38
  %41 = or i32 %40, 1
  %42 = zext i32 %41 to i64
  br label %43

43:                                               ; preds = %23, %122
  %44 = phi %"struct.WTF::KeyValuePair"* [ %20, %23 ], [ %128, %122 ]
  %45 = phi %"struct.WTF::KeyValuePair"* [ null, %23 ], [ %123, %122 ]
  %46 = phi i64 [ %19, %23 ], [ %127, %122 ]
  %47 = phi i64 [ 0, %23 ], [ %125, %122 ]
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %12, i64 %46, i32 0, i32 5, i32 0
  %49 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %48, align 8
  %50 = icmp eq %"class.blink::FontVariationSettings"* %49, null
  %51 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %24, align 8
  %52 = icmp ne %"class.blink::FontVariationSettings"* %51, null
  %53 = xor i1 %52, true
  %54 = or i1 %50, %53
  %55 = xor i1 %50, true
  %56 = or i1 %52, %55
  br i1 %54, label %90, label %57

57:                                               ; preds = %43
  %58 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %59, %61
  br i1 %62, label %63, label %90

63:                                               ; preds = %57
  %64 = icmp eq i32 %59, 0
  br i1 %64, label %90, label %65

65:                                               ; preds = %63
  %66 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %68, align 8
  %70 = zext i32 %59 to i64
  %71 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %67, i64 %70
  br label %72

72:                                               ; preds = %86, %65
  %73 = phi %"class.blink::FontTagValuePair"* [ %88, %86 ], [ %69, %65 ]
  %74 = phi %"class.blink::FontTagValuePair"* [ %87, %86 ], [ %67, %65 ]
  %75 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %74, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %73, i64 0, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %76, %78
  br i1 %79, label %80, label %90

80:                                               ; preds = %72
  %81 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %74, i64 0, i32 1
  %82 = load float, float* %81, align 4
  %83 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %73, i64 0, i32 1
  %84 = load float, float* %83, align 4
  %85 = fcmp oeq float %82, %84
  br i1 %85, label %86, label %90

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %74, i64 1
  %88 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %73, i64 1
  %89 = icmp eq %"class.blink::FontTagValuePair"* %87, %71
  br i1 %89, label %90, label %72

90:                                               ; preds = %86, %80, %72, %63, %57, %43
  %91 = phi i1 [ true, %57 ], [ false, %63 ], [ %56, %43 ], [ true, %80 ], [ false, %86 ], [ true, %72 ]
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %44, i64 0, i32 0, i32 0
  %93 = tail call zeroext i1 @_ZNK5blink22FontFaceCreationParamseqERKS0_(%"class.blink::FontFaceCreationParams"* %92, %"class.blink::FontFaceCreationParams"* dereferenceable(48) %25) #17
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %12, i64 %46, i32 0, i32 1
  %95 = load i32, i32* %94, align 8
  br i1 %93, label %96, label %115

96:                                               ; preds = %90
  %97 = load i32, i32* %26, align 8
  %98 = icmp eq i32 %95, %97
  br i1 %98, label %99, label %115

99:                                               ; preds = %96
  %100 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %12, i64 %46, i32 0, i32 2
  %101 = load i32, i32* %100, align 4
  %102 = load i32, i32* %27, align 4
  %103 = icmp eq i32 %101, %102
  br i1 %103, label %104, label %115

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %12, i64 %46, i32 0, i32 3
  %106 = load float, float* %105, align 8
  %107 = load float, float* %28, align 8
  %108 = fcmp une float %106, %107
  %109 = or i1 %91, %108
  br i1 %109, label %115, label %110

110:                                              ; preds = %104
  %111 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %12, i64 %46, i32 0, i32 6
  %112 = load i8, i8* %111, align 8, !range !7
  %113 = load i8, i8* %29, align 8, !range !7
  %114 = icmp eq i8 %112, %113
  br i1 %114, label %254, label %115

115:                                              ; preds = %90, %96, %99, %104, %110
  %116 = icmp eq i32 %95, -1
  br i1 %116, label %117, label %122

117:                                              ; preds = %115
  %118 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %12, i64 %46, i32 0, i32 3
  %119 = load float, float* %118, align 8
  %120 = fcmp oeq float %119, 0x47EFFFFFE0000000
  br i1 %120, label %121, label %122

121:                                              ; preds = %117
  br label %122

122:                                              ; preds = %115, %117, %121
  %123 = phi %"struct.WTF::KeyValuePair"* [ %44, %121 ], [ %45, %117 ], [ %45, %115 ]
  %124 = icmp eq i64 %47, 0
  %125 = select i1 %124, i64 %42, i64 %47
  %126 = add i64 %125, %46
  %127 = and i64 %126, %16
  %128 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %12, i64 %127
  %129 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %128, i64 0, i32 0
  %130 = tail call zeroext i1 @_ZN3WTF27HashTraitsEmptyValueCheckerINS_10HashTraitsIN5blink12FontCacheKeyEEELb0EE12IsEmptyValueIS3_EEbRKT_(%"struct.blink::FontCacheKey"* dereferenceable(80) %129) #17
  br i1 %130, label %131, label %43

131:                                              ; preds = %122
  %132 = icmp eq %"struct.WTF::KeyValuePair"* %123, null
  br i1 %132, label %174, label %133

133:                                              ; preds = %131
  %134 = bitcast %"struct.WTF::KeyValuePair"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %134) #17
  %135 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 0, i32 0, i32 0, i32 0
  store i32 0, i32* %135, align 8, !alias.scope !9
  %136 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 0, i32 0, i32 0, i32 1
  %137 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 0, i32 0, i32 6
  store i8 0, i8* %137, align 8, !alias.scope !9
  %138 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 0, i32 1
  %139 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 0, i32 1, i32 0, i32 1
  %140 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 0, i32 1, i32 0, i32 2
  %141 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 0, i32 1, i32 0, i32 3
  %142 = bitcast %"class.WTF::HashMap.194"* %138 to i64*
  %143 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %136, i64 1
  %144 = bitcast %"class.WTF::AtomicString"* %143 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %144, i8 0, i64 44, i1 false) #17
  store atomic i64 0, i64* %142 monotonic, align 8, !alias.scope !9
  %145 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %123, i64 0, i32 0, i32 0, i32 0
  store i32 0, i32* %145, align 8
  %146 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %123, i64 0, i32 0, i32 0, i32 1
  %147 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %136, i64 0, i32 0, i32 0, i32 0
  %148 = bitcast %"class.WTF::AtomicString"* %146 to i64*
  store i64 0, i64* %148, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %147, align 8
  %149 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %123, i64 0, i32 0, i32 0, i32 2
  %150 = bitcast %"class.std::__1::basic_string"* %149 to i8*
  %151 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 0, i32 0, i32 0, i32 2
  %152 = bitcast %"class.std::__1::basic_string"* %151 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %150, i8* align 8 %152, i64 24, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %152, i8 0, i64 24, i1 false) #17
  %153 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %123, i64 0, i32 0, i32 0, i32 3
  %154 = bitcast i32* %153 to i64*
  store i64 0, i64* %154, align 8
  %155 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %123, i64 0, i32 0, i32 1
  %156 = bitcast i32* %155 to i8*
  %157 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 0, i32 0, i32 1
  %158 = bitcast i32* %157 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %156, i8* align 8 %158, i64 12, i1 false) #17
  %159 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %123, i64 0, i32 0, i32 5
  %160 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 0, i32 0, i32 5, i32 0
  %161 = bitcast %class.scoped_refptr.188* %159 to i64*
  store i64 0, i64* %161, align 8
  store %"class.blink::FontVariationSettings"* null, %"class.blink::FontVariationSettings"** %160, align 8
  %162 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %123, i64 0, i32 0, i32 6
  store i8 0, i8* %162, align 8
  %163 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %123, i64 0, i32 1
  %164 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %123, i64 0, i32 1, i32 0, i32 1
  %165 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %123, i64 0, i32 1, i32 0, i32 2
  %166 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %123, i64 0, i32 1, i32 0, i32 3
  %167 = bitcast %"class.WTF::HashMap.194"* %163 to i64*
  store i64 0, i64* %167, align 8
  store atomic i64 0, i64* %142 monotonic, align 8
  store atomic i64 0, i64* %167 monotonic, align 8
  store i32 0, i32* %164, align 4
  store i32 0, i32* %139, align 8
  store i32 0, i32* %165, align 4
  store i32 0, i32* %140, align 4
  store i32 0, i32* %166, align 8
  store i32 0, i32* %141, align 8
  call void @_ZN3WTF12KeyValuePairIN5blink12FontCacheKeyENS_7HashMapIjNSt3__110unique_ptrINS1_16FontPlatformDataENS4_14default_deleteIS6_EEEENS_7IntHashIjEENS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIS9_EENS_18PartitionAllocatorEEEED2Ev(%"struct.WTF::KeyValuePair"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %134) #17
  %168 = getelementptr inbounds %"class.WTF::HashTable.174", %"class.WTF::HashTable.174"* %0, i64 0, i32 3
  %169 = load i32, i32* %168, align 8
  %170 = add i32 %169, 2147483647
  %171 = and i32 %170, 2147483647
  %172 = and i32 %169, -2147483648
  %173 = or i32 %171, %172
  store i32 %173, i32* %168, align 8
  br label %174

174:                                              ; preds = %11, %131, %133
  %175 = phi %"struct.WTF::KeyValuePair"* [ %123, %133 ], [ %128, %131 ], [ %20, %11 ]
  %176 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %175, i64 0, i32 0, i32 0
  %177 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 0
  %178 = call dereferenceable(48) %"class.blink::FontFaceCreationParams"* @_ZN5blink22FontFaceCreationParamsaSERKS0_(%"class.blink::FontFaceCreationParams"* %176, %"class.blink::FontFaceCreationParams"* dereferenceable(48) %177) #17
  %179 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %175, i64 0, i32 0, i32 1
  %180 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 1
  %181 = bitcast i32* %179 to i8*
  %182 = bitcast i32* %180 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %181, i8* align 8 %182, i64 12, i1 false) #17
  %183 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %175, i64 0, i32 0, i32 5
  %184 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 5, i32 0
  %185 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %184, align 8
  %186 = icmp eq %"class.blink::FontVariationSettings"* %185, null
  br i1 %186, label %189, label %187

187:                                              ; preds = %174
  %188 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %185, i64 0, i32 1, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %188) #17
  br label %189

189:                                              ; preds = %187, %174
  %190 = ptrtoint %"class.blink::FontVariationSettings"* %185 to i64
  %191 = bitcast %class.scoped_refptr.188* %183 to i64*
  %192 = getelementptr inbounds %class.scoped_refptr.188, %class.scoped_refptr.188* %183, i64 0, i32 0
  %193 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %192, align 8
  store i64 %190, i64* %191, align 8
  %194 = icmp eq %"class.blink::FontVariationSettings"* %193, null
  br i1 %194, label %215, label %195

195:                                              ; preds = %189
  %196 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %193, i64 0, i32 1, i32 0
  %197 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %196, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %197) #17
  %198 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %196, i64 0, i32 0, i32 0
  %199 = load i32, i32* %198, align 4
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %201, label %215

201:                                              ; preds = %195
  %202 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %196, i64 -4
  %203 = bitcast %"class.base::RefCounted"* %202 to %"class.blink::FontTagValuePair"**
  %204 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %203, align 8
  %205 = icmp eq %"class.blink::FontTagValuePair"* %204, null
  %206 = bitcast %"class.blink::FontTagValuePair"* %204 to i8*
  br i1 %205, label %213, label %207, !prof !6

207:                                              ; preds = %201
  %208 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %196, i64 -1, i32 0, i32 0
  %209 = load i32, i32* %208, align 4
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %212, label %211, !prof !5

211:                                              ; preds = %207
  store i32 0, i32* %208, align 4
  br label %212

212:                                              ; preds = %211, %207
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %206) #17
  br label %213

213:                                              ; preds = %212, %201
  %214 = bitcast %"class.base::RefCounted"* %202 to i8*
  call void @free(i8* %214) #17
  br label %215

215:                                              ; preds = %189, %195, %213
  %216 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 6
  %217 = load i8, i8* %216, align 8, !range !7
  %218 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %175, i64 0, i32 0, i32 6
  store i8 %217, i8* %218, align 8
  %219 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %175, i64 0, i32 1
  %220 = bitcast %"class.WTF::HashMap.194"* %2 to i64*
  %221 = load i64, i64* %220, align 8
  %222 = bitcast %"class.WTF::HashMap.194"* %219 to i64*
  %223 = load i64, i64* %222, align 8
  store atomic i64 %223, i64* %220 monotonic, align 8
  store atomic i64 %221, i64* %222 monotonic, align 8
  %224 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %175, i64 0, i32 1, i32 0, i32 1
  %225 = getelementptr inbounds %"class.WTF::HashMap.194", %"class.WTF::HashMap.194"* %2, i64 0, i32 0, i32 1
  %226 = load i32, i32* %224, align 4
  %227 = load i32, i32* %225, align 4
  store i32 %227, i32* %224, align 4
  store i32 %226, i32* %225, align 4
  %228 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %175, i64 0, i32 1, i32 0, i32 2
  %229 = getelementptr inbounds %"class.WTF::HashMap.194", %"class.WTF::HashMap.194"* %2, i64 0, i32 0, i32 2
  %230 = load i32, i32* %228, align 4
  %231 = load i32, i32* %229, align 4
  store i32 %231, i32* %228, align 4
  store i32 %230, i32* %229, align 4
  %232 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %175, i64 0, i32 1, i32 0, i32 3
  %233 = load i32, i32* %232, align 8
  %234 = and i32 %233, 2147483647
  %235 = getelementptr inbounds %"class.WTF::HashMap.194", %"class.WTF::HashMap.194"* %2, i64 0, i32 0, i32 3
  %236 = load i32, i32* %235, align 8
  %237 = and i32 %236, 2147483647
  %238 = and i32 %233, -2147483648
  %239 = or i32 %237, %238
  store i32 %239, i32* %232, align 8
  %240 = load i32, i32* %235, align 8
  %241 = and i32 %240, -2147483648
  %242 = or i32 %241, %234
  store i32 %242, i32* %235, align 8
  %243 = getelementptr inbounds %"class.WTF::HashTable.174", %"class.WTF::HashTable.174"* %0, i64 0, i32 2
  %244 = load i32, i32* %243, align 4
  %245 = add i32 %244, 1
  store i32 %245, i32* %243, align 4
  %246 = getelementptr inbounds %"class.WTF::HashTable.174", %"class.WTF::HashTable.174"* %0, i64 0, i32 3
  %247 = load i32, i32* %246, align 8
  %248 = add i32 %247, %245
  %249 = shl i32 %248, 1
  %250 = load i32, i32* %13, align 8
  %251 = icmp ult i32 %249, %250
  br i1 %251, label %254, label %252

252:                                              ; preds = %215
  %253 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_NS_7HashMapIjNSt3__110unique_ptrINS1_16FontPlatformDataENS5_14default_deleteIS7_EEEENS_7IntHashIjEENS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsISA_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINSF_IS2_EENSF_ISI_EEEESN_SH_E6ExpandEPSJ_(%"class.WTF::HashTable.174"* %0, %"struct.WTF::KeyValuePair"* %175)
  br label %254

254:                                              ; preds = %110, %215, %252
  %255 = phi i8 [ 1, %215 ], [ 1, %252 ], [ 0, %110 ]
  %256 = phi %"struct.WTF::KeyValuePair"* [ %175, %215 ], [ %253, %252 ], [ %44, %110 ]
  %257 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %256, 0
  %258 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %257, i8 %255, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %258
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_NS_7HashMapIjNSt3__110unique_ptrINS1_16FontPlatformDataENS5_14default_deleteIS7_EEEENS_7IntHashIjEENS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsISA_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINSF_IS2_EENSF_ISI_EEEESN_SH_E6ExpandEPSJ_(%"class.WTF::HashTable.174"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.174", %"class.WTF::HashTable.174"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.174", %"class.WTF::HashTable.174"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #17
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #17
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20, i64 0, i64 0), i8* %22, i8* %23) #17
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.21, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #17
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #17
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #17
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_NS_7HashMapIjNSt3__110unique_ptrINS1_16FontPlatformDataENS5_14default_deleteIS7_EEEENS_7IntHashIjEENS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsISA_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINSF_IS2_EENSF_ISI_EEEESN_SH_E13AllocateTableEj(i32 %32) #17
  %34 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_NS_7HashMapIjNSt3__110unique_ptrINS1_16FontPlatformDataENS5_14default_deleteIS7_EEEENS_7IntHashIjEENS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsISA_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINSF_IS2_EENSF_ISI_EEEESN_SH_E8RehashToEPSJ_jSR_(%"class.WTF::HashTable.174"* %0, %"struct.WTF::KeyValuePair"* %33, i32 %32, %"struct.WTF::KeyValuePair"* %1) #17
  ret %"struct.WTF::KeyValuePair"* %34
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_NS_7HashMapIjNSt3__110unique_ptrINS1_16FontPlatformDataENS5_14default_deleteIS7_EEEENS_7IntHashIjEENS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsISA_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINSF_IS2_EENSF_ISI_EEEESN_SH_E13AllocateTableEj(i32) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.WTF::KeyValuePair", align 8
  %3 = zext i32 %0 to i64
  %4 = mul nuw nsw i64 %3, 104
  %5 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %4, i8* getelementptr inbounds ([434 x i8], [434 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink12FontCacheKeyENS_7HashMapIjNSt3__110unique_ptrINS2_16FontPlatformDataENS5_14default_deleteIS7_EEEENS_7IntHashIjEENS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsISA_EENS_18PartitionAllocatorEEEEEEEPKcv, i64 0, i64 0)) #17
  %6 = bitcast i8* %5 to %"struct.WTF::KeyValuePair"*
  %7 = icmp eq i32 %0, 0
  br i1 %7, label %26, label %8

8:                                                ; preds = %1
  %9 = bitcast %"struct.WTF::KeyValuePair"* %2 to i8*
  %10 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %2, i64 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %2, i64 0, i32 0, i32 6
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %2, i64 0, i32 1
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %2, i64 0, i32 1, i32 0, i32 1
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %2, i64 0, i32 1, i32 0, i32 2
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %2, i64 0, i32 1, i32 0, i32 3
  %17 = bitcast %"class.WTF::HashMap.194"* %13 to i64*
  %18 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 1
  %19 = bitcast %"class.WTF::AtomicString"* %18 to i8*
  %20 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 0, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %2, i64 0, i32 0, i32 0, i32 2
  %22 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %2, i64 0, i32 0, i32 1
  %24 = bitcast i32* %23 to i8*
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %2, i64 0, i32 0, i32 5, i32 0
  br label %27

26:                                               ; preds = %27, %1
  ret %"struct.WTF::KeyValuePair"* %6

27:                                               ; preds = %27, %8
  %28 = phi i64 [ 0, %8 ], [ %46, %27 ]
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %9) #17
  store i32 0, i32* %10, align 8, !alias.scope !12
  store i8 0, i8* %12, align 8, !alias.scope !12
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 44, i1 false) #17
  store atomic i64 0, i64* %17 monotonic, align 8, !alias.scope !12
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 %28, i32 0, i32 0, i32 0
  store i32 0, i32* %29, align 8
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 %28, i32 0, i32 0, i32 1
  %31 = bitcast %"class.WTF::AtomicString"* %30 to i64*
  store i64 0, i64* %31, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %20, align 8
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 %28, i32 0, i32 0, i32 2
  %33 = bitcast %"class.std::__1::basic_string"* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %22, i64 24, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 24, i1 false) #17
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 %28, i32 0, i32 0, i32 3
  %35 = bitcast i32* %34 to i64*
  store i64 0, i64* %35, align 8
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 %28, i32 0, i32 1
  %37 = bitcast i32* %36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %24, i64 12, i1 false) #17
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 %28, i32 0, i32 5
  %39 = bitcast %class.scoped_refptr.188* %38 to i64*
  store i64 0, i64* %39, align 8
  store %"class.blink::FontVariationSettings"* null, %"class.blink::FontVariationSettings"** %25, align 8
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 %28, i32 0, i32 6
  store i8 0, i8* %40, align 8
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 %28, i32 1
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 %28, i32 1, i32 0, i32 1
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 %28, i32 1, i32 0, i32 2
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 %28, i32 1, i32 0, i32 3
  %45 = bitcast %"class.WTF::HashMap.194"* %41 to i64*
  store i64 0, i64* %45, align 8
  store atomic i64 0, i64* %17 monotonic, align 8
  store atomic i64 0, i64* %45 monotonic, align 8
  store i32 0, i32* %42, align 4
  store i32 0, i32* %14, align 8
  store i32 0, i32* %43, align 4
  store i32 0, i32* %15, align 4
  store i32 0, i32* %44, align 8
  store i32 0, i32* %16, align 8
  call void @_ZN3WTF12KeyValuePairIN5blink12FontCacheKeyENS_7HashMapIjNSt3__110unique_ptrINS1_16FontPlatformDataENS4_14default_deleteIS6_EEEENS_7IntHashIjEENS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIS9_EENS_18PartitionAllocatorEEEED2Ev(%"struct.WTF::KeyValuePair"* nonnull %2) #17
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %9) #17
  %46 = add nuw nsw i64 %28, 1
  %47 = icmp eq i64 %46, %3
  br i1 %47, label %26, label %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_NS_7HashMapIjNSt3__110unique_ptrINS1_16FontPlatformDataENS5_14default_deleteIS7_EEEENS_7IntHashIjEENS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsISA_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINSF_IS2_EENSF_ISI_EEEESN_SH_E8RehashToEPSJ_jSR_(%"class.WTF::HashTable.174"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.174", align 8
  %6 = bitcast %"class.WTF::HashTable.174"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #17
  %7 = getelementptr inbounds %"class.WTF::HashTable.174", %"class.WTF::HashTable.174"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.174", %"class.WTF::HashTable.174"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.174", %"class.WTF::HashTable.174"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.174", %"class.WTF::HashTable.174"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.174"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair"* %1, %"struct.WTF::KeyValuePair"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.174", %"class.WTF::HashTable.174"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.174", %"class.WTF::HashTable.174"* %0, i64 0, i32 0
  br i1 %14, label %16, label %55

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.174"* %5 to i64*
  br label %22

19:                                               ; preds = %136
  %20 = bitcast %"class.WTF::HashTable.174"* %5 to i64*
  %21 = load i64, i64* %20, align 8
  br label %22

22:                                               ; preds = %16, %19
  %23 = phi i64* [ %18, %16 ], [ %20, %19 ]
  %24 = phi i64 [ %17, %16 ], [ %21, %19 ]
  %25 = phi %"struct.WTF::KeyValuePair"* [ null, %16 ], [ %137, %19 ]
  %26 = phi i32 [ 0, %16 ], [ %138, %19 ]
  %27 = bitcast %"class.WTF::HashTable.174"* %0 to i64*
  %28 = load i64, i64* %27, align 8
  store atomic i64 %24, i64* %27 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %28, i64* %23, align 8
  store i32 %26, i32* %8, align 8
  %29 = inttoptr i64 %28 to %"struct.WTF::KeyValuePair"*
  %30 = icmp eq i64 %28, 0
  br i1 %30, label %51, label %31

31:                                               ; preds = %22
  %32 = icmp eq i32 %26, 0
  br i1 %32, label %49, label %33

33:                                               ; preds = %31
  %34 = zext i32 %26 to i64
  br label %35

35:                                               ; preds = %46, %33
  %36 = phi i64 [ 0, %33 ], [ %47, %46 ]
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %29, i64 %36
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %29, i64 %36, i32 0, i32 1
  %39 = load i32, i32* %38, align 8
  %40 = icmp eq i32 %39, -1
  br i1 %40, label %41, label %45

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %29, i64 %36, i32 0, i32 3
  %43 = load float, float* %42, align 8
  %44 = fcmp oeq float %43, 0x47EFFFFFE0000000
  br i1 %44, label %46, label %45

45:                                               ; preds = %41, %35
  call void @_ZN3WTF12KeyValuePairIN5blink12FontCacheKeyENS_7HashMapIjNSt3__110unique_ptrINS1_16FontPlatformDataENS4_14default_deleteIS6_EEEENS_7IntHashIjEENS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIS9_EENS_18PartitionAllocatorEEEED2Ev(%"struct.WTF::KeyValuePair"* %37) #17
  br label %46

46:                                               ; preds = %45, %41
  %47 = add nuw nsw i64 %36, 1
  %48 = icmp eq i64 %47, %34
  br i1 %48, label %49, label %35

49:                                               ; preds = %46, %31
  %50 = inttoptr i64 %28 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %50) #17
  store atomic i64 0, i64* %23 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %51

51:                                               ; preds = %22, %49
  %52 = getelementptr inbounds %"class.WTF::HashTable.174", %"class.WTF::HashTable.174"* %0, i64 0, i32 3
  %53 = load i32, i32* %52, align 8
  %54 = and i32 %53, -2147483648
  store i32 %54, i32* %52, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #17
  ret %"struct.WTF::KeyValuePair"* %25

55:                                               ; preds = %4, %136
  %56 = phi %"struct.WTF::KeyValuePair"* [ %137, %136 ], [ null, %4 ]
  %57 = phi i32 [ %138, %136 ], [ 0, %4 ]
  %58 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %59 = zext i32 %57 to i64
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %58, i64 %59, i32 0
  %61 = call zeroext i1 @_ZN3WTF27HashTraitsEmptyValueCheckerINS_10HashTraitsIN5blink12FontCacheKeyEEELb0EE12IsEmptyValueIS3_EEbRKT_(%"struct.blink::FontCacheKey"* dereferenceable(80) %60) #17
  br i1 %61, label %136, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %58, i64 %59, i32 0, i32 1
  %64 = load i32, i32* %63, align 8
  %65 = icmp eq i32 %64, -1
  br i1 %65, label %66, label %70

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %58, i64 %59, i32 0, i32 3
  %68 = load float, float* %67, align 8
  %69 = fcmp oeq float %68, 0x47EFFFFFE0000000
  br i1 %69, label %136, label %70

70:                                               ; preds = %62, %66
  %71 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %71, i64 %59
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %72, i64 0, i32 0
  %74 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_NS_7HashMapIjNSt3__110unique_ptrINS1_16FontPlatformDataENS5_14default_deleteIS7_EEEENS_7IntHashIjEENS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsISA_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINSF_IS2_EENSF_ISI_EEEESN_SH_E16LookupForWritingINS_22IdentityHashTranslatorISL_SP_SH_EES2_EENS5_4pairIPSJ_bEERKT0_(%"class.WTF::HashTable.174"* nonnull %5, %"struct.blink::FontCacheKey"* dereferenceable(80) %73) #17
  %75 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %74, 0
  call void @_ZN3WTF12KeyValuePairIN5blink12FontCacheKeyENS_7HashMapIjNSt3__110unique_ptrINS1_16FontPlatformDataENS4_14default_deleteIS6_EEEENS_7IntHashIjEENS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIS9_EENS_18PartitionAllocatorEEEED2Ev(%"struct.WTF::KeyValuePair"* %75) #17
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %75, i64 0, i32 0, i32 0, i32 0
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %72, i64 0, i32 0, i32 0, i32 0
  %78 = load i32, i32* %77, align 8
  store i32 %78, i32* %76, align 8
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %75, i64 0, i32 0, i32 0, i32 1
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %71, i64 %59, i32 0, i32 0, i32 1
  %81 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.WTF::AtomicString"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %"class.WTF::AtomicString"* %79 to i64*
  store i64 %83, i64* %84, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %81, align 8
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %75, i64 0, i32 0, i32 0, i32 2
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %71, i64 %59, i32 0, i32 0, i32 2
  %87 = bitcast %"class.std::__1::basic_string"* %85 to i8*
  %88 = bitcast %"class.std::__1::basic_string"* %86 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %87, i8* align 8 %88, i64 24, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %88, i8 0, i64 24, i1 false) #17
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %75, i64 0, i32 0, i32 0, i32 3
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %71, i64 %59, i32 0, i32 0, i32 3
  %91 = bitcast i32* %90 to i64*
  %92 = bitcast i32* %89 to i64*
  %93 = load i64, i64* %91, align 8
  store i64 %93, i64* %92, align 8
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %75, i64 0, i32 0, i32 1
  %95 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %71, i64 %59, i32 0, i32 1
  %96 = bitcast i32* %94 to i8*
  %97 = bitcast i32* %95 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %96, i8* align 8 %97, i64 12, i1 false) #17
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %75, i64 0, i32 0, i32 5
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %71, i64 %59, i32 0, i32 5
  %100 = getelementptr inbounds %class.scoped_refptr.188, %class.scoped_refptr.188* %99, i64 0, i32 0
  %101 = bitcast %class.scoped_refptr.188* %99 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = bitcast %class.scoped_refptr.188* %98 to i64*
  store i64 %102, i64* %103, align 8
  store %"class.blink::FontVariationSettings"* null, %"class.blink::FontVariationSettings"** %100, align 8
  %104 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %75, i64 0, i32 0, i32 6
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %71, i64 %59, i32 0, i32 6
  %106 = load i8, i8* %105, align 8, !range !7
  store i8 %106, i8* %104, align 8
  %107 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %75, i64 0, i32 1
  %108 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %71, i64 %59, i32 1
  %109 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %75, i64 0, i32 1, i32 0, i32 1
  %110 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %75, i64 0, i32 1, i32 0, i32 2
  %111 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %75, i64 0, i32 1, i32 0, i32 3
  %112 = bitcast %"class.WTF::HashMap.194"* %108 to i64*
  %113 = bitcast %"class.WTF::HashMap.194"* %107 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %113, i8 0, i64 20, i1 false) #17
  %114 = load i64, i64* %112, align 8
  %115 = bitcast %"class.WTF::HashMap.194"* %107 to i64*
  store atomic i64 0, i64* %112 monotonic, align 8
  store atomic i64 %114, i64* %115 monotonic, align 8
  %116 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %71, i64 %59, i32 1, i32 0, i32 1
  %117 = load i32, i32* %109, align 4
  %118 = load i32, i32* %116, align 4
  store i32 %118, i32* %109, align 4
  store i32 %117, i32* %116, align 4
  %119 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %71, i64 %59, i32 1, i32 0, i32 2
  %120 = load i32, i32* %110, align 4
  %121 = load i32, i32* %119, align 4
  store i32 %121, i32* %110, align 4
  store i32 %120, i32* %119, align 4
  %122 = load i32, i32* %111, align 8
  %123 = and i32 %122, 2147483647
  %124 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %71, i64 %59, i32 1, i32 0, i32 3
  %125 = load i32, i32* %124, align 8
  %126 = and i32 %125, 2147483647
  %127 = and i32 %122, -2147483648
  %128 = or i32 %126, %127
  store i32 %128, i32* %111, align 8
  %129 = load i32, i32* %124, align 8
  %130 = and i32 %129, -2147483648
  %131 = or i32 %130, %123
  store i32 %131, i32* %124, align 8
  %132 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %133 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %132, i64 %59
  %134 = icmp eq %"struct.WTF::KeyValuePair"* %133, %3
  %135 = select i1 %134, %"struct.WTF::KeyValuePair"* %75, %"struct.WTF::KeyValuePair"* %56
  br label %136

136:                                              ; preds = %55, %66, %70
  %137 = phi %"struct.WTF::KeyValuePair"* [ %56, %66 ], [ %135, %70 ], [ %56, %55 ]
  %138 = add i32 %57, 1
  %139 = load i32, i32* %12, align 8
  %140 = icmp eq i32 %138, %139
  br i1 %140, label %19, label %55
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12KeyValuePairIN5blink12FontCacheKeyENS_7HashMapIjNSt3__110unique_ptrINS1_16FontPlatformDataENS4_14default_deleteIS6_EEEENS_7IntHashIjEENS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIS9_EENS_18PartitionAllocatorEEEED2Ev(%"struct.WTF::KeyValuePair"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"struct.WTF::KeyValuePair.198"*, %"struct.WTF::KeyValuePair.198"** %2, align 8
  %4 = icmp eq %"struct.WTF::KeyValuePair.198"* %3, null
  br i1 %4, label %27, label %5, !prof !6

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %25, label %9

9:                                                ; preds = %5
  %10 = zext i32 %7 to i64
  br label %11

11:                                               ; preds = %22, %9
  %12 = phi i64 [ 0, %9 ], [ %23, %22 ]
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %3, i64 %12, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, -2
  br i1 %15, label %22, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %3, i64 %12, i32 1, i32 0, i32 0, i32 0
  %18 = load %"class.blink::FontPlatformData"*, %"class.blink::FontPlatformData"** %17, align 8
  store %"class.blink::FontPlatformData"* null, %"class.blink::FontPlatformData"** %17, align 8
  %19 = icmp eq %"class.blink::FontPlatformData"* %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %16
  tail call void @_ZN5blink16FontPlatformDataD1Ev(%"class.blink::FontPlatformData"* nonnull %18) #17
  %21 = bitcast %"class.blink::FontPlatformData"* %18 to i8*
  tail call void @free(i8* %21) #17
  br label %22

22:                                               ; preds = %20, %16, %11
  %23 = add nuw nsw i64 %12, 1
  %24 = icmp eq i64 %23, %10
  br i1 %24, label %25, label %11

25:                                               ; preds = %22, %5
  %26 = bitcast %"struct.WTF::KeyValuePair.198"* %3 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #17
  store %"struct.WTF::KeyValuePair.198"* null, %"struct.WTF::KeyValuePair.198"** %2, align 8
  br label %27

27:                                               ; preds = %1, %25
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 0, i32 5, i32 0
  %29 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %28, align 8
  %30 = icmp eq %"class.blink::FontVariationSettings"* %29, null
  br i1 %30, label %51, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %29, i64 0, i32 1, i32 0
  %33 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %32, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %33) #17
  %34 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %32, i64 0, i32 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %51

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %32, i64 -4
  %39 = bitcast %"class.base::RefCounted"* %38 to %"class.blink::FontTagValuePair"**
  %40 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %39, align 8
  %41 = icmp eq %"class.blink::FontTagValuePair"* %40, null
  %42 = bitcast %"class.blink::FontTagValuePair"* %40 to i8*
  br i1 %41, label %49, label %43, !prof !6

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %32, i64 -1, i32 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %48, label %47, !prof !5

47:                                               ; preds = %43
  store i32 0, i32* %44, align 4
  br label %48

48:                                               ; preds = %47, %43
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %42) #17
  br label %49

49:                                               ; preds = %48, %37
  %50 = bitcast %"class.base::RefCounted"* %38 to i8*
  tail call void @free(i8* %50) #17
  br label %51

51:                                               ; preds = %49, %31, %27
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 0, i32 0, i32 2
  %53 = bitcast %"class.std::__1::basic_string"* %52 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %53, i64 0, i32 1, i32 0
  %55 = load i8, i8* %54, align 1
  %56 = icmp slt i8 %55, 0
  br i1 %56, label %57, label %60

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8
  tail call void @_ZdlPv(i8* %59) #18
  br label %60

60:                                               ; preds = %57, %51
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %77, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %64
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %64
  %74 = phi i32 [ %72, %71 ], [ %70, %64 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #17
  br label %77

77:                                               ; preds = %60, %73, %76
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF27HashTraitsEmptyValueCheckerINS_10HashTraitsIN5blink12FontCacheKeyEEELb0EE12IsEmptyValueIS3_EEbRKT_(%"struct.blink::FontCacheKey"* dereferenceable(80)) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.blink::FontCacheKey", align 8
  %3 = bitcast %"struct.blink::FontCacheKey"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %3) #17
  %4 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %2, i64 0, i32 0, i32 0
  store i32 0, i32* %4, align 8, !alias.scope !15
  %5 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %2, i64 0, i32 0, i32 1
  %6 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %2, i64 0, i32 5, i32 0
  store %"class.blink::FontVariationSettings"* null, %"class.blink::FontVariationSettings"** %6, align 8, !alias.scope !15
  %7 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %2, i64 0, i32 6
  store i8 0, i8* %7, align 8, !alias.scope !15
  %8 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 52, i1 false) #17, !alias.scope !15
  %9 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %0, i64 0, i32 5, i32 0
  %10 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %9, align 8
  %11 = icmp ne %"class.blink::FontVariationSettings"* %10, null
  %12 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %0, i64 0, i32 0
  %13 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %2, i64 0, i32 0
  %14 = call zeroext i1 @_ZNK5blink22FontFaceCreationParamseqERKS0_(%"class.blink::FontFaceCreationParams"* %12, %"class.blink::FontFaceCreationParams"* nonnull dereferenceable(48) %13) #17
  br i1 %14, label %15, label %39

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %0, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %2, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %17, %19
  br i1 %20, label %21, label %39

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %2, i64 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %23, %25
  br i1 %26, label %27, label %39

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %0, i64 0, i32 3
  %29 = load float, float* %28, align 8
  %30 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %2, i64 0, i32 3
  %31 = load float, float* %30, align 8
  %32 = fcmp une float %29, %31
  %33 = or i1 %11, %32
  br i1 %33, label %39, label %34

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %0, i64 0, i32 6
  %36 = load i8, i8* %35, align 8, !range !7
  %37 = load i8, i8* %7, align 8, !range !7
  %38 = icmp eq i8 %36, %37
  br label %39

39:                                               ; preds = %1, %15, %21, %27, %34
  %40 = phi i1 [ false, %27 ], [ false, %21 ], [ false, %15 ], [ false, %1 ], [ %38, %34 ]
  %41 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %6, align 8
  %42 = icmp eq %"class.blink::FontVariationSettings"* %41, null
  br i1 %42, label %63, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %41, i64 0, i32 1, i32 0
  %45 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %44, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %45) #17
  %46 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %44, i64 0, i32 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %63

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %44, i64 -4
  %51 = bitcast %"class.base::RefCounted"* %50 to %"class.blink::FontTagValuePair"**
  %52 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %51, align 8
  %53 = icmp eq %"class.blink::FontTagValuePair"* %52, null
  %54 = bitcast %"class.blink::FontTagValuePair"* %52 to i8*
  br i1 %53, label %61, label %55, !prof !6

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %44, i64 -1, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %60, label %59, !prof !5

59:                                               ; preds = %55
  store i32 0, i32* %56, align 4
  br label %60

60:                                               ; preds = %59, %55
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %54) #17
  br label %61

61:                                               ; preds = %60, %49
  %62 = bitcast %"class.base::RefCounted"* %50 to i8*
  call void @free(i8* %62) #17
  br label %63

63:                                               ; preds = %61, %43, %39
  %64 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %2, i64 0, i32 0, i32 2
  %65 = bitcast %"class.std::__1::basic_string"* %64 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = load i8, i8* %66, align 1
  %68 = icmp slt i8 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %64, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  call void @_ZdlPv(i8* %71) #18
  br label %72

72:                                               ; preds = %69, %63
  %73 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %2, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %75, label %89, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = and i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  br i1 %80, label %83, label %85

83:                                               ; preds = %76
  %84 = add i32 %82, -1
  store i32 %84, i32* %81, align 4
  br label %85

85:                                               ; preds = %83, %76
  %86 = phi i32 [ %84, %83 ], [ %82, %76 ]
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %89

88:                                               ; preds = %85
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %74) #17
  br label %89

89:                                               ; preds = %72, %85, %88
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %3) #17
  ret i1 %40
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink22FontFaceCreationParamseqERKS0_(%"class.blink::FontFaceCreationParams"*, %"class.blink::FontFaceCreationParams"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %6, %8
  %10 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #17
  %11 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #17
  br i1 %9, label %12, label %112

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %16, label %20

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %17, align 8
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %19 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %18, i64* %19, align 8
  br label %27

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %14, %"class.WTF::StringImpl"** %21, align 8
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 1
  %25 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %26 = bitcast i8** %25 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %24, %"class.WTF::StringImpl"** %26, align 8
  br label %27

27:                                               ; preds = %16, %20
  %28 = phi i32 [ %23, %20 ], [ 0, %16 ]
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %28, i32* %29, align 8
  %30 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %37

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %34, align 8
  %35 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %36 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %35, i64* %36, align 8
  br label %44

37:                                               ; preds = %27
  %38 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %31, %"class.WTF::StringImpl"** %38, align 8
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %43 = bitcast i8** %42 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %41, %"class.WTF::StringImpl"** %43, align 8
  br label %44

44:                                               ; preds = %33, %37
  %45 = phi i32 [ %40, %37 ], [ 0, %33 ]
  %46 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %45, i32* %46, align 8
  %47 = call zeroext i1 @_ZN3WTF27DeprecatedEqualIgnoringCaseERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #17
  br i1 %47, label %48, label %112

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %0, i64 0, i32 2
  %50 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %1, i64 0, i32 2
  %51 = bitcast %"class.std::__1::basic_string"* %49 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  %55 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %56 = load i64, i64* %55, align 8
  %57 = zext i8 %53 to i64
  %58 = select i1 %54, i64 %56, i64 %57
  %59 = bitcast %"class.std::__1::basic_string"* %50 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  %61 = load i8, i8* %60, align 1
  %62 = icmp slt i8 %61, 0
  %63 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %64 = load i64, i64* %63, align 8
  %65 = zext i8 %61 to i64
  %66 = select i1 %62, i64 %64, i64 %65
  %67 = icmp eq i64 %58, %66
  br i1 %67, label %68, label %112

68:                                               ; preds = %48
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load i8*, i8** %69, align 8
  %71 = bitcast %"class.std::__1::basic_string"* %49 to i8*
  %72 = select i1 %54, i8* %70, i8* %71
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  %75 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  %76 = select i1 %62, i8* %74, i8* %75
  %77 = icmp eq i64 %58, 0
  br i1 %54, label %84, label %78

78:                                               ; preds = %68
  br i1 %77, label %100, label %79

79:                                               ; preds = %78
  %80 = ptrtoint i8* %70 to i64
  %81 = trunc i64 %80 to i8
  %82 = load i8, i8* %76, align 1
  %83 = icmp eq i8 %82, %81
  br i1 %83, label %85, label %112

84:                                               ; preds = %68
  br i1 %77, label %100, label %97

85:                                               ; preds = %79, %92
  %86 = phi i64 [ %89, %92 ], [ %57, %79 ]
  %87 = phi i8* [ %90, %92 ], [ %71, %79 ]
  %88 = phi i8* [ %93, %92 ], [ %76, %79 ]
  %89 = add i64 %86, -1
  %90 = getelementptr inbounds i8, i8* %87, i64 1
  %91 = icmp eq i64 %89, 0
  br i1 %91, label %100, label %92

92:                                               ; preds = %85
  %93 = getelementptr inbounds i8, i8* %88, i64 1
  %94 = load i8, i8* %90, align 1
  %95 = load i8, i8* %93, align 1
  %96 = icmp eq i8 %94, %95
  br i1 %96, label %85, label %112

97:                                               ; preds = %84
  %98 = call i32 @bcmp(i8* %72, i8* %76, i64 %58) #17
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %112

100:                                              ; preds = %85, %78, %84, %97
  %101 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %0, i64 0, i32 3
  %102 = load i32, i32* %101, align 8
  %103 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %1, i64 0, i32 3
  %104 = load i32, i32* %103, align 8
  %105 = icmp eq i32 %102, %104
  br i1 %105, label %106, label %112

106:                                              ; preds = %100
  %107 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %0, i64 0, i32 4
  %108 = load i32, i32* %107, align 4
  %109 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %1, i64 0, i32 4
  %110 = load i32, i32* %109, align 4
  %111 = icmp eq i32 %108, %110
  br label %112

112:                                              ; preds = %92, %79, %48, %106, %100, %97, %44, %2
  %113 = phi i1 [ false, %100 ], [ false, %97 ], [ false, %44 ], [ false, %2 ], [ %111, %106 ], [ false, %48 ], [ false, %79 ], [ false, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #17
  ret i1 %113
}

declare zeroext i1 @_ZN3WTF27DeprecatedEqualIgnoringCaseERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_NS_7HashMapIjNSt3__110unique_ptrINS1_16FontPlatformDataENS5_14default_deleteIS7_EEEENS_7IntHashIjEENS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsISA_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINSF_IS2_EENSF_ISI_EEEESN_SH_E16LookupForWritingINS_22IdentityHashTranslatorISL_SP_SH_EES2_EENS5_4pairIPSJ_bEERKT0_(%"class.WTF::HashTable.174"*, %"struct.blink::FontCacheKey"* dereferenceable(80)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.174", %"class.WTF::HashTable.174"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.174", %"class.WTF::HashTable.174"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = tail call i32 @_ZN5blink16FontCacheKeyHash7GetHashERKNS_12FontCacheKeyE(%"struct.blink::FontCacheKey"* dereferenceable(80) %1) #17
  %10 = and i32 %9, %7
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %11
  %13 = ptrtoint %"struct.WTF::KeyValuePair"* %12 to i64
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %12, i64 0, i32 0
  %15 = tail call zeroext i1 @_ZN3WTF27HashTraitsEmptyValueCheckerINS_10HashTraitsIN5blink12FontCacheKeyEEELb0EE12IsEmptyValueIS3_EEbRKT_(%"struct.blink::FontCacheKey"* dereferenceable(80) %14) #17
  br i1 %15, label %38, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 5, i32 0
  %18 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 0
  %19 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 1
  %20 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 2
  %21 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 3
  %22 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 6
  %23 = xor i32 %9, -1
  %24 = lshr i32 %9, 23
  %25 = add i32 %24, %23
  %26 = shl i32 %25, 12
  %27 = xor i32 %26, %25
  %28 = lshr i32 %27, 7
  %29 = xor i32 %28, %27
  %30 = shl i32 %29, 2
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 20
  %33 = xor i32 %32, %31
  %34 = or i32 %33, 1
  %35 = zext i32 %34 to i64
  br label %44

36:                                               ; preds = %124
  %37 = ptrtoint %"struct.WTF::KeyValuePair"* %130 to i64
  br label %38

38:                                               ; preds = %36, %2
  %39 = phi i64 [ %13, %2 ], [ %37, %36 ]
  %40 = phi %"struct.WTF::KeyValuePair"* [ null, %2 ], [ %125, %36 ]
  %41 = icmp eq %"struct.WTF::KeyValuePair"* %40, null
  %42 = ptrtoint %"struct.WTF::KeyValuePair"* %40 to i64
  %43 = select i1 %41, i64 %39, i64 %42
  br label %134

44:                                               ; preds = %16, %124
  %45 = phi %"struct.WTF::KeyValuePair"* [ null, %16 ], [ %125, %124 ]
  %46 = phi i64 [ %13, %16 ], [ %131, %124 ]
  %47 = phi i64 [ %11, %16 ], [ %129, %124 ]
  %48 = phi i64 [ 0, %16 ], [ %127, %124 ]
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %47, i32 0, i32 5, i32 0
  %50 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %49, align 8
  %51 = icmp eq %"class.blink::FontVariationSettings"* %50, null
  %52 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %17, align 8
  %53 = icmp ne %"class.blink::FontVariationSettings"* %52, null
  %54 = xor i1 %53, true
  %55 = or i1 %51, %54
  %56 = xor i1 %51, true
  %57 = or i1 %53, %56
  br i1 %55, label %91, label %58

58:                                               ; preds = %44
  %59 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %60, %62
  br i1 %63, label %64, label %91

64:                                               ; preds = %58
  %65 = icmp eq i32 %60, 0
  br i1 %65, label %91, label %66

66:                                               ; preds = %64
  %67 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %69, align 8
  %71 = zext i32 %60 to i64
  %72 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %68, i64 %71
  br label %73

73:                                               ; preds = %87, %66
  %74 = phi %"class.blink::FontTagValuePair"* [ %89, %87 ], [ %70, %66 ]
  %75 = phi %"class.blink::FontTagValuePair"* [ %88, %87 ], [ %68, %66 ]
  %76 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %75, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %74, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %77, %79
  br i1 %80, label %81, label %91

81:                                               ; preds = %73
  %82 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %75, i64 0, i32 1
  %83 = load float, float* %82, align 4
  %84 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %74, i64 0, i32 1
  %85 = load float, float* %84, align 4
  %86 = fcmp oeq float %83, %85
  br i1 %86, label %87, label %91

87:                                               ; preds = %81
  %88 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %75, i64 1
  %89 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %74, i64 1
  %90 = icmp eq %"class.blink::FontTagValuePair"* %88, %72
  br i1 %90, label %91, label %73

91:                                               ; preds = %87, %81, %73, %64, %58, %44
  %92 = phi i1 [ true, %58 ], [ false, %64 ], [ %57, %44 ], [ true, %81 ], [ false, %87 ], [ true, %73 ]
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %47, i32 0, i32 0
  %94 = tail call zeroext i1 @_ZNK5blink22FontFaceCreationParamseqERKS0_(%"class.blink::FontFaceCreationParams"* %93, %"class.blink::FontFaceCreationParams"* dereferenceable(48) %18) #17
  %95 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %47, i32 0, i32 1
  %96 = load i32, i32* %95, align 8
  br i1 %94, label %97, label %116

97:                                               ; preds = %91
  %98 = load i32, i32* %19, align 8
  %99 = icmp eq i32 %96, %98
  br i1 %99, label %100, label %116

100:                                              ; preds = %97
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %47, i32 0, i32 2
  %102 = load i32, i32* %101, align 4
  %103 = load i32, i32* %20, align 4
  %104 = icmp eq i32 %102, %103
  br i1 %104, label %105, label %116

105:                                              ; preds = %100
  %106 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %47, i32 0, i32 3
  %107 = load float, float* %106, align 8
  %108 = load float, float* %21, align 8
  %109 = fcmp une float %107, %108
  %110 = or i1 %92, %109
  br i1 %110, label %116, label %111

111:                                              ; preds = %105
  %112 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %47, i32 0, i32 6
  %113 = load i8, i8* %112, align 8, !range !7
  %114 = load i8, i8* %22, align 8, !range !7
  %115 = icmp eq i8 %113, %114
  br i1 %115, label %134, label %116

116:                                              ; preds = %91, %97, %100, %105, %111
  %117 = icmp eq i32 %96, -1
  br i1 %117, label %118, label %124

118:                                              ; preds = %116
  %119 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %47, i32 0, i32 3
  %120 = load float, float* %119, align 8
  %121 = fcmp oeq float %120, 0x47EFFFFFE0000000
  br i1 %121, label %122, label %124

122:                                              ; preds = %118
  %123 = inttoptr i64 %46 to %"struct.WTF::KeyValuePair"*
  br label %124

124:                                              ; preds = %116, %118, %122
  %125 = phi %"struct.WTF::KeyValuePair"* [ %45, %116 ], [ %45, %118 ], [ %123, %122 ]
  %126 = icmp eq i64 %48, 0
  %127 = select i1 %126, i64 %35, i64 %48
  %128 = add i64 %127, %47
  %129 = and i64 %128, %8
  %130 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %129
  %131 = ptrtoint %"struct.WTF::KeyValuePair"* %130 to i64
  %132 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %130, i64 0, i32 0
  %133 = tail call zeroext i1 @_ZN3WTF27HashTraitsEmptyValueCheckerINS_10HashTraitsIN5blink12FontCacheKeyEEELb0EE12IsEmptyValueIS3_EEbRKT_(%"struct.blink::FontCacheKey"* dereferenceable(80) %132) #17
  br i1 %133, label %36, label %44

134:                                              ; preds = %111, %38
  %135 = phi i64 [ %43, %38 ], [ %46, %111 ]
  %136 = phi i8 [ 0, %38 ], [ 1, %111 ]
  %137 = inttoptr i64 %135 to %"struct.WTF::KeyValuePair"*
  %138 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %137, 0
  %139 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %138, i8 %136, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %139
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN5blink16FontCacheKeyHash7GetHashERKNS_12FontCacheKeyE(%"struct.blink::FontCacheKey"* dereferenceable(80)) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %0, i64 0, i32 3
  %3 = load float, float* %2, align 8
  %4 = fmul float %3, 1.000000e+03
  %5 = fptoui float %4 to i32
  %6 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %0, i64 0, i32 0
  %7 = tail call i32 @_ZNK5blink22FontFaceCreationParams7GetHashEv(%"class.blink::FontFaceCreationParams"* %6) #17
  %8 = lshr i32 %7, 16
  %9 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = lshr i32 %10, 16
  %12 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %0, i64 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = lshr i32 %13, 16
  %15 = lshr i32 %5, 16
  %16 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %0, i64 0, i32 5, i32 0
  %17 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %16, align 8
  %18 = icmp eq %"class.blink::FontVariationSettings"* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %1
  %20 = tail call i32 @_ZNK5blink21FontVariationSettings7GetHashEv(%"class.blink::FontVariationSettings"* nonnull %17) #17
  %21 = zext i32 %20 to i64
  br label %22

22:                                               ; preds = %1, %19
  %23 = phi i64 [ %21, %19 ], [ 0, %1 ]
  %24 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %0, i64 0, i32 6
  %25 = load i8, i8* %24, align 8, !range !7
  %26 = and i32 %7, 65535
  %27 = add nuw nsw i32 %26, -1640531527
  %28 = shl i32 %27, 16
  %29 = shl nuw nsw i32 %8, 11
  %30 = xor i32 %29, %27
  %31 = xor i32 %30, %28
  %32 = lshr i32 %31, 11
  %33 = and i32 %10, 65535
  %34 = add i32 %31, %33
  %35 = add i32 %34, %32
  %36 = shl i32 %35, 16
  %37 = shl nuw nsw i32 %11, 11
  %38 = xor i32 %35, %37
  %39 = xor i32 %38, %36
  %40 = lshr i32 %39, 11
  %41 = and i32 %13, 65535
  %42 = add i32 %39, %41
  %43 = add i32 %42, %40
  %44 = shl i32 %43, 16
  %45 = shl nuw nsw i32 %14, 11
  %46 = xor i32 %43, %45
  %47 = xor i32 %46, %44
  %48 = lshr i32 %47, 11
  %49 = and i32 %5, 65535
  %50 = add i32 %47, %49
  %51 = add i32 %50, %48
  %52 = shl i32 %51, 16
  %53 = shl nuw nsw i32 %15, 11
  %54 = xor i32 %51, %53
  %55 = xor i32 %54, %52
  %56 = lshr i32 %55, 11
  %57 = add i32 %56, %55
  %58 = trunc i64 %23 to i32
  %59 = and i32 %58, 65535
  %60 = add i32 %57, %59
  %61 = shl i32 %60, 16
  %62 = lshr i64 %23, 5
  %63 = trunc i64 %62 to i32
  %64 = and i32 %63, 134215680
  %65 = xor i32 %64, %60
  %66 = xor i32 %65, %61
  %67 = lshr i32 %66, 11
  %68 = zext i8 %25 to i32
  %69 = add i32 %66, %68
  %70 = add i32 %69, %67
  %71 = shl i32 %70, 16
  %72 = xor i32 %71, %70
  %73 = lshr i32 %72, 11
  %74 = add i32 %73, %72
  %75 = shl i32 %74, 3
  %76 = xor i32 %75, %74
  %77 = lshr i32 %76, 5
  %78 = add i32 %77, %76
  %79 = shl i32 %78, 2
  %80 = xor i32 %79, %78
  %81 = lshr i32 %80, 15
  %82 = add i32 %81, %80
  %83 = shl i32 %82, 10
  %84 = xor i32 %83, %82
  %85 = and i32 %84, 16777215
  %86 = icmp eq i32 %85, 0
  %87 = select i1 %86, i32 8388608, i32 %85
  ret i32 %87
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink22FontFaceCreationParams7GetHashEv(%"class.blink::FontFaceCreationParams"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::AtomicString", align 8
  %3 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %6, label %205

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %0, i64 0, i32 2
  %8 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %17

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  br label %20

17:                                               ; preds = %6
  %18 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %19 = zext i8 %10 to i64
  br label %20

20:                                               ; preds = %17, %12
  %21 = phi i8* [ %14, %12 ], [ %18, %17 ]
  %22 = phi i64 [ %16, %12 ], [ %19, %17 ]
  %23 = trunc i64 %22 to i32
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  %26 = lshr i32 %23, 1
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %90, label %28

28:                                               ; preds = %20
  %29 = add nsw i32 %26, -1
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 1
  %32 = add nuw nsw i64 %31, 2
  %33 = and i32 %26, 1
  %34 = icmp eq i32 %26, 1
  br i1 %34, label %69, label %35

35:                                               ; preds = %28
  %36 = sub nsw i32 %26, %33
  br label %37

37:                                               ; preds = %37, %35
  %38 = phi i32 [ -1640531527, %35 ], [ %65, %37 ]
  %39 = phi i8* [ %21, %35 ], [ %66, %37 ]
  %40 = phi i32 [ %36, %35 ], [ %67, %37 ]
  %41 = load i8, i8* %39, align 1
  %42 = getelementptr inbounds i8, i8* %39, i64 1
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %41 to i32
  %45 = add i32 %38, %44
  %46 = shl i32 %45, 16
  %47 = zext i8 %43 to i32
  %48 = shl nuw nsw i32 %47, 11
  %49 = xor i32 %48, %45
  %50 = xor i32 %49, %46
  %51 = lshr i32 %50, 11
  %52 = add i32 %51, %50
  %53 = getelementptr inbounds i8, i8* %39, i64 2
  %54 = load i8, i8* %53, align 1
  %55 = getelementptr inbounds i8, i8* %39, i64 3
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %54 to i32
  %58 = add i32 %52, %57
  %59 = shl i32 %58, 16
  %60 = zext i8 %56 to i32
  %61 = shl nuw nsw i32 %60, 11
  %62 = xor i32 %61, %58
  %63 = xor i32 %62, %59
  %64 = lshr i32 %63, 11
  %65 = add i32 %64, %63
  %66 = getelementptr inbounds i8, i8* %39, i64 4
  %67 = add i32 %40, -2
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %37

69:                                               ; preds = %37, %28
  %70 = phi i32 [ undef, %28 ], [ %65, %37 ]
  %71 = phi i32 [ -1640531527, %28 ], [ %65, %37 ]
  %72 = phi i8* [ %21, %28 ], [ %66, %37 ]
  %73 = icmp eq i32 %33, 0
  br i1 %73, label %87, label %74

74:                                               ; preds = %69
  %75 = load i8, i8* %72, align 1
  %76 = getelementptr inbounds i8, i8* %72, i64 1
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %75 to i32
  %79 = add i32 %71, %78
  %80 = shl i32 %79, 16
  %81 = zext i8 %77 to i32
  %82 = shl nuw nsw i32 %81, 11
  %83 = xor i32 %82, %79
  %84 = xor i32 %83, %80
  %85 = lshr i32 %84, 11
  %86 = add i32 %85, %84
  br label %87

87:                                               ; preds = %69, %74
  %88 = phi i32 [ %70, %69 ], [ %86, %74 ]
  %89 = getelementptr i8, i8* %21, i64 %32
  br label %90

90:                                               ; preds = %87, %20
  %91 = phi i32 [ -1640531527, %20 ], [ %88, %87 ]
  %92 = phi i8* [ %21, %20 ], [ %89, %87 ]
  br i1 %25, label %93, label %96

93:                                               ; preds = %90
  %94 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %0, i64 0, i32 4
  %95 = bitcast i32* %94 to i8*
  br label %111

96:                                               ; preds = %90
  %97 = load i8, i8* %92, align 1
  %98 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %0, i64 0, i32 4
  %99 = bitcast i32* %98 to i8*
  %100 = getelementptr inbounds i8, i8* %99, i64 1
  %101 = load i8, i8* %99, align 1
  %102 = zext i8 %97 to i32
  %103 = add i32 %91, %102
  %104 = shl i32 %103, 16
  %105 = zext i8 %101 to i32
  %106 = shl nuw nsw i32 %105, 11
  %107 = xor i32 %106, %103
  %108 = xor i32 %107, %104
  %109 = lshr i32 %108, 11
  %110 = add i32 %109, %108
  br label %111

111:                                              ; preds = %96, %93
  %112 = phi i32 [ %110, %96 ], [ %91, %93 ]
  %113 = phi i8* [ %100, %96 ], [ %95, %93 ]
  %114 = phi i32 [ 3, %96 ], [ 4, %93 ]
  %115 = and i32 %114, 1
  %116 = lshr i32 %114, 1
  %117 = add nsw i32 %116, -1
  %118 = zext i32 %117 to i64
  %119 = shl nuw nsw i64 %118, 1
  %120 = add nuw nsw i64 %119, 2
  %121 = load i8, i8* %113, align 1
  %122 = getelementptr inbounds i8, i8* %113, i64 1
  %123 = load i8, i8* %122, align 1
  %124 = zext i8 %121 to i32
  %125 = add i32 %112, %124
  %126 = shl i32 %125, 16
  %127 = zext i8 %123 to i32
  %128 = shl nuw nsw i32 %127, 11
  %129 = xor i32 %128, %125
  %130 = xor i32 %129, %126
  %131 = lshr i32 %130, 11
  %132 = add i32 %131, %130
  %133 = icmp eq i32 %116, 1
  br i1 %133, label %134, label %269

134:                                              ; preds = %269, %111
  %135 = phi i32 [ %132, %111 ], [ %282, %269 ]
  %136 = icmp eq i32 %115, 0
  br i1 %136, label %153, label %137

137:                                              ; preds = %134
  %138 = getelementptr i8, i8* %113, i64 %120
  %139 = load i8, i8* %138, align 1
  %140 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %0, i64 0, i32 3
  %141 = bitcast i32* %140 to i8*
  %142 = getelementptr inbounds i8, i8* %141, i64 1
  %143 = load i8, i8* %141, align 1
  %144 = zext i8 %139 to i32
  %145 = add i32 %135, %144
  %146 = shl i32 %145, 16
  %147 = zext i8 %143 to i32
  %148 = shl nuw nsw i32 %147, 11
  %149 = xor i32 %148, %145
  %150 = xor i32 %149, %146
  %151 = lshr i32 %150, 11
  %152 = add i32 %151, %150
  br label %156

153:                                              ; preds = %134
  %154 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %0, i64 0, i32 3
  %155 = bitcast i32* %154 to i8*
  br label %156

156:                                              ; preds = %137, %153
  %157 = phi i32 [ %152, %137 ], [ %135, %153 ]
  %158 = phi i8* [ %142, %137 ], [ %155, %153 ]
  %159 = phi i32 [ 3, %137 ], [ 4, %153 ]
  %160 = and i32 %159, 1
  %161 = lshr i32 %159, 1
  %162 = add nsw i32 %161, -1
  %163 = zext i32 %162 to i64
  %164 = shl nuw nsw i64 %163, 1
  %165 = add nuw nsw i64 %164, 2
  %166 = load i8, i8* %158, align 1
  %167 = getelementptr inbounds i8, i8* %158, i64 1
  %168 = load i8, i8* %167, align 1
  %169 = zext i8 %166 to i32
  %170 = add i32 %157, %169
  %171 = shl i32 %170, 16
  %172 = zext i8 %168 to i32
  %173 = shl nuw nsw i32 %172, 11
  %174 = xor i32 %173, %170
  %175 = xor i32 %174, %171
  %176 = lshr i32 %175, 11
  %177 = add i32 %176, %175
  %178 = icmp eq i32 %161, 1
  br i1 %178, label %179, label %255

179:                                              ; preds = %255, %156
  %180 = phi i32 [ %177, %156 ], [ %268, %255 ]
  %181 = icmp eq i32 %160, 0
  br i1 %181, label %191, label %182

182:                                              ; preds = %179
  %183 = getelementptr i8, i8* %158, i64 %165
  %184 = load i8, i8* %183, align 1
  %185 = zext i8 %184 to i32
  %186 = add i32 %180, %185
  %187 = shl i32 %186, 11
  %188 = xor i32 %187, %186
  %189 = lshr i32 %188, 17
  %190 = add i32 %189, %188
  br label %191

191:                                              ; preds = %179, %182
  %192 = phi i32 [ %190, %182 ], [ %180, %179 ]
  %193 = shl i32 %192, 3
  %194 = xor i32 %193, %192
  %195 = lshr i32 %194, 5
  %196 = add i32 %195, %194
  %197 = shl i32 %196, 2
  %198 = xor i32 %197, %196
  %199 = lshr i32 %198, 15
  %200 = add i32 %199, %198
  %201 = shl i32 %200, 10
  %202 = xor i32 %201, %200
  %203 = icmp eq i32 %202, 0
  %204 = select i1 %203, i32 -2147483648, i32 %202
  br label %253

205:                                              ; preds = %1
  %206 = bitcast %"class.WTF::AtomicString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %206) #17
  %207 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %208 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %207, align 8
  %209 = icmp eq %"class.WTF::StringImpl"* %208, null
  br i1 %209, label %214, label %210

210:                                              ; preds = %205
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 1
  %212 = load i32, i32* %211, align 4
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %214, label %215

214:                                              ; preds = %205, %210
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.22, i64 0, i64 0), i64 0) #17
  br label %233

215:                                              ; preds = %210
  %216 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %208, %"class.WTF::StringImpl"** %216, align 8
  %217 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %218 = load atomic i32, i32* %217 monotonic, align 4
  %219 = and i32 %218, 2
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %221, label %233

221:                                              ; preds = %215
  %222 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 0
  %223 = load i32, i32* %222, align 4
  %224 = zext i32 %223 to i33
  %225 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %224, i33 1) #17
  %226 = extractvalue { i33, i1 } %225, 1
  %227 = extractvalue { i33, i1 } %225, 0
  %228 = icmp slt i33 %227, 0
  %229 = or i1 %226, %228
  br i1 %229, label %230, label %231, !prof !5

230:                                              ; preds = %221
  tail call void @llvm.trap() #17
  unreachable

231:                                              ; preds = %221
  %232 = trunc i33 %227 to i32
  store i32 %232, i32* %222, align 4
  br label %233

233:                                              ; preds = %231, %215, %214
  %234 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %235 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %234, align 8
  %236 = call i32 @_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE(%"class.WTF::StringImpl"* %235) #17
  %237 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %234, align 8
  %238 = icmp eq %"class.WTF::StringImpl"* %237, null
  br i1 %238, label %252, label %239

239:                                              ; preds = %233
  %240 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %237, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %241 = load atomic i32, i32* %240 monotonic, align 4
  %242 = and i32 %241, 2
  %243 = icmp eq i32 %242, 0
  %244 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %237, i64 0, i32 0
  %245 = load i32, i32* %244, align 4
  br i1 %243, label %246, label %248

246:                                              ; preds = %239
  %247 = add i32 %245, -1
  store i32 %247, i32* %244, align 4
  br label %248

248:                                              ; preds = %246, %239
  %249 = phi i32 [ %247, %246 ], [ %245, %239 ]
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %251, label %252

251:                                              ; preds = %248
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %237) #17
  br label %252

252:                                              ; preds = %233, %248, %251
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %206) #17
  br label %253

253:                                              ; preds = %252, %191
  %254 = phi i32 [ %204, %191 ], [ %236, %252 ]
  ret i32 %254

255:                                              ; preds = %156
  %256 = getelementptr inbounds i8, i8* %158, i64 2
  %257 = load i8, i8* %256, align 1
  %258 = getelementptr inbounds i8, i8* %158, i64 3
  %259 = load i8, i8* %258, align 1
  %260 = zext i8 %257 to i32
  %261 = add i32 %177, %260
  %262 = shl i32 %261, 16
  %263 = zext i8 %259 to i32
  %264 = shl nuw nsw i32 %263, 11
  %265 = xor i32 %264, %261
  %266 = xor i32 %265, %262
  %267 = lshr i32 %266, 11
  %268 = add i32 %267, %266
  br label %179

269:                                              ; preds = %111
  %270 = getelementptr inbounds i8, i8* %113, i64 2
  %271 = load i8, i8* %270, align 1
  %272 = getelementptr inbounds i8, i8* %113, i64 3
  %273 = load i8, i8* %272, align 1
  %274 = zext i8 %271 to i32
  %275 = add i32 %132, %274
  %276 = shl i32 %275, 16
  %277 = zext i8 %273 to i32
  %278 = shl nuw nsw i32 %277, 11
  %279 = xor i32 %278, %275
  %280 = xor i32 %279, %276
  %281 = lshr i32 %280, 11
  %282 = add i32 %281, %280
  br label %134
}

declare i32 @_ZNK5blink21FontVariationSettings7GetHashEv(%"class.blink::FontVariationSettings"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca i64, align 8
  %3 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load atomic i32, i32* %3 monotonic, align 4
  %5 = and i32 %4, 1
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 1
  br i1 %6, label %77, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.WTF::StringImpl"* %7 to i8*
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  %14 = lshr i32 %11, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %48, label %16

16:                                               ; preds = %8
  %17 = add nsw i32 %14, -1
  %18 = zext i32 %17 to i64
  br label %19

19:                                               ; preds = %19, %16
  %20 = phi i32 [ %41, %19 ], [ -1640531527, %16 ]
  %21 = phi i32 [ %23, %19 ], [ %14, %16 ]
  %22 = phi i8* [ %42, %19 ], [ %9, %16 ]
  %23 = add nsw i32 %21, -1
  %24 = load i8, i8* %22, align 1
  %25 = zext i8 %24 to i64
  %26 = getelementptr inbounds [256 x i16], [256 x i16]* @_ZN3WTF10StringImpl20kLatin1CaseFoldTableE, i64 0, i64 %25
  %27 = load i16, i16* %26, align 2
  %28 = getelementptr inbounds i8, i8* %22, i64 1
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i64
  %31 = getelementptr inbounds [256 x i16], [256 x i16]* @_ZN3WTF10StringImpl20kLatin1CaseFoldTableE, i64 0, i64 %30
  %32 = load i16, i16* %31, align 2
  %33 = zext i16 %27 to i32
  %34 = add i32 %20, %33
  %35 = shl i32 %34, 16
  %36 = zext i16 %32 to i32
  %37 = shl nuw nsw i32 %36, 11
  %38 = xor i32 %35, %34
  %39 = xor i32 %38, %37
  %40 = lshr i32 %39, 11
  %41 = add i32 %40, %39
  %42 = getelementptr inbounds i8, i8* %22, i64 2
  %43 = icmp eq i32 %23, 0
  br i1 %43, label %44, label %19

44:                                               ; preds = %19
  %45 = shl nuw nsw i64 %18, 1
  %46 = add nuw nsw i64 %45, 2
  %47 = getelementptr i8, i8* %9, i64 %46
  br label %48

48:                                               ; preds = %44, %8
  %49 = phi i32 [ -1640531527, %8 ], [ %41, %44 ]
  %50 = phi i8* [ %9, %8 ], [ %47, %44 ]
  br i1 %13, label %62, label %51

51:                                               ; preds = %48
  %52 = load i8, i8* %50, align 1
  %53 = zext i8 %52 to i64
  %54 = getelementptr inbounds [256 x i16], [256 x i16]* @_ZN3WTF10StringImpl20kLatin1CaseFoldTableE, i64 0, i64 %53
  %55 = load i16, i16* %54, align 2
  %56 = zext i16 %55 to i32
  %57 = add i32 %49, %56
  %58 = shl i32 %57, 11
  %59 = xor i32 %58, %57
  %60 = lshr i32 %59, 17
  %61 = add i32 %60, %59
  br label %62

62:                                               ; preds = %48, %51
  %63 = phi i32 [ %61, %51 ], [ %49, %48 ]
  %64 = shl i32 %63, 3
  %65 = xor i32 %64, %63
  %66 = lshr i32 %65, 5
  %67 = add i32 %66, %65
  %68 = shl i32 %67, 2
  %69 = xor i32 %68, %67
  %70 = lshr i32 %69, 15
  %71 = add i32 %70, %69
  %72 = shl i32 %71, 10
  %73 = xor i32 %72, %71
  %74 = and i32 %73, 16777215
  %75 = icmp eq i32 %74, 0
  %76 = select i1 %75, i32 8388608, i32 %74
  br label %112

77:                                               ; preds = %1
  %78 = bitcast %"class.WTF::StringImpl"* %7 to i16*
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = bitcast i64* %2 to %"class.WTF::StringHasher"*
  %82 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #17
  store i64 186919631157689, i64* %2, align 8
  %83 = bitcast i64* %2 to i32*
  %84 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %81, i64 0, i32 1
  call void @_ZN3WTF12StringHasher28AddCharactersAssumingAlignedIDsXadL_ZNS_15CaseFoldingHash8FoldCaseIDsEEDsT_EEEEvPKS4_j(%"class.WTF::StringHasher"* nonnull %81, i16* %78, i32 %80) #17
  %85 = load i32, i32* %83, align 8
  %86 = load i8, i8* %84, align 4, !range !7
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %97, label %88

88:                                               ; preds = %77
  %89 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %81, i64 0, i32 2
  %90 = load i16, i16* %89, align 2
  %91 = zext i16 %90 to i32
  %92 = add i32 %85, %91
  %93 = shl i32 %92, 11
  %94 = xor i32 %93, %92
  %95 = lshr i32 %94, 17
  %96 = add i32 %95, %94
  br label %97

97:                                               ; preds = %77, %88
  %98 = phi i32 [ %96, %88 ], [ %85, %77 ]
  %99 = shl i32 %98, 3
  %100 = xor i32 %99, %98
  %101 = lshr i32 %100, 5
  %102 = add i32 %101, %100
  %103 = shl i32 %102, 2
  %104 = xor i32 %103, %102
  %105 = lshr i32 %104, 15
  %106 = add i32 %105, %104
  %107 = shl i32 %106, 10
  %108 = xor i32 %107, %106
  %109 = and i32 %108, 16777215
  %110 = icmp eq i32 %109, 0
  %111 = select i1 %110, i32 8388608, i32 %109
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #17
  br label %112

112:                                              ; preds = %97, %62
  %113 = phi i32 [ %76, %62 ], [ %111, %97 ]
  ret i32 %113
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringHasher28AddCharactersAssumingAlignedIDsXadL_ZNS_15CaseFoldingHash8FoldCaseIDsEEDsT_EEEEvPKS4_j(%"class.WTF::StringHasher"*, i16*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = and i32 %2, 1
  %5 = icmp eq i32 %4, 0
  %6 = lshr i32 %2, 1
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %33, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 0
  br label %10

10:                                               ; preds = %8, %10
  %11 = phi i32 [ %6, %8 ], [ %13, %10 ]
  %12 = phi i16* [ %1, %8 ], [ %31, %10 ]
  %13 = add nsw i32 %11, -1
  %14 = load i16, i16* %12, align 2
  %15 = zext i16 %14 to i32
  %16 = tail call i32 @u_foldCase_69(i32 %15, i32 0) #17
  %17 = getelementptr inbounds i16, i16* %12, i64 1
  %18 = load i16, i16* %17, align 2
  %19 = zext i16 %18 to i32
  %20 = tail call i32 @u_foldCase_69(i32 %19, i32 0) #17
  %21 = and i32 %16, 65535
  %22 = load i32, i32* %9, align 4
  %23 = add i32 %22, %21
  %24 = shl i32 %23, 16
  %25 = shl i32 %20, 11
  %26 = and i32 %25, 134215680
  %27 = xor i32 %23, %26
  %28 = xor i32 %27, %24
  %29 = lshr i32 %28, 11
  %30 = add i32 %29, %28
  store i32 %30, i32* %9, align 4
  %31 = getelementptr inbounds i16, i16* %12, i64 2
  %32 = icmp eq i32 %13, 0
  br i1 %32, label %33, label %10

33:                                               ; preds = %10, %3
  %34 = phi i16* [ %1, %3 ], [ %31, %10 ]
  br i1 %5, label %59, label %35

35:                                               ; preds = %33
  %36 = load i16, i16* %34, align 2
  %37 = zext i16 %36 to i32
  %38 = tail call i32 @u_foldCase_69(i32 %37, i32 0) #17
  %39 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 1
  %40 = load i8, i8* %39, align 4, !range !7
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %56, label %42

42:                                               ; preds = %35
  store i8 0, i8* %39, align 4
  %43 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 2
  %44 = load i16, i16* %43, align 2
  %45 = zext i16 %44 to i32
  %46 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = add i32 %47, %45
  %49 = shl i32 %48, 16
  %50 = shl i32 %38, 11
  %51 = and i32 %50, 134215680
  %52 = xor i32 %48, %51
  %53 = xor i32 %52, %49
  %54 = lshr i32 %53, 11
  %55 = add i32 %54, %53
  store i32 %55, i32* %46, align 4
  br label %59

56:                                               ; preds = %35
  %57 = trunc i32 %38 to i16
  %58 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 2
  store i16 %57, i16* %58, align 2
  store i8 1, i8* %39, align 4
  br label %59

59:                                               ; preds = %56, %42, %33
  ret void
}

declare i32 @u_foldCase_69(i32, i32) local_unnamed_addr #1

declare void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"*, i8*, i64) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(48) %"class.blink::FontFaceCreationParams"* @_ZN5blink22FontFaceCreationParamsaSERKS0_(%"class.blink::FontFaceCreationParams"*, %"class.blink::FontFaceCreationParams"* dereferenceable(48)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %0, i64 0, i32 0
  store i32 %4, i32* %5, align 8
  %6 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %27

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i33
  %19 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %18, i33 1) #17
  %20 = extractvalue { i33, i1 } %19, 1
  %21 = extractvalue { i33, i1 } %19, 0
  %22 = icmp slt i33 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %25, !prof !5

24:                                               ; preds = %15
  tail call void @llvm.trap() #17
  unreachable

25:                                               ; preds = %15
  %26 = trunc i33 %21 to i32
  store i32 %26, i32* %16, align 4
  br label %27

27:                                               ; preds = %25, %10, %2
  %28 = ptrtoint %"class.WTF::StringImpl"* %8 to i64
  %29 = bitcast %"class.WTF::AtomicString"* %6 to i64*
  %30 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %6, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  store i64 %28, i64* %29, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #17
  br label %46

46:                                               ; preds = %27, %42, %45
  %47 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %0, i64 0, i32 2
  %48 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %1, i64 0, i32 2
  %49 = icmp eq %"class.blink::FontFaceCreationParams"* %0, %1
  br i1 %49, label %79, label %50

50:                                               ; preds = %46
  %51 = bitcast %"class.std::__1::basic_string"* %47 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  %55 = bitcast %"class.std::__1::basic_string"* %48 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  br i1 %54, label %69, label %59

59:                                               ; preds = %50
  br i1 %58, label %63, label %60

60:                                               ; preds = %59
  %61 = bitcast %"class.std::__1::basic_string"* %47 to i8*
  %62 = bitcast %"class.std::__1::basic_string"* %48 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 %62, i64 24, i1 false) #17
  br label %79

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i8*, i8** %64, align 8
  %66 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %67 = load i64, i64* %66, align 8
  %68 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %47, i8* %65, i64 %67) #17
  br label %79

69:                                               ; preds = %50
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  %72 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %73 = load i64, i64* %72, align 8
  %74 = bitcast %"class.std::__1::basic_string"* %48 to i8*
  %75 = zext i8 %57 to i64
  %76 = select i1 %58, i8* %71, i8* %74
  %77 = select i1 %58, i64 %73, i64 %75
  %78 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %47, i8* %76, i64 %77) #17
  br label %79

79:                                               ; preds = %46, %60, %63, %69
  %80 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %0, i64 0, i32 3
  %81 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %1, i64 0, i32 3
  %82 = bitcast i32* %81 to i64*
  %83 = bitcast i32* %80 to i64*
  %84 = load i64, i64* %82, align 8
  store i64 %84, i64* %83, align 8
  ret %"class.blink::FontFaceCreationParams"* %0
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.198"*, i8 } @_ZN3WTF9HashTableIjNS_12KeyValuePairIjNSt3__110unique_ptrIN5blink16FontPlatformDataENS2_14default_deleteIS5_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIS8_EEEESF_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISI_SC_SJ_EERjDnEENS_18HashTableAddResultISK_S9_EEOT0_OT1_(%"class.WTF::HashTable.195"*, i32* dereferenceable(4), i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.195", %"class.WTF::HashTable.195"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.198"*, %"struct.WTF::KeyValuePair.198"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.198"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.198"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjNSt3__110unique_ptrIN5blink16FontPlatformDataENS2_14default_deleteIS5_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIS8_EEEESF_NS_18PartitionAllocatorEE6ExpandEPS9_(%"class.WTF::HashTable.195"* %0, %"struct.WTF::KeyValuePair.198"* null)
  %9 = load %"struct.WTF::KeyValuePair.198"*, %"struct.WTF::KeyValuePair.198"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.198"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.195", %"class.WTF::HashTable.195"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %11, i64 %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, -1
  br i1 %35, label %81, label %36

36:                                               ; preds = %10
  %37 = xor i32 %29, -1
  %38 = lshr i32 %27, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %36, %57
  %51 = phi i32 [ %34, %36 ], [ %66, %57 ]
  %52 = phi %"struct.WTF::KeyValuePair.198"* [ %32, %36 ], [ %64, %57 ]
  %53 = phi %"struct.WTF::KeyValuePair.198"* [ null, %36 ], [ %59, %57 ]
  %54 = phi i64 [ %31, %36 ], [ %63, %57 ]
  %55 = phi i64 [ 0, %36 ], [ %61, %57 ]
  %56 = icmp eq i32 %51, %16
  br i1 %56, label %104, label %57

57:                                               ; preds = %50
  %58 = icmp eq i32 %51, -2
  %59 = select i1 %58, %"struct.WTF::KeyValuePair.198"* %52, %"struct.WTF::KeyValuePair.198"* %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %49, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, -1
  br i1 %67, label %68, label %50

68:                                               ; preds = %57
  %69 = icmp eq %"struct.WTF::KeyValuePair.198"* %59, null
  br i1 %69, label %81, label %70

70:                                               ; preds = %68
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %59, i64 0, i32 0
  store i32 -1, i32* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %59, i64 0, i32 1
  %73 = bitcast %"class.std::__1::unique_ptr.199"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = getelementptr inbounds %"class.WTF::HashTable.195", %"class.WTF::HashTable.195"* %0, i64 0, i32 3
  %75 = load i32, i32* %74, align 8
  %76 = add i32 %75, 2147483647
  %77 = and i32 %76, 2147483647
  %78 = and i32 %75, -2147483648
  %79 = or i32 %77, %78
  store i32 %79, i32* %74, align 8
  %80 = load i32, i32* %1, align 4
  br label %81

81:                                               ; preds = %10, %68, %70
  %82 = phi i32 [ %80, %70 ], [ %16, %68 ], [ %16, %10 ]
  %83 = phi %"struct.WTF::KeyValuePair.198"* [ %59, %70 ], [ %64, %68 ], [ %32, %10 ]
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %83, i64 0, i32 0
  store i32 %82, i32* %84, align 8
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %83, i64 0, i32 1
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.199", %"class.std::__1::unique_ptr.199"* %85, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.blink::FontPlatformData"*, %"class.blink::FontPlatformData"** %86, align 8
  %88 = bitcast %"class.std::__1::unique_ptr.199"* %85 to i64*
  store i64 0, i64* %88, align 8
  %89 = icmp eq %"class.blink::FontPlatformData"* %87, null
  br i1 %89, label %92, label %90

90:                                               ; preds = %81
  tail call void @_ZN5blink16FontPlatformDataD1Ev(%"class.blink::FontPlatformData"* nonnull %87) #17
  %91 = bitcast %"class.blink::FontPlatformData"* %87 to i8*
  tail call void @free(i8* %91) #17
  br label %92

92:                                               ; preds = %81, %90
  %93 = getelementptr inbounds %"class.WTF::HashTable.195", %"class.WTF::HashTable.195"* %0, i64 0, i32 2
  %94 = load i32, i32* %93, align 4
  %95 = add i32 %94, 1
  store i32 %95, i32* %93, align 4
  %96 = getelementptr inbounds %"class.WTF::HashTable.195", %"class.WTF::HashTable.195"* %0, i64 0, i32 3
  %97 = load i32, i32* %96, align 8
  %98 = add i32 %97, %95
  %99 = shl i32 %98, 1
  %100 = load i32, i32* %12, align 8
  %101 = icmp ult i32 %99, %100
  br i1 %101, label %104, label %102

102:                                              ; preds = %92
  %103 = tail call %"struct.WTF::KeyValuePair.198"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjNSt3__110unique_ptrIN5blink16FontPlatformDataENS2_14default_deleteIS5_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIS8_EEEESF_NS_18PartitionAllocatorEE6ExpandEPS9_(%"class.WTF::HashTable.195"* %0, %"struct.WTF::KeyValuePair.198"* %83)
  br label %104

104:                                              ; preds = %50, %92, %102
  %105 = phi i8 [ 1, %92 ], [ 1, %102 ], [ 0, %50 ]
  %106 = phi %"struct.WTF::KeyValuePair.198"* [ %83, %92 ], [ %103, %102 ], [ %52, %50 ]
  %107 = insertvalue { %"struct.WTF::KeyValuePair.198"*, i8 } undef, %"struct.WTF::KeyValuePair.198"* %106, 0
  %108 = insertvalue { %"struct.WTF::KeyValuePair.198"*, i8 } %107, i8 %105, 1
  ret { %"struct.WTF::KeyValuePair.198"*, i8 } %108
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.198"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjNSt3__110unique_ptrIN5blink16FontPlatformDataENS2_14default_deleteIS5_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIS8_EEEESF_NS_18PartitionAllocatorEE6ExpandEPS9_(%"class.WTF::HashTable.195"*, %"struct.WTF::KeyValuePair.198"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.195", %"class.WTF::HashTable.195"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.195", %"class.WTF::HashTable.195"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #17
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #17
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20, i64 0, i64 0), i8* %22, i8* %23) #17
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.21, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #17
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #17
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #17
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([179 x i8], [179 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIjNSt3__110unique_ptrIN5blink16FontPlatformDataENS2_14default_deleteIS5_EEEEEEEEPKcv, i64 0, i64 0)) #17
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.198"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %77, label %38

38:                                               ; preds = %31
  %39 = add nsw i64 %33, -1
  %40 = and i64 %33, 3
  %41 = icmp ult i64 %39, 3
  br i1 %41, label %65, label %42

42:                                               ; preds = %38
  %43 = sub nsw i64 %33, %40
  br label %44

44:                                               ; preds = %44, %42
  %45 = phi i64 [ 0, %42 ], [ %62, %44 ]
  %46 = phi i64 [ %43, %42 ], [ %63, %44 ]
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %36, i64 %45, i32 0
  store i32 -1, i32* %47, align 8
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %36, i64 %45, i32 1
  %49 = bitcast %"class.std::__1::unique_ptr.199"* %48 to i64*
  store i64 0, i64* %49, align 8
  %50 = or i64 %45, 1
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %36, i64 %50, i32 0
  store i32 -1, i32* %51, align 8
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %36, i64 %50, i32 1
  %53 = bitcast %"class.std::__1::unique_ptr.199"* %52 to i64*
  store i64 0, i64* %53, align 8
  %54 = or i64 %45, 2
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %36, i64 %54, i32 0
  store i32 -1, i32* %55, align 8
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %36, i64 %54, i32 1
  %57 = bitcast %"class.std::__1::unique_ptr.199"* %56 to i64*
  store i64 0, i64* %57, align 8
  %58 = or i64 %45, 3
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %36, i64 %58, i32 0
  store i32 -1, i32* %59, align 8
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %36, i64 %58, i32 1
  %61 = bitcast %"class.std::__1::unique_ptr.199"* %60 to i64*
  store i64 0, i64* %61, align 8
  %62 = add nuw nsw i64 %45, 4
  %63 = add i64 %46, -4
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %44

65:                                               ; preds = %44, %38
  %66 = phi i64 [ 0, %38 ], [ %62, %44 ]
  %67 = icmp eq i64 %40, 0
  br i1 %67, label %77, label %68

68:                                               ; preds = %65, %68
  %69 = phi i64 [ %74, %68 ], [ %66, %65 ]
  %70 = phi i64 [ %75, %68 ], [ %40, %65 ]
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %36, i64 %69, i32 0
  store i32 -1, i32* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %36, i64 %69, i32 1
  %73 = bitcast %"class.std::__1::unique_ptr.199"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = add nuw nsw i64 %69, 1
  %75 = add i64 %70, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %68, !llvm.loop !18

77:                                               ; preds = %65, %68, %31
  %78 = call %"struct.WTF::KeyValuePair.198"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjNSt3__110unique_ptrIN5blink16FontPlatformDataENS2_14default_deleteIS5_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIS8_EEEESF_NS_18PartitionAllocatorEE8RehashToEPS9_jSL_(%"class.WTF::HashTable.195"* %0, %"struct.WTF::KeyValuePair.198"* %36, i32 %32, %"struct.WTF::KeyValuePair.198"* %1) #17
  ret %"struct.WTF::KeyValuePair.198"* %78
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.198"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjNSt3__110unique_ptrIN5blink16FontPlatformDataENS2_14default_deleteIS5_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIS8_EEEESF_NS_18PartitionAllocatorEE8RehashToEPS9_jSL_(%"class.WTF::HashTable.195"*, %"struct.WTF::KeyValuePair.198"*, i32, %"struct.WTF::KeyValuePair.198"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair.198"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.195", %"class.WTF::HashTable.195"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.195", %"class.WTF::HashTable.195"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.195"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"struct.WTF::KeyValuePair.198"*, %"struct.WTF::KeyValuePair.198"** %9, align 8
  %17 = ptrtoint %"struct.WTF::KeyValuePair.198"* %16 to i64
  br label %51

18:                                               ; preds = %147
  %19 = bitcast %"class.WTF::HashTable.195"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %148, %18 ]
  %23 = phi %"struct.WTF::KeyValuePair.198"* [ null, %10 ], [ %151, %18 ]
  %24 = phi i32 [ 0, %10 ], [ %149, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %25 = inttoptr i64 %22 to %"struct.WTF::KeyValuePair.198"*
  %26 = icmp eq i64 %22, 0
  br i1 %26, label %47, label %27

27:                                               ; preds = %20
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %45, label %29

29:                                               ; preds = %27
  %30 = zext i32 %24 to i64
  br label %31

31:                                               ; preds = %42, %29
  %32 = phi i64 [ 0, %29 ], [ %43, %42 ]
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %25, i64 %32, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, -2
  br i1 %35, label %42, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %25, i64 %32, i32 1, i32 0, i32 0, i32 0
  %38 = load %"class.blink::FontPlatformData"*, %"class.blink::FontPlatformData"** %37, align 8
  store %"class.blink::FontPlatformData"* null, %"class.blink::FontPlatformData"** %37, align 8
  %39 = icmp eq %"class.blink::FontPlatformData"* %38, null
  br i1 %39, label %42, label %40

40:                                               ; preds = %36
  tail call void @_ZN5blink16FontPlatformDataD1Ev(%"class.blink::FontPlatformData"* nonnull %38) #17
  %41 = bitcast %"class.blink::FontPlatformData"* %38 to i8*
  tail call void @free(i8* %41) #17
  br label %42

42:                                               ; preds = %40, %36, %31
  %43 = add nuw nsw i64 %32, 1
  %44 = icmp eq i64 %43, %30
  br i1 %44, label %45, label %31

45:                                               ; preds = %42, %27
  %46 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %46) #17
  br label %47

47:                                               ; preds = %20, %45
  %48 = getelementptr inbounds %"class.WTF::HashTable.195", %"class.WTF::HashTable.195"* %0, i64 0, i32 3
  %49 = load i32, i32* %48, align 8
  %50 = and i32 %49, -2147483648
  store i32 %50, i32* %48, align 8
  ret %"struct.WTF::KeyValuePair.198"* %23

51:                                               ; preds = %13, %147
  %52 = phi i64 [ %17, %13 ], [ %148, %147 ]
  %53 = phi i32 [ %7, %13 ], [ %149, %147 ]
  %54 = phi %"struct.WTF::KeyValuePair.198"* [ %16, %13 ], [ %150, %147 ]
  %55 = phi %"struct.WTF::KeyValuePair.198"* [ null, %13 ], [ %151, %147 ]
  %56 = phi i32 [ 0, %13 ], [ %152, %147 ]
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %54, i64 %57, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp ugt i32 %59, -3
  br i1 %60, label %147, label %61

61:                                               ; preds = %51
  %62 = shl i32 %59, 15
  %63 = xor i32 %62, -1
  %64 = add i32 %59, %63
  %65 = lshr i32 %64, 10
  %66 = xor i32 %65, %64
  %67 = mul i32 %66, 9
  %68 = lshr i32 %67, 6
  %69 = xor i32 %68, %67
  %70 = shl i32 %69, 11
  %71 = xor i32 %70, -1
  %72 = add i32 %69, %71
  %73 = lshr i32 %72, 16
  %74 = xor i32 %73, %72
  %75 = and i32 %74, %14
  %76 = zext i32 %75 to i64
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %1, i64 %76
  %78 = ptrtoint %"struct.WTF::KeyValuePair.198"* %77 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %77, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = icmp eq i32 %80, -1
  br i1 %81, label %99, label %82

82:                                               ; preds = %61
  %83 = xor i32 %74, -1
  %84 = lshr i32 %72, 23
  %85 = add i32 %84, %83
  %86 = shl i32 %85, 12
  %87 = xor i32 %86, %85
  %88 = lshr i32 %87, 7
  %89 = xor i32 %88, %87
  %90 = shl i32 %89, 2
  %91 = xor i32 %90, %89
  %92 = lshr i32 %91, 20
  %93 = xor i32 %92, %91
  %94 = or i32 %93, 1
  %95 = zext i32 %94 to i64
  br label %105

96:                                               ; preds = %112
  %97 = ptrtoint %"struct.WTF::KeyValuePair.198"* %119 to i64
  %98 = inttoptr i64 %114 to %"struct.WTF::KeyValuePair.198"*
  br label %99

99:                                               ; preds = %96, %61
  %100 = phi i64 [ %97, %96 ], [ %78, %61 ]
  %101 = phi %"struct.WTF::KeyValuePair.198"* [ %98, %96 ], [ null, %61 ]
  %102 = icmp eq %"struct.WTF::KeyValuePair.198"* %101, null
  %103 = ptrtoint %"struct.WTF::KeyValuePair.198"* %101 to i64
  %104 = select i1 %102, i64 %100, i64 %103
  br label %124

105:                                              ; preds = %112, %82
  %106 = phi i64 [ 0, %82 ], [ %114, %112 ]
  %107 = phi i32 [ %80, %82 ], [ %122, %112 ]
  %108 = phi i64 [ %78, %82 ], [ %120, %112 ]
  %109 = phi i64 [ %76, %82 ], [ %118, %112 ]
  %110 = phi i64 [ 0, %82 ], [ %116, %112 ]
  %111 = icmp eq i32 %107, %59
  br i1 %111, label %124, label %112

112:                                              ; preds = %105
  %113 = icmp eq i32 %107, -2
  %114 = select i1 %113, i64 %108, i64 %106
  %115 = icmp eq i64 %110, 0
  %116 = select i1 %115, i64 %95, i64 %110
  %117 = add i64 %116, %109
  %118 = and i64 %117, %15
  %119 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %1, i64 %118
  %120 = ptrtoint %"struct.WTF::KeyValuePair.198"* %119 to i64
  %121 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %119, i64 0, i32 0
  %122 = load i32, i32* %121, align 4
  %123 = icmp eq i32 %122, -1
  br i1 %123, label %96, label %105

124:                                              ; preds = %105, %99
  %125 = phi i64 [ %104, %99 ], [ %108, %105 ]
  %126 = inttoptr i64 %125 to %"struct.WTF::KeyValuePair.198"*
  %127 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %126, i64 0, i32 1, i32 0, i32 0, i32 0
  %128 = load %"class.blink::FontPlatformData"*, %"class.blink::FontPlatformData"** %127, align 8
  store %"class.blink::FontPlatformData"* null, %"class.blink::FontPlatformData"** %127, align 8
  %129 = icmp eq %"class.blink::FontPlatformData"* %128, null
  br i1 %129, label %132, label %130

130:                                              ; preds = %124
  tail call void @_ZN5blink16FontPlatformDataD1Ev(%"class.blink::FontPlatformData"* nonnull %128) #17
  %131 = bitcast %"class.blink::FontPlatformData"* %128 to i8*
  tail call void @free(i8* %131) #17
  br label %132

132:                                              ; preds = %124, %130
  %133 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %126, i64 0, i32 0
  %134 = load i32, i32* %58, align 8
  store i32 %134, i32* %133, align 8
  %135 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %126, i64 0, i32 1
  %136 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %54, i64 %57, i32 1
  %137 = getelementptr inbounds %"class.std::__1::unique_ptr.199", %"class.std::__1::unique_ptr.199"* %136, i64 0, i32 0, i32 0, i32 0
  %138 = bitcast %"class.std::__1::unique_ptr.199"* %136 to i64*
  %139 = load i64, i64* %138, align 8
  store %"class.blink::FontPlatformData"* null, %"class.blink::FontPlatformData"** %137, align 8
  %140 = bitcast %"class.std::__1::unique_ptr.199"* %135 to i64*
  store i64 %139, i64* %140, align 8
  %141 = load %"struct.WTF::KeyValuePair.198"*, %"struct.WTF::KeyValuePair.198"** %9, align 8
  %142 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %141, i64 %57
  %143 = icmp eq %"struct.WTF::KeyValuePair.198"* %142, %3
  %144 = select i1 %143, %"struct.WTF::KeyValuePair.198"* %126, %"struct.WTF::KeyValuePair.198"* %55
  %145 = load i32, i32* %6, align 8
  %146 = ptrtoint %"struct.WTF::KeyValuePair.198"* %141 to i64
  br label %147

147:                                              ; preds = %51, %132
  %148 = phi i64 [ %52, %51 ], [ %146, %132 ]
  %149 = phi i32 [ %53, %51 ], [ %145, %132 ]
  %150 = phi %"struct.WTF::KeyValuePair.198"* [ %54, %51 ], [ %141, %132 ]
  %151 = phi %"struct.WTF::KeyValuePair.198"* [ %55, %51 ], [ %144, %132 ]
  %152 = add i32 %56, 1
  %153 = icmp eq i32 %152, %149
  br i1 %153, label %18, label %51
}

; Function Attrs: nounwind
declare void @_ZN5blink16FontPlatformDataD1Ev(%"class.blink::FontPlatformData"*) unnamed_addr #6

declare void @_ZN5blink16FontPlatformDataC1ERKS0_(%"class.blink::FontPlatformData"*, %"class.blink::FontPlatformData"* dereferenceable(72)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.198"*, i8 } @_ZN3WTF9HashTableIjNS_12KeyValuePairIjNSt3__110unique_ptrIN5blink16FontPlatformDataENS2_14default_deleteIS5_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIS8_EEEESF_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISI_SC_SJ_EERjS8_EENS_18HashTableAddResultISK_S9_EEOT0_OT1_(%"class.WTF::HashTable.195"*, i32* dereferenceable(4), %"class.std::__1::unique_ptr.199"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.195", %"class.WTF::HashTable.195"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.198"*, %"struct.WTF::KeyValuePair.198"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.198"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.198"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjNSt3__110unique_ptrIN5blink16FontPlatformDataENS2_14default_deleteIS5_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIS8_EEEESF_NS_18PartitionAllocatorEE6ExpandEPS9_(%"class.WTF::HashTable.195"* %0, %"struct.WTF::KeyValuePair.198"* null)
  %9 = load %"struct.WTF::KeyValuePair.198"*, %"struct.WTF::KeyValuePair.198"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.198"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.195", %"class.WTF::HashTable.195"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %11, i64 %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, -1
  br i1 %35, label %81, label %36

36:                                               ; preds = %10
  %37 = xor i32 %29, -1
  %38 = lshr i32 %27, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %36, %57
  %51 = phi i32 [ %34, %36 ], [ %66, %57 ]
  %52 = phi %"struct.WTF::KeyValuePair.198"* [ %32, %36 ], [ %64, %57 ]
  %53 = phi %"struct.WTF::KeyValuePair.198"* [ null, %36 ], [ %59, %57 ]
  %54 = phi i64 [ %31, %36 ], [ %63, %57 ]
  %55 = phi i64 [ 0, %36 ], [ %61, %57 ]
  %56 = icmp eq i32 %51, %16
  br i1 %56, label %107, label %57

57:                                               ; preds = %50
  %58 = icmp eq i32 %51, -2
  %59 = select i1 %58, %"struct.WTF::KeyValuePair.198"* %52, %"struct.WTF::KeyValuePair.198"* %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %49, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, -1
  br i1 %67, label %68, label %50

68:                                               ; preds = %57
  %69 = icmp eq %"struct.WTF::KeyValuePair.198"* %59, null
  br i1 %69, label %81, label %70

70:                                               ; preds = %68
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %59, i64 0, i32 0
  store i32 -1, i32* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %59, i64 0, i32 1
  %73 = bitcast %"class.std::__1::unique_ptr.199"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = getelementptr inbounds %"class.WTF::HashTable.195", %"class.WTF::HashTable.195"* %0, i64 0, i32 3
  %75 = load i32, i32* %74, align 8
  %76 = add i32 %75, 2147483647
  %77 = and i32 %76, 2147483647
  %78 = and i32 %75, -2147483648
  %79 = or i32 %77, %78
  store i32 %79, i32* %74, align 8
  %80 = load i32, i32* %1, align 4
  br label %81

81:                                               ; preds = %10, %68, %70
  %82 = phi i32 [ %80, %70 ], [ %16, %68 ], [ %16, %10 ]
  %83 = phi %"struct.WTF::KeyValuePair.198"* [ %59, %70 ], [ %64, %68 ], [ %32, %10 ]
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %83, i64 0, i32 0
  store i32 %82, i32* %84, align 8
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %83, i64 0, i32 1
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.199", %"class.std::__1::unique_ptr.199"* %2, i64 0, i32 0, i32 0, i32 0
  %87 = bitcast %"class.std::__1::unique_ptr.199"* %2 to i64*
  %88 = load i64, i64* %87, align 8
  store %"class.blink::FontPlatformData"* null, %"class.blink::FontPlatformData"** %86, align 8
  %89 = getelementptr inbounds %"class.std::__1::unique_ptr.199", %"class.std::__1::unique_ptr.199"* %85, i64 0, i32 0, i32 0, i32 0
  %90 = load %"class.blink::FontPlatformData"*, %"class.blink::FontPlatformData"** %89, align 8
  %91 = bitcast %"class.std::__1::unique_ptr.199"* %85 to i64*
  store i64 %88, i64* %91, align 8
  %92 = icmp eq %"class.blink::FontPlatformData"* %90, null
  br i1 %92, label %95, label %93

93:                                               ; preds = %81
  tail call void @_ZN5blink16FontPlatformDataD1Ev(%"class.blink::FontPlatformData"* nonnull %90) #17
  %94 = bitcast %"class.blink::FontPlatformData"* %90 to i8*
  tail call void @free(i8* %94) #17
  br label %95

95:                                               ; preds = %81, %93
  %96 = getelementptr inbounds %"class.WTF::HashTable.195", %"class.WTF::HashTable.195"* %0, i64 0, i32 2
  %97 = load i32, i32* %96, align 4
  %98 = add i32 %97, 1
  store i32 %98, i32* %96, align 4
  %99 = getelementptr inbounds %"class.WTF::HashTable.195", %"class.WTF::HashTable.195"* %0, i64 0, i32 3
  %100 = load i32, i32* %99, align 8
  %101 = add i32 %100, %98
  %102 = shl i32 %101, 1
  %103 = load i32, i32* %12, align 8
  %104 = icmp ult i32 %102, %103
  br i1 %104, label %107, label %105

105:                                              ; preds = %95
  %106 = tail call %"struct.WTF::KeyValuePair.198"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjNSt3__110unique_ptrIN5blink16FontPlatformDataENS2_14default_deleteIS5_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIS8_EEEESF_NS_18PartitionAllocatorEE6ExpandEPS9_(%"class.WTF::HashTable.195"* %0, %"struct.WTF::KeyValuePair.198"* %83)
  br label %107

107:                                              ; preds = %50, %95, %105
  %108 = phi i8 [ 1, %95 ], [ 1, %105 ], [ 0, %50 ]
  %109 = phi %"struct.WTF::KeyValuePair.198"* [ %83, %95 ], [ %106, %105 ], [ %52, %50 ]
  %110 = insertvalue { %"struct.WTF::KeyValuePair.198"*, i8 } undef, %"struct.WTF::KeyValuePair.198"* %109, 0
  %111 = insertvalue { %"struct.WTF::KeyValuePair.198"*, i8 } %110, i8 %108, 1
  ret { %"struct.WTF::KeyValuePair.198"*, i8 } %111
}

declare void @_ZN5blink16FontPlatformDataC1ERKS0_f(%"class.blink::FontPlatformData"*, %"class.blink::FontPlatformData"* dereferenceable(72), float) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.216"* @_ZNK3WTF9HashTableIN5blink24FallbackListCompositeKeyENS_12KeyValuePairIS2_NSt3__110unique_ptrINS1_10ShapeCacheENS4_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS1_28FallbackListCompositeKeyHashENS_18HashMapValueTraitsINS1_30FallbackListCompositeKeyTraitsENS_10HashTraitsIS9_EEEESE_NS_18PartitionAllocatorEE6LookupINS_22IdentityHashTranslatorISC_SH_SI_EES2_EEPKSA_RKT0_(%"class.WTF::HashTable.213"*, %"struct.blink::FallbackListCompositeKey"* dereferenceable(40)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.213", %"class.WTF::HashTable.213"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.216"*, %"struct.WTF::KeyValuePair.216"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.216"* %4, null
  br i1 %5, label %111, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.213", %"class.WTF::HashTable.213"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"struct.blink::FallbackListCompositeKey", %"struct.blink::FallbackListCompositeKey"* %1, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, %9
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.blink::FallbackListCompositeKey", %"struct.blink::FallbackListCompositeKey"* %1, i64 0, i32 2
  %16 = getelementptr inbounds %"struct.blink::FallbackListCompositeKey", %"struct.blink::FallbackListCompositeKey"* %1, i64 0, i32 3
  %17 = getelementptr inbounds %"struct.blink::FallbackListCompositeKey", %"struct.blink::FallbackListCompositeKey"* %1, i64 0, i32 4
  %18 = getelementptr inbounds %"struct.blink::FallbackListCompositeKey", %"struct.blink::FallbackListCompositeKey"* %1, i64 0, i32 5
  %19 = getelementptr inbounds %"struct.blink::FallbackListCompositeKey", %"struct.blink::FallbackListCompositeKey"* %1, i64 0, i32 6
  %20 = getelementptr inbounds %"struct.blink::FallbackListCompositeKey", %"struct.blink::FallbackListCompositeKey"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %21 = getelementptr inbounds %"struct.blink::FallbackListCompositeKey", %"struct.blink::FallbackListCompositeKey"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = xor i32 %12, -1
  %23 = lshr i32 %12, 23
  %24 = add i32 %23, %22
  %25 = shl i32 %24, 12
  %26 = xor i32 %25, %24
  %27 = lshr i32 %26, 7
  %28 = xor i32 %27, %26
  %29 = shl i32 %28, 2
  %30 = xor i32 %29, %28
  %31 = lshr i32 %30, 20
  %32 = xor i32 %31, %30
  %33 = or i32 %32, 1
  %34 = zext i32 %33 to i64
  br label %35

35:                                               ; preds = %106, %6
  %36 = phi i64 [ 0, %6 ], [ %108, %106 ]
  %37 = phi i64 [ %14, %6 ], [ %110, %106 ]
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %4, i64 %37
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %4, i64 %37, i32 0, i32 1
  %40 = load i32, i32* %39, align 8
  switch i32 %40, label %65 [
    i32 0, label %41
    i32 1, label %106
  ]

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %4, i64 %37, i32 0, i32 2
  %43 = load float, float* %42, align 4
  %44 = fcmp oeq float %43, 0.000000e+00
  br i1 %44, label %45, label %65

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %4, i64 %37, i32 0, i32 3
  %47 = load float, float* %46, align 8
  %48 = fcmp oeq float %47, 0.000000e+00
  br i1 %48, label %49, label %65

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %4, i64 %37, i32 0, i32 4
  %51 = load float, float* %50, align 4
  %52 = fcmp oeq float %51, 0.000000e+00
  br i1 %52, label %53, label %65

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %4, i64 %37, i32 0, i32 5
  %55 = load i32, i32* %54, align 8
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %65

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %4, i64 %37, i32 0, i32 6
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %65

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %4, i64 %37, i32 0, i32 0, i32 0, i32 0, i32 2
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %111, label %65

65:                                               ; preds = %35, %41, %45, %49, %53, %57, %61
  %66 = load i32, i32* %11, align 8
  %67 = icmp eq i32 %40, %66
  br i1 %67, label %68, label %106

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %4, i64 %37, i32 0, i32 2
  %70 = load float, float* %69, align 4
  %71 = load float, float* %15, align 4
  %72 = fcmp oeq float %70, %71
  br i1 %72, label %73, label %106

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %4, i64 %37, i32 0, i32 3
  %75 = load float, float* %74, align 8
  %76 = load float, float* %16, align 8
  %77 = fcmp oeq float %75, %76
  br i1 %77, label %78, label %106

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %4, i64 %37, i32 0, i32 4
  %80 = load float, float* %79, align 4
  %81 = load float, float* %17, align 4
  %82 = fcmp oeq float %80, %81
  br i1 %82, label %83, label %106

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %4, i64 %37, i32 0, i32 5
  %85 = load i32, i32* %84, align 8
  %86 = load i32, i32* %18, align 8
  %87 = icmp eq i32 %85, %86
  br i1 %87, label %88, label %106

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %4, i64 %37, i32 0, i32 6
  %90 = load i32, i32* %89, align 4
  %91 = load i32, i32* %19, align 4
  %92 = icmp eq i32 %90, %91
  br i1 %92, label %93, label %106

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %4, i64 %37, i32 0, i32 0, i32 0, i32 0, i32 2
  %95 = load i32, i32* %94, align 4
  %96 = load i32, i32* %20, align 4
  %97 = icmp eq i32 %95, %96
  br i1 %97, label %98, label %106

98:                                               ; preds = %93
  %99 = icmp eq i32 %95, 0
  br i1 %99, label %111, label %100

100:                                              ; preds = %98
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load %"struct.blink::FontCacheKey"*, %"struct.blink::FontCacheKey"** %101, align 8
  %103 = load %"struct.blink::FontCacheKey"*, %"struct.blink::FontCacheKey"** %21, align 8
  %104 = zext i32 %95 to i64
  %105 = tail call zeroext i1 @_ZN3WTF14VectorComparerILb0EN5blink12FontCacheKeyEE7CompareEPKS2_S5_m(%"struct.blink::FontCacheKey"* %102, %"struct.blink::FontCacheKey"* %103, i64 %104) #17
  br i1 %105, label %111, label %106

106:                                              ; preds = %35, %93, %65, %68, %73, %78, %83, %88, %100
  %107 = icmp eq i64 %36, 0
  %108 = select i1 %107, i64 %34, i64 %36
  %109 = add i64 %108, %37
  %110 = and i64 %109, %10
  br label %35

111:                                              ; preds = %98, %100, %61, %2
  %112 = phi %"struct.WTF::KeyValuePair.216"* [ null, %2 ], [ %38, %98 ], [ null, %61 ], [ %38, %100 ]
  ret %"struct.WTF::KeyValuePair.216"* %112
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF14VectorComparerILb0EN5blink12FontCacheKeyEE7CompareEPKS2_S5_m(%"struct.blink::FontCacheKey"*, %"struct.blink::FontCacheKey"*, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %0, i64 %2
  %5 = icmp eq i64 %2, 0
  br i1 %5, label %86, label %6

6:                                                ; preds = %3, %82
  %7 = phi %"struct.blink::FontCacheKey"* [ %84, %82 ], [ %1, %3 ]
  %8 = phi %"struct.blink::FontCacheKey"* [ %83, %82 ], [ %0, %3 ]
  %9 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %8, i64 0, i32 5, i32 0
  %10 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %9, align 8
  %11 = icmp eq %"class.blink::FontVariationSettings"* %10, null
  %12 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %7, i64 0, i32 5, i32 0
  %13 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %12, align 8
  %14 = icmp ne %"class.blink::FontVariationSettings"* %13, null
  %15 = xor i1 %14, true
  %16 = or i1 %11, %15
  %17 = xor i1 %11, true
  %18 = or i1 %14, %17
  br i1 %16, label %52, label %19

19:                                               ; preds = %6
  %20 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %21, %23
  br i1 %24, label %25, label %52

25:                                               ; preds = %19
  %26 = icmp eq i32 %21, 0
  br i1 %26, label %52, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %30, align 8
  %32 = zext i32 %21 to i64
  %33 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %29, i64 %32
  br label %34

34:                                               ; preds = %48, %27
  %35 = phi %"class.blink::FontTagValuePair"* [ %50, %48 ], [ %31, %27 ]
  %36 = phi %"class.blink::FontTagValuePair"* [ %49, %48 ], [ %29, %27 ]
  %37 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %36, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %35, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %38, %40
  br i1 %41, label %42, label %52

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %36, i64 0, i32 1
  %44 = load float, float* %43, align 4
  %45 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %35, i64 0, i32 1
  %46 = load float, float* %45, align 4
  %47 = fcmp oeq float %44, %46
  br i1 %47, label %48, label %52

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %36, i64 1
  %50 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %35, i64 1
  %51 = icmp eq %"class.blink::FontTagValuePair"* %49, %33
  br i1 %51, label %52, label %34

52:                                               ; preds = %48, %42, %34, %25, %19, %6
  %53 = phi i1 [ true, %19 ], [ false, %25 ], [ %18, %6 ], [ true, %34 ], [ false, %48 ], [ true, %42 ]
  %54 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %8, i64 0, i32 0
  %55 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %7, i64 0, i32 0
  %56 = tail call zeroext i1 @_ZNK5blink22FontFaceCreationParamseqERKS0_(%"class.blink::FontFaceCreationParams"* %54, %"class.blink::FontFaceCreationParams"* dereferenceable(48) %55) #17
  br i1 %56, label %57, label %86

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %8, i64 0, i32 1
  %59 = load i32, i32* %58, align 8
  %60 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %7, i64 0, i32 1
  %61 = load i32, i32* %60, align 8
  %62 = icmp eq i32 %59, %61
  br i1 %62, label %63, label %86

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %8, i64 0, i32 2
  %65 = load i32, i32* %64, align 4
  %66 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %7, i64 0, i32 2
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %65, %67
  br i1 %68, label %69, label %86

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %8, i64 0, i32 3
  %71 = load float, float* %70, align 8
  %72 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %7, i64 0, i32 3
  %73 = load float, float* %72, align 8
  %74 = fcmp une float %71, %73
  %75 = or i1 %53, %74
  br i1 %75, label %86, label %76

76:                                               ; preds = %69
  %77 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %8, i64 0, i32 6
  %78 = load i8, i8* %77, align 8, !range !7
  %79 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %7, i64 0, i32 6
  %80 = load i8, i8* %79, align 8, !range !7
  %81 = icmp eq i8 %78, %80
  br i1 %81, label %82, label %86

82:                                               ; preds = %76
  %83 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %8, i64 1
  %84 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %7, i64 1
  %85 = icmp eq %"struct.blink::FontCacheKey"* %83, %4
  br i1 %85, label %86, label %6

86:                                               ; preds = %52, %57, %63, %69, %76, %82, %3
  %87 = phi i1 [ true, %3 ], [ false, %52 ], [ false, %57 ], [ false, %63 ], [ false, %69 ], [ true, %82 ], [ false, %76 ]
  ret i1 %87
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10ShapeCacheD2Ev(%"class.blink::ShapeCache"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ShapeCache", %"class.blink::ShapeCache"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %2) #17
  %3 = getelementptr inbounds %"class.blink::ShapeCache", %"class.blink::ShapeCache"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.268"*, %"struct.WTF::KeyValuePair.268"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.268"* %4, null
  br i1 %5, label %34, label %6, !prof !6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::ShapeCache", %"class.blink::ShapeCache"* %0, i64 0, i32 1, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %32, label %10

10:                                               ; preds = %6
  %11 = zext i32 %8 to i64
  br label %12

12:                                               ; preds = %29, %10
  %13 = phi i64 [ 0, %10 ], [ %30, %29 ]
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.268", %"struct.WTF::KeyValuePair.268"* %4, i64 %13, i32 0, i32 1
  %15 = load i16, i16* %14, align 4
  %16 = and i16 %15, 32767
  %17 = icmp eq i16 %16, 17
  br i1 %17, label %29, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair.268", %"struct.WTF::KeyValuePair.268"* %4, i64 %13, i32 1, i32 0
  %20 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %19, align 8
  %21 = icmp eq %"class.blink::ShapeResult"* %20, null
  br i1 %21, label %29, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %20, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %23) #17
  %24 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %29

27:                                               ; preds = %22
  tail call void @_ZN5blink11ShapeResultD1Ev(%"class.blink::ShapeResult"* nonnull %20) #17
  %28 = bitcast %"class.blink::ShapeResult"* %20 to i8*
  tail call void @free(i8* %28) #17
  br label %29

29:                                               ; preds = %27, %22, %18, %12
  %30 = add nuw nsw i64 %13, 1
  %31 = icmp eq i64 %30, %11
  br i1 %31, label %32, label %12

32:                                               ; preds = %29, %6
  %33 = bitcast %"struct.WTF::KeyValuePair.268"* %4 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %33) #17
  store %"struct.WTF::KeyValuePair.268"* null, %"struct.WTF::KeyValuePair.268"** %3, align 8
  br label %34

34:                                               ; preds = %1, %32
  %35 = getelementptr inbounds %"class.blink::ShapeCache", %"class.blink::ShapeCache"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load %"struct.WTF::KeyValuePair.229"*, %"struct.WTF::KeyValuePair.229"** %35, align 8
  %37 = icmp eq %"struct.WTF::KeyValuePair.229"* %36, null
  br i1 %37, label %65, label %38, !prof !6

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.blink::ShapeCache", %"class.blink::ShapeCache"* %0, i64 0, i32 0, i32 0, i32 1
  %40 = load i32, i32* %39, align 8
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %63, label %42

42:                                               ; preds = %38
  %43 = zext i32 %40 to i64
  br label %44

44:                                               ; preds = %60, %42
  %45 = phi i64 [ 0, %42 ], [ %61, %60 ]
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair.229", %"struct.WTF::KeyValuePair.229"* %36, i64 %45, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, -2
  br i1 %48, label %60, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair.229", %"struct.WTF::KeyValuePair.229"* %36, i64 %45, i32 1, i32 0
  %51 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %50, align 8
  %52 = icmp eq %"class.blink::ShapeResult"* %51, null
  br i1 %52, label %60, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %51, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %54) #17
  %55 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %51, i64 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %60

58:                                               ; preds = %53
  tail call void @_ZN5blink11ShapeResultD1Ev(%"class.blink::ShapeResult"* nonnull %51) #17
  %59 = bitcast %"class.blink::ShapeResult"* %51 to i8*
  tail call void @free(i8* %59) #17
  br label %60

60:                                               ; preds = %58, %53, %49, %44
  %61 = add nuw nsw i64 %45, 1
  %62 = icmp eq i64 %61, %43
  br i1 %62, label %63, label %44

63:                                               ; preds = %60, %38
  %64 = bitcast %"struct.WTF::KeyValuePair.229"* %36 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %64) #17
  store %"struct.WTF::KeyValuePair.229"* null, %"struct.WTF::KeyValuePair.229"** %35, align 8
  br label %65

65:                                               ; preds = %34, %63
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.216"*, i8 } @_ZN3WTF9HashTableIN5blink24FallbackListCompositeKeyENS_12KeyValuePairIS2_NSt3__110unique_ptrINS1_10ShapeCacheENS4_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS1_28FallbackListCompositeKeyHashENS_18HashMapValueTraitsINS1_30FallbackListCompositeKeyTraitsENS_10HashTraitsIS9_EEEESE_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EERKS2_S9_EENS_18HashTableAddResultISJ_SA_EEOT0_OT1_(%"class.WTF::HashTable.213"*, %"struct.blink::FallbackListCompositeKey"* dereferenceable(40), %"class.std::__1::unique_ptr.222"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.213", %"class.WTF::HashTable.213"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.216"*, %"struct.WTF::KeyValuePair.216"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.216"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.216"* @_ZN3WTF9HashTableIN5blink24FallbackListCompositeKeyENS_12KeyValuePairIS2_NSt3__110unique_ptrINS1_10ShapeCacheENS4_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS1_28FallbackListCompositeKeyHashENS_18HashMapValueTraitsINS1_30FallbackListCompositeKeyTraitsENS_10HashTraitsIS9_EEEESE_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable.213"* %0, %"struct.WTF::KeyValuePair.216"* null)
  %9 = load %"struct.WTF::KeyValuePair.216"*, %"struct.WTF::KeyValuePair.216"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.216"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.213", %"class.WTF::HashTable.213"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.blink::FallbackListCompositeKey", %"struct.blink::FallbackListCompositeKey"* %1, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = and i32 %17, %14
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"struct.blink::FallbackListCompositeKey", %"struct.blink::FallbackListCompositeKey"* %1, i64 0, i32 2
  %21 = getelementptr inbounds %"struct.blink::FallbackListCompositeKey", %"struct.blink::FallbackListCompositeKey"* %1, i64 0, i32 3
  %22 = getelementptr inbounds %"struct.blink::FallbackListCompositeKey", %"struct.blink::FallbackListCompositeKey"* %1, i64 0, i32 4
  %23 = getelementptr inbounds %"struct.blink::FallbackListCompositeKey", %"struct.blink::FallbackListCompositeKey"* %1, i64 0, i32 5
  %24 = getelementptr inbounds %"struct.blink::FallbackListCompositeKey", %"struct.blink::FallbackListCompositeKey"* %1, i64 0, i32 6
  %25 = getelementptr inbounds %"struct.blink::FallbackListCompositeKey", %"struct.blink::FallbackListCompositeKey"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %26 = getelementptr inbounds %"struct.blink::FallbackListCompositeKey", %"struct.blink::FallbackListCompositeKey"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = xor i32 %17, -1
  %28 = lshr i32 %17, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %40

40:                                               ; preds = %112, %10
  %41 = phi i64 [ 0, %10 ], [ %115, %112 ]
  %42 = phi i64 [ %19, %10 ], [ %117, %112 ]
  %43 = phi %"struct.WTF::KeyValuePair.216"* [ null, %10 ], [ %113, %112 ]
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %11, i64 %42
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %11, i64 %42, i32 0, i32 1
  %46 = load i32, i32* %45, align 8
  switch i32 %46, label %71 [
    i32 0, label %47
    i32 1, label %112
  ]

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %11, i64 %42, i32 0, i32 2
  %49 = load float, float* %48, align 4
  %50 = fcmp oeq float %49, 0.000000e+00
  br i1 %50, label %51, label %71

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %11, i64 %42, i32 0, i32 3
  %53 = load float, float* %52, align 8
  %54 = fcmp oeq float %53, 0.000000e+00
  br i1 %54, label %55, label %71

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %11, i64 %42, i32 0, i32 4
  %57 = load float, float* %56, align 4
  %58 = fcmp oeq float %57, 0.000000e+00
  br i1 %58, label %59, label %71

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %11, i64 %42, i32 0, i32 5
  %61 = load i32, i32* %60, align 8
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %71

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %11, i64 %42, i32 0, i32 6
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %71

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %11, i64 %42, i32 0, i32 0, i32 0, i32 0, i32 2
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %118, label %71

71:                                               ; preds = %40, %47, %51, %55, %59, %63, %67
  %72 = load i32, i32* %16, align 8
  %73 = icmp eq i32 %46, %72
  br i1 %73, label %74, label %112

74:                                               ; preds = %71
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %11, i64 %42, i32 0, i32 2
  %76 = load float, float* %75, align 4
  %77 = load float, float* %20, align 4
  %78 = fcmp oeq float %76, %77
  br i1 %78, label %79, label %112

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %11, i64 %42, i32 0, i32 3
  %81 = load float, float* %80, align 8
  %82 = load float, float* %21, align 8
  %83 = fcmp oeq float %81, %82
  br i1 %83, label %84, label %112

84:                                               ; preds = %79
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %11, i64 %42, i32 0, i32 4
  %86 = load float, float* %85, align 4
  %87 = load float, float* %22, align 4
  %88 = fcmp oeq float %86, %87
  br i1 %88, label %89, label %112

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %11, i64 %42, i32 0, i32 5
  %91 = load i32, i32* %90, align 8
  %92 = load i32, i32* %23, align 8
  %93 = icmp eq i32 %91, %92
  br i1 %93, label %94, label %112

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %11, i64 %42, i32 0, i32 6
  %96 = load i32, i32* %95, align 4
  %97 = load i32, i32* %24, align 4
  %98 = icmp eq i32 %96, %97
  br i1 %98, label %99, label %112

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %11, i64 %42, i32 0, i32 0, i32 0, i32 0, i32 2
  %101 = load i32, i32* %100, align 4
  %102 = load i32, i32* %25, align 4
  %103 = icmp eq i32 %101, %102
  br i1 %103, label %104, label %112

104:                                              ; preds = %99
  %105 = icmp eq i32 %101, 0
  br i1 %105, label %158, label %106

106:                                              ; preds = %104
  %107 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load %"struct.blink::FontCacheKey"*, %"struct.blink::FontCacheKey"** %107, align 8
  %109 = load %"struct.blink::FontCacheKey"*, %"struct.blink::FontCacheKey"** %26, align 8
  %110 = zext i32 %101 to i64
  %111 = tail call zeroext i1 @_ZN3WTF14VectorComparerILb0EN5blink12FontCacheKeyEE7CompareEPKS2_S5_m(%"struct.blink::FontCacheKey"* %108, %"struct.blink::FontCacheKey"* %109, i64 %110) #17
  br i1 %111, label %158, label %112

112:                                              ; preds = %40, %99, %71, %74, %79, %84, %89, %94, %106
  %113 = phi %"struct.WTF::KeyValuePair.216"* [ %43, %106 ], [ %43, %94 ], [ %43, %89 ], [ %43, %84 ], [ %43, %79 ], [ %43, %74 ], [ %43, %71 ], [ %43, %99 ], [ %44, %40 ]
  %114 = icmp eq i64 %41, 0
  %115 = select i1 %114, i64 %39, i64 %41
  %116 = add i64 %115, %42
  %117 = and i64 %116, %15
  br label %40

118:                                              ; preds = %67
  %119 = icmp eq %"struct.WTF::KeyValuePair.216"* %43, null
  br i1 %119, label %128, label %120

120:                                              ; preds = %118
  %121 = bitcast %"struct.WTF::KeyValuePair.216"* %43 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %121, i8 0, i64 48, i1 false) #17
  %122 = getelementptr inbounds %"class.WTF::HashTable.213", %"class.WTF::HashTable.213"* %0, i64 0, i32 3
  %123 = load i32, i32* %122, align 8
  %124 = add i32 %123, 2147483647
  %125 = and i32 %124, 2147483647
  %126 = and i32 %123, -2147483648
  %127 = or i32 %125, %126
  store i32 %127, i32* %122, align 8
  br label %128

128:                                              ; preds = %118, %120
  %129 = phi %"struct.WTF::KeyValuePair.216"* [ %43, %120 ], [ %44, %118 ]
  %130 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %129, i64 0, i32 0, i32 0
  %131 = getelementptr inbounds %"struct.blink::FallbackListCompositeKey", %"struct.blink::FallbackListCompositeKey"* %1, i64 0, i32 0
  %132 = tail call dereferenceable(16) %"class.WTF::Vector.217"* @_ZN3WTF6VectorIN5blink12FontCacheKeyELj0ENS_18PartitionAllocatorEEaSERKS4_(%"class.WTF::Vector.217"* %130, %"class.WTF::Vector.217"* dereferenceable(16) %131) #17
  %133 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %129, i64 0, i32 0, i32 1
  %134 = bitcast i32* %133 to i8*
  %135 = bitcast i32* %16 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %134, i8* align 8 %135, i64 24, i1 false) #17
  %136 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %129, i64 0, i32 1
  %137 = getelementptr inbounds %"class.std::__1::unique_ptr.222", %"class.std::__1::unique_ptr.222"* %2, i64 0, i32 0, i32 0, i32 0
  %138 = bitcast %"class.std::__1::unique_ptr.222"* %2 to i64*
  %139 = load i64, i64* %138, align 8
  store %"class.blink::ShapeCache"* null, %"class.blink::ShapeCache"** %137, align 8
  %140 = getelementptr inbounds %"class.std::__1::unique_ptr.222", %"class.std::__1::unique_ptr.222"* %136, i64 0, i32 0, i32 0, i32 0
  %141 = load %"class.blink::ShapeCache"*, %"class.blink::ShapeCache"** %140, align 8
  %142 = bitcast %"class.std::__1::unique_ptr.222"* %136 to i64*
  store i64 %139, i64* %142, align 8
  %143 = icmp eq %"class.blink::ShapeCache"* %141, null
  br i1 %143, label %146, label %144

144:                                              ; preds = %128
  tail call void @_ZN5blink10ShapeCacheD2Ev(%"class.blink::ShapeCache"* nonnull %141) #17
  %145 = bitcast %"class.blink::ShapeCache"* %141 to i8*
  tail call void @free(i8* %145) #17
  br label %146

146:                                              ; preds = %128, %144
  %147 = getelementptr inbounds %"class.WTF::HashTable.213", %"class.WTF::HashTable.213"* %0, i64 0, i32 2
  %148 = load i32, i32* %147, align 4
  %149 = add i32 %148, 1
  store i32 %149, i32* %147, align 4
  %150 = getelementptr inbounds %"class.WTF::HashTable.213", %"class.WTF::HashTable.213"* %0, i64 0, i32 3
  %151 = load i32, i32* %150, align 8
  %152 = add i32 %151, %149
  %153 = shl i32 %152, 1
  %154 = load i32, i32* %12, align 8
  %155 = icmp ult i32 %153, %154
  br i1 %155, label %158, label %156

156:                                              ; preds = %146
  %157 = tail call %"struct.WTF::KeyValuePair.216"* @_ZN3WTF9HashTableIN5blink24FallbackListCompositeKeyENS_12KeyValuePairIS2_NSt3__110unique_ptrINS1_10ShapeCacheENS4_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS1_28FallbackListCompositeKeyHashENS_18HashMapValueTraitsINS1_30FallbackListCompositeKeyTraitsENS_10HashTraitsIS9_EEEESE_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable.213"* %0, %"struct.WTF::KeyValuePair.216"* %129)
  br label %158

158:                                              ; preds = %104, %106, %146, %156
  %159 = phi i8 [ 1, %146 ], [ 1, %156 ], [ 0, %106 ], [ 0, %104 ]
  %160 = phi %"struct.WTF::KeyValuePair.216"* [ %129, %146 ], [ %157, %156 ], [ %44, %106 ], [ %44, %104 ]
  %161 = insertvalue { %"struct.WTF::KeyValuePair.216"*, i8 } undef, %"struct.WTF::KeyValuePair.216"* %160, 0
  %162 = insertvalue { %"struct.WTF::KeyValuePair.216"*, i8 } %161, i8 %159, 1
  ret { %"struct.WTF::KeyValuePair.216"*, i8 } %162
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.216"* @_ZN3WTF9HashTableIN5blink24FallbackListCompositeKeyENS_12KeyValuePairIS2_NSt3__110unique_ptrINS1_10ShapeCacheENS4_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS1_28FallbackListCompositeKeyHashENS_18HashMapValueTraitsINS1_30FallbackListCompositeKeyTraitsENS_10HashTraitsIS9_EEEESE_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable.213"*, %"struct.WTF::KeyValuePair.216"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.213", %"class.WTF::HashTable.213"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.213", %"class.WTF::HashTable.213"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #17
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #17
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20, i64 0, i64 0), i8* %22, i8* %23) #17
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.21, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #17
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #17
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #17
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = mul nuw nsw i64 %33, 48
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([186 x i8], [186 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink24FallbackListCompositeKeyENSt3__110unique_ptrINS2_10ShapeCacheENS4_14default_deleteIS6_EEEEEEEEPKcv, i64 0, i64 0)) #17
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #17
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.216"*
  %37 = call %"struct.WTF::KeyValuePair.216"* @_ZN3WTF9HashTableIN5blink24FallbackListCompositeKeyENS_12KeyValuePairIS2_NSt3__110unique_ptrINS1_10ShapeCacheENS4_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS1_28FallbackListCompositeKeyHashENS_18HashMapValueTraitsINS1_30FallbackListCompositeKeyTraitsENS_10HashTraitsIS9_EEEESE_NS_18PartitionAllocatorEE8RehashToEPSA_jSK_(%"class.WTF::HashTable.213"* %0, %"struct.WTF::KeyValuePair.216"* %36, i32 %32, %"struct.WTF::KeyValuePair.216"* %1) #17
  ret %"struct.WTF::KeyValuePair.216"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.216"* @_ZN3WTF9HashTableIN5blink24FallbackListCompositeKeyENS_12KeyValuePairIS2_NSt3__110unique_ptrINS1_10ShapeCacheENS4_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS1_28FallbackListCompositeKeyHashENS_18HashMapValueTraitsINS1_30FallbackListCompositeKeyTraitsENS_10HashTraitsIS9_EEEESE_NS_18PartitionAllocatorEE8RehashToEPSA_jSK_(%"class.WTF::HashTable.213"*, %"struct.WTF::KeyValuePair.216"*, i32, %"struct.WTF::KeyValuePair.216"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.213", align 8
  %6 = bitcast %"class.WTF::HashTable.213"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #17
  %7 = getelementptr inbounds %"class.WTF::HashTable.213", %"class.WTF::HashTable.213"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.213", %"class.WTF::HashTable.213"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.213", %"class.WTF::HashTable.213"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.213", %"class.WTF::HashTable.213"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.213"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.216"* %1, %"struct.WTF::KeyValuePair.216"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.213", %"class.WTF::HashTable.213"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.213", %"class.WTF::HashTable.213"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.216"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.213"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.213"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.216"*, %"struct.WTF::KeyValuePair.216"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.216"* %22 to i64
  br label %57

24:                                               ; preds = %122
  %25 = bitcast %"class.WTF::HashTable.213"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.213"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %123, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.216"* [ null, %16 ], [ %126, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %124, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.216"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %53, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %51, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %48, %39
  %42 = phi i64 [ 0, %39 ], [ %49, %48 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %35, i64 %42, i32 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %48, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %35, i64 %42
  call void @_ZN3WTF12KeyValuePairIN5blink24FallbackListCompositeKeyENSt3__110unique_ptrINS1_10ShapeCacheENS3_14default_deleteIS5_EEEEED2Ev(%"struct.WTF::KeyValuePair.216"* %47) #17
  br label %48

48:                                               ; preds = %46, %41
  %49 = add nuw nsw i64 %42, 1
  %50 = icmp eq i64 %49, %40
  br i1 %50, label %51, label %41

51:                                               ; preds = %48, %37
  %52 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %52) #17
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %53

53:                                               ; preds = %28, %51
  %54 = getelementptr inbounds %"class.WTF::HashTable.213", %"class.WTF::HashTable.213"* %0, i64 0, i32 3
  %55 = load i32, i32* %54, align 8
  %56 = and i32 %55, -2147483648
  store i32 %56, i32* %54, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #17
  ret %"struct.WTF::KeyValuePair.216"* %33

57:                                               ; preds = %21, %122
  %58 = phi i64 [ %123, %122 ], [ %23, %21 ]
  %59 = phi i32 [ %124, %122 ], [ %13, %21 ]
  %60 = phi %"struct.WTF::KeyValuePair.216"* [ %125, %122 ], [ %22, %21 ]
  %61 = phi %"struct.WTF::KeyValuePair.216"* [ %126, %122 ], [ null, %21 ]
  %62 = phi i32 [ %127, %122 ], [ 0, %21 ]
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %60, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %60, i64 %63, i32 0, i32 1
  %66 = load i32, i32* %65, align 8
  switch i32 %66, label %91 [
    i32 0, label %67
    i32 1, label %122
  ]

67:                                               ; preds = %57
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %60, i64 %63, i32 0, i32 2
  %69 = load float, float* %68, align 4
  %70 = fcmp oeq float %69, 0.000000e+00
  br i1 %70, label %71, label %91

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %60, i64 %63, i32 0, i32 3
  %73 = load float, float* %72, align 8
  %74 = fcmp oeq float %73, 0.000000e+00
  br i1 %74, label %75, label %91

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %60, i64 %63, i32 0, i32 4
  %77 = load float, float* %76, align 4
  %78 = fcmp oeq float %77, 0.000000e+00
  br i1 %78, label %79, label %91

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %60, i64 %63, i32 0, i32 5
  %81 = load i32, i32* %80, align 8
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %91

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %60, i64 %63, i32 0, i32 6
  %85 = load i32, i32* %84, align 4
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %91

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %60, i64 %63, i32 0, i32 0, i32 0, i32 0, i32 2
  %89 = load i32, i32* %88, align 4
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %122, label %91

91:                                               ; preds = %57, %87, %83, %79, %75, %71, %67
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %64, i64 0, i32 0
  %93 = call { %"struct.WTF::KeyValuePair.216"*, i8 } @_ZN3WTF9HashTableIN5blink24FallbackListCompositeKeyENS_12KeyValuePairIS2_NSt3__110unique_ptrINS1_10ShapeCacheENS4_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS1_28FallbackListCompositeKeyHashENS_18HashMapValueTraitsINS1_30FallbackListCompositeKeyTraitsENS_10HashTraitsIS9_EEEESE_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorISC_SH_SI_EES2_EENS4_4pairIPSA_bEERKT0_(%"class.WTF::HashTable.213"* nonnull %5, %"struct.blink::FallbackListCompositeKey"* dereferenceable(40) %92) #17
  %94 = extractvalue { %"struct.WTF::KeyValuePair.216"*, i8 } %93, 0
  call void @_ZN3WTF12KeyValuePairIN5blink24FallbackListCompositeKeyENSt3__110unique_ptrINS1_10ShapeCacheENS3_14default_deleteIS5_EEEEED2Ev(%"struct.WTF::KeyValuePair.216"* %94) #17
  %95 = bitcast %"struct.WTF::KeyValuePair.216"* %94 to i8*
  %96 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %94, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %94, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %98 = bitcast %"struct.WTF::KeyValuePair.216"* %64 to i64*
  call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 0, i64 16, i1 false) #17
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"struct.WTF::KeyValuePair.216"* %94 to i64*
  store atomic i64 0, i64* %98 monotonic, align 8
  store atomic i64 %99, i64* %100 monotonic, align 8
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %60, i64 %63, i32 0, i32 0, i32 0, i32 0, i32 1
  %102 = load i32, i32* %96, align 4
  %103 = load i32, i32* %101, align 4
  store i32 %103, i32* %96, align 4
  store i32 %102, i32* %101, align 4
  %104 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %60, i64 %63, i32 0, i32 0, i32 0, i32 0, i32 2
  %105 = load i32, i32* %97, align 4
  %106 = load i32, i32* %104, align 4
  store i32 %106, i32* %97, align 4
  store i32 %105, i32* %104, align 4
  %107 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %94, i64 0, i32 0, i32 1
  %108 = bitcast i32* %107 to i8*
  %109 = bitcast i32* %65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %108, i8* align 8 %109, i64 24, i1 false) #17
  %110 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %94, i64 0, i32 1
  %111 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %60, i64 %63, i32 1
  %112 = getelementptr inbounds %"class.std::__1::unique_ptr.222", %"class.std::__1::unique_ptr.222"* %111, i64 0, i32 0, i32 0, i32 0
  %113 = bitcast %"class.std::__1::unique_ptr.222"* %111 to i64*
  %114 = load i64, i64* %113, align 8
  store %"class.blink::ShapeCache"* null, %"class.blink::ShapeCache"** %112, align 8
  %115 = bitcast %"class.std::__1::unique_ptr.222"* %110 to i64*
  store i64 %114, i64* %115, align 8
  %116 = load %"struct.WTF::KeyValuePair.216"*, %"struct.WTF::KeyValuePair.216"** %15, align 8
  %117 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %116, i64 %63
  %118 = icmp eq %"struct.WTF::KeyValuePair.216"* %117, %3
  %119 = select i1 %118, %"struct.WTF::KeyValuePair.216"* %94, %"struct.WTF::KeyValuePair.216"* %61
  %120 = load i32, i32* %12, align 8
  %121 = ptrtoint %"struct.WTF::KeyValuePair.216"* %116 to i64
  br label %122

122:                                              ; preds = %57, %87, %91
  %123 = phi i64 [ %121, %91 ], [ %58, %87 ], [ %58, %57 ]
  %124 = phi i32 [ %120, %91 ], [ %59, %87 ], [ %59, %57 ]
  %125 = phi %"struct.WTF::KeyValuePair.216"* [ %116, %91 ], [ %60, %87 ], [ %60, %57 ]
  %126 = phi %"struct.WTF::KeyValuePair.216"* [ %119, %91 ], [ %61, %87 ], [ %61, %57 ]
  %127 = add i32 %62, 1
  %128 = icmp eq i32 %127, %124
  br i1 %128, label %24, label %57
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.216"*, i8 } @_ZN3WTF9HashTableIN5blink24FallbackListCompositeKeyENS_12KeyValuePairIS2_NSt3__110unique_ptrINS1_10ShapeCacheENS4_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS1_28FallbackListCompositeKeyHashENS_18HashMapValueTraitsINS1_30FallbackListCompositeKeyTraitsENS_10HashTraitsIS9_EEEESE_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorISC_SH_SI_EES2_EENS4_4pairIPSA_bEERKT0_(%"class.WTF::HashTable.213"*, %"struct.blink::FallbackListCompositeKey"* dereferenceable(40)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.213", %"class.WTF::HashTable.213"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.216"*, %"struct.WTF::KeyValuePair.216"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.213", %"class.WTF::HashTable.213"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"struct.blink::FallbackListCompositeKey", %"struct.blink::FallbackListCompositeKey"* %1, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, %7
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"struct.blink::FallbackListCompositeKey", %"struct.blink::FallbackListCompositeKey"* %1, i64 0, i32 2
  %14 = getelementptr inbounds %"struct.blink::FallbackListCompositeKey", %"struct.blink::FallbackListCompositeKey"* %1, i64 0, i32 3
  %15 = getelementptr inbounds %"struct.blink::FallbackListCompositeKey", %"struct.blink::FallbackListCompositeKey"* %1, i64 0, i32 4
  %16 = getelementptr inbounds %"struct.blink::FallbackListCompositeKey", %"struct.blink::FallbackListCompositeKey"* %1, i64 0, i32 5
  %17 = getelementptr inbounds %"struct.blink::FallbackListCompositeKey", %"struct.blink::FallbackListCompositeKey"* %1, i64 0, i32 6
  %18 = getelementptr inbounds %"struct.blink::FallbackListCompositeKey", %"struct.blink::FallbackListCompositeKey"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %19 = getelementptr inbounds %"struct.blink::FallbackListCompositeKey", %"struct.blink::FallbackListCompositeKey"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = xor i32 %10, -1
  %21 = lshr i32 %10, 23
  %22 = add i32 %21, %20
  %23 = shl i32 %22, 12
  %24 = xor i32 %23, %22
  %25 = lshr i32 %24, 7
  %26 = xor i32 %25, %24
  %27 = shl i32 %26, 2
  %28 = xor i32 %27, %26
  %29 = lshr i32 %28, 20
  %30 = xor i32 %29, %28
  %31 = or i32 %30, 1
  %32 = zext i32 %31 to i64
  br label %33

33:                                               ; preds = %108, %2
  %34 = phi %"struct.WTF::KeyValuePair.216"* [ null, %2 ], [ %109, %108 ]
  %35 = phi i64 [ 0, %2 ], [ %111, %108 ]
  %36 = phi i64 [ %12, %2 ], [ %113, %108 ]
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %4, i64 %36
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %4, i64 %36, i32 0, i32 1
  %39 = load i32, i32* %38, align 8
  switch i32 %39, label %67 [
    i32 0, label %40
    i32 1, label %108
  ]

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %4, i64 %36, i32 0, i32 2
  %42 = load float, float* %41, align 4
  %43 = fcmp oeq float %42, 0.000000e+00
  br i1 %43, label %44, label %67

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %4, i64 %36, i32 0, i32 3
  %46 = load float, float* %45, align 8
  %47 = fcmp oeq float %46, 0.000000e+00
  br i1 %47, label %48, label %67

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %4, i64 %36, i32 0, i32 4
  %50 = load float, float* %49, align 4
  %51 = fcmp oeq float %50, 0.000000e+00
  br i1 %51, label %52, label %67

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %4, i64 %36, i32 0, i32 5
  %54 = load i32, i32* %53, align 8
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %67

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %4, i64 %36, i32 0, i32 6
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %67

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %4, i64 %36, i32 0, i32 0, i32 0, i32 0, i32 2
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %67

64:                                               ; preds = %60
  %65 = icmp eq %"struct.WTF::KeyValuePair.216"* %34, null
  %66 = select i1 %65, %"struct.WTF::KeyValuePair.216"* %37, %"struct.WTF::KeyValuePair.216"* %34
  br label %114

67:                                               ; preds = %33, %40, %44, %48, %52, %56, %60
  %68 = load i32, i32* %9, align 8
  %69 = icmp eq i32 %39, %68
  br i1 %69, label %70, label %108

70:                                               ; preds = %67
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %4, i64 %36, i32 0, i32 2
  %72 = load float, float* %71, align 4
  %73 = load float, float* %13, align 4
  %74 = fcmp oeq float %72, %73
  br i1 %74, label %75, label %108

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %4, i64 %36, i32 0, i32 3
  %77 = load float, float* %76, align 8
  %78 = load float, float* %14, align 8
  %79 = fcmp oeq float %77, %78
  br i1 %79, label %80, label %108

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %4, i64 %36, i32 0, i32 4
  %82 = load float, float* %81, align 4
  %83 = load float, float* %15, align 4
  %84 = fcmp oeq float %82, %83
  br i1 %84, label %85, label %108

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %4, i64 %36, i32 0, i32 5
  %87 = load i32, i32* %86, align 8
  %88 = load i32, i32* %16, align 8
  %89 = icmp eq i32 %87, %88
  br i1 %89, label %90, label %108

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %4, i64 %36, i32 0, i32 6
  %92 = load i32, i32* %91, align 4
  %93 = load i32, i32* %17, align 4
  %94 = icmp eq i32 %92, %93
  br i1 %94, label %95, label %108

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %4, i64 %36, i32 0, i32 0, i32 0, i32 0, i32 2
  %97 = load i32, i32* %96, align 4
  %98 = load i32, i32* %18, align 4
  %99 = icmp eq i32 %97, %98
  br i1 %99, label %100, label %108

100:                                              ; preds = %95
  %101 = icmp eq i32 %97, 0
  br i1 %101, label %114, label %102

102:                                              ; preds = %100
  %103 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load %"struct.blink::FontCacheKey"*, %"struct.blink::FontCacheKey"** %103, align 8
  %105 = load %"struct.blink::FontCacheKey"*, %"struct.blink::FontCacheKey"** %19, align 8
  %106 = zext i32 %97 to i64
  %107 = tail call zeroext i1 @_ZN3WTF14VectorComparerILb0EN5blink12FontCacheKeyEE7CompareEPKS2_S5_m(%"struct.blink::FontCacheKey"* %104, %"struct.blink::FontCacheKey"* %105, i64 %106) #17
  br i1 %107, label %114, label %108

108:                                              ; preds = %33, %95, %67, %70, %75, %80, %85, %90, %102
  %109 = phi %"struct.WTF::KeyValuePair.216"* [ %34, %95 ], [ %34, %67 ], [ %34, %70 ], [ %34, %75 ], [ %34, %80 ], [ %34, %85 ], [ %34, %90 ], [ %34, %102 ], [ %37, %33 ]
  %110 = icmp eq i64 %35, 0
  %111 = select i1 %110, i64 %32, i64 %35
  %112 = add i64 %111, %36
  %113 = and i64 %112, %8
  br label %33

114:                                              ; preds = %100, %102, %64
  %115 = phi %"struct.WTF::KeyValuePair.216"* [ %66, %64 ], [ %37, %102 ], [ %37, %100 ]
  %116 = phi i8 [ 0, %64 ], [ 1, %102 ], [ 1, %100 ]
  %117 = insertvalue { %"struct.WTF::KeyValuePair.216"*, i8 } undef, %"struct.WTF::KeyValuePair.216"* %115, 0
  %118 = insertvalue { %"struct.WTF::KeyValuePair.216"*, i8 } %117, i8 %116, 1
  ret { %"struct.WTF::KeyValuePair.216"*, i8 } %118
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12KeyValuePairIN5blink24FallbackListCompositeKeyENSt3__110unique_ptrINS1_10ShapeCacheENS3_14default_deleteIS5_EEEEED2Ev(%"struct.WTF::KeyValuePair.216"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.blink::ShapeCache"*, %"class.blink::ShapeCache"** %2, align 8
  store %"class.blink::ShapeCache"* null, %"class.blink::ShapeCache"** %2, align 8
  %4 = icmp eq %"class.blink::ShapeCache"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN5blink10ShapeCacheD2Ev(%"class.blink::ShapeCache"* nonnull %3) #17
  %6 = bitcast %"class.blink::ShapeCache"* %3 to i8*
  tail call void @free(i8* %6) #17
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"struct.blink::FontCacheKey"*, %"struct.blink::FontCacheKey"** %8, align 8
  %10 = icmp eq %"struct.blink::FontCacheKey"* %9, null
  br i1 %10, label %78, label %11, !prof !6

11:                                               ; preds = %7
  %12 = bitcast %"struct.blink::FontCacheKey"* %9 to i8*
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %76, label %16, !prof !5

16:                                               ; preds = %11
  %17 = zext i32 %14 to i64
  %18 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %9, i64 %17
  br label %19

19:                                               ; preds = %70, %16
  %20 = phi %"struct.blink::FontCacheKey"* [ %71, %70 ], [ %9, %16 ]
  %21 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %20, i64 0, i32 5, i32 0
  %22 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %21, align 8
  %23 = icmp eq %"class.blink::FontVariationSettings"* %22, null
  br i1 %23, label %44, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %22, i64 0, i32 1, i32 0
  %26 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %25, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %26) #17
  %27 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %25, i64 0, i32 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %44

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %25, i64 -4
  %32 = bitcast %"class.base::RefCounted"* %31 to %"class.blink::FontTagValuePair"**
  %33 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %32, align 8
  %34 = icmp eq %"class.blink::FontTagValuePair"* %33, null
  %35 = bitcast %"class.blink::FontTagValuePair"* %33 to i8*
  br i1 %34, label %42, label %36, !prof !6

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %25, i64 -1, i32 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %41, label %40, !prof !5

40:                                               ; preds = %36
  store i32 0, i32* %37, align 4
  br label %41

41:                                               ; preds = %40, %36
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %35) #17
  br label %42

42:                                               ; preds = %41, %30
  %43 = bitcast %"class.base::RefCounted"* %31 to i8*
  tail call void @free(i8* %43) #17
  br label %44

44:                                               ; preds = %42, %24, %19
  %45 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %20, i64 0, i32 0, i32 2
  %46 = bitcast %"class.std::__1::basic_string"* %45 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  %48 = load i8, i8* %47, align 1
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  tail call void @_ZdlPv(i8* %52) #18
  br label %53

53:                                               ; preds = %50, %44
  %54 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %20, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %56, label %70, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %55) #17
  br label %70

70:                                               ; preds = %53, %66, %69
  %71 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %20, i64 1
  %72 = icmp eq %"struct.blink::FontCacheKey"* %71, %18
  br i1 %72, label %73, label %19

73:                                               ; preds = %70
  store i32 0, i32* %13, align 4
  %74 = bitcast %"struct.WTF::KeyValuePair.216"* %0 to i8**
  %75 = load i8*, i8** %74, align 8
  br label %76

76:                                               ; preds = %73, %11
  %77 = phi i8* [ %75, %73 ], [ %12, %11 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %77) #17
  store %"struct.blink::FontCacheKey"* null, %"struct.blink::FontCacheKey"** %8, align 8
  br label %78

78:                                               ; preds = %7, %76
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::Vector.217"* @_ZN3WTF6VectorIN5blink12FontCacheKeyELj0ENS_18PartitionAllocatorEEaSERKS4_(%"class.WTF::Vector.217"*, %"class.WTF::Vector.217"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.WTF::Vector.217"* %1, %0
  br i1 %3, label %181, label %4, !prof !5

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.217", %"class.WTF::Vector.217"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.WTF::Vector.217", %"class.WTF::Vector.217"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %6, %8
  br i1 %9, label %10, label %72

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.WTF::Vector.217", %"class.WTF::Vector.217"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load %"struct.blink::FontCacheKey"*, %"struct.blink::FontCacheKey"** %11, align 8
  %13 = zext i32 %6 to i64
  %14 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %12, i64 %13
  %15 = zext i32 %8 to i64
  %16 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %12, i64 %15
  br label %17

17:                                               ; preds = %68, %10
  %18 = phi %"struct.blink::FontCacheKey"* [ %69, %68 ], [ %16, %10 ]
  %19 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %18, i64 0, i32 5, i32 0
  %20 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %19, align 8
  %21 = icmp eq %"class.blink::FontVariationSettings"* %20, null
  br i1 %21, label %42, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %20, i64 0, i32 1, i32 0
  %24 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %23, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %24) #17
  %25 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %23, i64 0, i32 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %42

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %23, i64 -4
  %30 = bitcast %"class.base::RefCounted"* %29 to %"class.blink::FontTagValuePair"**
  %31 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %30, align 8
  %32 = icmp eq %"class.blink::FontTagValuePair"* %31, null
  %33 = bitcast %"class.blink::FontTagValuePair"* %31 to i8*
  br i1 %32, label %40, label %34, !prof !6

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %23, i64 -1, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %39, label %38, !prof !5

38:                                               ; preds = %34
  store i32 0, i32* %35, align 4
  br label %39

39:                                               ; preds = %38, %34
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %33) #17
  br label %40

40:                                               ; preds = %39, %28
  %41 = bitcast %"class.base::RefCounted"* %29 to i8*
  tail call void @free(i8* %41) #17
  br label %42

42:                                               ; preds = %40, %22, %17
  %43 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %18, i64 0, i32 0, i32 2
  %44 = bitcast %"class.std::__1::basic_string"* %43 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  tail call void @_ZdlPv(i8* %50) #18
  br label %51

51:                                               ; preds = %48, %42
  %52 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %18, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %68, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %53) #17
  br label %68

68:                                               ; preds = %51, %64, %67
  %69 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %18, i64 1
  %70 = icmp eq %"struct.blink::FontCacheKey"* %69, %14
  br i1 %70, label %71, label %17

71:                                               ; preds = %68
  store i32 %8, i32* %5, align 4
  br label %163

72:                                               ; preds = %4
  %73 = getelementptr inbounds %"class.WTF::Vector.217", %"class.WTF::Vector.217"* %0, i64 0, i32 0, i32 0, i32 1
  %74 = load i32, i32* %73, align 8
  %75 = icmp ugt i32 %8, %74
  br i1 %75, label %76, label %163

76:                                               ; preds = %72
  %77 = icmp eq i32 %74, 0
  br i1 %77, label %146, label %78

78:                                               ; preds = %76
  %79 = icmp eq i32 %6, 0
  br i1 %79, label %140, label %80

80:                                               ; preds = %78
  %81 = getelementptr inbounds %"class.WTF::Vector.217", %"class.WTF::Vector.217"* %0, i64 0, i32 0, i32 0, i32 0
  %82 = load %"struct.blink::FontCacheKey"*, %"struct.blink::FontCacheKey"** %81, align 8
  %83 = zext i32 %6 to i64
  %84 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %82, i64 %83
  br label %85

85:                                               ; preds = %136, %80
  %86 = phi %"struct.blink::FontCacheKey"* [ %137, %136 ], [ %82, %80 ]
  %87 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %86, i64 0, i32 5, i32 0
  %88 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %87, align 8
  %89 = icmp eq %"class.blink::FontVariationSettings"* %88, null
  br i1 %89, label %110, label %90

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %88, i64 0, i32 1, i32 0
  %92 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %91, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %92) #17
  %93 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %91, i64 0, i32 0, i32 0
  %94 = load i32, i32* %93, align 4
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %110

96:                                               ; preds = %90
  %97 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %91, i64 -4
  %98 = bitcast %"class.base::RefCounted"* %97 to %"class.blink::FontTagValuePair"**
  %99 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %98, align 8
  %100 = icmp eq %"class.blink::FontTagValuePair"* %99, null
  %101 = bitcast %"class.blink::FontTagValuePair"* %99 to i8*
  br i1 %100, label %108, label %102, !prof !6

102:                                              ; preds = %96
  %103 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %91, i64 -1, i32 0, i32 0
  %104 = load i32, i32* %103, align 4
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %107, label %106, !prof !5

106:                                              ; preds = %102
  store i32 0, i32* %103, align 4
  br label %107

107:                                              ; preds = %106, %102
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %101) #17
  br label %108

108:                                              ; preds = %107, %96
  %109 = bitcast %"class.base::RefCounted"* %97 to i8*
  tail call void @free(i8* %109) #17
  br label %110

110:                                              ; preds = %108, %90, %85
  %111 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %86, i64 0, i32 0, i32 2
  %112 = bitcast %"class.std::__1::basic_string"* %111 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %113 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %112, i64 0, i32 1, i32 0
  %114 = load i8, i8* %113, align 1
  %115 = icmp slt i8 %114, 0
  br i1 %115, label %116, label %119

116:                                              ; preds = %110
  %117 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %111, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = load i8*, i8** %117, align 8
  tail call void @_ZdlPv(i8* %118) #18
  br label %119

119:                                              ; preds = %116, %110
  %120 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %86, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %121 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %120, align 8
  %122 = icmp eq %"class.WTF::StringImpl"* %121, null
  br i1 %122, label %136, label %123

123:                                              ; preds = %119
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load atomic i32, i32* %124 monotonic, align 4
  %126 = and i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 0
  %129 = load i32, i32* %128, align 4
  br i1 %127, label %130, label %132

130:                                              ; preds = %123
  %131 = add i32 %129, -1
  store i32 %131, i32* %128, align 4
  br label %132

132:                                              ; preds = %130, %123
  %133 = phi i32 [ %131, %130 ], [ %129, %123 ]
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %136

135:                                              ; preds = %132
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %121) #17
  br label %136

136:                                              ; preds = %119, %132, %135
  %137 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %86, i64 1
  %138 = icmp eq %"struct.blink::FontCacheKey"* %137, %84
  br i1 %138, label %139, label %85

139:                                              ; preds = %136
  store i32 0, i32* %5, align 4
  br label %140

140:                                              ; preds = %139, %78
  %141 = bitcast %"class.WTF::Vector.217"* %0 to i8**
  %142 = load i8*, i8** %141, align 8
  %143 = bitcast %"class.WTF::Vector.217"* %0 to i64*
  store atomic i64 0, i64* %143 monotonic, align 8
  store i32 0, i32* %73, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %142) #17
  %144 = load i32, i32* %7, align 4
  %145 = load i32, i32* %73, align 8
  br label %146

146:                                              ; preds = %76, %140
  %147 = phi i32 [ 0, %76 ], [ %145, %140 ]
  %148 = phi i32 [ %8, %76 ], [ %144, %140 ]
  %149 = icmp ult i32 %147, %148
  br i1 %149, label %150, label %163, !prof !6

150:                                              ; preds = %146
  %151 = getelementptr inbounds %"class.WTF::Vector.217", %"class.WTF::Vector.217"* %0, i64 0, i32 0, i32 0, i32 0
  %152 = load %"struct.blink::FontCacheKey"*, %"struct.blink::FontCacheKey"** %151, align 8
  %153 = icmp eq %"struct.blink::FontCacheKey"* %152, null
  br i1 %153, label %154, label %162

154:                                              ; preds = %150
  %155 = zext i32 %148 to i64
  %156 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink12FontCacheKeyEEEmm(i64 %155) #17
  %157 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %156, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12FontCacheKeyEEEPKcv, i64 0, i64 0)) #17
  %158 = ptrtoint i8* %157 to i64
  %159 = bitcast %"class.WTF::Vector.217"* %0 to i64*
  store atomic i64 %158, i64* %159 monotonic, align 8
  %160 = udiv i64 %156, 80
  %161 = trunc i64 %160 to i32
  store i32 %161, i32* %73, align 8
  br label %163

162:                                              ; preds = %150
  tail call void @_ZN3WTF6VectorIN5blink12FontCacheKeyELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.217"* %0, i32 %148) #17
  br label %163

163:                                              ; preds = %162, %154, %146, %72, %71
  %164 = getelementptr inbounds %"class.WTF::Vector.217", %"class.WTF::Vector.217"* %1, i64 0, i32 0, i32 0, i32 0
  %165 = load %"struct.blink::FontCacheKey"*, %"struct.blink::FontCacheKey"** %164, align 8
  %166 = load i32, i32* %5, align 4
  %167 = zext i32 %166 to i64
  %168 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %165, i64 %167
  %169 = getelementptr inbounds %"class.WTF::Vector.217", %"class.WTF::Vector.217"* %0, i64 0, i32 0, i32 0, i32 0
  %170 = load %"struct.blink::FontCacheKey"*, %"struct.blink::FontCacheKey"** %169, align 8
  tail call void @_ZN3WTF12VectorCopierILb0EN5blink12FontCacheKeyENS_18PartitionAllocatorEE4CopyEPKS2_S6_PS2_(%"struct.blink::FontCacheKey"* %165, %"struct.blink::FontCacheKey"* %168, %"struct.blink::FontCacheKey"* %170) #17
  %171 = load %"struct.blink::FontCacheKey"*, %"struct.blink::FontCacheKey"** %164, align 8
  %172 = load i32, i32* %5, align 4
  %173 = zext i32 %172 to i64
  %174 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %171, i64 %173
  %175 = load i32, i32* %7, align 4
  %176 = zext i32 %175 to i64
  %177 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %171, i64 %176
  %178 = load %"struct.blink::FontCacheKey"*, %"struct.blink::FontCacheKey"** %169, align 8
  %179 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %178, i64 %173
  tail call void @_ZN3WTF12VectorCopierILb0EN5blink12FontCacheKeyENS_18PartitionAllocatorEE17UninitializedCopyIS2_EEvPKT_S8_PS2_(%"struct.blink::FontCacheKey"* %174, %"struct.blink::FontCacheKey"* %177, %"struct.blink::FontCacheKey"* %179) #17
  %180 = load i32, i32* %7, align 4
  store i32 %180, i32* %5, align 4
  br label %181

181:                                              ; preds = %2, %163
  ret %"class.WTF::Vector.217"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorCopierILb0EN5blink12FontCacheKeyENS_18PartitionAllocatorEE4CopyEPKS2_S6_PS2_(%"struct.blink::FontCacheKey"*, %"struct.blink::FontCacheKey"*, %"struct.blink::FontCacheKey"*) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp eq %"struct.blink::FontCacheKey"* %0, %1
  br i1 %4, label %54, label %5

5:                                                ; preds = %3, %47
  %6 = phi %"struct.blink::FontCacheKey"* [ %52, %47 ], [ %2, %3 ]
  %7 = phi %"struct.blink::FontCacheKey"* [ %51, %47 ], [ %0, %3 ]
  %8 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %6, i64 0, i32 0
  %9 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %7, i64 0, i32 0
  %10 = tail call dereferenceable(48) %"class.blink::FontFaceCreationParams"* @_ZN5blink22FontFaceCreationParamsaSERKS0_(%"class.blink::FontFaceCreationParams"* %8, %"class.blink::FontFaceCreationParams"* dereferenceable(48) %9) #17
  %11 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %6, i64 0, i32 1
  %12 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %7, i64 0, i32 1
  %13 = bitcast i32* %11 to i8*
  %14 = bitcast i32* %12 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 12, i1 false) #17
  %15 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %6, i64 0, i32 5
  %16 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %7, i64 0, i32 5, i32 0
  %17 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %16, align 8
  %18 = icmp eq %"class.blink::FontVariationSettings"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %5
  %20 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %17, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %20) #17
  br label %21

21:                                               ; preds = %19, %5
  %22 = ptrtoint %"class.blink::FontVariationSettings"* %17 to i64
  %23 = bitcast %class.scoped_refptr.188* %15 to i64*
  %24 = getelementptr inbounds %class.scoped_refptr.188, %class.scoped_refptr.188* %15, i64 0, i32 0
  %25 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %24, align 8
  store i64 %22, i64* %23, align 8
  %26 = icmp eq %"class.blink::FontVariationSettings"* %25, null
  br i1 %26, label %47, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %25, i64 0, i32 1, i32 0
  %29 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %28, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %29) #17
  %30 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %28, i64 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %47

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %28, i64 -4
  %35 = bitcast %"class.base::RefCounted"* %34 to %"class.blink::FontTagValuePair"**
  %36 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %35, align 8
  %37 = icmp eq %"class.blink::FontTagValuePair"* %36, null
  %38 = bitcast %"class.blink::FontTagValuePair"* %36 to i8*
  br i1 %37, label %45, label %39, !prof !6

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %28, i64 -1, i32 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %44, label %43, !prof !5

43:                                               ; preds = %39
  store i32 0, i32* %40, align 4
  br label %44

44:                                               ; preds = %43, %39
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %38) #17
  br label %45

45:                                               ; preds = %44, %33
  %46 = bitcast %"class.base::RefCounted"* %34 to i8*
  tail call void @free(i8* %46) #17
  br label %47

47:                                               ; preds = %45, %27, %21
  %48 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %7, i64 0, i32 6
  %49 = load i8, i8* %48, align 8, !range !7
  %50 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %6, i64 0, i32 6
  store i8 %49, i8* %50, align 8
  %51 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %7, i64 1
  %52 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %6, i64 1
  %53 = icmp eq %"struct.blink::FontCacheKey"* %51, %1
  br i1 %53, label %54, label %5

54:                                               ; preds = %47, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorCopierILb0EN5blink12FontCacheKeyENS_18PartitionAllocatorEE17UninitializedCopyIS2_EEvPKT_S8_PS2_(%"struct.blink::FontCacheKey"*, %"struct.blink::FontCacheKey"*, %"struct.blink::FontCacheKey"*) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp eq %"struct.blink::FontCacheKey"* %0, %1
  br i1 %4, label %70, label %5

5:                                                ; preds = %3, %63
  %6 = phi %"struct.blink::FontCacheKey"* [ %67, %63 ], [ %2, %3 ]
  %7 = phi %"struct.blink::FontCacheKey"* [ %68, %63 ], [ %0, %3 ]
  %8 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %6, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %7, i64 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 8
  store i32 %10, i32* %8, align 8
  %11 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %7, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %6, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %13, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %14, label %32, label %15

15:                                               ; preds = %5
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i33
  %24 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #17
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !5

29:                                               ; preds = %20
  tail call void @llvm.trap() #17
  unreachable

30:                                               ; preds = %20
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %21, align 4
  br label %32

32:                                               ; preds = %30, %15, %5
  %33 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %6, i64 0, i32 0, i32 2
  %34 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %7, i64 0, i32 0, i32 2
  %35 = bitcast %"class.std::__1::basic_string"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %32
  %40 = bitcast %"class.std::__1::basic_string"* %33 to i8*
  %41 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 24, i1 false) #17
  br label %47

42:                                               ; preds = %32
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %7, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %33, i8* %44, i64 %46) #17
  br label %47

47:                                               ; preds = %42, %39
  %48 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %6, i64 0, i32 0, i32 3
  %49 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %7, i64 0, i32 0, i32 3
  %50 = bitcast i32* %49 to i64*
  %51 = bitcast i32* %48 to i64*
  %52 = load i64, i64* %50, align 8
  store i64 %52, i64* %51, align 8
  %53 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %6, i64 0, i32 1
  %54 = bitcast i32* %53 to i8*
  %55 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %7, i64 0, i32 1
  %56 = bitcast i32* %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %56, i64 12, i1 false) #17
  %57 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %7, i64 0, i32 5, i32 0
  %58 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %57, align 8
  %59 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %6, i64 0, i32 5, i32 0
  store %"class.blink::FontVariationSettings"* %58, %"class.blink::FontVariationSettings"** %59, align 8
  %60 = icmp eq %"class.blink::FontVariationSettings"* %58, null
  br i1 %60, label %63, label %61

61:                                               ; preds = %47
  %62 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %58, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %62) #17
  br label %63

63:                                               ; preds = %47, %61
  %64 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %6, i64 0, i32 6
  %65 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %7, i64 0, i32 6
  %66 = load i8, i8* %65, align 8, !range !7
  store i8 %66, i8* %64, align 8
  %67 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %6, i64 1
  %68 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %7, i64 1
  %69 = icmp eq %"struct.blink::FontCacheKey"* %68, %1
  br i1 %69, label %70, label %5

70:                                               ; preds = %63, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #17
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.17, i64 0, i64 0), i8* %11, i8* %12) #17
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.18, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #17
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #17
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #17
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #17
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKjEEvOT_(%"class.WTF::Vector.331"*, i32* dereferenceable(4)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.331", %"class.WTF::Vector.331"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.331", %"class.WTF::Vector.331"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = icmp ugt i32* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i32, i32* %7, i64 %10
  %12 = icmp ugt i32* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.331", %"class.WTF::Vector.331"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !6

24:                                               ; preds = %13
  %25 = icmp eq i32* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm(i64 %26) #17
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv, i64 0, i64 0)) #17
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.331"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 2
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to i32*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 2
  %37 = ptrtoint i8* %28 to i64
  %38 = load i32*, i32** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne i32* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast i32* %38 to i8*
  br i1 %41, label %43, label %49, !prof !6

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #17
  %47 = bitcast %"class.WTF::Vector.331"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #17
  %51 = bitcast %"class.WTF::Vector.331"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to i32*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint i32* %1 to i64
  %56 = ptrtoint i32* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 2
  %59 = getelementptr inbounds %"class.WTF::Vector.331", %"class.WTF::Vector.331"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !6

69:                                               ; preds = %54
  %70 = icmp eq i32* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm(i64 %71) #17
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv, i64 0, i64 0)) #17
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.331"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load i32*, i32** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne i32* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast i32* %78 to i8*
  br i1 %81, label %83, label %89, !prof !6

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #17
  %87 = bitcast %"class.WTF::Vector.331"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #17
  %91 = bitcast %"class.WTF::Vector.331"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 2
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to i32*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi i32* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds i32, i32* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi i32* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi i32* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds i32, i32* %100, i64 %103
  %105 = load i32, i32* %101, align 4
  store i32 %105, i32* %104, align 4
  %106 = load i32, i32* %3, align 4
  %107 = add i32 %106, 1
  store i32 %107, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIjNS_12KeyValuePairIjNSt3__110unique_ptrIN5blink16FontPlatformDataENS2_14default_deleteIS5_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIS8_EEEESF_NS_18PartitionAllocatorEE5eraseEPKS9_(%"class.WTF::HashTable.195"*, %"struct.WTF::KeyValuePair.198"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.blink::FontPlatformData"*, %"class.blink::FontPlatformData"** %3, align 8
  store %"class.blink::FontPlatformData"* null, %"class.blink::FontPlatformData"** %3, align 8
  %5 = icmp eq %"class.blink::FontPlatformData"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  tail call void @_ZN5blink16FontPlatformDataD1Ev(%"class.blink::FontPlatformData"* nonnull %4) #17
  %7 = bitcast %"class.blink::FontPlatformData"* %4 to i8*
  tail call void @free(i8* %7) #17
  br label %8

8:                                                ; preds = %2, %6
  %9 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %1, i64 0, i32 0
  store i32 -2, i32* %9, align 4
  %10 = getelementptr inbounds %"class.WTF::HashTable.195", %"class.WTF::HashTable.195"* %0, i64 0, i32 3
  %11 = load i32, i32* %10, align 8
  %12 = add i32 %11, 1
  %13 = and i32 %12, 2147483647
  %14 = and i32 %11, -2147483648
  %15 = or i32 %13, %14
  store i32 %15, i32* %10, align 8
  %16 = getelementptr inbounds %"class.WTF::HashTable.195", %"class.WTF::HashTable.195"* %0, i64 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = add i32 %17, -1
  store i32 %18, i32* %16, align 4
  %19 = mul i32 %18, 6
  %20 = getelementptr inbounds %"class.WTF::HashTable.195", %"class.WTF::HashTable.195"* %0, i64 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = icmp ult i32 %19, %21
  %23 = icmp ugt i32 %21, 8
  %24 = and i1 %22, %23
  br i1 %24, label %25, label %73

25:                                               ; preds = %8
  %26 = lshr i32 %21, 1
  %27 = zext i32 %26 to i64
  %28 = shl nuw nsw i64 %27, 4
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([179 x i8], [179 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIjNSt3__110unique_ptrIN5blink16FontPlatformDataENS2_14default_deleteIS5_EEEEEEEEPKcv, i64 0, i64 0)) #17
  %30 = bitcast i8* %29 to %"struct.WTF::KeyValuePair.198"*
  %31 = icmp eq i32 %26, 0
  br i1 %31, label %71, label %32

32:                                               ; preds = %25
  %33 = add nsw i64 %27, -1
  %34 = and i64 %27, 3
  %35 = icmp ult i64 %33, 3
  br i1 %35, label %59, label %36

36:                                               ; preds = %32
  %37 = sub nsw i64 %27, %34
  br label %38

38:                                               ; preds = %38, %36
  %39 = phi i64 [ 0, %36 ], [ %56, %38 ]
  %40 = phi i64 [ %37, %36 ], [ %57, %38 ]
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %30, i64 %39, i32 0
  store i32 -1, i32* %41, align 8
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %30, i64 %39, i32 1
  %43 = bitcast %"class.std::__1::unique_ptr.199"* %42 to i64*
  store i64 0, i64* %43, align 8
  %44 = or i64 %39, 1
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %30, i64 %44, i32 0
  store i32 -1, i32* %45, align 8
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %30, i64 %44, i32 1
  %47 = bitcast %"class.std::__1::unique_ptr.199"* %46 to i64*
  store i64 0, i64* %47, align 8
  %48 = or i64 %39, 2
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %30, i64 %48, i32 0
  store i32 -1, i32* %49, align 8
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %30, i64 %48, i32 1
  %51 = bitcast %"class.std::__1::unique_ptr.199"* %50 to i64*
  store i64 0, i64* %51, align 8
  %52 = or i64 %39, 3
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %30, i64 %52, i32 0
  store i32 -1, i32* %53, align 8
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %30, i64 %52, i32 1
  %55 = bitcast %"class.std::__1::unique_ptr.199"* %54 to i64*
  store i64 0, i64* %55, align 8
  %56 = add nuw nsw i64 %39, 4
  %57 = add i64 %40, -4
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %59, label %38

59:                                               ; preds = %38, %32
  %60 = phi i64 [ 0, %32 ], [ %56, %38 ]
  %61 = icmp eq i64 %34, 0
  br i1 %61, label %71, label %62

62:                                               ; preds = %59, %62
  %63 = phi i64 [ %68, %62 ], [ %60, %59 ]
  %64 = phi i64 [ %69, %62 ], [ %34, %59 ]
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %30, i64 %63, i32 0
  store i32 -1, i32* %65, align 8
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %30, i64 %63, i32 1
  %67 = bitcast %"class.std::__1::unique_ptr.199"* %66 to i64*
  store i64 0, i64* %67, align 8
  %68 = add nuw nsw i64 %63, 1
  %69 = add i64 %64, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %62, !llvm.loop !20

71:                                               ; preds = %59, %62, %25
  %72 = tail call %"struct.WTF::KeyValuePair.198"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjNSt3__110unique_ptrIN5blink16FontPlatformDataENS2_14default_deleteIS5_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIS8_EEEESF_NS_18PartitionAllocatorEE8RehashToEPS9_jSL_(%"class.WTF::HashTable.195"* %0, %"struct.WTF::KeyValuePair.198"* %30, i32 %26, %"struct.WTF::KeyValuePair.198"* null) #17
  br label %73

73:                                               ; preds = %71, %8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_NS_7HashMapIjNSt3__110unique_ptrINS1_16FontPlatformDataENS5_14default_deleteIS7_EEEENS_7IntHashIjEENS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsISA_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINSF_IS2_EENSF_ISI_EEEESN_SH_E6LookupINS_22IdentityHashTranslatorISL_SP_SH_EES2_EEPSJ_RKT0_(%"class.WTF::HashTable.174"*, %"struct.blink::FontCacheKey"* dereferenceable(80)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.174", %"class.WTF::HashTable.174"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  br i1 %5, label %187, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.174", %"class.WTF::HashTable.174"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = tail call i32 @_ZN5blink16FontCacheKeyHash7GetHashERKNS_12FontCacheKeyE(%"struct.blink::FontCacheKey"* dereferenceable(80) %1) #17
  %12 = and i32 %11, %9
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %13
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %14, i64 0, i32 0
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %13, i32 0, i32 5, i32 0
  %17 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %16, align 8
  %18 = icmp eq %"class.blink::FontVariationSettings"* %17, null
  %19 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 5, i32 0
  %20 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %19, align 8
  %21 = icmp ne %"class.blink::FontVariationSettings"* %20, null
  %22 = xor i1 %21, true
  %23 = or i1 %18, %22
  %24 = xor i1 %18, true
  %25 = or i1 %21, %24
  br i1 %23, label %59, label %26

26:                                               ; preds = %6
  %27 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %28, %30
  br i1 %31, label %32, label %59

32:                                               ; preds = %26
  %33 = icmp eq i32 %28, 0
  br i1 %33, label %59, label %34

34:                                               ; preds = %32
  %35 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %37, align 8
  %39 = zext i32 %28 to i64
  %40 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %36, i64 %39
  br label %41

41:                                               ; preds = %55, %34
  %42 = phi %"class.blink::FontTagValuePair"* [ %57, %55 ], [ %38, %34 ]
  %43 = phi %"class.blink::FontTagValuePair"* [ %56, %55 ], [ %36, %34 ]
  %44 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %43, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %42, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %45, %47
  br i1 %48, label %49, label %59

49:                                               ; preds = %41
  %50 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %43, i64 0, i32 1
  %51 = load float, float* %50, align 4
  %52 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %42, i64 0, i32 1
  %53 = load float, float* %52, align 4
  %54 = fcmp oeq float %51, %53
  br i1 %54, label %55, label %59

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %43, i64 1
  %57 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %42, i64 1
  %58 = icmp eq %"class.blink::FontTagValuePair"* %56, %40
  br i1 %58, label %59, label %41

59:                                               ; preds = %55, %49, %41, %32, %26, %6
  %60 = phi i1 [ true, %26 ], [ false, %32 ], [ %25, %6 ], [ true, %49 ], [ false, %55 ], [ true, %41 ]
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %14, i64 0, i32 0, i32 0
  %62 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 0
  %63 = tail call zeroext i1 @_ZNK5blink22FontFaceCreationParamseqERKS0_(%"class.blink::FontFaceCreationParams"* %61, %"class.blink::FontFaceCreationParams"* dereferenceable(48) %62) #17
  br i1 %63, label %64, label %89

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %13, i32 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 1
  %68 = load i32, i32* %67, align 8
  %69 = icmp eq i32 %66, %68
  br i1 %69, label %70, label %89

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %13, i32 0, i32 2
  %72 = load i32, i32* %71, align 4
  %73 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 2
  %74 = load i32, i32* %73, align 4
  %75 = icmp eq i32 %72, %74
  br i1 %75, label %76, label %89

76:                                               ; preds = %70
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %13, i32 0, i32 3
  %78 = load float, float* %77, align 8
  %79 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 3
  %80 = load float, float* %79, align 8
  %81 = fcmp une float %78, %80
  %82 = or i1 %60, %81
  br i1 %82, label %89, label %83

83:                                               ; preds = %76
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %13, i32 0, i32 6
  %85 = load i8, i8* %84, align 8, !range !7
  %86 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 6
  %87 = load i8, i8* %86, align 8, !range !7
  %88 = icmp eq i8 %85, %87
  br i1 %88, label %187, label %89

89:                                               ; preds = %59, %64, %70, %76, %83
  %90 = xor i32 %11, -1
  %91 = lshr i32 %11, 23
  %92 = add i32 %91, %90
  %93 = shl i32 %92, 12
  %94 = xor i32 %93, %92
  %95 = lshr i32 %94, 7
  %96 = xor i32 %95, %94
  %97 = shl i32 %96, 2
  %98 = xor i32 %97, %96
  %99 = lshr i32 %98, 20
  %100 = xor i32 %99, %98
  %101 = or i32 %100, 1
  %102 = zext i32 %101 to i64
  %103 = tail call zeroext i1 @_ZN3WTF27HashTraitsEmptyValueCheckerINS_10HashTraitsIN5blink12FontCacheKeyEEELb0EE12IsEmptyValueIS3_EEbRKT_(%"struct.blink::FontCacheKey"* dereferenceable(80) %15) #17
  br i1 %103, label %187, label %104

104:                                              ; preds = %89
  %105 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 1
  %106 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 2
  %107 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 3
  %108 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 6
  br label %109

109:                                              ; preds = %104, %185
  %110 = phi i64 [ 0, %104 ], [ %113, %185 ]
  %111 = phi i64 [ %13, %104 ], [ %115, %185 ]
  %112 = icmp eq i64 %110, 0
  %113 = select i1 %112, i64 %102, i64 %110
  %114 = add i64 %113, %111
  %115 = and i64 %114, %10
  %116 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %115
  %117 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %116, i64 0, i32 0
  %118 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %115, i32 0, i32 5, i32 0
  %119 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %118, align 8
  %120 = icmp eq %"class.blink::FontVariationSettings"* %119, null
  %121 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %19, align 8
  %122 = icmp ne %"class.blink::FontVariationSettings"* %121, null
  %123 = xor i1 %122, true
  %124 = or i1 %120, %123
  %125 = xor i1 %120, true
  %126 = or i1 %122, %125
  br i1 %124, label %160, label %127

127:                                              ; preds = %109
  %128 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %119, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %129 = load i32, i32* %128, align 4
  %130 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %121, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %131 = load i32, i32* %130, align 4
  %132 = icmp eq i32 %129, %131
  br i1 %132, label %133, label %160

133:                                              ; preds = %127
  %134 = icmp eq i32 %129, 0
  br i1 %134, label %160, label %135

135:                                              ; preds = %133
  %136 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %119, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %136, align 8
  %138 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %121, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %138, align 8
  %140 = zext i32 %129 to i64
  %141 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %137, i64 %140
  br label %142

142:                                              ; preds = %156, %135
  %143 = phi %"class.blink::FontTagValuePair"* [ %158, %156 ], [ %139, %135 ]
  %144 = phi %"class.blink::FontTagValuePair"* [ %157, %156 ], [ %137, %135 ]
  %145 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %144, i64 0, i32 0
  %146 = load i32, i32* %145, align 4
  %147 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %143, i64 0, i32 0
  %148 = load i32, i32* %147, align 4
  %149 = icmp eq i32 %146, %148
  br i1 %149, label %150, label %160

150:                                              ; preds = %142
  %151 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %144, i64 0, i32 1
  %152 = load float, float* %151, align 4
  %153 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %143, i64 0, i32 1
  %154 = load float, float* %153, align 4
  %155 = fcmp oeq float %152, %154
  br i1 %155, label %156, label %160

156:                                              ; preds = %150
  %157 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %144, i64 1
  %158 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %143, i64 1
  %159 = icmp eq %"class.blink::FontTagValuePair"* %157, %141
  br i1 %159, label %160, label %142

160:                                              ; preds = %156, %150, %142, %133, %127, %109
  %161 = phi i1 [ true, %127 ], [ false, %133 ], [ %126, %109 ], [ true, %150 ], [ false, %156 ], [ true, %142 ]
  %162 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %116, i64 0, i32 0, i32 0
  %163 = tail call zeroext i1 @_ZNK5blink22FontFaceCreationParamseqERKS0_(%"class.blink::FontFaceCreationParams"* %162, %"class.blink::FontFaceCreationParams"* dereferenceable(48) %62) #17
  br i1 %163, label %164, label %185

164:                                              ; preds = %160
  %165 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %115, i32 0, i32 1
  %166 = load i32, i32* %165, align 8
  %167 = load i32, i32* %105, align 8
  %168 = icmp eq i32 %166, %167
  br i1 %168, label %169, label %185

169:                                              ; preds = %164
  %170 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %115, i32 0, i32 2
  %171 = load i32, i32* %170, align 4
  %172 = load i32, i32* %106, align 4
  %173 = icmp eq i32 %171, %172
  br i1 %173, label %174, label %185

174:                                              ; preds = %169
  %175 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %115, i32 0, i32 3
  %176 = load float, float* %175, align 8
  %177 = load float, float* %107, align 8
  %178 = fcmp une float %176, %177
  %179 = or i1 %161, %178
  br i1 %179, label %185, label %180

180:                                              ; preds = %174
  %181 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %115, i32 0, i32 6
  %182 = load i8, i8* %181, align 8, !range !7
  %183 = load i8, i8* %108, align 8, !range !7
  %184 = icmp eq i8 %182, %183
  br i1 %184, label %187, label %185

185:                                              ; preds = %174, %169, %164, %160, %180
  %186 = tail call zeroext i1 @_ZN3WTF27HashTraitsEmptyValueCheckerINS_10HashTraitsIN5blink12FontCacheKeyEEELb0EE12IsEmptyValueIS3_EEbRKT_(%"struct.blink::FontCacheKey"* dereferenceable(80) %117) #17
  br i1 %186, label %187, label %109

187:                                              ; preds = %185, %180, %89, %2, %83
  %188 = phi %"struct.WTF::KeyValuePair"* [ null, %2 ], [ %14, %83 ], [ null, %89 ], [ null, %185 ], [ %116, %180 ]
  ret %"struct.WTF::KeyValuePair"* %188
}

declare void @_ZN5blink20CustomCountHistogramC1EPKciii(%"class.blink::CustomCountHistogram"*, i8*, i32, i32, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_11HeapHashSetINS_10WeakMemberINS_15FontCacheClientEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #17
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !5

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #17
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_11HeapHashSetINS_10WeakMemberINS_15FontCacheClientEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_11HeapHashSetINS_10WeakMemberINS_15FontCacheClientEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.178"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_11HeapHashSetINS_10WeakMemberINS_15FontCacheClientEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.178"*)) #17
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([212 x i8], [212 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11HeapHashSetINS1_10WeakMemberINS1_15FontCacheClientEEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #3 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #17
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #17
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #17
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #17
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.24, i64 0, i64 0), i8* %21, i8* %22) #17
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #17
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.25, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #17
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #17
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #17
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !5

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #17
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11HeapHashSetINS_10WeakMemberINS_15FontCacheClientEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"struct.blink::TraceDescriptor", align 8
  %4 = bitcast i8* %1 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = inttoptr i64 %5 to %"class.blink::WeakMember"*
  %7 = bitcast i8* %1 to i8**
  %8 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %9 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, i64 11
  %11 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %0, i8** %7) #17
  %12 = inttoptr i64 %5 to i8*
  %13 = bitcast %"struct.blink::TraceDescriptor"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #17
  %14 = bitcast %"struct.blink::TraceDescriptor"* %3 to %"class.blink::WeakMember"**
  store %"class.blink::WeakMember"* %6, %"class.blink::WeakMember"** %14, align 8
  %15 = getelementptr inbounds %"struct.blink::TraceDescriptor", %"struct.blink::TraceDescriptor"* %3, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %15, align 8
  %16 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %17 = load void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %17, i64 10
  %19 = load void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %18, align 8
  tail call void %19(%"class.blink::Visitor"* %0, i8* %12, i8** %7, i8* %12, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_15FontCacheClientEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, %"struct.blink::TraceDescriptor"* nonnull byval(%"struct.blink::TraceDescriptor") align 8 %3, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN3WTF29WeakProcessingHashTableHelperILNS_16WeakHandlingFlagE1EN5blink10WeakMemberINS2_15FontCacheClientEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS2_13HeapAllocatorEE7ProcessERKNS2_14LivenessBrokerEPKv, i8* %1) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_11HeapHashSetINS_10WeakMemberINS_15FontCacheClientEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.26, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.178"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF29WeakProcessingHashTableHelperILNS_16WeakHandlingFlagE1EN5blink10WeakMemberINS2_15FontCacheClientEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS2_13HeapAllocatorEE7ProcessERKNS2_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::WeakMember"**
  %4 = load %"class.blink::WeakMember"*, %"class.blink::WeakMember"** %3, align 8
  %5 = icmp eq %"class.blink::WeakMember"* %4, null
  br i1 %5, label %61, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds i8, i8* %1, i64 8
  %8 = bitcast i8* %7 to i32*
  %9 = load i32, i32* %8, align 8
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %4, i64 %10
  %12 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %11, i64 -1
  %13 = icmp ult %"class.blink::WeakMember"* %12, %4
  br i1 %13, label %61, label %14

14:                                               ; preds = %6
  %15 = getelementptr inbounds i8, i8* %1, i64 16
  %16 = bitcast i8* %15 to i32*
  %17 = getelementptr inbounds i8, i8* %1, i64 12
  %18 = bitcast i8* %17 to i32*
  br label %19

19:                                               ; preds = %14, %57
  %20 = phi %"class.blink::WeakMember"* [ %12, %14 ], [ %58, %57 ]
  %21 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.blink::FontCacheClient"*, %"class.blink::FontCacheClient"** %21, align 8
  %23 = ptrtoint %"class.blink::FontCacheClient"* %22 to i64
  switch i64 %23, label %24 [
    i64 -1, label %57
    i64 0, label %57
  ]

24:                                               ; preds = %19
  %25 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %26 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %25, i64 0, i32 1
  %27 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %26) #17
  %28 = icmp eq i8* %27, null
  br i1 %28, label %29, label %31, !prof !5

29:                                               ; preds = %24
  %30 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %26, i8* %30) #17
  br label %31

31:                                               ; preds = %29, %24
  %32 = phi i8* [ %30, %29 ], [ %27, %24 ]
  %33 = bitcast i8* %32 to %"class.blink::ThreadState"**
  %34 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %33, align 8
  %35 = icmp eq %"class.blink::ThreadState"* %34, null
  br i1 %35, label %57, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.blink::FontCacheClient", %"class.blink::FontCacheClient"* %22, i64 -1
  %38 = bitcast %"class.blink::FontCacheClient"* %37 to %"class.blink::HeapObjectHeader"*
  %39 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %38, i64 0, i32 2
  %40 = load i16, i16* %39, align 2
  %41 = and i16 %40, 1
  %42 = icmp eq i16 %41, 0
  br i1 %42, label %43, label %57

43:                                               ; preds = %36
  %44 = bitcast %"class.blink::WeakMember"* %20 to i64*
  store atomic i64 -1, i64* %44 monotonic, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %49, label %47

47:                                               ; preds = %43
  %48 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull inttoptr (i64 -1 to i8*)) #17
  br label %49

49:                                               ; preds = %43, %47
  %50 = load i32, i32* %16, align 8
  %51 = add i32 %50, 1
  %52 = and i32 %51, 2147483647
  %53 = and i32 %50, -2147483648
  %54 = or i32 %52, %53
  store i32 %54, i32* %16, align 8
  %55 = load i32, i32* %18, align 4
  %56 = add i32 %55, -1
  store i32 %56, i32* %18, align 4
  br label %57

57:                                               ; preds = %36, %19, %19, %31, %49
  %58 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %20, i64 -1
  %59 = load %"class.blink::WeakMember"*, %"class.blink::WeakMember"** %3, align 8
  %60 = icmp ult %"class.blink::WeakMember"* %58, %59
  br i1 %60, label %61, label %19

61:                                               ; preds = %57, %6, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_15FontCacheClientEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::WeakMember"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !5

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #17
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %56, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi i64 [ 0, %30 ], [ %54, %53 ]
  %34 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %3, i64 %33
  %35 = bitcast %"class.blink::WeakMember"* %34 to i64*
  br i1 %28, label %36, label %43

36:                                               ; preds = %32
  %37 = load atomic i64, i64* %35 monotonic, align 8
  switch i64 %37, label %38 [
    i64 -1, label %53
    i64 0, label %53
  ]

38:                                               ; preds = %36
  %39 = inttoptr i64 %37 to i8*
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %0, i8* nonnull %39, i8* nonnull %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15FontCacheClientEE5TraceEPNS_7VisitorEPKv) #17
  br label %53

43:                                               ; preds = %32
  %44 = load i64, i64* %35, align 8
  switch i64 %44, label %45 [
    i64 -1, label %53
    i64 0, label %53
  ]

45:                                               ; preds = %43
  %46 = load atomic i64, i64* %35 monotonic, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %45
  %49 = inttoptr i64 %46 to i8*
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %51 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, i64 5
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, align 8
  tail call void %52(%"class.blink::Visitor"* %0, i8* nonnull %49, i8* nonnull %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15FontCacheClientEE5TraceEPNS_7VisitorEPKv) #17
  br label %53

53:                                               ; preds = %48, %45, %43, %43, %38, %36, %36
  %54 = add nuw nsw i64 %33, 1
  %55 = icmp eq i64 %54, %23
  br i1 %55, label %56, label %32

56:                                               ; preds = %53, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15FontCacheClientEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::FontCacheClient"*
  %4 = bitcast i8* %1 to void (%"class.blink::FontCacheClient"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::FontCacheClient"*, %"class.blink::Visitor"*)**, void (%"class.blink::FontCacheClient"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::FontCacheClient"*, %"class.blink::Visitor"*)*, void (%"class.blink::FontCacheClient"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::FontCacheClient"*, %"class.blink::Visitor"*)*, void (%"class.blink::FontCacheClient"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::FontCacheClient"* %3, %"class.blink::Visitor"* %0) #17
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_11HeapHashSetINS_10WeakMemberINS_15FontCacheClientEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPSA_(%"class.blink::PersistentBase"*, %"class.blink::HeapHashSet"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PersistentBase", %"class.blink::PersistentBase"* %0, i64 0, i32 0
  store %"class.blink::HeapHashSet"* %1, %"class.blink::HeapHashSet"** %3, align 8
  %4 = ptrtoint %"class.blink::HeapHashSet"* %1 to i64
  switch i64 %4, label %5 [
    i64 0, label %35
    i64 -1, label %35
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::PersistentBase", %"class.blink::PersistentBase"* %0, i64 0, i32 1, i32 0
  %7 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %6, align 8
  %8 = icmp eq %"class.blink::PersistentNode"* %7, null
  br i1 %8, label %9, label %58

9:                                                ; preds = %5
  %10 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %11 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %10, i64 0, i32 1
  %12 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %11) #17
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %16, !prof !5

14:                                               ; preds = %9
  %15 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %11, i8* %15) #17
  br label %16

16:                                               ; preds = %14, %9
  %17 = phi i8* [ %15, %14 ], [ %12, %9 ]
  %18 = bitcast i8* %17 to %"class.blink::ThreadState"**
  %19 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %21, i64 0, i32 0, i32 0
  %23 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %22, align 8
  %24 = icmp eq %"class.blink::PersistentNode"* %23, null
  br i1 %24, label %25, label %28, !prof !5

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %21, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %26) #17
  %27 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %22, align 8
  br label %28

28:                                               ; preds = %25, %16
  %29 = phi %"class.blink::PersistentNode"* [ %27, %25 ], [ %23, %16 ]
  %30 = bitcast %"class.blink::PersistentNode"* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.blink::PersistentRegion"* %21 to i64*
  store i64 %31, i64* %32, align 8
  %33 = bitcast %"class.blink::PersistentNode"* %29 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %0, %"class.blink::PersistentBase"** %33, align 8
  %34 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %29, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_11HeapHashSetINS_10WeakMemberINS_15FontCacheClientEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKSE_15TracePersistentEPNS_7VisitorEEEE10TrampolineESG_PKv, void (%"class.blink::Visitor"*, i8*)** %34, align 8
  store %"class.blink::PersistentNode"* %29, %"class.blink::PersistentNode"** %6, align 8
  br label %58

35:                                               ; preds = %2, %2
  %36 = getelementptr inbounds %"class.blink::PersistentBase", %"class.blink::PersistentBase"* %0, i64 0, i32 1, i32 0
  %37 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %36, align 8
  %38 = icmp eq %"class.blink::PersistentNode"* %37, null
  br i1 %38, label %58, label %39

39:                                               ; preds = %35
  %40 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %41 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %40, i64 0, i32 1
  %42 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %41) #17
  %43 = icmp eq i8* %42, null
  br i1 %43, label %44, label %46, !prof !5

44:                                               ; preds = %39
  %45 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %41, i8* %45) #17
  br label %46

46:                                               ; preds = %44, %39
  %47 = phi i8* [ %45, %44 ], [ %42, %39 ]
  %48 = bitcast i8* %47 to %"class.blink::ThreadState"**
  %49 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %49, i64 0, i32 3, i32 0, i32 0, i32 0
  %51 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %50, align 8
  %52 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %36, align 8
  %53 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %51, i64 0, i32 0, i32 0
  %54 = bitcast %"class.blink::PersistentRegion"* %51 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.blink::PersistentNode"* %52 to i64*
  store i64 %55, i64* %56, align 8
  %57 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %52, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %57, align 8
  store %"class.blink::PersistentNode"* %52, %"class.blink::PersistentNode"** %53, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %36, align 8
  br label %58

58:                                               ; preds = %46, %35, %28, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_11HeapHashSetINS_10WeakMemberINS_15FontCacheClientEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKSE_15TracePersistentEPNS_7VisitorEEEE10TrampolineESG_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::HeapHashSet"**
  %5 = load %"class.blink::HeapHashSet"*, %"class.blink::HeapHashSet"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #17
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #17
  %7 = icmp eq %"class.blink::HeapHashSet"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::HeapHashSet"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11HeapHashSetINS_10WeakMemberINS_15FontCacheClientEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #17
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #17
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #1

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::WeakMember"*, i8 } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_15FontCacheClientEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.blink::FontCacheClient"** dereferenceable(8), %"class.blink::FontCacheClient"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"class.blink::WeakMember"*, %"class.blink::WeakMember"** %4, align 8
  %6 = icmp eq %"class.blink::WeakMember"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::WeakMember"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_15FontCacheClientEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable"* %0, %"class.blink::WeakMember"* null)
  %9 = load %"class.blink::WeakMember"*, %"class.blink::WeakMember"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::WeakMember"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::FontCacheClient"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %11, i64 %38
  %40 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.blink::FontCacheClient"*, %"class.blink::FontCacheClient"** %40, align 8
  %42 = icmp eq %"class.blink::FontCacheClient"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::FontCacheClient"*
  br i1 %42, label %86, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::FontCacheClient"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"class.blink::WeakMember"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"class.blink::WeakMember"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::FontCacheClient"* %59, %43
  br i1 %64, label %149, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::FontCacheClient"* %59, inttoptr (i64 -1 to %"class.blink::FontCacheClient"*)
  %67 = select i1 %66, %"class.blink::WeakMember"* %60, %"class.blink::WeakMember"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %11, i64 %71
  %73 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %72, i64 0, i32 0, i32 0
  %74 = load %"class.blink::FontCacheClient"*, %"class.blink::FontCacheClient"** %73, align 8
  %75 = icmp eq %"class.blink::FontCacheClient"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"class.blink::WeakMember"* %67, null
  br i1 %77, label %86, label %78

78:                                               ; preds = %76
  %79 = bitcast %"class.blink::WeakMember"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 8) #17
  %80 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  br label %86

86:                                               ; preds = %10, %76, %78
  %87 = phi %"class.blink::WeakMember"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %88 = load %"class.blink::FontCacheClient"*, %"class.blink::FontCacheClient"** %2, align 8
  %89 = ptrtoint %"class.blink::FontCacheClient"* %88 to i64
  %90 = bitcast %"class.blink::WeakMember"* %87 to i64*
  store atomic i64 %89, i64* %90 monotonic, align 8
  %91 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %86
  %94 = bitcast %"class.blink::FontCacheClient"* %88 to i8*
  %95 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %94) #17
  br label %96

96:                                               ; preds = %86, %93
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %103, label %99

99:                                               ; preds = %96
  %100 = bitcast %"class.blink::WeakMember"* %87 to i8**
  %101 = load i8*, i8** %100, align 8
  %102 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %101) #17
  br label %103

103:                                              ; preds = %96, %99
  %104 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* %104, align 4
  %107 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %108 = load i32, i32* %107, align 8
  %109 = add i32 %108, %106
  %110 = shl i32 %109, 1
  %111 = load i32, i32* %12, align 8
  %112 = icmp ult i32 %110, %111
  br i1 %112, label %115, label %113

113:                                              ; preds = %103
  %114 = tail call %"class.blink::WeakMember"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_15FontCacheClientEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable"* %0, %"class.blink::WeakMember"* %87)
  br label %149

115:                                              ; preds = %103
  %116 = mul i32 %106, 6
  %117 = icmp ult i32 %116, %111
  %118 = icmp ugt i32 %111, 8
  %119 = and i1 %117, %118
  br i1 %119, label %120, label %149

120:                                              ; preds = %115
  %121 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %122 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %121, i64 0, i32 1
  %123 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %122) #17
  %124 = icmp eq i8* %123, null
  br i1 %124, label %125, label %127, !prof !5

125:                                              ; preds = %120
  %126 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %122, i8* %126) #17
  br label %127

127:                                              ; preds = %125, %120
  %128 = phi i8* [ %126, %125 ], [ %123, %120 ]
  %129 = bitcast i8* %128 to %"class.blink::ThreadState"**
  %130 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %129, align 8
  %131 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %130, i64 0, i32 6
  %132 = load i8, i8* %131, align 8, !range !7
  %133 = icmp eq i8 %132, 0
  br i1 %133, label %138, label %134

134:                                              ; preds = %127
  %135 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %130, i64 0, i32 16
  %136 = load i32, i32* %135, align 4
  %137 = icmp eq i32 %136, 1
  br i1 %137, label %149, label %138

138:                                              ; preds = %127, %134
  %139 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %130, i64 0, i32 13
  %140 = load i64, i64* %139, align 8
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %142, label %149

142:                                              ; preds = %138
  %143 = load i32, i32* %12, align 8
  %144 = lshr i32 %143, 1
  %145 = zext i32 %144 to i64
  %146 = tail call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_15FontCacheClientEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %145) #17
  %147 = bitcast %"class.blink::HeapHashTableBacking"* %146 to %"class.blink::WeakMember"*
  %148 = tail call %"class.blink::WeakMember"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_15FontCacheClientEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable"* %0, %"class.blink::WeakMember"* %147, i32 %144, %"class.blink::WeakMember"* %87) #17
  br label %149

149:                                              ; preds = %58, %134, %115, %113, %142, %138
  %150 = phi i8 [ 1, %138 ], [ 1, %142 ], [ 1, %113 ], [ 1, %115 ], [ 1, %134 ], [ 0, %58 ]
  %151 = phi %"class.blink::WeakMember"* [ %87, %138 ], [ %148, %142 ], [ %114, %113 ], [ %87, %115 ], [ %87, %134 ], [ %60, %58 ]
  %152 = insertvalue { %"class.blink::WeakMember"*, i8 } undef, %"class.blink::WeakMember"* %151, 0
  %153 = insertvalue { %"class.blink::WeakMember"*, i8 } %152, i8 %150, 1
  ret { %"class.blink::WeakMember"*, i8 } %153
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::WeakMember"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_15FontCacheClientEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable"*, %"class.blink::WeakMember"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #17
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #17
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20, i64 0, i64 0), i8* %23, i8* %24) #17
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.21, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #17
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #17
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #17
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #17
  store i8 -86, i8* %4, align 1
  %36 = call %"class.blink::WeakMember"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_15FontCacheClientEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable"* %0, i32 %35, %"class.blink::WeakMember"* %1, i8* nonnull dereferenceable(1) %4) #17
  %37 = load i8, i8* %4, align 1, !range !7
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #17
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_15FontCacheClientEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #17
  %43 = bitcast %"class.blink::HeapHashTableBacking"* %42 to %"class.blink::WeakMember"*
  %44 = call %"class.blink::WeakMember"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_15FontCacheClientEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable"* %0, %"class.blink::WeakMember"* %43, i32 %40, %"class.blink::WeakMember"* %1) #17
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"class.blink::WeakMember"* [ %44, %39 ], [ %36, %34 ]
  ret %"class.blink::WeakMember"* %46
}

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::WeakMember"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_15FontCacheClientEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable"*, i32, %"class.blink::WeakMember"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #17
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !5

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #17
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !7
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #17
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.21, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.16, i64 0, i64 0)) #17
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #17
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %32 = load %"class.blink::WeakMember"*, %"class.blink::WeakMember"** %31, align 8
  %33 = icmp eq %"class.blink::WeakMember"* %32, null
  br i1 %33, label %103, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 3
  %37 = bitcast %"class.blink::WeakMember"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #17
  br i1 %38, label %39, label %103

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"class.blink::WeakMember"*, %"class.blink::WeakMember"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_15FontCacheClientEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #17
  %45 = bitcast %"class.blink::HeapHashTableBacking"* %44 to %"class.blink::WeakMember"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %69, label %47

47:                                               ; preds = %39
  %48 = and i64 %43, 1
  %49 = icmp eq i32 %41, 1
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = sub nsw i64 %43, %48
  br label %80

52:                                               ; preds = %106, %47
  %53 = phi %"class.blink::WeakMember"* [ undef, %47 ], [ %100, %106 ]
  %54 = phi i64 [ 0, %47 ], [ %109, %106 ]
  %55 = phi %"class.blink::WeakMember"* [ null, %47 ], [ %100, %106 ]
  %56 = icmp eq i64 %48, 0
  br i1 %56, label %69, label %57

57:                                               ; preds = %52
  %58 = load %"class.blink::WeakMember"*, %"class.blink::WeakMember"** %31, align 8
  %59 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %58, i64 %54
  %60 = icmp eq %"class.blink::WeakMember"* %59, %2
  %61 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %45, i64 %54
  %62 = select i1 %60, %"class.blink::WeakMember"* %61, %"class.blink::WeakMember"* %55
  %63 = bitcast %"class.blink::WeakMember"* %59 to i64*
  %64 = load i64, i64* %63, align 8
  switch i64 %64, label %65 [
    i64 -1, label %66
    i64 0, label %66
  ]

65:                                               ; preds = %57
  br label %66

66:                                               ; preds = %65, %57, %57
  %67 = phi i64 [ %64, %65 ], [ 0, %57 ], [ 0, %57 ]
  %68 = bitcast %"class.blink::WeakMember"* %61 to i64*
  store i64 %67, i64* %68, align 8
  br label %69

69:                                               ; preds = %66, %52, %39
  %70 = phi %"class.blink::WeakMember"* [ null, %39 ], [ %53, %52 ], [ %62, %66 ]
  %71 = bitcast %"class.WTF::HashTable"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %44, %"class.blink::HeapHashTableBacking"** %71, align 8
  %72 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %44, i64 0, i32 0
  %76 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %75) #17
  br label %77

77:                                               ; preds = %69, %74
  %78 = bitcast %"class.blink::WeakMember"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 %36, i1 false)
  %79 = call %"class.blink::WeakMember"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_15FontCacheClientEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable"* %0, %"class.blink::WeakMember"* %42, i32 %1, %"class.blink::WeakMember"* %70)
  br label %103

80:                                               ; preds = %106, %50
  %81 = phi i64 [ 0, %50 ], [ %109, %106 ]
  %82 = phi %"class.blink::WeakMember"* [ null, %50 ], [ %100, %106 ]
  %83 = phi i64 [ %51, %50 ], [ %110, %106 ]
  %84 = load %"class.blink::WeakMember"*, %"class.blink::WeakMember"** %31, align 8
  %85 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %84, i64 %81
  %86 = icmp eq %"class.blink::WeakMember"* %85, %2
  %87 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %45, i64 %81
  %88 = select i1 %86, %"class.blink::WeakMember"* %87, %"class.blink::WeakMember"* %82
  %89 = bitcast %"class.blink::WeakMember"* %85 to i64*
  %90 = load i64, i64* %89, align 8
  switch i64 %90, label %91 [
    i64 -1, label %92
    i64 0, label %92
  ]

91:                                               ; preds = %80
  br label %92

92:                                               ; preds = %80, %80, %91
  %93 = phi i64 [ %90, %91 ], [ 0, %80 ], [ 0, %80 ]
  %94 = bitcast %"class.blink::WeakMember"* %87 to i64*
  store i64 %93, i64* %94, align 8
  %95 = or i64 %81, 1
  %96 = load %"class.blink::WeakMember"*, %"class.blink::WeakMember"** %31, align 8
  %97 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %96, i64 %95
  %98 = icmp eq %"class.blink::WeakMember"* %97, %2
  %99 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %45, i64 %95
  %100 = select i1 %98, %"class.blink::WeakMember"* %99, %"class.blink::WeakMember"* %88
  %101 = bitcast %"class.blink::WeakMember"* %97 to i64*
  %102 = load i64, i64* %101, align 8
  switch i64 %102, label %105 [
    i64 -1, label %106
    i64 0, label %106
  ]

103:                                              ; preds = %34, %30, %77
  %104 = phi %"class.blink::WeakMember"* [ %79, %77 ], [ null, %30 ], [ null, %34 ]
  ret %"class.blink::WeakMember"* %104

105:                                              ; preds = %92
  br label %106

106:                                              ; preds = %105, %92, %92
  %107 = phi i64 [ %102, %105 ], [ 0, %92 ], [ 0, %92 ]
  %108 = bitcast %"class.blink::WeakMember"* %99 to i64*
  store i64 %107, i64* %108, align 8
  %109 = add nuw nsw i64 %81, 2
  %110 = add i64 %83, -2
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %52, label %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::WeakMember"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_15FontCacheClientEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable"*, %"class.blink::WeakMember"*, i32, %"class.blink::WeakMember"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable", align 8
  %6 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #17
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"class.blink::WeakMember"* %1, %"class.blink::WeakMember"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"class.blink::WeakMember"* %1 to i64
  %17 = bitcast %"class.blink::WeakMember"* %1 to i8*
  br label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %20 = load %"class.blink::WeakMember"*, %"class.blink::WeakMember"** %19, align 8
  br label %48

21:                                               ; preds = %140
  %22 = bitcast %"class.WTF::HashTable"* %5 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = ptrtoint i8* %23 to i64
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i64 [ %16, %15 ], [ %24, %21 ]
  %27 = phi i32 [ 0, %15 ], [ %141, %21 ]
  %28 = phi i8* [ %17, %15 ], [ %23, %21 ]
  %29 = phi %"class.blink::WeakMember"* [ null, %15 ], [ %143, %21 ]
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %34, label %32

32:                                               ; preds = %25
  tail call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %28) #17
  %33 = load i32, i32* %12, align 8
  br label %34

34:                                               ; preds = %25, %32
  %35 = phi i32 [ %27, %25 ], [ %33, %32 ]
  %36 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"class.WTF::HashTable"* %5 to i64*
  store atomic i64 %26, i64* %36 monotonic, align 8
  %39 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %34
  %42 = inttoptr i64 %26 to i8*
  %43 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %42) #17
  br label %44

44:                                               ; preds = %34, %41
  store i32 %2, i32* %12, align 8
  store i64 %37, i64* %38, align 8
  store i32 %35, i32* %8, align 8
  call void @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_15FontCacheClientEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5clearEv(%"class.WTF::HashTable"* nonnull %5)
  %45 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %46 = load i32, i32* %45, align 8
  %47 = and i32 %46, -2147483648
  store i32 %47, i32* %45, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #17
  ret %"class.blink::WeakMember"* %29

48:                                               ; preds = %18, %140
  %49 = phi i32 [ %13, %18 ], [ %141, %140 ]
  %50 = phi %"class.blink::WeakMember"* [ %20, %18 ], [ %142, %140 ]
  %51 = phi %"class.blink::WeakMember"* [ null, %18 ], [ %143, %140 ]
  %52 = phi i32 [ 0, %18 ], [ %144, %140 ]
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %50, i64 %53
  %55 = bitcast %"class.blink::WeakMember"* %54 to i64*
  %56 = load i64, i64* %55, align 8
  switch i64 %56, label %57 [
    i64 -1, label %140
    i64 0, label %140
  ]

57:                                               ; preds = %48
  %58 = load %"class.blink::WeakMember"*, %"class.blink::WeakMember"** %7, align 8
  %59 = load i32, i32* %8, align 8
  %60 = add i32 %59, -1
  %61 = zext i32 %60 to i64
  %62 = shl i64 %56, 32
  %63 = xor i64 %62, -1
  %64 = add i64 %56, %63
  %65 = lshr i64 %64, 22
  %66 = xor i64 %65, %64
  %67 = shl i64 %66, 13
  %68 = xor i64 %67, -1
  %69 = add i64 %66, %68
  %70 = lshr i64 %69, 8
  %71 = xor i64 %70, %69
  %72 = mul i64 %71, 9
  %73 = lshr i64 %72, 15
  %74 = xor i64 %73, %72
  %75 = shl i64 %74, 27
  %76 = xor i64 %75, -1
  %77 = add i64 %74, %76
  %78 = lshr i64 %77, 31
  %79 = xor i64 %78, %77
  %80 = trunc i64 %79 to i32
  %81 = and i32 %60, %80
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %58, i64 %82
  %84 = ptrtoint %"class.blink::WeakMember"* %83 to i64
  %85 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %83, i64 0, i32 0, i32 0
  %86 = load %"class.blink::FontCacheClient"*, %"class.blink::FontCacheClient"** %85, align 8
  %87 = icmp eq %"class.blink::FontCacheClient"* %86, null
  %88 = inttoptr i64 %56 to %"class.blink::FontCacheClient"*
  br i1 %87, label %106, label %89

89:                                               ; preds = %57
  %90 = xor i32 %80, -1
  %91 = lshr i32 %80, 23
  %92 = add i32 %91, %90
  %93 = shl i32 %92, 12
  %94 = xor i32 %93, %92
  %95 = lshr i32 %94, 7
  %96 = xor i32 %95, %94
  %97 = shl i32 %96, 2
  %98 = xor i32 %97, %96
  %99 = lshr i32 %98, 20
  %100 = xor i32 %99, %98
  %101 = or i32 %100, 1
  %102 = zext i32 %101 to i64
  br label %112

103:                                              ; preds = %119
  %104 = ptrtoint %"class.blink::WeakMember"* %126 to i64
  %105 = inttoptr i64 %121 to %"class.blink::WeakMember"*
  br label %106

106:                                              ; preds = %103, %57
  %107 = phi i64 [ %104, %103 ], [ %84, %57 ]
  %108 = phi %"class.blink::WeakMember"* [ %105, %103 ], [ null, %57 ]
  %109 = icmp eq %"class.blink::WeakMember"* %108, null
  %110 = ptrtoint %"class.blink::WeakMember"* %108 to i64
  %111 = select i1 %109, i64 %107, i64 %110
  br label %131

112:                                              ; preds = %119, %89
  %113 = phi i64 [ 0, %89 ], [ %121, %119 ]
  %114 = phi %"class.blink::FontCacheClient"* [ %86, %89 ], [ %129, %119 ]
  %115 = phi i64 [ %84, %89 ], [ %127, %119 ]
  %116 = phi i64 [ %82, %89 ], [ %125, %119 ]
  %117 = phi i64 [ 0, %89 ], [ %123, %119 ]
  %118 = icmp eq %"class.blink::FontCacheClient"* %114, %88
  br i1 %118, label %131, label %119

119:                                              ; preds = %112
  %120 = icmp eq %"class.blink::FontCacheClient"* %114, inttoptr (i64 -1 to %"class.blink::FontCacheClient"*)
  %121 = select i1 %120, i64 %115, i64 %113
  %122 = icmp eq i64 %117, 0
  %123 = select i1 %122, i64 %102, i64 %117
  %124 = add i64 %123, %116
  %125 = and i64 %124, %61
  %126 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %58, i64 %125
  %127 = ptrtoint %"class.blink::WeakMember"* %126 to i64
  %128 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %126, i64 0, i32 0, i32 0
  %129 = load %"class.blink::FontCacheClient"*, %"class.blink::FontCacheClient"** %128, align 8
  %130 = icmp eq %"class.blink::FontCacheClient"* %129, null
  br i1 %130, label %103, label %112

131:                                              ; preds = %112, %106
  %132 = phi i64 [ %111, %106 ], [ %115, %112 ]
  %133 = inttoptr i64 %132 to %"class.blink::WeakMember"*
  %134 = inttoptr i64 %132 to i64*
  store i64 %56, i64* %134, align 8
  %135 = load %"class.blink::WeakMember"*, %"class.blink::WeakMember"** %19, align 8
  %136 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %135, i64 %53
  %137 = icmp eq %"class.blink::WeakMember"* %136, %3
  %138 = select i1 %137, %"class.blink::WeakMember"* %133, %"class.blink::WeakMember"* %51
  %139 = load i32, i32* %12, align 8
  br label %140

140:                                              ; preds = %48, %48, %131
  %141 = phi i32 [ %49, %48 ], [ %139, %131 ], [ %49, %48 ]
  %142 = phi %"class.blink::WeakMember"* [ %50, %48 ], [ %135, %131 ], [ %50, %48 ]
  %143 = phi %"class.blink::WeakMember"* [ %51, %48 ], [ %138, %131 ], [ %51, %48 ]
  %144 = add i32 %52, 1
  %145 = icmp eq i32 %144, %141
  br i1 %145, label %21, label %48
}

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_15FontCacheClientEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #17
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.27, i64 0, i64 0), i8* %11, i8* %12) #17
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.28, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #17
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #17
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #17
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_15FontCacheClientEEES5_NS1_17IdentityExtractorENS1_10MemberHashIS4_EENS1_10HashTraitsIS5_EESA_NS_13HeapAllocatorEEEE14AllocateObjectISD_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_15FontCacheClientEEES5_NS1_17IdentityExtractorENS1_10MemberHashIS4_EENS1_10HashTraitsIS5_EESA_NS_13HeapAllocatorEEEE14AllocateObjectISD_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #17
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !5

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #17
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_15FontCacheClientEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_15FontCacheClientEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.178"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_15FontCacheClientEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.178"*)) #17
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([387 x i8], [387 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_10WeakMemberINS1_15FontCacheClientEEES6_NS_17IdentityExtractorENS_10MemberHashIS5_EENS_10HashTraitsIS6_EESB_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_15FontCacheClientEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.26, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_15FontCacheClientEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5clearEv(%"class.WTF::HashTable"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %3 = load %"class.blink::WeakMember"*, %"class.blink::WeakMember"** %2, align 8
  %4 = icmp eq %"class.blink::WeakMember"* %3, null
  br i1 %4, label %45, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %41, label %10

10:                                               ; preds = %5
  %11 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %12 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %11, i64 0, i32 1
  %13 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %12) #17
  %14 = icmp eq i8* %13, null
  br i1 %14, label %15, label %17, !prof !5

15:                                               ; preds = %10
  %16 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %12, i8* %16) #17
  br label %17

17:                                               ; preds = %10, %15
  %18 = phi i8* [ %16, %15 ], [ %13, %10 ]
  %19 = bitcast i8* %18 to %"class.blink::ThreadState"**
  %20 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %20, i64 0, i32 9
  %22 = load i8, i8* %21, align 1, !range !7
  %23 = icmp ne i8 %22, 0
  %24 = icmp ne i32 %7, 0
  %25 = and i1 %24, %23
  br i1 %25, label %26, label %41

26:                                               ; preds = %17
  %27 = zext i32 %7 to i64
  br label %28

28:                                               ; preds = %38, %26
  %29 = phi i64 [ 0, %26 ], [ %39, %38 ]
  %30 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %3, i64 %29
  %31 = bitcast %"class.blink::WeakMember"* %30 to i64*
  %32 = load i64, i64* %31, align 8
  switch i64 %32, label %33 [
    i64 -1, label %38
    i64 0, label %38
  ]

33:                                               ; preds = %28
  store atomic i64 -1, i64* %31 monotonic, align 8
  %34 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %33
  %37 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull inttoptr (i64 -1 to i8*)) #17
  br label %38

38:                                               ; preds = %36, %33, %28, %28
  %39 = add nuw nsw i64 %29, 1
  %40 = icmp eq i64 %39, %27
  br i1 %40, label %41, label %28

41:                                               ; preds = %38, %5, %17
  %42 = bitcast %"class.blink::WeakMember"* %3 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %42) #17
  %43 = bitcast %"class.WTF::HashTable"* %0 to i64*
  store atomic i64 0, i64* %43 monotonic, align 8
  store i32 0, i32* %6, align 8
  %44 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  store i32 0, i32* %44, align 4
  br label %45

45:                                               ; preds = %1, %41
  ret void
}

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #1

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPKcLj4ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.394"*, i8** dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.394", %"class.WTF::Vector.394"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.394", %"class.WTF::Vector.394"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8**, i8*** %6, align 8
  %8 = icmp ugt i8** %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8*, i8** %7, i64 %10
  %12 = icmp ugt i8** %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIPKcLj4ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.394"* %0, i32 %5) #17
  %14 = load i8**, i8*** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint i8** %1 to i64
  %17 = ptrtoint i8** %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 3
  tail call void @_ZN3WTF6VectorIPKcLj4ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.394"* %0, i32 %5) #17
  %20 = load i8**, i8*** %6, align 8
  %21 = getelementptr inbounds i8*, i8** %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi i8** [ %14, %13 ], [ %20, %15 ]
  %24 = phi i8** [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i8*, i8** %23, i64 %26
  %28 = bitcast i8** %24 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast i8** %27 to i64*
  store i64 %29, i64* %30, align 8
  %31 = load i32, i32* %3, align 4
  %32 = add i32 %31, 1
  store i32 %32, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPKcLj4ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.394"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.394", %"class.WTF::Vector.394"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #17
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #17
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.29, i64 0, i64 0), i8* %15, i8* %16) #17
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.15, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #17
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #17
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #17
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !6

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.394", %"class.WTF::Vector.394"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8**, i8*** %31, align 8
  %33 = icmp eq i8** %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 4
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPKcEEmm(i64 %37) #17
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKcEES2_v, i64 0, i64 0)) #17
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.394"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 3
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.394", %"class.WTF::Vector.394"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.394"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 4, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIPKcLj4ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.394"* %0, i32 %27) #17
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPKcLj4ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.394"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 5
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.394", %"class.WTF::Vector.394"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i8**, i8*** %5, align 8
  %7 = icmp eq i8** %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.394", %"class.WTF::Vector.394"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to i8**
  %10 = icmp eq i8** %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.394"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.394", %"class.WTF::Vector.394"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.394", %"class.WTF::Vector.394"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.394", %"class.WTF::Vector.394"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.394"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.394", %"class.WTF::Vector.394"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !5

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast i8** %6 to i8*
  %27 = shl nuw nsw i64 %25, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* nonnull align 8 %26, i64 %27, i1 false) #17
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIPKcLj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.395"* %19, i8** nonnull %6) #17
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPKcEEmm(i64 %30) #17
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKcEES2_v, i64 0, i64 0)) #17
  %33 = lshr i64 %31, 3
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.394", %"class.WTF::Vector.394"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i8**, i8*** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne i8** %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !6

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.394", %"class.WTF::Vector.394"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast i8** %36 to i8*
  %45 = shl nuw nsw i64 %43, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 8 %44, i64 %45, i1 false) #17
  %46 = load i8**, i8*** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi i8** [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.394", %"class.WTF::Vector.394"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i8**
  %51 = icmp eq i8** %48, %50
  br i1 %51, label %54, label %52, !prof !6

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.394", %"class.WTF::Vector.394"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIPKcLj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.395"* %53, i8** %48) #17
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.394"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.394", %"class.WTF::Vector.394"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPKcEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #17
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.17, i64 0, i64 0), i8* %11, i8* %12) #17
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.18, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #17
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #17
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #17
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #17
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPKcLj4ENS_18PartitionAllocatorEE14AppendSlowCaseIRA9_S1_EEvOT_(%"class.WTF::Vector.394"*, [9 x i8]* dereferenceable(9)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.394", %"class.WTF::Vector.394"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  tail call void @_ZN3WTF6VectorIPKcLj4ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.394"* %0, i32 %5) #17
  %6 = getelementptr inbounds %"class.WTF::Vector.394", %"class.WTF::Vector.394"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8**, i8*** %6, align 8
  %8 = load i32, i32* %3, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds i8*, i8** %7, i64 %9
  %11 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 0
  store i8* %11, i8** %10, align 8
  %12 = load i32, i32* %3, align 4
  %13 = add i32 %12, 1
  store i32 %13, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15FontCacheClientEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #17
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !5

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #17
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15FontCacheClientEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15FontCacheClientEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.178"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15FontCacheClientEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.178"*)) #17
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15FontCacheClientEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15FontCacheClientEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::FontCacheClient"*
  %3 = bitcast i8* %0 to void (%"class.blink::FontCacheClient"*)***
  %4 = load void (%"class.blink::FontCacheClient"*)**, void (%"class.blink::FontCacheClient"*)*** %3, align 8
  %5 = load void (%"class.blink::FontCacheClient"*)*, void (%"class.blink::FontCacheClient"*)** %4, align 8
  tail call void %5(%"class.blink::FontCacheClient"* %2) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15FontCacheClientEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.26, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_15FontFallbackMapELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS1_(%"class.blink::PersistentBase.289"*, %"class.blink::FontFallbackMap"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PersistentBase.289", %"class.blink::PersistentBase.289"* %0, i64 0, i32 0
  store %"class.blink::FontFallbackMap"* %1, %"class.blink::FontFallbackMap"** %3, align 8
  %4 = ptrtoint %"class.blink::FontFallbackMap"* %1 to i64
  switch i64 %4, label %5 [
    i64 0, label %35
    i64 -1, label %35
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::PersistentBase.289", %"class.blink::PersistentBase.289"* %0, i64 0, i32 1, i32 0
  %7 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %6, align 8
  %8 = icmp eq %"class.blink::PersistentNode"* %7, null
  br i1 %8, label %9, label %58

9:                                                ; preds = %5
  %10 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %11 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %10, i64 0, i32 1
  %12 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %11) #17
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %16, !prof !5

14:                                               ; preds = %9
  %15 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %11, i8* %15) #17
  br label %16

16:                                               ; preds = %14, %9
  %17 = phi i8* [ %15, %14 ], [ %12, %9 ]
  %18 = bitcast i8* %17 to %"class.blink::ThreadState"**
  %19 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %21, i64 0, i32 0, i32 0
  %23 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %22, align 8
  %24 = icmp eq %"class.blink::PersistentNode"* %23, null
  br i1 %24, label %25, label %28, !prof !5

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %21, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %26) #17
  %27 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %22, align 8
  br label %28

28:                                               ; preds = %25, %16
  %29 = phi %"class.blink::PersistentNode"* [ %27, %25 ], [ %23, %16 ]
  %30 = bitcast %"class.blink::PersistentNode"* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.blink::PersistentRegion"* %21 to i64*
  store i64 %31, i64* %32, align 8
  %33 = bitcast %"class.blink::PersistentNode"* %29 to %"class.blink::PersistentBase.289"**
  store %"class.blink::PersistentBase.289"* %0, %"class.blink::PersistentBase.289"** %33, align 8
  %34 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %29, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_15FontFallbackMapELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %34, align 8
  store %"class.blink::PersistentNode"* %29, %"class.blink::PersistentNode"** %6, align 8
  br label %58

35:                                               ; preds = %2, %2
  %36 = getelementptr inbounds %"class.blink::PersistentBase.289", %"class.blink::PersistentBase.289"* %0, i64 0, i32 1, i32 0
  %37 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %36, align 8
  %38 = icmp eq %"class.blink::PersistentNode"* %37, null
  br i1 %38, label %58, label %39

39:                                               ; preds = %35
  %40 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %41 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %40, i64 0, i32 1
  %42 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %41) #17
  %43 = icmp eq i8* %42, null
  br i1 %43, label %44, label %46, !prof !5

44:                                               ; preds = %39
  %45 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %41, i8* %45) #17
  br label %46

46:                                               ; preds = %44, %39
  %47 = phi i8* [ %45, %44 ], [ %42, %39 ]
  %48 = bitcast i8* %47 to %"class.blink::ThreadState"**
  %49 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %49, i64 0, i32 3, i32 0, i32 0, i32 0
  %51 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %50, align 8
  %52 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %36, align 8
  %53 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %51, i64 0, i32 0, i32 0
  %54 = bitcast %"class.blink::PersistentRegion"* %51 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.blink::PersistentNode"* %52 to i64*
  store i64 %55, i64* %56, align 8
  %57 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %52, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %57, align 8
  store %"class.blink::PersistentNode"* %52, %"class.blink::PersistentNode"** %53, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %36, align 8
  br label %58

58:                                               ; preds = %46, %35, %28, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_15FontFallbackMapELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::FontFallbackMap"**
  %5 = load %"class.blink::FontFallbackMap"*, %"class.blink::FontFallbackMap"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #17
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #17
  %7 = icmp eq %"class.blink::FontFallbackMap"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::FontFallbackMap"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15FontFallbackMapEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #17
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15FontFallbackMapEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::FontFallbackMap"*
  %4 = bitcast i8* %1 to void (%"class.blink::FontFallbackMap"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::FontFallbackMap"*, %"class.blink::Visitor"*)**, void (%"class.blink::FontFallbackMap"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::FontFallbackMap"*, %"class.blink::Visitor"*)*, void (%"class.blink::FontFallbackMap"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::FontFallbackMap"*, %"class.blink::Visitor"*)*, void (%"class.blink::FontFallbackMap"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::FontFallbackMap"* %3, %"class.blink::Visitor"* %0) #17
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #16

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nofree nounwind readonly }
attributes #17 = { nounwind }
attributes #18 = { builtin nounwind }
attributes #19 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_Z9sk_ref_spI9SkFontMgrE5sk_spIT_EPS2_: argument 0"}
!4 = distinct !{!4, !"_Z9sk_ref_spI9SkFontMgrE5sk_spIT_EPS2_"}
!5 = !{!"branch_weights", i32 1, i32 2000}
!6 = !{!"branch_weights", i32 2000, i32 1}
!7 = !{i8 0, i8 2}
!8 = !{!"branch_weights", i32 1, i32 1048575}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink12FontCacheKeyEEENS1_INS_7HashMapIjNSt3__110unique_ptrINS2_16FontPlatformDataENS6_14default_deleteIS8_EEEENS_7IntHashIjEENS_29UnsignedWithZeroKeyHashTraitsIjEENS1_ISB_EENS_18PartitionAllocatorEEEEEE10EmptyValueEv: argument 0"}
!11 = distinct !{!11, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink12FontCacheKeyEEENS1_INS_7HashMapIjNSt3__110unique_ptrINS2_16FontPlatformDataENS6_14default_deleteIS8_EEEENS_7IntHashIjEENS_29UnsignedWithZeroKeyHashTraitsIjEENS1_ISB_EENS_18PartitionAllocatorEEEEEE10EmptyValueEv"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink12FontCacheKeyEEENS1_INS_7HashMapIjNSt3__110unique_ptrINS2_16FontPlatformDataENS6_14default_deleteIS8_EEEENS_7IntHashIjEENS_29UnsignedWithZeroKeyHashTraitsIjEENS1_ISB_EENS_18PartitionAllocatorEEEEEE10EmptyValueEv: argument 0"}
!14 = distinct !{!14, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink12FontCacheKeyEEENS1_INS_7HashMapIjNSt3__110unique_ptrINS2_16FontPlatformDataENS6_14default_deleteIS8_EEEENS_7IntHashIjEENS_29UnsignedWithZeroKeyHashTraitsIjEENS1_ISB_EENS_18PartitionAllocatorEEEEEE10EmptyValueEv"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN3WTF17GenericHashTraitsIN5blink12FontCacheKeyEE10EmptyValueEv: argument 0"}
!17 = distinct !{!17, !"_ZN3WTF17GenericHashTraitsIN5blink12FontCacheKeyEE10EmptyValueEv"}
!18 = distinct !{!18, !19}
!19 = !{!"llvm.loop.unroll.disable"}
!20 = distinct !{!20, !19}
