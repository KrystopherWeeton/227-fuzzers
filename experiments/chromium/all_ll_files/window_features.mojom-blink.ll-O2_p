; ModuleID = 'gen/third_party/blink/public/mojom/window_features/window_features.mojom-blink.cc'
source_filename = "gen/third_party/blink/public/mojom/window_features/window_features.mojom-blink.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::mojom::blink::WindowFeatures" = type <{ float, i8, [3 x i8], float, i8, [3 x i8], float, i8, [3 x i8], float, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.perfetto::TracedValue" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.perfetto::protos::pbzero::DebugAnnotation" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64 }
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.perfetto::internal::CheckedScope" = type { i8 }
%"class.perfetto::TracedDictionary" = type <{ %"class.protozero::Message"*, i32, %"class.perfetto::internal::CheckedScope", [3 x i8] }>
%"class.mojo::internal::ValidationContext" = type <{ %"class.mojo::Message"*, i8*, i32, [4 x i8], i64, i64, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::internal::Buffer", %"class.std::__1::vector", %"class.std::__1::vector.12", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::ScopedHandleBase.6"*, %"class.mojo::ScopedHandleBase.6"*, %"class.std::__1::__compressed_pair.7" }
%"class.mojo::ScopedHandleBase.6" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.mojo::ScopedHandleBase.6"* }
%"class.std::__1::vector.12" = type { %"class.std::__1::__vector_base.13" }
%"class.std::__1::__vector_base.13" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.14" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.19 }
%class.scoped_refptr.19 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.23, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.25", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.21 }
%class.scoped_refptr.21 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.22", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.22" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.23 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.24" }>
%"class.base::RefCountedThreadSafe.24" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__atomic_base.27" }
%"struct.std::__1::__atomic_base.27" = type { %"struct.std::__1::__cxx_atomic_impl.28" }
%"struct.std::__1::__cxx_atomic_impl.28" = type { %"struct.std::__1::__cxx_atomic_base_impl.29" }
%"struct.std::__1::__cxx_atomic_base_impl.29" = type { i32 }
%"class.blink::mojom::internal::WindowFeatures_Data" = type { %"struct.mojo::internal::StructHeader", float, i8, [3 x i8], float, float, float, [4 x i8] }
%"struct.mojo::internal::StructHeader" = type { i32, i32 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.blink::mojom::blink::WindowFeatures"* }

@.str = private unnamed_addr constant [2 x i8] c"x\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"has_x\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"y\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"has_y\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"width\00", align 1
@.str.6 = private unnamed_addr constant [10 x i8] c"has_width\00", align 1
@.str.7 = private unnamed_addr constant [7 x i8] c"height\00", align 1
@.str.8 = private unnamed_addr constant [11 x i8] c"has_height\00", align 1
@.str.9 = private unnamed_addr constant [17 x i8] c"menu_bar_visible\00", align 1
@.str.10 = private unnamed_addr constant [19 x i8] c"status_bar_visible\00", align 1
@.str.11 = private unnamed_addr constant [17 x i8] c"tool_bar_visible\00", align 1
@.str.12 = private unnamed_addr constant [19 x i8] c"scrollbars_visible\00", align 1

@_ZN5blink5mojom5blink14WindowFeaturesC1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::blink::WindowFeatures"*), void (%"class.blink::mojom::blink::WindowFeatures"*)* @_ZN5blink5mojom5blink14WindowFeaturesC2Ev
@_ZN5blink5mojom5blink14WindowFeaturesC1Efbfbfbfbbbbb = hidden unnamed_addr alias void (%"class.blink::mojom::blink::WindowFeatures"*, float, i1, float, i1, float, i1, float, i1, i1, i1, i1, i1), void (%"class.blink::mojom::blink::WindowFeatures"*, float, i1, float, i1, float, i1, float, i1, i1, i1, i1, i1)* @_ZN5blink5mojom5blink14WindowFeaturesC2Efbfbfbfbbbbb
@_ZN5blink5mojom5blink14WindowFeaturesD1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::blink::WindowFeatures"*), void (%"class.blink::mojom::blink::WindowFeatures"*)* @_ZN5blink5mojom5blink14WindowFeaturesD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom5blink14WindowFeaturesC2Ev(%"class.blink::mojom::blink::WindowFeatures"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::mojom::blink::WindowFeatures", %"class.blink::mojom::blink::WindowFeatures"* %0, i64 0, i32 0
  store float 0.000000e+00, float* %2, align 4
  %3 = getelementptr inbounds %"class.blink::mojom::blink::WindowFeatures", %"class.blink::mojom::blink::WindowFeatures"* %0, i64 0, i32 1
  store i8 0, i8* %3, align 4
  %4 = getelementptr inbounds %"class.blink::mojom::blink::WindowFeatures", %"class.blink::mojom::blink::WindowFeatures"* %0, i64 0, i32 3
  store float 0.000000e+00, float* %4, align 4
  %5 = getelementptr inbounds %"class.blink::mojom::blink::WindowFeatures", %"class.blink::mojom::blink::WindowFeatures"* %0, i64 0, i32 4
  store i8 0, i8* %5, align 4
  %6 = getelementptr inbounds %"class.blink::mojom::blink::WindowFeatures", %"class.blink::mojom::blink::WindowFeatures"* %0, i64 0, i32 6
  store float 0.000000e+00, float* %6, align 4
  %7 = getelementptr inbounds %"class.blink::mojom::blink::WindowFeatures", %"class.blink::mojom::blink::WindowFeatures"* %0, i64 0, i32 7
  store i8 0, i8* %7, align 4
  %8 = getelementptr inbounds %"class.blink::mojom::blink::WindowFeatures", %"class.blink::mojom::blink::WindowFeatures"* %0, i64 0, i32 9
  store float 0.000000e+00, float* %8, align 4
  %9 = getelementptr inbounds %"class.blink::mojom::blink::WindowFeatures", %"class.blink::mojom::blink::WindowFeatures"* %0, i64 0, i32 10
  store i8 0, i8* %9, align 4
  %10 = getelementptr inbounds %"class.blink::mojom::blink::WindowFeatures", %"class.blink::mojom::blink::WindowFeatures"* %0, i64 0, i32 11
  %11 = bitcast i8* %10 to i32*
  store i32 16843009, i32* %11, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom5blink14WindowFeaturesC2Efbfbfbfbbbbb(%"class.blink::mojom::blink::WindowFeatures"* nocapture, float, i1 zeroext, float, i1 zeroext, float, i1 zeroext, float, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext) unnamed_addr #0 align 2 {
  %14 = zext i1 %2 to i8
  %15 = zext i1 %4 to i8
  %16 = zext i1 %6 to i8
  %17 = zext i1 %8 to i8
  %18 = zext i1 %9 to i8
  %19 = zext i1 %10 to i8
  %20 = zext i1 %11 to i8
  %21 = zext i1 %12 to i8
  %22 = getelementptr inbounds %"class.blink::mojom::blink::WindowFeatures", %"class.blink::mojom::blink::WindowFeatures"* %0, i64 0, i32 0
  store float %1, float* %22, align 4
  %23 = getelementptr inbounds %"class.blink::mojom::blink::WindowFeatures", %"class.blink::mojom::blink::WindowFeatures"* %0, i64 0, i32 1
  store i8 %14, i8* %23, align 4
  %24 = getelementptr inbounds %"class.blink::mojom::blink::WindowFeatures", %"class.blink::mojom::blink::WindowFeatures"* %0, i64 0, i32 3
  store float %3, float* %24, align 4
  %25 = getelementptr inbounds %"class.blink::mojom::blink::WindowFeatures", %"class.blink::mojom::blink::WindowFeatures"* %0, i64 0, i32 4
  store i8 %15, i8* %25, align 4
  %26 = getelementptr inbounds %"class.blink::mojom::blink::WindowFeatures", %"class.blink::mojom::blink::WindowFeatures"* %0, i64 0, i32 6
  store float %5, float* %26, align 4
  %27 = getelementptr inbounds %"class.blink::mojom::blink::WindowFeatures", %"class.blink::mojom::blink::WindowFeatures"* %0, i64 0, i32 7
  store i8 %16, i8* %27, align 4
  %28 = getelementptr inbounds %"class.blink::mojom::blink::WindowFeatures", %"class.blink::mojom::blink::WindowFeatures"* %0, i64 0, i32 9
  store float %7, float* %28, align 4
  %29 = getelementptr inbounds %"class.blink::mojom::blink::WindowFeatures", %"class.blink::mojom::blink::WindowFeatures"* %0, i64 0, i32 10
  store i8 %17, i8* %29, align 4
  %30 = getelementptr inbounds %"class.blink::mojom::blink::WindowFeatures", %"class.blink::mojom::blink::WindowFeatures"* %0, i64 0, i32 11
  store i8 %18, i8* %30, align 1
  %31 = getelementptr inbounds %"class.blink::mojom::blink::WindowFeatures", %"class.blink::mojom::blink::WindowFeatures"* %0, i64 0, i32 12
  store i8 %19, i8* %31, align 2
  %32 = getelementptr inbounds %"class.blink::mojom::blink::WindowFeatures", %"class.blink::mojom::blink::WindowFeatures"* %0, i64 0, i32 13
  store i8 %20, i8* %32, align 1
  %33 = getelementptr inbounds %"class.blink::mojom::blink::WindowFeatures", %"class.blink::mojom::blink::WindowFeatures"* %0, i64 0, i32 14
  store i8 %21, i8* %33, align 4
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink5mojom5blink14WindowFeaturesD2Ev(%"class.blink::mojom::blink::WindowFeatures"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK5blink5mojom5blink14WindowFeatures4HashEm(%"class.blink::mojom::blink::WindowFeatures"* nocapture readonly, i64) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::blink::WindowFeatures", %"class.blink::mojom::blink::WindowFeatures"* %0, i64 0, i32 0
  %4 = load float, float* %3, align 4
  %5 = fcmp oeq float %4, 0.000000e+00
  %6 = bitcast float %4 to i32
  %7 = zext i32 %6 to i64
  %8 = select i1 %5, i64 0, i64 %7
  %9 = shl i64 %1, 6
  %10 = lshr i64 %1, 2
  %11 = add i64 %10, %9
  %12 = add i64 %11, %8
  %13 = xor i64 %12, %1
  %14 = getelementptr inbounds %"class.blink::mojom::blink::WindowFeatures", %"class.blink::mojom::blink::WindowFeatures"* %0, i64 0, i32 1
  %15 = load i8, i8* %14, align 1, !range !2
  %16 = zext i8 %15 to i64
  %17 = shl i64 %13, 6
  %18 = or i64 %17, %16
  %19 = lshr i64 %13, 2
  %20 = add i64 %18, %19
  %21 = xor i64 %20, %13
  %22 = getelementptr inbounds %"class.blink::mojom::blink::WindowFeatures", %"class.blink::mojom::blink::WindowFeatures"* %0, i64 0, i32 3
  %23 = load float, float* %22, align 4
  %24 = fcmp oeq float %23, 0.000000e+00
  %25 = bitcast float %23 to i32
  %26 = zext i32 %25 to i64
  %27 = select i1 %24, i64 0, i64 %26
  %28 = shl i64 %21, 6
  %29 = lshr i64 %21, 2
  %30 = add i64 %28, %27
  %31 = add i64 %30, %29
  %32 = xor i64 %31, %21
  %33 = getelementptr inbounds %"class.blink::mojom::blink::WindowFeatures", %"class.blink::mojom::blink::WindowFeatures"* %0, i64 0, i32 4
  %34 = load i8, i8* %33, align 1, !range !2
  %35 = zext i8 %34 to i64
  %36 = shl i64 %32, 6
  %37 = or i64 %36, %35
  %38 = lshr i64 %32, 2
  %39 = add i64 %37, %38
  %40 = xor i64 %39, %32
  %41 = getelementptr inbounds %"class.blink::mojom::blink::WindowFeatures", %"class.blink::mojom::blink::WindowFeatures"* %0, i64 0, i32 6
  %42 = load float, float* %41, align 4
  %43 = fcmp oeq float %42, 0.000000e+00
  %44 = bitcast float %42 to i32
  %45 = zext i32 %44 to i64
  %46 = select i1 %43, i64 0, i64 %45
  %47 = shl i64 %40, 6
  %48 = lshr i64 %40, 2
  %49 = add i64 %47, %46
  %50 = add i64 %49, %48
  %51 = xor i64 %50, %40
  %52 = getelementptr inbounds %"class.blink::mojom::blink::WindowFeatures", %"class.blink::mojom::blink::WindowFeatures"* %0, i64 0, i32 7
  %53 = load i8, i8* %52, align 1, !range !2
  %54 = zext i8 %53 to i64
  %55 = shl i64 %51, 6
  %56 = or i64 %55, %54
  %57 = lshr i64 %51, 2
  %58 = add i64 %56, %57
  %59 = xor i64 %58, %51
  %60 = getelementptr inbounds %"class.blink::mojom::blink::WindowFeatures", %"class.blink::mojom::blink::WindowFeatures"* %0, i64 0, i32 9
  %61 = load float, float* %60, align 4
  %62 = fcmp oeq float %61, 0.000000e+00
  %63 = bitcast float %61 to i32
  %64 = zext i32 %63 to i64
  %65 = select i1 %62, i64 0, i64 %64
  %66 = shl i64 %59, 6
  %67 = lshr i64 %59, 2
  %68 = add i64 %66, %65
  %69 = add i64 %68, %67
  %70 = xor i64 %69, %59
  %71 = getelementptr inbounds %"class.blink::mojom::blink::WindowFeatures", %"class.blink::mojom::blink::WindowFeatures"* %0, i64 0, i32 10
  %72 = load i8, i8* %71, align 1, !range !2
  %73 = zext i8 %72 to i64
  %74 = shl i64 %70, 6
  %75 = or i64 %74, %73
  %76 = lshr i64 %70, 2
  %77 = add i64 %75, %76
  %78 = xor i64 %77, %70
  %79 = getelementptr inbounds %"class.blink::mojom::blink::WindowFeatures", %"class.blink::mojom::blink::WindowFeatures"* %0, i64 0, i32 11
  %80 = load i8, i8* %79, align 1, !range !2
  %81 = zext i8 %80 to i64
  %82 = shl i64 %78, 6
  %83 = or i64 %82, %81
  %84 = lshr i64 %78, 2
  %85 = add i64 %83, %84
  %86 = xor i64 %85, %78
  %87 = getelementptr inbounds %"class.blink::mojom::blink::WindowFeatures", %"class.blink::mojom::blink::WindowFeatures"* %0, i64 0, i32 12
  %88 = load i8, i8* %87, align 1, !range !2
  %89 = zext i8 %88 to i64
  %90 = shl i64 %86, 6
  %91 = or i64 %90, %89
  %92 = lshr i64 %86, 2
  %93 = add i64 %91, %92
  %94 = xor i64 %93, %86
  %95 = getelementptr inbounds %"class.blink::mojom::blink::WindowFeatures", %"class.blink::mojom::blink::WindowFeatures"* %0, i64 0, i32 13
  %96 = load i8, i8* %95, align 1, !range !2
  %97 = zext i8 %96 to i64
  %98 = shl i64 %94, 6
  %99 = or i64 %98, %97
  %100 = lshr i64 %94, 2
  %101 = add i64 %99, %100
  %102 = xor i64 %101, %94
  %103 = getelementptr inbounds %"class.blink::mojom::blink::WindowFeatures", %"class.blink::mojom::blink::WindowFeatures"* %0, i64 0, i32 14
  %104 = load i8, i8* %103, align 1, !range !2
  %105 = zext i8 %104 to i64
  %106 = shl i64 %102, 6
  %107 = or i64 %106, %105
  %108 = lshr i64 %102, 2
  %109 = add i64 %107, %108
  %110 = xor i64 %109, %102
  ret i64 %110
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink5mojom5blink14WindowFeatures14WriteIntoTraceEN8perfetto11TracedValueE(%"class.blink::mojom::blink::WindowFeatures"* nocapture readonly, %"class.perfetto::TracedValue"*) local_unnamed_addr #3 align 2 {
  %3 = alloca %"class.perfetto::TracedValue", align 8
  %4 = alloca %"class.perfetto::TracedValue", align 8
  %5 = alloca %"class.perfetto::TracedValue", align 8
  %6 = alloca %"class.perfetto::TracedValue", align 8
  %7 = alloca %"class.perfetto::TracedValue", align 8
  %8 = alloca %"class.perfetto::TracedValue", align 8
  %9 = alloca %"class.perfetto::TracedValue", align 8
  %10 = alloca %"class.perfetto::TracedValue", align 8
  %11 = alloca %"class.perfetto::TracedValue", align 8
  %12 = alloca %"class.perfetto::TracedValue", align 8
  %13 = alloca %"class.perfetto::TracedValue", align 8
  %14 = alloca %"class.perfetto::TracedValue", align 8
  %15 = alloca %"class.perfetto::TracedDictionary", align 8
  %16 = alloca %"class.perfetto::TracedValue", align 8
  %17 = alloca %"class.perfetto::TracedValue", align 8
  %18 = alloca %"class.perfetto::TracedValue", align 8
  %19 = alloca %"class.perfetto::TracedValue", align 8
  %20 = alloca %"class.perfetto::TracedValue", align 8
  %21 = alloca %"class.perfetto::TracedValue", align 8
  %22 = alloca %"class.perfetto::TracedValue", align 8
  %23 = alloca %"class.perfetto::TracedValue", align 8
  %24 = alloca %"class.perfetto::TracedValue", align 8
  %25 = alloca %"class.perfetto::TracedValue", align 8
  %26 = alloca %"class.perfetto::TracedValue", align 8
  %27 = alloca %"class.perfetto::TracedValue", align 8
  %28 = bitcast %"class.perfetto::TracedDictionary"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #8
  %29 = bitcast %"class.perfetto::TracedDictionary"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 16, i1 false)
  call void @_ZNO8perfetto11TracedValue15WriteDictionaryEv(%"class.perfetto::TracedDictionary"* nonnull sret %15, %"class.perfetto::TracedValue"* %1) #8
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %16, %"class.perfetto::TracedDictionary"* nonnull %15, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0)) #8
  %30 = getelementptr inbounds %"class.blink::mojom::blink::WindowFeatures", %"class.blink::mojom::blink::WindowFeatures"* %0, i64 0, i32 0
  %31 = bitcast %"class.perfetto::TracedValue"* %16 to i8*
  %32 = bitcast %"class.perfetto::TracedValue"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 8 %31, i64 16, i1 false) #8
  %33 = load float, float* %30, align 4
  %34 = fpext float %33 to double
  call void @_ZNO8perfetto11TracedValue11WriteDoubleEd(%"class.perfetto::TracedValue"* nonnull %13, double %34) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #8
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %17, %"class.perfetto::TracedDictionary"* nonnull %15, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0)) #8
  %35 = getelementptr inbounds %"class.blink::mojom::blink::WindowFeatures", %"class.blink::mojom::blink::WindowFeatures"* %0, i64 0, i32 1
  %36 = bitcast %"class.perfetto::TracedValue"* %17 to i8*
  %37 = bitcast %"class.perfetto::TracedValue"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* nonnull align 8 %36, i64 16, i1 false) #8
  %38 = load i8, i8* %35, align 1, !range !2
  %39 = icmp ne i8 %38, 0
  call void @_ZNO8perfetto11TracedValue12WriteBooleanEb(%"class.perfetto::TracedValue"* nonnull %12, i1 zeroext %39) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #8
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %18, %"class.perfetto::TracedDictionary"* nonnull %15, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #8
  %40 = getelementptr inbounds %"class.blink::mojom::blink::WindowFeatures", %"class.blink::mojom::blink::WindowFeatures"* %0, i64 0, i32 3
  %41 = bitcast %"class.perfetto::TracedValue"* %18 to i8*
  %42 = bitcast %"class.perfetto::TracedValue"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %42, i8* nonnull align 8 %41, i64 16, i1 false) #8
  %43 = load float, float* %40, align 4
  %44 = fpext float %43 to double
  call void @_ZNO8perfetto11TracedValue11WriteDoubleEd(%"class.perfetto::TracedValue"* nonnull %11, double %44) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #8
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %19, %"class.perfetto::TracedDictionary"* nonnull %15, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0)) #8
  %45 = getelementptr inbounds %"class.blink::mojom::blink::WindowFeatures", %"class.blink::mojom::blink::WindowFeatures"* %0, i64 0, i32 4
  %46 = bitcast %"class.perfetto::TracedValue"* %19 to i8*
  %47 = bitcast %"class.perfetto::TracedValue"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %47) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %47, i8* nonnull align 8 %46, i64 16, i1 false) #8
  %48 = load i8, i8* %45, align 1, !range !2
  %49 = icmp ne i8 %48, 0
  call void @_ZNO8perfetto11TracedValue12WriteBooleanEb(%"class.perfetto::TracedValue"* nonnull %10, i1 zeroext %49) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %47) #8
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %20, %"class.perfetto::TracedDictionary"* nonnull %15, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0)) #8
  %50 = getelementptr inbounds %"class.blink::mojom::blink::WindowFeatures", %"class.blink::mojom::blink::WindowFeatures"* %0, i64 0, i32 6
  %51 = bitcast %"class.perfetto::TracedValue"* %20 to i8*
  %52 = bitcast %"class.perfetto::TracedValue"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %52, i8* nonnull align 8 %51, i64 16, i1 false) #8
  %53 = load float, float* %50, align 4
  %54 = fpext float %53 to double
  call void @_ZNO8perfetto11TracedValue11WriteDoubleEd(%"class.perfetto::TracedValue"* nonnull %9, double %54) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52) #8
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %21, %"class.perfetto::TracedDictionary"* nonnull %15, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i64 0, i64 0)) #8
  %55 = getelementptr inbounds %"class.blink::mojom::blink::WindowFeatures", %"class.blink::mojom::blink::WindowFeatures"* %0, i64 0, i32 7
  %56 = bitcast %"class.perfetto::TracedValue"* %21 to i8*
  %57 = bitcast %"class.perfetto::TracedValue"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %57) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %57, i8* nonnull align 8 %56, i64 16, i1 false) #8
  %58 = load i8, i8* %55, align 1, !range !2
  %59 = icmp ne i8 %58, 0
  call void @_ZNO8perfetto11TracedValue12WriteBooleanEb(%"class.perfetto::TracedValue"* nonnull %8, i1 zeroext %59) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %57) #8
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %22, %"class.perfetto::TracedDictionary"* nonnull %15, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i64 0, i64 0)) #8
  %60 = getelementptr inbounds %"class.blink::mojom::blink::WindowFeatures", %"class.blink::mojom::blink::WindowFeatures"* %0, i64 0, i32 9
  %61 = bitcast %"class.perfetto::TracedValue"* %22 to i8*
  %62 = bitcast %"class.perfetto::TracedValue"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %62) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %62, i8* nonnull align 8 %61, i64 16, i1 false) #8
  %63 = load float, float* %60, align 4
  %64 = fpext float %63 to double
  call void @_ZNO8perfetto11TracedValue11WriteDoubleEd(%"class.perfetto::TracedValue"* nonnull %7, double %64) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %62) #8
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %23, %"class.perfetto::TracedDictionary"* nonnull %15, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0)) #8
  %65 = getelementptr inbounds %"class.blink::mojom::blink::WindowFeatures", %"class.blink::mojom::blink::WindowFeatures"* %0, i64 0, i32 10
  %66 = bitcast %"class.perfetto::TracedValue"* %23 to i8*
  %67 = bitcast %"class.perfetto::TracedValue"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %67) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %67, i8* nonnull align 8 %66, i64 16, i1 false) #8
  %68 = load i8, i8* %65, align 1, !range !2
  %69 = icmp ne i8 %68, 0
  call void @_ZNO8perfetto11TracedValue12WriteBooleanEb(%"class.perfetto::TracedValue"* nonnull %6, i1 zeroext %69) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %67) #8
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %24, %"class.perfetto::TracedDictionary"* nonnull %15, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0)) #8
  %70 = getelementptr inbounds %"class.blink::mojom::blink::WindowFeatures", %"class.blink::mojom::blink::WindowFeatures"* %0, i64 0, i32 11
  %71 = bitcast %"class.perfetto::TracedValue"* %24 to i8*
  %72 = bitcast %"class.perfetto::TracedValue"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %72) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %72, i8* nonnull align 8 %71, i64 16, i1 false) #8
  %73 = load i8, i8* %70, align 1, !range !2
  %74 = icmp ne i8 %73, 0
  call void @_ZNO8perfetto11TracedValue12WriteBooleanEb(%"class.perfetto::TracedValue"* nonnull %5, i1 zeroext %74) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %72) #8
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %25, %"class.perfetto::TracedDictionary"* nonnull %15, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.10, i64 0, i64 0)) #8
  %75 = getelementptr inbounds %"class.blink::mojom::blink::WindowFeatures", %"class.blink::mojom::blink::WindowFeatures"* %0, i64 0, i32 12
  %76 = bitcast %"class.perfetto::TracedValue"* %25 to i8*
  %77 = bitcast %"class.perfetto::TracedValue"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %77) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %77, i8* nonnull align 8 %76, i64 16, i1 false) #8
  %78 = load i8, i8* %75, align 1, !range !2
  %79 = icmp ne i8 %78, 0
  call void @_ZNO8perfetto11TracedValue12WriteBooleanEb(%"class.perfetto::TracedValue"* nonnull %4, i1 zeroext %79) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %77) #8
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %26, %"class.perfetto::TracedDictionary"* nonnull %15, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0)) #8
  %80 = getelementptr inbounds %"class.blink::mojom::blink::WindowFeatures", %"class.blink::mojom::blink::WindowFeatures"* %0, i64 0, i32 13
  %81 = bitcast %"class.perfetto::TracedValue"* %26 to i8*
  %82 = bitcast %"class.perfetto::TracedValue"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %82) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %82, i8* nonnull align 8 %81, i64 16, i1 false) #8
  %83 = load i8, i8* %80, align 1, !range !2
  %84 = icmp ne i8 %83, 0
  call void @_ZNO8perfetto11TracedValue12WriteBooleanEb(%"class.perfetto::TracedValue"* nonnull %3, i1 zeroext %84) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %82) #8
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %27, %"class.perfetto::TracedDictionary"* nonnull %15, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.12, i64 0, i64 0)) #8
  %85 = getelementptr inbounds %"class.blink::mojom::blink::WindowFeatures", %"class.blink::mojom::blink::WindowFeatures"* %0, i64 0, i32 14
  %86 = bitcast %"class.perfetto::TracedValue"* %27 to i8*
  %87 = bitcast %"class.perfetto::TracedValue"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %87) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %87, i8* nonnull align 8 %86, i64 16, i1 false) #8
  %88 = load i8, i8* %85, align 1, !range !2
  %89 = icmp ne i8 %88, 0
  call void @_ZNO8perfetto11TracedValue12WriteBooleanEb(%"class.perfetto::TracedValue"* nonnull %14, i1 zeroext %89) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZNO8perfetto11TracedValue15WriteDictionaryEv(%"class.perfetto::TracedDictionary"* sret, %"class.perfetto::TracedValue"*) local_unnamed_addr #5

declare void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* sret, %"class.perfetto::TracedDictionary"*, i8*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink5mojom5blink14WindowFeatures8ValidateEPKvPN4mojo8internal17ValidationContextE(i8*, %"class.mojo::internal::ValidationContext"*) local_unnamed_addr #3 align 2 {
  %3 = tail call zeroext i1 @_ZN5blink5mojom8internal19WindowFeatures_Data8ValidateEPKvPN4mojo8internal17ValidationContextE(i8* %0, %"class.mojo::internal::ValidationContext"* %1) #8
  ret i1 %3
}

declare zeroext i1 @_ZN5blink5mojom8internal19WindowFeatures_Data8ValidateEPKvPN4mojo8internal17ValidationContextE(i8*, %"class.mojo::internal::ValidationContext"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN5blink5mojom22WindowFeaturesDataViewENS_9StructPtrINS2_5blink14WindowFeaturesEEEE4ReadES3_PS7_(%"class.blink::mojom::internal::WindowFeatures_Data"*, %"class.mojo::StructPtr"* nocapture) local_unnamed_addr #3 align 2 {
  %3 = tail call i8* @_Znwm(i64 36) #9, !noalias !3
  %4 = getelementptr inbounds i8, i8* %3, i64 4
  %5 = getelementptr inbounds i8, i8* %3, i64 8
  %6 = getelementptr inbounds i8, i8* %3, i64 12
  %7 = getelementptr inbounds i8, i8* %3, i64 16
  %8 = getelementptr inbounds i8, i8* %3, i64 20
  %9 = getelementptr inbounds i8, i8* %3, i64 24
  %10 = getelementptr inbounds i8, i8* %3, i64 28
  %11 = getelementptr inbounds i8, i8* %3, i64 29
  %12 = ptrtoint i8* %3 to i64
  %13 = getelementptr inbounds %"class.blink::mojom::internal::WindowFeatures_Data", %"class.blink::mojom::internal::WindowFeatures_Data"* %0, i64 0, i32 1
  %14 = bitcast float* %13 to i32*
  %15 = load i32, i32* %14, align 1
  %16 = bitcast i8* %3 to i32*
  store i32 %15, i32* %16, align 4
  %17 = getelementptr inbounds %"class.blink::mojom::internal::WindowFeatures_Data", %"class.blink::mojom::internal::WindowFeatures_Data"* %0, i64 0, i32 2
  %18 = load i8, i8* %17, align 1
  %19 = and i8 %18, 1
  store i8 %19, i8* %4, align 4
  %20 = getelementptr inbounds %"class.blink::mojom::internal::WindowFeatures_Data", %"class.blink::mojom::internal::WindowFeatures_Data"* %0, i64 0, i32 4
  %21 = bitcast float* %20 to i32*
  %22 = load i32, i32* %21, align 1
  %23 = bitcast i8* %5 to i32*
  store i32 %22, i32* %23, align 4
  %24 = lshr i8 %18, 1
  %25 = and i8 %24, 1
  store i8 %25, i8* %6, align 4
  %26 = getelementptr inbounds %"class.blink::mojom::internal::WindowFeatures_Data", %"class.blink::mojom::internal::WindowFeatures_Data"* %0, i64 0, i32 5
  %27 = bitcast float* %26 to i32*
  %28 = load i32, i32* %27, align 1
  %29 = bitcast i8* %7 to i32*
  store i32 %28, i32* %29, align 4
  %30 = lshr i8 %18, 2
  %31 = and i8 %30, 1
  store i8 %31, i8* %8, align 4
  %32 = getelementptr inbounds %"class.blink::mojom::internal::WindowFeatures_Data", %"class.blink::mojom::internal::WindowFeatures_Data"* %0, i64 0, i32 6
  %33 = bitcast float* %32 to i32*
  %34 = load i32, i32* %33, align 1
  %35 = bitcast i8* %9 to i32*
  store i32 %34, i32* %35, align 4
  %36 = lshr i8 %18, 3
  %37 = and i8 %36, 1
  store i8 %37, i8* %10, align 4
  %38 = lshr i8 %18, 4
  %39 = and i8 %38, 1
  store i8 %39, i8* %11, align 1
  %40 = getelementptr inbounds i8, i8* %3, i64 30
  %41 = lshr i8 %18, 5
  %42 = and i8 %41, 1
  store i8 %42, i8* %40, align 2
  %43 = getelementptr inbounds i8, i8* %3, i64 31
  %44 = lshr i8 %18, 6
  %45 = and i8 %44, 1
  store i8 %45, i8* %43, align 1
  %46 = getelementptr inbounds i8, i8* %3, i64 32
  %47 = lshr i8 %18, 7
  store i8 %47, i8* %46, align 4
  %48 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %49 = load %"class.blink::mojom::blink::WindowFeatures"*, %"class.blink::mojom::blink::WindowFeatures"** %48, align 8
  store %"class.blink::mojom::blink::WindowFeatures"* null, %"class.blink::mojom::blink::WindowFeatures"** %48, align 8
  %50 = icmp eq %"class.blink::mojom::blink::WindowFeatures"* %49, null
  br i1 %50, label %51, label %53

51:                                               ; preds = %2
  %52 = bitcast %"class.mojo::StructPtr"* %1 to i64*
  store i64 %12, i64* %52, align 8
  br label %60

53:                                               ; preds = %2
  %54 = bitcast %"class.blink::mojom::blink::WindowFeatures"* %49 to i8*
  tail call void @_ZdlPv(i8* %54) #9
  %55 = bitcast %"class.mojo::StructPtr"* %1 to i64*
  %56 = load %"class.blink::mojom::blink::WindowFeatures"*, %"class.blink::mojom::blink::WindowFeatures"** %48, align 8
  store i64 %12, i64* %55, align 8
  %57 = icmp eq %"class.blink::mojom::blink::WindowFeatures"* %56, null
  br i1 %57, label %60, label %58

58:                                               ; preds = %53
  %59 = bitcast %"class.blink::mojom::blink::WindowFeatures"* %56 to i8*
  tail call void @_ZdlPv(i8* %59) #9
  br label %60

60:                                               ; preds = %51, %53, %58
  ret i1 true
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare void @_ZNO8perfetto11TracedValue11WriteDoubleEd(%"class.perfetto::TracedValue"*, double) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZNO8perfetto11TracedValue12WriteBooleanEb(%"class.perfetto::TracedValue"*, i1 zeroext) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN5blink5mojom5blink14WindowFeatures3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!5 = distinct !{!5, !"_ZN5blink5mojom5blink14WindowFeatures3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_"}
