; ModuleID = '../../media/base/media_util.cc'
source_filename = "../../media/base/media_util.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.2", [4 x i8] }>
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i32 }

@.str = private unnamed_addr constant [46 x i8] c"Media.PepperVideoDecoderOutputPictureCount.HW\00", align 1
@.str.1 = private unnamed_addr constant [46 x i8] c"Media.PepperVideoDecoderOutputPictureCount.SW\00", align 1
@_ZZN5media44ReportPepperVideoDecoderOutputPictureCountHWEiE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN5media44ReportPepperVideoDecoderOutputPictureCountSWEiE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media14EmptyExtraDataEv(%"class.std::__1::vector"* noalias nocapture sret) local_unnamed_addr #0 {
  %2 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media44ReportPepperVideoDecoderOutputPictureCountHWEi(i32) local_unnamed_addr #0 {
  %2 = load atomic i64, i64* @_ZZN5media44ReportPepperVideoDecoderOutputPictureCountHWEiE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %3 = inttoptr i64 %2 to %"class.base::HistogramBase"*
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = tail call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 1, i32 6, i32 7, i32 1) #3
  %7 = ptrtoint %"class.base::HistogramBase"* %6 to i64
  store atomic i64 %7, i64* @_ZZN5media44ReportPepperVideoDecoderOutputPictureCountHWEiE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.base::HistogramBase"* [ %3, %1 ], [ %6, %5 ]
  %10 = icmp slt i32 %0, 401
  br i1 %10, label %20, label %11

11:                                               ; preds = %8
  %12 = icmp slt i32 %0, 601
  br i1 %12, label %20, label %13

13:                                               ; preds = %11
  %14 = icmp slt i32 %0, 901
  br i1 %14, label %20, label %15

15:                                               ; preds = %13
  %16 = icmp slt i32 %0, 1261
  br i1 %16, label %20, label %17

17:                                               ; preds = %15
  %18 = icmp slt i32 %0, 1801
  %19 = select i1 %18, i32 4, i32 5
  br label %20

20:                                               ; preds = %8, %11, %13, %15, %17
  %21 = phi i32 [ 0, %8 ], [ 1, %11 ], [ 2, %13 ], [ 3, %15 ], [ %19, %17 ]
  %22 = bitcast %"class.base::HistogramBase"* %9 to void (%"class.base::HistogramBase"*, i32)***
  %23 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %23, i64 6
  %25 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %24, align 8
  tail call void %25(%"class.base::HistogramBase"* %9, i32 %21) #3
  ret void
}

declare %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media44ReportPepperVideoDecoderOutputPictureCountSWEi(i32) local_unnamed_addr #0 {
  %2 = load atomic i64, i64* @_ZZN5media44ReportPepperVideoDecoderOutputPictureCountSWEiE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %3 = inttoptr i64 %2 to %"class.base::HistogramBase"*
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = tail call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0), i32 1, i32 6, i32 7, i32 1) #3
  %7 = ptrtoint %"class.base::HistogramBase"* %6 to i64
  store atomic i64 %7, i64* @_ZZN5media44ReportPepperVideoDecoderOutputPictureCountSWEiE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.base::HistogramBase"* [ %3, %1 ], [ %6, %5 ]
  %10 = icmp slt i32 %0, 401
  br i1 %10, label %20, label %11

11:                                               ; preds = %8
  %12 = icmp slt i32 %0, 601
  br i1 %12, label %20, label %13

13:                                               ; preds = %11
  %14 = icmp slt i32 %0, 901
  br i1 %14, label %20, label %15

15:                                               ; preds = %13
  %16 = icmp slt i32 %0, 1261
  br i1 %16, label %20, label %17

17:                                               ; preds = %15
  %18 = icmp slt i32 %0, 1801
  %19 = select i1 %18, i32 4, i32 5
  br label %20

20:                                               ; preds = %8, %11, %13, %15, %17
  %21 = phi i32 [ 0, %8 ], [ 1, %11 ], [ 2, %13 ], [ 3, %15 ], [ %19, %17 ]
  %22 = bitcast %"class.base::HistogramBase"* %9 to void (%"class.base::HistogramBase"*, i32)***
  %23 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %23, i64 6
  %25 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %24, align 8
  tail call void %25(%"class.base::HistogramBase"* %9, i32 %21) #3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
