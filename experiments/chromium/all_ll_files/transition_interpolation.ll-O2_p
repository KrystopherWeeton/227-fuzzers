; ModuleID = '../../third_party/blink/renderer/core/animation/transition_interpolation.cc'
source_filename = "../../third_party/blink/renderer/core/animation/transition_interpolation.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::TransitionInterpolation" = type { %"class.blink::Interpolation", %"class.blink::PropertyHandle", %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue", %"struct.blink::PairwiseInterpolationValue", %"class.blink::Member", %"class.blink::Member", double, i32, %"class.std::__1::unique_ptr" }
%"class.blink::Interpolation" = type { i32 (...)** }
%"class.blink::PropertyHandle" = type { i32, %union.anon, %"class.WTF::AtomicString" }
%union.anon = type { %"class.blink::CSSProperty"* }
%"class.blink::CSSProperty" = type <{ %"class.blink::CSSUnresolvedProperty", i32, i32, i8, [7 x i8] }>
%"class.blink::CSSUnresolvedProperty" = type { i32 (...)** }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::InterpolationType" = type { i32 (...)**, %"class.blink::PropertyHandle" }
%"struct.blink::InterpolationValue" = type { %"class.std::__1::unique_ptr", %class.scoped_refptr.3 }
%class.scoped_refptr.3 = type { %"class.blink::NonInterpolableValue"* }
%"class.blink::NonInterpolableValue" = type <{ i32 (...)**, %"class.WTF::RefCounted.4", [4 x i8] }>
%"class.WTF::RefCounted.4" = type { %"class.base::RefCounted.5" }
%"class.base::RefCounted.5" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"struct.blink::PairwiseInterpolationValue" = type { %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %class.scoped_refptr.3 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::CompositorKeyframeValue"* }
%"class.blink::CompositorKeyframeValue" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::InterpolableValue"* }
%"class.blink::InterpolableValue" = type { i32 (...)** }
%"class.blink::StyleResolverState" = type <{ %"class.blink::ElementResolveContext", %"class.blink::Document"*, %class.scoped_refptr.535, %"class.blink::CSSToLengthConversionData", %class.scoped_refptr.31, %class.scoped_refptr.31, %"class.blink::CSSAnimationUpdate", i32, [4 x i8], %"class.blink::FontBuilder", %"class.blink::PseudoElement"*, %"class.blink::ElementStyleResources", i32, i8, i8, [2 x i8] }>
%"class.blink::ElementResolveContext" = type <{ %"class.blink::Element"*, %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"*, %class.scoped_refptr.31, i32, [4 x i8] }>
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.18" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.10", %"class.blink::Member.10" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.10", %"class.blink::Member.12", %"class.blink::Member.10", %"class.blink::Member.10", %"class.blink::Member.14" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.12" = type { %"class.blink::MemberBase.13" }
%"class.blink::MemberBase.13" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.32", %"class.blink::Member.34", %"class.blink::Member.12", %"class.blink::Member.36", %"class.blink::Member.36", %"class.blink::Member.55", %"class.blink::Member.57", %"class.blink::Member.59", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.64", %"class.blink::HeapVector.66" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.32" = type { %"class.blink::MemberBase.33" }
%"class.blink::MemberBase.33" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.34" = type { %"class.blink::MemberBase.35" }
%"class.blink::MemberBase.35" = type { %"class.blink::Document"* }
%"class.blink::Member.36" = type { %"class.blink::MemberBase.37" }
%"class.blink::MemberBase.37" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.43" }
%"class.blink::Member.43" = type { %"class.blink::MemberBase.44" }
%"class.blink::MemberBase.44" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.47", i32, %"class.blink::HeapVector" }
%"class.blink::Member.47" = type { %"class.blink::MemberBase.48" }
%"class.blink::MemberBase.48" = type { %"class.blink::Element"* }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.51" }
%"class.WTF::Vector.51" = type { %"class.WTF::VectorBuffer.52" }
%"class.WTF::VectorBuffer.52" = type { %"class.WTF::VectorBufferBase.53" }
%"class.WTF::VectorBufferBase.53" = type { %"class.blink::Member.47"*, i32, i32 }
%"class.blink::Member.55" = type { %"class.blink::MemberBase.56" }
%"class.blink::MemberBase.56" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.57" = type { %"class.blink::MemberBase.58" }
%"class.blink::MemberBase.58" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.59" = type { %"class.blink::MemberBase.60" }
%"class.blink::MemberBase.60" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.61" }
%"class.blink::Member.61" = type { %"class.blink::MemberBase.62" }
%"class.blink::MemberBase.62" = type { %"class.blink::HeapHashMap.63"* }
%"class.blink::HeapHashMap.63" = type opaque
%"class.blink::Member.64" = type { %"class.blink::MemberBase.65" }
%"class.blink::MemberBase.65" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.66" = type { %"class.WTF::Vector.69" }
%"class.WTF::Vector.69" = type { %"class.WTF::VectorBuffer.70" }
%"class.WTF::VectorBuffer.70" = type { %"class.WTF::VectorBufferBase.71" }
%"class.WTF::VectorBufferBase.71" = type { %"class.blink::Member.72"*, i32, i32 }
%"class.blink::Member.72" = type { %"class.blink::MemberBase.73" }
%"class.blink::MemberBase.73" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::Member.14" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.10" = type { %"class.blink::MemberBase.11" }
%"class.blink::MemberBase.11" = type { %"class.blink::Node"* }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.18" = type { %"class.blink::MemberBase.19" }
%"class.blink::MemberBase.19" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.22", %"class.blink::Member.24", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.22" = type { %"class.WTF::SingleThreadedBitField.23" }
%"class.WTF::SingleThreadedBitField.23" = type { i32 }
%"class.blink::Member.24" = type { %"class.blink::MemberBase.25" }
%"class.blink::MemberBase.25" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.28 }
%class.scoped_refptr.28 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.29", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.29" = type { %"class.base::RefCounted.30" }
%"class.base::RefCounted.30" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.82", %"class.WTF::Vector.82", i8, i32, %"class.blink::Member.93", %"class.blink::Member.95", %"class.blink::Member.97", %"class.blink::Member.99", %"class.blink::Member.101", %"class.blink::Member.103", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.111", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.117", %"class.blink::Member.119", %"class.blink::Member.72", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.122", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.47", %"class.blink::Member.331", %"class.blink::Member.47", %"class.blink::Member.47", %"class.blink::Member.47", %"class.blink::UserActionElementSet", %"class.blink::Member.340", double, double, i64, i64, %"class.blink::HeapHashSet", %"class.blink::HeapHashSet.347", i16, i8, %"class.blink::Member.354", %"class.blink::Member.356", %"class.blink::Member.358", %"class.blink::Member.360", %"class.blink::TextLinkColors", %"class.blink::Member.362", i8, [7 x i8], %"class.blink::HeapHashMap.364", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.47", %"class.WTF::Vector.371", %"class.blink::Member.376", %"class.blink::Member.378", i8, %"class.blink::Member.47", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.380", %"class.blink::HeapVector.382", %"class.std::__1::unique_ptr.390", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.396", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.409", %"class.WTF::Vector.411", i8, i8, %"class.std::__1::unique_ptr.416", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.422", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.430", i8, i32, %"class.blink::Member.432", %"class.blink::Member.434", %"class.blink::Member.436", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.438", %"class.WTF::HashMap.440", %"class.blink::Member.445", %"class.blink::Member.447", %"class.blink::Member.449", %"class.blink::Member.451", %"class.blink::Member.34", %"class.blink::Member.34", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.453", i8, i32, %"class.blink::Member.460", %"class.blink::Member.462", i32, %"class.blink::Member.464", %"class.blink::Member.466", %"class.blink::Member.468", %"class.std::__1::unique_ptr.470", i64, %"class.std::__1::unique_ptr.476", i32, i32, %"class.blink::Member.482", %"class.blink::Member.484", %"class.blink::Member.486", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.488", %"class.WTF::Vector.490", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.495", %"class.blink::Member.502", %"class.std::__1::unique_ptr.504", %"class.blink::Member.510", i8, i8, %"class.WTF::String", %"class.blink::Member.512", i8, [7 x i8], %"class.blink::HeapHashMap.514", %"class.blink::HeapObserverSet", %"class.blink::Member.528", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.530", i32, i8, i8, %"class.blink::WeakMember.532", %"class.blink::Member.533" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.75" }
%"class.blink::HeapHashMap.75" = type { %"class.WTF::HashMap.78" }
%"class.WTF::HashMap.78" = type { %"class.WTF::HashTable.79" }
%"class.WTF::HashTable.79" = type <{ %"struct.WTF::KeyValuePair.81"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.81" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.82" = type { %"class.WTF::VectorBuffer.83" }
%"class.WTF::VectorBuffer.83" = type { %"class.WTF::VectorBufferBase.84" }
%"class.WTF::VectorBufferBase.84" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.85 }
%class.scoped_refptr.85 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.86" }
%"struct.std::__1::atomic.86" = type { %"struct.std::__1::__atomic_base.87" }
%"struct.std::__1::__atomic_base.87" = type { %"struct.std::__1::__atomic_base.88" }
%"struct.std::__1::__atomic_base.88" = type { %"struct.std::__1::__cxx_atomic_impl.89" }
%"struct.std::__1::__cxx_atomic_impl.89" = type { %"struct.std::__1::__cxx_atomic_base_impl.90" }
%"struct.std::__1::__cxx_atomic_base_impl.90" = type { i32 }
%"class.blink::Member.93" = type { %"class.blink::MemberBase.94" }
%"class.blink::MemberBase.94" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.95" = type { %"class.blink::MemberBase.96" }
%"class.blink::MemberBase.96" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.846", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.879", i32, i8, [3 x i8], %"class.blink::HeapVector.881", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.889", %"class.blink::Member.891", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.900", %"class.blink::Member.906", %"class.blink::Member.908", i8, [7 x i8] }>
%"class.blink::Supplementable.846" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.847" }
%"class.blink::HeapHashMap.847" = type { %"class.WTF::HashMap.850" }
%"class.WTF::HashMap.850" = type { %"class.WTF::HashTable.851" }
%"class.WTF::HashTable.851" = type <{ %"struct.WTF::KeyValuePair.853"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.853" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.854" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.799" }
%"class.blink::HeapObserverSet.799" = type { i32, [4 x i8], %"class.blink::HeapHashSet.800" }
%"class.blink::HeapHashSet.800" = type { %"class.WTF::HashSet.803" }
%"class.WTF::HashSet.803" = type { %"class.WTF::HashTable.804" }
%"class.WTF::HashTable.804" = type <{ %"class.blink::WeakMember.806"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.806" = type opaque
%"class.blink::Supplementable.854" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.855" }
%"class.blink::HeapHashMap.855" = type { %"class.WTF::HashMap.858" }
%"class.WTF::HashMap.858" = type { %"class.WTF::HashTable.859" }
%"class.WTF::HashTable.859" = type <{ %"struct.WTF::KeyValuePair.861"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.861" = type { i8*, %"class.blink::Member.916" }
%"class.blink::Member.916" = type { %"class.blink::MemberBase.917" }
%"class.blink::MemberBase.917" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.918" }
%"class.blink::Member.918" = type { %"class.blink::MemberBase.919" }
%"class.blink::MemberBase.919" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.v8::Isolate" = type { i8 }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.862, %"class.std::__1::unique_ptr.863", %"class.std::__1::unique_ptr.863", %"class.std::__1::unique_ptr.869", %"class.std::__1::unique_ptr.869", %"class.blink::Member.95", i32, [4 x i8], %"class.WTF::HashSet.875", i32, i32 }
%class.scoped_refptr.862 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.863" = type { %"class.std::__1::__compressed_pair.864" }
%"class.std::__1::__compressed_pair.864" = type { %"struct.std::__1::__compressed_pair_elem.865" }
%"struct.std::__1::__compressed_pair_elem.865" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.869" = type { %"class.std::__1::__compressed_pair.870" }
%"class.std::__1::__compressed_pair.870" = type { %"struct.std::__1::__compressed_pair_elem.871" }
%"struct.std::__1::__compressed_pair_elem.871" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.875" = type { %"class.WTF::HashTable.876" }
%"class.WTF::HashTable.876" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.879" = type { %"class.blink::MemberBase.880" }
%"class.blink::MemberBase.880" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.881" = type { %"class.WTF::Vector.884" }
%"class.WTF::Vector.884" = type { %"class.WTF::VectorBuffer.885" }
%"class.WTF::VectorBuffer.885" = type { %"class.WTF::VectorBufferBase.886" }
%"class.WTF::VectorBufferBase.886" = type { %"class.blink::Member.887"*, i32, i32 }
%"class.blink::Member.887" = type opaque
%"class.blink::Member.889" = type { %"class.blink::MemberBase.890" }
%"class.blink::MemberBase.890" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.891" = type { %"class.blink::MemberBase.892" }
%"class.blink::MemberBase.892" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.893", i32, i32 }
%"class.blink::HeapHashMap.893" = type { %"class.WTF::HashMap.896" }
%"class.WTF::HashMap.896" = type { %"class.WTF::HashTable.897" }
%"class.WTF::HashTable.897" = type <{ %"struct.WTF::KeyValuePair.899"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.899" = type opaque
%"class.std::__1::unique_ptr.900" = type { %"class.std::__1::__compressed_pair.901" }
%"class.std::__1::__compressed_pair.901" = type { %"struct.std::__1::__compressed_pair_elem.902" }
%"struct.std::__1::__compressed_pair_elem.902" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.906" = type { %"class.blink::MemberBase.907" }
%"class.blink::MemberBase.907" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.908" = type { %"class.blink::MemberBase.909" }
%"class.blink::MemberBase.909" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.97" = type { %"class.blink::MemberBase.98" }
%"class.blink::MemberBase.98" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.99" = type { %"class.blink::MemberBase.100" }
%"class.blink::MemberBase.100" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.101" = type { %"class.blink::MemberBase.102" }
%"class.blink::MemberBase.102" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.103" = type { %"class.blink::MemberBase.104" }
%"class.blink::MemberBase.104" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.105" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.blink::KURL"* }
%"class.blink::Member.117" = type { %"class.blink::MemberBase.118" }
%"class.blink::MemberBase.118" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.119" = type { %"class.blink::MemberBase.120" }
%"class.blink::MemberBase.120" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.121 }
%class.scoped_refptr.121 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.122" = type { %"class.WTF::VectorBuffer.123" }
%"class.WTF::VectorBuffer.123" = type { %"class.WTF::VectorBufferBase.124" }
%"class.WTF::VectorBufferBase.124" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.125 }
%class.scoped_refptr.125 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.126", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.126" = type { %"class.base::RefCounted.127" }
%"class.base::RefCounted.127" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.130" }
%"class.blink::HeapHashMap.130" = type { %"class.WTF::HashMap.133" }
%"class.WTF::HashMap.133" = type { %"class.WTF::HashTable.134" }
%"class.WTF::HashTable.134" = type <{ %"struct.WTF::KeyValuePair.136"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.136" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.137" }
%"class.blink::MemberBase.137" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.138", i32, [4 x i8], %"class.std::__1::unique_ptr.274", %"class.std::__1::unique_ptr.274", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.284", %"class.std::__1::unique_ptr.290", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.302", %"class.std::__1::unique_ptr.308", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.315", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.141", %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.153", %"class.std::__1::unique_ptr.159", %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.171", %"class.std::__1::unique_ptr.182", %"class.std::__1::unique_ptr.189", %"class.std::__1::unique_ptr.189", %"class.std::__1::unique_ptr.196", %"class.std::__1::unique_ptr.203", %"class.std::__1::unique_ptr.210", %"class.std::__1::unique_ptr.210", %"class.std::__1::unique_ptr.217", %"class.std::__1::unique_ptr.224", %"class.std::__1::unique_ptr.231", %"class.std::__1::unique_ptr.254", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.174" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.174" = type { %"struct.std::__1::__atomic_base.175" }
%"struct.std::__1::__atomic_base.175" = type { %"struct.std::__1::__atomic_base.176" }
%"struct.std::__1::__atomic_base.176" = type { %"struct.std::__1::__cxx_atomic_impl.177" }
%"struct.std::__1::__cxx_atomic_impl.177" = type { %"struct.std::__1::__cxx_atomic_base_impl.178" }
%"struct.std::__1::__cxx_atomic_base_impl.178" = type { i64 }
%"class.std::__1::unique_ptr.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.blink::Worklist.185"* }
%"class.blink::Worklist.185" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.174" }
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.blink::Worklist.192"* }
%"class.blink::Worklist.192" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.174" }
%"class.std::__1::unique_ptr.196" = type { %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"class.blink::Worklist.199"* }
%"class.blink::Worklist.199" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.174" }
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.blink::Worklist.206"* }
%"class.blink::Worklist.206" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.174" }
%"class.std::__1::unique_ptr.210" = type { %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"class.blink::Worklist.213"* }
%"class.blink::Worklist.213" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.174" }
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.blink::Worklist.220"* }
%"class.blink::Worklist.220" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.174" }
%"class.std::__1::unique_ptr.224" = type { %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"class.blink::Worklist.227"* }
%"class.blink::Worklist.227" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.174" }
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.234", %"class.std::__1::__compressed_pair.241", %"class.std::__1::__compressed_pair.246", %"class.std::__1::__compressed_pair.248", [4 x i8] }>
%"class.std::__1::unique_ptr.234" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236", %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { i64 }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { float }
%"class.std::__1::unique_ptr.254" = type { %"class.std::__1::__compressed_pair.255" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.257", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.257" = type { %"class.std::__1::__compressed_pair.258" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"struct.std::__1::__compressed_pair_elem.259" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.266" }
%"class.WTF::Vector.266" = type { %"class.WTF::VectorBuffer.267" }
%"class.WTF::VectorBuffer.267" = type { %"class.WTF::VectorBufferBase.268" }
%"class.WTF::VectorBufferBase.268" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.274" = type { %"class.std::__1::__compressed_pair.275" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"struct.std::__1::__compressed_pair_elem.276" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.282" }
%"class.WTF::VectorBuffer.282" = type { %"class.WTF::VectorBufferBase.283" }
%"class.WTF::VectorBufferBase.283" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.284" = type { %"class.std::__1::__compressed_pair.285" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.286" }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.290" = type { %"class.std::__1::__compressed_pair.291" }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.296" }
%"class.std::__1::unique_ptr.296" = type { %"class.std::__1::__compressed_pair.297" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.298" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.185"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.192"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.199"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.206"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.213"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.841" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.841" = type { %"struct.std::__1::__compressed_pair_elem.842" }
%"struct.std::__1::__compressed_pair_elem.842" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.302" = type { %"class.std::__1::__compressed_pair.303" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.304" }
%"struct.std::__1::__compressed_pair_elem.304" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.308" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.314 }
%class.scoped_refptr.314 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.315" = type { %"struct.std::__1::__atomic_base.316" }
%"struct.std::__1::__atomic_base.316" = type { %"struct.std::__1::__cxx_atomic_impl.317" }
%"struct.std::__1::__cxx_atomic_impl.317" = type { %"struct.std::__1::__cxx_atomic_base_impl.318" }
%"struct.std::__1::__cxx_atomic_base_impl.318" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::Member.331" = type { %"class.blink::MemberBase.332" }
%"class.blink::MemberBase.332" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.333" }
%"class.blink::HeapHashMap.333" = type { %"class.WTF::HashMap.336" }
%"class.WTF::HashMap.336" = type { %"class.WTF::HashTable.337" }
%"class.WTF::HashTable.337" = type <{ %"struct.WTF::KeyValuePair.339"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.339" = type opaque
%"class.blink::Member.340" = type { %"class.blink::MemberBase.341" }
%"class.blink::MemberBase.341" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.344" }
%"class.WTF::HashTable.344" = type <{ %"class.blink::WeakMember.346"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.346" = type opaque
%"class.blink::HeapHashSet.347" = type { %"class.WTF::HashSet.350" }
%"class.WTF::HashSet.350" = type { %"class.WTF::HashTable.351" }
%"class.WTF::HashTable.351" = type <{ %"class.blink::WeakMember.353"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.353" = type opaque
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.356" = type { %"class.blink::MemberBase.357" }
%"class.blink::MemberBase.357" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.358" = type { %"class.blink::MemberBase.359" }
%"class.blink::MemberBase.359" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.360" = type { %"class.blink::MemberBase.361" }
%"class.blink::MemberBase.361" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.362" = type { %"class.blink::MemberBase.363" }
%"class.blink::MemberBase.363" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.364" = type { %"class.WTF::HashMap.367" }
%"class.WTF::HashMap.367" = type { %"class.WTF::HashTable.368" }
%"class.WTF::HashTable.368" = type <{ %"struct.WTF::KeyValuePair.370"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.370" = type opaque
%"class.WTF::Vector.371" = type { %"class.WTF::VectorBuffer.372" }
%"class.WTF::VectorBuffer.372" = type { %"class.WTF::VectorBufferBase.373" }
%"class.WTF::VectorBufferBase.373" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.380" = type { %"class.blink::MemberBase.381" }
%"class.blink::MemberBase.381" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.382" = type { %"class.WTF::Vector.385" }
%"class.WTF::Vector.385" = type { %"class.WTF::VectorBuffer.386" }
%"class.WTF::VectorBuffer.386" = type { %"class.WTF::VectorBufferBase.387" }
%"class.WTF::VectorBufferBase.387" = type { %"class.blink::Member.388"*, i32, i32 }
%"class.blink::Member.388" = type opaque
%"class.std::__1::unique_ptr.390" = type { %"class.std::__1::__compressed_pair.391" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.392" }
%"struct.std::__1::__compressed_pair_elem.392" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.396" = type { %"class.WTF::HashSet.399" }
%"class.WTF::HashSet.399" = type { %"class.WTF::HashTable.400" }
%"class.WTF::HashTable.400" = type <{ %"class.blink::WeakMember.402"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.402" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.403", i32, [4 x i8] }>
%"class.WTF::Vector.403" = type { %"class.WTF::VectorBuffer.404" }
%"class.WTF::VectorBuffer.404" = type { %"class.WTF::VectorBufferBase.405" }
%"class.WTF::VectorBufferBase.405" = type { %"struct.std::__1::pair.406"*, i32, i32 }
%"struct.std::__1::pair.406" = type opaque
%"class.blink::Member.409" = type { %"class.blink::MemberBase.410" }
%"class.blink::MemberBase.410" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.411" = type { %"class.WTF::VectorBuffer.412" }
%"class.WTF::VectorBuffer.412" = type { %"class.WTF::VectorBufferBase.413" }
%"class.WTF::VectorBufferBase.413" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.416" = type { %"class.std::__1::__compressed_pair.417" }
%"class.std::__1::__compressed_pair.417" = type { %"struct.std::__1::__compressed_pair_elem.418" }
%"struct.std::__1::__compressed_pair_elem.418" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.422" = type { %"class.WTF::Vector.425" }
%"class.WTF::Vector.425" = type { %"class.WTF::VectorBuffer.426" }
%"class.WTF::VectorBuffer.426" = type { %"class.WTF::VectorBufferBase.427" }
%"class.WTF::VectorBufferBase.427" = type { %"class.blink::Member.428"*, i32, i32 }
%"class.blink::Member.428" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.34" }
%"class.blink::Member.430" = type { %"class.blink::MemberBase.431" }
%"class.blink::MemberBase.431" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.432" = type { %"class.blink::MemberBase.433" }
%"class.blink::MemberBase.433" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.434" = type { %"class.blink::MemberBase.435" }
%"class.blink::MemberBase.435" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.436" = type { %"class.blink::MemberBase.437" }
%"class.blink::MemberBase.437" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.440" = type { %"class.WTF::HashTable.441" }
%"class.WTF::HashTable.441" = type <{ %"struct.WTF::KeyValuePair.444"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.444" = type opaque
%"class.blink::Member.445" = type { %"class.blink::MemberBase.446" }
%"class.blink::MemberBase.446" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.447" = type { %"class.blink::MemberBase.448" }
%"class.blink::MemberBase.448" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.449" = type { %"class.blink::MemberBase.450" }
%"class.blink::MemberBase.450" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.451" = type { %"class.blink::MemberBase.452" }
%"class.blink::MemberBase.452" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.330", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.321, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.321 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.322" }>
%"class.base::RefCountedThreadSafe.322" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.323 }
%class.scoped_refptr.323 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.324", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.324" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.325" }
%"struct.std::__1::atomic.325" = type { %"struct.std::__1::__atomic_base.326" }
%"struct.std::__1::__atomic_base.326" = type { %"struct.std::__1::__atomic_base.327" }
%"struct.std::__1::__atomic_base.327" = type { %"struct.std::__1::__cxx_atomic_impl.328" }
%"struct.std::__1::__cxx_atomic_impl.328" = type { %"struct.std::__1::__cxx_atomic_base_impl.329" }
%"struct.std::__1::__cxx_atomic_base_impl.329" = type { i8 }
%"class.blink::WeakMember.330" = type { %"class.blink::MemberBase.35" }
%"class.blink::HeapHashSet.453" = type { %"class.WTF::HashSet.456" }
%"class.WTF::HashSet.456" = type { %"class.WTF::HashTable.457" }
%"class.WTF::HashTable.457" = type <{ %"class.blink::Member.459"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.459" = type opaque
%"class.blink::Member.460" = type { %"class.blink::MemberBase.461" }
%"class.blink::MemberBase.461" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.462" = type { %"class.blink::MemberBase.463" }
%"class.blink::MemberBase.463" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.464" = type { %"class.blink::MemberBase.465" }
%"class.blink::MemberBase.465" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.466" = type { %"class.blink::MemberBase.467" }
%"class.blink::MemberBase.467" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.468" = type { %"class.blink::MemberBase.469" }
%"class.blink::MemberBase.469" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.470" = type { %"class.std::__1::__compressed_pair.471" }
%"class.std::__1::__compressed_pair.471" = type { %"struct.std::__1::__compressed_pair_elem.472" }
%"struct.std::__1::__compressed_pair_elem.472" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.476" = type { %"class.std::__1::__compressed_pair.477" }
%"class.std::__1::__compressed_pair.477" = type { %"struct.std::__1::__compressed_pair_elem.478" }
%"struct.std::__1::__compressed_pair_elem.478" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.482" = type { %"class.blink::MemberBase.483" }
%"class.blink::MemberBase.483" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.484" = type { %"class.blink::MemberBase.485" }
%"class.blink::MemberBase.485" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.486" = type { %"class.blink::MemberBase.487" }
%"class.blink::MemberBase.487" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.488" = type { %"class.blink::MemberBase.489" }
%"class.blink::MemberBase.489" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.490" = type { %"class.WTF::VectorBuffer.491" }
%"class.WTF::VectorBuffer.491" = type { %"class.WTF::VectorBufferBase.492" }
%"class.WTF::VectorBufferBase.492" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.495" = type { %"class.WTF::HashMap.498" }
%"class.WTF::HashMap.498" = type { %"class.WTF::HashTable.499" }
%"class.WTF::HashTable.499" = type <{ %"struct.WTF::KeyValuePair.501"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.501" = type opaque
%"class.blink::Member.502" = type { %"class.blink::MemberBase.503" }
%"class.blink::MemberBase.503" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.504" = type { %"class.std::__1::__compressed_pair.505" }
%"class.std::__1::__compressed_pair.505" = type { %"struct.std::__1::__compressed_pair_elem.506" }
%"struct.std::__1::__compressed_pair_elem.506" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.510" = type { %"class.blink::MemberBase.511" }
%"class.blink::MemberBase.511" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.512" = type { %"class.blink::MemberBase.513" }
%"class.blink::MemberBase.513" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.514" = type { %"class.WTF::HashMap.517" }
%"class.WTF::HashMap.517" = type { %"class.WTF::HashTable.518" }
%"class.WTF::HashTable.518" = type <{ %"struct.WTF::KeyValuePair.520"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.520" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.521" }
%"class.blink::HeapHashSet.521" = type { %"class.WTF::HashSet.524" }
%"class.WTF::HashSet.524" = type { %"class.WTF::HashTable.525" }
%"class.WTF::HashTable.525" = type <{ %"class.blink::WeakMember.527"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.527" = type opaque
%"class.blink::Member.528" = type { %"class.blink::MemberBase.529" }
%"class.blink::MemberBase.529" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.530" = type { %"class.blink::MemberBase.531" }
%"class.blink::MemberBase.531" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.34", %"class.blink::HeapHashSet.832", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.839", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.832" = type { %"class.WTF::HashSet.835" }
%"class.WTF::HashSet.835" = type { %"class.WTF::HashTable.836" }
%"class.WTF::HashTable.836" = type <{ %"class.blink::Member.838"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.838" = type opaque
%"class.blink::HeapTaskRunnerTimer.839" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.840", { i64, i64 } }
%"class.blink::WeakMember.840" = type { %"class.blink::MemberBase.531" }
%"class.blink::WeakMember.532" = type { %"class.blink::MemberBase.11" }
%"class.blink::Member.533" = type { %"class.blink::MemberBase.534" }
%"class.blink::MemberBase.534" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type opaque
%"class.blink::CSSToLengthConversionData" = type <{ %"class.blink::ComputedStyle"*, %"class.blink::CSSToLengthConversionData::FontSizes", %"class.blink::CSSToLengthConversionData::ViewportSize", float, [4 x i8] }>
%"class.blink::CSSToLengthConversionData::FontSizes" = type <{ float, float, %"class.blink::Font"*, float, [4 x i8] }>
%"class.blink::Font" = type opaque
%"class.blink::CSSToLengthConversionData::ViewportSize" = type { %"class.blink::DoubleSize" }
%"class.blink::DoubleSize" = type { double, double }
%class.scoped_refptr.31 = type { %"class.blink::ComputedStyle"* }
%"class.blink::CSSAnimationUpdate" = type { %"class.blink::HeapVector.536", %"class.WTF::Vector.694", %"class.blink::HeapHashSet.699", %"class.WTF::Vector.694", %"class.blink::HeapVector.706", %"class.blink::HeapVector.713", %"class.blink::HeapHashMap.720", %"class.WTF::HashSet.727", %"class.WTF::HashSet.727", %"class.blink::HeapHashMap.731", %"class.blink::HeapHashMap.731", %"class.blink::HeapHashMap.731", %"class.blink::HeapHashMap.731" }
%"class.blink::HeapVector.536" = type { %"class.WTF::Vector.539" }
%"class.WTF::Vector.539" = type { %"class.WTF::VectorBuffer.540" }
%"class.WTF::VectorBuffer.540" = type { %"class.WTF::VectorBufferBase.541" }
%"class.WTF::VectorBufferBase.541" = type { %"class.blink::NewCSSAnimation"*, i32, i32 }
%"class.blink::NewCSSAnimation" = type { %"class.WTF::AtomicString", i64, i64, %"class.blink::Member.542", %"struct.blink::Timing", %"class.blink::Member.616", i32, %"class.blink::Member.628", %"class.WTF::Vector.688" }
%"class.blink::Member.542" = type { %"class.blink::MemberBase.543" }
%"class.blink::MemberBase.543" = type { %"class.blink::InertEffect"* }
%"class.blink::InertEffect" = type { %"class.blink::AnimationEffect", %"class.blink::Member.563", i8, %"class.absl::optional", %"class.absl::optional.611" }
%"class.blink::AnimationEffect" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.544", %"struct.blink::Timing", %"class.blink::Member.549", %"struct.blink::Timing::CalculatedTiming", i8, %"class.absl::optional", %"class.absl::optional.558", %"class.blink::AnimationTimeDelta" }
%"class.blink::Member.544" = type { %"class.blink::MemberBase.545" }
%"class.blink::MemberBase.545" = type { %"class.blink::AnimationEffectOwner"* }
%"class.blink::AnimationEffectOwner" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.549" = type { %"class.blink::MemberBase.550" }
%"class.blink::MemberBase.550" = type { %"class.blink::AnimationEffect::EventDelegate"* }
%"class.blink::AnimationEffect::EventDelegate" = type { i32 (...)** }
%"struct.blink::Timing::CalculatedTiming" = type { i32, %"class.absl::optional.553", %"class.absl::optional.553", i8, i8, i8, %"class.absl::optional", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta" }
%"class.absl::optional.553" = type { %"class.absl::optional_internal::optional_data.554" }
%"class.absl::optional_internal::optional_data.554" = type { %"class.absl::optional_internal::optional_data_base.555" }
%"class.absl::optional_internal::optional_data_base.555" = type { %"class.absl::optional_internal::optional_data_dtor_base.556" }
%"class.absl::optional_internal::optional_data_dtor_base.556" = type { i8, %union.anon.557 }
%union.anon.557 = type { double }
%"class.absl::optional.558" = type { %"class.absl::optional_internal::optional_data.559" }
%"class.absl::optional_internal::optional_data.559" = type { %"class.absl::optional_internal::optional_data_base.560" }
%"class.absl::optional_internal::optional_data_base.560" = type { %"class.absl::optional_internal::optional_data_dtor_base.561" }
%"class.absl::optional_internal::optional_data_dtor_base.561" = type { i8, %union.anon.562 }
%union.anon.562 = type { i32 }
%"class.blink::AnimationTimeDelta" = type { double }
%"class.blink::Member.563" = type { %"class.blink::MemberBase.564" }
%"class.blink::MemberBase.564" = type { %"class.blink::KeyframeEffectModelBase"* }
%"class.blink::KeyframeEffectModelBase" = type <{ %"class.blink::EffectModel", %"class.blink::HeapVector.567", %"class.blink::Member.575", %"class.blink::Member.599", i32, [4 x i8], double, %"class.blink::AnimationTimeDelta", i32, [4 x i8], %class.scoped_refptr.547, i8, i8, i8, [5 x i8] }>
%"class.blink::EffectModel" = type { i32 (...)** }
%"class.blink::HeapVector.567" = type { %"class.WTF::Vector.570" }
%"class.WTF::Vector.570" = type { %"class.WTF::VectorBuffer.571" }
%"class.WTF::VectorBuffer.571" = type { %"class.WTF::VectorBufferBase.572" }
%"class.WTF::VectorBufferBase.572" = type { %"class.blink::Member.573"*, i32, i32 }
%"class.blink::Member.573" = type { %"class.blink::MemberBase.925" }
%"class.blink::MemberBase.925" = type { %"class.blink::Keyframe"* }
%"class.blink::Keyframe" = type { i32 (...)**, %"class.absl::optional.553", %"class.absl::optional.928", %class.scoped_refptr.547 }
%"class.absl::optional.928" = type { %"class.absl::optional_internal::optional_data.929" }
%"class.absl::optional_internal::optional_data.929" = type { %"class.absl::optional_internal::optional_data_base.930" }
%"class.absl::optional_internal::optional_data_base.930" = type { %"class.absl::optional_internal::optional_data_dtor_base.931" }
%"class.absl::optional_internal::optional_data_dtor_base.931" = type { i8, %union.anon.932 }
%union.anon.932 = type { i32 }
%"class.blink::Member.575" = type { %"class.blink::MemberBase.576" }
%"class.blink::MemberBase.576" = type { %"class.blink::HeapHashMap.577"* }
%"class.blink::HeapHashMap.577" = type { %"class.WTF::HashMap.580" }
%"class.WTF::HashMap.580" = type { %"class.WTF::HashTable.581" }
%"class.WTF::HashTable.581" = type <{ %"struct.WTF::KeyValuePair.583"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.583" = type { %"class.blink::PropertyHandle", %"class.blink::Member.584" }
%"class.blink::Member.584" = type { %"class.blink::MemberBase.585" }
%"class.blink::MemberBase.585" = type { %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"* }
%"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup" = type { %"class.blink::HeapVector.588" }
%"class.blink::HeapVector.588" = type { %"class.WTF::Vector.591" }
%"class.WTF::Vector.591" = type { %"class.WTF::VectorBuffer.592" }
%"class.WTF::VectorBuffer.592" = type { %"class.WTF::VectorBufferBase.593" }
%"class.WTF::VectorBufferBase.593" = type { %"class.blink::Member.594"*, i32, i32 }
%"class.blink::Member.594" = type { %"class.blink::MemberBase.595" }
%"class.blink::MemberBase.595" = type { %"class.blink::Keyframe::PropertySpecificKeyframe"* }
%"class.blink::Keyframe::PropertySpecificKeyframe" = type <{ i32 (...)**, double, %class.scoped_refptr.547, i32, [4 x i8] }>
%"class.blink::Member.599" = type { %"class.blink::MemberBase.600" }
%"class.blink::MemberBase.600" = type { %"class.blink::InterpolationEffect"* }
%"class.blink::InterpolationEffect" = type { i8, %"class.blink::HeapVector.603" }
%"class.blink::HeapVector.603" = type { %"class.WTF::Vector.606" }
%"class.WTF::Vector.606" = type { %"class.WTF::VectorBuffer.607" }
%"class.WTF::VectorBuffer.607" = type { %"class.WTF::VectorBufferBase.608" }
%"class.WTF::VectorBufferBase.608" = type { %"class.blink::Member.609"*, i32, i32 }
%"class.blink::Member.609" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::InterpolationEffect::InterpolationRecord"* }
%"class.blink::InterpolationEffect::InterpolationRecord" = type { %"class.blink::Member.923", %class.scoped_refptr.547, double, double, double, double }
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::Interpolation"* }
%class.scoped_refptr.547 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.548" }
%"class.base::RefCountedThreadSafe.548" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.546 }
%union.anon.546 = type { %"class.blink::AnimationTimeDelta" }
%"class.absl::optional.611" = type { %"class.absl::optional_internal::optional_data.612" }
%"class.absl::optional_internal::optional_data.612" = type { %"class.absl::optional_internal::optional_data_base.613" }
%"class.absl::optional_internal::optional_data_base.613" = type { %"class.absl::optional_internal::optional_data_dtor_base.614" }
%"class.absl::optional_internal::optional_data_dtor_base.614" = type { i8, %union.anon.615 }
%union.anon.615 = type { i32 }
%"struct.blink::Timing" = type <{ %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", i32, [4 x i8], double, double, %"class.absl::optional", i32, [4 x i8], %class.scoped_refptr.547, i16, [6 x i8] }>
%"class.blink::Member.616" = type { %"class.blink::MemberBase.617" }
%"class.blink::MemberBase.617" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.620", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::HeapVector.620" = type { %"class.WTF::Vector.623" }
%"class.WTF::Vector.623" = type { %"class.WTF::VectorBuffer.624" }
%"class.WTF::VectorBuffer.624" = type { %"class.WTF::VectorBufferBase.625" }
%"class.WTF::VectorBufferBase.625" = type { %"class.blink::Member.626"*, i32, i32 }
%"class.blink::Member.626" = type opaque
%"class.blink::Member.628" = type { %"class.blink::MemberBase.629" }
%"class.blink::MemberBase.629" = type { %"class.blink::AnimationTimeline"* }
%"class.blink::AnimationTimeline" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.34", i32, [4 x i8], %"class.blink::HeapHashSet.630", %"class.blink::HeapHashSet.638", %"class.std::__1::unique_ptr.645", %"class.absl::optional.678" }
%"class.blink::HeapHashSet.630" = type { %"class.WTF::HashSet.633" }
%"class.WTF::HashSet.633" = type { %"class.WTF::HashTable.634" }
%"class.WTF::HashTable.634" = type <{ %"class.blink::Member.636"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.636" = type { %"class.blink::MemberBase.637" }
%"class.blink::MemberBase.637" = type { %"class.blink::Animation"* }
%"class.blink::Animation" = type <{ %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleObserver.base", [4 x i8], %"class.blink::CompositorAnimationDelegate", %"class.blink::CompositorAnimationClient", %"class.blink::AnimationEffectOwner", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.WTF::String", i32, [4 x i8], double, %"class.absl::optional.553", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.611", %"class.absl::optional", i8, [3 x i8], i32, %"class.blink::Member.807", %"class.blink::Member.807", %"class.blink::Member.809", %"class.blink::Member.34", %"class.blink::Member.628", i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], %"class.blink::Member.811", %"class.blink::Member.811", %"class.blink::Member.811", %"class.std::__1::unique_ptr.813", i8, [3 x i8], i32, %"class.blink::Member.819", i8, [7 x i8], %"class.base::TimeTicks", i8, i8, i8, [5 x i8] }>
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.790" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.778" }
%"class.blink::HeapVector.778" = type { %"class.WTF::Vector.781" }
%"class.WTF::Vector.781" = type { %"class.WTF::VectorBuffer.782" }
%"class.WTF::VectorBuffer.782" = type { %"class.WTF::VectorBufferBase.783", [32 x i8] }
%"class.WTF::VectorBufferBase.783" = type { %"struct.std::__1::pair.784"*, i32, i32 }
%"struct.std::__1::pair.784" = type { %"class.WTF::AtomicString", %"class.blink::Member.785" }
%"class.blink::Member.785" = type { %"class.blink::MemberBase.786" }
%"class.blink::MemberBase.786" = type { %"class.blink::HeapVector.787"* }
%"class.blink::HeapVector.787" = type opaque
%"class.std::__1::unique_ptr.790" = type { %"class.std::__1::__compressed_pair.791" }
%"class.std::__1::__compressed_pair.791" = type { %"struct.std::__1::__compressed_pair_elem.792" }
%"struct.std::__1::__compressed_pair_elem.792" = type { %"class.WTF::Vector.793"* }
%"class.WTF::Vector.793" = type opaque
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.797" }
%"class.blink::WeakMember.797" = type { %"class.blink::MemberBase.798" }
%"class.blink::MemberBase.798" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::CompositorAnimationDelegate" = type { i32 (...)** }
%"class.blink::CompositorAnimationClient" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.807" = type { %"class.blink::MemberBase.808" }
%"class.blink::MemberBase.808" = type { %"class.blink::ScriptPromiseProperty"* }
%"class.blink::ScriptPromiseProperty" = type opaque
%"class.blink::Member.809" = type { %"class.blink::MemberBase.810" }
%"class.blink::MemberBase.810" = type { %"class.blink::AnimationEffect"* }
%"class.blink::Member.811" = type { %"class.blink::MemberBase.812" }
%"class.blink::MemberBase.812" = type { %"class.blink::Event"* }
%"class.blink::Event" = type opaque
%"class.std::__1::unique_ptr.813" = type { %"class.std::__1::__compressed_pair.814" }
%"class.std::__1::__compressed_pair.814" = type { %"struct.std::__1::__compressed_pair_elem.815" }
%"struct.std::__1::__compressed_pair_elem.815" = type { %"class.blink::Animation::CompositorState"* }
%"class.blink::Animation::CompositorState" = type { %"class.absl::optional.553", %"class.absl::optional.553", double, i8, i32 }
%"class.blink::Member.819" = type { %"class.blink::MemberBase.820" }
%"class.blink::MemberBase.820" = type { %"class.blink::Animation::CompositorAnimationHolder"* }
%"class.blink::Animation::CompositorAnimationHolder" = type { %"class.blink::ThreadState::PrefinalizerRegistration.823", %"class.std::__1::unique_ptr.824", %"class.blink::Member.636" }
%"class.blink::ThreadState::PrefinalizerRegistration.823" = type { i8 }
%"class.std::__1::unique_ptr.824" = type { %"class.std::__1::__compressed_pair.825" }
%"class.std::__1::__compressed_pair.825" = type { %"struct.std::__1::__compressed_pair_elem.826" }
%"struct.std::__1::__compressed_pair_elem.826" = type { %"class.blink::CompositorAnimation"* }
%"class.blink::CompositorAnimation" = type opaque
%"class.blink::HeapHashSet.638" = type { %"class.WTF::HashSet.641" }
%"class.WTF::HashSet.641" = type { %"class.WTF::HashTable.642" }
%"class.WTF::HashTable.642" = type <{ %"class.blink::WeakMember.644"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.644" = type opaque
%"class.std::__1::unique_ptr.645" = type { %"class.std::__1::__compressed_pair.646" }
%"class.std::__1::__compressed_pair.646" = type { %"struct.std::__1::__compressed_pair_elem.647" }
%"struct.std::__1::__compressed_pair_elem.647" = type { %"class.blink::CompositorAnimationTimeline"* }
%"class.blink::CompositorAnimationTimeline" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.cc::AnimationTimeline"* }
%"class.cc::AnimationTimeline" = type <{ i32 (...)**, %"class.base::RefCounted.649", [4 x i8], %"class.std::__1::unordered_map", i32, [4 x i8], %"class.cc::AnimationHost"*, i8, i8, [6 x i8] }>
%"class.base::RefCounted.649" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.650" }
%"class.std::__1::__hash_table.650" = type <{ %"class.std::__1::unique_ptr.651", %"class.std::__1::__compressed_pair.661", %"class.std::__1::__compressed_pair.666", %"class.std::__1::__compressed_pair.670", [4 x i8] }>
%"class.std::__1::unique_ptr.651" = type { %"class.std::__1::__compressed_pair.652" }
%"class.std::__1::__compressed_pair.652" = type { %"struct.std::__1::__compressed_pair_elem.653", %"struct.std::__1::__compressed_pair_elem.655" }
%"struct.std::__1::__compressed_pair_elem.653" = type { %"struct.std::__1::__hash_node_base.654"** }
%"struct.std::__1::__hash_node_base.654" = type { %"struct.std::__1::__hash_node_base.654"* }
%"struct.std::__1::__compressed_pair_elem.655" = type { %"class.std::__1::__bucket_list_deallocator.656" }
%"class.std::__1::__bucket_list_deallocator.656" = type { %"class.std::__1::__compressed_pair.657" }
%"class.std::__1::__compressed_pair.657" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"struct.std::__1::__hash_node_base.654" }
%"class.std::__1::__compressed_pair.666" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"class.std::__1::__compressed_pair.670" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"class.cc::AnimationHost" = type opaque
%"class.absl::optional.678" = type { %"class.absl::optional_internal::optional_data.679" }
%"class.absl::optional_internal::optional_data.679" = type { %"class.absl::optional_internal::optional_data_base.680" }
%"class.absl::optional_internal::optional_data_base.680" = type { %"class.absl::optional_internal::optional_data_dtor_base.681" }
%"class.absl::optional_internal::optional_data_dtor_base.681" = type { i8, %union.anon.682 }
%union.anon.682 = type { %"struct.blink::AnimationTimeline::PhaseAndTime" }
%"struct.blink::AnimationTimeline::PhaseAndTime" = type { i32, %"class.absl::optional.683" }
%"class.absl::optional.683" = type { %"class.absl::optional_internal::optional_data.684" }
%"class.absl::optional_internal::optional_data.684" = type { %"class.absl::optional_internal::optional_data_base.685" }
%"class.absl::optional_internal::optional_data_base.685" = type { %"class.absl::optional_internal::optional_data_dtor_base.686" }
%"class.absl::optional_internal::optional_data_dtor_base.686" = type { i8, %union.anon.687 }
%union.anon.687 = type { %"class.base::TimeDelta" }
%"class.WTF::Vector.688" = type { %"class.WTF::VectorBuffer.689" }
%"class.WTF::VectorBuffer.689" = type { %"class.WTF::VectorBufferBase.690" }
%"class.WTF::VectorBufferBase.690" = type { i32*, i32, i32 }
%"class.blink::HeapHashSet.699" = type { %"class.WTF::HashSet.702" }
%"class.WTF::HashSet.702" = type { %"class.WTF::HashTable.703" }
%"class.WTF::HashTable.703" = type <{ %"class.blink::Member.705"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.705" = type { %"class.blink::MemberBase.933" }
%"class.blink::MemberBase.933" = type { %"class.blink::Animation"* }
%"class.WTF::Vector.694" = type { %"class.WTF::VectorBuffer.695" }
%"class.WTF::VectorBuffer.695" = type { %"class.WTF::VectorBufferBase.696" }
%"class.WTF::VectorBufferBase.696" = type { i32*, i32, i32 }
%"class.blink::HeapVector.706" = type { %"class.WTF::Vector.709" }
%"class.WTF::Vector.709" = type { %"class.WTF::VectorBuffer.710" }
%"class.WTF::VectorBuffer.710" = type { %"class.WTF::VectorBufferBase.711" }
%"class.WTF::VectorBufferBase.711" = type { %"class.blink::UpdatedCSSAnimation"*, i32, i32 }
%"class.blink::UpdatedCSSAnimation" = type { i32, %"class.blink::Member.636", %"class.blink::Member.542", %"struct.blink::Timing", %"class.blink::Member.616", i32, %"class.blink::Member.628", %"class.WTF::Vector.688" }
%"class.blink::HeapVector.713" = type { %"class.WTF::Vector.716" }
%"class.WTF::Vector.716" = type { %"class.WTF::VectorBuffer.717" }
%"class.WTF::VectorBuffer.717" = type { %"class.WTF::VectorBufferBase.718" }
%"class.WTF::VectorBufferBase.718" = type { %"class.blink::Member.636"*, i32, i32 }
%"class.blink::HeapHashMap.720" = type { %"class.WTF::HashMap.723" }
%"class.WTF::HashMap.723" = type { %"class.WTF::HashTable.724" }
%"class.WTF::HashTable.724" = type <{ %"struct.WTF::KeyValuePair.726"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.726" = type { %"class.blink::PropertyHandle", %"class.blink::Member.944" }
%"class.blink::Member.944" = type { %"class.blink::MemberBase.945" }
%"class.blink::MemberBase.945" = type { %"struct.blink::CSSAnimationUpdate::NewTransition"* }
%"struct.blink::CSSAnimationUpdate::NewTransition" = type { i32 (...)**, %"class.blink::PropertyHandle", %class.scoped_refptr.31, %class.scoped_refptr.31, %class.scoped_refptr.31, double, %"class.blink::Member.542" }
%"class.WTF::HashSet.727" = type { %"class.WTF::HashTable.728" }
%"class.WTF::HashTable.728" = type <{ %"class.blink::PropertyHandle"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.731" = type { %"class.WTF::HashMap.734" }
%"class.WTF::HashMap.734" = type { %"class.WTF::HashTable.735" }
%"class.WTF::HashTable.735" = type <{ %"struct.WTF::KeyValuePair.737"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.737" = type { %"class.blink::PropertyHandle", %"class.blink::Member.934" }
%"class.blink::Member.934" = type { %"class.blink::MemberBase.935" }
%"class.blink::MemberBase.935" = type { %"class.blink::HeapVector.936"* }
%"class.blink::HeapVector.936" = type { %"class.WTF::Vector.939" }
%"class.WTF::Vector.939" = type { %"class.WTF::VectorBuffer.940" }
%"class.WTF::VectorBuffer.940" = type { %"class.WTF::VectorBufferBase.941", [8 x i8] }
%"class.WTF::VectorBufferBase.941" = type { %"class.blink::Member.923"*, i32, i32 }
%"class.blink::FontBuilder" = type <{ %"class.blink::Document"*, %"class.blink::TreeScope"*, %"class.blink::FontDescription", i32, [4 x i8] }>
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.739, %class.scoped_refptr.747, %class.scoped_refptr.757, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.769 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.738 }
%class.scoped_refptr.738 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.774", [4 x i8] }>
%"class.WTF::RefCounted.774" = type { %"class.base::RefCounted.775" }
%"class.base::RefCounted.775" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.739 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.745", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.740" }
%"class.WTF::Vector.740" = type { %"class.WTF::VectorBuffer.741" }
%"class.WTF::VectorBuffer.741" = type { %"class.WTF::VectorBufferBase.742" }
%"class.WTF::VectorBufferBase.742" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.745" = type { %"class.base::RefCounted.746" }
%"class.base::RefCounted.746" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.747 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.748", %"class.WTF::RefCounted.755", [4 x i8] }>
%"class.blink::FontSettings.748" = type { %"class.WTF::Vector.749" }
%"class.WTF::Vector.749" = type { %"class.WTF::VectorBuffer.750" }
%"class.WTF::VectorBuffer.750" = type { %"class.WTF::VectorBufferBase.751" }
%"class.WTF::VectorBufferBase.751" = type { %"class.blink::FontTagValuePair.752"*, i32, i32 }
%"class.blink::FontTagValuePair.752" = type { i32, float }
%"class.WTF::RefCounted.755" = type { %"class.base::RefCounted.756" }
%"class.base::RefCounted.756" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.757 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.758", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.766, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.758" = type { %"class.base::RefCounted.759" }
%"class.base::RefCounted.759" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.760" }
%"class.std::__1::__compressed_pair.760" = type { %"struct.std::__1::__compressed_pair_elem.761" }
%"struct.std::__1::__compressed_pair_elem.761" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.762 }
%union.anon.762 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.766 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.767", [4 x i8] }>
%"class.WTF::RefCounted.767" = type { %"class.base::RefCounted.768" }
%"class.base::RefCounted.768" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.769 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%"class.blink::PseudoElement" = type opaque
%"class.blink::ElementStyleResources" = type { %"class.blink::Element"*, %"class.WTF::HashSet.770", %"class.WTF::HashSet.770", float, %"class.blink::PseudoElement"* }
%"class.WTF::HashSet.770" = type { %"class.WTF::HashTable.771" }
%"class.WTF::HashTable.771" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::CSSInterpolationTypesMap" = type <{ %"class.blink::InterpolationTypesMap", %"class.blink::PropertyRegistry"*, i8, [7 x i8] }>
%"class.blink::InterpolationTypesMap" = type { i32 (...)** }
%"class.blink::CSSInterpolationEnvironment" = type { %"class.blink::InterpolationEnvironment", %"class.blink::StyleResolverState"*, %"class.blink::ComputedStyle"*, %"class.blink::StyleCascade"*, %"class.blink::CascadeResolver"* }
%"class.blink::InterpolationEnvironment" = type { i32 (...)**, %"class.blink::InterpolationTypesMap"* }
%"class.blink::StyleCascade" = type opaque
%"class.blink::CascadeResolver" = type opaque
%"class.blink::TypedInterpolationValue" = type { %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue" }

$_ZN5blink23TransitionInterpolationD2Ev = comdat any

$_ZN5blink23TransitionInterpolationD0Ev = comdat any

$_ZNK5blink13Interpolation28IsInvalidatableInterpolationEv = comdat any

$_ZNK5blink23TransitionInterpolation25IsTransitionInterpolationEv = comdat any

$_ZNK5blink23TransitionInterpolation11GetPropertyEv = comdat any

$_ZNK5blink13Interpolation24DependsOnUnderlyingValueEv = comdat any

$_ZNK5blink23TransitionInterpolation5TraceEPNS_7VisitorE = comdat any

$_ZNK5blink27CSSInterpolationEnvironment5IsCSSEv = comdat any

$_ZNK5blink24InterpolationEnvironment5IsSVGEv = comdat any

$_ZN5blink27CSSInterpolationEnvironmentD0Ev = comdat any

$_ZN5blink24InterpolationEnvironmentD2Ev = comdat any

$_ZN5blink10TraceTraitINS_23CompositorKeyframeValueEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZTVN5blink27CSSInterpolationEnvironmentE = comdat any

@_ZTVN5blink23TransitionInterpolationE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::TransitionInterpolation"*)* @_ZN5blink23TransitionInterpolationD2Ev to i8*), i8* bitcast (void (%"class.blink::TransitionInterpolation"*)* @_ZN5blink23TransitionInterpolationD0Ev to i8*), i8* bitcast (void (%"class.blink::TransitionInterpolation"*, i32, double)* @_ZN5blink23TransitionInterpolation11InterpolateEid to i8*), i8* bitcast (i1 (%"class.blink::Interpolation"*)* @_ZNK5blink13Interpolation28IsInvalidatableInterpolationEv to i8*), i8* bitcast (i1 (%"class.blink::TransitionInterpolation"*)* @_ZNK5blink23TransitionInterpolation25IsTransitionInterpolationEv to i8*), i8* bitcast (%"class.blink::PropertyHandle"* (%"class.blink::TransitionInterpolation"*)* @_ZNK5blink23TransitionInterpolation11GetPropertyEv to i8*), i8* bitcast (i1 (%"class.blink::Interpolation"*)* @_ZNK5blink13Interpolation24DependsOnUnderlyingValueEv to i8*), i8* bitcast (void (%"class.blink::TransitionInterpolation"*, %"class.blink::Visitor"*)* @_ZNK5blink23TransitionInterpolation5TraceEPNS_7VisitorE to i8*)] }, align 8
@_ZTVN5blink27CSSInterpolationEnvironmentE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"class.blink::CSSInterpolationEnvironment"*)* @_ZNK5blink27CSSInterpolationEnvironment5IsCSSEv to i8*), i8* bitcast (i1 (%"class.blink::InterpolationEnvironment"*)* @_ZNK5blink24InterpolationEnvironment5IsSVGEv to i8*), i8* bitcast (void (%"class.blink::InterpolationEnvironment"*)* @_ZN5blink24InterpolationEnvironmentD2Ev to i8*), i8* bitcast (void (%"class.blink::CSSInterpolationEnvironment"*)* @_ZN5blink27CSSInterpolationEnvironmentD0Ev to i8*)] }, comdat, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23TransitionInterpolation11InterpolateEid(%"class.blink::TransitionInterpolation"* nocapture, i32, double) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::TransitionInterpolation", %"class.blink::TransitionInterpolation"* %0, i64 0, i32 8
  %5 = load double, double* %4, align 8
  %6 = fcmp une double %5, %2
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::TransitionInterpolation", %"class.blink::TransitionInterpolation"* %0, i64 0, i32 9
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, %1
  br i1 %10, label %28, label %11

11:                                               ; preds = %7, %3
  %12 = fcmp une double %2, 0.000000e+00
  %13 = fcmp une double %2, 1.000000e+00
  %14 = and i1 %12, %13
  br i1 %14, label %15, label %26

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.blink::TransitionInterpolation", %"class.blink::TransitionInterpolation"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %17 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::TransitionInterpolation", %"class.blink::TransitionInterpolation"* %0, i64 0, i32 5, i32 1, i32 0, i32 0, i32 0
  %19 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::TransitionInterpolation", %"class.blink::TransitionInterpolation"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %21 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %20, align 8
  %22 = bitcast %"class.blink::InterpolableValue"* %17 to void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)***
  %23 = load void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)** %23, i64 2
  %25 = load void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)** %24, align 8
  tail call void %25(%"class.blink::InterpolableValue"* %17, %"class.blink::InterpolableValue"* dereferenceable(8) %19, double %2, %"class.blink::InterpolableValue"* dereferenceable(8) %21) #7
  br label %26

26:                                               ; preds = %15, %11
  %27 = getelementptr inbounds %"class.blink::TransitionInterpolation", %"class.blink::TransitionInterpolation"* %0, i64 0, i32 9
  store i32 %1, i32* %27, align 8
  store double %2, double* %4, align 8
  br label %28

28:                                               ; preds = %7, %26
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(8) %"class.blink::InterpolableValue"* @_ZNK5blink23TransitionInterpolation24CurrentInterpolableValueEv(%"class.blink::TransitionInterpolation"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::TransitionInterpolation", %"class.blink::TransitionInterpolation"* %0, i64 0, i32 8
  %3 = load double, double* %2, align 8
  %4 = fcmp oeq double %3, 0.000000e+00
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::TransitionInterpolation", %"class.blink::TransitionInterpolation"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  br label %13

7:                                                ; preds = %1
  %8 = fcmp oeq double %3, 1.000000e+00
  br i1 %8, label %9, label %11

9:                                                ; preds = %7
  %10 = getelementptr inbounds %"class.blink::TransitionInterpolation", %"class.blink::TransitionInterpolation"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  br label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::TransitionInterpolation", %"class.blink::TransitionInterpolation"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  br label %13

13:                                               ; preds = %11, %9, %5
  %14 = phi %"class.blink::InterpolableValue"** [ %6, %5 ], [ %10, %9 ], [ %12, %11 ]
  %15 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %14, align 8
  ret %"class.blink::InterpolableValue"* %15
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::NonInterpolableValue"* @_ZNK5blink23TransitionInterpolation27CurrentNonInterpolableValueEv(%"class.blink::TransitionInterpolation"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::TransitionInterpolation", %"class.blink::TransitionInterpolation"* %0, i64 0, i32 8
  %3 = load double, double* %2, align 8
  %4 = fcmp oeq double %3, 0.000000e+00
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::TransitionInterpolation", %"class.blink::TransitionInterpolation"* %0, i64 0, i32 3, i32 1, i32 0
  br label %13

7:                                                ; preds = %1
  %8 = fcmp oeq double %3, 1.000000e+00
  br i1 %8, label %9, label %11

9:                                                ; preds = %7
  %10 = getelementptr inbounds %"class.blink::TransitionInterpolation", %"class.blink::TransitionInterpolation"* %0, i64 0, i32 4, i32 1, i32 0
  br label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::TransitionInterpolation", %"class.blink::TransitionInterpolation"* %0, i64 0, i32 5, i32 2, i32 0
  br label %13

13:                                               ; preds = %11, %9, %5
  %14 = phi %"class.blink::NonInterpolableValue"** [ %6, %5 ], [ %10, %9 ], [ %12, %11 ]
  %15 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %14, align 8
  ret %"class.blink::NonInterpolableValue"* %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink23TransitionInterpolation5ApplyERNS_18StyleResolverStateE(%"class.blink::TransitionInterpolation"* nocapture readonly, %"class.blink::StyleResolverState"* dereferenceable(600)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::CSSInterpolationTypesMap", align 8
  %4 = alloca %"class.blink::CSSInterpolationEnvironment", align 8
  %5 = bitcast %"class.blink::CSSInterpolationTypesMap"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %1, i64 0, i32 1
  %7 = bitcast %"class.blink::CSSInterpolationTypesMap"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 24, i1 false)
  %8 = load %"class.blink::Document"*, %"class.blink::Document"** %6, align 8
  %9 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %8, i64 0, i32 144, i32 0, i32 0
  %10 = load %"class.blink::PropertyRegistry"*, %"class.blink::PropertyRegistry"** %9, align 8
  call void @_ZN5blink24CSSInterpolationTypesMapC1EPKNS_16PropertyRegistryERKNS_8DocumentE(%"class.blink::CSSInterpolationTypesMap"* nonnull %3, %"class.blink::PropertyRegistry"* %10, %"class.blink::Document"* dereferenceable(2848) %8) #7
  %11 = bitcast %"class.blink::CSSInterpolationEnvironment"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %11) #7
  %12 = getelementptr inbounds %"class.blink::CSSInterpolationEnvironment", %"class.blink::CSSInterpolationEnvironment"* %4, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.blink::CSSInterpolationEnvironment", %"class.blink::CSSInterpolationEnvironment"* %4, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.blink::CSSInterpolationEnvironment", %"class.blink::CSSInterpolationEnvironment"* %4, i64 0, i32 1
  %15 = getelementptr inbounds %"class.blink::CSSInterpolationEnvironment", %"class.blink::CSSInterpolationEnvironment"* %4, i64 0, i32 2
  %16 = getelementptr inbounds %"class.blink::CSSInterpolationEnvironment", %"class.blink::CSSInterpolationEnvironment"* %4, i64 0, i32 3
  %17 = getelementptr inbounds %"class.blink::CSSInterpolationTypesMap", %"class.blink::CSSInterpolationTypesMap"* %3, i64 0, i32 0
  store %"class.blink::InterpolationTypesMap"* %17, %"class.blink::InterpolationTypesMap"** %13, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink27CSSInterpolationEnvironmentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  store %"class.blink::StyleResolverState"* %1, %"class.blink::StyleResolverState"** %14, align 8
  %18 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %1, i64 0, i32 2, i32 0
  %19 = bitcast %"class.blink::ComputedStyle"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.blink::ComputedStyle"** %15 to i64*
  store i64 %20, i64* %21, align 8
  %22 = getelementptr inbounds %"class.blink::TransitionInterpolation", %"class.blink::TransitionInterpolation"* %0, i64 0, i32 2
  %23 = bitcast %"class.blink::StyleCascade"** %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false)
  %24 = load %"class.blink::InterpolationType"*, %"class.blink::InterpolationType"** %22, align 8
  %25 = getelementptr inbounds %"class.blink::TransitionInterpolation", %"class.blink::TransitionInterpolation"* %0, i64 0, i32 8
  %26 = load double, double* %25, align 8
  %27 = fcmp oeq double %26, 0.000000e+00
  br i1 %27, label %34, label %28

28:                                               ; preds = %2
  %29 = fcmp oeq double %26, 1.000000e+00
  %30 = getelementptr inbounds %"class.blink::TransitionInterpolation", %"class.blink::TransitionInterpolation"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.blink::TransitionInterpolation", %"class.blink::TransitionInterpolation"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %32 = select i1 %29, %"class.blink::InterpolableValue"** %31, %"class.blink::InterpolableValue"** %30
  %33 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %32, align 8
  br i1 %29, label %38, label %40

34:                                               ; preds = %2
  %35 = getelementptr inbounds %"class.blink::TransitionInterpolation", %"class.blink::TransitionInterpolation"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::TransitionInterpolation", %"class.blink::TransitionInterpolation"* %0, i64 0, i32 3, i32 1, i32 0
  br label %42

38:                                               ; preds = %28
  %39 = getelementptr inbounds %"class.blink::TransitionInterpolation", %"class.blink::TransitionInterpolation"* %0, i64 0, i32 4, i32 1, i32 0
  br label %42

40:                                               ; preds = %28
  %41 = getelementptr inbounds %"class.blink::TransitionInterpolation", %"class.blink::TransitionInterpolation"* %0, i64 0, i32 5, i32 2, i32 0
  br label %42

42:                                               ; preds = %34, %38, %40
  %43 = phi %"class.blink::InterpolableValue"* [ %36, %34 ], [ %33, %38 ], [ %33, %40 ]
  %44 = phi %"class.blink::NonInterpolableValue"** [ %37, %34 ], [ %39, %38 ], [ %41, %40 ]
  %45 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::CSSInterpolationEnvironment", %"class.blink::CSSInterpolationEnvironment"* %4, i64 0, i32 0
  %47 = bitcast %"class.blink::InterpolationType"* %24 to void (%"class.blink::InterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::InterpolationEnvironment"*)***
  %48 = load void (%"class.blink::InterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::InterpolationEnvironment"*)**, void (%"class.blink::InterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::InterpolationEnvironment"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.blink::InterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::InterpolationEnvironment"*)*, void (%"class.blink::InterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::InterpolationEnvironment"*)** %48, i64 7
  %50 = load void (%"class.blink::InterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::InterpolationEnvironment"*)*, void (%"class.blink::InterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::InterpolationEnvironment"*)** %49, align 8
  call void %50(%"class.blink::InterpolationType"* %24, %"class.blink::InterpolableValue"* dereferenceable(8) %43, %"class.blink::NonInterpolableValue"* %45, %"class.blink::InterpolationEnvironment"* nonnull dereferenceable(16) %46) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %11) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN5blink24CSSInterpolationTypesMapC1EPKNS_16PropertyRegistryERKNS_8DocumentE(%"class.blink::CSSInterpolationTypesMap"*, %"class.blink::PropertyRegistry"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden noalias %"class.blink::TypedInterpolationValue"* @_ZNK5blink23TransitionInterpolation20GetInterpolatedValueEv(%"class.blink::TransitionInterpolation"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::TransitionInterpolation", %"class.blink::TransitionInterpolation"* %0, i64 0, i32 2
  %3 = bitcast %"class.blink::InterpolationType"** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.blink::TransitionInterpolation", %"class.blink::TransitionInterpolation"* %0, i64 0, i32 8
  %6 = load double, double* %5, align 8
  %7 = fcmp oeq double %6, 0.000000e+00
  br i1 %7, label %8, label %10

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::TransitionInterpolation", %"class.blink::TransitionInterpolation"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  br label %16

10:                                               ; preds = %1
  %11 = fcmp oeq double %6, 1.000000e+00
  br i1 %11, label %12, label %14

12:                                               ; preds = %10
  %13 = getelementptr inbounds %"class.blink::TransitionInterpolation", %"class.blink::TransitionInterpolation"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  br label %16

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::TransitionInterpolation", %"class.blink::TransitionInterpolation"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  br label %16

16:                                               ; preds = %8, %12, %14
  %17 = phi %"class.blink::InterpolableValue"** [ %9, %8 ], [ %13, %12 ], [ %15, %14 ]
  %18 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %17, align 8
  %19 = bitcast %"class.blink::InterpolableValue"* %18 to %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)***
  %20 = load %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)**, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*** %19, align 8
  %21 = getelementptr inbounds %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)** %20, i64 16
  %22 = load %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)** %21, align 8
  %23 = tail call %"class.blink::InterpolableValue"* %22(%"class.blink::InterpolableValue"* %18) #7
  %24 = ptrtoint %"class.blink::InterpolableValue"* %23 to i64
  %25 = load double, double* %5, align 8
  %26 = fcmp oeq double %25, 0.000000e+00
  br i1 %26, label %27, label %29

27:                                               ; preds = %16
  %28 = getelementptr inbounds %"class.blink::TransitionInterpolation", %"class.blink::TransitionInterpolation"* %0, i64 0, i32 3, i32 1, i32 0
  br label %35

29:                                               ; preds = %16
  %30 = fcmp oeq double %25, 1.000000e+00
  br i1 %30, label %31, label %33

31:                                               ; preds = %29
  %32 = getelementptr inbounds %"class.blink::TransitionInterpolation", %"class.blink::TransitionInterpolation"* %0, i64 0, i32 4, i32 1, i32 0
  br label %35

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.blink::TransitionInterpolation", %"class.blink::TransitionInterpolation"* %0, i64 0, i32 5, i32 2, i32 0
  br label %35

35:                                               ; preds = %27, %31, %33
  %36 = phi %"class.blink::NonInterpolableValue"** [ %28, %27 ], [ %32, %31 ], [ %34, %33 ]
  %37 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %36, align 8
  %38 = tail call noalias i8* @malloc(i64 24) #7
  %39 = bitcast i8* %38 to %"class.blink::TypedInterpolationValue"*
  %40 = icmp eq %"class.blink::NonInterpolableValue"* %37, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %37, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %42) #7
  br label %43

43:                                               ; preds = %41, %35
  %44 = ptrtoint %"class.blink::NonInterpolableValue"* %37 to i64
  %45 = bitcast i8* %38 to i64*
  store i64 %4, i64* %45, align 8
  %46 = getelementptr inbounds i8, i8* %38, i64 8
  %47 = bitcast i8* %46 to i64*
  store i64 %24, i64* %47, align 8
  %48 = getelementptr inbounds i8, i8* %38, i64 16
  %49 = bitcast i8* %48 to i64*
  store i64 %44, i64* %49, align 8
  ret %"class.blink::TypedInterpolationValue"* %39
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink23TransitionInterpolationD2Ev(%"class.blink::TransitionInterpolation"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::TransitionInterpolation", %"class.blink::TransitionInterpolation"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink23TransitionInterpolationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::TransitionInterpolation", %"class.blink::TransitionInterpolation"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %4 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %3, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %3, align 8
  %5 = icmp eq %"class.blink::InterpolableValue"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::InterpolableValue"* %4 to void (%"class.blink::InterpolableValue"*)***
  %8 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %8, i64 1
  %10 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %9, align 8
  tail call void %10(%"class.blink::InterpolableValue"* nonnull %4) #7
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.blink::TransitionInterpolation", %"class.blink::TransitionInterpolation"* %0, i64 0, i32 5, i32 2, i32 0
  %13 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %12, align 8
  %14 = icmp eq %"class.blink::NonInterpolableValue"* %13, null
  br i1 %14, label %28, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %13, i64 0, i32 1, i32 0
  %17 = getelementptr inbounds %"class.base::RefCounted.5", %"class.base::RefCounted.5"* %16, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %17) #7
  %18 = getelementptr inbounds %"class.base::RefCounted.5", %"class.base::RefCounted.5"* %16, i64 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.base::RefCounted.5", %"class.base::RefCounted.5"* %16, i64 -2
  %23 = bitcast %"class.base::RefCounted.5"* %22 to %"class.blink::NonInterpolableValue"*
  %24 = bitcast %"class.base::RefCounted.5"* %22 to void (%"class.blink::NonInterpolableValue"*)***
  %25 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %25, i64 1
  %27 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %26, align 8
  tail call void %27(%"class.blink::NonInterpolableValue"* nonnull %23) #7
  br label %28

28:                                               ; preds = %21, %15, %11
  %29 = getelementptr inbounds %"class.blink::TransitionInterpolation", %"class.blink::TransitionInterpolation"* %0, i64 0, i32 5, i32 1, i32 0, i32 0, i32 0
  %30 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %29, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %29, align 8
  %31 = icmp eq %"class.blink::InterpolableValue"* %30, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %28
  %33 = bitcast %"class.blink::InterpolableValue"* %30 to void (%"class.blink::InterpolableValue"*)***
  %34 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %34, i64 1
  %36 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %35, align 8
  tail call void %36(%"class.blink::InterpolableValue"* nonnull %30) #7
  br label %37

37:                                               ; preds = %32, %28
  %38 = getelementptr inbounds %"class.blink::TransitionInterpolation", %"class.blink::TransitionInterpolation"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %39 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %38, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %38, align 8
  %40 = icmp eq %"class.blink::InterpolableValue"* %39, null
  br i1 %40, label %46, label %41

41:                                               ; preds = %37
  %42 = bitcast %"class.blink::InterpolableValue"* %39 to void (%"class.blink::InterpolableValue"*)***
  %43 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %43, i64 1
  %45 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %44, align 8
  tail call void %45(%"class.blink::InterpolableValue"* nonnull %39) #7
  br label %46

46:                                               ; preds = %37, %41
  %47 = getelementptr inbounds %"class.blink::TransitionInterpolation", %"class.blink::TransitionInterpolation"* %0, i64 0, i32 4, i32 1, i32 0
  %48 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %47, align 8
  %49 = icmp eq %"class.blink::NonInterpolableValue"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %48, i64 0, i32 1, i32 0
  %52 = getelementptr inbounds %"class.base::RefCounted.5", %"class.base::RefCounted.5"* %51, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %52) #7
  %53 = getelementptr inbounds %"class.base::RefCounted.5", %"class.base::RefCounted.5"* %51, i64 0, i32 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %63

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.base::RefCounted.5", %"class.base::RefCounted.5"* %51, i64 -2
  %58 = bitcast %"class.base::RefCounted.5"* %57 to %"class.blink::NonInterpolableValue"*
  %59 = bitcast %"class.base::RefCounted.5"* %57 to void (%"class.blink::NonInterpolableValue"*)***
  %60 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %60, i64 1
  %62 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %61, align 8
  tail call void %62(%"class.blink::NonInterpolableValue"* nonnull %58) #7
  br label %63

63:                                               ; preds = %56, %50, %46
  %64 = getelementptr inbounds %"class.blink::TransitionInterpolation", %"class.blink::TransitionInterpolation"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %65 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %64, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %64, align 8
  %66 = icmp eq %"class.blink::InterpolableValue"* %65, null
  br i1 %66, label %72, label %67

67:                                               ; preds = %63
  %68 = bitcast %"class.blink::InterpolableValue"* %65 to void (%"class.blink::InterpolableValue"*)***
  %69 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %68, align 8
  %70 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %69, i64 1
  %71 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %70, align 8
  tail call void %71(%"class.blink::InterpolableValue"* nonnull %65) #7
  br label %72

72:                                               ; preds = %63, %67
  %73 = getelementptr inbounds %"class.blink::TransitionInterpolation", %"class.blink::TransitionInterpolation"* %0, i64 0, i32 3, i32 1, i32 0
  %74 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %73, align 8
  %75 = icmp eq %"class.blink::NonInterpolableValue"* %74, null
  br i1 %75, label %89, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %74, i64 0, i32 1, i32 0
  %78 = getelementptr inbounds %"class.base::RefCounted.5", %"class.base::RefCounted.5"* %77, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %78) #7
  %79 = getelementptr inbounds %"class.base::RefCounted.5", %"class.base::RefCounted.5"* %77, i64 0, i32 0, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %89

82:                                               ; preds = %76
  %83 = getelementptr inbounds %"class.base::RefCounted.5", %"class.base::RefCounted.5"* %77, i64 -2
  %84 = bitcast %"class.base::RefCounted.5"* %83 to %"class.blink::NonInterpolableValue"*
  %85 = bitcast %"class.base::RefCounted.5"* %83 to void (%"class.blink::NonInterpolableValue"*)***
  %86 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %85, align 8
  %87 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %86, i64 1
  %88 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %87, align 8
  tail call void %88(%"class.blink::NonInterpolableValue"* nonnull %84) #7
  br label %89

89:                                               ; preds = %82, %76, %72
  %90 = getelementptr inbounds %"class.blink::TransitionInterpolation", %"class.blink::TransitionInterpolation"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %91 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %90, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %90, align 8
  %92 = icmp eq %"class.blink::InterpolableValue"* %91, null
  br i1 %92, label %98, label %93

93:                                               ; preds = %89
  %94 = bitcast %"class.blink::InterpolableValue"* %91 to void (%"class.blink::InterpolableValue"*)***
  %95 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %94, align 8
  %96 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %95, i64 1
  %97 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %96, align 8
  tail call void %97(%"class.blink::InterpolableValue"* nonnull %91) #7
  br label %98

98:                                               ; preds = %89, %93
  %99 = getelementptr inbounds %"class.blink::TransitionInterpolation", %"class.blink::TransitionInterpolation"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %99, align 8
  %101 = icmp eq %"class.WTF::StringImpl"* %100, null
  br i1 %101, label %115, label %102

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  br i1 %106, label %109, label %111

109:                                              ; preds = %102
  %110 = add i32 %108, -1
  store i32 %110, i32* %107, align 4
  br label %111

111:                                              ; preds = %109, %102
  %112 = phi i32 [ %110, %109 ], [ %108, %102 ]
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %115

114:                                              ; preds = %111
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %100) #7
  br label %115

115:                                              ; preds = %98, %111, %114
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink23TransitionInterpolationD0Ev(%"class.blink::TransitionInterpolation"*) unnamed_addr #4 comdat align 2 {
  tail call void @_ZN5blink23TransitionInterpolationD2Ev(%"class.blink::TransitionInterpolation"* %0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13Interpolation28IsInvalidatableInterpolationEv(%"class.blink::Interpolation"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink23TransitionInterpolation25IsTransitionInterpolationEv(%"class.blink::TransitionInterpolation"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.blink::PropertyHandle"* @_ZNK5blink23TransitionInterpolation11GetPropertyEv(%"class.blink::TransitionInterpolation"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::TransitionInterpolation", %"class.blink::TransitionInterpolation"* %0, i64 0, i32 1
  ret %"class.blink::PropertyHandle"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13Interpolation24DependsOnUnderlyingValueEv(%"class.blink::Interpolation"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink23TransitionInterpolation5TraceEPNS_7VisitorE(%"class.blink::TransitionInterpolation"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::TransitionInterpolation", %"class.blink::TransitionInterpolation"* %0, i64 0, i32 6
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_23CompositorKeyframeValueEE5TraceEPNS_7VisitorEPKv) #7
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::TransitionInterpolation", %"class.blink::TransitionInterpolation"* %0, i64 0, i32 7
  %15 = bitcast %"class.blink::Member"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_23CompositorKeyframeValueEE5TraceEPNS_7VisitorEPKv) #7
  br label %24

24:                                               ; preds = %13, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink27CSSInterpolationEnvironment5IsCSSEv(%"class.blink::CSSInterpolationEnvironment"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink24InterpolationEnvironment5IsSVGEv(%"class.blink::InterpolationEnvironment"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink27CSSInterpolationEnvironmentD0Ev(%"class.blink::CSSInterpolationEnvironment"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.blink::CSSInterpolationEnvironment"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink24InterpolationEnvironmentD2Ev(%"class.blink::InterpolationEnvironment"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_23CompositorKeyframeValueEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CompositorKeyframeValue"*
  %4 = bitcast i8* %1 to void (%"class.blink::CompositorKeyframeValue"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::CompositorKeyframeValue"*, %"class.blink::Visitor"*)**, void (%"class.blink::CompositorKeyframeValue"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::CompositorKeyframeValue"*, %"class.blink::Visitor"*)*, void (%"class.blink::CompositorKeyframeValue"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::CompositorKeyframeValue"*, %"class.blink::Visitor"*)*, void (%"class.blink::CompositorKeyframeValue"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::CompositorKeyframeValue"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #6

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
