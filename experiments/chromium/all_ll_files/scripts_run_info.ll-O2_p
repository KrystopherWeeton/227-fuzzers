; ModuleID = '../../extensions/renderer/scripts_run_info.cc'
source_filename = "../../extensions/renderer/scripts_run_info.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.extensions::ScriptsRunInfo" = type { i64, i64, i64, %"class.std::__1::map", %"class.std::__1::map", %"class.base::ElapsedTimer", i32, i32, %class.GURL }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %class.GURL* }
%"class.content::RenderFrame" = type <{ %"class.IPC::Listener", %"class.IPC::Sender", %"class.base::SupportsUserData.base", [7 x i8] }>
%"class.IPC::Listener" = type { i32 (...)** }
%"class.IPC::Sender" = type { i32 (...)** }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map.12", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map.12" = type { %"class.std::__1::__tree.13" }
%"class.std::__1::__tree.13" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.blink::WebLocalFrame" = type { %"class.blink::WebFrame" }
%"class.blink::WebFrame" = type { i32 (...)**, i32, [4 x i8], %"class.blink::MultiToken" }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"class.std::__1::basic_string", %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.29" }
%"class.std::__1::__tree.29" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.30", %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::TimeDelta" = type { i64 }
%"class.content::RenderThread" = type { %"class.content::ChildThread" }
%"class.content::ChildThread" = type { %"class.IPC::Sender" }
%"class.IPC::MessageT" = type { %"class.IPC::Message" }
%"class.IPC::Message" = type { %"class.base::Pickle", i8, %class.scoped_refptr }
%"class.base::Pickle" = type { i32 (...)**, %"struct.base::Pickle::Header"*, i64, i64, i64 }
%"struct.base::Pickle::Header" = type { i32 }
%class.scoped_refptr = type { %"class.IPC::MessageAttachmentSet"* }
%"class.IPC::MessageAttachmentSet" = type opaque
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.24", [4 x i8] }>
%"struct.std::__1::atomic.24" = type { %"struct.std::__1::__atomic_base.25" }
%"struct.std::__1::__atomic_base.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__cxx_atomic_impl.27" }
%"struct.std::__1::__cxx_atomic_impl.27" = type { %"struct.std::__1::__cxx_atomic_base_impl.28" }
%"struct.std::__1::__cxx_atomic_base_impl.28" = type { i32 }
%"class.std::__1::__tree_node.36" = type { %"class.std::__1::__tree_node_base.base", %"class.std::__1::basic_string" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_3setIS7_NS_4lessIS7_EENS5_IS7_EEEEEENS_19__map_value_compareIS7_SD_SA_Lb1EEENS5_ISD_EEE7destroyEPNS_11__tree_nodeISD_PvEE = comdat any

$_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

@.str = private unnamed_addr constant [32 x i8] c"Extensions.InjectStart_CssCount\00", align 1
@.str.1 = private unnamed_addr constant [35 x i8] c"Extensions.InjectStart_ScriptCount\00", align 1
@.str.2 = private unnamed_addr constant [43 x i8] c"Extensions.InjectStart_BlockingScriptCount\00", align 1
@.str.3 = private unnamed_addr constant [28 x i8] c"Extensions.InjectStart_Time\00", align 1
@.str.4 = private unnamed_addr constant [33 x i8] c"Extensions.InjectEnd_ScriptCount\00", align 1
@.str.5 = private unnamed_addr constant [41 x i8] c"Extensions.InjectEnd_BlockingScriptCount\00", align 1
@.str.6 = private unnamed_addr constant [26 x i8] c"Extensions.InjectEnd_Time\00", align 1
@.str.7 = private unnamed_addr constant [34 x i8] c"Extensions.InjectIdle_ScriptCount\00", align 1
@.str.8 = private unnamed_addr constant [42 x i8] c"Extensions.InjectIdle_BlockingScriptCount\00", align 1
@.str.9 = private unnamed_addr constant [27 x i8] c"Extensions.InjectIdle_Time\00", align 1
@_ZZN10extensions14ScriptsRunInfo6LogRunEbE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN10extensions14ScriptsRunInfo6LogRunEbE24atomic_histogram_pointer_0.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN10extensions14ScriptsRunInfo6LogRunEbE24atomic_histogram_pointer_1.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN10extensions14ScriptsRunInfo6LogRunEbE24atomic_histogram_pointer_2.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN10extensions14ScriptsRunInfo6LogRunEbE24atomic_histogram_pointer_3.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN10extensions14ScriptsRunInfo6LogRunEbE24atomic_histogram_pointer_4.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN10extensions14ScriptsRunInfo6LogRunEbE24atomic_histogram_pointer_5.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN10extensions14ScriptsRunInfo6LogRunEbE24atomic_histogram_pointer_6.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN10extensions14ScriptsRunInfo6LogRunEbE24atomic_histogram_pointer_7.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN10extensions14ScriptsRunInfo6LogRunEbE24atomic_histogram_pointer_8.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN10extensions14ScriptsRunInfoC1EPN7content11RenderFrameENS_5mojom11RunLocationE = hidden unnamed_addr alias void (%"struct.extensions::ScriptsRunInfo"*, %"class.content::RenderFrame"*, i32), void (%"struct.extensions::ScriptsRunInfo"*, %"class.content::RenderFrame"*, i32)* @_ZN10extensions14ScriptsRunInfoC2EPN7content11RenderFrameENS_5mojom11RunLocationE
@_ZN10extensions14ScriptsRunInfoD1Ev = hidden unnamed_addr alias void (%"struct.extensions::ScriptsRunInfo"*), void (%"struct.extensions::ScriptsRunInfo"*)* @_ZN10extensions14ScriptsRunInfoD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions14ScriptsRunInfoC2EPN7content11RenderFrameENS_5mojom11RunLocationE(%"struct.extensions::ScriptsRunInfo"*, %"class.content::RenderFrame"*, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"struct.extensions::ScriptsRunInfo", %"struct.extensions::ScriptsRunInfo"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.extensions::ScriptsRunInfo", %"struct.extensions::ScriptsRunInfo"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.extensions::ScriptsRunInfo", %"struct.extensions::ScriptsRunInfo"* %0, i64 0, i32 3, i32 0, i32 0
  %7 = bitcast %"class.std::__1::__tree_node_base"** %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #6
  %8 = bitcast %"struct.extensions::ScriptsRunInfo"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false)
  store %"class.std::__1::__tree_end_node"* %5, %"class.std::__1::__tree_end_node"** %6, align 8
  %9 = getelementptr inbounds %"struct.extensions::ScriptsRunInfo", %"struct.extensions::ScriptsRunInfo"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.extensions::ScriptsRunInfo", %"struct.extensions::ScriptsRunInfo"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.extensions::ScriptsRunInfo", %"struct.extensions::ScriptsRunInfo"* %0, i64 0, i32 4, i32 0, i32 0
  %12 = bitcast %"class.std::__1::__tree_node_base"** %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #6
  store %"class.std::__1::__tree_end_node"* %10, %"class.std::__1::__tree_end_node"** %11, align 8
  %13 = getelementptr inbounds %"struct.extensions::ScriptsRunInfo", %"struct.extensions::ScriptsRunInfo"* %0, i64 0, i32 5
  tail call void @_ZN4base12ElapsedTimerC1Ev(%"class.base::ElapsedTimer"* %13) #6
  %14 = getelementptr inbounds %"struct.extensions::ScriptsRunInfo", %"struct.extensions::ScriptsRunInfo"* %0, i64 0, i32 6
  %15 = bitcast %"class.content::RenderFrame"* %1 to i32 (%"class.content::RenderFrame"*)***
  %16 = load i32 (%"class.content::RenderFrame"*)**, i32 (%"class.content::RenderFrame"*)*** %15, align 8
  %17 = getelementptr inbounds i32 (%"class.content::RenderFrame"*)*, i32 (%"class.content::RenderFrame"*)** %16, i64 12
  %18 = load i32 (%"class.content::RenderFrame"*)*, i32 (%"class.content::RenderFrame"*)** %17, align 8
  %19 = tail call i32 %18(%"class.content::RenderFrame"* %1) #6
  store i32 %19, i32* %14, align 8
  %20 = getelementptr inbounds %"struct.extensions::ScriptsRunInfo", %"struct.extensions::ScriptsRunInfo"* %0, i64 0, i32 7
  store i32 %2, i32* %20, align 4
  %21 = getelementptr inbounds %"struct.extensions::ScriptsRunInfo", %"struct.extensions::ScriptsRunInfo"* %0, i64 0, i32 8
  %22 = bitcast %"class.content::RenderFrame"* %1 to %"class.blink::WebLocalFrame"* (%"class.content::RenderFrame"*)***
  %23 = load %"class.blink::WebLocalFrame"* (%"class.content::RenderFrame"*)**, %"class.blink::WebLocalFrame"* (%"class.content::RenderFrame"*)*** %22, align 8
  %24 = getelementptr inbounds %"class.blink::WebLocalFrame"* (%"class.content::RenderFrame"*)*, %"class.blink::WebLocalFrame"* (%"class.content::RenderFrame"*)** %23, i64 15
  %25 = load %"class.blink::WebLocalFrame"* (%"class.content::RenderFrame"*)*, %"class.blink::WebLocalFrame"* (%"class.content::RenderFrame"*)** %24, align 8
  %26 = tail call %"class.blink::WebLocalFrame"* %25(%"class.content::RenderFrame"* %1) #6
  tail call void @_ZN10extensions13ScriptContext28GetDocumentLoaderURLForFrameEPKN5blink13WebLocalFrameE(%class.GURL* sret %21, %"class.blink::WebLocalFrame"* %26) #6
  ret void
}

declare void @_ZN4base12ElapsedTimerC1Ev(%"class.base::ElapsedTimer"*) unnamed_addr #1

declare void @_ZN10extensions13ScriptContext28GetDocumentLoaderURLForFrameEPKN5blink13WebLocalFrameE(%class.GURL* sret, %"class.blink::WebLocalFrame"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions14ScriptsRunInfoD2Ev(%"struct.extensions::ScriptsRunInfo"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.extensions::ScriptsRunInfo", %"struct.extensions::ScriptsRunInfo"* %0, i64 0, i32 8
  tail call void @_ZN4GURLD1Ev(%class.GURL* %2) #6
  %3 = getelementptr inbounds %"struct.extensions::ScriptsRunInfo", %"struct.extensions::ScriptsRunInfo"* %0, i64 0, i32 4, i32 0
  %4 = getelementptr inbounds %"struct.extensions::ScriptsRunInfo", %"struct.extensions::ScriptsRunInfo"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_3setIS7_NS_4lessIS7_EENS5_IS7_EEEEEENS_19__map_value_compareIS7_SD_SA_Lb1EEENS5_ISD_EEE7destroyEPNS_11__tree_nodeISD_PvEE(%"class.std::__1::__tree"* %3, %"class.std::__1::__tree_node"* %6) #6
  %7 = getelementptr inbounds %"struct.extensions::ScriptsRunInfo", %"struct.extensions::ScriptsRunInfo"* %0, i64 0, i32 3, i32 0
  %8 = getelementptr inbounds %"struct.extensions::ScriptsRunInfo", %"struct.extensions::ScriptsRunInfo"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %9 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_node"**
  %10 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %9, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_3setIS7_NS_4lessIS7_EENS5_IS7_EEEEEENS_19__map_value_compareIS7_SD_SA_Lb1EEENS5_ISD_EEE7destroyEPNS_11__tree_nodeISD_PvEE(%"class.std::__1::__tree"* %7, %"class.std::__1::__tree_node"* %10) #6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions14ScriptsRunInfo6LogRunEb(%"struct.extensions::ScriptsRunInfo"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::TimeDelta", align 8
  %4 = getelementptr inbounds %"struct.extensions::ScriptsRunInfo", %"struct.extensions::ScriptsRunInfo"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  %7 = xor i1 %1, true
  %8 = or i1 %6, %7
  br i1 %8, label %30, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.extensions::ScriptsRunInfo", %"struct.extensions::ScriptsRunInfo"* %0, i64 0, i32 3
  %11 = tail call %"class.content::RenderThread"* @_ZN7content12RenderThread3GetEv() #6
  %12 = bitcast %"class.content::RenderThread"* %11 to i8**
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr i8, i8* %13, i64 -80
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.content::RenderThread"* %11 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 %16
  %19 = bitcast i8* %18 to %"class.IPC::Sender"*
  %20 = tail call i8* @_Znwm(i64 56) #7
  %21 = bitcast i8* %20 to %"class.IPC::MessageT"*
  %22 = getelementptr inbounds %"struct.extensions::ScriptsRunInfo", %"struct.extensions::ScriptsRunInfo"* %0, i64 0, i32 6
  %23 = load i32, i32* %22, align 8
  %24 = getelementptr inbounds %"struct.extensions::ScriptsRunInfo", %"struct.extensions::ScriptsRunInfo"* %0, i64 0, i32 8
  tail call void @_ZN3IPC8MessageTI45ExtensionHostMsg_ContentScriptsExecuting_MetaNSt3__15tupleIJNS2_3mapINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS2_3setISA_NS2_4lessISA_EENS8_ISA_EEEESD_NS8_INS2_4pairIKSA_SF_EEEEEE4GURLEEEvEC2ENS_7RoutingERKSK_RKSL_(%"class.IPC::MessageT"* nonnull %21, i32 %23, %"class.std::__1::map"* dereferenceable(24) %10, %class.GURL* dereferenceable(120) %24) #6
  %25 = bitcast i8* %20 to %"class.IPC::Message"*
  %26 = bitcast i8* %18 to i1 (%"class.IPC::Sender"*, %"class.IPC::Message"*)***
  %27 = load i1 (%"class.IPC::Sender"*, %"class.IPC::Message"*)**, i1 (%"class.IPC::Sender"*, %"class.IPC::Message"*)*** %26, align 8
  %28 = load i1 (%"class.IPC::Sender"*, %"class.IPC::Message"*)*, i1 (%"class.IPC::Sender"*, %"class.IPC::Message"*)** %27, align 8
  %29 = tail call zeroext i1 %28(%"class.IPC::Sender"* %19, %"class.IPC::Message"* nonnull %25) #6
  br label %30

30:                                               ; preds = %2, %9
  %31 = bitcast %"class.base::TimeDelta"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #6
  %32 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 0, i32 0
  %33 = getelementptr inbounds %"struct.extensions::ScriptsRunInfo", %"struct.extensions::ScriptsRunInfo"* %0, i64 0, i32 5
  %34 = tail call i64 @_ZNK4base12ElapsedTimer7ElapsedEv(%"class.base::ElapsedTimer"* %33) #6
  store i64 %34, i64* %32, align 8
  %35 = getelementptr inbounds %"struct.extensions::ScriptsRunInfo", %"struct.extensions::ScriptsRunInfo"* %0, i64 0, i32 7
  %36 = load i32, i32* %35, align 4
  switch i32 %36, label %193 [
    i32 1, label %37
    i32 2, label %101
    i32 3, label %147
  ]

37:                                               ; preds = %30
  %38 = load atomic i64, i64* @_ZZN10extensions14ScriptsRunInfo6LogRunEbE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %39 = inttoptr i64 %38 to %"class.base::HistogramBase"*
  %40 = icmp eq i64 %38, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %37
  %42 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0), i32 1, i32 100, i32 50, i32 1) #6
  %43 = ptrtoint %"class.base::HistogramBase"* %42 to i64
  store atomic i64 %43, i64* @_ZZN10extensions14ScriptsRunInfo6LogRunEbE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %44

44:                                               ; preds = %37, %41
  %45 = phi %"class.base::HistogramBase"* [ %39, %37 ], [ %42, %41 ]
  %46 = getelementptr inbounds %"struct.extensions::ScriptsRunInfo", %"struct.extensions::ScriptsRunInfo"* %0, i64 0, i32 0
  %47 = load i64, i64* %46, align 8
  %48 = trunc i64 %47 to i32
  %49 = bitcast %"class.base::HistogramBase"* %45 to void (%"class.base::HistogramBase"*, i32)***
  %50 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %50, i64 6
  %52 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %51, align 8
  tail call void %52(%"class.base::HistogramBase"* %45, i32 %48) #6
  %53 = load atomic i64, i64* @_ZZN10extensions14ScriptsRunInfo6LogRunEbE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %54 = inttoptr i64 %53 to %"class.base::HistogramBase"*
  %55 = icmp eq i64 %53, 0
  br i1 %55, label %56, label %59

56:                                               ; preds = %44
  %57 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i64 0, i64 0), i32 1, i32 100, i32 50, i32 1) #6
  %58 = ptrtoint %"class.base::HistogramBase"* %57 to i64
  store atomic i64 %58, i64* @_ZZN10extensions14ScriptsRunInfo6LogRunEbE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %59

59:                                               ; preds = %44, %56
  %60 = phi %"class.base::HistogramBase"* [ %54, %44 ], [ %57, %56 ]
  %61 = getelementptr inbounds %"struct.extensions::ScriptsRunInfo", %"struct.extensions::ScriptsRunInfo"* %0, i64 0, i32 1
  %62 = load i64, i64* %61, align 8
  %63 = trunc i64 %62 to i32
  %64 = bitcast %"class.base::HistogramBase"* %60 to void (%"class.base::HistogramBase"*, i32)***
  %65 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %65, i64 6
  %67 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %66, align 8
  tail call void %67(%"class.base::HistogramBase"* %60, i32 %63) #6
  %68 = getelementptr inbounds %"struct.extensions::ScriptsRunInfo", %"struct.extensions::ScriptsRunInfo"* %0, i64 0, i32 2
  %69 = load i64, i64* %68, align 8
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %86, label %71

71:                                               ; preds = %59
  %72 = load atomic i64, i64* @_ZZN10extensions14ScriptsRunInfo6LogRunEbE24atomic_histogram_pointer_1.0.0.0.0.0 acquire, align 8
  %73 = inttoptr i64 %72 to %"class.base::HistogramBase"*
  %74 = icmp eq i64 %72, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %71
  %76 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.2, i64 0, i64 0), i32 1, i32 100, i32 50, i32 1) #6
  %77 = ptrtoint %"class.base::HistogramBase"* %76 to i64
  store atomic i64 %77, i64* @_ZZN10extensions14ScriptsRunInfo6LogRunEbE24atomic_histogram_pointer_1.0.0.0.0.0 release, align 8
  br label %78

78:                                               ; preds = %71, %75
  %79 = phi %"class.base::HistogramBase"* [ %73, %71 ], [ %76, %75 ]
  %80 = load i64, i64* %68, align 8
  %81 = trunc i64 %80 to i32
  %82 = bitcast %"class.base::HistogramBase"* %79 to void (%"class.base::HistogramBase"*, i32)***
  %83 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %82, align 8
  %84 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %83, i64 6
  %85 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %84, align 8
  tail call void %85(%"class.base::HistogramBase"* %79, i32 %81) #6
  br label %193

86:                                               ; preds = %59
  %87 = load i64, i64* %46, align 8
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %89, label %92

89:                                               ; preds = %86
  %90 = load i64, i64* %61, align 8
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %193, label %92

92:                                               ; preds = %89, %86
  %93 = load atomic i64, i64* @_ZZN10extensions14ScriptsRunInfo6LogRunEbE24atomic_histogram_pointer_2.0.0.0.0.0 acquire, align 8
  %94 = inttoptr i64 %93 to %"class.base::HistogramBase"*
  %95 = icmp eq i64 %93, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %92
  %97 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3, i64 0, i64 0), i64 1000, i64 10000000, i32 50, i32 1) #6
  %98 = ptrtoint %"class.base::HistogramBase"* %97 to i64
  store atomic i64 %98, i64* @_ZZN10extensions14ScriptsRunInfo6LogRunEbE24atomic_histogram_pointer_2.0.0.0.0.0 release, align 8
  br label %99

99:                                               ; preds = %92, %96
  %100 = phi %"class.base::HistogramBase"* [ %94, %92 ], [ %97, %96 ]
  call void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"* %100, %"class.base::TimeDelta"* nonnull dereferenceable(8) %3) #6
  br label %193

101:                                              ; preds = %30
  %102 = load atomic i64, i64* @_ZZN10extensions14ScriptsRunInfo6LogRunEbE24atomic_histogram_pointer_3.0.0.0.0.0 acquire, align 8
  %103 = inttoptr i64 %102 to %"class.base::HistogramBase"*
  %104 = icmp eq i64 %102, 0
  br i1 %104, label %105, label %108

105:                                              ; preds = %101
  %106 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i64 0, i64 0), i32 1, i32 100, i32 50, i32 1) #6
  %107 = ptrtoint %"class.base::HistogramBase"* %106 to i64
  store atomic i64 %107, i64* @_ZZN10extensions14ScriptsRunInfo6LogRunEbE24atomic_histogram_pointer_3.0.0.0.0.0 release, align 8
  br label %108

108:                                              ; preds = %101, %105
  %109 = phi %"class.base::HistogramBase"* [ %103, %101 ], [ %106, %105 ]
  %110 = getelementptr inbounds %"struct.extensions::ScriptsRunInfo", %"struct.extensions::ScriptsRunInfo"* %0, i64 0, i32 1
  %111 = load i64, i64* %110, align 8
  %112 = trunc i64 %111 to i32
  %113 = bitcast %"class.base::HistogramBase"* %109 to void (%"class.base::HistogramBase"*, i32)***
  %114 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %113, align 8
  %115 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %114, i64 6
  %116 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %115, align 8
  tail call void %116(%"class.base::HistogramBase"* %109, i32 %112) #6
  %117 = getelementptr inbounds %"struct.extensions::ScriptsRunInfo", %"struct.extensions::ScriptsRunInfo"* %0, i64 0, i32 2
  %118 = load i64, i64* %117, align 8
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %135, label %120

120:                                              ; preds = %108
  %121 = load atomic i64, i64* @_ZZN10extensions14ScriptsRunInfo6LogRunEbE24atomic_histogram_pointer_4.0.0.0.0.0 acquire, align 8
  %122 = inttoptr i64 %121 to %"class.base::HistogramBase"*
  %123 = icmp eq i64 %121, 0
  br i1 %123, label %124, label %127

124:                                              ; preds = %120
  %125 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.5, i64 0, i64 0), i32 1, i32 100, i32 50, i32 1) #6
  %126 = ptrtoint %"class.base::HistogramBase"* %125 to i64
  store atomic i64 %126, i64* @_ZZN10extensions14ScriptsRunInfo6LogRunEbE24atomic_histogram_pointer_4.0.0.0.0.0 release, align 8
  br label %127

127:                                              ; preds = %120, %124
  %128 = phi %"class.base::HistogramBase"* [ %122, %120 ], [ %125, %124 ]
  %129 = load i64, i64* %117, align 8
  %130 = trunc i64 %129 to i32
  %131 = bitcast %"class.base::HistogramBase"* %128 to void (%"class.base::HistogramBase"*, i32)***
  %132 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %131, align 8
  %133 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %132, i64 6
  %134 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %133, align 8
  tail call void %134(%"class.base::HistogramBase"* %128, i32 %130) #6
  br label %193

135:                                              ; preds = %108
  %136 = load i64, i64* %110, align 8
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %193, label %138

138:                                              ; preds = %135
  %139 = load atomic i64, i64* @_ZZN10extensions14ScriptsRunInfo6LogRunEbE24atomic_histogram_pointer_5.0.0.0.0.0 acquire, align 8
  %140 = inttoptr i64 %139 to %"class.base::HistogramBase"*
  %141 = icmp eq i64 %139, 0
  br i1 %141, label %142, label %145

142:                                              ; preds = %138
  %143 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.6, i64 0, i64 0), i64 1000, i64 10000000, i32 50, i32 1) #6
  %144 = ptrtoint %"class.base::HistogramBase"* %143 to i64
  store atomic i64 %144, i64* @_ZZN10extensions14ScriptsRunInfo6LogRunEbE24atomic_histogram_pointer_5.0.0.0.0.0 release, align 8
  br label %145

145:                                              ; preds = %138, %142
  %146 = phi %"class.base::HistogramBase"* [ %140, %138 ], [ %143, %142 ]
  call void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"* %146, %"class.base::TimeDelta"* nonnull dereferenceable(8) %3) #6
  br label %193

147:                                              ; preds = %30
  %148 = load atomic i64, i64* @_ZZN10extensions14ScriptsRunInfo6LogRunEbE24atomic_histogram_pointer_6.0.0.0.0.0 acquire, align 8
  %149 = inttoptr i64 %148 to %"class.base::HistogramBase"*
  %150 = icmp eq i64 %148, 0
  br i1 %150, label %151, label %154

151:                                              ; preds = %147
  %152 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.7, i64 0, i64 0), i32 1, i32 100, i32 50, i32 1) #6
  %153 = ptrtoint %"class.base::HistogramBase"* %152 to i64
  store atomic i64 %153, i64* @_ZZN10extensions14ScriptsRunInfo6LogRunEbE24atomic_histogram_pointer_6.0.0.0.0.0 release, align 8
  br label %154

154:                                              ; preds = %147, %151
  %155 = phi %"class.base::HistogramBase"* [ %149, %147 ], [ %152, %151 ]
  %156 = getelementptr inbounds %"struct.extensions::ScriptsRunInfo", %"struct.extensions::ScriptsRunInfo"* %0, i64 0, i32 1
  %157 = load i64, i64* %156, align 8
  %158 = trunc i64 %157 to i32
  %159 = bitcast %"class.base::HistogramBase"* %155 to void (%"class.base::HistogramBase"*, i32)***
  %160 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %159, align 8
  %161 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %160, i64 6
  %162 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %161, align 8
  tail call void %162(%"class.base::HistogramBase"* %155, i32 %158) #6
  %163 = getelementptr inbounds %"struct.extensions::ScriptsRunInfo", %"struct.extensions::ScriptsRunInfo"* %0, i64 0, i32 2
  %164 = load i64, i64* %163, align 8
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %181, label %166

166:                                              ; preds = %154
  %167 = load atomic i64, i64* @_ZZN10extensions14ScriptsRunInfo6LogRunEbE24atomic_histogram_pointer_7.0.0.0.0.0 acquire, align 8
  %168 = inttoptr i64 %167 to %"class.base::HistogramBase"*
  %169 = icmp eq i64 %167, 0
  br i1 %169, label %170, label %173

170:                                              ; preds = %166
  %171 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.8, i64 0, i64 0), i32 1, i32 100, i32 50, i32 1) #6
  %172 = ptrtoint %"class.base::HistogramBase"* %171 to i64
  store atomic i64 %172, i64* @_ZZN10extensions14ScriptsRunInfo6LogRunEbE24atomic_histogram_pointer_7.0.0.0.0.0 release, align 8
  br label %173

173:                                              ; preds = %166, %170
  %174 = phi %"class.base::HistogramBase"* [ %168, %166 ], [ %171, %170 ]
  %175 = load i64, i64* %163, align 8
  %176 = trunc i64 %175 to i32
  %177 = bitcast %"class.base::HistogramBase"* %174 to void (%"class.base::HistogramBase"*, i32)***
  %178 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %177, align 8
  %179 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %178, i64 6
  %180 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %179, align 8
  tail call void %180(%"class.base::HistogramBase"* %174, i32 %176) #6
  br label %193

181:                                              ; preds = %154
  %182 = load i64, i64* %156, align 8
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %193, label %184

184:                                              ; preds = %181
  %185 = load atomic i64, i64* @_ZZN10extensions14ScriptsRunInfo6LogRunEbE24atomic_histogram_pointer_8.0.0.0.0.0 acquire, align 8
  %186 = inttoptr i64 %185 to %"class.base::HistogramBase"*
  %187 = icmp eq i64 %185, 0
  br i1 %187, label %188, label %191

188:                                              ; preds = %184
  %189 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.9, i64 0, i64 0), i64 1000, i64 10000000, i32 50, i32 1) #6
  %190 = ptrtoint %"class.base::HistogramBase"* %189 to i64
  store atomic i64 %190, i64* @_ZZN10extensions14ScriptsRunInfo6LogRunEbE24atomic_histogram_pointer_8.0.0.0.0.0 release, align 8
  br label %191

191:                                              ; preds = %184, %188
  %192 = phi %"class.base::HistogramBase"* [ %186, %184 ], [ %189, %188 ]
  call void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"* %192, %"class.base::TimeDelta"* nonnull dereferenceable(8) %3) #6
  br label %193

193:                                              ; preds = %89, %135, %181, %173, %191, %127, %145, %78, %99, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #6
  ret void
}

declare %"class.content::RenderThread"* @_ZN7content12RenderThread3GetEv() local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare i64 @_ZNK4base12ElapsedTimer7ElapsedEv(%"class.base::ElapsedTimer"*) local_unnamed_addr #1

declare %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8*, i64, i64, i32, i32) local_unnamed_addr #1

declare void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"*, %"class.base::TimeDelta"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_3setIS7_NS_4lessIS7_EENS5_IS7_EEEEEENS_19__map_value_compareIS7_SD_SA_Lb1EEENS5_ISD_EEE7destroyEPNS_11__tree_nodeISD_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %24, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_3setIS7_NS_4lessIS7_EENS5_IS7_EEEEEENS_19__map_value_compareIS7_SD_SA_Lb1EEENS5_ISD_EEE7destroyEPNS_11__tree_nodeISD_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #6
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_3setIS7_NS_4lessIS7_EENS5_IS7_EEEEEENS_19__map_value_compareIS7_SD_SA_Lb1EEENS5_ISD_EEE7destroyEPNS_11__tree_nodeISD_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #6
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1, i32 0
  %12 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %13 = bitcast %"class.std::__1::__tree_end_node"* %12 to %"class.std::__1::__tree_node.36"**
  %14 = load %"class.std::__1::__tree_node.36"*, %"class.std::__1::__tree_node.36"** %13, align 8
  tail call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.29"* %11, %"class.std::__1::__tree_node.36"* %14) #6
  %15 = bitcast %"struct.std::__1::pair"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %4
  %20 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  tail call void @_ZdlPv(i8* %21) #7
  br label %22

22:                                               ; preds = %4, %19
  %23 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %23) #7
  br label %24

24:                                               ; preds = %2, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.29"*, %"class.std::__1::__tree_node.36"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.36"* %1, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.36"* %1 to %"class.std::__1::__tree_node.36"**
  %6 = load %"class.std::__1::__tree_node.36"*, %"class.std::__1::__tree_node.36"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.29"* %0, %"class.std::__1::__tree_node.36"* %6) #6
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.36", %"class.std::__1::__tree_node.36"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.36"**
  %9 = load %"class.std::__1::__tree_node.36"*, %"class.std::__1::__tree_node.36"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.29"* %0, %"class.std::__1::__tree_node.36"* %9) #6
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.36", %"class.std::__1::__tree_node.36"* %1, i64 0, i32 1
  %11 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #7
  br label %18

18:                                               ; preds = %4, %15
  %19 = bitcast %"class.std::__1::__tree_node.36"* %1 to i8*
  tail call void @_ZdlPv(i8* %19) #7
  br label %20

20:                                               ; preds = %2, %18
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare void @_ZN3IPC8MessageTI45ExtensionHostMsg_ContentScriptsExecuting_MetaNSt3__15tupleIJNS2_3mapINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS2_3setISA_NS2_4lessISA_EENS8_ISA_EEEESD_NS8_INS2_4pairIKSA_SF_EEEEEE4GURLEEEvEC2ENS_7RoutingERKSK_RKSL_(%"class.IPC::MessageT"*, i32, %"class.std::__1::map"* dereferenceable(24), %class.GURL* dereferenceable(120)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
