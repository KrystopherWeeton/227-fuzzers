; ModuleID = '../../third_party/blink/renderer/platform/wtf/text/text_codec_user_defined.cc'
source_filename = "../../third_party/blink/renderer/platform/wtf/text/text_codec_user_defined.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::TextCodec" = type { i32 (...)** }
%"class.WTF::TextEncoding" = type opaque
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::TextCodecUserDefined" = type { %"class.WTF::TextCodec" }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon, i32, i8, i8, [2 x i8] }>
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%union.anon = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [16 x i8] }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.WTF::Vector.2" = type { %"class.WTF::VectorBuffer.3" }
%"class.WTF::VectorBuffer.3" = type { %"class.WTF::VectorBufferBase.4", [16 x i8] }
%"class.WTF::VectorBufferBase.4" = type { i16*, i32, i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.9 }
%union.anon.9 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN3WTF13StringBuilder6AppendEDs = comdat any

$_ZN3WTF20TextCodecUserDefined12EncodeCommonIDsEENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPKT_jNS_19UnencodableHandlingE = comdat any

$_ZN3WTF20TextCodecUserDefined12EncodeCommonIhEENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPKT_jNS_19UnencodableHandlingE = comdat any

$_ZN3WTF20TextCodecUserDefinedD0Ev = comdat any

$_ZN3WTF9TextCodec10EncodeIntoEPKhjPhm = comdat any

$_ZN3WTF9TextCodec10EncodeIntoEPKDsjPhm = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_ = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_ = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm = comdat any

$_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm = comdat any

@.str = private unnamed_addr constant [15 x i8] c"x-user-defined\00", align 1
@_ZTVN3WTF20TextCodecUserDefinedE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.WTF::TextCodec"*)* @_ZN3WTF9TextCodecD2Ev to i8*), i8* bitcast (void (%"class.WTF::TextCodecUserDefined"*)* @_ZN3WTF20TextCodecUserDefinedD0Ev to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.WTF::TextCodecUserDefined"*, i8*, i32, i32, i1, i8*)* @_ZN3WTF20TextCodecUserDefined6DecodeEPKcjNS_13FlushBehaviorEbRb to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.WTF::TextCodecUserDefined"*, i16*, i32, i32)* @_ZN3WTF20TextCodecUserDefined6EncodeEPKDsjNS_19UnencodableHandlingE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.WTF::TextCodecUserDefined"*, i8*, i32, i32)* @_ZN3WTF20TextCodecUserDefined6EncodeEPKhjNS_19UnencodableHandlingE to i8*), i8* bitcast ({ i32, i64 } (%"class.WTF::TextCodec"*, i8*, i32, i8*, i64)* @_ZN3WTF9TextCodec10EncodeIntoEPKhjPhm to i8*), i8* bitcast ({ i32, i64 } (%"class.WTF::TextCodec"*, i16*, i32, i8*, i64)* @_ZN3WTF9TextCodec10EncodeIntoEPKDsjPhm to i8*)] }, align 8
@.str.1 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.2 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.4 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.5 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv = private unnamed_addr constant [56 x i8] c"const char *WTF::GetStringWithTypeName() [T = char16_t]\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3WTF20TextCodecUserDefined21RegisterEncodingNamesEPFvPKcS2_E(void (i8*, i8*)* nocapture) local_unnamed_addr #0 align 2 {
  tail call void %0(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0)) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3WTF20TextCodecUserDefined14RegisterCodecsEPFvPKcPFNSt3__110unique_ptrINS_9TextCodecENS3_14default_deleteIS5_EEEERKNS_12TextEncodingEPKvESD_E(void (i8*, %"class.WTF::TextCodec"* (%"class.WTF::TextEncoding"*, i8*)*, i8*)* nocapture) local_unnamed_addr #0 align 2 {
  tail call void %0(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), %"class.WTF::TextCodec"* (%"class.WTF::TextEncoding"*, i8*)* nonnull @_ZN3WTFL34NewStreamingTextDecoderUserDefinedERKNS_12TextEncodingEPKv, i8* null) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.WTF::TextCodec"* @_ZN3WTFL34NewStreamingTextDecoderUserDefinedERKNS_12TextEncodingEPKv(%"class.WTF::TextEncoding"* nocapture readnone, i8* nocapture readnone) #0 {
  %3 = tail call noalias i8* @malloc(i64 8) #9
  %4 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN3WTF20TextCodecUserDefinedE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = bitcast i8* %3 to %"class.WTF::TextCodec"*
  ret %"class.WTF::TextCodec"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN3WTF20TextCodecUserDefined6DecodeEPKcjNS_13FlushBehaviorEbRb(%"class.WTF::TextCodecUserDefined"* nocapture readnone, i8* nocapture readonly, i32, i32, i1 zeroext, i8* nocapture readnone dereferenceable(1)) unnamed_addr #0 align 2 {
  %7 = alloca %"class.WTF::StringBuilder", align 8
  %8 = bitcast %"class.WTF::StringBuilder"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %8) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 48, i1 false)
  %9 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %9, align 8
  %10 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %7, i64 0, i32 1
  %11 = bitcast %union.anon* %10 to i8*
  store i8 0, i8* %11, align 8
  %12 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %7, i64 0, i32 2
  store i32 0, i32* %12, align 8
  %13 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %7, i64 0, i32 3
  store i8 1, i8* %13, align 4
  %14 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %7, i64 0, i32 4
  store i8 0, i8* %14, align 1
  call void @_ZN3WTF13StringBuilder15ReserveCapacityEj(%"class.WTF::StringBuilder"* nonnull %7, i32 %2) #9
  %15 = icmp eq i32 %2, 0
  br i1 %15, label %18, label %16

16:                                               ; preds = %6
  %17 = zext i32 %2 to i64
  br label %36

18:                                               ; preds = %36, %6
  %19 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %7) #9
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %7) #9
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #9
  br label %35

35:                                               ; preds = %18, %31, %34
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %8) #9
  ret %"class.WTF::StringImpl"* %19

36:                                               ; preds = %36, %16
  %37 = phi i64 [ 0, %16 ], [ %42, %36 ]
  %38 = getelementptr inbounds i8, i8* %1, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i16
  %41 = and i16 %40, -2049
  call void @_ZN3WTF13StringBuilder6AppendEDs(%"class.WTF::StringBuilder"* nonnull %7, i16 zeroext %41)
  %42 = add nuw nsw i64 %37, 1
  %43 = icmp eq i64 %42, %17
  br i1 %43, label %18, label %36
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN3WTF13StringBuilder15ReserveCapacityEj(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendEDs(%"class.WTF::StringBuilder"*, i16 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i8, align 1
  %4 = alloca i16, align 2
  store i16 %1, i16* %4, align 2
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = icmp ult i16 %1, 256
  %9 = and i1 %8, %7
  br i1 %9, label %10, label %35

10:                                               ; preds = %2
  %11 = trunc i16 %1 to i8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3)
  store i8 %11, i8* %3, align 1
  %12 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %13 = load i8, i8* %12, align 1, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %16

15:                                               ; preds = %10
  tail call void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"* %0, i32 1) #9
  br label %16

16:                                               ; preds = %15, %10
  %17 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0
  %18 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %19, %21
  br i1 %22, label %30, label %23, !prof !3

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %17, i64 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = zext i32 %19 to i64
  %27 = getelementptr inbounds i8, i8* %25, i64 %26
  store i8 %11, i8* %27, align 1
  %28 = load i32, i32* %18, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %18, align 4
  br label %31

30:                                               ; preds = %16
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector"* %17, i8* nonnull dereferenceable(1) %3) #9
  br label %31

31:                                               ; preds = %23, %30
  %32 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, 1
  store i32 %34, i32* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3)
  br label %62

35:                                               ; preds = %2
  %36 = icmp eq i8 %6, 0
  br i1 %36, label %37, label %41

37:                                               ; preds = %35
  %38 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %39 = load i8, i8* %38, align 1, !range !2
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %37, %35
  tail call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* %0, i32 1) #9
  br label %42

42:                                               ; preds = %37, %41
  %43 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %44 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = icmp eq i32 %45, %47
  br i1 %48, label %56, label %49, !prof !3

49:                                               ; preds = %42
  %50 = bitcast %union.anon* %43 to i16**
  %51 = load i16*, i16** %50, align 8
  %52 = zext i32 %45 to i64
  %53 = getelementptr inbounds i16, i16* %51, i64 %52
  store i16 %1, i16* %53, align 2
  %54 = load i32, i32* %44, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %44, align 4
  br label %58

56:                                               ; preds = %42
  %57 = bitcast %union.anon* %43 to %"class.WTF::Vector.2"*
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.2"* %57, i16* nonnull dereferenceable(2) %4) #9
  br label %58

58:                                               ; preds = %49, %56
  %59 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %60 = load i32, i32* %59, align 8
  %61 = add i32 %60, 1
  store i32 %61, i32* %59, align 8
  br label %62

62:                                               ; preds = %58, %31
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3WTF20TextCodecUserDefined6EncodeEPKDsjNS_19UnencodableHandlingE(%"class.std::__1::basic_string"* noalias sret, %"class.WTF::TextCodecUserDefined"*, i16*, i32, i32) unnamed_addr #0 align 2 {
  tail call void @_ZN3WTF20TextCodecUserDefined12EncodeCommonIDsEENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPKT_jNS_19UnencodableHandlingE(%"class.std::__1::basic_string"* sret %0, %"class.WTF::TextCodecUserDefined"* %1, i16* %2, i32 %3, i32 %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF20TextCodecUserDefined12EncodeCommonIDsEENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPKT_jNS_19UnencodableHandlingE(%"class.std::__1::basic_string"* noalias sret, %"class.WTF::TextCodecUserDefined"*, i16*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca [32 x i8], align 16
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #9
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = zext i32 %3 to i64
  %11 = icmp ult i32 %3, 23
  %12 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  br i1 %11, label %20, label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = add nuw nsw i64 %10, 16
  %17 = and i64 %16, 8589934576
  %18 = tail call i8* @_Znwm(i64 %17) #10
  store i8* %18, i8** %9, align 8
  %19 = or i64 %17, -9223372036854775808
  store i64 %19, i64* %14, align 8
  store i64 %10, i64* %15, align 8
  br label %27

20:                                               ; preds = %5
  %21 = trunc i32 %3 to i8
  %22 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  store i8 %21, i8* %23, align 1
  %24 = icmp eq i32 %3, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %20
  %26 = getelementptr inbounds i8, i8* %8, i64 %10
  store i8 0, i8* %26, align 1
  br label %84

27:                                               ; preds = %20, %13
  %28 = phi i8* [ %18, %13 ], [ %8, %20 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %28, i8 0, i64 %10, i1 false) #9
  %29 = getelementptr inbounds i8, i8* %28, i64 %10
  store i8 0, i8* %29, align 1
  %30 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = and i64 %10, 1
  %33 = icmp eq i32 %3, 1
  br i1 %33, label %36, label %34

34:                                               ; preds = %27
  %35 = sub nsw i64 %10, %32
  br label %56

36:                                               ; preds = %56, %27
  %37 = phi i32 [ undef, %27 ], [ %80, %56 ]
  %38 = phi i64 [ 0, %27 ], [ %81, %56 ]
  %39 = phi i32 [ 0, %27 ], [ %80, %56 ]
  %40 = icmp eq i64 %32, 0
  br i1 %40, label %52, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds i16, i16* %2, i64 %38
  %43 = load i16, i16* %42, align 2
  %44 = trunc i16 %43 to i8
  %45 = load i8, i8* %31, align 1
  %46 = icmp slt i8 %45, 0
  %47 = load i8*, i8** %9, align 8
  %48 = select i1 %46, i8* %47, i8* %8
  %49 = getelementptr inbounds i8, i8* %48, i64 %38
  store i8 %44, i8* %49, align 1
  %50 = zext i16 %43 to i32
  %51 = or i32 %39, %50
  br label %52

52:                                               ; preds = %36, %41
  %53 = phi i32 [ %37, %36 ], [ %51, %41 ]
  %54 = and i32 %53, 65408
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %84, label %86

56:                                               ; preds = %56, %34
  %57 = phi i64 [ 0, %34 ], [ %81, %56 ]
  %58 = phi i32 [ 0, %34 ], [ %80, %56 ]
  %59 = phi i64 [ %35, %34 ], [ %82, %56 ]
  %60 = getelementptr inbounds i16, i16* %2, i64 %57
  %61 = load i16, i16* %60, align 2
  %62 = trunc i16 %61 to i8
  %63 = load i8, i8* %31, align 1
  %64 = icmp slt i8 %63, 0
  %65 = load i8*, i8** %9, align 8
  %66 = select i1 %64, i8* %65, i8* %8
  %67 = getelementptr inbounds i8, i8* %66, i64 %57
  store i8 %62, i8* %67, align 1
  %68 = zext i16 %61 to i32
  %69 = or i32 %58, %68
  %70 = or i64 %57, 1
  %71 = getelementptr inbounds i16, i16* %2, i64 %70
  %72 = load i16, i16* %71, align 2
  %73 = trunc i16 %72 to i8
  %74 = load i8, i8* %31, align 1
  %75 = icmp slt i8 %74, 0
  %76 = load i8*, i8** %9, align 8
  %77 = select i1 %75, i8* %76, i8* %8
  %78 = getelementptr inbounds i8, i8* %77, i64 %70
  store i8 %73, i8* %78, align 1
  %79 = zext i16 %72 to i32
  %80 = or i32 %69, %79
  %81 = add nuw nsw i64 %57, 2
  %82 = add i64 %59, -2
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %36, label %56

84:                                               ; preds = %25, %52
  %85 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* nonnull align 8 %8, i64 24, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #9
  br label %220

86:                                               ; preds = %52
  %87 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64 %10) #9, !noalias !4
  %88 = tail call i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64 %87) #9, !noalias !4
  %89 = ptrtoint i8* %88 to i64
  %90 = trunc i64 %87 to i32
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %88, i8 0, i64 %10, i1 false) #9, !noalias !4
  %91 = getelementptr inbounds [32 x i8], [32 x i8]* %6, i64 0, i64 0
  br label %117

92:                                               ; preds = %212
  %93 = zext i32 %218 to i64
  %94 = icmp ult i32 %218, 23
  br i1 %94, label %103, label %95

95:                                               ; preds = %92
  %96 = add nuw nsw i64 %93, 16
  %97 = and i64 %96, 8589934576
  %98 = call i8* @_Znwm(i64 %97) #10, !noalias !4
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %98, i8** %99, align 8, !alias.scope !4
  %100 = or i64 %97, -9223372036854775808
  %101 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %100, i64* %101, align 8, !alias.scope !4
  %102 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %93, i64* %102, align 8, !alias.scope !4
  br label %109

103:                                              ; preds = %92
  %104 = trunc i32 %218 to i8
  %105 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %106 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %105, i64 0, i32 1, i32 0
  store i8 %104, i8* %106, align 1, !alias.scope !4
  %107 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %108 = icmp eq i32 %218, 0
  br i1 %108, label %111, label %109

109:                                              ; preds = %103, %95
  %110 = phi i8* [ %98, %95 ], [ %107, %103 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %110, i8* align 1 %217, i64 %93, i1 false) #9
  br label %111

111:                                              ; preds = %109, %103
  %112 = phi i8* [ %107, %103 ], [ %110, %109 ]
  %113 = getelementptr inbounds i8, i8* %112, i64 %93
  store i8 0, i8* %113, align 1
  %114 = icmp eq i64 %215, 0
  br i1 %114, label %220, label %115, !prof !7

115:                                              ; preds = %111
  %116 = inttoptr i64 %215 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %116) #9, !noalias !4
  br label %220

117:                                              ; preds = %212, %86
  %118 = phi i32 [ 0, %86 ], [ %147, %212 ]
  %119 = phi i32 [ 0, %86 ], [ %218, %212 ]
  %120 = phi i8* [ %88, %86 ], [ %217, %212 ]
  %121 = phi i32 [ %3, %86 ], [ %216, %212 ]
  %122 = phi i64 [ %89, %86 ], [ %215, %212 ]
  %123 = phi i32 [ %90, %86 ], [ %214, %212 ]
  %124 = phi i32 [ %3, %86 ], [ %213, %212 ]
  %125 = add nuw i32 %118, 1
  %126 = zext i32 %118 to i64
  %127 = getelementptr inbounds i16, i16* %2, i64 %126
  %128 = load i16, i16* %127, align 2, !noalias !4
  %129 = zext i16 %128 to i32
  %130 = and i32 %129, 64512
  %131 = icmp ne i32 %130, 55296
  %132 = icmp eq i32 %125, %3
  %133 = or i1 %132, %131
  br i1 %133, label %146, label %134

134:                                              ; preds = %117
  %135 = zext i32 %125 to i64
  %136 = getelementptr inbounds i16, i16* %2, i64 %135
  %137 = load i16, i16* %136, align 2, !noalias !4
  %138 = zext i16 %137 to i32
  %139 = and i32 %138, 64512
  %140 = icmp eq i32 %139, 56320
  br i1 %140, label %141, label %146

141:                                              ; preds = %134
  %142 = add i32 %118, 2
  %143 = shl nuw nsw i32 %129, 10
  %144 = add nsw i32 %143, -56613888
  %145 = add nsw i32 %144, %138
  br label %146

146:                                              ; preds = %141, %134, %117
  %147 = phi i32 [ %125, %117 ], [ %142, %141 ], [ %125, %134 ]
  %148 = phi i32 [ %129, %117 ], [ %145, %141 ], [ %129, %134 ]
  %149 = icmp sgt i32 %148, 65535
  %150 = zext i1 %149 to i32
  %151 = sub i32 %121, %150
  %152 = shl i32 %148, 24
  %153 = ashr exact i32 %152, 24
  %154 = and i32 %153, 63487
  %155 = icmp eq i32 %154, %148
  br i1 %155, label %156, label %161

156:                                              ; preds = %146
  %157 = trunc i32 %148 to i8
  %158 = add i32 %119, 1
  %159 = zext i32 %119 to i64
  %160 = getelementptr inbounds i8, i8* %120, i64 %159
  store i8 %157, i8* %160, align 1, !noalias !4
  br label %212

161:                                              ; preds = %146
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %91) #9, !noalias !4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %91, i8 -86, i64 32, i1 false) #9, !noalias !4
  %162 = call i32 @_ZN3WTF9TextCodec25GetUnencodableReplacementEjNS_19UnencodableHandlingEPc(i32 %148, i32 %4, i8* nonnull %91) #9, !noalias !4
  %163 = add i32 %151, -1
  %164 = add i32 %163, %162
  %165 = icmp ugt i32 %164, %124
  br i1 %165, label %166, label %203

166:                                              ; preds = %161
  %167 = icmp ult i32 %123, %164
  br i1 %167, label %168, label %192

168:                                              ; preds = %166
  %169 = lshr i32 %123, 2
  %170 = add nuw i32 %123, 1
  %171 = add i32 %170, %169
  %172 = icmp ugt i32 %171, 4
  %173 = select i1 %172, i32 %171, i32 4
  %174 = icmp ugt i32 %173, %164
  %175 = select i1 %174, i32 %173, i32 %164
  %176 = icmp ult i32 %123, %175
  br i1 %176, label %177, label %192, !prof !7

177:                                              ; preds = %168
  %178 = inttoptr i64 %122 to i8*
  %179 = icmp eq i64 %122, 0
  %180 = zext i32 %175 to i64
  %181 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64 %180) #9, !noalias !4
  %182 = call i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64 %181) #9, !noalias !4
  %183 = ptrtoint i8* %182 to i64
  br i1 %179, label %184, label %186

184:                                              ; preds = %177
  %185 = trunc i64 %181 to i32
  br label %192

186:                                              ; preds = %177
  %187 = icmp eq i8* %182, null
  br i1 %187, label %190, label %188, !prof !3

188:                                              ; preds = %186
  %189 = zext i32 %124 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %182, i8* nonnull align 1 %178, i64 %189, i1 false) #9, !noalias !4
  br label %190

190:                                              ; preds = %188, %186
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %178) #9, !noalias !4
  %191 = trunc i64 %181 to i32
  br label %192

192:                                              ; preds = %190, %184, %168, %166
  %193 = phi i32 [ %123, %166 ], [ %185, %184 ], [ %191, %190 ], [ %123, %168 ]
  %194 = phi i64 [ %122, %166 ], [ %183, %184 ], [ %183, %190 ], [ %122, %168 ]
  %195 = inttoptr i64 %194 to i8*
  %196 = zext i32 %124 to i64
  %197 = getelementptr inbounds i8, i8* %195, i64 %196
  %198 = zext i32 %164 to i64
  %199 = getelementptr inbounds i8, i8* %195, i64 %198
  %200 = ptrtoint i8* %199 to i64
  %201 = ptrtoint i8* %197 to i64
  %202 = sub i64 %200, %201
  call void @llvm.memset.p0i8.i64(i8* align 1 %197, i8 0, i64 %202, i1 false) #9, !noalias !4
  br label %203

203:                                              ; preds = %192, %161
  %204 = phi i32 [ %164, %192 ], [ %124, %161 ]
  %205 = phi i32 [ %193, %192 ], [ %123, %161 ]
  %206 = phi i64 [ %194, %192 ], [ %122, %161 ]
  %207 = phi i8* [ %195, %192 ], [ %120, %161 ]
  %208 = zext i32 %119 to i64
  %209 = getelementptr inbounds i8, i8* %207, i64 %208
  %210 = sext i32 %162 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %209, i8* nonnull align 16 %91, i64 %210, i1 false) #9, !noalias !4
  %211 = add i32 %162, %119
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %91) #9, !noalias !4
  br label %212

212:                                              ; preds = %203, %156
  %213 = phi i32 [ %124, %156 ], [ %204, %203 ]
  %214 = phi i32 [ %123, %156 ], [ %205, %203 ]
  %215 = phi i64 [ %122, %156 ], [ %206, %203 ]
  %216 = phi i32 [ %151, %156 ], [ %164, %203 ]
  %217 = phi i8* [ %120, %156 ], [ %207, %203 ]
  %218 = phi i32 [ %158, %156 ], [ %211, %203 ]
  %219 = icmp ult i32 %147, %3
  br i1 %219, label %117, label %92

220:                                              ; preds = %115, %111, %84
  %221 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %222 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %221, i64 0, i32 1, i32 0
  %223 = load i8, i8* %222, align 1
  %224 = icmp slt i8 %223, 0
  br i1 %224, label %225, label %227

225:                                              ; preds = %220
  %226 = load i8*, i8** %9, align 8
  call void @_ZdlPv(i8* %226) #10
  br label %227

227:                                              ; preds = %220, %225
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3WTF20TextCodecUserDefined6EncodeEPKhjNS_19UnencodableHandlingE(%"class.std::__1::basic_string"* noalias sret, %"class.WTF::TextCodecUserDefined"*, i8*, i32, i32) unnamed_addr #0 align 2 {
  tail call void @_ZN3WTF20TextCodecUserDefined12EncodeCommonIhEENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPKT_jNS_19UnencodableHandlingE(%"class.std::__1::basic_string"* sret %0, %"class.WTF::TextCodecUserDefined"* %1, i8* %2, i32 %3, i32 %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF20TextCodecUserDefined12EncodeCommonIhEENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPKT_jNS_19UnencodableHandlingE(%"class.std::__1::basic_string"* noalias sret, %"class.WTF::TextCodecUserDefined"*, i8*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca [32 x i8], align 16
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #9
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = zext i32 %3 to i64
  %11 = icmp ult i32 %3, 23
  %12 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  br i1 %11, label %20, label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = add nuw nsw i64 %10, 16
  %17 = and i64 %16, 8589934576
  %18 = tail call i8* @_Znwm(i64 %17) #10
  store i8* %18, i8** %9, align 8
  %19 = or i64 %17, -9223372036854775808
  store i64 %19, i64* %14, align 8
  store i64 %10, i64* %15, align 8
  br label %27

20:                                               ; preds = %5
  %21 = trunc i32 %3 to i8
  %22 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  store i8 %21, i8* %23, align 1
  %24 = icmp eq i32 %3, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %20
  %26 = getelementptr inbounds i8, i8* %8, i64 %10
  store i8 0, i8* %26, align 1
  br label %81

27:                                               ; preds = %20, %13
  %28 = phi i8* [ %18, %13 ], [ %8, %20 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %28, i8 0, i64 %10, i1 false) #9
  %29 = getelementptr inbounds i8, i8* %28, i64 %10
  store i8 0, i8* %29, align 1
  %30 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = and i64 %10, 1
  %33 = icmp eq i32 %3, 1
  br i1 %33, label %36, label %34

34:                                               ; preds = %27
  %35 = sub nsw i64 %10, %32
  br label %55

36:                                               ; preds = %55, %27
  %37 = phi i32 [ undef, %27 ], [ %77, %55 ]
  %38 = phi i64 [ 0, %27 ], [ %78, %55 ]
  %39 = phi i32 [ 0, %27 ], [ %77, %55 ]
  %40 = icmp eq i64 %32, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds i8, i8* %2, i64 %38
  %43 = load i8, i8* %42, align 1
  %44 = load i8, i8* %31, align 1
  %45 = icmp slt i8 %44, 0
  %46 = load i8*, i8** %9, align 8
  %47 = select i1 %45, i8* %46, i8* %8
  %48 = getelementptr inbounds i8, i8* %47, i64 %38
  store i8 %43, i8* %48, align 1
  %49 = zext i8 %43 to i32
  %50 = or i32 %39, %49
  br label %51

51:                                               ; preds = %36, %41
  %52 = phi i32 [ %37, %36 ], [ %50, %41 ]
  %53 = and i32 %52, 65408
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %81, label %83

55:                                               ; preds = %55, %34
  %56 = phi i64 [ 0, %34 ], [ %78, %55 ]
  %57 = phi i32 [ 0, %34 ], [ %77, %55 ]
  %58 = phi i64 [ %35, %34 ], [ %79, %55 ]
  %59 = getelementptr inbounds i8, i8* %2, i64 %56
  %60 = load i8, i8* %59, align 1
  %61 = load i8, i8* %31, align 1
  %62 = icmp slt i8 %61, 0
  %63 = load i8*, i8** %9, align 8
  %64 = select i1 %62, i8* %63, i8* %8
  %65 = getelementptr inbounds i8, i8* %64, i64 %56
  store i8 %60, i8* %65, align 1
  %66 = zext i8 %60 to i32
  %67 = or i32 %57, %66
  %68 = or i64 %56, 1
  %69 = getelementptr inbounds i8, i8* %2, i64 %68
  %70 = load i8, i8* %69, align 1
  %71 = load i8, i8* %31, align 1
  %72 = icmp slt i8 %71, 0
  %73 = load i8*, i8** %9, align 8
  %74 = select i1 %72, i8* %73, i8* %8
  %75 = getelementptr inbounds i8, i8* %74, i64 %68
  store i8 %70, i8* %75, align 1
  %76 = zext i8 %70 to i32
  %77 = or i32 %67, %76
  %78 = add nuw nsw i64 %56, 2
  %79 = add i64 %58, -2
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %36, label %55

81:                                               ; preds = %25, %51
  %82 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %82, i8* nonnull align 8 %8, i64 24, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #9
  br label %192

83:                                               ; preds = %51
  %84 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64 %10) #9, !noalias !8
  %85 = tail call i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64 %84) #9, !noalias !8
  %86 = ptrtoint i8* %85 to i64
  %87 = trunc i64 %84 to i32
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %85, i8 0, i64 %10, i1 false) #9, !noalias !8
  %88 = getelementptr inbounds [32 x i8], [32 x i8]* %6, i64 0, i64 0
  br label %114

89:                                               ; preds = %184
  %90 = zext i32 %190 to i64
  %91 = icmp ult i32 %190, 23
  br i1 %91, label %100, label %92

92:                                               ; preds = %89
  %93 = add nuw nsw i64 %90, 16
  %94 = and i64 %93, 8589934576
  %95 = call i8* @_Znwm(i64 %94) #10, !noalias !8
  %96 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %95, i8** %96, align 8, !alias.scope !8
  %97 = or i64 %94, -9223372036854775808
  %98 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %97, i64* %98, align 8, !alias.scope !8
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %90, i64* %99, align 8, !alias.scope !8
  br label %106

100:                                              ; preds = %89
  %101 = trunc i32 %190 to i8
  %102 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %103 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %102, i64 0, i32 1, i32 0
  store i8 %101, i8* %103, align 1, !alias.scope !8
  %104 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %105 = icmp eq i32 %190, 0
  br i1 %105, label %108, label %106

106:                                              ; preds = %100, %92
  %107 = phi i8* [ %95, %92 ], [ %104, %100 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %107, i8* align 1 %189, i64 %90, i1 false) #9
  br label %108

108:                                              ; preds = %106, %100
  %109 = phi i8* [ %104, %100 ], [ %107, %106 ]
  %110 = getelementptr inbounds i8, i8* %109, i64 %90
  store i8 0, i8* %110, align 1
  %111 = icmp eq i64 %187, 0
  br i1 %111, label %192, label %112, !prof !7

112:                                              ; preds = %108
  %113 = inttoptr i64 %187 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %113) #9, !noalias !8
  br label %192

114:                                              ; preds = %184, %83
  %115 = phi i64 [ 0, %83 ], [ %122, %184 ]
  %116 = phi i32 [ 0, %83 ], [ %190, %184 ]
  %117 = phi i8* [ %85, %83 ], [ %189, %184 ]
  %118 = phi i32 [ %3, %83 ], [ %188, %184 ]
  %119 = phi i64 [ %86, %83 ], [ %187, %184 ]
  %120 = phi i32 [ %87, %83 ], [ %186, %184 ]
  %121 = phi i32 [ %3, %83 ], [ %185, %184 ]
  %122 = add nuw nsw i64 %115, 1
  %123 = getelementptr inbounds i8, i8* %2, i64 %115
  %124 = load i8, i8* %123, align 1, !noalias !8
  %125 = zext i8 %124 to i32
  %126 = sext i8 %124 to i32
  %127 = and i32 %126, 63487
  %128 = icmp eq i32 %127, %125
  br i1 %128, label %129, label %133

129:                                              ; preds = %114
  %130 = add i32 %116, 1
  %131 = zext i32 %116 to i64
  %132 = getelementptr inbounds i8, i8* %117, i64 %131
  store i8 %124, i8* %132, align 1, !noalias !8
  br label %184

133:                                              ; preds = %114
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %88) #9, !noalias !8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %88, i8 -86, i64 32, i1 false) #9, !noalias !8
  %134 = call i32 @_ZN3WTF9TextCodec25GetUnencodableReplacementEjNS_19UnencodableHandlingEPc(i32 %125, i32 %4, i8* nonnull %88) #9, !noalias !8
  %135 = add i32 %118, -1
  %136 = add i32 %135, %134
  %137 = icmp ugt i32 %136, %121
  br i1 %137, label %138, label %175

138:                                              ; preds = %133
  %139 = icmp ult i32 %120, %136
  br i1 %139, label %140, label %164

140:                                              ; preds = %138
  %141 = lshr i32 %120, 2
  %142 = add nuw i32 %120, 1
  %143 = add i32 %142, %141
  %144 = icmp ugt i32 %143, 4
  %145 = select i1 %144, i32 %143, i32 4
  %146 = icmp ugt i32 %145, %136
  %147 = select i1 %146, i32 %145, i32 %136
  %148 = icmp ult i32 %120, %147
  br i1 %148, label %149, label %164, !prof !7

149:                                              ; preds = %140
  %150 = inttoptr i64 %119 to i8*
  %151 = icmp eq i64 %119, 0
  %152 = zext i32 %147 to i64
  %153 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64 %152) #9, !noalias !8
  %154 = call i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64 %153) #9, !noalias !8
  %155 = ptrtoint i8* %154 to i64
  br i1 %151, label %156, label %158

156:                                              ; preds = %149
  %157 = trunc i64 %153 to i32
  br label %164

158:                                              ; preds = %149
  %159 = icmp eq i8* %154, null
  br i1 %159, label %162, label %160, !prof !3

160:                                              ; preds = %158
  %161 = zext i32 %121 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %154, i8* nonnull align 1 %150, i64 %161, i1 false) #9, !noalias !8
  br label %162

162:                                              ; preds = %160, %158
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %150) #9, !noalias !8
  %163 = trunc i64 %153 to i32
  br label %164

164:                                              ; preds = %162, %156, %140, %138
  %165 = phi i32 [ %120, %138 ], [ %157, %156 ], [ %163, %162 ], [ %120, %140 ]
  %166 = phi i64 [ %119, %138 ], [ %155, %156 ], [ %155, %162 ], [ %119, %140 ]
  %167 = inttoptr i64 %166 to i8*
  %168 = zext i32 %121 to i64
  %169 = getelementptr inbounds i8, i8* %167, i64 %168
  %170 = zext i32 %136 to i64
  %171 = getelementptr inbounds i8, i8* %167, i64 %170
  %172 = ptrtoint i8* %171 to i64
  %173 = ptrtoint i8* %169 to i64
  %174 = sub i64 %172, %173
  call void @llvm.memset.p0i8.i64(i8* align 1 %169, i8 0, i64 %174, i1 false) #9, !noalias !8
  br label %175

175:                                              ; preds = %164, %133
  %176 = phi i32 [ %136, %164 ], [ %121, %133 ]
  %177 = phi i32 [ %165, %164 ], [ %120, %133 ]
  %178 = phi i64 [ %166, %164 ], [ %119, %133 ]
  %179 = phi i8* [ %167, %164 ], [ %117, %133 ]
  %180 = zext i32 %116 to i64
  %181 = getelementptr inbounds i8, i8* %179, i64 %180
  %182 = sext i32 %134 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %181, i8* nonnull align 16 %88, i64 %182, i1 false) #9, !noalias !8
  %183 = add i32 %134, %116
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %88) #9, !noalias !8
  br label %184

184:                                              ; preds = %175, %129
  %185 = phi i32 [ %121, %129 ], [ %176, %175 ]
  %186 = phi i32 [ %120, %129 ], [ %177, %175 ]
  %187 = phi i64 [ %119, %129 ], [ %178, %175 ]
  %188 = phi i32 [ %118, %129 ], [ %136, %175 ]
  %189 = phi i8* [ %117, %129 ], [ %179, %175 ]
  %190 = phi i32 [ %130, %129 ], [ %183, %175 ]
  %191 = icmp eq i64 %122, %10
  br i1 %191, label %89, label %114

192:                                              ; preds = %112, %108, %81
  %193 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %194 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %193, i64 0, i32 1, i32 0
  %195 = load i8, i8* %194, align 1
  %196 = icmp slt i8 %195, 0
  br i1 %196, label %197, label %199

197:                                              ; preds = %192
  %198 = load i8*, i8** %9, align 8
  call void @_ZdlPv(i8* %198) #10
  br label %199

199:                                              ; preds = %192, %197
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3WTF9TextCodecD2Ev(%"class.WTF::TextCodec"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF20TextCodecUserDefinedD0Ev(%"class.WTF::TextCodecUserDefined"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::TextCodecUserDefined", %"class.WTF::TextCodecUserDefined"* %0, i64 0, i32 0
  tail call void @_ZN3WTF9TextCodecD2Ev(%"class.WTF::TextCodec"* %2) #9
  %3 = bitcast %"class.WTF::TextCodecUserDefined"* %0 to i8*
  tail call void @free(i8* %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i32, i64 } @_ZN3WTF9TextCodec10EncodeIntoEPKhjPhm(%"class.WTF::TextCodec"*, i8*, i32, i8*, i64) unnamed_addr #0 comdat align 2 {
  ret { i32, i64 } zeroinitializer
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i32, i64 } @_ZN3WTF9TextCodec10EncodeIntoEPKDsjPhm(%"class.WTF::TextCodec"*, i16*, i32, i8*, i64) unnamed_addr #0 comdat align 2 {
  ret { i32, i64 } zeroinitializer
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #5

declare void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector"*, i8* dereferenceable(1)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8, i8* %7, i64 %10
  %12 = icmp ugt i8* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"* %0, i32 %5) #9
  %14 = load i8*, i8** %6, align 8
  br label %21

15:                                               ; preds = %9
  %16 = ptrtoint i8* %1 to i64
  %17 = ptrtoint i8* %7 to i64
  %18 = sub i64 %16, %17
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"* %0, i32 %5) #9
  %19 = load i8*, i8** %6, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  br label %21

21:                                               ; preds = %13, %15
  %22 = phi i8* [ %14, %13 ], [ %19, %15 ]
  %23 = phi i8* [ %1, %13 ], [ %20, %15 ]
  %24 = load i32, i32* %3, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %22, i64 %25
  %27 = load i8, i8* %23, align 1
  store i8 %27, i8* %26, align 1
  %28 = load i32, i32* %3, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #9
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0), i8* %15, i8* %16) #9
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #9
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %50, !prof !7

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %49

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 16
  br i1 %35, label %36, label %43

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %37) #9
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #9
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = trunc i64 %38 to i32
  br label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %45 = ptrtoint i8* %44 to i64
  %46 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  br label %47

47:                                               ; preds = %43, %36
  %48 = phi i32 [ 16, %43 ], [ %42, %36 ]
  store i32 %48, i32* %6, align 8
  br label %50

49:                                               ; preds = %30
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %27) #9
  br label %50

50:                                               ; preds = %23, %47, %49
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 17
  br i1 %3, label %4, label %26

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = icmp eq i8* %8, %6
  %10 = or i1 %7, %9
  br i1 %10, label %11, label %15

11:                                               ; preds = %4
  %12 = ptrtoint i8* %8 to i64
  %13 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %14, align 8
  br label %51

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0
  %19 = ptrtoint i8* %8 to i64
  %20 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %21, align 8
  %22 = icmp eq i8* %8, null
  br i1 %22, label %25, label %23, !prof !3

23:                                               ; preds = %15
  %24 = zext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %8, i8* nonnull align 1 %6, i64 %24, i1 false) #9
  br label %25

25:                                               ; preds = %23, %15
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer"* %18, i8* nonnull %6) #9
  br label %51

26:                                               ; preds = %2
  %27 = zext i32 %1 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %27) #9
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #9
  %30 = ptrtoint i8* %29 to i64
  %31 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ne i8* %29, null
  %34 = icmp ne i8* %32, null
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %41, !prof !7

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* nonnull align 1 %32, i64 %39, i1 false) #9
  %40 = load i8*, i8** %31, align 8
  br label %41

41:                                               ; preds = %26, %36
  %42 = phi i8* [ %32, %26 ], [ %40, %36 ]
  %43 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %44 = icmp eq i8* %43, %42
  br i1 %44, label %47, label %45, !prof !7

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer"* %46, i8* %42) #9
  br label %47

47:                                               ; preds = %41, %45
  %48 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %30, i64* %48 monotonic, align 8
  %49 = trunc i64 %28 to i32
  %50 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %49, i32* %50, align 8
  br label %51

51:                                               ; preds = %25, %47, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #9
  ret i64 %20
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer"*, i8*) local_unnamed_addr #6 comdat align 2 {
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1) #9
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.2"*, i16* dereferenceable(2)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i16*, i16** %6, align 8
  %8 = icmp ugt i16* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i16, i16* %7, i64 %10
  %12 = icmp ugt i16* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2"* %0, i32 %5) #9
  %14 = load i16*, i16** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint i16* %1 to i64
  %17 = ptrtoint i16* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 1
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2"* %0, i32 %5) #9
  %20 = load i16*, i16** %6, align 8
  %21 = getelementptr inbounds i16, i16* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi i16* [ %14, %13 ], [ %20, %15 ]
  %24 = phi i16* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %23, i64 %26
  %28 = load i16, i16* %24, align 2
  store i16 %28, i16* %27, align 2
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #9
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0), i8* %15, i8* %16) #9
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #9
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !7

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = icmp eq i16* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 8
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %37) #9
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #9
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.2"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 1
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.2"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 8, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2"* %0, i32 %27) #9
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 9
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = icmp eq i16* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to i16*
  %10 = icmp eq i16* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.2"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.2"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !3

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast i16* %6 to i8*
  %27 = shl nuw nsw i64 %25, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %8, i8* nonnull align 2 %26, i64 %27, i1 false) #9
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.3"* %19, i16* nonnull %6) #9
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %30) #9
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #9
  %33 = lshr i64 %31, 1
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne i16* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !7

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast i16* %36 to i8*
  %45 = shl nuw nsw i64 %43, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %32, i8* nonnull align 2 %44, i64 %45, i1 false) #9
  %46 = load i16*, i16** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi i16* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i16*
  %51 = icmp eq i16* %48, %50
  br i1 %51, label %54, label %52, !prof !7

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.3"* %53, i16* %48) #9
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.2"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 1072693248
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1072693248) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 1
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.3"*, i16*) local_unnamed_addr #6 comdat align 2 {
  %3 = bitcast i16* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #9
  ret void
}

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare i32 @_ZN3WTF9TextCodec25GetUnencodableReplacementEjNS_19UnencodableHandlingEPc(i32, i32, i8*) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #9
  ret i64 %20
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN3WTFL24EncodeComplexUserDefinedIDsEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKT_jNS_19UnencodableHandlingE: argument 0"}
!6 = distinct !{!6, !"_ZN3WTFL24EncodeComplexUserDefinedIDsEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKT_jNS_19UnencodableHandlingE"}
!7 = !{!"branch_weights", i32 2000, i32 1}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN3WTFL24EncodeComplexUserDefinedIhEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKT_jNS_19UnencodableHandlingE: argument 0"}
!10 = distinct !{!10, !"_ZN3WTFL24EncodeComplexUserDefinedIhEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKT_jNS_19UnencodableHandlingE"}
