; ModuleID = '../../third_party/libzip/src/lib/zip_file_rename.c'
source_filename = "../../third_party/libzip/src/lib/zip_file_rename.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.zip = type { %struct.zip_source*, i32, %struct.zip_error, i32, i32, i8*, %struct.zip_string*, %struct.zip_string*, i8, i64, i64, %struct.zip_entry*, i32, i32, %struct.zip_source**, %struct.zip_hash*, %struct.zip_progress* }
%struct.zip_source = type { %struct.zip_source*, %union.anon, i8*, %struct.zip_error, i64, i32, i32, i8, %struct.zip*, i32, i8, i8 }
%union.anon = type { i64 (i8*, i8*, i64, i32)* }
%struct.zip_error = type { i32, i32, i8* }
%struct.zip_string = type { i8*, i16, i32, i8*, i32 }
%struct.zip_entry = type { %struct.zip_dirent*, %struct.zip_dirent*, %struct.zip_source*, i8 }
%struct.zip_dirent = type { i32, i8, i8, i8, i16, i16, i16, i32, i64, i32, i64, i64, %struct.zip_string*, %struct.zip_extra_field*, %struct.zip_string*, i32, i16, i32, i64, i16, i16, i8* }
%struct.zip_extra_field = type { %struct.zip_extra_field*, i32, i16, i16, i8* }
%struct.zip_hash = type opaque
%struct.zip_progress = type opaque

; Function Attrs: nounwind ssp uwtable
define hidden i32 @zip_file_rename(%struct.zip*, i64, i8*, i32) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 9
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, %1
  br i1 %7, label %8, label %13

8:                                                ; preds = %4
  %9 = icmp ne i8* %2, null
  br i1 %9, label %10, label %15

10:                                               ; preds = %8
  %11 = tail call i64 @strlen(i8* nonnull %2) #3
  %12 = icmp ugt i64 %11, 65535
  br i1 %12, label %13, label %15

13:                                               ; preds = %4, %10
  %14 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 2
  tail call void @zip_error_set(%struct.zip_error* %14, i32 18, i32 0) #4
  br label %46

15:                                               ; preds = %10, %8
  %16 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 4
  %17 = load i32, i32* %16, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 2
  tail call void @zip_error_set(%struct.zip_error* %21, i32 25, i32 0) #4
  br label %46

22:                                               ; preds = %15
  %23 = tail call i8* @zip_get_name(%struct.zip* %0, i64 %1, i32 0) #4
  %24 = icmp eq i8* %23, null
  br i1 %24, label %46, label %25

25:                                               ; preds = %22
  br i1 %9, label %26, label %33

26:                                               ; preds = %25
  %27 = tail call i64 @strlen(i8* nonnull %2) #3
  %28 = add i64 %27, -1
  %29 = getelementptr inbounds i8, i8* %2, i64 %28
  %30 = load i8, i8* %29, align 1
  %31 = icmp eq i8 %30, 47
  %32 = zext i1 %31 to i32
  br label %33

33:                                               ; preds = %26, %25
  %34 = phi i32 [ 0, %25 ], [ %32, %26 ]
  %35 = tail call i64 @strlen(i8* nonnull %23) #3
  %36 = add i64 %35, -1
  %37 = getelementptr inbounds i8, i8* %23, i64 %36
  %38 = load i8, i8* %37, align 1
  %39 = icmp eq i8 %38, 47
  %40 = zext i1 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %44, label %42

42:                                               ; preds = %33
  %43 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 2
  tail call void @zip_error_set(%struct.zip_error* %43, i32 18, i32 0) #4
  br label %46

44:                                               ; preds = %33
  %45 = tail call i32 @_zip_set_name(%struct.zip* %0, i64 %1, i8* %2, i32 %3) #4
  br label %46

46:                                               ; preds = %22, %44, %42, %20, %13
  %47 = phi i32 [ -1, %13 ], [ -1, %20 ], [ -1, %42 ], [ %45, %44 ], [ -1, %22 ]
  ret i32 %47
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #1

declare void @zip_error_set(%struct.zip_error*, i32, i32) local_unnamed_addr #2

declare i8* @zip_get_name(%struct.zip*, i64, i32) local_unnamed_addr #2

declare i32 @_zip_set_name(%struct.zip*, i64, i8*, i32) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
