; ModuleID = '../../v8/src/zone/zone.cc'
source_filename = "../../v8/src/zone/zone.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::atomic.8" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl.11" }
%"struct.std::__1::__cxx_atomic_impl.11" = type { %"struct.std::__1::__cxx_atomic_base_impl.12" }
%"struct.std::__1::__cxx_atomic_base_impl.12" = type { i32 }
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.2" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type opaque
%"class.v8::internal::Isolate" = type opaque

@.str = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c"!sealed_\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"Zone\00", align 1
@_ZN2v88internal12TracingFlags10zone_statsE = external local_unnamed_addr global %"struct.std::__1::atomic.8", align 4

@_ZN2v88internal4ZoneC1EPNS0_19AccountingAllocatorEPKcb = hidden unnamed_addr alias void (%"class.v8::internal::Zone"*, %"class.v8::internal::AccountingAllocator"*, i8*, i1), void (%"class.v8::internal::Zone"*, %"class.v8::internal::AccountingAllocator"*, i8*, i1)* @_ZN2v88internal4ZoneC2EPNS0_19AccountingAllocatorEPKcb
@_ZN2v88internal4ZoneD1Ev = hidden unnamed_addr alias void (%"class.v8::internal::Zone"*), void (%"class.v8::internal::Zone"*)* @_ZN2v88internal4ZoneD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4ZoneC2EPNS0_19AccountingAllocatorEPKcb(%"class.v8::internal::Zone"*, %"class.v8::internal::AccountingAllocator"*, i8*, i1 zeroext) unnamed_addr #0 align 2 {
  %5 = zext i1 %3 to i8
  %6 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 4
  %7 = bitcast %"class.v8::internal::Zone"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 32, i1 false)
  store %"class.v8::internal::AccountingAllocator"* %1, %"class.v8::internal::AccountingAllocator"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 5
  store %"class.v8::internal::Segment"* null, %"class.v8::internal::Segment"** %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 6
  store i8* %2, i8** %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 7
  store i8 %5, i8* %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 8
  store i8 0, i8* %11, align 1
  %12 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.8", %"struct.std::__1::atomic.8"* @_ZN2v88internal12TracingFlags10zone_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %19, label %14, !prof !2

14:                                               ; preds = %4
  %15 = bitcast %"class.v8::internal::AccountingAllocator"* %1 to void (%"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Zone"*)***
  %16 = load void (%"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Zone"*)**, void (%"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Zone"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Zone"*)*, void (%"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Zone"*)** %16, i64 2
  %18 = load void (%"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Zone"*)*, void (%"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Zone"*)** %17, align 8
  tail call void %18(%"class.v8::internal::AccountingAllocator"* %1, %"class.v8::internal::Zone"* %0) #4
  br label %19

19:                                               ; preds = %4, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4ZoneD2Ev(%"class.v8::internal::Zone"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 5
  %3 = load %"class.v8::internal::Segment"*, %"class.v8::internal::Segment"** %2, align 8
  %4 = icmp eq %"class.v8::internal::Segment"* %3, null
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = ptrtoint %"class.v8::internal::Segment"* %3 to i64
  %9 = sub i64 -24, %8
  %10 = add i64 %9, %7
  %11 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %10, %12
  store i64 %13, i64* %11, align 8
  store %"class.v8::internal::Segment"* null, %"class.v8::internal::Segment"** %2, align 8
  br label %14

14:                                               ; preds = %5, %1
  %15 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 4
  %16 = load %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::AccountingAllocator"** %15, align 8
  %17 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.8", %"struct.std::__1::atomic.8"* @_ZN2v88internal12TracingFlags10zone_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %24, label %19, !prof !2

19:                                               ; preds = %14
  %20 = bitcast %"class.v8::internal::AccountingAllocator"* %16 to void (%"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Zone"*)***
  %21 = load void (%"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Zone"*)**, void (%"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Zone"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Zone"*)*, void (%"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Zone"*)** %21, i64 3
  %23 = load void (%"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Zone"*)*, void (%"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Zone"*)** %22, align 8
  tail call void %23(%"class.v8::internal::AccountingAllocator"* %16, %"class.v8::internal::Zone"* %0) #4
  br label %24

24:                                               ; preds = %19, %14
  br i1 %4, label %37, label %25

25:                                               ; preds = %24
  %26 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 1
  br label %27

27:                                               ; preds = %27, %25
  %28 = phi %"class.v8::internal::Segment"* [ %3, %25 ], [ %30, %27 ]
  %29 = getelementptr inbounds %"class.v8::internal::Segment", %"class.v8::internal::Segment"* %28, i64 0, i32 1
  %30 = load %"class.v8::internal::Segment"*, %"class.v8::internal::Segment"** %29, align 8
  %31 = getelementptr inbounds %"class.v8::internal::Segment", %"class.v8::internal::Segment"* %28, i64 0, i32 2
  %32 = load i64, i64* %31, align 8
  %33 = load i64, i64* %26, align 8
  %34 = sub i64 %33, %32
  store i64 %34, i64* %26, align 8
  %35 = load %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::AccountingAllocator"** %15, align 8
  tail call void @_ZN2v88internal19AccountingAllocator13ReturnSegmentEPNS0_7SegmentEb(%"class.v8::internal::AccountingAllocator"* %35, %"class.v8::internal::Segment"* nonnull %28, i1 zeroext false) #4
  %36 = icmp eq %"class.v8::internal::Segment"* %30, null
  br i1 %36, label %37, label %27

37:                                               ; preds = %27, %24
  %38 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 2
  %39 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 0
  store i64 0, i64* %39, align 8
  %40 = bitcast i64* %38 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 16, i1 false) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4Zone9DeleteAllEv(%"class.v8::internal::Zone"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 5
  %3 = load %"class.v8::internal::Segment"*, %"class.v8::internal::Segment"** %2, align 8
  %4 = icmp eq %"class.v8::internal::Segment"* %3, null
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = ptrtoint %"class.v8::internal::Segment"* %3 to i64
  %9 = sub i64 -24, %8
  %10 = add i64 %9, %7
  %11 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %10, %12
  store i64 %13, i64* %11, align 8
  store %"class.v8::internal::Segment"* null, %"class.v8::internal::Segment"** %2, align 8
  br label %14

14:                                               ; preds = %1, %5
  %15 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 4
  %16 = load %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::AccountingAllocator"** %15, align 8
  %17 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.8", %"struct.std::__1::atomic.8"* @_ZN2v88internal12TracingFlags10zone_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %24, label %19, !prof !2

19:                                               ; preds = %14
  %20 = bitcast %"class.v8::internal::AccountingAllocator"* %16 to void (%"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Zone"*)***
  %21 = load void (%"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Zone"*)**, void (%"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Zone"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Zone"*)*, void (%"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Zone"*)** %21, i64 3
  %23 = load void (%"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Zone"*)*, void (%"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Zone"*)** %22, align 8
  tail call void %23(%"class.v8::internal::AccountingAllocator"* %16, %"class.v8::internal::Zone"* %0) #4
  br label %24

24:                                               ; preds = %14, %19
  br i1 %4, label %37, label %25

25:                                               ; preds = %24
  %26 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 1
  br label %27

27:                                               ; preds = %25, %27
  %28 = phi %"class.v8::internal::Segment"* [ %3, %25 ], [ %30, %27 ]
  %29 = getelementptr inbounds %"class.v8::internal::Segment", %"class.v8::internal::Segment"* %28, i64 0, i32 1
  %30 = load %"class.v8::internal::Segment"*, %"class.v8::internal::Segment"** %29, align 8
  %31 = getelementptr inbounds %"class.v8::internal::Segment", %"class.v8::internal::Segment"* %28, i64 0, i32 2
  %32 = load i64, i64* %31, align 8
  %33 = load i64, i64* %26, align 8
  %34 = sub i64 %33, %32
  store i64 %34, i64* %26, align 8
  %35 = load %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::AccountingAllocator"** %15, align 8
  tail call void @_ZN2v88internal19AccountingAllocator13ReturnSegmentEPNS0_7SegmentEb(%"class.v8::internal::AccountingAllocator"* %35, %"class.v8::internal::Segment"* nonnull %28, i1 zeroext false) #4
  %36 = icmp eq %"class.v8::internal::Segment"* %30, null
  br i1 %36, label %37, label %27

37:                                               ; preds = %27, %24
  %38 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 2
  %39 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 0
  store i64 0, i64* %39, align 8
  %40 = bitcast i64* %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN2v88internal4Zone7AsanNewEm(%"class.v8::internal::Zone"*, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 8
  %4 = load i8, i8* %3, align 1, !range !3
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %7, label %6, !prof !2

6:                                                ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0)) #5
  unreachable

7:                                                ; preds = %2
  %8 = add i64 %1, 7
  %9 = and i64 %8, -8
  %10 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 3
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %13, %11
  %15 = icmp ugt i64 %9, %14
  br i1 %15, label %16, label %18

16:                                               ; preds = %7
  %17 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %0, i64 %9)
  br label %20

18:                                               ; preds = %7
  %19 = add i64 %11, %9
  store i64 %19, i64* %10, align 8
  br label %20

20:                                               ; preds = %18, %16
  %21 = phi i64 [ %17, %16 ], [ %11, %18 ]
  %22 = inttoptr i64 %21 to i8*
  ret i8* %22
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"*, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 5
  %4 = load %"class.v8::internal::Segment"*, %"class.v8::internal::Segment"** %3, align 8
  %5 = icmp eq %"class.v8::internal::Segment"* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::Segment", %"class.v8::internal::Segment"* %4, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = shl i64 %8, 1
  br label %10

10:                                               ; preds = %2, %6
  %11 = phi i64 [ %9, %6 ], [ 0, %2 ]
  %12 = add i64 %11, %1
  %13 = add i64 %12, 32
  %14 = add i64 %1, 32
  %15 = icmp ult i64 %12, %1
  %16 = icmp ult i64 %13, 32
  %17 = or i1 %15, %16
  br i1 %17, label %18, label %19

18:                                               ; preds = %10
  tail call void @_ZN2v88internal2V823FatalProcessOutOfMemoryEPNS0_7IsolateEPKcb(%"class.v8::internal::Isolate"* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i1 zeroext false) #5
  unreachable

19:                                               ; preds = %10
  %20 = icmp ult i64 %13, 8192
  br i1 %20, label %28, label %21

21:                                               ; preds = %19
  %22 = icmp ugt i64 %13, 32767
  br i1 %22, label %23, label %28

23:                                               ; preds = %21
  %24 = icmp ugt i64 %14, 32768
  %25 = select i1 %24, i64 %14, i64 32768
  %26 = icmp ugt i64 %25, 2147483647
  br i1 %26, label %27, label %28

27:                                               ; preds = %23
  call void @_ZN2v88internal2V823FatalProcessOutOfMemoryEPNS0_7IsolateEPKcb(%"class.v8::internal::Isolate"* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i1 zeroext false) #5
  unreachable

28:                                               ; preds = %19, %21, %23
  %29 = phi i64 [ %25, %23 ], [ 8192, %19 ], [ %13, %21 ]
  %30 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 4
  %31 = load %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::AccountingAllocator"** %30, align 8
  %32 = call %"class.v8::internal::Segment"* @_ZN2v88internal19AccountingAllocator15AllocateSegmentEmb(%"class.v8::internal::AccountingAllocator"* %31, i64 %29, i1 zeroext false) #4
  %33 = icmp eq %"class.v8::internal::Segment"* %32, null
  br i1 %33, label %34, label %35

34:                                               ; preds = %28
  call void @_ZN2v88internal2V823FatalProcessOutOfMemoryEPNS0_7IsolateEPKcb(%"class.v8::internal::Isolate"* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i1 zeroext false) #5
  unreachable

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.v8::internal::Segment", %"class.v8::internal::Segment"* %32, i64 0, i32 2
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, %37
  store i64 %40, i64* %38, align 8
  %41 = getelementptr inbounds %"class.v8::internal::Segment", %"class.v8::internal::Segment"* %32, i64 0, i32 0
  store %"class.v8::internal::Zone"* %0, %"class.v8::internal::Zone"** %41, align 8
  %42 = bitcast %"class.v8::internal::Segment"** %3 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"class.v8::internal::Segment", %"class.v8::internal::Segment"* %32, i64 0, i32 1
  %45 = bitcast %"class.v8::internal::Segment"** %44 to i64*
  store i64 %43, i64* %45, align 8
  %46 = load %"class.v8::internal::Segment"*, %"class.v8::internal::Segment"** %3, align 8
  %47 = icmp eq %"class.v8::internal::Segment"* %46, null
  br i1 %47, label %54, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = ptrtoint %"class.v8::internal::Segment"* %46 to i64
  %52 = sub i64 -24, %51
  %53 = add i64 %52, %50
  br label %54

54:                                               ; preds = %35, %48
  %55 = phi i64 [ %53, %48 ], [ 0, %35 ]
  %56 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 0
  %57 = load i64, i64* %56, align 8
  %58 = add i64 %57, %55
  store i64 %58, i64* %56, align 8
  store %"class.v8::internal::Segment"* %32, %"class.v8::internal::Segment"** %3, align 8
  %59 = load %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::AccountingAllocator"** %30, align 8
  %60 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.8", %"struct.std::__1::atomic.8"* @_ZN2v88internal12TracingFlags10zone_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %67, label %62, !prof !2

62:                                               ; preds = %54
  %63 = bitcast %"class.v8::internal::AccountingAllocator"* %59 to void (%"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*)***
  %64 = load void (%"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*)**, void (%"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*)*** %63, align 8
  %65 = getelementptr inbounds void (%"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*)*, void (%"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*)** %64, i64 4
  %66 = load void (%"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*)*, void (%"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*)** %65, align 8
  call void %66(%"class.v8::internal::AccountingAllocator"* %59, %"class.v8::internal::Segment"* nonnull %32) #4
  br label %67

67:                                               ; preds = %54, %62
  %68 = ptrtoint %"class.v8::internal::Segment"* %32 to i64
  %69 = add i64 %68, 31
  %70 = and i64 %69, -8
  %71 = add i64 %70, %1
  %72 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 2
  store i64 %71, i64* %72, align 8
  %73 = load i64, i64* %36, align 8
  %74 = add i64 %73, %68
  %75 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 3
  store i64 %74, i64* %75, align 8
  ret i64 %70
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4Zone13ReleaseMemoryEv(%"class.v8::internal::Zone"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 5
  %3 = load %"class.v8::internal::Segment"*, %"class.v8::internal::Segment"** %2, align 8
  %4 = icmp eq %"class.v8::internal::Segment"* %3, null
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = ptrtoint %"class.v8::internal::Segment"* %3 to i64
  %9 = sub i64 -24, %8
  %10 = add i64 %9, %7
  %11 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %10, %12
  store i64 %13, i64* %11, align 8
  store %"class.v8::internal::Segment"* null, %"class.v8::internal::Segment"** %2, align 8
  br label %14

14:                                               ; preds = %5, %1
  %15 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 4
  %16 = load %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::AccountingAllocator"** %15, align 8
  %17 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.8", %"struct.std::__1::atomic.8"* @_ZN2v88internal12TracingFlags10zone_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %24, label %19, !prof !2

19:                                               ; preds = %14
  %20 = bitcast %"class.v8::internal::AccountingAllocator"* %16 to void (%"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Zone"*)***
  %21 = load void (%"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Zone"*)**, void (%"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Zone"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Zone"*)*, void (%"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Zone"*)** %21, i64 3
  %23 = load void (%"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Zone"*)*, void (%"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Zone"*)** %22, align 8
  tail call void %23(%"class.v8::internal::AccountingAllocator"* %16, %"class.v8::internal::Zone"* %0) #4
  br label %24

24:                                               ; preds = %19, %14
  br i1 %4, label %37, label %25

25:                                               ; preds = %24
  %26 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 1
  br label %27

27:                                               ; preds = %27, %25
  %28 = phi %"class.v8::internal::Segment"* [ %3, %25 ], [ %30, %27 ]
  %29 = getelementptr inbounds %"class.v8::internal::Segment", %"class.v8::internal::Segment"* %28, i64 0, i32 1
  %30 = load %"class.v8::internal::Segment"*, %"class.v8::internal::Segment"** %29, align 8
  %31 = getelementptr inbounds %"class.v8::internal::Segment", %"class.v8::internal::Segment"* %28, i64 0, i32 2
  %32 = load i64, i64* %31, align 8
  %33 = load i64, i64* %26, align 8
  %34 = sub i64 %33, %32
  store i64 %34, i64* %26, align 8
  %35 = load %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::AccountingAllocator"** %15, align 8
  tail call void @_ZN2v88internal19AccountingAllocator13ReturnSegmentEPNS0_7SegmentEb(%"class.v8::internal::AccountingAllocator"* %35, %"class.v8::internal::Segment"* nonnull %28, i1 zeroext false) #4
  %36 = icmp eq %"class.v8::internal::Segment"* %30, null
  br i1 %36, label %37, label %27

37:                                               ; preds = %27, %24
  %38 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 2
  %39 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 0
  store i64 0, i64* %39, align 8
  %40 = bitcast i64* %38 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 16, i1 false) #4
  %41 = load %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::AccountingAllocator"** %15, align 8
  %42 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.8", %"struct.std::__1::atomic.8"* @_ZN2v88internal12TracingFlags10zone_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %49, label %44, !prof !2

44:                                               ; preds = %37
  %45 = bitcast %"class.v8::internal::AccountingAllocator"* %41 to void (%"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Zone"*)***
  %46 = load void (%"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Zone"*)**, void (%"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Zone"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Zone"*)*, void (%"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Zone"*)** %46, i64 2
  %48 = load void (%"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Zone"*)*, void (%"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Zone"*)** %47, align 8
  tail call void %48(%"class.v8::internal::AccountingAllocator"* %41, %"class.v8::internal::Zone"* %0) #4
  br label %49

49:                                               ; preds = %37, %44
  ret void
}

declare void @_ZN2v88internal19AccountingAllocator13ReturnSegmentEPNS0_7SegmentEb(%"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZN2v88internal2V823FatalProcessOutOfMemoryEPNS0_7IsolateEPKcb(%"class.v8::internal::Isolate"*, i8*, i1 zeroext) local_unnamed_addr #1

declare %"class.v8::internal::Segment"* @_ZN2v88internal19AccountingAllocator15AllocateSegmentEmb(%"class.v8::internal::AccountingAllocator"*, i64, i1 zeroext) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind }
attributes #5 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i8 0, i8 2}
