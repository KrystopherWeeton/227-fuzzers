; ModuleID = '../../net/socket/udp_server_socket.cc'
source_filename = "../../net/socket/udp_server_socket.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.net::UDPServerSocket" = type <{ %"class.net::DatagramServerSocket", %"class.net::UDPSocketPosix", i8, i8, i8, [5 x i8] }>
%"class.net::DatagramServerSocket" = type { %"class.net::DatagramSocket" }
%"class.net::DatagramSocket" = type { i32 (...)** }
%"class.net::UDPSocketPosix" = type { i32 (...)**, %"class.std::__1::unique_ptr", %class.scoped_refptr, %"class.std::__1::unique_ptr.2", %"class.std::__1::list", i32, i32, i32, i8, i32, i32, i32, i32, i32, %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11", %"class.base::MessagePumpLibevent::FdWatchController", %"class.base::MessagePumpLibevent::FdWatchController", %"class.net::UDPSocketPosix::ReadWatcher", %"class.net::UDPSocketPosix::WriteWatcher", i8, i8, i8, i32, i32, i32, %"class.base::RepeatingTimer", i8, i32, %class.scoped_refptr.23, %class.scoped_refptr.34, i32, %"class.net::IPEndPoint"*, %class.scoped_refptr.34, i32, %"class.std::__1::unique_ptr.11", %"class.base::OnceCallback", %"class.base::OnceCallback", %"class.net::NetLogWithSource", i64, i8, %"class.net::UDPSocketPosix::ReceivedActivityMonitor", %"class.net::SocketTag", i8, %"class.net::OwnedUDPSocketCount", %"class.base::WeakPtrFactory.48" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.net::UDPSocketPosix::WriteAsyncWatcher"* }
%"class.net::UDPSocketPosix::WriteAsyncWatcher" = type <{ %"class.base::WatchableIOMessagePumpPosix::FdWatcher", %"class.net::UDPSocketPosix"*, i8, [7 x i8] }>
%"class.base::WatchableIOMessagePumpPosix::FdWatcher" = type { i32 (...)** }
%class.scoped_refptr = type { %"class.net::UDPSocketPosixSender"* }
%"class.net::UDPSocketPosixSender" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", i8, [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.net::DatagramBufferPool"* }
%"class.net::DatagramBufferPool" = type { i32 (...)**, i64, %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.5" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { i64 }
%"class.base::MessagePumpLibevent::FdWatchController" = type { %"class.base::WatchableIOMessagePumpPosix::FdWatchControllerInterface", %"class.std::__1::unique_ptr.17", %"class.base::MessagePumpLibevent"*, %"class.base::WatchableIOMessagePumpPosix::FdWatcher"*, i8* }
%"class.base::WatchableIOMessagePumpPosix::FdWatchControllerInterface" = type { i32 (...)**, %"class.base::Location" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %struct.event* }
%struct.event = type opaque
%"class.base::MessagePumpLibevent" = type <{ %"class.base::MessagePump", %"struct.base::MessagePumpLibevent::RunState"*, i8, [7 x i8], %struct.event_base*, i32, i32, %struct.event*, %"class.base::ThreadChecker", [7 x i8] }>
%"class.base::MessagePump" = type { i32 (...)** }
%"struct.base::MessagePumpLibevent::RunState" = type <{ %"class.base::MessagePump::Delegate"*, i8, [7 x i8] }>
%"class.base::MessagePump::Delegate" = type { i32 (...)** }
%struct.event_base = type opaque
%"class.base::ThreadChecker" = type { i8 }
%"class.net::UDPSocketPosix::ReadWatcher" = type { %"class.base::WatchableIOMessagePumpPosix::FdWatcher", %"class.net::UDPSocketPosix"* }
%"class.net::UDPSocketPosix::WriteWatcher" = type { %"class.base::WatchableIOMessagePumpPosix::FdWatcher", %"class.net::UDPSocketPosix"* }
%"class.base::RepeatingTimer" = type { %"class.base::internal::TimerBase", %"class.base::RepeatingCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.23, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::TimeDelta" = type { i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.25 }
%class.scoped_refptr.25 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.26", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.26" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.27" }
%"struct.std::__1::atomic.27" = type { %"struct.std::__1::__atomic_base.28" }
%"struct.std::__1::__atomic_base.28" = type { %"struct.std::__1::__atomic_base.29" }
%"struct.std::__1::__atomic_base.29" = type { %"struct.std::__1::__cxx_atomic_impl.30" }
%"struct.std::__1::__cxx_atomic_impl.30" = type { %"struct.std::__1::__cxx_atomic_base_impl.31" }
%"struct.std::__1::__cxx_atomic_base_impl.31" = type { i8 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.32 }
%class.scoped_refptr.32 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.33", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.33" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.23 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.24" }>
%"class.base::RefCountedThreadSafe.24" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%class.scoped_refptr.34 = type { %"class.net::IOBuffer"* }
%"class.net::IOBuffer" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.35", i8* }
%"class.base::RefCountedThreadSafe.35" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.net::IPEndPoint"* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.net::NetLogWithSource" = type { %"struct.net::NetLogSource", %"class.net::NetLog"* }
%"struct.net::NetLogSource" = type { i32, i32, %"class.base::TimeTicks" }
%"class.net::UDPSocketPosix::ReceivedActivityMonitor" = type { i32, i32, %"class.base::RepeatingTimer" }
%"class.net::SocketTag" = type { i8 }
%"class.net::OwnedUDPSocketCount" = type { i8 }
%"class.base::WeakPtrFactory.48" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.net::NetLog" = type { i32 (...)**, %"class.base::Lock", i32, i32, %"class.std::__1::vector", %"class.std::__1::vector.41" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"**, %"class.std::__1::__compressed_pair.36" }
%"class.net::NetLog::ThreadSafeObserver" = type { i32 (...)**, i32, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.net::NetLog::ThreadSafeObserver"** }
%"class.std::__1::vector.41" = type { %"class.std::__1::__vector_base.42" }
%"class.std::__1::__vector_base.42" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.std::__1::__compressed_pair.43" }
%"class.net::NetLog::ThreadSafeCaptureModeObserver" = type { i32 (...)**, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"** }

@_ZTVN3net15UDPServerSocketE = hidden unnamed_addr constant { [26 x i8*] } { [26 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::UDPServerSocket"*)* @_ZN3net15UDPServerSocketD2Ev to i8*), i8* bitcast (void (%"class.net::UDPServerSocket"*)* @_ZN3net15UDPServerSocketD0Ev to i8*), i8* bitcast (void (%"class.net::UDPServerSocket"*)* @_ZN3net15UDPServerSocket5CloseEv to i8*), i8* bitcast (i32 (%"class.net::UDPServerSocket"*, %"class.net::IPEndPoint"*)* @_ZNK3net15UDPServerSocket14GetPeerAddressEPNS_10IPEndPointE to i8*), i8* bitcast (i32 (%"class.net::UDPServerSocket"*, %"class.net::IPEndPoint"*)* @_ZNK3net15UDPServerSocket15GetLocalAddressEPNS_10IPEndPointE to i8*), i8* bitcast (void (%"class.net::UDPServerSocket"*)* @_ZN3net15UDPServerSocket16UseNonBlockingIOEv to i8*), i8* bitcast (i32 (%"class.net::UDPServerSocket"*)* @_ZN3net15UDPServerSocket16SetDoNotFragmentEv to i8*), i8* bitcast (void (%"class.net::UDPServerSocket"*, i1)* @_ZN3net15UDPServerSocket13SetMsgConfirmEb to i8*), i8* bitcast (%"class.net::NetLogWithSource"* (%"class.net::UDPServerSocket"*)* @_ZNK3net15UDPServerSocket6NetLogEv to i8*), i8* bitcast (i32 (%"class.net::UDPServerSocket"*, %"class.net::IPEndPoint"*)* @_ZN3net15UDPServerSocket6ListenERKNS_10IPEndPointE to i8*), i8* bitcast (i32 (%"class.net::UDPServerSocket"*, %"class.net::IOBuffer"*, i32, %"class.net::IPEndPoint"*, %"class.base::OnceCallback"*)* @_ZN3net15UDPServerSocket8RecvFromEPNS_8IOBufferEiPNS_10IPEndPointEN4base12OnceCallbackIFviEEE to i8*), i8* bitcast (i32 (%"class.net::UDPServerSocket"*, %"class.net::IOBuffer"*, i32, %"class.net::IPEndPoint"*, %"class.base::OnceCallback"*)* @_ZN3net15UDPServerSocket6SendToEPNS_8IOBufferEiRKNS_10IPEndPointEN4base12OnceCallbackIFviEEE to i8*), i8* bitcast (i32 (%"class.net::UDPServerSocket"*, i32)* @_ZN3net15UDPServerSocket20SetReceiveBufferSizeEi to i8*), i8* bitcast (i32 (%"class.net::UDPServerSocket"*, i32)* @_ZN3net15UDPServerSocket17SetSendBufferSizeEi to i8*), i8* bitcast (void (%"class.net::UDPServerSocket"*)* @_ZN3net15UDPServerSocket17AllowAddressReuseEv to i8*), i8* bitcast (void (%"class.net::UDPServerSocket"*)* @_ZN3net15UDPServerSocket14AllowBroadcastEv to i8*), i8* bitcast (void (%"class.net::UDPServerSocket"*)* @_ZN3net15UDPServerSocket31AllowAddressSharingForMulticastEv to i8*), i8* bitcast (i32 (%"class.net::UDPServerSocket"*, %"class.net::IPAddress"*)* @_ZNK3net15UDPServerSocket9JoinGroupERKNS_9IPAddressE to i8*), i8* bitcast (i32 (%"class.net::UDPServerSocket"*, %"class.net::IPAddress"*)* @_ZNK3net15UDPServerSocket10LeaveGroupERKNS_9IPAddressE to i8*), i8* bitcast (i32 (%"class.net::UDPServerSocket"*, i32)* @_ZN3net15UDPServerSocket21SetMulticastInterfaceEj to i8*), i8* bitcast (i32 (%"class.net::UDPServerSocket"*, i32)* @_ZN3net15UDPServerSocket22SetMulticastTimeToLiveEi to i8*), i8* bitcast (i32 (%"class.net::UDPServerSocket"*, i1)* @_ZN3net15UDPServerSocket24SetMulticastLoopbackModeEb to i8*), i8* bitcast (i32 (%"class.net::UDPServerSocket"*, i32)* @_ZN3net15UDPServerSocket20SetDiffServCodePointENS_17DiffServCodePointE to i8*), i8* bitcast (void (%"class.net::UDPServerSocket"*)* @_ZN3net15UDPServerSocket16DetachFromThreadEv to i8*)] }, align 8

@_ZN3net15UDPServerSocketC1EPNS_6NetLogERKNS_12NetLogSourceE = hidden unnamed_addr alias void (%"class.net::UDPServerSocket"*, %"class.net::NetLog"*, %"struct.net::NetLogSource"*), void (%"class.net::UDPServerSocket"*, %"class.net::NetLog"*, %"struct.net::NetLogSource"*)* @_ZN3net15UDPServerSocketC2EPNS_6NetLogERKNS_12NetLogSourceE
@_ZN3net15UDPServerSocketD1Ev = hidden unnamed_addr alias void (%"class.net::UDPServerSocket"*), void (%"class.net::UDPServerSocket"*)* @_ZN3net15UDPServerSocketD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15UDPServerSocketC2EPNS_6NetLogERKNS_12NetLogSourceE(%"class.net::UDPServerSocket"*, %"class.net::NetLog"*, %"struct.net::NetLogSource"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.net::UDPServerSocket", %"class.net::UDPServerSocket"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*] }, { [26 x i8*] }* @_ZTVN3net15UDPServerSocketE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.net::UDPServerSocket", %"class.net::UDPServerSocket"* %0, i64 0, i32 1
  tail call void @_ZN3net14UDPSocketPosixC1ENS_14DatagramSocket8BindTypeEPNS_6NetLogERKNS_12NetLogSourceE(%"class.net::UDPSocketPosix"* %5, i32 1, %"class.net::NetLog"* %1, %"struct.net::NetLogSource"* dereferenceable(16) %2) #6
  %6 = getelementptr inbounds %"class.net::UDPServerSocket", %"class.net::UDPServerSocket"* %0, i64 0, i32 2
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %"class.net::UDPServerSocket", %"class.net::UDPServerSocket"* %0, i64 0, i32 3
  store i8 0, i8* %7, align 1
  %8 = getelementptr inbounds %"class.net::UDPServerSocket", %"class.net::UDPServerSocket"* %0, i64 0, i32 4
  store i8 0, i8* %8, align 2
  ret void
}

declare void @_ZN3net14UDPSocketPosixC1ENS_14DatagramSocket8BindTypeEPNS_6NetLogERKNS_12NetLogSourceE(%"class.net::UDPSocketPosix"*, i32, %"class.net::NetLog"*, %"struct.net::NetLogSource"* dereferenceable(16)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15UDPServerSocketD2Ev(%"class.net::UDPServerSocket"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::UDPServerSocket", %"class.net::UDPServerSocket"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*] }, { [26 x i8*] }* @_ZTVN3net15UDPServerSocketE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::UDPServerSocket", %"class.net::UDPServerSocket"* %0, i64 0, i32 1
  tail call void @_ZN3net14UDPSocketPosixD1Ev(%"class.net::UDPSocketPosix"* %3) #6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3net14UDPSocketPosixD1Ev(%"class.net::UDPSocketPosix"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15UDPServerSocketD0Ev(%"class.net::UDPServerSocket"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::UDPServerSocket", %"class.net::UDPServerSocket"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*] }, { [26 x i8*] }* @_ZTVN3net15UDPServerSocketE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::UDPServerSocket", %"class.net::UDPServerSocket"* %0, i64 0, i32 1
  tail call void @_ZN3net14UDPSocketPosixD1Ev(%"class.net::UDPSocketPosix"* %3) #6
  %4 = bitcast %"class.net::UDPServerSocket"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net15UDPServerSocket6ListenERKNS_10IPEndPointE(%"class.net::UDPServerSocket"*, %"class.net::IPEndPoint"* dereferenceable(20)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::UDPServerSocket", %"class.net::UDPServerSocket"* %0, i64 0, i32 1
  %4 = tail call i32 @_ZNK3net10IPEndPoint9GetFamilyEv(%"class.net::IPEndPoint"* %1) #6
  %5 = tail call i32 @_ZN3net14UDPSocketPosix4OpenENS_13AddressFamilyE(%"class.net::UDPSocketPosix"* %3, i32 %4) #6
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %33

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.net::UDPServerSocket", %"class.net::UDPServerSocket"* %0, i64 0, i32 2
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %15, label %11

11:                                               ; preds = %7
  %12 = tail call i32 @_ZN3net14UDPSocketPosix17AllowAddressReuseEv(%"class.net::UDPSocketPosix"* %3) #6
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %15, label %14

14:                                               ; preds = %11
  tail call void @_ZN3net14UDPSocketPosix5CloseEv(%"class.net::UDPSocketPosix"* %3) #6
  br label %33

15:                                               ; preds = %11, %7
  %16 = getelementptr inbounds %"class.net::UDPServerSocket", %"class.net::UDPServerSocket"* %0, i64 0, i32 3
  %17 = load i8, i8* %16, align 1, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %15
  %20 = tail call i32 @_ZN3net14UDPSocketPosix12SetBroadcastEb(%"class.net::UDPSocketPosix"* %3, i1 zeroext true) #6
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %23, label %22

22:                                               ; preds = %19
  tail call void @_ZN3net14UDPSocketPosix5CloseEv(%"class.net::UDPSocketPosix"* %3) #6
  br label %33

23:                                               ; preds = %19, %15
  %24 = getelementptr inbounds %"class.net::UDPServerSocket", %"class.net::UDPServerSocket"* %0, i64 0, i32 4
  %25 = load i8, i8* %24, align 2, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %31, label %27

27:                                               ; preds = %23
  %28 = tail call i32 @_ZN3net14UDPSocketPosix31AllowAddressSharingForMulticastEv(%"class.net::UDPSocketPosix"* %3) #6
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %31, label %30

30:                                               ; preds = %27
  tail call void @_ZN3net14UDPSocketPosix5CloseEv(%"class.net::UDPSocketPosix"* %3) #6
  br label %33

31:                                               ; preds = %27, %23
  %32 = tail call i32 @_ZN3net14UDPSocketPosix4BindERKNS_10IPEndPointE(%"class.net::UDPSocketPosix"* %3, %"class.net::IPEndPoint"* dereferenceable(20) %1) #6
  br label %33

33:                                               ; preds = %2, %31, %30, %22, %14
  %34 = phi i32 [ %12, %14 ], [ %20, %22 ], [ %28, %30 ], [ %32, %31 ], [ %5, %2 ]
  ret i32 %34
}

declare i32 @_ZN3net14UDPSocketPosix4OpenENS_13AddressFamilyE(%"class.net::UDPSocketPosix"*, i32) local_unnamed_addr #1

declare i32 @_ZNK3net10IPEndPoint9GetFamilyEv(%"class.net::IPEndPoint"*) local_unnamed_addr #1

declare i32 @_ZN3net14UDPSocketPosix17AllowAddressReuseEv(%"class.net::UDPSocketPosix"*) local_unnamed_addr #1

declare void @_ZN3net14UDPSocketPosix5CloseEv(%"class.net::UDPSocketPosix"*) local_unnamed_addr #1

declare i32 @_ZN3net14UDPSocketPosix12SetBroadcastEb(%"class.net::UDPSocketPosix"*, i1 zeroext) local_unnamed_addr #1

declare i32 @_ZN3net14UDPSocketPosix31AllowAddressSharingForMulticastEv(%"class.net::UDPSocketPosix"*) local_unnamed_addr #1

declare i32 @_ZN3net14UDPSocketPosix4BindERKNS_10IPEndPointE(%"class.net::UDPSocketPosix"*, %"class.net::IPEndPoint"* dereferenceable(20)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net15UDPServerSocket8RecvFromEPNS_8IOBufferEiPNS_10IPEndPointEN4base12OnceCallbackIFviEEE(%"class.net::UDPServerSocket"*, %"class.net::IOBuffer"*, i32, %"class.net::IPEndPoint"*, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = getelementptr inbounds %"class.net::UDPServerSocket", %"class.net::UDPServerSocket"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  %9 = bitcast %"class.base::OnceCallback"* %4 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.base::OnceCallback"* %6 to i64*
  store i64 %10, i64* %11, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %12 = call i32 @_ZN3net14UDPSocketPosix8RecvFromEPNS_8IOBufferEiPNS_10IPEndPointEN4base12OnceCallbackIFviEEE(%"class.net::UDPSocketPosix"* %7, %"class.net::IOBuffer"* %1, i32 %2, %"class.net::IPEndPoint"* %3, %"class.base::OnceCallback"* nonnull %6) #6
  %13 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %13) #6
  ret i32 %12
}

declare i32 @_ZN3net14UDPSocketPosix8RecvFromEPNS_8IOBufferEiPNS_10IPEndPointEN4base12OnceCallbackIFviEEE(%"class.net::UDPSocketPosix"*, %"class.net::IOBuffer"*, i32, %"class.net::IPEndPoint"*, %"class.base::OnceCallback"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net15UDPServerSocket6SendToEPNS_8IOBufferEiRKNS_10IPEndPointEN4base12OnceCallbackIFviEEE(%"class.net::UDPServerSocket"*, %"class.net::IOBuffer"*, i32, %"class.net::IPEndPoint"* dereferenceable(20), %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = getelementptr inbounds %"class.net::UDPServerSocket", %"class.net::UDPServerSocket"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  %9 = bitcast %"class.base::OnceCallback"* %4 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.base::OnceCallback"* %6 to i64*
  store i64 %10, i64* %11, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %12 = call i32 @_ZN3net14UDPSocketPosix6SendToEPNS_8IOBufferEiRKNS_10IPEndPointEN4base12OnceCallbackIFviEEE(%"class.net::UDPSocketPosix"* %7, %"class.net::IOBuffer"* %1, i32 %2, %"class.net::IPEndPoint"* dereferenceable(20) %3, %"class.base::OnceCallback"* nonnull %6) #6
  %13 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %13) #6
  ret i32 %12
}

declare i32 @_ZN3net14UDPSocketPosix6SendToEPNS_8IOBufferEiRKNS_10IPEndPointEN4base12OnceCallbackIFviEEE(%"class.net::UDPSocketPosix"*, %"class.net::IOBuffer"*, i32, %"class.net::IPEndPoint"* dereferenceable(20), %"class.base::OnceCallback"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net15UDPServerSocket20SetReceiveBufferSizeEi(%"class.net::UDPServerSocket"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::UDPServerSocket", %"class.net::UDPServerSocket"* %0, i64 0, i32 1
  %4 = tail call i32 @_ZN3net14UDPSocketPosix20SetReceiveBufferSizeEi(%"class.net::UDPSocketPosix"* %3, i32 %1) #6
  ret i32 %4
}

declare i32 @_ZN3net14UDPSocketPosix20SetReceiveBufferSizeEi(%"class.net::UDPSocketPosix"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net15UDPServerSocket17SetSendBufferSizeEi(%"class.net::UDPServerSocket"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::UDPServerSocket", %"class.net::UDPServerSocket"* %0, i64 0, i32 1
  %4 = tail call i32 @_ZN3net14UDPSocketPosix17SetSendBufferSizeEi(%"class.net::UDPSocketPosix"* %3, i32 %1) #6
  ret i32 %4
}

declare i32 @_ZN3net14UDPSocketPosix17SetSendBufferSizeEi(%"class.net::UDPSocketPosix"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net15UDPServerSocket16SetDoNotFragmentEv(%"class.net::UDPServerSocket"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::UDPServerSocket", %"class.net::UDPServerSocket"* %0, i64 0, i32 1
  %3 = tail call i32 @_ZN3net14UDPSocketPosix16SetDoNotFragmentEv(%"class.net::UDPSocketPosix"* %2) #6
  ret i32 %3
}

declare i32 @_ZN3net14UDPSocketPosix16SetDoNotFragmentEv(%"class.net::UDPSocketPosix"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15UDPServerSocket13SetMsgConfirmEb(%"class.net::UDPServerSocket"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::UDPServerSocket", %"class.net::UDPServerSocket"* %0, i64 0, i32 1
  tail call void @_ZN3net14UDPSocketPosix13SetMsgConfirmEb(%"class.net::UDPSocketPosix"* %3, i1 zeroext %1) #6
  ret void
}

declare void @_ZN3net14UDPSocketPosix13SetMsgConfirmEb(%"class.net::UDPSocketPosix"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15UDPServerSocket5CloseEv(%"class.net::UDPServerSocket"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::UDPServerSocket", %"class.net::UDPServerSocket"* %0, i64 0, i32 1
  tail call void @_ZN3net14UDPSocketPosix5CloseEv(%"class.net::UDPSocketPosix"* %2) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK3net15UDPServerSocket14GetPeerAddressEPNS_10IPEndPointE(%"class.net::UDPServerSocket"*, %"class.net::IPEndPoint"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::UDPServerSocket", %"class.net::UDPServerSocket"* %0, i64 0, i32 1
  %4 = tail call i32 @_ZNK3net14UDPSocketPosix14GetPeerAddressEPNS_10IPEndPointE(%"class.net::UDPSocketPosix"* %3, %"class.net::IPEndPoint"* %1) #6
  ret i32 %4
}

declare i32 @_ZNK3net14UDPSocketPosix14GetPeerAddressEPNS_10IPEndPointE(%"class.net::UDPSocketPosix"*, %"class.net::IPEndPoint"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK3net15UDPServerSocket15GetLocalAddressEPNS_10IPEndPointE(%"class.net::UDPServerSocket"*, %"class.net::IPEndPoint"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::UDPServerSocket", %"class.net::UDPServerSocket"* %0, i64 0, i32 1
  %4 = tail call i32 @_ZNK3net14UDPSocketPosix15GetLocalAddressEPNS_10IPEndPointE(%"class.net::UDPSocketPosix"* %3, %"class.net::IPEndPoint"* %1) #6
  ret i32 %4
}

declare i32 @_ZNK3net14UDPSocketPosix15GetLocalAddressEPNS_10IPEndPointE(%"class.net::UDPSocketPosix"*, %"class.net::IPEndPoint"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(24) %"class.net::NetLogWithSource"* @_ZNK3net15UDPServerSocket6NetLogEv(%"class.net::UDPServerSocket"* readnone) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.net::UDPServerSocket", %"class.net::UDPServerSocket"* %0, i64 0, i32 1, i32 38
  ret %"class.net::NetLogWithSource"* %2
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net15UDPServerSocket17AllowAddressReuseEv(%"class.net::UDPServerSocket"* nocapture) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.net::UDPServerSocket", %"class.net::UDPServerSocket"* %0, i64 0, i32 2
  store i8 1, i8* %2, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net15UDPServerSocket14AllowBroadcastEv(%"class.net::UDPServerSocket"* nocapture) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.net::UDPServerSocket", %"class.net::UDPServerSocket"* %0, i64 0, i32 3
  store i8 1, i8* %2, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net15UDPServerSocket31AllowAddressSharingForMulticastEv(%"class.net::UDPServerSocket"* nocapture) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.net::UDPServerSocket", %"class.net::UDPServerSocket"* %0, i64 0, i32 4
  store i8 1, i8* %2, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK3net15UDPServerSocket9JoinGroupERKNS_9IPAddressE(%"class.net::UDPServerSocket"*, %"class.net::IPAddress"* dereferenceable(17)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::UDPServerSocket", %"class.net::UDPServerSocket"* %0, i64 0, i32 1
  %4 = tail call i32 @_ZNK3net14UDPSocketPosix9JoinGroupERKNS_9IPAddressE(%"class.net::UDPSocketPosix"* %3, %"class.net::IPAddress"* dereferenceable(17) %1) #6
  ret i32 %4
}

declare i32 @_ZNK3net14UDPSocketPosix9JoinGroupERKNS_9IPAddressE(%"class.net::UDPSocketPosix"*, %"class.net::IPAddress"* dereferenceable(17)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK3net15UDPServerSocket10LeaveGroupERKNS_9IPAddressE(%"class.net::UDPServerSocket"*, %"class.net::IPAddress"* dereferenceable(17)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::UDPServerSocket", %"class.net::UDPServerSocket"* %0, i64 0, i32 1
  %4 = tail call i32 @_ZNK3net14UDPSocketPosix10LeaveGroupERKNS_9IPAddressE(%"class.net::UDPSocketPosix"* %3, %"class.net::IPAddress"* dereferenceable(17) %1) #6
  ret i32 %4
}

declare i32 @_ZNK3net14UDPSocketPosix10LeaveGroupERKNS_9IPAddressE(%"class.net::UDPSocketPosix"*, %"class.net::IPAddress"* dereferenceable(17)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net15UDPServerSocket21SetMulticastInterfaceEj(%"class.net::UDPServerSocket"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::UDPServerSocket", %"class.net::UDPServerSocket"* %0, i64 0, i32 1
  %4 = tail call i32 @_ZN3net14UDPSocketPosix21SetMulticastInterfaceEj(%"class.net::UDPSocketPosix"* %3, i32 %1) #6
  ret i32 %4
}

declare i32 @_ZN3net14UDPSocketPosix21SetMulticastInterfaceEj(%"class.net::UDPSocketPosix"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net15UDPServerSocket22SetMulticastTimeToLiveEi(%"class.net::UDPServerSocket"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::UDPServerSocket", %"class.net::UDPServerSocket"* %0, i64 0, i32 1
  %4 = tail call i32 @_ZN3net14UDPSocketPosix22SetMulticastTimeToLiveEi(%"class.net::UDPSocketPosix"* %3, i32 %1) #6
  ret i32 %4
}

declare i32 @_ZN3net14UDPSocketPosix22SetMulticastTimeToLiveEi(%"class.net::UDPSocketPosix"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net15UDPServerSocket24SetMulticastLoopbackModeEb(%"class.net::UDPServerSocket"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::UDPServerSocket", %"class.net::UDPServerSocket"* %0, i64 0, i32 1
  %4 = tail call i32 @_ZN3net14UDPSocketPosix24SetMulticastLoopbackModeEb(%"class.net::UDPSocketPosix"* %3, i1 zeroext %1) #6
  ret i32 %4
}

declare i32 @_ZN3net14UDPSocketPosix24SetMulticastLoopbackModeEb(%"class.net::UDPSocketPosix"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net15UDPServerSocket20SetDiffServCodePointENS_17DiffServCodePointE(%"class.net::UDPServerSocket"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::UDPServerSocket", %"class.net::UDPServerSocket"* %0, i64 0, i32 1
  %4 = tail call i32 @_ZN3net14UDPSocketPosix20SetDiffServCodePointENS_17DiffServCodePointE(%"class.net::UDPSocketPosix"* %3, i32 %1) #6
  ret i32 %4
}

declare i32 @_ZN3net14UDPSocketPosix20SetDiffServCodePointENS_17DiffServCodePointE(%"class.net::UDPSocketPosix"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15UDPServerSocket16DetachFromThreadEv(%"class.net::UDPServerSocket"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::UDPServerSocket", %"class.net::UDPServerSocket"* %0, i64 0, i32 1
  tail call void @_ZN3net14UDPSocketPosix16DetachFromThreadEv(%"class.net::UDPSocketPosix"* %2) #6
  ret void
}

declare void @_ZN3net14UDPSocketPosix16DetachFromThreadEv(%"class.net::UDPSocketPosix"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3net15UDPServerSocket16UseNonBlockingIOEv(%"class.net::UDPServerSocket"* nocapture) unnamed_addr #4 align 2 {
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
