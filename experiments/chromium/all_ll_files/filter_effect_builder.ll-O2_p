; ModuleID = '../../third_party/blink/renderer/core/paint/filter_effect_builder.cc'
source_filename = "../../third_party/blink/renderer/core/paint/filter_effect_builder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.207", i32, [4 x i8], %"class.std::__1::unique_ptr.345", %"class.std::__1::unique_ptr.345", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.355", %"class.std::__1::unique_ptr.361", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.373", %"class.std::__1::unique_ptr.379", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.29", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.210", %"class.std::__1::unique_ptr.216", %"class.std::__1::unique_ptr.222", %"class.std::__1::unique_ptr.228", %"class.std::__1::unique_ptr.234", %"class.std::__1::unique_ptr.240", %"class.std::__1::unique_ptr.251", %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.265", %"class.std::__1::unique_ptr.272", %"class.std::__1::unique_ptr.279", %"class.std::__1::unique_ptr.279", %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.293", %"class.std::__1::unique_ptr.300", %"class.std::__1::unique_ptr.325", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.210" = type { %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.216" = type { %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.222" = type { %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.228" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.234" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.240" = type { %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.243" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.243" = type { %"struct.std::__1::__atomic_base.244" }
%"struct.std::__1::__atomic_base.244" = type { %"struct.std::__1::__atomic_base.245" }
%"struct.std::__1::__atomic_base.245" = type { %"struct.std::__1::__cxx_atomic_impl.246" }
%"struct.std::__1::__cxx_atomic_impl.246" = type { %"struct.std::__1::__cxx_atomic_base_impl.247" }
%"struct.std::__1::__cxx_atomic_base_impl.247" = type { i64 }
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"class.blink::Worklist.254"* }
%"class.blink::Worklist.254" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.243" }
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"class.blink::Worklist.261"* }
%"class.blink::Worklist.261" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.243" }
%"class.std::__1::unique_ptr.265" = type { %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"struct.std::__1::__compressed_pair_elem.267" = type { %"class.blink::Worklist.268"* }
%"class.blink::Worklist.268" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.243" }
%"class.std::__1::unique_ptr.272" = type { %"class.std::__1::__compressed_pair.273" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.274" }
%"struct.std::__1::__compressed_pair_elem.274" = type { %"class.blink::Worklist.275"* }
%"class.blink::Worklist.275" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.243" }
%"class.std::__1::unique_ptr.279" = type { %"class.std::__1::__compressed_pair.280" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.281" }
%"struct.std::__1::__compressed_pair_elem.281" = type { %"class.blink::Worklist.282"* }
%"class.blink::Worklist.282" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.243" }
%"class.std::__1::unique_ptr.286" = type { %"class.std::__1::__compressed_pair.287" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"struct.std::__1::__compressed_pair_elem.288" = type { %"class.blink::Worklist.289"* }
%"class.blink::Worklist.289" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.243" }
%"class.std::__1::unique_ptr.293" = type { %"class.std::__1::__compressed_pair.294" }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.295" }
%"struct.std::__1::__compressed_pair_elem.295" = type { %"class.blink::Worklist.296"* }
%"class.blink::Worklist.296" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.243" }
%"class.std::__1::unique_ptr.300" = type { %"class.std::__1::__compressed_pair.301" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.302" }
%"struct.std::__1::__compressed_pair_elem.302" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.303", %"class.std::__1::__compressed_pair.312", %"class.std::__1::__compressed_pair.317", %"class.std::__1::__compressed_pair.319", [4 x i8] }>
%"class.std::__1::unique_ptr.303" = type { %"class.std::__1::__compressed_pair.304" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.305", %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.305" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.306" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308" }
%"struct.std::__1::__compressed_pair_elem.308" = type { i64 }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.313" }
%"struct.std::__1::__compressed_pair_elem.313" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.308" }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.320" }
%"struct.std::__1::__compressed_pair_elem.320" = type { float }
%"class.std::__1::unique_ptr.325" = type { %"class.std::__1::__compressed_pair.326" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.327" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.328", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.328" = type { %"class.std::__1::__compressed_pair.329" }
%"class.std::__1::__compressed_pair.329" = type { %"struct.std::__1::__compressed_pair_elem.330" }
%"struct.std::__1::__compressed_pair_elem.330" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.337" }
%"class.WTF::Vector.337" = type { %"class.WTF::VectorBuffer.338" }
%"class.WTF::VectorBuffer.338" = type { %"class.WTF::VectorBufferBase.339" }
%"class.WTF::VectorBufferBase.339" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.345" = type { %"class.std::__1::__compressed_pair.346" }
%"class.std::__1::__compressed_pair.346" = type { %"struct.std::__1::__compressed_pair_elem.347" }
%"struct.std::__1::__compressed_pair_elem.347" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.353" }
%"class.WTF::VectorBuffer.353" = type { %"class.WTF::VectorBufferBase.354" }
%"class.WTF::VectorBufferBase.354" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.355" = type { %"class.std::__1::__compressed_pair.356" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.357" }
%"struct.std::__1::__compressed_pair_elem.357" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.361" = type { %"class.std::__1::__compressed_pair.362" }
%"class.std::__1::__compressed_pair.362" = type { %"struct.std::__1::__compressed_pair_elem.363" }
%"struct.std::__1::__compressed_pair_elem.363" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.367" }
%"class.std::__1::unique_ptr.367" = type { %"class.std::__1::__compressed_pair.368" }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.369" }
%"struct.std::__1::__compressed_pair_elem.369" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.254"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.261"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.268"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.275"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.282"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.617", i64 }
%"class.std::__1::vector.617" = type { %"class.std::__1::__vector_base.618" }
%"class.std::__1::__vector_base.618" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.619" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.619" = type { %"struct.std::__1::__compressed_pair_elem.620" }
%"struct.std::__1::__compressed_pair_elem.620" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.373" = type { %"class.std::__1::__compressed_pair.374" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.379" = type { %"class.std::__1::__compressed_pair.380" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.381" }
%"struct.std::__1::__compressed_pair_elem.381" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.385 }
%class.scoped_refptr.385 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.29" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__cxx_atomic_impl.31" }
%"struct.std::__1::__cxx_atomic_impl.31" = type { %"struct.std::__1::__cxx_atomic_base_impl.32" }
%"struct.std::__1::__cxx_atomic_base_impl.32" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::SVGQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.85 }
%class.scoped_refptr.85 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.63 }
%class.scoped_refptr.63 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.64" }
%"struct.std::__1::atomic.64" = type { %"struct.std::__1::__atomic_base.65" }
%"struct.std::__1::__atomic_base.65" = type { %"struct.std::__1::__atomic_base.66" }
%"struct.std::__1::__atomic_base.66" = type { %"struct.std::__1::__cxx_atomic_impl.67" }
%"struct.std::__1::__cxx_atomic_impl.67" = type { %"struct.std::__1::__cxx_atomic_base_impl.68" }
%"struct.std::__1::__cxx_atomic_base_impl.68" = type { i32 }
%"class.blink::FilterEffectBuilder" = type <{ %"class.blink::FloatRect", float, float, %"class.cc::PaintFlags"*, %"class.cc::PaintFlags"*, i32, [4 x i8] }>
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%"class.cc::PaintFlags" = type <{ %class.sk_sp, %class.sk_sp.1, %class.sk_sp.33, %class.sk_sp.34, %class.sk_sp.35, %class.sk_sp.36, i32, float, float, i32, %union.anon.43, [4 x i8] }>
%class.sk_sp = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.sk_sp.1 = type { %"class.cc::PaintShader"* }
%"class.cc::PaintShader" = type <{ %class.SkRefCnt.base, i8, [3 x i8], i32, float, float, i32, i32, i32, i8, [3 x i8], %"class.absl::optional", %struct.SkPoint, %struct.SkRect, %struct.SkPoint, %struct.SkPoint, float, float, %"class.cc::PaintImage", %class.sk_sp.9, i32, %"class.absl::optional.13", %"class.std::__1::vector", %"class.std::__1::vector.21", %class.sk_sp.28, %class.sk_sp.2, i32, [4 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkRect = type { float, float, float, float }
%struct.SkPoint = type { float, float }
%"class.cc::PaintImage" = type { %class.sk_sp.2, %class.sk_sp.9, %"class.gfx::Rect", i32, %class.sk_sp.11, %class.sk_sp.12, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.2, %class.scoped_refptr }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%class.sk_sp.11 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type opaque
%class.sk_sp.12 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type opaque
%class.scoped_refptr = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%class.sk_sp.9 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.absl::optional.13" = type { %"class.absl::optional_internal::optional_data.14" }
%"class.absl::optional_internal::optional_data.14" = type { %"class.absl::optional_internal::optional_data_base.15" }
%"class.absl::optional_internal::optional_data_base.15" = type { %"class.absl::optional_internal::optional_data_dtor_base.16" }
%"class.absl::optional_internal::optional_data_dtor_base.16" = type { i8, %union.anon.17 }
%union.anon.17 = type { %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { i32* }
%"class.std::__1::vector.21" = type { %"class.std::__1::__vector_base.22" }
%"class.std::__1::__vector_base.22" = type { float*, float*, %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { float* }
%class.sk_sp.28 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.29", [7 x i8] }>
%class.sk_sp.2 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.3, i32, i32 }
%class.sk_sp.3 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.4" }
%"struct.std::__1::atomic.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl.7" }
%"struct.std::__1::__cxx_atomic_impl.7" = type { %"struct.std::__1::__cxx_atomic_base_impl.8" }
%"struct.std::__1::__cxx_atomic_base_impl.8" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.33 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.34 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.35 = type { %class.SkDrawLooper* }
%class.SkDrawLooper = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.36 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.37, i32, %"class.absl::optional.38", i8, i32 }
%class.sk_sp.37 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%"class.absl::optional.38" = type { %"class.absl::optional_internal::optional_data.39" }
%"class.absl::optional_internal::optional_data.39" = type { %"class.absl::optional_internal::optional_data_base.40" }
%"class.absl::optional_internal::optional_data_base.40" = type { %"class.absl::optional_internal::optional_data_dtor_base.41" }
%"class.absl::optional_internal::optional_data_dtor_base.41" = type { i8, %union.anon.42 }
%union.anon.42 = type { %struct.SkRect }
%union.anon.43 = type { i32 }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector", %"class.blink::Member.46", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.36] }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::FilterEffect"* }
%"class.blink::Member.46" = type { %"class.blink::MemberBase.47" }
%"class.blink::MemberBase.47" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.50", %"class.blink::Member" }
%"class.blink::Member.50" = type { %"class.blink::MemberBase.51" }
%"class.blink::MemberBase.51" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type { %"class.blink::FilterEffect", %"class.blink::IntRect" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::IntSize" = type { i32, i32 }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.52" }
%"class.blink::HeapVector.52" = type { %"class.WTF::Vector.55" }
%"class.WTF::Vector.55" = type { %"class.WTF::VectorBuffer.56" }
%"class.WTF::VectorBuffer.56" = type { %"class.WTF::VectorBufferBase.57" }
%"class.WTF::VectorBufferBase.57" = type { %"class.blink::Member.58"*, i32, i32 }
%"class.blink::Member.58" = type { %"class.blink::MemberBase.59" }
%"class.blink::MemberBase.59" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.WTF::Vector.720" = type { %"class.WTF::VectorBuffer.721" }
%"class.WTF::VectorBuffer.721" = type { %"class.WTF::VectorBufferBase.722" }
%"class.WTF::VectorBufferBase.722" = type { float*, i32, i32 }
%"struct.blink::ComponentTransferFunction" = type { i32, float, float, float, float, float, %"class.WTF::Vector.720" }
%"class.blink::Color" = type { i32 }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.69", %"class.blink::Member.46" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.69" = type { %"class.blink::MemberBase.70" }
%"class.blink::MemberBase.70" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.73", %"class.blink::HeapHashMap" }
%"class.blink::Member.73" = type { %"class.blink::MemberBase.74" }
%"class.blink::MemberBase.74" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.86" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.77", %"class.blink::Member.77" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.77", %"class.blink::Member.79", %"class.blink::Member.77", %"class.blink::Member.77", %"class.blink::Member.81" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.79" = type { %"class.blink::MemberBase.80" }
%"class.blink::MemberBase.80" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.104", %"class.blink::Member.106", %"class.blink::Member.79", %"class.blink::Member.108", %"class.blink::Member.108", %"class.blink::Member.130", %"class.blink::Member.132", %"class.blink::Member.134", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.139", %"class.blink::HeapVector.141" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.104" = type { %"class.blink::MemberBase.105" }
%"class.blink::MemberBase.105" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.106" = type { %"class.blink::MemberBase.107" }
%"class.blink::MemberBase.107" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.157", %"class.WTF::Vector.157", i8, i32, %"class.blink::Member.164", %"class.blink::Member.166", %"class.blink::Member.168", %"class.blink::Member.170", %"class.blink::Member.172", %"class.blink::Member.174", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.180", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.186", %"class.blink::Member.188", %"class.blink::Member.147", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.191", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.123", %"class.blink::Member.73", %"class.blink::Member.393", %"class.blink::Member.73", %"class.blink::Member.73", %"class.blink::Member.73", %"class.blink::UserActionElementSet", %"class.blink::Member.402", double, double, i64, i64, %"class.blink::HeapHashSet", %"class.blink::HeapHashSet.409", i16, i8, %"class.blink::Member.416", %"class.blink::Member.418", %"class.blink::Member.420", %"class.blink::Member.422", %"class.blink::TextLinkColors", %"class.blink::Member.424", i8, [7 x i8], %"class.blink::HeapHashMap.426", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.73", %"class.WTF::Vector.433", %"class.blink::Member.438", %"class.blink::Member.440", i8, %"class.blink::Member.73", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.442", %"class.blink::HeapVector.444", %"class.std::__1::unique_ptr.452", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.458", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.471", %"class.WTF::Vector.473", i8, i8, %"class.std::__1::unique_ptr.478", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.123", %"class.blink::HeapVector.484", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.492", i8, i32, %"class.blink::Member.494", %"class.blink::Member.496", %"class.blink::Member.498", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.500", %"class.WTF::HashMap.502", %"class.blink::Member.507", %"class.blink::Member.509", %"class.blink::Member.511", %"class.blink::Member.513", %"class.blink::Member.106", %"class.blink::Member.106", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.515", i8, i32, %"class.blink::Member.522", %"class.blink::Member.524", i32, %"class.blink::Member.526", %"class.blink::Member.528", %"class.blink::Member.530", %"class.std::__1::unique_ptr.532", i64, %"class.std::__1::unique_ptr.538", i32, i32, %"class.blink::Member.553", %"class.blink::Member.555", %"class.blink::Member.557", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.559", %"class.WTF::Vector.561", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.566", %"class.blink::Member.573", %"class.std::__1::unique_ptr.575", %"class.blink::Member.581", i8, i8, %"class.WTF::String", %"class.blink::Member.583", i8, [7 x i8], %"class.blink::HeapHashMap.585", %"class.blink::HeapObserverSet", %"class.blink::Member.599", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.601", i32, i8, i8, %"class.blink::WeakMember.603", %"class.blink::Member.604" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.150" }
%"class.blink::HeapHashMap.150" = type { %"class.WTF::HashMap.153" }
%"class.WTF::HashMap.153" = type { %"class.WTF::HashTable.154" }
%"class.WTF::HashTable.154" = type <{ %"struct.WTF::KeyValuePair.156"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.156" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.157" = type { %"class.WTF::VectorBuffer.158" }
%"class.WTF::VectorBuffer.158" = type { %"class.WTF::VectorBufferBase.159" }
%"class.WTF::VectorBufferBase.159" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.160 }
%class.scoped_refptr.160 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.161", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.161" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.164" = type { %"class.blink::MemberBase.165" }
%"class.blink::MemberBase.165" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.166" = type { %"class.blink::MemberBase.167" }
%"class.blink::MemberBase.167" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.624", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.665", i32, i8, [3 x i8], %"class.blink::HeapVector.667", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.675", %"class.blink::Member.677", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.686", %"class.blink::Member.692", %"class.blink::Member.694", i8, [7 x i8] }>
%"class.blink::Supplementable.624" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.625" }
%"class.blink::HeapHashMap.625" = type { %"class.WTF::HashMap.628" }
%"class.WTF::HashMap.628" = type { %"class.WTF::HashTable.629" }
%"class.WTF::HashTable.629" = type <{ %"struct.WTF::KeyValuePair.631"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.631" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.640" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.632" }
%"class.blink::HeapObserverSet.632" = type { i32, [4 x i8], %"class.blink::HeapHashSet.633" }
%"class.blink::HeapHashSet.633" = type { %"class.WTF::HashSet.636" }
%"class.WTF::HashSet.636" = type { %"class.WTF::HashTable.637" }
%"class.WTF::HashTable.637" = type <{ %"class.blink::WeakMember.639"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.639" = type opaque
%"class.blink::Supplementable.640" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.641" }
%"class.blink::HeapHashMap.641" = type { %"class.WTF::HashMap.644" }
%"class.WTF::HashMap.644" = type { %"class.WTF::HashTable.645" }
%"class.WTF::HashTable.645" = type <{ %"struct.WTF::KeyValuePair.647"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.647" = type { i8*, %"class.blink::Member.1355" }
%"class.blink::Member.1355" = type { %"class.blink::MemberBase.1356" }
%"class.blink::MemberBase.1356" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1357" }
%"class.blink::Member.1357" = type { %"class.blink::MemberBase.1358" }
%"class.blink::MemberBase.1358" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.648, %"class.std::__1::unique_ptr.649", %"class.std::__1::unique_ptr.649", %"class.std::__1::unique_ptr.655", %"class.std::__1::unique_ptr.655", %"class.blink::Member.166", i32, [4 x i8], %"class.WTF::HashSet.661", i32, i32 }
%class.scoped_refptr.648 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.649" = type { %"class.std::__1::__compressed_pair.650" }
%"class.std::__1::__compressed_pair.650" = type { %"struct.std::__1::__compressed_pair_elem.651" }
%"struct.std::__1::__compressed_pair_elem.651" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.655" = type { %"class.std::__1::__compressed_pair.656" }
%"class.std::__1::__compressed_pair.656" = type { %"struct.std::__1::__compressed_pair_elem.657" }
%"struct.std::__1::__compressed_pair_elem.657" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.661" = type { %"class.WTF::HashTable.662" }
%"class.WTF::HashTable.662" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.665" = type { %"class.blink::MemberBase.666" }
%"class.blink::MemberBase.666" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.667" = type { %"class.WTF::Vector.670" }
%"class.WTF::Vector.670" = type { %"class.WTF::VectorBuffer.671" }
%"class.WTF::VectorBuffer.671" = type { %"class.WTF::VectorBufferBase.672" }
%"class.WTF::VectorBufferBase.672" = type { %"class.blink::Member.673"*, i32, i32 }
%"class.blink::Member.673" = type opaque
%"class.blink::Member.675" = type { %"class.blink::MemberBase.676" }
%"class.blink::MemberBase.676" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.677" = type { %"class.blink::MemberBase.678" }
%"class.blink::MemberBase.678" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.679", i32, i32 }
%"class.blink::HeapHashMap.679" = type { %"class.WTF::HashMap.682" }
%"class.WTF::HashMap.682" = type { %"class.WTF::HashTable.683" }
%"class.WTF::HashTable.683" = type <{ %"struct.WTF::KeyValuePair.685"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.685" = type opaque
%"class.std::__1::unique_ptr.686" = type { %"class.std::__1::__compressed_pair.687" }
%"class.std::__1::__compressed_pair.687" = type { %"struct.std::__1::__compressed_pair_elem.688" }
%"struct.std::__1::__compressed_pair_elem.688" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.692" = type { %"class.blink::MemberBase.693" }
%"class.blink::MemberBase.693" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.694" = type { %"class.blink::MemberBase.695" }
%"class.blink::MemberBase.695" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.168" = type { %"class.blink::MemberBase.169" }
%"class.blink::MemberBase.169" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.170" = type { %"class.blink::MemberBase.171" }
%"class.blink::MemberBase.171" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.172" = type { %"class.blink::MemberBase.173" }
%"class.blink::MemberBase.173" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.174" = type { %"class.blink::MemberBase.175" }
%"class.blink::MemberBase.175" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.176" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.176" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"class.blink::KURL"* }
%"class.blink::Member.186" = type { %"class.blink::MemberBase.187" }
%"class.blink::MemberBase.187" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.188" = type { %"class.blink::MemberBase.189" }
%"class.blink::MemberBase.189" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.147" = type { %"class.blink::MemberBase.148" }
%"class.blink::MemberBase.148" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.190 }
%class.scoped_refptr.190 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.191" = type { %"class.WTF::VectorBuffer.192" }
%"class.WTF::VectorBuffer.192" = type { %"class.WTF::VectorBufferBase.193" }
%"class.WTF::VectorBufferBase.193" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.194 }
%class.scoped_refptr.194 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.195", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.195" = type { %"class.base::RefCounted.196" }
%"class.base::RefCounted.196" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.199" }
%"class.blink::HeapHashMap.199" = type { %"class.WTF::HashMap.202" }
%"class.WTF::HashMap.202" = type { %"class.WTF::HashTable.203" }
%"class.WTF::HashTable.203" = type <{ %"struct.WTF::KeyValuePair.205"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.205" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.206" }
%"class.blink::MemberBase.206" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.393" = type { %"class.blink::MemberBase.394" }
%"class.blink::MemberBase.394" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.395" }
%"class.blink::HeapHashMap.395" = type { %"class.WTF::HashMap.398" }
%"class.WTF::HashMap.398" = type { %"class.WTF::HashTable.399" }
%"class.WTF::HashTable.399" = type <{ %"struct.WTF::KeyValuePair.401"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.401" = type opaque
%"class.blink::Member.402" = type { %"class.blink::MemberBase.403" }
%"class.blink::MemberBase.403" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.406" }
%"class.WTF::HashTable.406" = type <{ %"class.blink::WeakMember.408"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.408" = type opaque
%"class.blink::HeapHashSet.409" = type { %"class.WTF::HashSet.412" }
%"class.WTF::HashSet.412" = type { %"class.WTF::HashTable.413" }
%"class.WTF::HashTable.413" = type <{ %"class.blink::WeakMember.415"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.415" = type opaque
%"class.blink::Member.416" = type { %"class.blink::MemberBase.417" }
%"class.blink::MemberBase.417" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.418" = type { %"class.blink::MemberBase.419" }
%"class.blink::MemberBase.419" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.420" = type { %"class.blink::MemberBase.421" }
%"class.blink::MemberBase.421" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.422" = type { %"class.blink::MemberBase.423" }
%"class.blink::MemberBase.423" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.424" = type { %"class.blink::MemberBase.425" }
%"class.blink::MemberBase.425" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.426" = type { %"class.WTF::HashMap.429" }
%"class.WTF::HashMap.429" = type { %"class.WTF::HashTable.430" }
%"class.WTF::HashTable.430" = type <{ %"struct.WTF::KeyValuePair.432"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.432" = type opaque
%"class.WTF::Vector.433" = type { %"class.WTF::VectorBuffer.434" }
%"class.WTF::VectorBuffer.434" = type { %"class.WTF::VectorBufferBase.435" }
%"class.WTF::VectorBufferBase.435" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.440" = type { %"class.blink::MemberBase.441" }
%"class.blink::MemberBase.441" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.442" = type { %"class.blink::MemberBase.443" }
%"class.blink::MemberBase.443" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.444" = type { %"class.WTF::Vector.447" }
%"class.WTF::Vector.447" = type { %"class.WTF::VectorBuffer.448" }
%"class.WTF::VectorBuffer.448" = type { %"class.WTF::VectorBufferBase.449" }
%"class.WTF::VectorBufferBase.449" = type { %"class.blink::Member.450"*, i32, i32 }
%"class.blink::Member.450" = type opaque
%"class.std::__1::unique_ptr.452" = type { %"class.std::__1::__compressed_pair.453" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.454" }
%"struct.std::__1::__compressed_pair_elem.454" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.458" = type { %"class.WTF::HashSet.461" }
%"class.WTF::HashSet.461" = type { %"class.WTF::HashTable.462" }
%"class.WTF::HashTable.462" = type <{ %"class.blink::WeakMember.464"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.464" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.465", i32, [4 x i8] }>
%"class.WTF::Vector.465" = type { %"class.WTF::VectorBuffer.466" }
%"class.WTF::VectorBuffer.466" = type { %"class.WTF::VectorBufferBase.467" }
%"class.WTF::VectorBufferBase.467" = type { %"struct.std::__1::pair.468"*, i32, i32 }
%"struct.std::__1::pair.468" = type opaque
%"class.blink::Member.471" = type { %"class.blink::MemberBase.472" }
%"class.blink::MemberBase.472" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.473" = type { %"class.WTF::VectorBuffer.474" }
%"class.WTF::VectorBuffer.474" = type { %"class.WTF::VectorBufferBase.475" }
%"class.WTF::VectorBufferBase.475" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.478" = type { %"class.std::__1::__compressed_pair.479" }
%"class.std::__1::__compressed_pair.479" = type { %"struct.std::__1::__compressed_pair_elem.480" }
%"struct.std::__1::__compressed_pair_elem.480" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.123" = type { %"class.WTF::Vector.126" }
%"class.WTF::Vector.126" = type { %"class.WTF::VectorBuffer.127" }
%"class.WTF::VectorBuffer.127" = type { %"class.WTF::VectorBufferBase.128" }
%"class.WTF::VectorBufferBase.128" = type { %"class.blink::Member.73"*, i32, i32 }
%"class.blink::HeapVector.484" = type { %"class.WTF::Vector.487" }
%"class.WTF::Vector.487" = type { %"class.WTF::VectorBuffer.488" }
%"class.WTF::VectorBuffer.488" = type { %"class.WTF::VectorBufferBase.489" }
%"class.WTF::VectorBufferBase.489" = type { %"class.blink::Member.490"*, i32, i32 }
%"class.blink::Member.490" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.106" }
%"class.blink::Member.492" = type { %"class.blink::MemberBase.493" }
%"class.blink::MemberBase.493" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.494" = type { %"class.blink::MemberBase.495" }
%"class.blink::MemberBase.495" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.496" = type { %"class.blink::MemberBase.497" }
%"class.blink::MemberBase.497" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.498" = type { %"class.blink::MemberBase.499" }
%"class.blink::MemberBase.499" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.500" = type { %"class.blink::MemberBase.501" }
%"class.blink::MemberBase.501" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.502" = type { %"class.WTF::HashTable.503" }
%"class.WTF::HashTable.503" = type <{ %"struct.WTF::KeyValuePair.506"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.506" = type opaque
%"class.blink::Member.507" = type { %"class.blink::MemberBase.508" }
%"class.blink::MemberBase.508" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.509" = type { %"class.blink::MemberBase.510" }
%"class.blink::MemberBase.510" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.511" = type { %"class.blink::MemberBase.512" }
%"class.blink::MemberBase.512" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.513" = type { %"class.blink::MemberBase.514" }
%"class.blink::MemberBase.514" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.392", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.388, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.388 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.389" }>
%"class.base::RefCountedThreadSafe.389" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.390 }
%class.scoped_refptr.390 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.391", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.391" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.4" }
%"class.blink::WeakMember.392" = type { %"class.blink::MemberBase.107" }
%"class.blink::HeapHashSet.515" = type { %"class.WTF::HashSet.518" }
%"class.WTF::HashSet.518" = type { %"class.WTF::HashTable.519" }
%"class.WTF::HashTable.519" = type <{ %"class.blink::Member.521"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.521" = type opaque
%"class.blink::Member.522" = type { %"class.blink::MemberBase.523" }
%"class.blink::MemberBase.523" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.524" = type { %"class.blink::MemberBase.525" }
%"class.blink::MemberBase.525" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.526" = type { %"class.blink::MemberBase.527" }
%"class.blink::MemberBase.527" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.528" = type { %"class.blink::MemberBase.529" }
%"class.blink::MemberBase.529" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.530" = type { %"class.blink::MemberBase.531" }
%"class.blink::MemberBase.531" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.532" = type { %"class.std::__1::__compressed_pair.533" }
%"class.std::__1::__compressed_pair.533" = type { %"struct.std::__1::__compressed_pair_elem.534" }
%"struct.std::__1::__compressed_pair_elem.534" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.540" }
%"struct.std::__1::__compressed_pair_elem.540" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.541", %"class.WTF::HashSet.541", %"class.WTF::HashSet.541", %"class.WTF::HashSet.541", %"class.WTF::HashSet.541", %"class.WTF::HashSet.541", i32, [4 x i8], %"class.WTF::HashMap.545", %"class.WTF::HashMap.545", %"class.WTF::HashMap.545", %"class.WTF::HashMap.545", %"class.WTF::HashMap.545", %"class.WTF::HashMap.545", %"class.WTF::HashMap.545", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashSet.541" = type { %"class.WTF::HashTable.542" }
%"class.WTF::HashTable.542" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.545" = type { %"class.WTF::HashTable.546" }
%"class.WTF::HashTable.546" = type <{ %"struct.WTF::KeyValuePair.549"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.549" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.553" = type { %"class.blink::MemberBase.554" }
%"class.blink::MemberBase.554" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.555" = type { %"class.blink::MemberBase.556" }
%"class.blink::MemberBase.556" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.557" = type { %"class.blink::MemberBase.558" }
%"class.blink::MemberBase.558" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.559" = type { %"class.blink::MemberBase.560" }
%"class.blink::MemberBase.560" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.561" = type { %"class.WTF::VectorBuffer.562" }
%"class.WTF::VectorBuffer.562" = type { %"class.WTF::VectorBufferBase.563" }
%"class.WTF::VectorBufferBase.563" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.566" = type { %"class.WTF::HashMap.569" }
%"class.WTF::HashMap.569" = type { %"class.WTF::HashTable.570" }
%"class.WTF::HashTable.570" = type <{ %"struct.WTF::KeyValuePair.572"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.572" = type opaque
%"class.blink::Member.573" = type { %"class.blink::MemberBase.574" }
%"class.blink::MemberBase.574" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.575" = type { %"class.std::__1::__compressed_pair.576" }
%"class.std::__1::__compressed_pair.576" = type { %"struct.std::__1::__compressed_pair_elem.577" }
%"struct.std::__1::__compressed_pair_elem.577" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.581" = type { %"class.blink::MemberBase.582" }
%"class.blink::MemberBase.582" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.583" = type { %"class.blink::MemberBase.584" }
%"class.blink::MemberBase.584" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.585" = type { %"class.WTF::HashMap.588" }
%"class.WTF::HashMap.588" = type { %"class.WTF::HashTable.589" }
%"class.WTF::HashTable.589" = type <{ %"struct.WTF::KeyValuePair.591"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.591" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.592" }
%"class.blink::HeapHashSet.592" = type { %"class.WTF::HashSet.595" }
%"class.WTF::HashSet.595" = type { %"class.WTF::HashTable.596" }
%"class.WTF::HashTable.596" = type <{ %"class.blink::WeakMember.598"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.598" = type opaque
%"class.blink::Member.599" = type { %"class.blink::MemberBase.600" }
%"class.blink::MemberBase.600" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.601" = type { %"class.blink::MemberBase.602" }
%"class.blink::MemberBase.602" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.106", %"class.blink::HeapHashSet.608", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.615", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.608" = type { %"class.WTF::HashSet.611" }
%"class.WTF::HashSet.611" = type { %"class.WTF::HashTable.612" }
%"class.WTF::HashTable.612" = type <{ %"class.blink::Member.614"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.614" = type opaque
%"class.blink::HeapTaskRunnerTimer.615" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.616", { i64, i64 } }
%"class.blink::WeakMember.616" = type { %"class.blink::MemberBase.602" }
%"class.blink::WeakMember.603" = type { %"class.blink::MemberBase.78" }
%"class.blink::MemberBase.78" = type { %"class.blink::Node"* }
%"class.blink::Member.604" = type { %"class.blink::MemberBase.605" }
%"class.blink::MemberBase.605" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.108" = type { %"class.blink::MemberBase.109" }
%"class.blink::MemberBase.109" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.112" }
%"class.blink::HeapHashMap.112" = type { %"class.WTF::HashMap.115" }
%"class.WTF::HashMap.115" = type { %"class.WTF::HashTable.116" }
%"class.WTF::HashTable.116" = type <{ %"struct.WTF::KeyValuePair.118"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.118" = type { %"class.WTF::AtomicString", %"class.blink::Member.119" }
%"class.blink::Member.119" = type { %"class.blink::MemberBase.120" }
%"class.blink::MemberBase.120" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.73", i32, %"class.blink::HeapVector.123" }
%"class.blink::Member.130" = type { %"class.blink::MemberBase.131" }
%"class.blink::MemberBase.131" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.132" = type { %"class.blink::MemberBase.133" }
%"class.blink::MemberBase.133" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.134" = type { %"class.blink::MemberBase.135" }
%"class.blink::MemberBase.135" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.136" }
%"class.blink::Member.136" = type { %"class.blink::MemberBase.137" }
%"class.blink::MemberBase.137" = type { %"class.blink::HeapHashMap.138"* }
%"class.blink::HeapHashMap.138" = type opaque
%"class.blink::Member.139" = type { %"class.blink::MemberBase.140" }
%"class.blink::MemberBase.140" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.141" = type { %"class.WTF::Vector.144" }
%"class.WTF::Vector.144" = type { %"class.WTF::VectorBuffer.145" }
%"class.WTF::VectorBuffer.145" = type { %"class.WTF::VectorBufferBase.146" }
%"class.WTF::VectorBufferBase.146" = type { %"class.blink::Member.147"*, i32, i32 }
%"class.blink::Member.81" = type { %"class.blink::MemberBase.82" }
%"class.blink::MemberBase.82" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.77" = type { %"class.blink::MemberBase.78" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.86" = type { %"class.blink::MemberBase.87" }
%"class.blink::MemberBase.87" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.90", %"class.blink::Member.92", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.90" = type { %"class.WTF::SingleThreadedBitField.91" }
%"class.WTF::SingleThreadedBitField.91" = type { i32 }
%"class.blink::Member.92" = type { %"class.blink::MemberBase.93" }
%"class.blink::MemberBase.93" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.94 }
%class.scoped_refptr.94 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.95", %"class.WTF::AtomicString", %"class.WTF::Vector.97" }
%"class.WTF::RefCounted.95" = type { %"class.base::RefCounted.96" }
%"class.base::RefCounted.96" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.97" = type { %"class.WTF::VectorBuffer.98" }
%"class.WTF::VectorBuffer.98" = type { %"class.WTF::VectorBufferBase.99", [32 x i8] }
%"class.WTF::VectorBufferBase.99" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::SVGFilterGraphNodeMap" = type { %"class.blink::HeapHashMap.698", %"class.blink::HeapHashMap.713" }
%"class.blink::HeapHashMap.698" = type { %"class.WTF::HashMap.701" }
%"class.WTF::HashMap.701" = type { %"class.WTF::HashTable.702" }
%"class.WTF::HashTable.702" = type <{ %"struct.WTF::KeyValuePair.704"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.704" = type { %"class.blink::Member", %"class.blink::Member.705" }
%"class.blink::Member.705" = type { %"class.blink::MemberBase.706" }
%"class.blink::MemberBase.706" = type { %"class.blink::HeapHashSet.707"* }
%"class.blink::HeapHashSet.707" = type { %"class.WTF::HashSet.710" }
%"class.WTF::HashSet.710" = type { %"class.WTF::HashTable.711" }
%"class.WTF::HashTable.711" = type <{ %"class.blink::Member"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.713" = type { %"class.WTF::HashMap.716" }
%"class.WTF::HashMap.716" = type { %"class.WTF::HashTable.717" }
%"class.WTF::HashTable.717" = type <{ %"struct.WTF::KeyValuePair.719"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.719" = type { %"class.blink::WeakMember.1383", %"class.blink::Member" }
%"class.blink::WeakMember.1383" = type { %"class.blink::MemberBase.1384" }
%"class.blink::MemberBase.1384" = type { %"class.blink::SVGFilterPrimitiveStandardAttributes"* }
%"class.blink::SVGFilterPrimitiveStandardAttributes" = type opaque
%"class.blink::FEColorMatrix" = type { %"class.blink::FilterEffect", i32, %"class.WTF::Vector.720" }
%"class.blink::FEComponentTransfer" = type { %"class.blink::FilterEffect", %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction" }
%"class.blink::Length" = type <{ %union.anon.725, i8, i8, i8, i8 }>
%union.anon.725 = type { i32 }
%"class.blink::FEGaussianBlur" = type { %"class.blink::FilterEffect", float, float }
%"class.blink::FEDropShadow" = type { %"class.blink::FilterEffect", float, float, float, float, %"class.blink::Color", float }
%"class.blink::BoxReflection" = type { i32, float, %class.sk_sp.9, %"class.blink::FloatRect" }
%"class.blink::FEBoxReflect" = type { %"class.blink::FilterEffect", %"class.blink::BoxReflection" }
%"class.blink::ConvolveMatrixFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.blink::IntSize", float, float, %"class.blink::IntPoint", i32, i8, %"class.WTF::Vector.720" }
%"class.blink::FEConvolveMatrix" = type { %"class.blink::FilterEffect", %"class.blink::IntSize", float, float, %"class.blink::IntPoint", i32, i8, %"class.WTF::Vector.720" }
%"class.blink::ComponentTransferFilterOperation" = type { %"class.blink::FilterOperation.base", %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction" }
%"class.blink::SVGFilterBuilder" = type { %"class.blink::HeapHashMap.1348", %"class.blink::HeapHashMap.1348", %"class.blink::FilterEffect"*, %"class.blink::SVGFilterGraphNodeMap"* }
%"class.blink::HeapHashMap.1348" = type { %"class.WTF::HashMap.1351" }
%"class.WTF::HashMap.1351" = type { %"class.WTF::HashTable.1352" }
%"class.WTF::HashTable.1352" = type <{ %"struct.WTF::KeyValuePair.1354"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1354" = type opaque
%"class.blink::SVGFilterElement" = type { %"class.blink::SVGElement", %"class.blink::SVGURIReference", %"class.blink::Member.760", %"class.blink::Member.760", %"class.blink::Member.760", %"class.blink::Member.760", %"class.blink::Member.777", %"class.blink::Member.777" }
%"class.blink::SVGElement" = type { %"class.blink::Element", %"class.blink::HeapHashSet.740", %"class.blink::HeapHashMap.747", %"class.blink::Member.754", %"class.blink::Member.756" }
%"class.blink::HeapHashSet.740" = type { %"class.WTF::HashSet.743" }
%"class.WTF::HashSet.743" = type { %"class.WTF::HashTable.744" }
%"class.WTF::HashTable.744" = type <{ %"class.blink::WeakMember.746"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.746" = type opaque
%"class.blink::HeapHashMap.747" = type { %"class.WTF::HashMap.750" }
%"class.WTF::HashMap.750" = type { %"class.WTF::HashTable.751" }
%"class.WTF::HashTable.751" = type <{ %"struct.WTF::KeyValuePair.753"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.753" = type opaque
%"class.blink::Member.754" = type { %"class.blink::MemberBase.755" }
%"class.blink::MemberBase.755" = type { %"class.blink::SVGElementRareData"* }
%"class.blink::SVGElementRareData" = type opaque
%"class.blink::Member.756" = type { %"class.blink::MemberBase.757" }
%"class.blink::MemberBase.757" = type { %"class.blink::SVGAnimatedString"* }
%"class.blink::SVGAnimatedString" = type opaque
%"class.blink::SVGURIReference" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.758" }
%"class.blink::Member.758" = type { %"class.blink::MemberBase.759" }
%"class.blink::MemberBase.759" = type { %"class.blink::SVGAnimatedHref"* }
%"class.blink::SVGAnimatedHref" = type opaque
%"class.blink::Member.760" = type { %"class.blink::MemberBase.761" }
%"class.blink::MemberBase.761" = type { %"class.blink::SVGAnimatedLength"* }
%"class.blink::SVGAnimatedLength" = type { %"class.blink::ScriptWrappable", %"class.blink::SVGAnimatedProperty" }
%"class.blink::SVGAnimatedProperty" = type { %"class.blink::SVGAnimatedPropertyCommon", %"class.blink::Member.773", %"class.blink::Member.773" }
%"class.blink::SVGAnimatedPropertyCommon" = type { %"class.blink::SVGAnimatedPropertyBase", %"class.blink::Member.764", %"class.blink::Member.764" }
%"class.blink::SVGAnimatedPropertyBase" = type { %"class.blink::GarbageCollectedMixin", i24, %"class.blink::Member.762", %"class.blink::QualifiedName"* }
%"class.blink::Member.762" = type { %"class.blink::MemberBase.763" }
%"class.blink::MemberBase.763" = type { %"class.blink::SVGElement"* }
%"class.blink::Member.764" = type { %"class.blink::MemberBase.765" }
%"class.blink::MemberBase.765" = type { %"class.blink::SVGLength"* }
%"class.blink::SVGLength" = type <{ %"class.blink::SVGListablePropertyBase", %"class.blink::Member.769", i8, [7 x i8] }>
%"class.blink::SVGListablePropertyBase" = type { %"class.blink::SVGPropertyBase", %"class.blink::UntracedMember" }
%"class.blink::SVGPropertyBase" = type { i32 (...)** }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.768" }
%"class.blink::MemberBase.768" = type { %"class.blink::SVGListPropertyBase"* }
%"class.blink::SVGListPropertyBase" = type opaque
%"class.blink::Member.769" = type { %"class.blink::MemberBase.770" }
%"class.blink::MemberBase.770" = type { %"class.blink::CSSPrimitiveValue"* }
%"class.blink::CSSPrimitiveValue" = type { %"class.blink::CSSValue" }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::Member.773" = type { %"class.blink::MemberBase.774" }
%"class.blink::MemberBase.774" = type { %"class.blink::SVGLengthTearOff"* }
%"class.blink::SVGLengthTearOff" = type { %"class.blink::SVGPropertyTearOff" }
%"class.blink::SVGPropertyTearOff" = type { %"class.blink::SVGPropertyTearOffBase.base", %"class.blink::Member.764" }
%"class.blink::SVGPropertyTearOffBase.base" = type <{ %"class.blink::ScriptWrappable", %"class.blink::Member.762", %"class.blink::Member.775", i32 }>
%"class.blink::Member.775" = type { %"class.blink::MemberBase.776" }
%"class.blink::MemberBase.776" = type { %"class.blink::SVGAnimatedPropertyBase"* }
%"class.blink::Member.777" = type { %"class.blink::MemberBase.778" }
%"class.blink::MemberBase.778" = type { %"class.blink::SVGAnimatedEnumeration"* }
%"class.blink::SVGAnimatedEnumeration" = type { %"class.blink::SVGAnimatedEnumerationBase" }
%"class.blink::SVGAnimatedEnumerationBase" = type { %"class.blink::ScriptWrappable", %"class.blink::SVGAnimatedProperty.779" }
%"class.blink::SVGAnimatedProperty.779" = type { %"class.blink::SVGAnimatedPropertyCommon.780" }
%"class.blink::SVGAnimatedPropertyCommon.780" = type { %"class.blink::SVGAnimatedPropertyBase", %"class.blink::Member.781", %"class.blink::Member.781" }
%"class.blink::Member.781" = type { %"class.blink::MemberBase.782" }
%"class.blink::MemberBase.782" = type { %"class.blink::SVGEnumeration"* }
%"class.blink::SVGEnumeration" = type { %"class.blink::SVGPropertyBase", i16, %"class.blink::SVGEnumerationMap"* }
%"class.blink::SVGEnumerationMap" = type opaque
%"class.blink::LayoutSVGResourceContainer" = type { %"class.blink::LayoutSVGHiddenContainer.base", i16, [4 x i8] }
%"class.blink::LayoutSVGHiddenContainer.base" = type { %"class.blink::LayoutSVGContainer.base" }
%"class.blink::LayoutSVGContainer.base" = type <{ %"class.blink::LayoutSVGModelObject", %"class.blink::SVGContentContainer", i8, i8 }>
%"class.blink::LayoutSVGModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr.783, %"class.blink::UntracedMember.1218", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr.783 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.1203", %"class.std::__1::unique_ptr.1205" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.854", %"class.blink::DataRef.934", %"class.blink::DataRef.938", %"class.blink::DataRef.1127", %"class.blink::DataRef.1186", %"class.blink::DataRef.1190", %"class.blink::DataRef.1194", %"class.blink::DataRef.1198", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.784 }
%class.scoped_refptr.784 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted.785", %"class.blink::DataRef.787", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted.785" = type { %"class.base::RefCounted.786" }
%"class.base::RefCounted.786" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.787" = type { %class.scoped_refptr.788 }
%class.scoped_refptr.788 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.789", %"class.blink::Font" }
%"class.WTF::RefCounted.789" = type { %"class.base::RefCounted.790" }
%"class.base::RefCounted.790" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.823 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.792, %class.scoped_refptr.800, %class.scoped_refptr.810, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.822 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.791 }
%class.scoped_refptr.791 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1346", [4 x i8] }>
%"class.WTF::RefCounted.1346" = type { %"class.base::RefCounted.1347" }
%"class.base::RefCounted.1347" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.792 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.798", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.793" }
%"class.WTF::Vector.793" = type { %"class.WTF::VectorBuffer.794" }
%"class.WTF::VectorBuffer.794" = type { %"class.WTF::VectorBufferBase.795" }
%"class.WTF::VectorBufferBase.795" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.798" = type { %"class.base::RefCounted.799" }
%"class.base::RefCounted.799" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.800 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.801", %"class.WTF::RefCounted.808", [4 x i8] }>
%"class.blink::FontSettings.801" = type { %"class.WTF::Vector.802" }
%"class.WTF::Vector.802" = type { %"class.WTF::VectorBuffer.803" }
%"class.WTF::VectorBuffer.803" = type { %"class.WTF::VectorBufferBase.804" }
%"class.WTF::VectorBufferBase.804" = type { %"class.blink::FontTagValuePair.805"*, i32, i32 }
%"class.blink::FontTagValuePair.805" = type { i32, float }
%"class.WTF::RefCounted.808" = type { %"class.base::RefCounted.809" }
%"class.base::RefCounted.809" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.810 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.811", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.819, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.813" }
%"class.std::__1::__compressed_pair.813" = type { %"struct.std::__1::__compressed_pair_elem.814" }
%"struct.std::__1::__compressed_pair_elem.814" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.815 }
%union.anon.815 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.819 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.820", [4 x i8] }>
%"class.WTF::RefCounted.820" = type { %"class.base::RefCounted.821" }
%"class.base::RefCounted.821" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.822 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.823 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.824", %"class.WTF::Vector.826", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.824" = type { %"class.base::RefCounted.825" }
%"class.base::RefCounted.825" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.826" = type { %"class.WTF::VectorBuffer.827" }
%"class.WTF::VectorBuffer.827" = type { %"class.WTF::VectorBufferBase.828", [8 x i8] }
%"class.WTF::VectorBufferBase.828" = type { %class.scoped_refptr.829*, i32, i32 }
%class.scoped_refptr.829 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.830", [4 x i8] }>
%"class.WTF::RefCounted.830" = type { %"class.base::RefCounted.831" }
%"class.base::RefCounted.831" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.841", %class.scoped_refptr.848, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.830" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional.834", %"class.absl::optional.834", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional.834" = type { %"class.absl::optional_internal::optional_data.835" }
%"class.absl::optional_internal::optional_data.835" = type { %"class.absl::optional_internal::optional_data_base.836" }
%"class.absl::optional_internal::optional_data_base.836" = type { %"class.absl::optional_internal::optional_data_dtor_base.837" }
%"class.absl::optional_internal::optional_data_dtor_base.837" = type { i8, %union.anon.838 }
%union.anon.838 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp.839, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.840, i8, [7 x i8] }>
%class.sk_sp.839 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.840 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp.839, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.841" = type { %"class.std::__1::__compressed_pair.842" }
%"class.std::__1::__compressed_pair.842" = type { %"struct.std::__1::__compressed_pair_elem.843" }
%"struct.std::__1::__compressed_pair_elem.843" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.844, %class.scoped_refptr.844 }
%class.scoped_refptr.844 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.848 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.849", [4 x i8] }>
%"class.WTF::RefCounted.849" = type { %"class.base::RefCounted.850" }
%"class.base::RefCounted.850" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase.851" }
%"class.blink::PersistentBase.851" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr.852" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr.852" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.853 }
%class.scoped_refptr.853 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.854" = type { %class.scoped_refptr.855 }
%class.scoped_refptr.855 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.856", [4 x i8], %"class.blink::DataRef.858", %"class.blink::DataRef.899", %"class.WTF::Vector.903", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.907, %class.scoped_refptr.916, %"class.blink::Persistent.924", %"class.blink::Persistent.926", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.856" = type { %"class.base::RefCounted.857" }
%"class.base::RefCounted.857" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.858" = type { %class.scoped_refptr.859 }
%class.scoped_refptr.859 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.860", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.862, %class.scoped_refptr.869, %"class.blink::Persistent.886", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.862 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.863", %"class.WTF::Vector.864" }
%"class.base::RefCountedThreadSafe.863" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.864" = type { %"class.WTF::VectorBuffer.865" }
%"class.WTF::VectorBuffer.865" = type { %"class.WTF::VectorBufferBase.866" }
%"class.WTF::VectorBufferBase.866" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.869 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.870", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.870" = type { %"class.base::RefCounted.871" }
%"class.base::RefCounted.871" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap.872", %"class.blink::Persistent.877" }
%"class.WTF::HashMap.872" = type { %"class.WTF::HashTable.873" }
%"class.WTF::HashTable.873" = type <{ %"struct.WTF::KeyValuePair.876"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.876" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1369 }
%class.scoped_refptr.1369 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.1370", %"class.WTF::Vector.1110", %"class.WTF::Vector.1372", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.1370" = type { %"class.base::RefCounted.1371" }
%"class.base::RefCounted.1371" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1110" = type { %"class.WTF::VectorBuffer.1111" }
%"class.WTF::VectorBuffer.1111" = type { %"class.WTF::VectorBufferBase.1112" }
%"class.WTF::VectorBufferBase.1112" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.1372" = type { %"class.WTF::VectorBuffer.1373" }
%"class.WTF::VectorBuffer.1373" = type { %"class.WTF::VectorBufferBase.1374" }
%"class.WTF::VectorBufferBase.1374" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.1375 }
%union.anon.1375 = type { double }
%"class.blink::Persistent.877" = type { %"class.blink::PersistentBase.878" }
%"class.blink::PersistentBase.878" = type { %"class.blink::HeapHashMap.879"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapHashMap.879" = type { %"class.WTF::HashMap.882" }
%"class.WTF::HashMap.882" = type { %"class.WTF::HashTable.883" }
%"class.WTF::HashTable.883" = type <{ %"struct.WTF::KeyValuePair.885"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.885" = type opaque
%"class.blink::Persistent.886" = type { %"class.blink::PersistentBase.887" }
%"class.blink::PersistentBase.887" = type { %"class.blink::HeapVector.888"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapVector.888" = type { %"class.WTF::Vector.891" }
%"class.WTF::Vector.891" = type { %"class.WTF::VectorBuffer.892" }
%"class.WTF::VectorBuffer.892" = type { %"class.WTF::VectorBufferBase.893" }
%"class.WTF::VectorBufferBase.893" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member.894", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member.894" = type { %"class.blink::MemberBase.895" }
%"class.blink::MemberBase.895" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::DataRef.899" = type { %class.scoped_refptr.900 }
%class.scoped_refptr.900 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.901", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.901" = type { %"class.base::RefCounted.902" }
%"class.base::RefCounted.902" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.903" = type { %"class.WTF::VectorBuffer.904" }
%"class.WTF::VectorBuffer.904" = type { %"class.WTF::VectorBufferBase.99" }
%class.scoped_refptr.907 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.908", %"class.WTF::Vector.910" }
%"class.WTF::RefCounted.908" = type { %"class.base::RefCounted.909" }
%"class.base::RefCounted.909" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.910" = type { %"class.WTF::VectorBuffer.911" }
%"class.WTF::VectorBuffer.911" = type { %"class.WTF::VectorBufferBase.912" }
%"class.WTF::VectorBufferBase.912" = type { %"struct.std::__1::pair.913"*, i32, i32 }
%"struct.std::__1::pair.913" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.916 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.917", [4 x i8], %"class.WTF::Vector.919" }
%"class.WTF::RefCounted.917" = type { %"class.base::RefCounted.918" }
%"class.base::RefCounted.918" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.919" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.921", [28 x i8] }>
%"class.WTF::VectorBufferBase.921" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::Persistent.924" = type { %"class.blink::PersistentBase.925" }
%"class.blink::PersistentBase.925" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr" }
%"class.blink::Persistent.926" = type { %"class.blink::PersistentBase.927" }
%"class.blink::PersistentBase.927" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.930", %"class.blink::Member.932" }
%"class.blink::Member.930" = type { %"class.blink::MemberBase.931" }
%"class.blink::MemberBase.931" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.932" = type { %"class.blink::MemberBase.933" }
%"class.blink::MemberBase.933" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.934" = type { %class.scoped_refptr.935 }
%class.scoped_refptr.935 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.936", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.936" = type { %"class.base::RefCounted.937" }
%"class.base::RefCounted.937" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.938" = type { %class.scoped_refptr.939 }
%class.scoped_refptr.939 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.940", [4 x i8], %"class.blink::DataRef.942", %"class.blink::DataRef.997", %"class.blink::TransformOperations", %class.scoped_refptr.916, %"class.blink::Persistent.1121", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.940" = type { %"class.base::RefCounted.941" }
%"class.base::RefCounted.941" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.942" = type { %class.scoped_refptr.943 }
%class.scoped_refptr.943 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.944", [4 x i8], %"class.blink::DataRef.946", %"class.blink::Persistent.984", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.944" = type { %"class.base::RefCounted.945" }
%"class.base::RefCounted.945" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.946" = type { %class.scoped_refptr.947 }
%class.scoped_refptr.947 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.948", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.966, %class.scoped_refptr.969, %class.scoped_refptr.972, %class.scoped_refptr.975, %class.scoped_refptr.976, %class.scoped_refptr.977, %"class.blink::Persistent.984", %"class.blink::Persistent.988", %"class.absl::optional.992", %"class.absl::optional.992", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.948" = type { %"class.base::RefCounted.949" }
%"class.base::RefCounted.949" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.950", %"class.std::__1::unique_ptr.955" }
%"class.WTF::Vector.950" = type { %"class.WTF::VectorBuffer.951" }
%"class.WTF::VectorBuffer.951" = type { %"class.WTF::VectorBufferBase.952" }
%"class.WTF::VectorBufferBase.952" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.955" = type { %"class.std::__1::__compressed_pair.956" }
%"class.std::__1::__compressed_pair.956" = type { %"struct.std::__1::__compressed_pair_elem.957" }
%"struct.std::__1::__compressed_pair_elem.957" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.958", %"class.WTF::Vector.950", i32, i32 }
%"class.WTF::Vector.958" = type { %"class.WTF::VectorBuffer.959" }
%"class.WTF::VectorBuffer.959" = type { %"class.WTF::VectorBufferBase.960" }
%"class.WTF::VectorBufferBase.960" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.966 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.967", [4 x i8] }>
%"class.WTF::RefCounted.967" = type { %"class.base::RefCounted.968" }
%"class.base::RefCounted.968" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.969 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.970", [4 x i8] }>
%"class.WTF::RefCounted.970" = type { %"class.base::RefCounted.971" }
%"class.base::RefCounted.971" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.972 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.973" }>
%"class.WTF::RefCounted.973" = type { %"class.base::RefCounted.974" }
%"class.base::RefCounted.974" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.975 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.976 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.977 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.978", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.978" = type { %"class.base::RefCounted.979" }
%"class.base::RefCounted.979" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.980" }
%"class.blink::DataRef.980" = type { %class.scoped_refptr.981 }
%class.scoped_refptr.981 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.924", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.982" }
%"class.WTF::RefCounted.982" = type { %"class.base::RefCounted.983" }
%"class.base::RefCounted.983" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.988" = type { %"class.blink::PersistentBase.989" }
%"class.blink::PersistentBase.989" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.969, %"class.blink::Member.894", i32, [4 x i8] }>
%"class.absl::optional.992" = type { %"class.absl::optional_internal::optional_data.993" }
%"class.absl::optional_internal::optional_data.993" = type { %"class.absl::optional_internal::optional_data_base.994" }
%"class.absl::optional_internal::optional_data_base.994" = type { %"class.absl::optional_internal::optional_data_dtor_base.995" }
%"class.absl::optional_internal::optional_data_dtor_base.995" = type { i8, [3 x i8], %union.anon.996 }
%union.anon.996 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.984" = type { %"class.blink::PersistentBase.985" }
%"class.blink::PersistentBase.985" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::DataRef.997" = type { %class.scoped_refptr.998 }
%class.scoped_refptr.998 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.999", %"class.blink::DataRef.1001", %"class.blink::DataRef.1005", %"class.blink::DataRef.1014", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.1033", %"class.std::__1::unique_ptr.1044", %"class.std::__1::unique_ptr.1082", %"class.std::__1::unique_ptr.1093", %"class.std::__1::unique_ptr.1104", %"class.WTF::Vector.1110", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.999" = type { %"class.base::RefCounted.1000" }
%"class.base::RefCounted.1000" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1001" = type { %class.scoped_refptr.1002 }
%class.scoped_refptr.1002 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.1003", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1003" = type { %"class.base::RefCounted.1004" }
%"class.base::RefCounted.1004" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1005" = type { %class.scoped_refptr.1006 }
%class.scoped_refptr.1006 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.1007", [4 x i8], %"class.WTF::Vector.1009", i8, [7 x i8] }>
%"class.WTF::RefCounted.1007" = type { %"class.base::RefCounted.1008" }
%"class.base::RefCounted.1008" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1009" = type { %"class.WTF::VectorBuffer.1010" }
%"class.WTF::VectorBuffer.1010" = type { %"class.WTF::VectorBufferBase.1011" }
%"class.WTF::VectorBufferBase.1011" = type { i32*, i32, i32 }
%"class.blink::DataRef.1014" = type { %class.scoped_refptr.1015 }
%class.scoped_refptr.1015 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.1016", [4 x i8], %"class.WTF::HashMap.1018", %"class.WTF::HashMap.1018", %"class.WTF::HashMap.1018", %"class.WTF::HashMap.1018", %"class.WTF::HashMap.1018", %"class.WTF::HashMap.1018", %"class.WTF::HashMap.1023", %"class.WTF::HashMap.1023", %"class.WTF::HashMap.1023", %"class.WTF::HashMap.1023", %"class.WTF::HashMap.1028", %"class.WTF::Vector.950", %"class.WTF::Vector.950", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.1016" = type { %"class.base::RefCounted.1017" }
%"class.base::RefCounted.1017" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.1018" = type { %"class.WTF::HashTable.1019" }
%"class.WTF::HashTable.1019" = type <{ %"struct.WTF::KeyValuePair.1022"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1022" = type { %"class.WTF::String", %"class.WTF::Vector.1359" }
%"class.WTF::Vector.1359" = type { %"class.WTF::VectorBuffer.1360" }
%"class.WTF::VectorBuffer.1360" = type { %"class.WTF::VectorBufferBase.1361" }
%"class.WTF::VectorBufferBase.1361" = type { i64*, i32, i32 }
%"class.WTF::HashMap.1023" = type { %"class.WTF::HashTable.1024" }
%"class.WTF::HashTable.1024" = type <{ %"struct.WTF::KeyValuePair.1027"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1027" = type { i64, %"class.WTF::Vector.1110" }
%"class.WTF::HashMap.1028" = type { %"class.WTF::HashTable.1029" }
%"class.WTF::HashTable.1029" = type <{ %"struct.WTF::KeyValuePair.1032"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1032" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.1033" = type { %"class.std::__1::__compressed_pair.1034" }
%"class.std::__1::__compressed_pair.1034" = type { %"struct.std::__1::__compressed_pair_elem.1035" }
%"struct.std::__1::__compressed_pair_elem.1035" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.1036" }
%"class.WTF::HashMap.1036" = type { %"class.WTF::HashTable.1037" }
%"class.WTF::HashTable.1037" = type <{ %"struct.WTF::KeyValuePair.1040"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1040" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1364", %"class.absl::optional.1364", %"class.absl::optional.1364" }
%"class.absl::optional.1364" = type { %"class.absl::optional_internal::optional_data.1365" }
%"class.absl::optional_internal::optional_data.1365" = type { %"class.absl::optional_internal::optional_data_base.1366" }
%"class.absl::optional_internal::optional_data_base.1366" = type { %"class.absl::optional_internal::optional_data_dtor_base.1367" }
%"class.absl::optional_internal::optional_data_dtor_base.1367" = type { i8, %union.anon.1368 }
%union.anon.1368 = type { i32 }
%"class.std::__1::unique_ptr.1044" = type { %"class.std::__1::__compressed_pair.1045" }
%"class.std::__1::__compressed_pair.1045" = type { %"struct.std::__1::__compressed_pair_elem.1046" }
%"struct.std::__1::__compressed_pair_elem.1046" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.903", %"class.WTF::Vector.1059", %"class.WTF::Vector.1047", %"class.WTF::Vector.1064", %"class.WTF::Vector.1069", %"class.WTF::Vector.1074" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.1047", %"class.WTF::Vector.1047", %"class.WTF::Vector.1052" }
%"class.WTF::Vector.1052" = type { %"class.WTF::VectorBuffer.1053" }
%"class.WTF::VectorBuffer.1053" = type { %"class.WTF::VectorBufferBase.1054" }
%"class.WTF::VectorBufferBase.1054" = type { %class.scoped_refptr.1055*, i32, i32 }
%class.scoped_refptr.1055 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.1056" }
%"class.base::RefCountedThreadSafe.1056" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1059" = type { %"class.WTF::VectorBuffer.1060" }
%"class.WTF::VectorBuffer.1060" = type { %"class.WTF::VectorBufferBase.1061" }
%"class.WTF::VectorBufferBase.1061" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.1047" = type { %"class.WTF::VectorBuffer.1048" }
%"class.WTF::VectorBuffer.1048" = type { %"class.WTF::VectorBufferBase.1049" }
%"class.WTF::VectorBufferBase.1049" = type { double*, i32, i32 }
%"class.WTF::Vector.1064" = type { %"class.WTF::VectorBuffer.1065" }
%"class.WTF::VectorBuffer.1065" = type { %"class.WTF::VectorBufferBase.1066" }
%"class.WTF::VectorBufferBase.1066" = type { i32*, i32, i32 }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071" }
%"class.WTF::VectorBufferBase.1071" = type { i32*, i32, i32 }
%"class.WTF::Vector.1074" = type { %"class.WTF::VectorBuffer.1075" }
%"class.WTF::VectorBuffer.1075" = type { %"class.WTF::VectorBufferBase.1076" }
%"class.WTF::VectorBufferBase.1076" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1082" = type { %"class.std::__1::__compressed_pair.1083" }
%"class.std::__1::__compressed_pair.1083" = type { %"struct.std::__1::__compressed_pair_elem.1084" }
%"struct.std::__1::__compressed_pair_elem.1084" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.1085" }
%"class.WTF::Vector.1085" = type { %"class.WTF::VectorBuffer.1086" }
%"class.WTF::VectorBuffer.1086" = type { %"class.WTF::VectorBufferBase.1087" }
%"class.WTF::VectorBufferBase.1087" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.1093" = type { %"class.std::__1::__compressed_pair.1094" }
%"class.std::__1::__compressed_pair.1094" = type { %"struct.std::__1::__compressed_pair_elem.1095" }
%"struct.std::__1::__compressed_pair_elem.1095" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.1096" }
%"class.WTF::Vector.1096" = type { %"class.WTF::VectorBuffer.1097" }
%"class.WTF::VectorBuffer.1097" = type { %"class.WTF::VectorBufferBase.1098" }
%"class.WTF::VectorBufferBase.1098" = type { %"class.blink::Persistent.924"*, i32, i32 }
%"class.std::__1::unique_ptr.1104" = type { %"class.std::__1::__compressed_pair.1105" }
%"class.std::__1::__compressed_pair.1105" = type { %"struct.std::__1::__compressed_pair_elem.1106" }
%"struct.std::__1::__compressed_pair_elem.1106" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.924", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.1115" }
%"class.WTF::Vector.1115" = type { %"class.WTF::VectorBuffer.1116" }
%"class.WTF::VectorBuffer.1116" = type { %"class.WTF::VectorBufferBase.1117" }
%"class.WTF::VectorBufferBase.1117" = type { %class.scoped_refptr.1118*, i32, i32 }
%class.scoped_refptr.1118 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.973", [4 x i8] }>
%"class.blink::Persistent.1121" = type { %"class.blink::PersistentBase.1122" }
%"class.blink::PersistentBase.1122" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.1125" }
%"class.blink::Member.1125" = type { %"class.blink::MemberBase.1126" }
%"class.blink::MemberBase.1126" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.1127" = type { %class.scoped_refptr.1128 }
%class.scoped_refptr.1128 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.1129", [4 x i8], %"class.blink::DataRef.1131", %"class.blink::DataRef.1135", %"class.blink::DataRef.1157", %"class.blink::DataRef.1166", %"class.blink::DataRef.1178", %"class.blink::DataRef.1182", %class.scoped_refptr.1161, i32, [4 x i8] }>
%"class.WTF::RefCounted.1129" = type { %"class.base::RefCounted.1130" }
%"class.base::RefCounted.1130" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1131" = type { %class.scoped_refptr.1132 }
%class.scoped_refptr.1132 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.1133", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1133" = type { %"class.base::RefCounted.1134" }
%"class.base::RefCounted.1134" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1135" = type { %class.scoped_refptr.1136 }
%class.scoped_refptr.1136 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.1137", %class.scoped_refptr.1139, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.1137" = type { %"class.base::RefCounted.1138" }
%"class.base::RefCounted.1138" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1139 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.1140", %"class.std::__1::unique_ptr.1146", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.970" }>
%"class.std::__1::unique_ptr.1140" = type { %"class.std::__1::__compressed_pair.1141" }
%"class.std::__1::__compressed_pair.1141" = type { %"struct.std::__1::__compressed_pair_elem.1142" }
%"struct.std::__1::__compressed_pair_elem.1142" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.1146" = type { %"class.std::__1::__compressed_pair.1147" }
%"class.std::__1::__compressed_pair.1147" = type { %"struct.std::__1::__compressed_pair_elem.1148" }
%"struct.std::__1::__compressed_pair_elem.1148" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.1149, i32, %"struct.std::__1::atomic.4", %"struct.std::__1::atomic.4", i8, i8 }>
%class.sk_sp.1149 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt.1150, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.1151, %class.SkTDArray.1152, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt.1150 = type { %"struct.std::__1::atomic" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.1151 = type { i8*, i32, i32 }
%class.SkTDArray.1152 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.1153 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.1153 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.29", [3 x i8] }
%"class.blink::DataRef.1157" = type { %class.scoped_refptr.1158 }
%class.scoped_refptr.1158 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.1159", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.1159" = type { %"class.base::RefCounted.1160" }
%"class.base::RefCounted.1160" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.1161, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.1166" = type { %class.scoped_refptr.1167 }
%class.scoped_refptr.1167 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.1168", [4 x i8], %class.scoped_refptr.1170, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.1168" = type { %"class.base::RefCounted.1169" }
%"class.base::RefCounted.1169" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1170 = type { %"class.base::RefCountedData.1171"* }
%"class.base::RefCountedData.1171" = type { %"class.base::RefCountedThreadSafe.1172", %"class.WTF::Vector.1173" }
%"class.base::RefCountedThreadSafe.1172" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1173" = type { %"class.WTF::VectorBuffer.1174" }
%"class.WTF::VectorBuffer.1174" = type { %"class.WTF::VectorBufferBase.1175" }
%"class.WTF::VectorBufferBase.1175" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.1178" = type { %class.scoped_refptr.1179 }
%class.scoped_refptr.1179 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.1180", %class.scoped_refptr.1161, %class.scoped_refptr.1161, %class.scoped_refptr.1161 }
%"class.WTF::RefCounted.1180" = type { %"class.base::RefCounted.1181" }
%"class.base::RefCounted.1181" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1182" = type { %class.scoped_refptr.1183 }
%class.scoped_refptr.1183 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.1184", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1184" = type { %"class.base::RefCounted.1185" }
%"class.base::RefCounted.1185" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1161 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.1162", %"class.blink::Persistent.1164", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.1162" = type { %"class.base::RefCounted.1163" }
%"class.base::RefCounted.1163" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1164" = type { %"class.blink::PersistentBase.1165" }
%"class.blink::PersistentBase.1165" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DataRef.1186" = type { %class.scoped_refptr.1187 }
%class.scoped_refptr.1187 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.1188", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.1188" = type { %"class.base::RefCounted.1189" }
%"class.base::RefCounted.1189" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.1190" = type { %class.scoped_refptr.1191 }
%class.scoped_refptr.1191 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.1192", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1192" = type { %"class.base::RefCounted.1193" }
%"class.base::RefCounted.1193" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1194" = type { %class.scoped_refptr.1195 }
%class.scoped_refptr.1195 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.1196", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.1196" = type { %"class.base::RefCounted.1197" }
%"class.base::RefCounted.1197" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1198" = type { %class.scoped_refptr.1199 }
%class.scoped_refptr.1199 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.1200", %class.scoped_refptr.1202 }
%"class.WTF::RefCounted.1200" = type { %"class.base::RefCounted.1201" }
%"class.base::RefCounted.1201" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1202 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.1344", %"class.blink::StyleVariables", %class.scoped_refptr.1202 }
%"class.WTF::RefCounted.1344" = type { %"class.base::RefCounted.1345" }
%"class.base::RefCounted.1345" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.1203" = type { %"class.base::RefCounted.1204" }
%"class.base::RefCounted.1204" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1205" = type { %"class.std::__1::__compressed_pair.1206" }
%"class.std::__1::__compressed_pair.1206" = type { %"struct.std::__1::__compressed_pair_elem.1207" }
%"struct.std::__1::__compressed_pair_elem.1207" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.1208" }
%"class.std::__1::unique_ptr.1208" = type { %"class.std::__1::__compressed_pair.1209" }
%"class.std::__1::__compressed_pair.1209" = type { %"struct.std::__1::__compressed_pair_elem.1210" }
%"struct.std::__1::__compressed_pair_elem.1210" = type { %"class.WTF::Vector.1211"* }
%"class.WTF::Vector.1211" = type { %"class.WTF::VectorBuffer.1379" }
%"class.WTF::VectorBuffer.1379" = type { %"class.WTF::VectorBufferBase.1380", [32 x i8] }
%"class.WTF::VectorBufferBase.1380" = type { %class.scoped_refptr.783*, i32, i32 }
%"class.blink::UntracedMember.1218" = type { %"class.blink::MemberBase.1219" }
%"class.blink::MemberBase.1219" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.1220" }
%"class.std::__1::unique_ptr.1220" = type { %"class.std::__1::__compressed_pair.1221" }
%"class.std::__1::__compressed_pair.1221" = type { %"struct.std::__1::__compressed_pair_elem.1222" }
%"struct.std::__1::__compressed_pair_elem.1222" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.1223", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.1229", %"class.std::__1::unique_ptr.1324", i8, %"class.absl::optional.1330", %class.scoped_refptr.1306, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.1335" }
%"class.std::__1::unique_ptr.1223" = type { %"class.std::__1::__compressed_pair.1224" }
%"class.std::__1::__compressed_pair.1224" = type { %"struct.std::__1::__compressed_pair_elem.1225" }
%"struct.std::__1::__compressed_pair_elem.1225" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.1229" = type { %"class.std::__1::__compressed_pair.1230" }
%"class.std::__1::__compressed_pair.1230" = type { %"struct.std::__1::__compressed_pair_elem.1231" }
%"struct.std::__1::__compressed_pair_elem.1231" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.1232, %class.scoped_refptr.1232, %class.scoped_refptr.1232, %class.scoped_refptr.1232, %class.scoped_refptr.1232, %class.scoped_refptr.1232, %class.scoped_refptr.1267, %class.scoped_refptr.1283, %class.scoped_refptr.1284, %class.scoped_refptr.1284, %class.scoped_refptr.1284, %class.scoped_refptr.1284, %class.scoped_refptr.1284, %class.scoped_refptr.1284, %class.scoped_refptr.1296, %class.scoped_refptr.1297, %class.scoped_refptr.1297, %class.scoped_refptr.1297, %class.scoped_refptr.1297, %class.scoped_refptr.1297, %class.scoped_refptr.1297, %class.scoped_refptr.1297, %class.scoped_refptr.1297, %class.scoped_refptr.1320 }
%class.scoped_refptr.1232 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1249" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1233", i8, i8, %class.scoped_refptr.1235, i32, i32 }
%"class.WTF::RefCounted.1233" = type { %"class.base::RefCounted.1234" }
%"class.base::RefCounted.1234" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1235 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1242, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1243", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1236" }
%"class.std::__1::unique_ptr.1236" = type { %"class.std::__1::__compressed_pair.1237" }
%"class.std::__1::__compressed_pair.1237" = type { %"struct.std::__1::__compressed_pair_elem.1238" }
%"struct.std::__1::__compressed_pair_elem.1238" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.1242 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1268", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1268" = type { %"class.WTF::RefCounted.1269", i8, i8, %class.scoped_refptr.1242, i32, i32 }
%"class.WTF::RefCounted.1269" = type { %"class.base::RefCounted.1270" }
%"class.base::RefCounted.1270" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1271" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1271" = type { %"class.absl::optional_internal::optional_data.1272" }
%"class.absl::optional_internal::optional_data.1272" = type { %"class.absl::optional_internal::optional_data_base.1273" }
%"class.absl::optional_internal::optional_data_base.1273" = type { %"class.absl::optional_internal::optional_data_dtor_base.1274" }
%"class.absl::optional_internal::optional_data_dtor_base.1274" = type { i8, %union.anon.1275 }
%union.anon.1275 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1276", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1276" = type { %"class.std::__1::__vector_base.1277" }
%"class.std::__1::__vector_base.1277" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1278" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.1278" = type { %"struct.std::__1::__compressed_pair_elem.1279" }
%"struct.std::__1::__compressed_pair_elem.1279" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1243" = type { %"class.std::__1::__compressed_pair.1244" }
%"class.std::__1::__compressed_pair.1244" = type { %"struct.std::__1::__compressed_pair_elem.1245" }
%"struct.std::__1::__compressed_pair_elem.1245" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1249" = type { %"class.std::__1::__compressed_pair.1250" }
%"class.std::__1::__compressed_pair.1250" = type { %"struct.std::__1::__compressed_pair_elem.1251" }
%"struct.std::__1::__compressed_pair_elem.1251" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1252", %"class.std::__1::unique_ptr.1258", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1252" = type { %"class.std::__1::__compressed_pair.1253" }
%"class.std::__1::__compressed_pair.1253" = type { %"struct.std::__1::__compressed_pair_elem.1254" }
%"struct.std::__1::__compressed_pair_elem.1254" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1258" = type { %"class.std::__1::__compressed_pair.1259" }
%"class.std::__1::__compressed_pair.1259" = type { %"struct.std::__1::__compressed_pair_elem.1260" }
%"struct.std::__1::__compressed_pair_elem.1260" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.1267 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.1283 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1284 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1285" }
%"class.blink::PaintPropertyNode.1285" = type { %"class.WTF::RefCounted.1286", i8, i8, %class.scoped_refptr.1288, i32, i32 }
%"class.WTF::RefCounted.1286" = type { %"class.base::RefCounted.1287" }
%"class.base::RefCounted.1287" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1288 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.1235, %class.scoped_refptr.1289, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.1290", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.1289 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1298" }
%"class.blink::PaintPropertyNode.1298" = type { %"class.WTF::RefCounted.1299", i8, i8, %class.scoped_refptr.1289, i32, i32 }
%"class.WTF::RefCounted.1299" = type { %"class.base::RefCounted.1300" }
%"class.base::RefCounted.1300" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.726" }
%"class.std::__1::vector.726" = type { %"class.std::__1::__vector_base.727" }
%"class.std::__1::__vector_base.727" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.735" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.36, [20 x float], i32, [4 x i8], %"class.std::__1::vector.728", i32, [4 x i8] }>
%"class.std::__1::vector.728" = type { %"class.std::__1::__vector_base.729" }
%"class.std::__1::__vector_base.729" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.730" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.731" }
%"struct.std::__1::__compressed_pair_elem.731" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.736" }
%"struct.std::__1::__compressed_pair_elem.736" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.1290" = type { %"class.std::__1::__compressed_pair.1291" }
%"class.std::__1::__compressed_pair.1291" = type { %"struct.std::__1::__compressed_pair_elem.1292" }
%"struct.std::__1::__compressed_pair_elem.1292" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%class.scoped_refptr.1296 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1297 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.1309" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.1235, %"class.absl::optional.1301", %class.scoped_refptr.1306, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.1301" = type { %"class.absl::optional_internal::optional_data.1302" }
%"class.absl::optional_internal::optional_data.1302" = type { %"class.absl::optional_internal::optional_data_base.1303" }
%"class.absl::optional_internal::optional_data_base.1303" = type { %"class.absl::optional_internal::optional_data_dtor_base.1304" }
%"class.absl::optional_internal::optional_data_dtor_base.1304" = type { i8, [3 x i8], %union.anon.1305 }
%union.anon.1305 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.1309" = type { %"class.std::__1::__compressed_pair.1310" }
%"class.std::__1::__compressed_pair.1310" = type { %"struct.std::__1::__compressed_pair_elem.1311" }
%"struct.std::__1::__compressed_pair_elem.1311" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.1312", i32, [4 x i8] }>
%"class.WTF::Vector.1312" = type { %"class.WTF::VectorBuffer.1313" }
%"class.WTF::VectorBuffer.1313" = type { %"class.WTF::VectorBufferBase.1314" }
%"class.WTF::VectorBufferBase.1314" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.1320 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.1324" = type { %"class.std::__1::__compressed_pair.1325" }
%"class.std::__1::__compressed_pair.1325" = type { %"struct.std::__1::__compressed_pair_elem.1326" }
%"struct.std::__1::__compressed_pair_elem.1326" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1235, %class.scoped_refptr.1289, %class.scoped_refptr.1288 }
%"class.absl::optional.1330" = type { %"class.absl::optional_internal::optional_data.1331" }
%"class.absl::optional_internal::optional_data.1331" = type { %"class.absl::optional_internal::optional_data_base.1332" }
%"class.absl::optional_internal::optional_data_base.1332" = type { %"class.absl::optional_internal::optional_data_dtor_base.1333" }
%"class.absl::optional_internal::optional_data_dtor_base.1333" = type { i8, %union.anon.1334 }
%union.anon.1334 = type { %"class.blink::IntRect" }
%class.scoped_refptr.1306 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.1307", [4 x i8] }
%"class.WTF::RefCounted.1307" = type { %"class.base::RefCounted.1308" }
%"class.base::RefCounted.1308" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.1335" = type { %"class.std::__1::__compressed_pair.1336" }
%"class.std::__1::__compressed_pair.1336" = type { %"struct.std::__1::__compressed_pair_elem.1337" }
%"struct.std::__1::__compressed_pair_elem.1337" = type { %"class.blink::FragmentData"* }
%"class.blink::SVGContentContainer" = type { %"class.blink::LayoutObjectChildList", %"class.blink::FloatRect", %"class.blink::FloatRect" }
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapVectorBacking" = type { i8 }

$_ZN3WTF6VectorIfLj0ENS_18PartitionAllocatorEEaSERKS2_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_6FilterEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_6FilterEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_6FilterEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_12FilterEffectEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_12FilterEffectEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_12FilterEffectEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_12FilterEffectEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIfLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIfEEvOT_ = comdat any

$_ZN3WTF6VectorIfLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIiEEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_12FilterEffectEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_12FilterEffectEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_12FilterEffectEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_12FilterEffectEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_12FilterEffectEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_12FilterEffectEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_12FilterEffectEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_12FilterEffectEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_6FilterEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_6FilterEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_12FilterEffectEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_12FilterEffectEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_12FilterEffectEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_12FilterEffectEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.1 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIfEEPKcv = private unnamed_addr constant [53 x i8] c"const char *WTF::GetStringWithTypeName() [T = float]\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink6FilterEEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::Filter]\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.3 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_6FilterEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_6FilterEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_6FilterEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_6FilterEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.4 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12FilterEffectEEEPKcv = private unnamed_addr constant [67 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::FilterEffect]\00", align 1
@_ZZN5blink11GCInfoTraitINS_12FilterEffectEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_12FilterEffectEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_12FilterEffectEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_12FilterEffectEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_12FilterEffectEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.5 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.6 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.7 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.8 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.9 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_12FilterEffectEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_12FilterEffectEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_12FilterEffectEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_12FilterEffectEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_12FilterEffectEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [165 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::FilterEffect>, WTF::VectorTraits<blink::Member<blink::FilterEffect> > >]\00", align 1
@_ZN5blink9svg_names10kFilterTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8

@_ZN5blink19FilterEffectBuilderC1ERKNS_9FloatRectEfPKN2cc10PaintFlagsES7_10SkTileMode = hidden unnamed_addr alias void (%"class.blink::FilterEffectBuilder"*, %"class.blink::FloatRect"*, float, %"class.cc::PaintFlags"*, %"class.cc::PaintFlags"*, i32), void (%"class.blink::FilterEffectBuilder"*, %"class.blink::FloatRect"*, float, %"class.cc::PaintFlags"*, %"class.cc::PaintFlags"*, i32)* @_ZN5blink19FilterEffectBuilderC2ERKNS_9FloatRectEfPKN2cc10PaintFlagsES7_10SkTileMode

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19FilterEffectBuilderC2ERKNS_9FloatRectEfPKN2cc10PaintFlagsES7_10SkTileMode(%"class.blink::FilterEffectBuilder"* nocapture, %"class.blink::FloatRect"* nocapture readonly dereferenceable(16), float, %"class.cc::PaintFlags"*, %"class.cc::PaintFlags"*, i32) unnamed_addr #0 align 2 {
  %7 = bitcast %"class.blink::FilterEffectBuilder"* %0 to i8*
  %8 = bitcast %"class.blink::FloatRect"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 4 %8, i64 16, i1 false)
  %9 = getelementptr inbounds %"class.blink::FilterEffectBuilder", %"class.blink::FilterEffectBuilder"* %0, i64 0, i32 1
  store float %2, float* %9, align 8
  %10 = getelementptr inbounds %"class.blink::FilterEffectBuilder", %"class.blink::FilterEffectBuilder"* %0, i64 0, i32 2
  store float 1.000000e+00, float* %10, align 4
  %11 = getelementptr inbounds %"class.blink::FilterEffectBuilder", %"class.blink::FilterEffectBuilder"* %0, i64 0, i32 3
  store %"class.cc::PaintFlags"* %3, %"class.cc::PaintFlags"** %11, align 8
  %12 = getelementptr inbounds %"class.blink::FilterEffectBuilder", %"class.blink::FilterEffectBuilder"* %0, i64 0, i32 4
  store %"class.cc::PaintFlags"* %4, %"class.cc::PaintFlags"** %12, align 8
  %13 = getelementptr inbounds %"class.blink::FilterEffectBuilder", %"class.blink::FilterEffectBuilder"* %0, i64 0, i32 5
  store i32 %5, i32* %13, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::FilterEffect"* @_ZNK5blink19FilterEffectBuilder17BuildFilterEffectERKNS_16FilterOperationsEb(%"class.blink::FilterEffectBuilder"*, %"class.blink::FilterOperations"* nocapture readonly dereferenceable(16), i1 zeroext) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.WTF::Vector.720", align 8
  %5 = alloca %"class.WTF::Vector.720", align 8
  %6 = alloca %"class.WTF::Vector.720", align 8
  %7 = alloca %"class.WTF::Vector.720", align 8
  %8 = alloca %"class.WTF::Vector.720", align 8
  %9 = alloca %"class.WTF::Vector.720", align 8
  %10 = alloca %"class.blink::FilterEffect"*, align 8
  %11 = alloca %"class.WTF::Vector.720", align 8
  %12 = alloca float, align 4
  %13 = alloca %"class.WTF::Vector.720", align 8
  %14 = alloca float, align 4
  %15 = alloca %"struct.blink::ComponentTransferFunction", align 8
  %16 = alloca %"class.WTF::Vector.720", align 8
  %17 = alloca float, align 4
  %18 = alloca float, align 4
  %19 = alloca %"struct.blink::ComponentTransferFunction", align 8
  %20 = alloca %"struct.blink::ComponentTransferFunction", align 8
  %21 = alloca %"class.WTF::Vector.720", align 8
  %22 = alloca i32, align 4
  %23 = alloca float, align 4
  %24 = alloca %"struct.blink::ComponentTransferFunction", align 8
  %25 = alloca %"struct.blink::ComponentTransferFunction", align 8
  %26 = alloca %"struct.blink::ComponentTransferFunction", align 8
  %27 = alloca %"struct.blink::ComponentTransferFunction", align 8
  %28 = alloca %"struct.blink::ComponentTransferFunction", align 8
  %29 = alloca %"class.blink::Color", align 4
  %30 = alloca %"struct.blink::ComponentTransferFunction", align 8
  %31 = alloca %"struct.blink::ComponentTransferFunction", align 8
  %32 = alloca %"struct.blink::ComponentTransferFunction", align 8
  %33 = alloca %"struct.blink::ComponentTransferFunction", align 8
  %34 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_6FilterEEEPhm(i64 56) #8
  %35 = bitcast i8* %34 to %"class.blink::Filter"*
  tail call void @_ZN5blink6FilterC1Ef(%"class.blink::Filter"* %35, float 1.000000e+00) #8
  %36 = getelementptr inbounds i8, i8* %34, i64 -4
  %37 = bitcast i8* %36 to i16*
  %38 = load atomic i16, i16* %37 monotonic, align 2
  %39 = or i16 %38, 1
  store atomic i16 %39, i16* %37 release, align 2
  %40 = bitcast %"class.blink::FilterEffect"** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #8
  %41 = getelementptr inbounds i8, i8* %34, i64 40
  %42 = bitcast i8* %41 to %"class.blink::SourceGraphic"**
  %43 = load %"class.blink::SourceGraphic"*, %"class.blink::SourceGraphic"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::SourceGraphic", %"class.blink::SourceGraphic"* %43, i64 0, i32 0
  store %"class.blink::FilterEffect"* %44, %"class.blink::FilterEffect"** %10, align 8
  br i1 %2, label %45, label %47

45:                                               ; preds = %3
  %46 = getelementptr inbounds %"class.blink::SourceGraphic", %"class.blink::SourceGraphic"* %43, i64 0, i32 0, i32 5
  store i8 1, i8* %46, align 1
  br label %47

47:                                               ; preds = %45, %3
  %48 = getelementptr inbounds %"class.blink::FilterOperations", %"class.blink::FilterOperations"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load %"class.blink::Member.58"*, %"class.blink::Member.58"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::FilterOperations", %"class.blink::FilterOperations"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %51 = load i32, i32* %50, align 4
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds %"class.blink::Member.58", %"class.blink::Member.58"* %49, i64 %52
  %54 = icmp eq i32 %51, 0
  br i1 %54, label %178, label %55

55:                                               ; preds = %47
  %56 = bitcast %"struct.blink::ComponentTransferFunction"* %30 to i8*
  %57 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %30, i64 0, i32 6
  %58 = getelementptr inbounds %"class.WTF::Vector.720", %"class.WTF::Vector.720"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %30, i64 0, i32 6, i32 0, i32 0, i32 1
  %60 = bitcast %"class.WTF::Vector.720"* %57 to i64*
  %61 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %30, i64 0, i32 6, i32 0, i32 0, i32 2
  %62 = bitcast %"struct.blink::ComponentTransferFunction"* %31 to i8*
  %63 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %31, i64 0, i32 6
  %64 = getelementptr inbounds %"class.WTF::Vector.720", %"class.WTF::Vector.720"* %63, i64 0, i32 0, i32 0, i32 0
  %65 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %31, i64 0, i32 6, i32 0, i32 0, i32 1
  %66 = bitcast %"class.WTF::Vector.720"* %63 to i64*
  %67 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %31, i64 0, i32 6, i32 0, i32 0, i32 2
  %68 = bitcast %"struct.blink::ComponentTransferFunction"* %32 to i8*
  %69 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %32, i64 0, i32 6
  %70 = getelementptr inbounds %"class.WTF::Vector.720", %"class.WTF::Vector.720"* %69, i64 0, i32 0, i32 0, i32 0
  %71 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %32, i64 0, i32 6, i32 0, i32 0, i32 1
  %72 = bitcast %"class.WTF::Vector.720"* %69 to i64*
  %73 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %32, i64 0, i32 6, i32 0, i32 0, i32 2
  %74 = bitcast %"struct.blink::ComponentTransferFunction"* %33 to i8*
  %75 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %33, i64 0, i32 6
  %76 = getelementptr inbounds %"class.WTF::Vector.720", %"class.WTF::Vector.720"* %75, i64 0, i32 0, i32 0, i32 0
  %77 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %33, i64 0, i32 6, i32 0, i32 0, i32 1
  %78 = bitcast %"class.WTF::Vector.720"* %75 to i64*
  %79 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %33, i64 0, i32 6, i32 0, i32 0, i32 2
  %80 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %33, i64 0, i32 6, i32 0, i32 0, i32 0
  %81 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %32, i64 0, i32 6, i32 0, i32 0, i32 0
  %82 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %31, i64 0, i32 6, i32 0, i32 0, i32 0
  %83 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %30, i64 0, i32 6, i32 0, i32 0, i32 0
  %84 = getelementptr inbounds %"class.blink::FilterEffectBuilder", %"class.blink::FilterEffectBuilder"* %0, i64 0, i32 2
  %85 = bitcast %"class.blink::Color"* %29 to i8*
  %86 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %29, i64 0, i32 0
  %87 = bitcast %"struct.blink::ComponentTransferFunction"* %27 to i8*
  %88 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %27, i64 0, i32 0
  %89 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %27, i64 0, i32 1
  %90 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %27, i64 0, i32 2
  %91 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %27, i64 0, i32 6, i32 0, i32 0, i32 0
  %92 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %27, i64 0, i32 6, i32 0, i32 0, i32 2
  %93 = bitcast %"struct.blink::ComponentTransferFunction"* %28 to i8*
  %94 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %28, i64 0, i32 6, i32 0, i32 0, i32 0
  %95 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %28, i64 0, i32 6, i32 0, i32 0, i32 2
  %96 = bitcast %"struct.blink::ComponentTransferFunction"* %25 to i8*
  %97 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %25, i64 0, i32 0
  %98 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %25, i64 0, i32 1
  %99 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %25, i64 0, i32 2
  %100 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %25, i64 0, i32 6, i32 0, i32 0, i32 0
  %101 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %25, i64 0, i32 6, i32 0, i32 0, i32 2
  %102 = bitcast %"struct.blink::ComponentTransferFunction"* %26 to i8*
  %103 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %26, i64 0, i32 6, i32 0, i32 0, i32 0
  %104 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %26, i64 0, i32 6, i32 0, i32 0, i32 2
  %105 = bitcast %"struct.blink::ComponentTransferFunction"* %20 to i8*
  %106 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %20, i64 0, i32 0
  %107 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %20, i64 0, i32 6
  %108 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %20, i64 0, i32 6, i32 0, i32 0, i32 2
  %109 = bitcast %"class.WTF::Vector.720"* %21 to i8*
  %110 = getelementptr inbounds %"class.WTF::Vector.720", %"class.WTF::Vector.720"* %21, i64 0, i32 0, i32 0, i32 0
  %111 = getelementptr inbounds %"class.WTF::Vector.720", %"class.WTF::Vector.720"* %21, i64 0, i32 0, i32 0, i32 1
  %112 = getelementptr inbounds %"class.WTF::Vector.720", %"class.WTF::Vector.720"* %21, i64 0, i32 0, i32 0, i32 2
  %113 = bitcast i32* %22 to i8*
  %114 = bitcast float* %23 to i8*
  %115 = bitcast %"struct.blink::ComponentTransferFunction"* %24 to i8*
  %116 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %24, i64 0, i32 6, i32 0, i32 0, i32 0
  %117 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %24, i64 0, i32 6, i32 0, i32 0, i32 2
  %118 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %20, i64 0, i32 6, i32 0, i32 0, i32 0
  %119 = bitcast %"struct.blink::ComponentTransferFunction"* %15 to i8*
  %120 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %15, i64 0, i32 0
  %121 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %15, i64 0, i32 6
  %122 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %15, i64 0, i32 6, i32 0, i32 0, i32 2
  %123 = bitcast %"class.WTF::Vector.720"* %16 to i8*
  %124 = getelementptr inbounds %"class.WTF::Vector.720", %"class.WTF::Vector.720"* %16, i64 0, i32 0, i32 0, i32 0
  %125 = getelementptr inbounds %"class.WTF::Vector.720", %"class.WTF::Vector.720"* %16, i64 0, i32 0, i32 0, i32 1
  %126 = getelementptr inbounds %"class.WTF::Vector.720", %"class.WTF::Vector.720"* %16, i64 0, i32 0, i32 0, i32 2
  %127 = bitcast float* %17 to i8*
  %128 = bitcast float* %18 to i8*
  %129 = bitcast %"struct.blink::ComponentTransferFunction"* %19 to i8*
  %130 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %19, i64 0, i32 6, i32 0, i32 0, i32 0
  %131 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %19, i64 0, i32 6, i32 0, i32 0, i32 2
  %132 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %15, i64 0, i32 6, i32 0, i32 0, i32 0
  %133 = bitcast %"class.WTF::Vector.720"* %4 to i8*
  %134 = getelementptr inbounds %"class.WTF::Vector.720", %"class.WTF::Vector.720"* %4, i64 0, i32 0, i32 0, i32 1
  %135 = getelementptr inbounds %"class.WTF::Vector.720", %"class.WTF::Vector.720"* %4, i64 0, i32 0, i32 0, i32 2
  %136 = bitcast %"class.WTF::Vector.720"* %4 to i64*
  %137 = getelementptr inbounds %"class.WTF::Vector.720", %"class.WTF::Vector.720"* %4, i64 0, i32 0, i32 0, i32 0
  %138 = bitcast %"class.WTF::Vector.720"* %5 to i8*
  %139 = getelementptr inbounds %"class.WTF::Vector.720", %"class.WTF::Vector.720"* %5, i64 0, i32 0, i32 0, i32 1
  %140 = getelementptr inbounds %"class.WTF::Vector.720", %"class.WTF::Vector.720"* %5, i64 0, i32 0, i32 0, i32 2
  %141 = bitcast %"class.WTF::Vector.720"* %5 to i64*
  %142 = getelementptr inbounds %"class.WTF::Vector.720", %"class.WTF::Vector.720"* %5, i64 0, i32 0, i32 0, i32 0
  %143 = bitcast %"class.WTF::Vector.720"* %13 to i8*
  %144 = getelementptr inbounds %"class.WTF::Vector.720", %"class.WTF::Vector.720"* %13, i64 0, i32 0, i32 0, i32 0
  %145 = getelementptr inbounds %"class.WTF::Vector.720", %"class.WTF::Vector.720"* %13, i64 0, i32 0, i32 0, i32 1
  %146 = getelementptr inbounds %"class.WTF::Vector.720", %"class.WTF::Vector.720"* %13, i64 0, i32 0, i32 0, i32 2
  %147 = bitcast float* %14 to i8*
  %148 = bitcast %"class.WTF::Vector.720"* %6 to i8*
  %149 = getelementptr inbounds %"class.WTF::Vector.720", %"class.WTF::Vector.720"* %6, i64 0, i32 0, i32 0, i32 1
  %150 = getelementptr inbounds %"class.WTF::Vector.720", %"class.WTF::Vector.720"* %6, i64 0, i32 0, i32 0, i32 2
  %151 = bitcast %"class.WTF::Vector.720"* %13 to i64*
  %152 = bitcast %"class.WTF::Vector.720"* %6 to i64*
  %153 = getelementptr inbounds %"class.WTF::Vector.720", %"class.WTF::Vector.720"* %6, i64 0, i32 0, i32 0, i32 0
  %154 = bitcast %"class.WTF::Vector.720"* %11 to i8*
  %155 = getelementptr inbounds %"class.WTF::Vector.720", %"class.WTF::Vector.720"* %11, i64 0, i32 0, i32 0, i32 0
  %156 = getelementptr inbounds %"class.WTF::Vector.720", %"class.WTF::Vector.720"* %11, i64 0, i32 0, i32 0, i32 1
  %157 = getelementptr inbounds %"class.WTF::Vector.720", %"class.WTF::Vector.720"* %11, i64 0, i32 0, i32 0, i32 2
  %158 = bitcast float* %12 to i8*
  %159 = bitcast %"class.WTF::Vector.720"* %7 to i8*
  %160 = getelementptr inbounds %"class.WTF::Vector.720", %"class.WTF::Vector.720"* %7, i64 0, i32 0, i32 0, i32 1
  %161 = getelementptr inbounds %"class.WTF::Vector.720", %"class.WTF::Vector.720"* %7, i64 0, i32 0, i32 0, i32 2
  %162 = bitcast %"class.WTF::Vector.720"* %11 to i64*
  %163 = bitcast %"class.WTF::Vector.720"* %7 to i64*
  %164 = getelementptr inbounds %"class.WTF::Vector.720", %"class.WTF::Vector.720"* %7, i64 0, i32 0, i32 0, i32 0
  %165 = bitcast %"class.WTF::Vector.720"* %8 to i8*
  %166 = getelementptr inbounds %"class.WTF::Vector.720", %"class.WTF::Vector.720"* %8, i64 0, i32 0, i32 0, i32 1
  %167 = getelementptr inbounds %"class.WTF::Vector.720", %"class.WTF::Vector.720"* %8, i64 0, i32 0, i32 0, i32 2
  %168 = bitcast %"class.WTF::Vector.720"* %8 to i64*
  %169 = getelementptr inbounds %"class.WTF::Vector.720", %"class.WTF::Vector.720"* %8, i64 0, i32 0, i32 0, i32 0
  %170 = bitcast %"class.WTF::Vector.720"* %9 to i8*
  %171 = getelementptr inbounds %"class.WTF::Vector.720", %"class.WTF::Vector.720"* %9, i64 0, i32 0, i32 0, i32 1
  %172 = getelementptr inbounds %"class.WTF::Vector.720", %"class.WTF::Vector.720"* %9, i64 0, i32 0, i32 0, i32 2
  %173 = bitcast %"class.WTF::Vector.720"* %9 to i64*
  %174 = getelementptr inbounds %"class.WTF::Vector.720", %"class.WTF::Vector.720"* %9, i64 0, i32 0, i32 0, i32 0
  %175 = bitcast %"class.blink::FilterEffect"** %10 to i64*
  br label %180

176:                                              ; preds = %1115
  %177 = load %"class.blink::FilterEffect"*, %"class.blink::FilterEffect"** %10, align 8
  br label %178

178:                                              ; preds = %176, %47
  %179 = phi %"class.blink::FilterEffect"* [ %177, %176 ], [ %44, %47 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #8
  ret %"class.blink::FilterEffect"* %179

180:                                              ; preds = %55, %1115
  %181 = phi %"class.blink::Member.58"* [ %49, %55 ], [ %1116, %1115 ]
  %182 = getelementptr inbounds %"class.blink::Member.58", %"class.blink::Member.58"* %181, i64 0, i32 0, i32 0
  %183 = load %"class.blink::FilterOperation"*, %"class.blink::FilterOperation"** %182, align 8
  %184 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %183, i64 0, i32 1
  %185 = load i32, i32* %184, align 8
  switch i32 %185, label %1115 [
    i32 0, label %186
    i32 1, label %206
    i32 2, label %347
    i32 3, label %497
    i32 4, label %536
    i32 5, label %575
    i32 13, label %592
    i32 6, label %640
    i32 7, label %706
    i32 8, label %763
    i32 9, label %799
    i32 10, label %839
    i32 11, label %852
    i32 12, label %876
    i32 15, label %886
    i32 14, label %912
  ]

186:                                              ; preds = %180
  %187 = bitcast %"class.blink::FilterOperation"* %183 to %"class.blink::ReferenceFilterOperation"*
  %188 = load %"class.blink::FilterEffect"*, %"class.blink::FilterEffect"** %10, align 8
  %189 = call %"class.blink::Filter"* @_ZNK5blink19FilterEffectBuilder20BuildReferenceFilterERKNS_24ReferenceFilterOperationEPNS_12FilterEffectEPNS_21SVGFilterGraphNodeMapE(%"class.blink::FilterEffectBuilder"* %0, %"class.blink::ReferenceFilterOperation"* dereferenceable(40) %187, %"class.blink::FilterEffect"* %188, %"class.blink::SVGFilterGraphNodeMap"* null)
  %190 = icmp eq %"class.blink::Filter"* %189, null
  br i1 %190, label %195, label %191

191:                                              ; preds = %186
  %192 = getelementptr inbounds %"class.blink::Filter", %"class.blink::Filter"* %189, i64 0, i32 5, i32 0, i32 0
  %193 = load %"class.blink::FilterEffect"*, %"class.blink::FilterEffect"** %192, align 8
  %194 = call %"class.blink::Filter"* @_ZNK5blink19FilterEffectBuilder20BuildReferenceFilterERKNS_24ReferenceFilterOperationEPNS_12FilterEffectEPNS_21SVGFilterGraphNodeMapE(%"class.blink::FilterEffectBuilder"* %0, %"class.blink::ReferenceFilterOperation"* dereferenceable(40) %187, %"class.blink::FilterEffect"* null, %"class.blink::SVGFilterGraphNodeMap"* null)
  br label %195

195:                                              ; preds = %186, %191
  %196 = phi %"class.blink::Filter"* [ %194, %191 ], [ null, %186 ]
  %197 = phi %"class.blink::FilterEffect"* [ %193, %191 ], [ null, %186 ]
  %198 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %183, i64 2
  %199 = ptrtoint %"class.blink::Filter"* %196 to i64
  %200 = bitcast %"class.blink::FilterOperation"* %198 to i64*
  store atomic i64 %199, i64* %200 monotonic, align 8
  %201 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %1073, label %203

203:                                              ; preds = %195
  %204 = bitcast %"class.blink::Filter"* %196 to i8*
  %205 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %204) #8
  br label %1073

206:                                              ; preds = %180
  %207 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %183, i64 1
  %208 = bitcast %"class.blink::FilterOperation"* %207 to double*
  %209 = load double, double* %208, align 8
  %210 = fsub double 1.000000e+00, %209
  %211 = fcmp ult double %210, 1.000000e+00
  %212 = fcmp ole double %210, 0.000000e+00
  %213 = select i1 %212, double 0.000000e+00, double %210
  %214 = select i1 %211, double %213, double 1.000000e+00
  %215 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 80) #8
  %216 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %215, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIfEEPKcv, i64 0, i64 0)) #8
  %217 = ptrtoint i8* %216 to i64
  %218 = lshr i64 %215, 2
  %219 = trunc i64 %218 to i32
  %220 = fmul double %214, 7.874000e-01
  %221 = fadd double %220, 2.126000e-01
  %222 = fcmp ult double %221, 0x47EFFFFFE0000000
  br i1 %222, label %223, label %228

223:                                              ; preds = %206
  %224 = fcmp ole double %221, 0xC7EFFFFFE0000000
  %225 = fptrunc double %221 to float
  %226 = bitcast float %225 to i32
  %227 = select i1 %224, i32 -8388609, i32 %226
  br label %228

228:                                              ; preds = %223, %206
  %229 = phi i32 [ %227, %223 ], [ 2139095039, %206 ]
  %230 = bitcast i8* %216 to i32*
  store i32 %229, i32* %230, align 4
  %231 = fmul double %214, 7.152000e-01
  %232 = fsub double 7.152000e-01, %231
  %233 = fcmp ult double %232, 0x47EFFFFFE0000000
  br i1 %233, label %234, label %239

234:                                              ; preds = %228
  %235 = fcmp ole double %232, 0xC7EFFFFFE0000000
  %236 = fptrunc double %232 to float
  %237 = bitcast float %236 to i32
  %238 = select i1 %235, i32 -8388609, i32 %237
  br label %239

239:                                              ; preds = %234, %228
  %240 = phi i32 [ %238, %234 ], [ 2139095039, %228 ]
  %241 = getelementptr inbounds i8, i8* %216, i64 4
  %242 = bitcast i8* %241 to i32*
  store i32 %240, i32* %242, align 4
  %243 = fmul double %214, 7.220000e-02
  %244 = fsub double 7.220000e-02, %243
  %245 = fcmp ult double %244, 0x47EFFFFFE0000000
  br i1 %245, label %246, label %251

246:                                              ; preds = %239
  %247 = fcmp ole double %244, 0xC7EFFFFFE0000000
  %248 = fptrunc double %244 to float
  %249 = bitcast float %248 to i32
  %250 = select i1 %247, i32 -8388609, i32 %249
  br label %251

251:                                              ; preds = %246, %239
  %252 = phi i32 [ %250, %246 ], [ 2139095039, %239 ]
  %253 = getelementptr inbounds i8, i8* %216, i64 8
  %254 = bitcast i8* %253 to i32*
  store i32 %252, i32* %254, align 4
  %255 = getelementptr inbounds i8, i8* %216, i64 12
  %256 = bitcast i8* %255 to float*
  store float 0.000000e+00, float* %256, align 4
  %257 = getelementptr inbounds i8, i8* %216, i64 16
  %258 = bitcast i8* %257 to float*
  store float 0.000000e+00, float* %258, align 4
  %259 = fmul double %214, 2.126000e-01
  %260 = fsub double 2.126000e-01, %259
  %261 = fcmp ult double %260, 0x47EFFFFFE0000000
  br i1 %261, label %262, label %267

262:                                              ; preds = %251
  %263 = fcmp ole double %260, 0xC7EFFFFFE0000000
  %264 = fptrunc double %260 to float
  %265 = bitcast float %264 to i32
  %266 = select i1 %263, i32 -8388609, i32 %265
  br label %267

267:                                              ; preds = %262, %251
  %268 = phi i32 [ %266, %262 ], [ 2139095039, %251 ]
  %269 = getelementptr inbounds i8, i8* %216, i64 20
  %270 = bitcast i8* %269 to i32*
  store i32 %268, i32* %270, align 4
  %271 = fmul double %214, 2.848000e-01
  %272 = fadd double %271, 7.152000e-01
  %273 = fcmp ult double %272, 0x47EFFFFFE0000000
  br i1 %273, label %274, label %279

274:                                              ; preds = %267
  %275 = fcmp ole double %272, 0xC7EFFFFFE0000000
  %276 = fptrunc double %272 to float
  %277 = bitcast float %276 to i32
  %278 = select i1 %275, i32 -8388609, i32 %277
  br label %279

279:                                              ; preds = %274, %267
  %280 = phi i32 [ %278, %274 ], [ 2139095039, %267 ]
  %281 = getelementptr inbounds i8, i8* %216, i64 24
  %282 = bitcast i8* %281 to i32*
  store i32 %280, i32* %282, align 4
  br i1 %245, label %283, label %288

283:                                              ; preds = %279
  %284 = fcmp ole double %244, 0xC7EFFFFFE0000000
  %285 = fptrunc double %244 to float
  %286 = bitcast float %285 to i32
  %287 = select i1 %284, i32 -8388609, i32 %286
  br label %288

288:                                              ; preds = %283, %279
  %289 = phi i32 [ %287, %283 ], [ 2139095039, %279 ]
  %290 = getelementptr inbounds i8, i8* %216, i64 28
  %291 = bitcast i8* %290 to i32*
  store i32 %289, i32* %291, align 4
  %292 = getelementptr inbounds i8, i8* %216, i64 32
  %293 = bitcast i8* %292 to float*
  store float 0.000000e+00, float* %293, align 4
  %294 = getelementptr inbounds i8, i8* %216, i64 36
  %295 = bitcast i8* %294 to float*
  store float 0.000000e+00, float* %295, align 4
  br i1 %261, label %296, label %301

296:                                              ; preds = %288
  %297 = fcmp ole double %260, 0xC7EFFFFFE0000000
  %298 = fptrunc double %260 to float
  %299 = bitcast float %298 to i32
  %300 = select i1 %297, i32 -8388609, i32 %299
  br label %301

301:                                              ; preds = %296, %288
  %302 = phi i32 [ %300, %296 ], [ 2139095039, %288 ]
  %303 = getelementptr inbounds i8, i8* %216, i64 40
  %304 = bitcast i8* %303 to i32*
  store i32 %302, i32* %304, align 4
  br i1 %233, label %305, label %310

305:                                              ; preds = %301
  %306 = fcmp ole double %232, 0xC7EFFFFFE0000000
  %307 = fptrunc double %232 to float
  %308 = bitcast float %307 to i32
  %309 = select i1 %306, i32 -8388609, i32 %308
  br label %310

310:                                              ; preds = %305, %301
  %311 = phi i32 [ %309, %305 ], [ 2139095039, %301 ]
  %312 = getelementptr inbounds i8, i8* %216, i64 44
  %313 = bitcast i8* %312 to i32*
  store i32 %311, i32* %313, align 4
  %314 = fmul double %214, 0x3FEDB089A0275254
  %315 = fadd double %314, 7.220000e-02
  %316 = fcmp ult double %315, 0x47EFFFFFE0000000
  br i1 %316, label %317, label %322

317:                                              ; preds = %310
  %318 = fcmp ole double %315, 0xC7EFFFFFE0000000
  %319 = fptrunc double %315 to float
  %320 = bitcast float %319 to i32
  %321 = select i1 %318, i32 -8388609, i32 %320
  br label %322

322:                                              ; preds = %310, %317
  %323 = phi i32 [ %321, %317 ], [ 2139095039, %310 ]
  %324 = getelementptr inbounds i8, i8* %216, i64 48
  %325 = bitcast i8* %324 to i32*
  store i32 %323, i32* %325, align 4
  %326 = getelementptr inbounds i8, i8* %216, i64 52
  %327 = getelementptr inbounds i8, i8* %216, i64 72
  %328 = bitcast i8* %327 to float*
  call void @llvm.memset.p0i8.i64(i8* align 4 %326, i8 0, i64 20, i1 false)
  store float 1.000000e+00, float* %328, align 4
  %329 = getelementptr inbounds i8, i8* %216, i64 76
  %330 = bitcast i8* %329 to float*
  store float 0.000000e+00, float* %330, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %170) #8
  %331 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_12FilterEffectEEEPhm(i64 112) #8
  %332 = bitcast i8* %331 to %"class.blink::FEColorMatrix"*
  store atomic i64 %217, i64* %173 monotonic, align 8
  store i32 %219, i32* %171, align 8
  store i32 20, i32* %172, align 4
  call void @_ZN5blink13FEColorMatrixC1EPNS_6FilterENS_15ColorMatrixTypeEN3WTF6VectorIfLj0ENS4_18PartitionAllocatorEEE(%"class.blink::FEColorMatrix"* %332, %"class.blink::Filter"* %35, i32 1, %"class.WTF::Vector.720"* nonnull %9) #8
  %333 = load float*, float** %174, align 8
  %334 = icmp eq float* %333, null
  %335 = bitcast float* %333 to i8*
  br i1 %334, label %341, label %336, !prof !2

336:                                              ; preds = %322
  %337 = load i32, i32* %172, align 4
  %338 = icmp eq i32 %337, 0
  br i1 %338, label %340, label %339, !prof !3

339:                                              ; preds = %336
  store i32 0, i32* %172, align 4
  br label %340

340:                                              ; preds = %339, %336
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %335) #8
  store float* null, float** %174, align 8
  br label %341

341:                                              ; preds = %340, %322
  %342 = getelementptr inbounds i8, i8* %331, i64 -4
  %343 = bitcast i8* %342 to i16*
  %344 = load atomic i16, i16* %343 monotonic, align 2
  %345 = or i16 %344, 1
  store atomic i16 %345, i16* %343 release, align 2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %170) #8
  %346 = bitcast i8* %331 to %"class.blink::FilterEffect"*
  br label %1073

347:                                              ; preds = %180
  %348 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %183, i64 1
  %349 = bitcast %"class.blink::FilterOperation"* %348 to double*
  %350 = load double, double* %349, align 8
  %351 = fsub double 1.000000e+00, %350
  %352 = fcmp ult double %351, 1.000000e+00
  %353 = fcmp ole double %351, 0.000000e+00
  %354 = select i1 %353, double 0.000000e+00, double %351
  %355 = select i1 %352, double %354, double 1.000000e+00
  %356 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 80) #8
  %357 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %356, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIfEEPKcv, i64 0, i64 0)) #8
  %358 = ptrtoint i8* %357 to i64
  %359 = lshr i64 %356, 2
  %360 = trunc i64 %359 to i32
  %361 = fmul double %355, 0x3FE36C8B43958106
  %362 = fadd double %361, 3.930000e-01
  %363 = fcmp ult double %362, 0x47EFFFFFE0000000
  br i1 %363, label %364, label %369

364:                                              ; preds = %347
  %365 = fcmp ole double %362, 0xC7EFFFFFE0000000
  %366 = fptrunc double %362 to float
  %367 = bitcast float %366 to i32
  %368 = select i1 %365, i32 -8388609, i32 %367
  br label %369

369:                                              ; preds = %364, %347
  %370 = phi i32 [ %368, %364 ], [ 2139095039, %347 ]
  %371 = bitcast i8* %357 to i32*
  store i32 %370, i32* %371, align 4
  %372 = fmul double %355, 7.690000e-01
  %373 = fsub double 7.690000e-01, %372
  %374 = fcmp ult double %373, 0x47EFFFFFE0000000
  br i1 %374, label %375, label %380

375:                                              ; preds = %369
  %376 = fcmp ole double %373, 0xC7EFFFFFE0000000
  %377 = fptrunc double %373 to float
  %378 = bitcast float %377 to i32
  %379 = select i1 %376, i32 -8388609, i32 %378
  br label %380

380:                                              ; preds = %375, %369
  %381 = phi i32 [ %379, %375 ], [ 2139095039, %369 ]
  %382 = getelementptr inbounds i8, i8* %357, i64 4
  %383 = bitcast i8* %382 to i32*
  store i32 %381, i32* %383, align 4
  %384 = fmul double %355, 1.890000e-01
  %385 = fsub double 1.890000e-01, %384
  %386 = fcmp ult double %385, 0x47EFFFFFE0000000
  br i1 %386, label %387, label %392

387:                                              ; preds = %380
  %388 = fcmp ole double %385, 0xC7EFFFFFE0000000
  %389 = fptrunc double %385 to float
  %390 = bitcast float %389 to i32
  %391 = select i1 %388, i32 -8388609, i32 %390
  br label %392

392:                                              ; preds = %387, %380
  %393 = phi i32 [ %391, %387 ], [ 2139095039, %380 ]
  %394 = getelementptr inbounds i8, i8* %357, i64 8
  %395 = bitcast i8* %394 to i32*
  store i32 %393, i32* %395, align 4
  %396 = getelementptr inbounds i8, i8* %357, i64 12
  %397 = bitcast i8* %396 to float*
  store float 0.000000e+00, float* %397, align 4
  %398 = getelementptr inbounds i8, i8* %357, i64 16
  %399 = bitcast i8* %398 to float*
  store float 0.000000e+00, float* %399, align 4
  %400 = fmul double %355, 3.490000e-01
  %401 = fsub double 3.490000e-01, %400
  %402 = fcmp ult double %401, 0x47EFFFFFE0000000
  br i1 %402, label %403, label %408

403:                                              ; preds = %392
  %404 = fcmp ole double %401, 0xC7EFFFFFE0000000
  %405 = fptrunc double %401 to float
  %406 = bitcast float %405 to i32
  %407 = select i1 %404, i32 -8388609, i32 %406
  br label %408

408:                                              ; preds = %403, %392
  %409 = phi i32 [ %407, %403 ], [ 2139095039, %392 ]
  %410 = getelementptr inbounds i8, i8* %357, i64 20
  %411 = bitcast i8* %410 to i32*
  store i32 %409, i32* %411, align 4
  %412 = fmul double %355, 3.140000e-01
  %413 = fadd double %412, 6.860000e-01
  %414 = fcmp ult double %413, 0x47EFFFFFE0000000
  br i1 %414, label %415, label %420

415:                                              ; preds = %408
  %416 = fcmp ole double %413, 0xC7EFFFFFE0000000
  %417 = fptrunc double %413 to float
  %418 = bitcast float %417 to i32
  %419 = select i1 %416, i32 -8388609, i32 %418
  br label %420

420:                                              ; preds = %415, %408
  %421 = phi i32 [ %419, %415 ], [ 2139095039, %408 ]
  %422 = getelementptr inbounds i8, i8* %357, i64 24
  %423 = bitcast i8* %422 to i32*
  store i32 %421, i32* %423, align 4
  %424 = fmul double %355, 1.680000e-01
  %425 = fsub double 1.680000e-01, %424
  %426 = fcmp ult double %425, 0x47EFFFFFE0000000
  br i1 %426, label %427, label %432

427:                                              ; preds = %420
  %428 = fcmp ole double %425, 0xC7EFFFFFE0000000
  %429 = fptrunc double %425 to float
  %430 = bitcast float %429 to i32
  %431 = select i1 %428, i32 -8388609, i32 %430
  br label %432

432:                                              ; preds = %427, %420
  %433 = phi i32 [ %431, %427 ], [ 2139095039, %420 ]
  %434 = getelementptr inbounds i8, i8* %357, i64 28
  %435 = bitcast i8* %434 to i32*
  store i32 %433, i32* %435, align 4
  %436 = getelementptr inbounds i8, i8* %357, i64 32
  %437 = bitcast i8* %436 to float*
  store float 0.000000e+00, float* %437, align 4
  %438 = getelementptr inbounds i8, i8* %357, i64 36
  %439 = bitcast i8* %438 to float*
  store float 0.000000e+00, float* %439, align 4
  %440 = fmul double %355, 2.720000e-01
  %441 = fsub double 2.720000e-01, %440
  %442 = fcmp ult double %441, 0x47EFFFFFE0000000
  br i1 %442, label %443, label %448

443:                                              ; preds = %432
  %444 = fcmp ole double %441, 0xC7EFFFFFE0000000
  %445 = fptrunc double %441 to float
  %446 = bitcast float %445 to i32
  %447 = select i1 %444, i32 -8388609, i32 %446
  br label %448

448:                                              ; preds = %443, %432
  %449 = phi i32 [ %447, %443 ], [ 2139095039, %432 ]
  %450 = getelementptr inbounds i8, i8* %357, i64 40
  %451 = bitcast i8* %450 to i32*
  store i32 %449, i32* %451, align 4
  %452 = fmul double %355, 5.340000e-01
  %453 = fsub double 5.340000e-01, %452
  %454 = fcmp ult double %453, 0x47EFFFFFE0000000
  br i1 %454, label %455, label %460

455:                                              ; preds = %448
  %456 = fcmp ole double %453, 0xC7EFFFFFE0000000
  %457 = fptrunc double %453 to float
  %458 = bitcast float %457 to i32
  %459 = select i1 %456, i32 -8388609, i32 %458
  br label %460

460:                                              ; preds = %455, %448
  %461 = phi i32 [ %459, %455 ], [ 2139095039, %448 ]
  %462 = getelementptr inbounds i8, i8* %357, i64 44
  %463 = bitcast i8* %462 to i32*
  store i32 %461, i32* %463, align 4
  %464 = fmul double %355, 0x3FEBCED916872B02
  %465 = fadd double %464, 1.310000e-01
  %466 = fcmp ult double %465, 0x47EFFFFFE0000000
  br i1 %466, label %467, label %472

467:                                              ; preds = %460
  %468 = fcmp ole double %465, 0xC7EFFFFFE0000000
  %469 = fptrunc double %465 to float
  %470 = bitcast float %469 to i32
  %471 = select i1 %468, i32 -8388609, i32 %470
  br label %472

472:                                              ; preds = %460, %467
  %473 = phi i32 [ %471, %467 ], [ 2139095039, %460 ]
  %474 = getelementptr inbounds i8, i8* %357, i64 48
  %475 = bitcast i8* %474 to i32*
  store i32 %473, i32* %475, align 4
  %476 = getelementptr inbounds i8, i8* %357, i64 52
  %477 = getelementptr inbounds i8, i8* %357, i64 72
  %478 = bitcast i8* %477 to float*
  call void @llvm.memset.p0i8.i64(i8* align 4 %476, i8 0, i64 20, i1 false)
  store float 1.000000e+00, float* %478, align 4
  %479 = getelementptr inbounds i8, i8* %357, i64 76
  %480 = bitcast i8* %479 to float*
  store float 0.000000e+00, float* %480, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %165) #8
  %481 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_12FilterEffectEEEPhm(i64 112) #8
  %482 = bitcast i8* %481 to %"class.blink::FEColorMatrix"*
  store atomic i64 %358, i64* %168 monotonic, align 8
  store i32 %360, i32* %166, align 8
  store i32 20, i32* %167, align 4
  call void @_ZN5blink13FEColorMatrixC1EPNS_6FilterENS_15ColorMatrixTypeEN3WTF6VectorIfLj0ENS4_18PartitionAllocatorEEE(%"class.blink::FEColorMatrix"* %482, %"class.blink::Filter"* %35, i32 1, %"class.WTF::Vector.720"* nonnull %8) #8
  %483 = load float*, float** %169, align 8
  %484 = icmp eq float* %483, null
  %485 = bitcast float* %483 to i8*
  br i1 %484, label %491, label %486, !prof !2

486:                                              ; preds = %472
  %487 = load i32, i32* %167, align 4
  %488 = icmp eq i32 %487, 0
  br i1 %488, label %490, label %489, !prof !3

489:                                              ; preds = %486
  store i32 0, i32* %167, align 4
  br label %490

490:                                              ; preds = %489, %486
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %485) #8
  store float* null, float** %169, align 8
  br label %491

491:                                              ; preds = %490, %472
  %492 = getelementptr inbounds i8, i8* %481, i64 -4
  %493 = bitcast i8* %492 to i16*
  %494 = load atomic i16, i16* %493 monotonic, align 2
  %495 = or i16 %494, 1
  store atomic i16 %495, i16* %493 release, align 2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %165) #8
  %496 = bitcast i8* %481 to %"class.blink::FilterEffect"*
  br label %1073

497:                                              ; preds = %180
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %154) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %154, i8 0, i64 16, i1 false) #8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158) #8
  %498 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %183, i64 1
  %499 = bitcast %"class.blink::FilterOperation"* %498 to double*
  %500 = load double, double* %499, align 8
  %501 = fcmp ult double %500, 0x47EFFFFFE0000000
  br i1 %501, label %502, label %506

502:                                              ; preds = %497
  %503 = fcmp ole double %500, 0xC7EFFFFFE0000000
  %504 = select i1 %503, double 0xC7EFFFFFE0000000, double %500
  %505 = fptrunc double %504 to float
  br label %506

506:                                              ; preds = %497, %502
  %507 = phi float [ %505, %502 ], [ 0x47EFFFFFE0000000, %497 ]
  store float %507, float* %12, align 4
  call void @_ZN3WTF6VectorIfLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIfEEvOT_(%"class.WTF::Vector.720"* nonnull %11, float* nonnull dereferenceable(4) %12) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158) #8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %159) #8
  %508 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_12FilterEffectEEEPhm(i64 112) #8
  %509 = bitcast i8* %508 to %"class.blink::FEColorMatrix"*
  store i64 0, i64* %163, align 8
  %510 = load i64, i64* %162, align 8
  store atomic i64 0, i64* %162 monotonic, align 8
  store atomic i64 %510, i64* %163 monotonic, align 8
  %511 = load i32, i32* %156, align 8
  store i32 %511, i32* %160, align 8
  store i32 0, i32* %156, align 8
  %512 = load i32, i32* %157, align 4
  store i32 %512, i32* %161, align 4
  store i32 0, i32* %157, align 4
  call void @_ZN5blink13FEColorMatrixC1EPNS_6FilterENS_15ColorMatrixTypeEN3WTF6VectorIfLj0ENS4_18PartitionAllocatorEEE(%"class.blink::FEColorMatrix"* %509, %"class.blink::Filter"* %35, i32 2, %"class.WTF::Vector.720"* nonnull %7) #8
  %513 = load float*, float** %164, align 8
  %514 = icmp eq float* %513, null
  %515 = bitcast float* %513 to i8*
  br i1 %514, label %521, label %516, !prof !2

516:                                              ; preds = %506
  %517 = load i32, i32* %161, align 4
  %518 = icmp eq i32 %517, 0
  br i1 %518, label %520, label %519, !prof !3

519:                                              ; preds = %516
  store i32 0, i32* %161, align 4
  br label %520

520:                                              ; preds = %519, %516
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %515) #8
  store float* null, float** %164, align 8
  br label %521

521:                                              ; preds = %506, %520
  %522 = getelementptr inbounds i8, i8* %508, i64 -4
  %523 = bitcast i8* %522 to i16*
  %524 = load atomic i16, i16* %523 monotonic, align 2
  %525 = or i16 %524, 1
  store atomic i16 %525, i16* %523 release, align 2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %159) #8
  %526 = bitcast i8* %508 to %"class.blink::FilterEffect"*
  %527 = load float*, float** %155, align 8
  %528 = icmp eq float* %527, null
  %529 = bitcast float* %527 to i8*
  br i1 %528, label %535, label %530, !prof !2

530:                                              ; preds = %521
  %531 = load i32, i32* %157, align 4
  %532 = icmp eq i32 %531, 0
  br i1 %532, label %534, label %533, !prof !3

533:                                              ; preds = %530
  store i32 0, i32* %157, align 4
  br label %534

534:                                              ; preds = %533, %530
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %529) #8
  store float* null, float** %155, align 8
  br label %535

535:                                              ; preds = %521, %534
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %154) #8
  br label %1073

536:                                              ; preds = %180
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %143) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %143, i8 0, i64 16, i1 false) #8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %147) #8
  %537 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %183, i64 1
  %538 = bitcast %"class.blink::FilterOperation"* %537 to double*
  %539 = load double, double* %538, align 8
  %540 = fcmp ult double %539, 0x47EFFFFFE0000000
  br i1 %540, label %541, label %545

541:                                              ; preds = %536
  %542 = fcmp ole double %539, 0xC7EFFFFFE0000000
  %543 = select i1 %542, double 0xC7EFFFFFE0000000, double %539
  %544 = fptrunc double %543 to float
  br label %545

545:                                              ; preds = %536, %541
  %546 = phi float [ %544, %541 ], [ 0x47EFFFFFE0000000, %536 ]
  store float %546, float* %14, align 4
  call void @_ZN3WTF6VectorIfLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIfEEvOT_(%"class.WTF::Vector.720"* nonnull %13, float* nonnull dereferenceable(4) %14) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %147) #8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %148) #8
  %547 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_12FilterEffectEEEPhm(i64 112) #8
  %548 = bitcast i8* %547 to %"class.blink::FEColorMatrix"*
  store i64 0, i64* %152, align 8
  %549 = load i64, i64* %151, align 8
  store atomic i64 0, i64* %151 monotonic, align 8
  store atomic i64 %549, i64* %152 monotonic, align 8
  %550 = load i32, i32* %145, align 8
  store i32 %550, i32* %149, align 8
  store i32 0, i32* %145, align 8
  %551 = load i32, i32* %146, align 4
  store i32 %551, i32* %150, align 4
  store i32 0, i32* %146, align 4
  call void @_ZN5blink13FEColorMatrixC1EPNS_6FilterENS_15ColorMatrixTypeEN3WTF6VectorIfLj0ENS4_18PartitionAllocatorEEE(%"class.blink::FEColorMatrix"* %548, %"class.blink::Filter"* %35, i32 3, %"class.WTF::Vector.720"* nonnull %6) #8
  %552 = load float*, float** %153, align 8
  %553 = icmp eq float* %552, null
  %554 = bitcast float* %552 to i8*
  br i1 %553, label %560, label %555, !prof !2

555:                                              ; preds = %545
  %556 = load i32, i32* %150, align 4
  %557 = icmp eq i32 %556, 0
  br i1 %557, label %559, label %558, !prof !3

558:                                              ; preds = %555
  store i32 0, i32* %150, align 4
  br label %559

559:                                              ; preds = %558, %555
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %554) #8
  store float* null, float** %153, align 8
  br label %560

560:                                              ; preds = %545, %559
  %561 = getelementptr inbounds i8, i8* %547, i64 -4
  %562 = bitcast i8* %561 to i16*
  %563 = load atomic i16, i16* %562 monotonic, align 2
  %564 = or i16 %563, 1
  store atomic i16 %564, i16* %562 release, align 2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %148) #8
  %565 = bitcast i8* %547 to %"class.blink::FilterEffect"*
  %566 = load float*, float** %144, align 8
  %567 = icmp eq float* %566, null
  %568 = bitcast float* %566 to i8*
  br i1 %567, label %574, label %569, !prof !2

569:                                              ; preds = %560
  %570 = load i32, i32* %146, align 4
  %571 = icmp eq i32 %570, 0
  br i1 %571, label %573, label %572, !prof !3

572:                                              ; preds = %569
  store i32 0, i32* %146, align 4
  br label %573

573:                                              ; preds = %572, %569
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %568) #8
  store float* null, float** %144, align 8
  br label %574

574:                                              ; preds = %560, %573
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %143) #8
  br label %1073

575:                                              ; preds = %180
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %138) #8
  %576 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_12FilterEffectEEEPhm(i64 112) #8
  %577 = bitcast i8* %576 to %"class.blink::FEColorMatrix"*
  store atomic i64 0, i64* %141 monotonic, align 8
  store i32 0, i32* %139, align 8
  store i32 0, i32* %140, align 4
  call void @_ZN5blink13FEColorMatrixC1EPNS_6FilterENS_15ColorMatrixTypeEN3WTF6VectorIfLj0ENS4_18PartitionAllocatorEEE(%"class.blink::FEColorMatrix"* %577, %"class.blink::Filter"* %35, i32 4, %"class.WTF::Vector.720"* nonnull %5) #8
  %578 = load float*, float** %142, align 8
  %579 = icmp eq float* %578, null
  %580 = bitcast float* %578 to i8*
  br i1 %579, label %586, label %581, !prof !2

581:                                              ; preds = %575
  %582 = load i32, i32* %140, align 4
  %583 = icmp eq i32 %582, 0
  br i1 %583, label %585, label %584, !prof !3

584:                                              ; preds = %581
  store i32 0, i32* %140, align 4
  br label %585

585:                                              ; preds = %584, %581
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %580) #8
  store float* null, float** %142, align 8
  br label %586

586:                                              ; preds = %585, %575
  %587 = getelementptr inbounds i8, i8* %576, i64 -4
  %588 = bitcast i8* %587 to i16*
  %589 = load atomic i16, i16* %588 monotonic, align 2
  %590 = or i16 %589, 1
  store atomic i16 %590, i16* %588 release, align 2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %138) #8
  %591 = bitcast i8* %576 to %"class.blink::FilterEffect"*
  br label %1073

592:                                              ; preds = %180
  %593 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %183, i64 1, i32 1
  %594 = load i32, i32* %593, align 8
  %595 = icmp eq i32 %594, 0
  br i1 %595, label %596, label %600

596:                                              ; preds = %592
  %597 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %183, i64 1, i32 2
  %598 = bitcast [4 x i8]* %597 to i32*
  %599 = load i32, i32* %598, align 4
  br label %620

600:                                              ; preds = %592
  %601 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %183, i64 1
  %602 = zext i32 %594 to i64
  %603 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm(i64 %602) #8
  %604 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %603, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIfEEPKcv, i64 0, i64 0)) #8
  %605 = ptrtoint i8* %604 to i64
  %606 = lshr i64 %603, 2
  %607 = trunc i64 %606 to i32
  %608 = icmp ne i8* %604, null
  %609 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %183, i64 1, i32 2
  %610 = bitcast [4 x i8]* %609 to i32*
  %611 = load i32, i32* %610, align 4
  %612 = bitcast %"class.blink::FilterOperation"* %601 to float**
  %613 = load float*, float** %612, align 8
  %614 = icmp ne float* %613, null
  %615 = and i1 %608, %614
  br i1 %615, label %616, label %620, !prof !2

616:                                              ; preds = %600
  %617 = zext i32 %611 to i64
  %618 = bitcast float* %613 to i8*
  %619 = shl nuw nsw i64 %617, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %604, i8* nonnull align 4 %618, i64 %619, i1 false) #8
  br label %620

620:                                              ; preds = %596, %600, %616
  %621 = phi i32 [ %599, %596 ], [ %611, %600 ], [ %611, %616 ]
  %622 = phi i32 [ 0, %596 ], [ %607, %600 ], [ %607, %616 ]
  %623 = phi i64 [ 0, %596 ], [ %605, %600 ], [ %605, %616 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %133) #8
  %624 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_12FilterEffectEEEPhm(i64 112) #8
  %625 = bitcast i8* %624 to %"class.blink::FEColorMatrix"*
  store atomic i64 %623, i64* %136 monotonic, align 8
  store i32 %622, i32* %134, align 8
  store i32 %621, i32* %135, align 4
  call void @_ZN5blink13FEColorMatrixC1EPNS_6FilterENS_15ColorMatrixTypeEN3WTF6VectorIfLj0ENS4_18PartitionAllocatorEEE(%"class.blink::FEColorMatrix"* %625, %"class.blink::Filter"* %35, i32 1, %"class.WTF::Vector.720"* nonnull %4) #8
  %626 = load float*, float** %137, align 8
  %627 = icmp eq float* %626, null
  %628 = bitcast float* %626 to i8*
  br i1 %627, label %634, label %629, !prof !2

629:                                              ; preds = %620
  %630 = load i32, i32* %135, align 4
  %631 = icmp eq i32 %630, 0
  br i1 %631, label %633, label %632, !prof !3

632:                                              ; preds = %629
  store i32 0, i32* %135, align 4
  br label %633

633:                                              ; preds = %632, %629
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %628) #8
  store float* null, float** %137, align 8
  br label %634

634:                                              ; preds = %633, %620
  %635 = getelementptr inbounds i8, i8* %624, i64 -4
  %636 = bitcast i8* %635 to i16*
  %637 = load atomic i16, i16* %636 monotonic, align 2
  %638 = or i16 %637, 1
  store atomic i16 %638, i16* %636 release, align 2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %133) #8
  %639 = bitcast i8* %624 to %"class.blink::FilterEffect"*
  br label %1073

640:                                              ; preds = %180
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %119) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %119, i8 0, i64 40, i1 false) #8
  store i32 2, i32* %120, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %123) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %123, i8 0, i64 16, i1 false) #8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %127) #8
  %641 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %183, i64 1
  %642 = bitcast %"class.blink::FilterOperation"* %641 to double*
  %643 = load double, double* %642, align 8
  %644 = fcmp ult double %643, 0x47EFFFFFE0000000
  br i1 %644, label %645, label %649

645:                                              ; preds = %640
  %646 = fcmp ole double %643, 0xC7EFFFFFE0000000
  %647 = select i1 %646, double 0xC7EFFFFFE0000000, double %643
  %648 = fptrunc double %647 to float
  br label %649

649:                                              ; preds = %640, %645
  %650 = phi float [ %648, %645 ], [ 0x47EFFFFFE0000000, %640 ]
  store float %650, float* %17, align 4
  call void @_ZN3WTF6VectorIfLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIfEEvOT_(%"class.WTF::Vector.720"* nonnull %16, float* nonnull dereferenceable(4) %17) #8
  %651 = load double, double* %642, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %127) #8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %128) #8
  %652 = fsub double 1.000000e+00, %651
  %653 = fcmp ult double %652, 0x47EFFFFFE0000000
  br i1 %653, label %654, label %658

654:                                              ; preds = %649
  %655 = fcmp ole double %652, 0xC7EFFFFFE0000000
  %656 = select i1 %655, double 0xC7EFFFFFE0000000, double %652
  %657 = fptrunc double %656 to float
  br label %658

658:                                              ; preds = %649, %654
  %659 = phi float [ %657, %654 ], [ 0x47EFFFFFE0000000, %649 ]
  store float %659, float* %18, align 4
  %660 = load i32, i32* %126, align 4
  %661 = load i32, i32* %125, align 8
  %662 = icmp eq i32 %660, %661
  br i1 %662, label %669, label %663, !prof !3

663:                                              ; preds = %658
  %664 = load float*, float** %124, align 8
  %665 = zext i32 %660 to i64
  %666 = getelementptr inbounds float, float* %664, i64 %665
  store float %659, float* %666, align 4
  %667 = load i32, i32* %126, align 4
  %668 = add i32 %667, 1
  store i32 %668, i32* %126, align 4
  br label %670

669:                                              ; preds = %658
  call void @_ZN3WTF6VectorIfLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIfEEvOT_(%"class.WTF::Vector.720"* nonnull %16, float* nonnull dereferenceable(4) %18) #8
  br label %670

670:                                              ; preds = %663, %669
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %128) #8
  %671 = call dereferenceable(16) %"class.WTF::Vector.720"* @_ZN3WTF6VectorIfLj0ENS_18PartitionAllocatorEEaSERKS2_(%"class.WTF::Vector.720"* %121, %"class.WTF::Vector.720"* nonnull dereferenceable(16) %16)
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %129) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %129, i8 0, i64 40, i1 false) #8
  %672 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_12FilterEffectEEEPhm(i64 248) #8
  %673 = bitcast i8* %672 to %"class.blink::FEComponentTransfer"*
  call void @_ZN5blink19FEComponentTransferC1EPNS_6FilterERKNS_25ComponentTransferFunctionES5_S5_S5_(%"class.blink::FEComponentTransfer"* %673, %"class.blink::Filter"* %35, %"struct.blink::ComponentTransferFunction"* nonnull dereferenceable(40) %15, %"struct.blink::ComponentTransferFunction"* nonnull dereferenceable(40) %15, %"struct.blink::ComponentTransferFunction"* nonnull dereferenceable(40) %15, %"struct.blink::ComponentTransferFunction"* nonnull dereferenceable(40) %19) #8
  %674 = getelementptr inbounds i8, i8* %672, i64 -4
  %675 = bitcast i8* %674 to i16*
  %676 = load atomic i16, i16* %675 monotonic, align 2
  %677 = or i16 %676, 1
  store atomic i16 %677, i16* %675 release, align 2
  %678 = bitcast i8* %672 to %"class.blink::FilterEffect"*
  %679 = load float*, float** %130, align 8
  %680 = icmp eq float* %679, null
  %681 = bitcast float* %679 to i8*
  br i1 %680, label %687, label %682, !prof !2

682:                                              ; preds = %670
  %683 = load i32, i32* %131, align 4
  %684 = icmp eq i32 %683, 0
  br i1 %684, label %686, label %685, !prof !3

685:                                              ; preds = %682
  store i32 0, i32* %131, align 4
  br label %686

686:                                              ; preds = %685, %682
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %681) #8
  store float* null, float** %130, align 8
  br label %687

687:                                              ; preds = %670, %686
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %129) #8
  %688 = load float*, float** %124, align 8
  %689 = icmp eq float* %688, null
  %690 = bitcast float* %688 to i8*
  br i1 %689, label %696, label %691, !prof !2

691:                                              ; preds = %687
  %692 = load i32, i32* %126, align 4
  %693 = icmp eq i32 %692, 0
  br i1 %693, label %695, label %694, !prof !3

694:                                              ; preds = %691
  store i32 0, i32* %126, align 4
  br label %695

695:                                              ; preds = %694, %691
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %690) #8
  store float* null, float** %124, align 8
  br label %696

696:                                              ; preds = %687, %695
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %123) #8
  %697 = load float*, float** %132, align 8
  %698 = icmp eq float* %697, null
  %699 = bitcast float* %697 to i8*
  br i1 %698, label %705, label %700, !prof !2

700:                                              ; preds = %696
  %701 = load i32, i32* %122, align 4
  %702 = icmp eq i32 %701, 0
  br i1 %702, label %704, label %703, !prof !3

703:                                              ; preds = %700
  store i32 0, i32* %122, align 4
  br label %704

704:                                              ; preds = %703, %700
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %699) #8
  store float* null, float** %132, align 8
  br label %705

705:                                              ; preds = %696, %704
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %119) #8
  br label %1073

706:                                              ; preds = %180
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %105) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %105, i8 0, i64 40, i1 false) #8
  store i32 2, i32* %106, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %109) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %109, i8 0, i64 16, i1 false) #8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %113) #8
  store i32 0, i32* %22, align 4
  call void @_ZN3WTF6VectorIfLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIiEEvOT_(%"class.WTF::Vector.720"* nonnull %21, i32* nonnull dereferenceable(4) %22) #8
  %707 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %183, i64 1
  %708 = bitcast %"class.blink::FilterOperation"* %707 to double*
  %709 = load double, double* %708, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %113) #8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %114) #8
  %710 = fcmp ult double %709, 0x47EFFFFFE0000000
  br i1 %710, label %711, label %715

711:                                              ; preds = %706
  %712 = fcmp ole double %709, 0xC7EFFFFFE0000000
  %713 = select i1 %712, double 0xC7EFFFFFE0000000, double %709
  %714 = fptrunc double %713 to float
  br label %715

715:                                              ; preds = %706, %711
  %716 = phi float [ %714, %711 ], [ 0x47EFFFFFE0000000, %706 ]
  store float %716, float* %23, align 4
  %717 = load i32, i32* %112, align 4
  %718 = load i32, i32* %111, align 8
  %719 = icmp eq i32 %717, %718
  br i1 %719, label %726, label %720, !prof !3

720:                                              ; preds = %715
  %721 = load float*, float** %110, align 8
  %722 = zext i32 %717 to i64
  %723 = getelementptr inbounds float, float* %721, i64 %722
  store float %716, float* %723, align 4
  %724 = load i32, i32* %112, align 4
  %725 = add i32 %724, 1
  store i32 %725, i32* %112, align 4
  br label %727

726:                                              ; preds = %715
  call void @_ZN3WTF6VectorIfLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIfEEvOT_(%"class.WTF::Vector.720"* nonnull %21, float* nonnull dereferenceable(4) %23) #8
  br label %727

727:                                              ; preds = %720, %726
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %114) #8
  %728 = call dereferenceable(16) %"class.WTF::Vector.720"* @_ZN3WTF6VectorIfLj0ENS_18PartitionAllocatorEEaSERKS2_(%"class.WTF::Vector.720"* %107, %"class.WTF::Vector.720"* nonnull dereferenceable(16) %21)
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %115) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %115, i8 0, i64 40, i1 false) #8
  %729 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_12FilterEffectEEEPhm(i64 248) #8
  %730 = bitcast i8* %729 to %"class.blink::FEComponentTransfer"*
  call void @_ZN5blink19FEComponentTransferC1EPNS_6FilterERKNS_25ComponentTransferFunctionES5_S5_S5_(%"class.blink::FEComponentTransfer"* %730, %"class.blink::Filter"* %35, %"struct.blink::ComponentTransferFunction"* nonnull dereferenceable(40) %24, %"struct.blink::ComponentTransferFunction"* nonnull dereferenceable(40) %24, %"struct.blink::ComponentTransferFunction"* nonnull dereferenceable(40) %24, %"struct.blink::ComponentTransferFunction"* nonnull dereferenceable(40) %20) #8
  %731 = getelementptr inbounds i8, i8* %729, i64 -4
  %732 = bitcast i8* %731 to i16*
  %733 = load atomic i16, i16* %732 monotonic, align 2
  %734 = or i16 %733, 1
  store atomic i16 %734, i16* %732 release, align 2
  %735 = bitcast i8* %729 to %"class.blink::FilterEffect"*
  %736 = load float*, float** %116, align 8
  %737 = icmp eq float* %736, null
  %738 = bitcast float* %736 to i8*
  br i1 %737, label %744, label %739, !prof !2

739:                                              ; preds = %727
  %740 = load i32, i32* %117, align 4
  %741 = icmp eq i32 %740, 0
  br i1 %741, label %743, label %742, !prof !3

742:                                              ; preds = %739
  store i32 0, i32* %117, align 4
  br label %743

743:                                              ; preds = %742, %739
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %738) #8
  store float* null, float** %116, align 8
  br label %744

744:                                              ; preds = %727, %743
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %115) #8
  %745 = load float*, float** %110, align 8
  %746 = icmp eq float* %745, null
  %747 = bitcast float* %745 to i8*
  br i1 %746, label %753, label %748, !prof !2

748:                                              ; preds = %744
  %749 = load i32, i32* %112, align 4
  %750 = icmp eq i32 %749, 0
  br i1 %750, label %752, label %751, !prof !3

751:                                              ; preds = %748
  store i32 0, i32* %112, align 4
  br label %752

752:                                              ; preds = %751, %748
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %747) #8
  store float* null, float** %110, align 8
  br label %753

753:                                              ; preds = %744, %752
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %109) #8
  %754 = load float*, float** %118, align 8
  %755 = icmp eq float* %754, null
  %756 = bitcast float* %754 to i8*
  br i1 %755, label %762, label %757, !prof !2

757:                                              ; preds = %753
  %758 = load i32, i32* %108, align 4
  %759 = icmp eq i32 %758, 0
  br i1 %759, label %761, label %760, !prof !3

760:                                              ; preds = %757
  store i32 0, i32* %108, align 4
  br label %761

761:                                              ; preds = %760, %757
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %756) #8
  store float* null, float** %118, align 8
  br label %762

762:                                              ; preds = %753, %761
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %105) #8
  br label %1073

763:                                              ; preds = %180
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %96) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %96, i8 0, i64 40, i1 false) #8
  store i32 4, i32* %97, align 8
  %764 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %183, i64 1
  %765 = bitcast %"class.blink::FilterOperation"* %764 to double*
  %766 = load double, double* %765, align 8
  %767 = fcmp ult double %766, 0x47EFFFFFE0000000
  br i1 %767, label %768, label %772

768:                                              ; preds = %763
  %769 = fcmp ole double %766, 0xC7EFFFFFE0000000
  %770 = select i1 %769, double 0xC7EFFFFFE0000000, double %766
  %771 = fptrunc double %770 to float
  br label %772

772:                                              ; preds = %763, %768
  %773 = phi float [ %771, %768 ], [ 0x47EFFFFFE0000000, %763 ]
  store float %773, float* %98, align 4
  store float 0.000000e+00, float* %99, align 8
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %102) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %102, i8 0, i64 40, i1 false) #8
  %774 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_12FilterEffectEEEPhm(i64 248) #8
  %775 = bitcast i8* %774 to %"class.blink::FEComponentTransfer"*
  call void @_ZN5blink19FEComponentTransferC1EPNS_6FilterERKNS_25ComponentTransferFunctionES5_S5_S5_(%"class.blink::FEComponentTransfer"* %775, %"class.blink::Filter"* %35, %"struct.blink::ComponentTransferFunction"* nonnull dereferenceable(40) %25, %"struct.blink::ComponentTransferFunction"* nonnull dereferenceable(40) %25, %"struct.blink::ComponentTransferFunction"* nonnull dereferenceable(40) %25, %"struct.blink::ComponentTransferFunction"* nonnull dereferenceable(40) %26) #8
  %776 = getelementptr inbounds i8, i8* %774, i64 -4
  %777 = bitcast i8* %776 to i16*
  %778 = load atomic i16, i16* %777 monotonic, align 2
  %779 = or i16 %778, 1
  store atomic i16 %779, i16* %777 release, align 2
  %780 = bitcast i8* %774 to %"class.blink::FilterEffect"*
  %781 = load float*, float** %103, align 8
  %782 = icmp eq float* %781, null
  %783 = bitcast float* %781 to i8*
  br i1 %782, label %789, label %784, !prof !2

784:                                              ; preds = %772
  %785 = load i32, i32* %104, align 4
  %786 = icmp eq i32 %785, 0
  br i1 %786, label %788, label %787, !prof !3

787:                                              ; preds = %784
  store i32 0, i32* %104, align 4
  br label %788

788:                                              ; preds = %787, %784
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %783) #8
  store float* null, float** %103, align 8
  br label %789

789:                                              ; preds = %772, %788
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %102) #8
  %790 = load float*, float** %100, align 8
  %791 = icmp eq float* %790, null
  %792 = bitcast float* %790 to i8*
  br i1 %791, label %798, label %793, !prof !2

793:                                              ; preds = %789
  %794 = load i32, i32* %101, align 4
  %795 = icmp eq i32 %794, 0
  br i1 %795, label %797, label %796, !prof !3

796:                                              ; preds = %793
  store i32 0, i32* %101, align 4
  br label %797

797:                                              ; preds = %796, %793
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %792) #8
  store float* null, float** %100, align 8
  br label %798

798:                                              ; preds = %789, %797
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %96) #8
  br label %1073

799:                                              ; preds = %180
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %87) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %87, i8 0, i64 40, i1 false) #8
  store i32 4, i32* %88, align 8
  %800 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %183, i64 1
  %801 = bitcast %"class.blink::FilterOperation"* %800 to double*
  %802 = load double, double* %801, align 8
  %803 = fcmp ult double %802, 0x47EFFFFFE0000000
  br i1 %803, label %804, label %808

804:                                              ; preds = %799
  %805 = fcmp ole double %802, 0xC7EFFFFFE0000000
  %806 = select i1 %805, double 0xC7EFFFFFE0000000, double %802
  %807 = fptrunc double %806 to float
  br label %808

808:                                              ; preds = %799, %804
  %809 = phi float [ %807, %804 ], [ 0x47EFFFFFE0000000, %799 ]
  store float %809, float* %89, align 4
  %810 = fpext float %809 to double
  %811 = fmul double %810, 5.000000e-01
  %812 = fsub double 5.000000e-01, %811
  %813 = fptrunc double %812 to float
  store float %813, float* %90, align 8
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %93) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %93, i8 0, i64 40, i1 false) #8
  %814 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_12FilterEffectEEEPhm(i64 248) #8
  %815 = bitcast i8* %814 to %"class.blink::FEComponentTransfer"*
  call void @_ZN5blink19FEComponentTransferC1EPNS_6FilterERKNS_25ComponentTransferFunctionES5_S5_S5_(%"class.blink::FEComponentTransfer"* %815, %"class.blink::Filter"* %35, %"struct.blink::ComponentTransferFunction"* nonnull dereferenceable(40) %27, %"struct.blink::ComponentTransferFunction"* nonnull dereferenceable(40) %27, %"struct.blink::ComponentTransferFunction"* nonnull dereferenceable(40) %27, %"struct.blink::ComponentTransferFunction"* nonnull dereferenceable(40) %28) #8
  %816 = getelementptr inbounds i8, i8* %814, i64 -4
  %817 = bitcast i8* %816 to i16*
  %818 = load atomic i16, i16* %817 monotonic, align 2
  %819 = or i16 %818, 1
  store atomic i16 %819, i16* %817 release, align 2
  %820 = bitcast i8* %814 to %"class.blink::FilterEffect"*
  %821 = load float*, float** %94, align 8
  %822 = icmp eq float* %821, null
  %823 = bitcast float* %821 to i8*
  br i1 %822, label %829, label %824, !prof !2

824:                                              ; preds = %808
  %825 = load i32, i32* %95, align 4
  %826 = icmp eq i32 %825, 0
  br i1 %826, label %828, label %827, !prof !3

827:                                              ; preds = %824
  store i32 0, i32* %95, align 4
  br label %828

828:                                              ; preds = %827, %824
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %823) #8
  store float* null, float** %94, align 8
  br label %829

829:                                              ; preds = %808, %828
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %93) #8
  %830 = load float*, float** %91, align 8
  %831 = icmp eq float* %830, null
  %832 = bitcast float* %830 to i8*
  br i1 %831, label %838, label %833, !prof !2

833:                                              ; preds = %829
  %834 = load i32, i32* %92, align 4
  %835 = icmp eq i32 %834, 0
  br i1 %835, label %837, label %836, !prof !3

836:                                              ; preds = %833
  store i32 0, i32* %92, align 4
  br label %837

837:                                              ; preds = %836, %833
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %832) #8
  store float* null, float** %91, align 8
  br label %838

838:                                              ; preds = %829, %837
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %87) #8
  br label %1073

839:                                              ; preds = %180
  %840 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %183, i64 0, i32 2
  %841 = bitcast [4 x i8]* %840 to %"class.blink::Length"*
  %842 = call float @_ZN5blink19FloatValueForLengthERKNS_6LengthEf(%"class.blink::Length"* dereferenceable(8) %841, float 0.000000e+00) #8
  %843 = load float, float* %84, align 4
  %844 = fmul float %842, %843
  %845 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_12FilterEffectEEEPhm(i64 96) #8
  %846 = bitcast i8* %845 to %"class.blink::FEGaussianBlur"*
  call void @_ZN5blink14FEGaussianBlurC1EPNS_6FilterEff(%"class.blink::FEGaussianBlur"* %846, %"class.blink::Filter"* %35, float %844, float %844) #8
  %847 = getelementptr inbounds i8, i8* %845, i64 -4
  %848 = bitcast i8* %847 to i16*
  %849 = load atomic i16, i16* %848 monotonic, align 2
  %850 = or i16 %849, 1
  store atomic i16 %850, i16* %848 release, align 2
  %851 = bitcast i8* %845 to %"class.blink::FilterEffect"*
  br label %1073

852:                                              ; preds = %180
  %853 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %183, i64 0, i32 2
  %854 = bitcast [4 x i8]* %853 to <2 x float>*
  %855 = load <2 x float>, <2 x float>* %854, align 4
  %856 = load float, float* %84, align 4
  %857 = extractelement <2 x float> %855, i32 0
  %858 = fmul float %857, %856
  %859 = extractelement <2 x float> %855, i32 1
  %860 = fmul float %859, %856
  %861 = getelementptr inbounds [4 x i8], [4 x i8]* %853, i64 2
  %862 = bitcast [4 x i8]* %861 to float*
  %863 = load float, float* %862, align 4
  %864 = fmul float %856, %863
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %85) #8
  %865 = getelementptr inbounds [4 x i8], [4 x i8]* %853, i64 4
  %866 = bitcast [4 x i8]* %865 to i64*
  %867 = load i64, i64* %866, align 4
  %868 = trunc i64 %867 to i32
  store i32 %868, i32* %86, align 4
  %869 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_12FilterEffectEEEPhm(i64 112) #8
  %870 = bitcast i8* %869 to %"class.blink::FEDropShadow"*
  call void @_ZN5blink12FEDropShadowC1EPNS_6FilterEffffRKNS_5ColorEf(%"class.blink::FEDropShadow"* %870, %"class.blink::Filter"* %35, float %864, float %864, float %858, float %860, %"class.blink::Color"* nonnull dereferenceable(4) %29, float 1.000000e+00) #8
  %871 = getelementptr inbounds i8, i8* %869, i64 -4
  %872 = bitcast i8* %871 to i16*
  %873 = load atomic i16, i16* %872 monotonic, align 2
  %874 = or i16 %873, 1
  store atomic i16 %874, i16* %872 release, align 2
  %875 = bitcast i8* %869 to %"class.blink::FilterEffect"*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %85) #8
  br label %1073

876:                                              ; preds = %180
  %877 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %183, i64 1
  %878 = bitcast %"class.blink::FilterOperation"* %877 to %"class.blink::BoxReflection"*
  %879 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_12FilterEffectEEEPhm(i64 120) #8
  %880 = bitcast i8* %879 to %"class.blink::FEBoxReflect"*
  call void @_ZN5blink12FEBoxReflectC1EPNS_6FilterERKNS_13BoxReflectionE(%"class.blink::FEBoxReflect"* %880, %"class.blink::Filter"* %35, %"class.blink::BoxReflection"* dereferenceable(32) %878) #8
  %881 = getelementptr inbounds i8, i8* %879, i64 -4
  %882 = bitcast i8* %881 to i16*
  %883 = load atomic i16, i16* %882 monotonic, align 2
  %884 = or i16 %883, 1
  store atomic i16 %884, i16* %882 release, align 2
  %885 = bitcast i8* %879 to %"class.blink::FilterEffect"*
  br label %1073

886:                                              ; preds = %180
  %887 = bitcast %"class.blink::FilterOperation"* %183 to %"class.blink::ConvolveMatrixFilterOperation"*
  %888 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %183, i64 0, i32 2
  %889 = bitcast [4 x i8]* %888 to %"class.blink::IntSize"*
  %890 = getelementptr inbounds %"class.blink::ConvolveMatrixFilterOperation", %"class.blink::ConvolveMatrixFilterOperation"* %887, i64 0, i32 2
  %891 = load float, float* %890, align 4
  %892 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %183, i64 1, i32 1
  %893 = bitcast i32* %892 to float*
  %894 = load float, float* %893, align 8
  %895 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %183, i64 1, i32 2
  %896 = bitcast [4 x i8]* %895 to %"class.blink::IntPoint"*
  %897 = getelementptr inbounds %"class.blink::ConvolveMatrixFilterOperation", %"class.blink::ConvolveMatrixFilterOperation"* %887, i64 0, i32 5
  %898 = load i32, i32* %897, align 4
  %899 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %183, i64 2, i32 1
  %900 = bitcast i32* %899 to i8*
  %901 = load i8, i8* %900, align 8, !range !4
  %902 = icmp ne i8 %901, 0
  %903 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %183, i64 3
  %904 = bitcast %"class.blink::FilterOperation"* %903 to %"class.WTF::Vector.720"*
  %905 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_12FilterEffectEEEPhm(i64 136) #8
  %906 = bitcast i8* %905 to %"class.blink::FEConvolveMatrix"*
  call void @_ZN5blink16FEConvolveMatrixC1EPNS_6FilterERKNS_7IntSizeEffRKNS_8IntPointENS0_12EdgeModeTypeEbRKN3WTF6VectorIfLj0ENSA_18PartitionAllocatorEEE(%"class.blink::FEConvolveMatrix"* %906, %"class.blink::Filter"* %35, %"class.blink::IntSize"* dereferenceable(8) %889, float %891, float %894, %"class.blink::IntPoint"* dereferenceable(8) %896, i32 %898, i1 zeroext %902, %"class.WTF::Vector.720"* dereferenceable(16) %904) #8
  %907 = getelementptr inbounds i8, i8* %905, i64 -4
  %908 = bitcast i8* %907 to i16*
  %909 = load atomic i16, i16* %908 monotonic, align 2
  %910 = or i16 %909, 1
  store atomic i16 %910, i16* %908 release, align 2
  %911 = bitcast i8* %905 to %"class.blink::FilterEffect"*
  br label %1073

912:                                              ; preds = %180
  %913 = bitcast %"class.blink::FilterOperation"* %183 to %"class.blink::ComponentTransferFilterOperation"*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %56) #8
  %914 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %183, i64 1
  %915 = bitcast %"class.blink::FilterOperation"* %914 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %56, i8* align 8 %915, i64 24, i1 false) #8
  %916 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %183, i64 3
  %917 = bitcast %"class.blink::FilterOperation"* %916 to i32*
  %918 = load i32, i32* %917, align 8, !noalias !5
  store float* null, float** %58, align 8, !alias.scope !5
  store i32 0, i32* %59, align 8, !alias.scope !5
  %919 = icmp eq i32 %918, 0
  br i1 %919, label %928, label %920

920:                                              ; preds = %912
  %921 = zext i32 %918 to i64
  %922 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm(i64 %921) #8, !noalias !5
  %923 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %922, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIfEEPKcv, i64 0, i64 0)) #8, !noalias !5
  %924 = ptrtoint i8* %923 to i64
  store atomic i64 %924, i64* %60 monotonic, align 8, !alias.scope !5
  %925 = lshr i64 %922, 2
  %926 = trunc i64 %925 to i32
  store i32 %926, i32* %59, align 8, !alias.scope !5
  %927 = icmp ne i8* %923, null
  br label %928

928:                                              ; preds = %920, %912
  %929 = phi i8* [ null, %912 ], [ %923, %920 ]
  %930 = phi i1 [ false, %912 ], [ %927, %920 ]
  %931 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %913, i64 0, i32 1, i32 6, i32 0, i32 0, i32 2
  %932 = load i32, i32* %931, align 4, !noalias !5
  store i32 %932, i32* %61, align 4, !alias.scope !5
  %933 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %183, i64 2, i32 1
  %934 = bitcast i32* %933 to float**
  %935 = load float*, float** %934, align 8, !noalias !5
  %936 = icmp ne float* %935, null
  %937 = and i1 %930, %936
  br i1 %937, label %938, label %942, !prof !2

938:                                              ; preds = %928
  %939 = zext i32 %932 to i64
  %940 = bitcast float* %935 to i8*
  %941 = shl nuw nsw i64 %939, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %929, i8* nonnull align 4 %940, i64 %941, i1 false) #8, !noalias !5
  br label %942

942:                                              ; preds = %928, %938
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %62) #8
  %943 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %183, i64 3, i32 1
  %944 = bitcast i32* %943 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %62, i8* align 8 %944, i64 24, i1 false) #8
  %945 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %183, i64 5, i32 1
  %946 = load i32, i32* %945, align 8, !noalias !8
  store float* null, float** %64, align 8, !alias.scope !8
  store i32 0, i32* %65, align 8, !alias.scope !8
  %947 = icmp eq i32 %946, 0
  br i1 %947, label %956, label %948

948:                                              ; preds = %942
  %949 = zext i32 %946 to i64
  %950 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm(i64 %949) #8, !noalias !8
  %951 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %950, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIfEEPKcv, i64 0, i64 0)) #8, !noalias !8
  %952 = ptrtoint i8* %951 to i64
  store atomic i64 %952, i64* %66 monotonic, align 8, !alias.scope !8
  %953 = lshr i64 %950, 2
  %954 = trunc i64 %953 to i32
  store i32 %954, i32* %65, align 8, !alias.scope !8
  %955 = icmp ne i8* %951, null
  br label %956

956:                                              ; preds = %948, %942
  %957 = phi i8* [ null, %942 ], [ %951, %948 ]
  %958 = phi i1 [ false, %942 ], [ %955, %948 ]
  %959 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %183, i64 5, i32 2
  %960 = bitcast [4 x i8]* %959 to i32*
  %961 = load i32, i32* %960, align 4, !noalias !8
  store i32 %961, i32* %67, align 4, !alias.scope !8
  %962 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %183, i64 5
  %963 = bitcast %"class.blink::FilterOperation"* %962 to float**
  %964 = load float*, float** %963, align 8, !noalias !8
  %965 = icmp ne float* %964, null
  %966 = and i1 %958, %965
  br i1 %966, label %967, label %971, !prof !2

967:                                              ; preds = %956
  %968 = zext i32 %961 to i64
  %969 = bitcast float* %964 to i8*
  %970 = shl nuw nsw i64 %968, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %957, i8* nonnull align 4 %969, i64 %970, i1 false) #8, !noalias !8
  br label %971

971:                                              ; preds = %956, %967
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %68) #8
  %972 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %183, i64 6
  %973 = bitcast %"class.blink::FilterOperation"* %972 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %68, i8* align 8 %973, i64 24, i1 false) #8
  %974 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %183, i64 8
  %975 = bitcast %"class.blink::FilterOperation"* %974 to i32*
  %976 = load i32, i32* %975, align 8, !noalias !11
  store float* null, float** %70, align 8, !alias.scope !11
  store i32 0, i32* %71, align 8, !alias.scope !11
  %977 = icmp eq i32 %976, 0
  br i1 %977, label %986, label %978

978:                                              ; preds = %971
  %979 = zext i32 %976 to i64
  %980 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm(i64 %979) #8, !noalias !11
  %981 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %980, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIfEEPKcv, i64 0, i64 0)) #8, !noalias !11
  %982 = ptrtoint i8* %981 to i64
  store atomic i64 %982, i64* %72 monotonic, align 8, !alias.scope !11
  %983 = lshr i64 %980, 2
  %984 = trunc i64 %983 to i32
  store i32 %984, i32* %71, align 8, !alias.scope !11
  %985 = icmp ne i8* %981, null
  br label %986

986:                                              ; preds = %978, %971
  %987 = phi i8* [ null, %971 ], [ %981, %978 ]
  %988 = phi i1 [ false, %971 ], [ %985, %978 ]
  %989 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %913, i64 0, i32 3, i32 6, i32 0, i32 0, i32 2
  %990 = load i32, i32* %989, align 4, !noalias !11
  store i32 %990, i32* %73, align 4, !alias.scope !11
  %991 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %183, i64 7, i32 1
  %992 = bitcast i32* %991 to float**
  %993 = load float*, float** %992, align 8, !noalias !11
  %994 = icmp ne float* %993, null
  %995 = and i1 %988, %994
  br i1 %995, label %996, label %1000, !prof !2

996:                                              ; preds = %986
  %997 = zext i32 %990 to i64
  %998 = bitcast float* %993 to i8*
  %999 = shl nuw nsw i64 %997, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %987, i8* nonnull align 4 %998, i64 %999, i1 false) #8, !noalias !11
  br label %1000

1000:                                             ; preds = %986, %996
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %74) #8
  %1001 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %183, i64 8, i32 1
  %1002 = bitcast i32* %1001 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %74, i8* align 8 %1002, i64 24, i1 false) #8
  %1003 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %183, i64 10, i32 1
  %1004 = load i32, i32* %1003, align 8, !noalias !14
  store float* null, float** %76, align 8, !alias.scope !14
  store i32 0, i32* %77, align 8, !alias.scope !14
  %1005 = icmp eq i32 %1004, 0
  br i1 %1005, label %1014, label %1006

1006:                                             ; preds = %1000
  %1007 = zext i32 %1004 to i64
  %1008 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm(i64 %1007) #8, !noalias !14
  %1009 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %1008, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIfEEPKcv, i64 0, i64 0)) #8, !noalias !14
  %1010 = ptrtoint i8* %1009 to i64
  store atomic i64 %1010, i64* %78 monotonic, align 8, !alias.scope !14
  %1011 = lshr i64 %1008, 2
  %1012 = trunc i64 %1011 to i32
  store i32 %1012, i32* %77, align 8, !alias.scope !14
  %1013 = icmp ne i8* %1009, null
  br label %1014

1014:                                             ; preds = %1006, %1000
  %1015 = phi i8* [ null, %1000 ], [ %1009, %1006 ]
  %1016 = phi i1 [ false, %1000 ], [ %1013, %1006 ]
  %1017 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %183, i64 10, i32 2
  %1018 = bitcast [4 x i8]* %1017 to i32*
  %1019 = load i32, i32* %1018, align 4, !noalias !14
  store i32 %1019, i32* %79, align 4, !alias.scope !14
  %1020 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %183, i64 10
  %1021 = bitcast %"class.blink::FilterOperation"* %1020 to float**
  %1022 = load float*, float** %1021, align 8, !noalias !14
  %1023 = icmp ne float* %1022, null
  %1024 = and i1 %1016, %1023
  br i1 %1024, label %1025, label %1029, !prof !2

1025:                                             ; preds = %1014
  %1026 = zext i32 %1019 to i64
  %1027 = bitcast float* %1022 to i8*
  %1028 = shl nuw nsw i64 %1026, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %1015, i8* nonnull align 4 %1027, i64 %1028, i1 false) #8, !noalias !14
  br label %1029

1029:                                             ; preds = %1014, %1025
  %1030 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_12FilterEffectEEEPhm(i64 248) #8
  %1031 = bitcast i8* %1030 to %"class.blink::FEComponentTransfer"*
  call void @_ZN5blink19FEComponentTransferC1EPNS_6FilterERKNS_25ComponentTransferFunctionES5_S5_S5_(%"class.blink::FEComponentTransfer"* %1031, %"class.blink::Filter"* %35, %"struct.blink::ComponentTransferFunction"* nonnull dereferenceable(40) %30, %"struct.blink::ComponentTransferFunction"* nonnull dereferenceable(40) %31, %"struct.blink::ComponentTransferFunction"* nonnull dereferenceable(40) %32, %"struct.blink::ComponentTransferFunction"* nonnull dereferenceable(40) %33) #8
  %1032 = getelementptr inbounds i8, i8* %1030, i64 -4
  %1033 = bitcast i8* %1032 to i16*
  %1034 = load atomic i16, i16* %1033 monotonic, align 2
  %1035 = or i16 %1034, 1
  store atomic i16 %1035, i16* %1033 release, align 2
  %1036 = bitcast i8* %1030 to %"class.blink::FilterEffect"*
  %1037 = load float*, float** %80, align 8
  %1038 = icmp eq float* %1037, null
  %1039 = bitcast float* %1037 to i8*
  br i1 %1038, label %1045, label %1040, !prof !2

1040:                                             ; preds = %1029
  %1041 = load i32, i32* %79, align 4
  %1042 = icmp eq i32 %1041, 0
  br i1 %1042, label %1044, label %1043, !prof !3

1043:                                             ; preds = %1040
  store i32 0, i32* %79, align 4
  br label %1044

1044:                                             ; preds = %1043, %1040
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %1039) #8
  store float* null, float** %80, align 8
  br label %1045

1045:                                             ; preds = %1029, %1044
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %74) #8
  %1046 = load float*, float** %81, align 8
  %1047 = icmp eq float* %1046, null
  %1048 = bitcast float* %1046 to i8*
  br i1 %1047, label %1054, label %1049, !prof !2

1049:                                             ; preds = %1045
  %1050 = load i32, i32* %73, align 4
  %1051 = icmp eq i32 %1050, 0
  br i1 %1051, label %1053, label %1052, !prof !3

1052:                                             ; preds = %1049
  store i32 0, i32* %73, align 4
  br label %1053

1053:                                             ; preds = %1052, %1049
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %1048) #8
  store float* null, float** %81, align 8
  br label %1054

1054:                                             ; preds = %1045, %1053
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %68) #8
  %1055 = load float*, float** %82, align 8
  %1056 = icmp eq float* %1055, null
  %1057 = bitcast float* %1055 to i8*
  br i1 %1056, label %1063, label %1058, !prof !2

1058:                                             ; preds = %1054
  %1059 = load i32, i32* %67, align 4
  %1060 = icmp eq i32 %1059, 0
  br i1 %1060, label %1062, label %1061, !prof !3

1061:                                             ; preds = %1058
  store i32 0, i32* %67, align 4
  br label %1062

1062:                                             ; preds = %1061, %1058
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %1057) #8
  store float* null, float** %82, align 8
  br label %1063

1063:                                             ; preds = %1054, %1062
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %62) #8
  %1064 = load float*, float** %83, align 8
  %1065 = icmp eq float* %1064, null
  %1066 = bitcast float* %1064 to i8*
  br i1 %1065, label %1072, label %1067, !prof !2

1067:                                             ; preds = %1063
  %1068 = load i32, i32* %61, align 4
  %1069 = icmp eq i32 %1068, 0
  br i1 %1069, label %1071, label %1070, !prof !3

1070:                                             ; preds = %1067
  store i32 0, i32* %61, align 4
  br label %1071

1071:                                             ; preds = %1070, %1067
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %1066) #8
  store float* null, float** %83, align 8
  br label %1072

1072:                                             ; preds = %1063, %1071
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %56) #8
  br label %1073

1073:                                             ; preds = %203, %195, %1072, %886, %876, %852, %839, %838, %798, %762, %705, %634, %586, %574, %535, %491, %341
  %1074 = phi %"class.blink::FilterEffect"* [ %1036, %1072 ], [ %911, %886 ], [ %885, %876 ], [ %875, %852 ], [ %851, %839 ], [ %820, %838 ], [ %780, %798 ], [ %735, %762 ], [ %678, %705 ], [ %639, %634 ], [ %591, %586 ], [ %565, %574 ], [ %526, %535 ], [ %496, %491 ], [ %346, %341 ], [ %197, %195 ], [ %197, %203 ]
  %1075 = icmp eq %"class.blink::FilterEffect"* %1074, null
  br i1 %1075, label %1115, label %1076

1076:                                             ; preds = %1073
  %1077 = load i32, i32* %184, align 8
  %1078 = icmp eq i32 %1077, 0
  br i1 %1078, label %1107, label %1079

1079:                                             ; preds = %1076
  %1080 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %1074, i64 0, i32 4
  store i8 0, i8* %1080, align 8
  %1081 = bitcast %"class.blink::FilterEffect"* %1074 to void (%"class.blink::FilterEffect"*, i32)***
  %1082 = load void (%"class.blink::FilterEffect"*, i32)**, void (%"class.blink::FilterEffect"*, i32)*** %1081, align 8
  %1083 = getelementptr inbounds void (%"class.blink::FilterEffect"*, i32)*, void (%"class.blink::FilterEffect"*, i32)** %1082, i64 7
  %1084 = load void (%"class.blink::FilterEffect"*, i32)*, void (%"class.blink::FilterEffect"*, i32)** %1083, align 8
  call void %1084(%"class.blink::FilterEffect"* nonnull %1074, i32 0) #8
  %1085 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %1074, i64 0, i32 1, i32 0
  %1086 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %1074, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %1087 = load i32, i32* %1086, align 4
  %1088 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %1074, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %1089 = load i32, i32* %1088, align 8
  %1090 = icmp eq i32 %1087, %1089
  br i1 %1090, label %1106, label %1091, !prof !3

1091:                                             ; preds = %1079
  %1092 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1085, i64 0, i32 0, i32 0, i32 0
  %1093 = load %"class.blink::Member"*, %"class.blink::Member"** %1092, align 8
  %1094 = zext i32 %1087 to i64
  %1095 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %1093, i64 %1094
  %1096 = load i64, i64* %175, align 8
  %1097 = bitcast %"class.blink::Member"* %1095 to i64*
  store atomic i64 %1096, i64* %1097 monotonic, align 8
  %1098 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %1099 = icmp eq i32 %1098, 0
  br i1 %1099, label %1103, label %1100

1100:                                             ; preds = %1091
  %1101 = inttoptr i64 %1096 to i8*
  %1102 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %1101) #8
  br label %1103

1103:                                             ; preds = %1100, %1091
  %1104 = load i32, i32* %1086, align 4
  %1105 = add i32 %1104, 1
  store i32 %1105, i32* %1086, align 4
  br label %1107

1106:                                             ; preds = %1079
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_12FilterEffectEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector"* %1085, %"class.blink::FilterEffect"** nonnull dereferenceable(8) %10) #8
  br label %1107

1107:                                             ; preds = %1106, %1103, %1076
  %1108 = load %"class.blink::FilterEffect"*, %"class.blink::FilterEffect"** %10, align 8
  %1109 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %1108, i64 0, i32 5
  %1110 = load i8, i8* %1109, align 1, !range !4
  %1111 = icmp eq i8 %1110, 0
  br i1 %1111, label %1114, label %1112

1112:                                             ; preds = %1107
  %1113 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %1074, i64 0, i32 5
  store i8 1, i8* %1113, align 1
  br label %1114

1114:                                             ; preds = %1107, %1112
  store %"class.blink::FilterEffect"* %1074, %"class.blink::FilterEffect"** %10, align 8
  br label %1115

1115:                                             ; preds = %180, %1073, %1114
  %1116 = getelementptr inbounds %"class.blink::Member.58", %"class.blink::Member.58"* %181, i64 1
  %1117 = icmp eq %"class.blink::Member.58"* %1116, %53
  br i1 %1117, label %176, label %180
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Filter"* @_ZNK5blink19FilterEffectBuilder20BuildReferenceFilterERKNS_24ReferenceFilterOperationEPNS_12FilterEffectEPNS_21SVGFilterGraphNodeMapE(%"class.blink::FilterEffectBuilder"*, %"class.blink::ReferenceFilterOperation"* nocapture readonly dereferenceable(40), %"class.blink::FilterEffect"*, %"class.blink::SVGFilterGraphNodeMap"*) local_unnamed_addr #0 align 2 {
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = bitcast { <2 x float>, <2 x float> }* %5 to %"class.blink::FloatRect"*
  %7 = alloca %"class.blink::SVGFilterBuilder", align 8
  %8 = getelementptr inbounds %"class.blink::ReferenceFilterOperation", %"class.blink::ReferenceFilterOperation"* %1, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::SVGResource"*, %"class.blink::SVGResource"** %8, align 8
  %10 = icmp eq %"class.blink::SVGResource"* %9, null
  br i1 %10, label %122, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.blink::SVGResource", %"class.blink::SVGResource"* %9, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.blink::Element"*, %"class.blink::Element"** %12, align 8
  %14 = icmp eq %"class.blink::Element"* %13, null
  br i1 %14, label %122, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %13, i64 0, i32 0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = and i32 %17, 48
  %19 = icmp eq i32 %18, 32
  br i1 %19, label %20, label %122

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %13, i64 0, i32 0, i32 0
  %22 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names10kFilterTagE, align 8
  %23 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %21, i64 1, i32 2
  %26 = bitcast %"class.blink::Member.77"* %25 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %27 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %27, i64 0, i32 3, i32 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %24, i64 0, i32 3, i32 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %29, %31
  %33 = bitcast %"class.blink::Element"* %13 to %"class.blink::SVGFilterElement"*
  br i1 %32, label %34, label %122

34:                                               ; preds = %20
  %35 = tail call %"class.blink::LayoutSVGResourceContainer"* @_ZNK5blink11SVGResource29ResourceContainerNoCycleCheckEv(%"class.blink::SVGResource"* nonnull %9) #8
  %36 = icmp eq %"class.blink::LayoutSVGResourceContainer"* %35, null
  br i1 %36, label %41, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.blink::LayoutSVGResourceContainer", %"class.blink::LayoutSVGResourceContainer"* %35, i64 0, i32 1
  %39 = load i16, i16* %38, align 2
  %40 = and i16 %39, -256
  store i16 %40, i16* %38, align 2
  br label %41

41:                                               ; preds = %34, %37
  %42 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #8
  %43 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %13, i64 2, i32 0, i32 0, i32 0, i32 0, i32 1
  %44 = bitcast %"class.blink::TraceWrapperV8Reference"* %43 to %"class.blink::SVGAnimatedEnumeration"**
  %45 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  %46 = bitcast <2 x float>* %45 to i64*
  store i64 -1, i64* %46, align 8
  %47 = load %"class.blink::SVGAnimatedEnumeration"*, %"class.blink::SVGAnimatedEnumeration"** %44, align 8
  %48 = getelementptr inbounds %"class.blink::SVGAnimatedEnumeration", %"class.blink::SVGAnimatedEnumeration"* %47, i64 0, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %49 = load %"class.blink::SVGEnumeration"*, %"class.blink::SVGEnumeration"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::SVGEnumeration", %"class.blink::SVGEnumeration"* %49, i64 0, i32 1
  %51 = load i16, i16* %50, align 8
  %52 = zext i16 %51 to i32
  %53 = getelementptr inbounds %"class.blink::FilterEffectBuilder", %"class.blink::FilterEffectBuilder"* %0, i64 0, i32 0
  %54 = bitcast %"class.blink::Element"* %13 to %"class.blink::SVGElement"*
  %55 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %13, i64 1, i32 1
  %56 = bitcast %"class.blink::Animatable"* %55 to %"class.blink::SVGAnimatedLength"**
  %57 = load %"class.blink::SVGAnimatedLength"*, %"class.blink::SVGAnimatedLength"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::SVGAnimatedLength", %"class.blink::SVGAnimatedLength"* %57, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %59 = load %"class.blink::SVGLength"*, %"class.blink::SVGLength"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %13, i64 1, i32 2
  %61 = bitcast %"class.blink::QualifiedName"* %60 to %"class.blink::SVGAnimatedLength"**
  %62 = load %"class.blink::SVGAnimatedLength"*, %"class.blink::SVGAnimatedLength"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::SVGAnimatedLength", %"class.blink::SVGAnimatedLength"* %62, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %64 = load %"class.blink::SVGLength"*, %"class.blink::SVGLength"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %13, i64 1, i32 3
  %66 = bitcast %"class.blink::Member.86"* %65 to %"class.blink::SVGAnimatedLength"**
  %67 = load %"class.blink::SVGAnimatedLength"*, %"class.blink::SVGAnimatedLength"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::SVGAnimatedLength", %"class.blink::SVGAnimatedLength"* %67, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %69 = load %"class.blink::SVGLength"*, %"class.blink::SVGLength"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %13, i64 2
  %71 = bitcast %"class.blink::Element"* %70 to %"class.blink::SVGAnimatedLength"**
  %72 = load %"class.blink::SVGAnimatedLength"*, %"class.blink::SVGAnimatedLength"** %71, align 8
  %73 = getelementptr inbounds %"class.blink::SVGAnimatedLength", %"class.blink::SVGAnimatedLength"* %72, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %74 = load %"class.blink::SVGLength"*, %"class.blink::SVGLength"** %73, align 8
  %75 = tail call { <2 x float>, <2 x float> } @_ZN5blink16SVGLengthContext16ResolveRectangleEPKNS_10SVGElementENS_12SVGUnitTypes11SVGUnitTypeERKNS_9FloatRectERKNS_9SVGLengthESB_SB_SB_(%"class.blink::SVGElement"* nonnull %54, i32 %52, %"class.blink::FloatRect"* dereferenceable(16) %53, %"class.blink::SVGLength"* dereferenceable(32) %59, %"class.blink::SVGLength"* dereferenceable(32) %64, %"class.blink::SVGLength"* dereferenceable(32) %69, %"class.blink::SVGLength"* dereferenceable(32) %74) #8
  %76 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  %77 = extractvalue { <2 x float>, <2 x float> } %75, 0
  store <2 x float> %77, <2 x float>* %76, align 8
  %78 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  %79 = extractvalue { <2 x float>, <2 x float> } %75, 1
  store <2 x float> %79, <2 x float>* %78, align 8
  %80 = icmp eq %"class.blink::SVGFilterGraphNodeMap"* %3, null
  br i1 %80, label %87, label %81

81:                                               ; preds = %41
  %82 = extractelement <2 x float> %79, i32 1
  %83 = extractelement <2 x float> %79, i32 0
  %84 = fcmp ole float %83, 0.000000e+00
  %85 = fcmp ole float %82, 0.000000e+00
  %86 = or i1 %84, %85
  br i1 %86, label %120, label %87

87:                                               ; preds = %81, %41
  %88 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %13, i64 2, i32 0, i32 0, i32 1
  %89 = bitcast i32* %88 to %"class.blink::SVGAnimatedEnumeration"**
  %90 = load %"class.blink::SVGAnimatedEnumeration"*, %"class.blink::SVGAnimatedEnumeration"** %89, align 8
  %91 = getelementptr inbounds %"class.blink::SVGAnimatedEnumeration", %"class.blink::SVGAnimatedEnumeration"* %90, i64 0, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %92 = load %"class.blink::SVGEnumeration"*, %"class.blink::SVGEnumeration"** %91, align 8
  %93 = getelementptr inbounds %"class.blink::SVGEnumeration", %"class.blink::SVGEnumeration"* %92, i64 0, i32 1
  %94 = load i16, i16* %93, align 8
  %95 = icmp eq i16 %94, 2
  %96 = zext i1 %95 to i32
  %97 = getelementptr inbounds %"class.blink::FilterEffectBuilder", %"class.blink::FilterEffectBuilder"* %0, i64 0, i32 1
  %98 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_6FilterEEEPhm(i64 56) #8
  %99 = bitcast i8* %98 to %"class.blink::Filter"*
  %100 = load float, float* %97, align 4
  call void @_ZN5blink6FilterC1ERKNS_9FloatRectES3_fNS0_11UnitScalingE(%"class.blink::Filter"* %99, %"class.blink::FloatRect"* dereferenceable(16) %53, %"class.blink::FloatRect"* nonnull dereferenceable(16) %6, float %100, i32 %96) #8
  %101 = getelementptr inbounds i8, i8* %98, i64 -4
  %102 = bitcast i8* %101 to i16*
  %103 = load atomic i16, i16* %102 monotonic, align 2
  %104 = or i16 %103, 1
  store atomic i16 %104, i16* %102 release, align 2
  %105 = icmp eq %"class.blink::FilterEffect"* %2, null
  br i1 %105, label %106, label %111

106:                                              ; preds = %87
  %107 = getelementptr inbounds i8, i8* %98, i64 40
  %108 = bitcast i8* %107 to %"class.blink::SourceGraphic"**
  %109 = load %"class.blink::SourceGraphic"*, %"class.blink::SourceGraphic"** %108, align 8
  %110 = getelementptr inbounds %"class.blink::SourceGraphic", %"class.blink::SourceGraphic"* %109, i64 0, i32 0
  br label %111

111:                                              ; preds = %87, %106
  %112 = phi %"class.blink::FilterEffect"* [ %2, %87 ], [ %110, %106 ]
  %113 = bitcast %"class.blink::SVGFilterBuilder"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %113) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %113, i8 -86, i64 64, i1 false)
  %114 = getelementptr inbounds %"class.blink::FilterEffectBuilder", %"class.blink::FilterEffectBuilder"* %0, i64 0, i32 3
  %115 = load %"class.cc::PaintFlags"*, %"class.cc::PaintFlags"** %114, align 8
  %116 = getelementptr inbounds %"class.blink::FilterEffectBuilder", %"class.blink::FilterEffectBuilder"* %0, i64 0, i32 4
  %117 = load %"class.cc::PaintFlags"*, %"class.cc::PaintFlags"** %116, align 8
  call void @_ZN5blink16SVGFilterBuilderC1EPNS_12FilterEffectEPNS_21SVGFilterGraphNodeMapEPKN2cc10PaintFlagsES8_(%"class.blink::SVGFilterBuilder"* nonnull %7, %"class.blink::FilterEffect"* %112, %"class.blink::SVGFilterGraphNodeMap"* %3, %"class.cc::PaintFlags"* %115, %"class.cc::PaintFlags"* %117) #8
  call void @_ZN5blink16SVGFilterBuilder10BuildGraphEPNS_6FilterERNS_16SVGFilterElementERKNS_9FloatRectE(%"class.blink::SVGFilterBuilder"* nonnull %7, %"class.blink::Filter"* %99, %"class.blink::SVGFilterElement"* nonnull dereferenceable(232) %33, %"class.blink::FloatRect"* dereferenceable(16) %53) #8
  %118 = getelementptr inbounds %"class.blink::SVGFilterBuilder", %"class.blink::SVGFilterBuilder"* %7, i64 0, i32 2
  %119 = load %"class.blink::FilterEffect"*, %"class.blink::FilterEffect"** %118, align 8
  call void @_ZN5blink6Filter13SetLastEffectEPNS_12FilterEffectE(%"class.blink::Filter"* %99, %"class.blink::FilterEffect"* %119) #8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %113) #8
  br label %120

120:                                              ; preds = %81, %111
  %121 = phi %"class.blink::Filter"* [ %99, %111 ], [ null, %81 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #8
  br label %122

122:                                              ; preds = %20, %4, %11, %15, %120
  %123 = phi %"class.blink::Filter"* [ %121, %120 ], [ null, %20 ], [ null, %15 ], [ null, %11 ], [ null, %4 ]
  ret %"class.blink::Filter"* %123
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::Vector.720"* @_ZN3WTF6VectorIfLj0ENS_18PartitionAllocatorEEaSERKS2_(%"class.WTF::Vector.720"*, %"class.WTF::Vector.720"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.WTF::Vector.720"* %1, %0
  br i1 %3, label %90, label %4, !prof !3

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.720", %"class.WTF::Vector.720"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.WTF::Vector.720", %"class.WTF::Vector.720"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %6, %8
  br i1 %9, label %10, label %11

10:                                               ; preds = %4
  store i32 %8, i32* %5, align 4
  br label %60

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.WTF::Vector.720", %"class.WTF::Vector.720"* %0, i64 0, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp ugt i32 %8, %13
  br i1 %14, label %15, label %60

15:                                               ; preds = %11
  %16 = icmp eq i32 %13, 0
  br i1 %16, label %26, label %17

17:                                               ; preds = %15
  %18 = icmp eq i32 %6, 0
  br i1 %18, label %20, label %19

19:                                               ; preds = %17
  store i32 0, i32* %5, align 4
  br label %20

20:                                               ; preds = %19, %17
  %21 = bitcast %"class.WTF::Vector.720"* %0 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = bitcast %"class.WTF::Vector.720"* %0 to i64*
  store atomic i64 0, i64* %23 monotonic, align 8
  store i32 0, i32* %12, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %22) #8
  %24 = load i32, i32* %7, align 4
  %25 = load i32, i32* %12, align 8
  br label %26

26:                                               ; preds = %15, %20
  %27 = phi i32 [ 0, %15 ], [ %25, %20 ]
  %28 = phi i32 [ %8, %15 ], [ %24, %20 ]
  %29 = icmp ult i32 %27, %28
  br i1 %29, label %30, label %60, !prof !2

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.WTF::Vector.720", %"class.WTF::Vector.720"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load float*, float** %31, align 8
  %33 = icmp eq float* %32, null
  %34 = zext i32 %28 to i64
  %35 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm(i64 %34) #8
  %36 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %35, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIfEEPKcv, i64 0, i64 0)) #8
  br i1 %33, label %37, label %42

37:                                               ; preds = %30
  %38 = ptrtoint i8* %36 to i64
  %39 = bitcast %"class.WTF::Vector.720"* %0 to i64*
  store atomic i64 %38, i64* %39 monotonic, align 8
  %40 = lshr i64 %35, 2
  %41 = trunc i64 %40 to i32
  store i32 %41, i32* %12, align 8
  br label %60

42:                                               ; preds = %30
  %43 = lshr i64 %35, 2
  %44 = ptrtoint i8* %36 to i64
  %45 = load float*, float** %31, align 8
  %46 = icmp ne i8* %36, null
  %47 = icmp ne float* %45, null
  %48 = and i1 %46, %47
  %49 = bitcast float* %45 to i8*
  br i1 %48, label %50, label %56, !prof !2

50:                                               ; preds = %42
  %51 = load i32, i32* %5, align 4
  %52 = zext i32 %51 to i64
  %53 = shl nuw nsw i64 %52, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %36, i8* nonnull align 4 %49, i64 %53, i1 false) #8
  %54 = bitcast %"class.WTF::Vector.720"* %0 to i8**
  %55 = load i8*, i8** %54, align 8
  br label %56

56:                                               ; preds = %50, %42
  %57 = phi i8* [ %55, %50 ], [ %49, %42 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %57) #8
  %58 = bitcast %"class.WTF::Vector.720"* %0 to i64*
  store atomic i64 %44, i64* %58 monotonic, align 8
  %59 = trunc i64 %43 to i32
  store i32 %59, i32* %12, align 8
  br label %60

60:                                               ; preds = %56, %37, %26, %11, %10
  %61 = getelementptr inbounds %"class.WTF::Vector.720", %"class.WTF::Vector.720"* %1, i64 0, i32 0, i32 0, i32 0
  %62 = bitcast %"class.WTF::Vector.720"* %1 to i8**
  %63 = load i8*, i8** %62, align 8
  %64 = load i32, i32* %5, align 4
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds %"class.WTF::Vector.720", %"class.WTF::Vector.720"* %0, i64 0, i32 0, i32 0, i32 0
  %67 = bitcast %"class.WTF::Vector.720"* %0 to i8**
  %68 = load i8*, i8** %67, align 8
  %69 = shl nuw nsw i64 %65, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %68, i8* align 4 %63, i64 %69, i1 false) #8
  %70 = load float*, float** %61, align 8
  %71 = load i32, i32* %5, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds float, float* %70, i64 %72
  %74 = load float*, float** %66, align 8
  %75 = getelementptr inbounds float, float* %74, i64 %72
  %76 = icmp ne float* %75, null
  %77 = icmp ne float* %73, null
  %78 = and i1 %77, %76
  br i1 %78, label %79, label %88, !prof !2

79:                                               ; preds = %60
  %80 = load i32, i32* %7, align 4
  %81 = zext i32 %80 to i64
  %82 = getelementptr inbounds float, float* %70, i64 %81
  %83 = bitcast float* %75 to i8*
  %84 = bitcast float* %73 to i8*
  %85 = ptrtoint float* %82 to i64
  %86 = ptrtoint float* %73 to i64
  %87 = sub i64 %85, %86
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %83, i8* nonnull align 4 %84, i64 %87, i1 false) #8
  br label %88

88:                                               ; preds = %60, %79
  %89 = load i32, i32* %7, align 4
  store i32 %89, i32* %5, align 4
  br label %90

90:                                               ; preds = %2, %88
  ret %"class.WTF::Vector.720"* %0
}

declare float @_ZN5blink19FloatValueForLengthERKNS_6LengthEf(%"class.blink::Length"* dereferenceable(8), float) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink19FilterEffectBuilder21BuildFilterOperationsERKNS_16FilterOperationsE(%"class.blink::CompositorFilterOperations"* noalias sret, %"class.blink::FilterEffectBuilder"*, %"class.blink::FilterOperations"* nocapture readonly dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %4 = alloca %class.sk_sp.36, align 8
  %5 = alloca %class.sk_sp.36, align 8
  %6 = alloca %"class.WTF::Vector.720", align 8
  %7 = alloca %class.sk_sp.36, align 8
  %8 = alloca %class.sk_sp.36, align 8
  %9 = alloca %class.sk_sp.36, align 8
  %10 = alloca %class.sk_sp.36, align 8
  %11 = alloca %class.sk_sp.36, align 8
  %12 = getelementptr inbounds %"class.blink::CompositorFilterOperations", %"class.blink::CompositorFilterOperations"* %0, i64 0, i32 1, i32 0, i32 0
  %13 = bitcast %"class.blink::CompositorFilterOperations"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 -86, i64 24, i1 false)
  %14 = getelementptr inbounds %"class.blink::CompositorFilterOperations", %"class.blink::CompositorFilterOperations"* %0, i64 0, i32 0
  %15 = bitcast float* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 -1, i64 16, i1 false)
  tail call void @_ZN2cc16FilterOperationsC1Ev(%"class.cc::FilterOperations"* %14) #8
  %16 = getelementptr inbounds %"class.blink::CompositorFilterOperations", %"class.blink::CompositorFilterOperations"* %0, i64 0, i32 1
  %17 = bitcast %"class.blink::FloatRect"* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false) #8
  %18 = getelementptr inbounds %"class.blink::FilterOperations", %"class.blink::FilterOperations"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load %"class.blink::Member.58"*, %"class.blink::Member.58"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::FilterOperations", %"class.blink::FilterOperations"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"class.blink::Member.58", %"class.blink::Member.58"* %19, i64 %22
  %24 = icmp eq i32 %21, 0
  br i1 %24, label %317, label %25

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"class.WTF::Vector.720", %"class.WTF::Vector.720"* %6, i64 0, i32 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.WTF::Vector.720", %"class.WTF::Vector.720"* %6, i64 0, i32 0, i32 0, i32 1
  %28 = bitcast %"class.WTF::Vector.720"* %6 to i64*
  %29 = getelementptr inbounds %"class.WTF::Vector.720", %"class.WTF::Vector.720"* %6, i64 0, i32 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.blink::FilterEffectBuilder", %"class.blink::FilterEffectBuilder"* %1, i64 0, i32 2
  %31 = getelementptr inbounds %"class.blink::FilterEffectBuilder", %"class.blink::FilterEffectBuilder"* %1, i64 0, i32 5
  %32 = getelementptr inbounds %class.sk_sp.36, %class.sk_sp.36* %8, i64 0, i32 0
  %33 = getelementptr inbounds %class.sk_sp.36, %class.sk_sp.36* %7, i64 0, i32 0
  %34 = bitcast %class.sk_sp.36* %4 to i8*
  %35 = getelementptr inbounds %class.sk_sp.36, %class.sk_sp.36* %4, i64 0, i32 0
  %36 = bitcast %class.sk_sp.36* %5 to i64*
  %37 = getelementptr inbounds %class.sk_sp.36, %class.sk_sp.36* %5, i64 0, i32 0
  br label %40

38:                                               ; preds = %266
  %39 = icmp eq i32 %267, 0
  br i1 %39, label %317, label %270

40:                                               ; preds = %25, %266
  %41 = phi i32 [ 0, %25 ], [ %267, %266 ]
  %42 = phi %"class.blink::Member.58"* [ %19, %25 ], [ %268, %266 ]
  %43 = getelementptr inbounds %"class.blink::Member.58", %"class.blink::Member.58"* %42, i64 0, i32 0, i32 0
  %44 = load %"class.blink::FilterOperation"*, %"class.blink::FilterOperation"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %44, i64 0, i32 1
  %46 = load i32, i32* %45, align 8
  switch i32 %46, label %266 [
    i32 0, label %47
    i32 1, label %103
    i32 2, label %103
    i32 3, label %103
    i32 4, label %103
    i32 12, label %238
    i32 11, label %199
    i32 10, label %182
    i32 13, label %112
    i32 6, label %173
    i32 7, label %173
    i32 8, label %173
    i32 9, label %173
  ]

47:                                               ; preds = %40
  %48 = bitcast %"class.blink::FilterOperation"* %44 to %"class.blink::ReferenceFilterOperation"*
  %49 = call %"class.blink::Filter"* @_ZNK5blink19FilterEffectBuilder20BuildReferenceFilterERKNS_24ReferenceFilterOperationEPNS_12FilterEffectEPNS_21SVGFilterGraphNodeMapE(%"class.blink::FilterEffectBuilder"* %1, %"class.blink::ReferenceFilterOperation"* dereferenceable(40) %48, %"class.blink::FilterEffect"* null, %"class.blink::SVGFilterGraphNodeMap"* null)
  %50 = icmp eq %"class.blink::Filter"* %49, null
  br i1 %50, label %93, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.blink::Filter", %"class.blink::Filter"* %49, i64 0, i32 5, i32 0, i32 0
  %53 = load %"class.blink::FilterEffect"*, %"class.blink::FilterEffect"** %52, align 8
  %54 = icmp eq %"class.blink::FilterEffect"* %53, null
  br i1 %54, label %93, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.blink::Filter", %"class.blink::Filter"* %49, i64 0, i32 4, i32 0, i32 0
  %57 = load %"class.blink::SourceGraphic"*, %"class.blink::SourceGraphic"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::SourceGraphic", %"class.blink::SourceGraphic"* %57, i64 0, i32 0
  call void @_ZN5blink20paint_filter_builder33PopulateSourceGraphicImageFiltersEPNS_12FilterEffectENS_18InterpolationSpaceE(%"class.blink::FilterEffect"* %58, i32 %41) #8
  %59 = load %"class.blink::FilterEffect"*, %"class.blink::FilterEffect"** %52, align 8
  %60 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %59, i64 0, i32 6
  %61 = load i32, i32* %60, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #8
  store %"class.cc::PaintFilter"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintFilter"*), %"class.cc::PaintFilter"** %35, align 8
  call void @_ZN5blink20paint_filter_builder5BuildEPNS_12FilterEffectENS_18InterpolationSpaceEb(%class.sk_sp.36* nonnull sret %4, %"class.blink::FilterEffect"* %59, i32 %61, i1 zeroext true) #8
  %62 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %35, align 8
  %63 = icmp eq %"class.cc::PaintFilter"* %62, null
  br i1 %63, label %92, label %64

64:                                               ; preds = %55
  %65 = ptrtoint %"class.cc::PaintFilter"* %62 to i64
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %35, align 8
  store i64 %65, i64* %36, align 8
  call void @_ZN5blink26CompositorFilterOperations21AppendReferenceFilterE5sk_spIN2cc11PaintFilterEE(%"class.blink::CompositorFilterOperations"* %0, %class.sk_sp.36* nonnull %5) #8
  %66 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %37, align 8
  %67 = icmp eq %"class.cc::PaintFilter"* %66, null
  br i1 %67, label %78, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %66, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = atomicrmw add i32* %69, i32 -1 acq_rel
  %71 = icmp eq i32 %70, 1
  br i1 %71, label %72, label %78

72:                                               ; preds = %68
  %73 = bitcast %"class.cc::PaintFilter"* %66 to %class.SkRefCntBase*
  %74 = bitcast %"class.cc::PaintFilter"* %66 to void (%class.SkRefCntBase*)***
  %75 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %74, align 8
  %76 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %75, i64 2
  %77 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %76, align 8
  call void %77(%class.SkRefCntBase* nonnull %73) #8
  br label %78

78:                                               ; preds = %72, %68, %64
  %79 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %35, align 8
  %80 = icmp eq %"class.cc::PaintFilter"* %79, null
  br i1 %80, label %91, label %81

81:                                               ; preds = %78
  %82 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %79, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = atomicrmw add i32* %82, i32 -1 acq_rel
  %84 = icmp eq i32 %83, 1
  br i1 %84, label %85, label %91

85:                                               ; preds = %81
  %86 = bitcast %"class.cc::PaintFilter"* %79 to %class.SkRefCntBase*
  %87 = bitcast %"class.cc::PaintFilter"* %79 to void (%class.SkRefCntBase*)***
  %88 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %87, align 8
  %89 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %88, i64 2
  %90 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %89, align 8
  call void %90(%class.SkRefCntBase* nonnull %86) #8
  br label %91

91:                                               ; preds = %78, %81, %85
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #8
  br label %93

92:                                               ; preds = %55
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #8
  br label %266

93:                                               ; preds = %91, %51, %47
  %94 = phi i32 [ %41, %51 ], [ %41, %47 ], [ %61, %91 ]
  %95 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %44, i64 2
  %96 = ptrtoint %"class.blink::Filter"* %49 to i64
  %97 = bitcast %"class.blink::FilterOperation"* %95 to i64*
  store atomic i64 %96, i64* %97 monotonic, align 8
  %98 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %266, label %100

100:                                              ; preds = %93
  %101 = bitcast %"class.blink::Filter"* %49 to i8*
  %102 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %101) #8
  br label %266

103:                                              ; preds = %40, %40, %40, %40
  %104 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %44, i64 1
  %105 = bitcast %"class.blink::FilterOperation"* %104 to double*
  %106 = load double, double* %105, align 8
  %107 = fptrunc double %106 to float
  switch i32 %46, label %266 [
    i32 1, label %108
    i32 2, label %109
    i32 3, label %110
    i32 4, label %111
  ]

108:                                              ; preds = %103
  call void @_ZN5blink26CompositorFilterOperations21AppendGrayscaleFilterEf(%"class.blink::CompositorFilterOperations"* %0, float %107) #8
  br label %266

109:                                              ; preds = %103
  call void @_ZN5blink26CompositorFilterOperations17AppendSepiaFilterEf(%"class.blink::CompositorFilterOperations"* %0, float %107) #8
  br label %266

110:                                              ; preds = %103
  call void @_ZN5blink26CompositorFilterOperations20AppendSaturateFilterEf(%"class.blink::CompositorFilterOperations"* %0, float %107) #8
  br label %266

111:                                              ; preds = %103
  call void @_ZN5blink26CompositorFilterOperations21AppendHueRotateFilterEf(%"class.blink::CompositorFilterOperations"* %0, float %107) #8
  br label %266

112:                                              ; preds = %40
  %113 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %44, i64 1, i32 1
  %114 = load i32, i32* %113, align 8
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %120

116:                                              ; preds = %112
  %117 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %44, i64 1, i32 2
  %118 = bitcast [4 x i8]* %117 to i32*
  %119 = load i32, i32* %118, align 4
  store float* null, float** %26, align 8
  store i32 0, i32* %27, align 8
  br label %142

120:                                              ; preds = %112
  %121 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %44, i64 1
  %122 = zext i32 %114 to i64
  %123 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm(i64 %122) #8
  %124 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %123, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIfEEPKcv, i64 0, i64 0)) #8
  %125 = ptrtoint i8* %124 to i64
  %126 = lshr i64 %123, 2
  %127 = trunc i64 %126 to i32
  %128 = icmp ne i8* %124, null
  %129 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %44, i64 1, i32 2
  %130 = bitcast [4 x i8]* %129 to i32*
  %131 = load i32, i32* %130, align 4
  %132 = bitcast %"class.blink::FilterOperation"* %121 to float**
  %133 = load float*, float** %132, align 8
  %134 = icmp ne float* %133, null
  %135 = and i1 %128, %134
  br i1 %135, label %136, label %140, !prof !2

136:                                              ; preds = %120
  %137 = zext i32 %131 to i64
  %138 = bitcast float* %133 to i8*
  %139 = shl nuw nsw i64 %137, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %124, i8* nonnull align 4 %138, i64 %139, i1 false) #8
  br label %140

140:                                              ; preds = %120, %136
  store float* null, float** %26, align 8
  store i32 0, i32* %27, align 8
  %141 = icmp eq i32 %127, 0
  br i1 %141, label %142, label %146

142:                                              ; preds = %116, %140
  %143 = phi i64 [ 0, %116 ], [ %125, %140 ]
  %144 = phi i32 [ %119, %116 ], [ %131, %140 ]
  store i32 %144, i32* %29, align 4
  %145 = inttoptr i64 %143 to float*
  br label %159

146:                                              ; preds = %140
  %147 = and i64 %126, 4294967295
  %148 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm(i64 %147) #8
  %149 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %148, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIfEEPKcv, i64 0, i64 0)) #8
  %150 = ptrtoint i8* %149 to i64
  store atomic i64 %150, i64* %28 monotonic, align 8
  %151 = lshr i64 %148, 2
  %152 = trunc i64 %151 to i32
  store i32 %152, i32* %27, align 8
  %153 = icmp ne i8* %149, null
  store i32 %131, i32* %29, align 4
  %154 = bitcast i8* %124 to float*
  %155 = and i1 %128, %153
  br i1 %155, label %156, label %159, !prof !2

156:                                              ; preds = %146
  %157 = zext i32 %131 to i64
  %158 = shl nuw nsw i64 %157, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %149, i8* nonnull align 4 %124, i64 %158, i1 false) #8
  br label %159

159:                                              ; preds = %142, %146, %156
  %160 = phi float* [ %154, %146 ], [ %154, %156 ], [ %145, %142 ]
  call void @_ZN5blink26CompositorFilterOperations23AppendColorMatrixFilterEN3WTF6VectorIfLj0ENS1_18PartitionAllocatorEEE(%"class.blink::CompositorFilterOperations"* %0, %"class.WTF::Vector.720"* nonnull %6) #8
  %161 = load float*, float** %26, align 8
  %162 = icmp eq float* %161, null
  %163 = bitcast float* %161 to i8*
  br i1 %162, label %169, label %164, !prof !2

164:                                              ; preds = %159
  %165 = load i32, i32* %29, align 4
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %168, label %167, !prof !3

167:                                              ; preds = %164
  store i32 0, i32* %29, align 4
  br label %168

168:                                              ; preds = %167, %164
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %163) #8
  store float* null, float** %26, align 8
  br label %169

169:                                              ; preds = %159, %168
  %170 = icmp eq float* %160, null
  br i1 %170, label %266, label %171, !prof !2

171:                                              ; preds = %169
  %172 = bitcast float* %160 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %172) #8
  br label %266

173:                                              ; preds = %40, %40, %40, %40
  %174 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %44, i64 1
  %175 = bitcast %"class.blink::FilterOperation"* %174 to double*
  %176 = load double, double* %175, align 8
  %177 = fptrunc double %176 to float
  switch i32 %46, label %266 [
    i32 6, label %178
    i32 7, label %179
    i32 8, label %180
    i32 9, label %181
  ]

178:                                              ; preds = %173
  call void @_ZN5blink26CompositorFilterOperations18AppendInvertFilterEf(%"class.blink::CompositorFilterOperations"* %0, float %177) #8
  br label %266

179:                                              ; preds = %173
  call void @_ZN5blink26CompositorFilterOperations19AppendOpacityFilterEf(%"class.blink::CompositorFilterOperations"* %0, float %177) #8
  br label %266

180:                                              ; preds = %173
  call void @_ZN5blink26CompositorFilterOperations22AppendBrightnessFilterEf(%"class.blink::CompositorFilterOperations"* %0, float %177) #8
  br label %266

181:                                              ; preds = %173
  call void @_ZN5blink26CompositorFilterOperations20AppendContrastFilterEf(%"class.blink::CompositorFilterOperations"* %0, float %177) #8
  br label %266

182:                                              ; preds = %40
  %183 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %44, i64 0, i32 2
  %184 = getelementptr inbounds [4 x i8], [4 x i8]* %183, i64 1, i64 2
  %185 = load i8, i8* %184, align 2, !range !4
  %186 = icmp eq i8 %185, 0
  br i1 %186, label %190, label %187

187:                                              ; preds = %182
  %188 = bitcast [4 x i8]* %183 to float*
  %189 = load float, float* %188, align 4
  br label %194

190:                                              ; preds = %182
  %191 = bitcast [4 x i8]* %183 to i32*
  %192 = load i32, i32* %191, align 4
  %193 = sitofp i32 %192 to float
  br label %194

194:                                              ; preds = %187, %190
  %195 = phi float [ %189, %187 ], [ %193, %190 ]
  %196 = load float, float* %30, align 4
  %197 = fmul float %195, %196
  %198 = load i32, i32* %31, align 8
  call void @_ZN5blink26CompositorFilterOperations16AppendBlurFilterEf10SkTileMode(%"class.blink::CompositorFilterOperations"* %0, float %197, i32 %198) #8
  br label %266

199:                                              ; preds = %40
  %200 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %44, i64 0, i32 2
  %201 = bitcast [4 x i8]* %200 to <2 x float>*
  %202 = load <2 x float>, <2 x float>* %201, align 4
  %203 = load float, float* %30, align 4
  %204 = extractelement <2 x float> %202, i32 0
  %205 = fmul float %204, %203
  %206 = extractelement <2 x float> %202, i32 1
  %207 = fmul float %206, %203
  %208 = call float @llvm.floor.f32(float %205) #8
  %209 = fpext float %208 to double
  %210 = fcmp ult double %209, 0x41DFFFFFFFC00000
  br i1 %210, label %211, label %216

211:                                              ; preds = %199
  %212 = fcmp ugt float %208, 0xC1E0000000000000
  br i1 %212, label %213, label %216

213:                                              ; preds = %211
  %214 = fptosi float %208 to i32
  %215 = zext i32 %214 to i64
  br label %216

216:                                              ; preds = %213, %211, %199
  %217 = phi i64 [ %215, %213 ], [ 2147483647, %199 ], [ 2147483648, %211 ]
  %218 = call float @llvm.floor.f32(float %207) #8
  %219 = fpext float %218 to double
  %220 = fcmp ult double %219, 0x41DFFFFFFFC00000
  br i1 %220, label %221, label %227

221:                                              ; preds = %216
  %222 = fcmp ugt float %218, 0xC1E0000000000000
  br i1 %222, label %223, label %227

223:                                              ; preds = %221
  %224 = fptosi float %218 to i32
  %225 = zext i32 %224 to i64
  %226 = shl nuw i64 %225, 32
  br label %227

227:                                              ; preds = %216, %221, %223
  %228 = phi i64 [ %226, %223 ], [ 9223372032559808512, %216 ], [ -9223372036854775808, %221 ]
  %229 = or i64 %228, %217
  %230 = getelementptr inbounds [4 x i8], [4 x i8]* %200, i64 2
  %231 = bitcast [4 x i8]* %230 to float*
  %232 = load float, float* %231, align 4
  %233 = fmul float %203, %232
  %234 = getelementptr inbounds [4 x i8], [4 x i8]* %200, i64 4
  %235 = bitcast [4 x i8]* %234 to i64*
  %236 = load i64, i64* %235, align 4
  %237 = trunc i64 %236 to i32
  call void @_ZN5blink26CompositorFilterOperations22AppendDropShadowFilterENS_8IntPointEfNS_5ColorE(%"class.blink::CompositorFilterOperations"* %0, i64 %229, float %233, i32 %237) #8
  br label %266

238:                                              ; preds = %40
  %239 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %44, i64 1
  %240 = bitcast %"class.blink::FilterOperation"* %239 to %"class.blink::BoxReflection"*
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %32, align 8
  call void @_ZN5blink20paint_filter_builder21BuildBoxReflectFilterERKNS_13BoxReflectionE5sk_spIN2cc11PaintFilterEE(%class.sk_sp.36* nonnull sret %7, %"class.blink::BoxReflection"* dereferenceable(32) %240, %class.sk_sp.36* nonnull %8) #8
  call void @_ZN5blink26CompositorFilterOperations21AppendReferenceFilterE5sk_spIN2cc11PaintFilterEE(%"class.blink::CompositorFilterOperations"* %0, %class.sk_sp.36* nonnull %7) #8
  %241 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %33, align 8
  %242 = icmp eq %"class.cc::PaintFilter"* %241, null
  br i1 %242, label %253, label %243

243:                                              ; preds = %238
  %244 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %241, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %245 = atomicrmw add i32* %244, i32 -1 acq_rel
  %246 = icmp eq i32 %245, 1
  br i1 %246, label %247, label %253

247:                                              ; preds = %243
  %248 = bitcast %"class.cc::PaintFilter"* %241 to %class.SkRefCntBase*
  %249 = bitcast %"class.cc::PaintFilter"* %241 to void (%class.SkRefCntBase*)***
  %250 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %249, align 8
  %251 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %250, i64 2
  %252 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %251, align 8
  call void %252(%class.SkRefCntBase* nonnull %248) #8
  br label %253

253:                                              ; preds = %238, %243, %247
  %254 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %32, align 8
  %255 = icmp eq %"class.cc::PaintFilter"* %254, null
  br i1 %255, label %266, label %256

256:                                              ; preds = %253
  %257 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %254, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %258 = atomicrmw add i32* %257, i32 -1 acq_rel
  %259 = icmp eq i32 %258, 1
  br i1 %259, label %260, label %266

260:                                              ; preds = %256
  %261 = bitcast %"class.cc::PaintFilter"* %254 to %class.SkRefCntBase*
  %262 = bitcast %"class.cc::PaintFilter"* %254 to void (%class.SkRefCntBase*)***
  %263 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %262, align 8
  %264 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %263, i64 2
  %265 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %264, align 8
  call void %265(%class.SkRefCntBase* nonnull %261) #8
  br label %266

266:                                              ; preds = %260, %256, %253, %171, %169, %100, %93, %92, %194, %227, %40, %103, %111, %110, %109, %108, %173, %181, %180, %179, %178
  %267 = phi i32 [ %41, %40 ], [ %41, %194 ], [ %41, %227 ], [ %41, %103 ], [ %41, %111 ], [ %41, %110 ], [ %41, %109 ], [ %41, %108 ], [ %41, %173 ], [ %41, %181 ], [ %41, %180 ], [ %41, %179 ], [ %41, %178 ], [ %61, %92 ], [ %94, %93 ], [ %94, %100 ], [ %41, %169 ], [ %41, %171 ], [ %41, %253 ], [ %41, %256 ], [ %41, %260 ]
  %268 = getelementptr inbounds %"class.blink::Member.58", %"class.blink::Member.58"* %42, i64 1
  %269 = icmp eq %"class.blink::Member.58"* %268, %23
  br i1 %269, label %38, label %40

270:                                              ; preds = %38
  %271 = bitcast %class.sk_sp.36* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %271) #8
  %272 = getelementptr inbounds %class.sk_sp.36, %class.sk_sp.36* %9, i64 0, i32 0
  store %"class.cc::PaintFilter"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintFilter"*), %"class.cc::PaintFilter"** %272, align 8
  %273 = getelementptr inbounds %class.sk_sp.36, %class.sk_sp.36* %10, i64 0, i32 0
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %273, align 8
  call void @_ZN5blink20paint_filter_builder27TransformInterpolationSpaceE5sk_spIN2cc11PaintFilterEENS_18InterpolationSpaceES5_(%class.sk_sp.36* nonnull sret %9, %class.sk_sp.36* nonnull %10, i32 %267, i32 0) #8
  %274 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %273, align 8
  %275 = icmp eq %"class.cc::PaintFilter"* %274, null
  br i1 %275, label %286, label %276

276:                                              ; preds = %270
  %277 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %274, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %278 = atomicrmw add i32* %277, i32 -1 acq_rel
  %279 = icmp eq i32 %278, 1
  br i1 %279, label %280, label %286

280:                                              ; preds = %276
  %281 = bitcast %"class.cc::PaintFilter"* %274 to %class.SkRefCntBase*
  %282 = bitcast %"class.cc::PaintFilter"* %274 to void (%class.SkRefCntBase*)***
  %283 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %282, align 8
  %284 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %283, i64 2
  %285 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %284, align 8
  call void %285(%class.SkRefCntBase* nonnull %281) #8
  br label %286

286:                                              ; preds = %270, %276, %280
  %287 = bitcast %class.sk_sp.36* %9 to i64*
  %288 = load i64, i64* %287, align 8
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %272, align 8
  %289 = bitcast %class.sk_sp.36* %11 to i64*
  store i64 %288, i64* %289, align 8
  call void @_ZN5blink26CompositorFilterOperations21AppendReferenceFilterE5sk_spIN2cc11PaintFilterEE(%"class.blink::CompositorFilterOperations"* %0, %class.sk_sp.36* nonnull %11) #8
  %290 = getelementptr inbounds %class.sk_sp.36, %class.sk_sp.36* %11, i64 0, i32 0
  %291 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %290, align 8
  %292 = icmp eq %"class.cc::PaintFilter"* %291, null
  br i1 %292, label %303, label %293

293:                                              ; preds = %286
  %294 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %291, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %295 = atomicrmw add i32* %294, i32 -1 acq_rel
  %296 = icmp eq i32 %295, 1
  br i1 %296, label %297, label %303

297:                                              ; preds = %293
  %298 = bitcast %"class.cc::PaintFilter"* %291 to %class.SkRefCntBase*
  %299 = bitcast %"class.cc::PaintFilter"* %291 to void (%class.SkRefCntBase*)***
  %300 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %299, align 8
  %301 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %300, i64 2
  %302 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %301, align 8
  call void %302(%class.SkRefCntBase* nonnull %298) #8
  br label %303

303:                                              ; preds = %286, %293, %297
  %304 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %272, align 8
  %305 = icmp eq %"class.cc::PaintFilter"* %304, null
  br i1 %305, label %316, label %306

306:                                              ; preds = %303
  %307 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %304, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %308 = atomicrmw add i32* %307, i32 -1 acq_rel
  %309 = icmp eq i32 %308, 1
  br i1 %309, label %310, label %316

310:                                              ; preds = %306
  %311 = bitcast %"class.cc::PaintFilter"* %304 to %class.SkRefCntBase*
  %312 = bitcast %"class.cc::PaintFilter"* %304 to void (%class.SkRefCntBase*)***
  %313 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %312, align 8
  %314 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %313, i64 2
  %315 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %314, align 8
  call void %315(%class.SkRefCntBase* nonnull %311) #8
  br label %316

316:                                              ; preds = %303, %306, %310
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %271) #8
  br label %317

317:                                              ; preds = %3, %38, %316
  %318 = call zeroext i1 @_ZNK5blink26CompositorFilterOperations7IsEmptyEv(%"class.blink::CompositorFilterOperations"* %0) #8
  br i1 %318, label %321, label %319

319:                                              ; preds = %317
  %320 = bitcast %"class.blink::FilterEffectBuilder"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 4 %320, i64 16, i1 false) #8
  br label %321

321:                                              ; preds = %317, %319
  ret void
}

declare void @_ZN5blink20paint_filter_builder33PopulateSourceGraphicImageFiltersEPNS_12FilterEffectENS_18InterpolationSpaceE(%"class.blink::FilterEffect"*, i32) local_unnamed_addr #3

declare void @_ZN5blink20paint_filter_builder5BuildEPNS_12FilterEffectENS_18InterpolationSpaceEb(%class.sk_sp.36* sret, %"class.blink::FilterEffect"*, i32, i1 zeroext) local_unnamed_addr #3

declare void @_ZN5blink26CompositorFilterOperations21AppendReferenceFilterE5sk_spIN2cc11PaintFilterEE(%"class.blink::CompositorFilterOperations"*, %class.sk_sp.36*) local_unnamed_addr #3

declare void @_ZN5blink26CompositorFilterOperations21AppendGrayscaleFilterEf(%"class.blink::CompositorFilterOperations"*, float) local_unnamed_addr #3

declare void @_ZN5blink26CompositorFilterOperations17AppendSepiaFilterEf(%"class.blink::CompositorFilterOperations"*, float) local_unnamed_addr #3

declare void @_ZN5blink26CompositorFilterOperations20AppendSaturateFilterEf(%"class.blink::CompositorFilterOperations"*, float) local_unnamed_addr #3

declare void @_ZN5blink26CompositorFilterOperations21AppendHueRotateFilterEf(%"class.blink::CompositorFilterOperations"*, float) local_unnamed_addr #3

declare void @_ZN5blink26CompositorFilterOperations23AppendColorMatrixFilterEN3WTF6VectorIfLj0ENS1_18PartitionAllocatorEEE(%"class.blink::CompositorFilterOperations"*, %"class.WTF::Vector.720"*) local_unnamed_addr #3

declare void @_ZN5blink26CompositorFilterOperations18AppendInvertFilterEf(%"class.blink::CompositorFilterOperations"*, float) local_unnamed_addr #3

declare void @_ZN5blink26CompositorFilterOperations19AppendOpacityFilterEf(%"class.blink::CompositorFilterOperations"*, float) local_unnamed_addr #3

declare void @_ZN5blink26CompositorFilterOperations22AppendBrightnessFilterEf(%"class.blink::CompositorFilterOperations"*, float) local_unnamed_addr #3

declare void @_ZN5blink26CompositorFilterOperations20AppendContrastFilterEf(%"class.blink::CompositorFilterOperations"*, float) local_unnamed_addr #3

declare void @_ZN5blink26CompositorFilterOperations16AppendBlurFilterEf10SkTileMode(%"class.blink::CompositorFilterOperations"*, float, i32) local_unnamed_addr #3

declare void @_ZN5blink26CompositorFilterOperations22AppendDropShadowFilterENS_8IntPointEfNS_5ColorE(%"class.blink::CompositorFilterOperations"*, i64, float, i32) local_unnamed_addr #3

declare void @_ZN5blink20paint_filter_builder21BuildBoxReflectFilterERKNS_13BoxReflectionE5sk_spIN2cc11PaintFilterEE(%class.sk_sp.36* sret, %"class.blink::BoxReflection"* dereferenceable(32), %class.sk_sp.36*) local_unnamed_addr #3

declare void @_ZN5blink20paint_filter_builder27TransformInterpolationSpaceE5sk_spIN2cc11PaintFilterEENS_18InterpolationSpaceES5_(%class.sk_sp.36* sret, %class.sk_sp.36*, i32, i32) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink26CompositorFilterOperations7IsEmptyEv(%"class.blink::CompositorFilterOperations"*) local_unnamed_addr #3

declare %"class.blink::LayoutSVGResourceContainer"* @_ZNK5blink11SVGResource29ResourceContainerNoCycleCheckEv(%"class.blink::SVGResource"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink16SVGFilterBuilderC1EPNS_12FilterEffectEPNS_21SVGFilterGraphNodeMapEPKN2cc10PaintFlagsES8_(%"class.blink::SVGFilterBuilder"*, %"class.blink::FilterEffect"*, %"class.blink::SVGFilterGraphNodeMap"*, %"class.cc::PaintFlags"*, %"class.cc::PaintFlags"*) unnamed_addr #3

declare void @_ZN5blink16SVGFilterBuilder10BuildGraphEPNS_6FilterERNS_16SVGFilterElementERKNS_9FloatRectE(%"class.blink::SVGFilterBuilder"*, %"class.blink::Filter"*, %"class.blink::SVGFilterElement"* dereferenceable(232), %"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZN5blink6Filter13SetLastEffectEPNS_12FilterEffectE(%"class.blink::Filter"*, %"class.blink::FilterEffect"*) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #8
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

declare void @_ZN2cc16FilterOperationsC1Ev(%"class.cc::FilterOperations"*) unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #5

declare void @_ZN5blink6FilterC1Ef(%"class.blink::Filter"*, float) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_6FilterEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_6FilterEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_6FilterEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.64"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_6FilterEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.64"*)) #8
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink6FilterEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #6 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #8
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #8
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* %21, i8* %22) #8
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.3, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #8
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #8
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #8
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !3

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #8
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #3

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #3

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #3

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_6FilterEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Filter"*
  tail call void @_ZNK5blink6Filter5TraceEPNS_7VisitorE(%"class.blink::Filter"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_6FilterEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.64"*) local_unnamed_addr #3

declare void @_ZNK5blink6Filter5TraceEPNS_7VisitorE(%"class.blink::Filter"*, %"class.blink::Visitor"*) local_unnamed_addr #3

declare void @_ZN5blink13FEColorMatrixC1EPNS_6FilterENS_15ColorMatrixTypeEN3WTF6VectorIfLj0ENS4_18PartitionAllocatorEEE(%"class.blink::FEColorMatrix"*, %"class.blink::Filter"*, i32, %"class.WTF::Vector.720"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_12FilterEffectEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_12FilterEffectEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_12FilterEffectEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.64"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_12FilterEffectEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.64"*)) #8
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12FilterEffectEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_12FilterEffectEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::FilterEffect"*
  %4 = bitcast i8* %1 to void (%"class.blink::FilterEffect"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::FilterEffect"*, %"class.blink::Visitor"*)**, void (%"class.blink::FilterEffect"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::FilterEffect"*, %"class.blink::Visitor"*)*, void (%"class.blink::FilterEffect"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::FilterEffect"*, %"class.blink::Visitor"*)*, void (%"class.blink::FilterEffect"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::FilterEffect"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_12FilterEffectEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::FilterEffect"*
  %3 = bitcast i8* %0 to void (%"class.blink::FilterEffect"*)***
  %4 = load void (%"class.blink::FilterEffect"*)**, void (%"class.blink::FilterEffect"*)*** %3, align 8
  %5 = load void (%"class.blink::FilterEffect"*)*, void (%"class.blink::FilterEffect"*)** %4, align 8
  tail call void %5(%"class.blink::FilterEffect"* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_12FilterEffectEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8 1 }
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIfLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIfEEvOT_(%"class.WTF::Vector.720"*, float* dereferenceable(4)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.720", %"class.WTF::Vector.720"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.720", %"class.WTF::Vector.720"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load float*, float** %6, align 8
  %8 = icmp ugt float* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds float, float* %7, i64 %10
  %12 = icmp ugt float* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.720", %"class.WTF::Vector.720"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq float* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm(i64 %26) #8
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIfEEPKcv, i64 0, i64 0)) #8
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.720"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 2
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to float*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 2
  %37 = ptrtoint i8* %28 to i64
  %38 = load float*, float** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne float* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast float* %38 to i8*
  br i1 %41, label %43, label %49, !prof !2

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #8
  %47 = bitcast %"class.WTF::Vector.720"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #8
  %51 = bitcast %"class.WTF::Vector.720"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to float*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint float* %1 to i64
  %56 = ptrtoint float* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 2
  %59 = getelementptr inbounds %"class.WTF::Vector.720", %"class.WTF::Vector.720"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !2

69:                                               ; preds = %54
  %70 = icmp eq float* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm(i64 %71) #8
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIfEEPKcv, i64 0, i64 0)) #8
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.720"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load float*, float** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne float* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast float* %78 to i8*
  br i1 %81, label %83, label %89, !prof !2

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #8
  %87 = bitcast %"class.WTF::Vector.720"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #8
  %91 = bitcast %"class.WTF::Vector.720"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 2
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to float*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi float* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds float, float* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi float* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi float* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds float, float* %100, i64 %103
  %105 = bitcast float* %101 to i32*
  %106 = load i32, i32* %105, align 4
  %107 = bitcast float* %104 to i32*
  store i32 %106, i32* %107, align 4
  %108 = load i32, i32* %3, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %3, align 4
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare void @_ZN5blink19FEComponentTransferC1EPNS_6FilterERKNS_25ComponentTransferFunctionES5_S5_S5_(%"class.blink::FEComponentTransfer"*, %"class.blink::Filter"*, %"struct.blink::ComponentTransferFunction"* dereferenceable(40), %"struct.blink::ComponentTransferFunction"* dereferenceable(40), %"struct.blink::ComponentTransferFunction"* dereferenceable(40), %"struct.blink::ComponentTransferFunction"* dereferenceable(40)) unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIfLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIiEEvOT_(%"class.WTF::Vector.720"*, i32* dereferenceable(4)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.720", %"class.WTF::Vector.720"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.720", %"class.WTF::Vector.720"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.720", %"class.WTF::Vector.720"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load float*, float** %16, align 8
  br i1 %15, label %18, label %45, !prof !2

18:                                               ; preds = %2
  %19 = icmp eq float* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm(i64 %20) #8
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIfEEPKcv, i64 0, i64 0)) #8
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.720"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load float*, float** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne float* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast float* %27 to i8*
  br i1 %30, label %32, label %38, !prof !2

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %22, i8* nonnull align 4 %31, i64 %35, i1 false) #8
  %36 = bitcast %"class.WTF::Vector.720"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #8
  %40 = bitcast %"class.WTF::Vector.720"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 2
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to float*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi float* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds float, float* %46, i64 %48
  %50 = load i32, i32* %1, align 4
  %51 = sitofp i32 %50 to float
  store float %51, float* %49, align 4
  %52 = load i32, i32* %3, align 4
  %53 = add i32 %52, 1
  store i32 %53, i32* %3, align 4
  ret void
}

declare void @_ZN5blink14FEGaussianBlurC1EPNS_6FilterEff(%"class.blink::FEGaussianBlur"*, %"class.blink::Filter"*, float, float) unnamed_addr #3

declare void @_ZN5blink12FEDropShadowC1EPNS_6FilterEffffRKNS_5ColorEf(%"class.blink::FEDropShadow"*, %"class.blink::Filter"*, float, float, float, float, %"class.blink::Color"* dereferenceable(4), float) unnamed_addr #3

declare void @_ZN5blink12FEBoxReflectC1EPNS_6FilterERKNS_13BoxReflectionE(%"class.blink::FEBoxReflect"*, %"class.blink::Filter"*, %"class.blink::BoxReflection"* dereferenceable(32)) unnamed_addr #3

declare void @_ZN5blink16FEConvolveMatrixC1EPNS_6FilterERKNS_7IntSizeEffRKNS_8IntPointENS0_12EdgeModeTypeEbRKN3WTF6VectorIfLj0ENSA_18PartitionAllocatorEEE(%"class.blink::FEConvolveMatrix"*, %"class.blink::Filter"*, %"class.blink::IntSize"* dereferenceable(8), float, float, %"class.blink::IntPoint"* dereferenceable(8), i32, i1 zeroext, %"class.WTF::Vector.720"* dereferenceable(16)) unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_12FilterEffectEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector"*, %"class.blink::FilterEffect"** dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_12FilterEffectEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"* %0, i32 %14) #8
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member"*, %"class.blink::Member"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 %18
  %20 = bitcast %"class.blink::FilterEffect"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #8
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_12FilterEffectEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !2

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %10 = icmp eq %"class.blink::Member"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_12FilterEffectEEEEEmm(i64 %11) #8
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_12FilterEffectEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #8
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #8
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %26 = icmp eq %"class.blink::Member"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #8
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #8
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #8
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !4
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.6, i64 0, i64 0)) #8
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #8
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_12FilterEffectEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_12FilterEffectEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #8
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_12FilterEffectEEEEEmm(i64 %14) #8
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_12FilterEffectEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #8
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member"*, %"class.blink::Member"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !2

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #8
  %33 = bitcast %"class.WTF::Vector"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #8
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #8
  %42 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #8
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_12FilterEffectEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.7, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_12FilterEffectEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.9, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_12FilterEffectEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_12FilterEffectEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_12FilterEffectEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_12FilterEffectEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.64"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_12FilterEffectEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.64"*)) #8
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([165 x i8], [165 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_12FilterEffectEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_12FilterEffectEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 %28
  %30 = bitcast %"class.blink::Member"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12FilterEffectEE5TraceEPNS_7VisitorEPKv) #8
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_12FilterEffectEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8 1 }
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #3

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #3

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #3

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #3

declare { <2 x float>, <2 x float> } @_ZN5blink16SVGLengthContext16ResolveRectangleEPKNS_10SVGElementENS_12SVGUnitTypes11SVGUnitTypeERKNS_9FloatRectERKNS_9SVGLengthESB_SB_SB_(%"class.blink::SVGElement"*, i32, %"class.blink::FloatRect"* dereferenceable(16), %"class.blink::SVGLength"* dereferenceable(32), %"class.blink::SVGLength"* dereferenceable(32), %"class.blink::SVGLength"* dereferenceable(32), %"class.blink::SVGLength"* dereferenceable(32)) local_unnamed_addr #3

declare void @_ZN5blink6FilterC1ERKNS_9FloatRectES3_fNS0_11UnitScalingE(%"class.blink::Filter"*, %"class.blink::FloatRect"* dereferenceable(16), %"class.blink::FloatRect"* dereferenceable(16), float, i32) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK5blink32ComponentTransferFilterOperation7RedFuncEv: argument 0"}
!7 = distinct !{!7, !"_ZNK5blink32ComponentTransferFilterOperation7RedFuncEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK5blink32ComponentTransferFilterOperation9GreenFuncEv: argument 0"}
!10 = distinct !{!10, !"_ZNK5blink32ComponentTransferFilterOperation9GreenFuncEv"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNK5blink32ComponentTransferFilterOperation8BlueFuncEv: argument 0"}
!13 = distinct !{!13, !"_ZNK5blink32ComponentTransferFilterOperation8BlueFuncEv"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNK5blink32ComponentTransferFilterOperation9AlphaFuncEv: argument 0"}
!16 = distinct !{!16, !"_ZNK5blink32ComponentTransferFilterOperation9AlphaFuncEv"}
