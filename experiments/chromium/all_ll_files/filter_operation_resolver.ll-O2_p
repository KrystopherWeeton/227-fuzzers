; ModuleID = '../../third_party/blink/renderer/core/css/resolver/filter_operation_resolver.cc'
source_filename = "../../third_party/blink/renderer/core/css/resolver/filter_operation_resolver.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.97", i32, [4 x i8], %"class.std::__1::unique_ptr.235", %"class.std::__1::unique_ptr.235", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.245", %"class.std::__1::unique_ptr.251", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.263", %"class.std::__1::unique_ptr.269", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.276", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.106", %"class.std::__1::unique_ptr.112", %"class.std::__1::unique_ptr.118", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.130", %"class.std::__1::unique_ptr.141", %"class.std::__1::unique_ptr.148", %"class.std::__1::unique_ptr.148", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.162", %"class.std::__1::unique_ptr.169", %"class.std::__1::unique_ptr.169", %"class.std::__1::unique_ptr.176", %"class.std::__1::unique_ptr.183", %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.215", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.133" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.133" = type { %"struct.std::__1::__atomic_base.134" }
%"struct.std::__1::__atomic_base.134" = type { %"struct.std::__1::__atomic_base.135" }
%"struct.std::__1::__atomic_base.135" = type { %"struct.std::__1::__cxx_atomic_impl.136" }
%"struct.std::__1::__cxx_atomic_impl.136" = type { %"struct.std::__1::__cxx_atomic_base_impl.137" }
%"struct.std::__1::__cxx_atomic_base_impl.137" = type { i64 }
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.blink::Worklist.144"* }
%"class.blink::Worklist.144" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.133" }
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.blink::Worklist.151"* }
%"class.blink::Worklist.151" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.133" }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::Worklist.158"* }
%"class.blink::Worklist.158" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.133" }
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"class.blink::Worklist.165"* }
%"class.blink::Worklist.165" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.133" }
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.blink::Worklist.172"* }
%"class.blink::Worklist.172" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.133" }
%"class.std::__1::unique_ptr.176" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"class.blink::Worklist.179"* }
%"class.blink::Worklist.179" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.133" }
%"class.std::__1::unique_ptr.183" = type { %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"class.blink::Worklist.186"* }
%"class.blink::Worklist.186" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.133" }
%"class.std::__1::unique_ptr.190" = type { %"class.std::__1::__compressed_pair.191" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.192" }
%"struct.std::__1::__compressed_pair_elem.192" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.193", %"class.std::__1::__compressed_pair.202", %"class.std::__1::__compressed_pair.207", %"class.std::__1::__compressed_pair.209", [4 x i8] }>
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195", %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { i64 }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { float }
%"class.std::__1::unique_ptr.215" = type { %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.218", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.218" = type { %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.227" }
%"class.WTF::Vector.227" = type { %"class.WTF::VectorBuffer.228" }
%"class.WTF::VectorBuffer.228" = type { %"class.WTF::VectorBufferBase.229" }
%"class.WTF::VectorBufferBase.229" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.243" }
%"class.WTF::VectorBuffer.243" = type { %"class.WTF::VectorBufferBase.244" }
%"class.WTF::VectorBufferBase.244" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.245" = type { %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.257" }
%"class.std::__1::unique_ptr.257" = type { %"class.std::__1::__compressed_pair.258" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"struct.std::__1::__compressed_pair_elem.259" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.144"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.151"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.158"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.165"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.172"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1321" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1321" = type { %"struct.std::__1::__compressed_pair_elem.1322" }
%"struct.std::__1::__compressed_pair_elem.1322" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.269" = type { %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.275 }
%class.scoped_refptr.275 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.276" = type { %"struct.std::__1::__atomic_base.277" }
%"struct.std::__1::__atomic_base.277" = type { %"struct.std::__1::__cxx_atomic_impl.278" }
%"struct.std::__1::__cxx_atomic_impl.278" = type { %"struct.std::__1::__cxx_atomic_base_impl.279" }
%"struct.std::__1::__cxx_atomic_base_impl.279" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.79" }
%"struct.std::__1::atomic.79" = type { %"struct.std::__1::__atomic_base.80" }
%"struct.std::__1::__atomic_base.80" = type { %"struct.std::__1::__atomic_base.81" }
%"struct.std::__1::__atomic_base.81" = type { %"struct.std::__1::__cxx_atomic_impl.82" }
%"struct.std::__1::__cxx_atomic_impl.82" = type { %"struct.std::__1::__cxx_atomic_base_impl.83" }
%"struct.std::__1::__cxx_atomic_base_impl.83" = type { i32 }
%"class.blink::CSSFunctionValue" = type <{ %"class.blink::CSSValueList", i32, [4 x i8] }>
%"class.blink::CSSValueList" = type { %"class.blink::CSSValue", %"class.blink::HeapVector" }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSPrimitiveValue" = type { %"class.blink::CSSValue" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.460" }
%"class.blink::HeapVector.460" = type { %"class.WTF::Vector.463" }
%"class.WTF::Vector.463" = type { %"class.WTF::VectorBuffer.464" }
%"class.WTF::VectorBuffer.464" = type { %"class.WTF::VectorBufferBase.465" }
%"class.WTF::VectorBufferBase.465" = type { %"class.blink::Member.466"*, i32, i32 }
%"class.blink::Member.466" = type { %"class.blink::MemberBase.467" }
%"class.blink::MemberBase.467" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::StyleResolverState" = type <{ %"class.blink::ElementResolveContext", %"class.blink::Document"*, %class.scoped_refptr.705, %"class.blink::CSSToLengthConversionData", %class.scoped_refptr.32, %class.scoped_refptr.32, %"class.blink::CSSAnimationUpdate", i32, [4 x i8], %"class.blink::FontBuilder", %"class.blink::PseudoElement"*, %"class.blink::ElementStyleResources", i32, i8, i8, [2 x i8] }>
%"class.blink::ElementResolveContext" = type <{ %"class.blink::Element"*, %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"*, %class.scoped_refptr.32, i32, [4 x i8] }>
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.14" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.4", %"class.blink::Member.4" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.4", %"class.blink::Member.6", %"class.blink::Member.4", %"class.blink::Member.4", %"class.blink::Member.8" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.356", %"class.blink::Member.358", %"class.blink::Member.6", %"class.blink::Member.360", %"class.blink::Member.360", %"class.blink::Member.384", %"class.blink::Member.386", %"class.blink::Member.388", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.393", %"class.blink::HeapVector.395" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.356" = type { %"class.blink::MemberBase.357" }
%"class.blink::MemberBase.357" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.358" = type { %"class.blink::MemberBase.359" }
%"class.blink::MemberBase.359" = type { %"class.blink::Document"* }
%"class.blink::Member.360" = type { %"class.blink::MemberBase.361" }
%"class.blink::MemberBase.361" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.364" }
%"class.blink::HeapHashMap.364" = type { %"class.WTF::HashMap.367" }
%"class.WTF::HashMap.367" = type { %"class.WTF::HashTable.368" }
%"class.WTF::HashTable.368" = type <{ %"struct.WTF::KeyValuePair.370"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.370" = type { %"class.WTF::AtomicString", %"class.blink::Member.371" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.12 }
%class.scoped_refptr.12 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::Member.371" = type { %"class.blink::MemberBase.372" }
%"class.blink::MemberBase.372" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.375", i32, %"class.blink::HeapVector.377" }
%"class.blink::Member.375" = type { %"class.blink::MemberBase.376" }
%"class.blink::MemberBase.376" = type { %"class.blink::Element"* }
%"class.blink::HeapVector.377" = type { %"class.WTF::Vector.380" }
%"class.WTF::Vector.380" = type { %"class.WTF::VectorBuffer.381" }
%"class.WTF::VectorBuffer.381" = type { %"class.WTF::VectorBufferBase.382" }
%"class.WTF::VectorBufferBase.382" = type { %"class.blink::Member.375"*, i32, i32 }
%"class.blink::Member.384" = type { %"class.blink::MemberBase.385" }
%"class.blink::MemberBase.385" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.386" = type { %"class.blink::MemberBase.387" }
%"class.blink::MemberBase.387" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.388" = type { %"class.blink::MemberBase.389" }
%"class.blink::MemberBase.389" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.390" }
%"class.blink::Member.390" = type { %"class.blink::MemberBase.391" }
%"class.blink::MemberBase.391" = type { %"class.blink::HeapHashMap.392"* }
%"class.blink::HeapHashMap.392" = type opaque
%"class.blink::Member.393" = type { %"class.blink::MemberBase.394" }
%"class.blink::MemberBase.394" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.395" = type { %"class.WTF::Vector.398" }
%"class.WTF::Vector.398" = type { %"class.WTF::VectorBuffer.399" }
%"class.WTF::VectorBuffer.399" = type { %"class.WTF::VectorBufferBase.400" }
%"class.WTF::VectorBufferBase.400" = type { %"class.blink::Member.401"*, i32, i32 }
%"class.blink::Member.401" = type { %"class.blink::MemberBase.402" }
%"class.blink::MemberBase.402" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.4" = type { %"class.blink::MemberBase.5" }
%"class.blink::MemberBase.5" = type { %"class.blink::Node"* }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Member.14" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.18", %"class.blink::Member.20", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.18" = type { %"class.WTF::SingleThreadedBitField.19" }
%"class.WTF::SingleThreadedBitField.19" = type { i32 }
%"class.blink::Member.20" = type { %"class.blink::MemberBase.21" }
%"class.blink::MemberBase.21" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.24 }
%class.scoped_refptr.24 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.25", %"class.WTF::AtomicString", %"class.WTF::Vector.27" }
%"class.WTF::RefCounted.25" = type { %"class.base::RefCounted.26" }
%"class.base::RefCounted.26" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.27" = type { %"class.WTF::VectorBuffer.28" }
%"class.WTF::VectorBuffer.28" = type { %"class.WTF::VectorBufferBase.29", [32 x i8] }
%"class.WTF::VectorBufferBase.29" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.969", %"class.WTF::Vector.969", i8, i32, %"class.blink::Member.976", %"class.blink::Member.978", %"class.blink::Member.980", %"class.blink::Member.982", %"class.blink::Member.984", %"class.blink::Member.986", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.994", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1000", %"class.blink::Member.1002", %"class.blink::Member.401", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1005", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.377", %"class.blink::Member.375", %"class.blink::Member.1030", %"class.blink::Member.375", %"class.blink::Member.375", %"class.blink::Member.375", %"class.blink::UserActionElementSet", %"class.blink::Member.1039", double, double, i64, i64, %"class.blink::HeapHashSet.1041", %"class.blink::HeapHashSet.1048", i16, i8, %"class.blink::Member.1055", %"class.blink::Member.1057", %"class.blink::Member.1059", %"class.blink::Member.1061", %"class.blink::TextLinkColors", %"class.blink::Member.1063", i8, [7 x i8], %"class.blink::HeapHashMap.1065", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.375", %"class.WTF::Vector.1072", %"class.blink::Member.1077", %"class.blink::Member.1079", i8, %"class.blink::Member.375", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1081", %"class.blink::HeapVector.1083", %"class.std::__1::unique_ptr.1091", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1097", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1110", %"class.WTF::Vector.1112", i8, i8, %"class.std::__1::unique_ptr.1117", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.377", %"class.blink::HeapVector.1123", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1131", i8, i32, %"class.blink::Member.1133", %"class.blink::Member.1135", %"class.blink::Member.1137", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1139", %"class.WTF::HashMap.1141", %"class.blink::Member.1146", %"class.blink::Member.1148", %"class.blink::Member.1150", %"class.blink::Member.1152", %"class.blink::Member.358", %"class.blink::Member.358", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1154", i8, i32, %"class.blink::Member.1161", %"class.blink::Member.1163", i32, %"class.blink::Member.1165", %"class.blink::Member.1167", %"class.blink::Member.1169", %"class.std::__1::unique_ptr.1171", i64, %"class.std::__1::unique_ptr.1177", i32, i32, %"class.blink::Member.1192", %"class.blink::Member.1194", %"class.blink::Member.1196", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1198", %"class.WTF::Vector.1200", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1205", %"class.blink::Member.1212", %"class.std::__1::unique_ptr.1214", %"class.blink::Member.1220", i8, i8, %"class.WTF::String", %"class.blink::Member.1222", i8, [7 x i8], %"class.blink::HeapHashMap.1224", %"class.blink::HeapObserverSet.1231", %"class.blink::Member.1239", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1241", i32, i8, i8, %"class.blink::WeakMember.1243", %"class.blink::Member.1244" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.962" }
%"class.blink::HeapHashMap.962" = type { %"class.WTF::HashMap.965" }
%"class.WTF::HashMap.965" = type { %"class.WTF::HashTable.966" }
%"class.WTF::HashTable.966" = type <{ %"struct.WTF::KeyValuePair.968"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.968" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.969" = type { %"class.WTF::VectorBuffer.970" }
%"class.WTF::VectorBuffer.970" = type { %"class.WTF::VectorBufferBase.971" }
%"class.WTF::VectorBufferBase.971" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.972 }
%class.scoped_refptr.972 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.973", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.973" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.79" }
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.978" = type { %"class.blink::MemberBase.979" }
%"class.blink::MemberBase.979" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1257", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1290", i32, i8, [3 x i8], %"class.blink::HeapVector.1292", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1300", %"class.blink::Member.1302", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1311", %"class.blink::Member.1317", %"class.blink::Member.1319", i8, [7 x i8] }>
%"class.blink::Supplementable.1257" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1258" }
%"class.blink::HeapHashMap.1258" = type { %"class.WTF::HashMap.1261" }
%"class.WTF::HashMap.1261" = type { %"class.WTF::HashTable.1262" }
%"class.WTF::HashTable.1262" = type <{ %"struct.WTF::KeyValuePair.1264"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1264" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1265" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.930" }
%"class.blink::HeapHashSet.930" = type { %"class.WTF::HashSet.933" }
%"class.WTF::HashSet.933" = type { %"class.WTF::HashTable.934" }
%"class.WTF::HashTable.934" = type <{ %"class.blink::WeakMember.936"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.936" = type opaque
%"class.blink::Supplementable.1265" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1266" }
%"class.blink::HeapHashMap.1266" = type { %"class.WTF::HashMap.1269" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1272" = type { i8*, %"class.blink::Member.1354" }
%"class.blink::Member.1354" = type { %"class.blink::MemberBase.1355" }
%"class.blink::MemberBase.1355" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1356" }
%"class.blink::Member.1356" = type { %"class.blink::MemberBase.1357" }
%"class.blink::MemberBase.1357" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1273, %"class.std::__1::unique_ptr.1274", %"class.std::__1::unique_ptr.1274", %"class.std::__1::unique_ptr.1280", %"class.std::__1::unique_ptr.1280", %"class.blink::Member.978", i32, [4 x i8], %"class.WTF::HashSet.1286", i32, i32 }
%class.scoped_refptr.1273 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.1274" = type { %"class.std::__1::__compressed_pair.1275" }
%"class.std::__1::__compressed_pair.1275" = type { %"struct.std::__1::__compressed_pair_elem.1276" }
%"struct.std::__1::__compressed_pair_elem.1276" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1280" = type { %"class.std::__1::__compressed_pair.1281" }
%"class.std::__1::__compressed_pair.1281" = type { %"struct.std::__1::__compressed_pair_elem.1282" }
%"struct.std::__1::__compressed_pair_elem.1282" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1286" = type { %"class.WTF::HashTable.1287" }
%"class.WTF::HashTable.1287" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1290" = type { %"class.blink::MemberBase.1291" }
%"class.blink::MemberBase.1291" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1292" = type { %"class.WTF::Vector.1295" }
%"class.WTF::Vector.1295" = type { %"class.WTF::VectorBuffer.1296" }
%"class.WTF::VectorBuffer.1296" = type { %"class.WTF::VectorBufferBase.1297" }
%"class.WTF::VectorBufferBase.1297" = type { %"class.blink::Member.1298"*, i32, i32 }
%"class.blink::Member.1298" = type opaque
%"class.blink::Member.1300" = type { %"class.blink::MemberBase.1301" }
%"class.blink::MemberBase.1301" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1302" = type { %"class.blink::MemberBase.1303" }
%"class.blink::MemberBase.1303" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1304", i32, i32 }
%"class.blink::HeapHashMap.1304" = type { %"class.WTF::HashMap.1307" }
%"class.WTF::HashMap.1307" = type { %"class.WTF::HashTable.1308" }
%"class.WTF::HashTable.1308" = type <{ %"struct.WTF::KeyValuePair.1310"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1310" = type opaque
%"class.std::__1::unique_ptr.1311" = type { %"class.std::__1::__compressed_pair.1312" }
%"class.std::__1::__compressed_pair.1312" = type { %"struct.std::__1::__compressed_pair_elem.1313" }
%"struct.std::__1::__compressed_pair_elem.1313" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1317" = type { %"class.blink::MemberBase.1318" }
%"class.blink::MemberBase.1318" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1319" = type { %"class.blink::MemberBase.1320" }
%"class.blink::MemberBase.1320" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.980" = type { %"class.blink::MemberBase.981" }
%"class.blink::MemberBase.981" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.982" = type { %"class.blink::MemberBase.983" }
%"class.blink::MemberBase.983" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.984" = type { %"class.blink::MemberBase.985" }
%"class.blink::MemberBase.985" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.986" = type { %"class.blink::MemberBase.987" }
%"class.blink::MemberBase.987" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.994" = type { %"class.std::__1::__compressed_pair.995" }
%"class.std::__1::__compressed_pair.995" = type { %"struct.std::__1::__compressed_pair_elem.996" }
%"struct.std::__1::__compressed_pair_elem.996" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.988" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.988" = type { %"class.std::__1::__compressed_pair.989" }
%"class.std::__1::__compressed_pair.989" = type { %"struct.std::__1::__compressed_pair_elem.990" }
%"struct.std::__1::__compressed_pair_elem.990" = type { %"class.blink::KURL"* }
%"class.blink::Member.1000" = type { %"class.blink::MemberBase.1001" }
%"class.blink::MemberBase.1001" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1002" = type { %"class.blink::MemberBase.1003" }
%"class.blink::MemberBase.1003" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.1004 }
%class.scoped_refptr.1004 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.1008 }
%class.scoped_refptr.1008 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.1009", i32, i32, %"class.blink::Persistent.1011" }
%"class.WTF::RefCounted.1009" = type { %"class.base::RefCounted.1010" }
%"class.base::RefCounted.1010" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1011" = type { %"class.blink::PersistentBase.1012" }
%"class.blink::PersistentBase.1012" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.309" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.1015" }
%"class.blink::HeapHashMap.1015" = type { %"class.WTF::HashMap.1018" }
%"class.WTF::HashMap.1018" = type { %"class.WTF::HashTable.1019" }
%"class.WTF::HashTable.1019" = type <{ %"struct.WTF::KeyValuePair.1021"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1021" = type { %"class.blink::WeakMember.1022", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.1022" = type { %"class.blink::MemberBase.1023" }
%"class.blink::MemberBase.1023" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr.309" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.1030" = type { %"class.blink::MemberBase.1031" }
%"class.blink::MemberBase.1031" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1032" }
%"class.blink::HeapHashMap.1032" = type { %"class.WTF::HashMap.1035" }
%"class.WTF::HashMap.1035" = type { %"class.WTF::HashTable.1036" }
%"class.WTF::HashTable.1036" = type <{ %"struct.WTF::KeyValuePair.1038"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1038" = type opaque
%"class.blink::Member.1039" = type { %"class.blink::MemberBase.1040" }
%"class.blink::MemberBase.1040" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1041" = type { %"class.WTF::HashSet.1044" }
%"class.WTF::HashSet.1044" = type { %"class.WTF::HashTable.1045" }
%"class.WTF::HashTable.1045" = type <{ %"class.blink::WeakMember.1047"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1047" = type opaque
%"class.blink::HeapHashSet.1048" = type { %"class.WTF::HashSet.1051" }
%"class.WTF::HashSet.1051" = type { %"class.WTF::HashTable.1052" }
%"class.WTF::HashTable.1052" = type <{ %"class.blink::WeakMember.1054"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1054" = type opaque
%"class.blink::Member.1055" = type { %"class.blink::MemberBase.1056" }
%"class.blink::MemberBase.1056" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1057" = type { %"class.blink::MemberBase.1058" }
%"class.blink::MemberBase.1058" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.1059" = type { %"class.blink::MemberBase.1060" }
%"class.blink::MemberBase.1060" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.1061" = type { %"class.blink::MemberBase.1062" }
%"class.blink::MemberBase.1062" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.1063" = type { %"class.blink::MemberBase.1064" }
%"class.blink::MemberBase.1064" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1065" = type { %"class.WTF::HashMap.1068" }
%"class.WTF::HashMap.1068" = type { %"class.WTF::HashTable.1069" }
%"class.WTF::HashTable.1069" = type <{ %"struct.WTF::KeyValuePair.1071"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1071" = type opaque
%"class.WTF::Vector.1072" = type { %"class.WTF::VectorBuffer.1073" }
%"class.WTF::VectorBuffer.1073" = type { %"class.WTF::VectorBufferBase.1074" }
%"class.WTF::VectorBufferBase.1074" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1077" = type { %"class.blink::MemberBase.1078" }
%"class.blink::MemberBase.1078" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1079" = type { %"class.blink::MemberBase.1080" }
%"class.blink::MemberBase.1080" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1083" = type { %"class.WTF::Vector.1086" }
%"class.WTF::Vector.1086" = type { %"class.WTF::VectorBuffer.1087" }
%"class.WTF::VectorBuffer.1087" = type { %"class.WTF::VectorBufferBase.1088" }
%"class.WTF::VectorBufferBase.1088" = type { %"class.blink::Member.1089"*, i32, i32 }
%"class.blink::Member.1089" = type opaque
%"class.std::__1::unique_ptr.1091" = type { %"class.std::__1::__compressed_pair.1092" }
%"class.std::__1::__compressed_pair.1092" = type { %"struct.std::__1::__compressed_pair_elem.1093" }
%"struct.std::__1::__compressed_pair_elem.1093" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.1097" = type { %"class.WTF::HashSet.1100" }
%"class.WTF::HashSet.1100" = type { %"class.WTF::HashTable.1101" }
%"class.WTF::HashTable.1101" = type <{ %"class.blink::WeakMember.1103"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1103" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1104", i32, [4 x i8] }>
%"class.WTF::Vector.1104" = type { %"class.WTF::VectorBuffer.1105" }
%"class.WTF::VectorBuffer.1105" = type { %"class.WTF::VectorBufferBase.1106" }
%"class.WTF::VectorBufferBase.1106" = type { %"struct.std::__1::pair.1107"*, i32, i32 }
%"struct.std::__1::pair.1107" = type opaque
%"class.blink::Member.1110" = type { %"class.blink::MemberBase.1111" }
%"class.blink::MemberBase.1111" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1112" = type { %"class.WTF::VectorBuffer.1113" }
%"class.WTF::VectorBuffer.1113" = type { %"class.WTF::VectorBufferBase.1114" }
%"class.WTF::VectorBufferBase.1114" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1117" = type { %"class.std::__1::__compressed_pair.1118" }
%"class.std::__1::__compressed_pair.1118" = type { %"struct.std::__1::__compressed_pair_elem.1119" }
%"struct.std::__1::__compressed_pair_elem.1119" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.1123" = type { %"class.WTF::Vector.1126" }
%"class.WTF::Vector.1126" = type { %"class.WTF::VectorBuffer.1127" }
%"class.WTF::VectorBuffer.1127" = type { %"class.WTF::VectorBufferBase.1128" }
%"class.WTF::VectorBufferBase.1128" = type { %"class.blink::Member.1129"*, i32, i32 }
%"class.blink::Member.1129" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.358" }
%"class.blink::Member.1131" = type { %"class.blink::MemberBase.1132" }
%"class.blink::MemberBase.1132" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1133" = type { %"class.blink::MemberBase.1134" }
%"class.blink::MemberBase.1134" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1135" = type { %"class.blink::MemberBase.1136" }
%"class.blink::MemberBase.1136" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1137" = type { %"class.blink::MemberBase.1138" }
%"class.blink::MemberBase.1138" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1139" = type { %"class.blink::MemberBase.1140" }
%"class.blink::MemberBase.1140" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1141" = type { %"class.WTF::HashTable.1142" }
%"class.WTF::HashTable.1142" = type <{ %"struct.WTF::KeyValuePair.1145"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1145" = type opaque
%"class.blink::Member.1146" = type { %"class.blink::MemberBase.1147" }
%"class.blink::MemberBase.1147" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1148" = type { %"class.blink::MemberBase.1149" }
%"class.blink::MemberBase.1149" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1150" = type { %"class.blink::MemberBase.1151" }
%"class.blink::MemberBase.1151" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1152" = type { %"class.blink::MemberBase.1153" }
%"class.blink::MemberBase.1153" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1029", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.1026, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.1026 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1027" }>
%"class.base::RefCountedThreadSafe.1027" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.1028 }
%class.scoped_refptr.1028 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.84" }
%"struct.std::__1::atomic.84" = type { %"struct.std::__1::__atomic_base.85" }
%"struct.std::__1::__atomic_base.85" = type { %"struct.std::__1::__atomic_base.86" }
%"struct.std::__1::__atomic_base.86" = type { %"struct.std::__1::__cxx_atomic_impl.87" }
%"struct.std::__1::__cxx_atomic_impl.87" = type { %"struct.std::__1::__cxx_atomic_base_impl.88" }
%"struct.std::__1::__cxx_atomic_base_impl.88" = type { i8 }
%"class.blink::WeakMember.1029" = type { %"class.blink::MemberBase.359" }
%"class.blink::HeapHashSet.1154" = type { %"class.WTF::HashSet.1157" }
%"class.WTF::HashSet.1157" = type { %"class.WTF::HashTable.1158" }
%"class.WTF::HashTable.1158" = type <{ %"class.blink::Member.1160"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1160" = type opaque
%"class.blink::Member.1161" = type { %"class.blink::MemberBase.1162" }
%"class.blink::MemberBase.1162" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1163" = type { %"class.blink::MemberBase.1164" }
%"class.blink::MemberBase.1164" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1165" = type { %"class.blink::MemberBase.1166" }
%"class.blink::MemberBase.1166" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1167" = type { %"class.blink::MemberBase.1168" }
%"class.blink::MemberBase.1168" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1169" = type { %"class.blink::MemberBase.1170" }
%"class.blink::MemberBase.1170" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1171" = type { %"class.std::__1::__compressed_pair.1172" }
%"class.std::__1::__compressed_pair.1172" = type { %"struct.std::__1::__compressed_pair_elem.1173" }
%"struct.std::__1::__compressed_pair_elem.1173" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1177" = type { %"class.std::__1::__compressed_pair.1178" }
%"class.std::__1::__compressed_pair.1178" = type { %"struct.std::__1::__compressed_pair_elem.1179" }
%"struct.std::__1::__compressed_pair_elem.1179" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.1180", %"class.WTF::HashSet.1180", %"class.WTF::HashSet.1180", %"class.WTF::HashSet.1180", %"class.WTF::HashSet.1180", %"class.WTF::HashSet.1180", i32, [4 x i8], %"class.WTF::HashMap.1184", %"class.WTF::HashMap.1184", %"class.WTF::HashMap.1184", %"class.WTF::HashMap.1184", %"class.WTF::HashMap.1184", %"class.WTF::HashMap.1184", %"class.WTF::HashMap.1184", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashSet.1180" = type { %"class.WTF::HashTable.1181" }
%"class.WTF::HashTable.1181" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.1184" = type { %"class.WTF::HashTable.1185" }
%"class.WTF::HashTable.1185" = type <{ %"struct.WTF::KeyValuePair.1188"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1188" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1192" = type { %"class.blink::MemberBase.1193" }
%"class.blink::MemberBase.1193" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1194" = type { %"class.blink::MemberBase.1195" }
%"class.blink::MemberBase.1195" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1196" = type { %"class.blink::MemberBase.1197" }
%"class.blink::MemberBase.1197" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1198" = type { %"class.blink::MemberBase.1199" }
%"class.blink::MemberBase.1199" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1200" = type { %"class.WTF::VectorBuffer.1201" }
%"class.WTF::VectorBuffer.1201" = type { %"class.WTF::VectorBufferBase.1202" }
%"class.WTF::VectorBufferBase.1202" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1205" = type { %"class.WTF::HashMap.1208" }
%"class.WTF::HashMap.1208" = type { %"class.WTF::HashTable.1209" }
%"class.WTF::HashTable.1209" = type <{ %"struct.WTF::KeyValuePair.1211"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1211" = type opaque
%"class.blink::Member.1212" = type { %"class.blink::MemberBase.1213" }
%"class.blink::MemberBase.1213" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1214" = type { %"class.std::__1::__compressed_pair.1215" }
%"class.std::__1::__compressed_pair.1215" = type { %"struct.std::__1::__compressed_pair_elem.1216" }
%"struct.std::__1::__compressed_pair_elem.1216" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1220" = type { %"class.blink::MemberBase.1221" }
%"class.blink::MemberBase.1221" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1222" = type { %"class.blink::MemberBase.1223" }
%"class.blink::MemberBase.1223" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1224" = type { %"class.WTF::HashMap.1227" }
%"class.WTF::HashMap.1227" = type { %"class.WTF::HashTable.1228" }
%"class.WTF::HashTable.1228" = type <{ %"struct.WTF::KeyValuePair.1230"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1230" = type opaque
%"class.blink::HeapObserverSet.1231" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1232" }
%"class.blink::HeapHashSet.1232" = type { %"class.WTF::HashSet.1235" }
%"class.WTF::HashSet.1235" = type { %"class.WTF::HashTable.1236" }
%"class.WTF::HashTable.1236" = type <{ %"class.blink::WeakMember.1238"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1238" = type opaque
%"class.blink::Member.1239" = type { %"class.blink::MemberBase.1240" }
%"class.blink::MemberBase.1240" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1241" = type { %"class.blink::MemberBase.1242" }
%"class.blink::MemberBase.1242" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.358", %"class.blink::HeapHashSet.1248", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1255", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1248" = type { %"class.WTF::HashSet.1251" }
%"class.WTF::HashSet.1251" = type { %"class.WTF::HashTable.1252" }
%"class.WTF::HashTable.1252" = type <{ %"class.blink::Member.1254"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1254" = type opaque
%"class.blink::HeapTaskRunnerTimer.1255" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1256", { i64, i64 } }
%"class.blink::WeakMember.1256" = type { %"class.blink::MemberBase.1242" }
%"class.blink::WeakMember.1243" = type { %"class.blink::MemberBase.5" }
%"class.blink::Member.1244" = type { %"class.blink::MemberBase.1245" }
%"class.blink::MemberBase.1245" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%class.scoped_refptr.705 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.690", %"class.std::__1::unique_ptr.692" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.282", %"class.blink::DataRef.406", %"class.blink::DataRef.410", %"class.blink::DataRef.610", %"class.blink::DataRef.673", %"class.blink::DataRef.677", %"class.blink::DataRef.681", %"class.blink::DataRef.685", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.33 }
%class.scoped_refptr.33 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted.34", %"class.blink::DataRef.36", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted.34" = type { %"class.base::RefCounted.35" }
%"class.base::RefCounted.35" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.36" = type { %class.scoped_refptr.37 }
%class.scoped_refptr.37 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.38", %"class.blink::Font" }
%"class.WTF::RefCounted.38" = type { %"class.base::RefCounted.39" }
%"class.base::RefCounted.39" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.67 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.41, %class.scoped_refptr.49, %class.scoped_refptr.59, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.66 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.40 }
%class.scoped_refptr.40 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1326", [4 x i8] }>
%"class.WTF::RefCounted.1326" = type { %"class.base::RefCounted.1327" }
%"class.base::RefCounted.1327" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.41 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.47", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.42" }
%"class.WTF::Vector.42" = type { %"class.WTF::VectorBuffer.43" }
%"class.WTF::VectorBuffer.43" = type { %"class.WTF::VectorBufferBase.44" }
%"class.WTF::VectorBufferBase.44" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.47" = type { %"class.base::RefCounted.48" }
%"class.base::RefCounted.48" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.49 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.50", %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.blink::FontSettings.50" = type { %"class.WTF::Vector.51" }
%"class.WTF::Vector.51" = type { %"class.WTF::VectorBuffer.52" }
%"class.WTF::VectorBuffer.52" = type { %"class.WTF::VectorBufferBase.53" }
%"class.WTF::VectorBufferBase.53" = type { %"class.blink::FontTagValuePair.54"*, i32, i32 }
%"class.blink::FontTagValuePair.54" = type { i32, float }
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.59 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.60", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.63, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.60" = type { %"class.base::RefCounted.61" }
%"class.base::RefCounted.61" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.63 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.64", [4 x i8] }>
%"class.WTF::RefCounted.64" = type { %"class.base::RefCounted.65" }
%"class.base::RefCounted.65" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.66 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.67 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.68", %"class.WTF::Vector.70", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.68" = type { %"class.base::RefCounted.69" }
%"class.base::RefCounted.69" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.70" = type { %"class.WTF::VectorBuffer.71" }
%"class.WTF::VectorBuffer.71" = type { %"class.WTF::VectorBufferBase.72", [8 x i8] }
%"class.WTF::VectorBufferBase.72" = type { %class.scoped_refptr.73*, i32, i32 }
%class.scoped_refptr.73 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.74", [4 x i8] }>
%"class.WTF::RefCounted.74" = type { %"class.base::RefCounted.75" }
%"class.base::RefCounted.75" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.94, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.74" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.78 }
%union.anon.78 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.89, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.79" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.79" }>
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.84" }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.89 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.92, %class.scoped_refptr.92 }
%class.scoped_refptr.92 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.94 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.95", [4 x i8] }>
%"class.WTF::RefCounted.95" = type { %"class.base::RefCounted.96" }
%"class.base::RefCounted.96" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.280 }
%class.scoped_refptr.280 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::Length" = type <{ %union.anon.281, i8, i8, i8, i8 }>
%union.anon.281 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.282" = type { %class.scoped_refptr.283 }
%class.scoped_refptr.283 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.284", [4 x i8], %"class.blink::DataRef.286", %"class.blink::DataRef.323", %"class.WTF::Vector.327", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.331, %class.scoped_refptr.340, %"class.blink::Persistent.348", %"class.blink::Persistent.350", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.284" = type { %"class.base::RefCounted.285" }
%"class.base::RefCounted.285" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.286" = type { %class.scoped_refptr.287 }
%class.scoped_refptr.287 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.288", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.290, %class.scoped_refptr.297, %"class.blink::Persistent.310", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.288" = type { %"class.base::RefCounted.289" }
%"class.base::RefCounted.289" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.290 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.291", %"class.WTF::Vector.292" }
%"class.base::RefCountedThreadSafe.291" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.297 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.298", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.298" = type { %"class.base::RefCounted.299" }
%"class.base::RefCounted.299" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1398 }
%class.scoped_refptr.1398 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.1399", %"class.WTF::Vector.593", %"class.WTF::Vector.1401", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.1399" = type { %"class.base::RefCounted.1400" }
%"class.base::RefCounted.1400" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.593" = type { %"class.WTF::VectorBuffer.594" }
%"class.WTF::VectorBuffer.594" = type { %"class.WTF::VectorBufferBase.595" }
%"class.WTF::VectorBufferBase.595" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.1401" = type { %"class.WTF::VectorBuffer.1402" }
%"class.WTF::VectorBuffer.1402" = type { %"class.WTF::VectorBufferBase.1403" }
%"class.WTF::VectorBufferBase.1403" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.1404 }
%union.anon.1404 = type { double }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.302" }
%"class.blink::PersistentBase.302" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.309" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.305" }
%"class.WTF::HashMap.305" = type { %"class.WTF::HashTable.306" }
%"class.WTF::HashTable.306" = type <{ %"struct.WTF::KeyValuePair.308"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.308" = type opaque
%"class.blink::Persistent.310" = type { %"class.blink::PersistentBase.311" }
%"class.blink::PersistentBase.311" = type { %"class.blink::HeapVector.312"*, %"class.blink::PersistentNodePtr.309" }
%"class.blink::HeapVector.312" = type { %"class.WTF::Vector.315" }
%"class.WTF::Vector.315" = type { %"class.WTF::VectorBuffer.316" }
%"class.WTF::VectorBuffer.316" = type { %"class.WTF::VectorBufferBase.317" }
%"class.WTF::VectorBufferBase.317" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member.318", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.323" = type { %class.scoped_refptr.324 }
%class.scoped_refptr.324 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.325", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.325" = type { %"class.base::RefCounted.326" }
%"class.base::RefCounted.326" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.327" = type { %"class.WTF::VectorBuffer.328" }
%"class.WTF::VectorBuffer.328" = type { %"class.WTF::VectorBufferBase.29" }
%class.scoped_refptr.331 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.332", %"class.WTF::Vector.334" }
%"class.WTF::RefCounted.332" = type { %"class.base::RefCounted.333" }
%"class.base::RefCounted.333" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.334" = type { %"class.WTF::VectorBuffer.335" }
%"class.WTF::VectorBuffer.335" = type { %"class.WTF::VectorBufferBase.336" }
%"class.WTF::VectorBufferBase.336" = type { %"struct.std::__1::pair.337"*, i32, i32 }
%"struct.std::__1::pair.337" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.340 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.341", [4 x i8], %"class.WTF::Vector.343" }
%"class.WTF::RefCounted.341" = type { %"class.base::RefCounted.342" }
%"class.base::RefCounted.342" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.343" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.345", [28 x i8] }>
%"class.WTF::VectorBufferBase.345" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.348" = type { %"class.blink::PersistentBase.349" }
%"class.blink::PersistentBase.349" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.309" }
%"class.blink::Persistent.350" = type { %"class.blink::PersistentBase.351" }
%"class.blink::PersistentBase.351" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.309" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.354", %"class.blink::Member.404" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.404" = type { %"class.blink::MemberBase.405" }
%"class.blink::MemberBase.405" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.406" = type { %class.scoped_refptr.407 }
%class.scoped_refptr.407 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.408", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.408" = type { %"class.base::RefCounted.409" }
%"class.base::RefCounted.409" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.410" = type { %class.scoped_refptr.411 }
%class.scoped_refptr.411 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.412", [4 x i8], %"class.blink::DataRef.414", %"class.blink::DataRef.480", %"class.blink::TransformOperations", %class.scoped_refptr.340, %"class.blink::Persistent.604", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.412" = type { %"class.base::RefCounted.413" }
%"class.base::RefCounted.413" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.414" = type { %class.scoped_refptr.415 }
%class.scoped_refptr.415 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.416", [4 x i8], %"class.blink::DataRef.418", %"class.blink::Persistent.456", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.416" = type { %"class.base::RefCounted.417" }
%"class.base::RefCounted.417" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.418" = type { %class.scoped_refptr.419 }
%class.scoped_refptr.419 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.420", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.438, %class.scoped_refptr.441, %class.scoped_refptr.444, %class.scoped_refptr.447, %class.scoped_refptr.448, %class.scoped_refptr.449, %"class.blink::Persistent.456", %"class.blink::Persistent.471", %"class.absl::optional.475", %"class.absl::optional.475", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.420" = type { %"class.base::RefCounted.421" }
%"class.base::RefCounted.421" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.422", %"class.std::__1::unique_ptr.427" }
%"class.WTF::Vector.422" = type { %"class.WTF::VectorBuffer.423" }
%"class.WTF::VectorBuffer.423" = type { %"class.WTF::VectorBufferBase.424" }
%"class.WTF::VectorBufferBase.424" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.427" = type { %"class.std::__1::__compressed_pair.428" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.429" }
%"struct.std::__1::__compressed_pair_elem.429" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.430", %"class.WTF::Vector.422", i32, i32 }
%"class.WTF::Vector.430" = type { %"class.WTF::VectorBuffer.431" }
%"class.WTF::VectorBuffer.431" = type { %"class.WTF::VectorBufferBase.432" }
%"class.WTF::VectorBufferBase.432" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.438 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.439", [4 x i8] }>
%"class.WTF::RefCounted.439" = type { %"class.base::RefCounted.440" }
%"class.base::RefCounted.440" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.441 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.442", [4 x i8] }>
%"class.WTF::RefCounted.442" = type { %"class.base::RefCounted.443" }
%"class.base::RefCounted.443" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.444 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.445" }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.447 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.448 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.449 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.450", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.450" = type { %"class.base::RefCounted.451" }
%"class.base::RefCounted.451" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.452" }
%"class.blink::DataRef.452" = type { %class.scoped_refptr.453 }
%class.scoped_refptr.453 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.348", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.454" }
%"class.WTF::RefCounted.454" = type { %"class.base::RefCounted.455" }
%"class.base::RefCounted.455" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.471" = type { %"class.blink::PersistentBase.472" }
%"class.blink::PersistentBase.472" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.309" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.441, %"class.blink::Member.318", i32, [4 x i8] }>
%"class.absl::optional.475" = type { %"class.absl::optional_internal::optional_data.476" }
%"class.absl::optional_internal::optional_data.476" = type { %"class.absl::optional_internal::optional_data_base.477" }
%"class.absl::optional_internal::optional_data_base.477" = type { %"class.absl::optional_internal::optional_data_dtor_base.478" }
%"class.absl::optional_internal::optional_data_dtor_base.478" = type { i8, [3 x i8], %union.anon.479 }
%union.anon.479 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.456" = type { %"class.blink::PersistentBase.457" }
%"class.blink::PersistentBase.457" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.309" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::DataRef.480" = type { %class.scoped_refptr.481 }
%class.scoped_refptr.481 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.482", %"class.blink::DataRef.484", %"class.blink::DataRef.488", %"class.blink::DataRef.497", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.516", %"class.std::__1::unique_ptr.527", %"class.std::__1::unique_ptr.565", %"class.std::__1::unique_ptr.576", %"class.std::__1::unique_ptr.587", %"class.WTF::Vector.593", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.484" = type { %class.scoped_refptr.485 }
%class.scoped_refptr.485 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.486", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.486" = type { %"class.base::RefCounted.487" }
%"class.base::RefCounted.487" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.488" = type { %class.scoped_refptr.489 }
%class.scoped_refptr.489 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.490", [4 x i8], %"class.WTF::Vector.492", i8, [7 x i8] }>
%"class.WTF::RefCounted.490" = type { %"class.base::RefCounted.491" }
%"class.base::RefCounted.491" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.492" = type { %"class.WTF::VectorBuffer.493" }
%"class.WTF::VectorBuffer.493" = type { %"class.WTF::VectorBufferBase.494" }
%"class.WTF::VectorBufferBase.494" = type { i32*, i32, i32 }
%"class.blink::DataRef.497" = type { %class.scoped_refptr.498 }
%class.scoped_refptr.498 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.499", [4 x i8], %"class.WTF::HashMap.501", %"class.WTF::HashMap.501", %"class.WTF::HashMap.501", %"class.WTF::HashMap.501", %"class.WTF::HashMap.501", %"class.WTF::HashMap.501", %"class.WTF::HashMap.506", %"class.WTF::HashMap.506", %"class.WTF::HashMap.506", %"class.WTF::HashMap.506", %"class.WTF::HashMap.511", %"class.WTF::Vector.422", %"class.WTF::Vector.422", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.499" = type { %"class.base::RefCounted.500" }
%"class.base::RefCounted.500" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.501" = type { %"class.WTF::HashTable.502" }
%"class.WTF::HashTable.502" = type <{ %"struct.WTF::KeyValuePair.505"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.505" = type { %"class.WTF::String", %"class.WTF::Vector.1388" }
%"class.WTF::Vector.1388" = type { %"class.WTF::VectorBuffer.1389" }
%"class.WTF::VectorBuffer.1389" = type { %"class.WTF::VectorBufferBase.1390" }
%"class.WTF::VectorBufferBase.1390" = type { i64*, i32, i32 }
%"class.WTF::HashMap.506" = type { %"class.WTF::HashTable.507" }
%"class.WTF::HashTable.507" = type <{ %"struct.WTF::KeyValuePair.510"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.510" = type { i64, %"class.WTF::Vector.593" }
%"class.WTF::HashMap.511" = type { %"class.WTF::HashTable.512" }
%"class.WTF::HashTable.512" = type <{ %"struct.WTF::KeyValuePair.515"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.515" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.516" = type { %"class.std::__1::__compressed_pair.517" }
%"class.std::__1::__compressed_pair.517" = type { %"struct.std::__1::__compressed_pair_elem.518" }
%"struct.std::__1::__compressed_pair_elem.518" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.519" }
%"class.WTF::HashMap.519" = type { %"class.WTF::HashTable.520" }
%"class.WTF::HashTable.520" = type <{ %"struct.WTF::KeyValuePair.523"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.523" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1393", %"class.absl::optional.1393", %"class.absl::optional.1393" }
%"class.absl::optional.1393" = type { %"class.absl::optional_internal::optional_data.1394" }
%"class.absl::optional_internal::optional_data.1394" = type { %"class.absl::optional_internal::optional_data_base.1395" }
%"class.absl::optional_internal::optional_data_base.1395" = type { %"class.absl::optional_internal::optional_data_dtor_base.1396" }
%"class.absl::optional_internal::optional_data_dtor_base.1396" = type { i8, %union.anon.1397 }
%union.anon.1397 = type { i32 }
%"class.std::__1::unique_ptr.527" = type { %"class.std::__1::__compressed_pair.528" }
%"class.std::__1::__compressed_pair.528" = type { %"struct.std::__1::__compressed_pair_elem.529" }
%"struct.std::__1::__compressed_pair_elem.529" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.327", %"class.WTF::Vector.542", %"class.WTF::Vector.530", %"class.WTF::Vector.547", %"class.WTF::Vector.552", %"class.WTF::Vector.557" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.530", %"class.WTF::Vector.530", %"class.WTF::Vector.535" }
%"class.WTF::Vector.535" = type { %"class.WTF::VectorBuffer.536" }
%"class.WTF::VectorBuffer.536" = type { %"class.WTF::VectorBufferBase.537" }
%"class.WTF::VectorBufferBase.537" = type { %class.scoped_refptr.538*, i32, i32 }
%class.scoped_refptr.538 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.539" }
%"class.base::RefCountedThreadSafe.539" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.542" = type { %"class.WTF::VectorBuffer.543" }
%"class.WTF::VectorBuffer.543" = type { %"class.WTF::VectorBufferBase.544" }
%"class.WTF::VectorBufferBase.544" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.530" = type { %"class.WTF::VectorBuffer.531" }
%"class.WTF::VectorBuffer.531" = type { %"class.WTF::VectorBufferBase.532" }
%"class.WTF::VectorBufferBase.532" = type { double*, i32, i32 }
%"class.WTF::Vector.547" = type { %"class.WTF::VectorBuffer.548" }
%"class.WTF::VectorBuffer.548" = type { %"class.WTF::VectorBufferBase.549" }
%"class.WTF::VectorBufferBase.549" = type { i32*, i32, i32 }
%"class.WTF::Vector.552" = type { %"class.WTF::VectorBuffer.553" }
%"class.WTF::VectorBuffer.553" = type { %"class.WTF::VectorBufferBase.554" }
%"class.WTF::VectorBufferBase.554" = type { i32*, i32, i32 }
%"class.WTF::Vector.557" = type { %"class.WTF::VectorBuffer.558" }
%"class.WTF::VectorBuffer.558" = type { %"class.WTF::VectorBufferBase.559" }
%"class.WTF::VectorBufferBase.559" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.565" = type { %"class.std::__1::__compressed_pair.566" }
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.567" }
%"struct.std::__1::__compressed_pair_elem.567" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.568" }
%"class.WTF::Vector.568" = type { %"class.WTF::VectorBuffer.569" }
%"class.WTF::VectorBuffer.569" = type { %"class.WTF::VectorBufferBase.570" }
%"class.WTF::VectorBufferBase.570" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.576" = type { %"class.std::__1::__compressed_pair.577" }
%"class.std::__1::__compressed_pair.577" = type { %"struct.std::__1::__compressed_pair_elem.578" }
%"struct.std::__1::__compressed_pair_elem.578" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.579" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::Persistent.348"*, i32, i32 }
%"class.std::__1::unique_ptr.587" = type { %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.589" }
%"struct.std::__1::__compressed_pair_elem.589" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.348", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.598" }
%"class.WTF::Vector.598" = type { %"class.WTF::VectorBuffer.599" }
%"class.WTF::VectorBuffer.599" = type { %"class.WTF::VectorBufferBase.600" }
%"class.WTF::VectorBufferBase.600" = type { %class.scoped_refptr.601*, i32, i32 }
%class.scoped_refptr.601 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.445", [4 x i8] }>
%"class.blink::Persistent.604" = type { %"class.blink::PersistentBase.605" }
%"class.blink::PersistentBase.605" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.309" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.608" }
%"class.blink::Member.608" = type { %"class.blink::MemberBase.609" }
%"class.blink::MemberBase.609" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.610" = type { %class.scoped_refptr.611 }
%class.scoped_refptr.611 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.612", [4 x i8], %"class.blink::DataRef.614", %"class.blink::DataRef.618", %"class.blink::DataRef.635", %"class.blink::DataRef.653", %"class.blink::DataRef.665", %"class.blink::DataRef.669", %class.scoped_refptr.639, i32, [4 x i8] }>
%"class.WTF::RefCounted.612" = type { %"class.base::RefCounted.613" }
%"class.base::RefCounted.613" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.614" = type { %class.scoped_refptr.615 }
%class.scoped_refptr.615 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.616", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.616" = type { %"class.base::RefCounted.617" }
%"class.base::RefCounted.617" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.618" = type { %class.scoped_refptr.619 }
%class.scoped_refptr.619 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.620", %class.scoped_refptr.622, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.620" = type { %"class.base::RefCounted.621" }
%"class.base::RefCounted.621" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.622 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.623", %"class.std::__1::unique_ptr.629", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.442" }>
%"class.std::__1::unique_ptr.623" = type { %"class.std::__1::__compressed_pair.624" }
%"class.std::__1::__compressed_pair.624" = type { %"struct.std::__1::__compressed_pair_elem.625" }
%"struct.std::__1::__compressed_pair_elem.625" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.629" = type { %"class.std::__1::__compressed_pair.630" }
%"class.std::__1::__compressed_pair.630" = type { %"struct.std::__1::__compressed_pair_elem.631" }
%"struct.std::__1::__compressed_pair_elem.631" = type { %"class.blink::Path"* }
%"class.blink::Path" = type opaque
%"class.blink::DataRef.635" = type { %class.scoped_refptr.636 }
%class.scoped_refptr.636 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.637", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.637" = type { %"class.base::RefCounted.638" }
%"class.base::RefCounted.638" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.639, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.653" = type { %class.scoped_refptr.654 }
%class.scoped_refptr.654 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.655", [4 x i8], %class.scoped_refptr.657, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.655" = type { %"class.base::RefCounted.656" }
%"class.base::RefCounted.656" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.657 = type { %"class.base::RefCountedData.658"* }
%"class.base::RefCountedData.658" = type { %"class.base::RefCountedThreadSafe.659", %"class.WTF::Vector.660" }
%"class.base::RefCountedThreadSafe.659" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.660" = type { %"class.WTF::VectorBuffer.661" }
%"class.WTF::VectorBuffer.661" = type { %"class.WTF::VectorBufferBase.662" }
%"class.WTF::VectorBufferBase.662" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.665" = type { %class.scoped_refptr.666 }
%class.scoped_refptr.666 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.667", %class.scoped_refptr.639, %class.scoped_refptr.639, %class.scoped_refptr.639 }
%"class.WTF::RefCounted.667" = type { %"class.base::RefCounted.668" }
%"class.base::RefCounted.668" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.669" = type { %class.scoped_refptr.670 }
%class.scoped_refptr.670 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.671", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.671" = type { %"class.base::RefCounted.672" }
%"class.base::RefCounted.672" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.639 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.640", %"class.blink::Persistent.642", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.640" = type { %"class.base::RefCounted.641" }
%"class.base::RefCounted.641" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.642" = type { %"class.blink::PersistentBase.643" }
%"class.blink::PersistentBase.643" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.309" }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.375", %"class.blink::HeapHashMap.646" }
%"class.blink::HeapHashMap.646" = type { %"class.WTF::HashMap.649" }
%"class.WTF::HashMap.649" = type { %"class.WTF::HashTable.650" }
%"class.WTF::HashTable.650" = type <{ %"struct.WTF::KeyValuePair.652"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.652" = type opaque
%"class.blink::DataRef.673" = type { %class.scoped_refptr.674 }
%class.scoped_refptr.674 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.675", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.675" = type { %"class.base::RefCounted.676" }
%"class.base::RefCounted.676" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.677" = type { %class.scoped_refptr.678 }
%class.scoped_refptr.678 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.679", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.679" = type { %"class.base::RefCounted.680" }
%"class.base::RefCounted.680" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.681" = type { %class.scoped_refptr.682 }
%class.scoped_refptr.682 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.683", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.683" = type { %"class.base::RefCounted.684" }
%"class.base::RefCounted.684" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.685" = type { %class.scoped_refptr.686 }
%class.scoped_refptr.686 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.687", %class.scoped_refptr.689 }
%"class.WTF::RefCounted.687" = type { %"class.base::RefCounted.688" }
%"class.base::RefCounted.688" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.689 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.960", %"class.blink::StyleVariables", %class.scoped_refptr.689 }
%"class.WTF::RefCounted.960" = type { %"class.base::RefCounted.961" }
%"class.base::RefCounted.961" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.690" = type { %"class.base::RefCounted.691" }
%"class.base::RefCounted.691" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.692" = type { %"class.std::__1::__compressed_pair.693" }
%"class.std::__1::__compressed_pair.693" = type { %"struct.std::__1::__compressed_pair_elem.694" }
%"struct.std::__1::__compressed_pair_elem.694" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.695" }
%"class.std::__1::unique_ptr.695" = type { %"class.std::__1::__compressed_pair.696" }
%"class.std::__1::__compressed_pair.696" = type { %"struct.std::__1::__compressed_pair_elem.697" }
%"struct.std::__1::__compressed_pair_elem.697" = type { %"class.WTF::Vector.698"* }
%"class.WTF::Vector.698" = type opaque
%"class.blink::CSSToLengthConversionData" = type <{ %"class.blink::ComputedStyle"*, %"class.blink::CSSToLengthConversionData::FontSizes", %"class.blink::CSSToLengthConversionData::ViewportSize", float, [4 x i8] }>
%"class.blink::CSSToLengthConversionData::FontSizes" = type <{ float, float, %"class.blink::Font"*, float, [4 x i8] }>
%"class.blink::CSSToLengthConversionData::ViewportSize" = type { %"class.blink::DoubleSize" }
%"class.blink::DoubleSize" = type { double, double }
%class.scoped_refptr.32 = type { %"class.blink::ComputedStyle"* }
%"class.blink::CSSAnimationUpdate" = type { %"class.blink::HeapVector.706", %"class.WTF::Vector.859", %"class.blink::HeapHashSet.864", %"class.WTF::Vector.859", %"class.blink::HeapVector.871", %"class.blink::HeapVector.878", %"class.blink::HeapHashMap.885", %"class.WTF::HashSet.892", %"class.WTF::HashSet.892", %"class.blink::HeapHashMap.896", %"class.blink::HeapHashMap.896", %"class.blink::HeapHashMap.896", %"class.blink::HeapHashMap.896" }
%"class.blink::HeapVector.706" = type { %"class.WTF::Vector.709" }
%"class.WTF::Vector.709" = type { %"class.WTF::VectorBuffer.710" }
%"class.WTF::VectorBuffer.710" = type { %"class.WTF::VectorBufferBase.711" }
%"class.WTF::VectorBufferBase.711" = type { %"class.blink::NewCSSAnimation"*, i32, i32 }
%"class.blink::NewCSSAnimation" = type { %"class.WTF::AtomicString", i64, i64, %"class.blink::Member.712", %"struct.blink::Timing", %"class.blink::Member.789", i32, %"class.blink::Member.801", %"class.WTF::Vector.557" }
%"class.blink::Member.712" = type { %"class.blink::MemberBase.713" }
%"class.blink::MemberBase.713" = type { %"class.blink::InertEffect"* }
%"class.blink::InertEffect" = type { %"class.blink::AnimationEffect", %"class.blink::Member.735", i8, %"class.absl::optional.716", %"class.absl::optional.784" }
%"class.blink::AnimationEffect" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.714", %"struct.blink::Timing", %"class.blink::Member.721", %"struct.blink::Timing::CalculatedTiming", i8, %"class.absl::optional.716", %"class.absl::optional.730", %"class.blink::AnimationTimeDelta" }
%"class.blink::Member.714" = type { %"class.blink::MemberBase.715" }
%"class.blink::MemberBase.715" = type { %"class.blink::AnimationEffectOwner"* }
%"class.blink::AnimationEffectOwner" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.721" = type { %"class.blink::MemberBase.722" }
%"class.blink::MemberBase.722" = type { %"class.blink::AnimationEffect::EventDelegate"* }
%"class.blink::AnimationEffect::EventDelegate" = type { i32 (...)** }
%"struct.blink::Timing::CalculatedTiming" = type { i32, %"class.absl::optional.725", %"class.absl::optional.725", i8, i8, i8, %"class.absl::optional.716", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta" }
%"class.absl::optional.725" = type { %"class.absl::optional_internal::optional_data.726" }
%"class.absl::optional_internal::optional_data.726" = type { %"class.absl::optional_internal::optional_data_base.727" }
%"class.absl::optional_internal::optional_data_base.727" = type { %"class.absl::optional_internal::optional_data_dtor_base.728" }
%"class.absl::optional_internal::optional_data_dtor_base.728" = type { i8, %union.anon.729 }
%union.anon.729 = type { double }
%"class.absl::optional.730" = type { %"class.absl::optional_internal::optional_data.731" }
%"class.absl::optional_internal::optional_data.731" = type { %"class.absl::optional_internal::optional_data_base.732" }
%"class.absl::optional_internal::optional_data_base.732" = type { %"class.absl::optional_internal::optional_data_dtor_base.733" }
%"class.absl::optional_internal::optional_data_dtor_base.733" = type { i8, %union.anon.734 }
%union.anon.734 = type { i32 }
%"class.blink::AnimationTimeDelta" = type { double }
%"class.blink::Member.735" = type { %"class.blink::MemberBase.736" }
%"class.blink::MemberBase.736" = type { %"class.blink::KeyframeEffectModelBase"* }
%"class.blink::KeyframeEffectModelBase" = type <{ %"class.blink::EffectModel", %"class.blink::HeapVector.739", %"class.blink::Member.747", %"class.blink::Member.772", i32, [4 x i8], double, %"class.blink::AnimationTimeDelta", i32, [4 x i8], %class.scoped_refptr.538, i8, i8, i8, [5 x i8] }>
%"class.blink::EffectModel" = type { i32 (...)** }
%"class.blink::HeapVector.739" = type { %"class.WTF::Vector.742" }
%"class.WTF::Vector.742" = type { %"class.WTF::VectorBuffer.743" }
%"class.WTF::VectorBuffer.743" = type { %"class.WTF::VectorBufferBase.744" }
%"class.WTF::VectorBufferBase.744" = type { %"class.blink::Member.745"*, i32, i32 }
%"class.blink::Member.745" = type { %"class.blink::MemberBase.1365" }
%"class.blink::MemberBase.1365" = type { %"class.blink::Keyframe"* }
%"class.blink::Keyframe" = type { i32 (...)**, %"class.absl::optional.725", %"class.absl::optional.1368", %class.scoped_refptr.538 }
%"class.absl::optional.1368" = type { %"class.absl::optional_internal::optional_data.1369" }
%"class.absl::optional_internal::optional_data.1369" = type { %"class.absl::optional_internal::optional_data_base.1370" }
%"class.absl::optional_internal::optional_data_base.1370" = type { %"class.absl::optional_internal::optional_data_dtor_base.1371" }
%"class.absl::optional_internal::optional_data_dtor_base.1371" = type { i8, %union.anon.1372 }
%union.anon.1372 = type { i32 }
%"class.blink::Member.747" = type { %"class.blink::MemberBase.748" }
%"class.blink::MemberBase.748" = type { %"class.blink::HeapHashMap.749"* }
%"class.blink::HeapHashMap.749" = type { %"class.WTF::HashMap.752" }
%"class.WTF::HashMap.752" = type { %"class.WTF::HashTable.753" }
%"class.WTF::HashTable.753" = type <{ %"struct.WTF::KeyValuePair.755"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.755" = type { %"class.blink::PropertyHandle", %"class.blink::Member.757" }
%"class.blink::PropertyHandle" = type { i32, %union.anon.756, %"class.WTF::AtomicString" }
%union.anon.756 = type { %"class.blink::CSSProperty"* }
%"class.blink::CSSProperty" = type <{ %"class.blink::CSSUnresolvedProperty", i32, i32, i8, [7 x i8] }>
%"class.blink::CSSUnresolvedProperty" = type { i32 (...)** }
%"class.blink::Member.757" = type { %"class.blink::MemberBase.758" }
%"class.blink::MemberBase.758" = type { %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"* }
%"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup" = type { %"class.blink::HeapVector.761" }
%"class.blink::HeapVector.761" = type { %"class.WTF::Vector.764" }
%"class.WTF::Vector.764" = type { %"class.WTF::VectorBuffer.765" }
%"class.WTF::VectorBuffer.765" = type { %"class.WTF::VectorBufferBase.766" }
%"class.WTF::VectorBufferBase.766" = type { %"class.blink::Member.767"*, i32, i32 }
%"class.blink::Member.767" = type { %"class.blink::MemberBase.768" }
%"class.blink::MemberBase.768" = type { %"class.blink::Keyframe::PropertySpecificKeyframe"* }
%"class.blink::Keyframe::PropertySpecificKeyframe" = type <{ i32 (...)**, double, %class.scoped_refptr.538, i32, [4 x i8] }>
%"class.blink::Member.772" = type { %"class.blink::MemberBase.773" }
%"class.blink::MemberBase.773" = type { %"class.blink::InterpolationEffect"* }
%"class.blink::InterpolationEffect" = type { i8, %"class.blink::HeapVector.776" }
%"class.blink::HeapVector.776" = type { %"class.WTF::Vector.779" }
%"class.WTF::Vector.779" = type { %"class.WTF::VectorBuffer.780" }
%"class.WTF::VectorBuffer.780" = type { %"class.WTF::VectorBufferBase.781" }
%"class.WTF::VectorBufferBase.781" = type { %"class.blink::Member.782"*, i32, i32 }
%"class.blink::Member.782" = type { %"class.blink::MemberBase.1358" }
%"class.blink::MemberBase.1358" = type { %"class.blink::InterpolationEffect::InterpolationRecord"* }
%"class.blink::InterpolationEffect::InterpolationRecord" = type { %"class.blink::Member.1361", %class.scoped_refptr.538, double, double, double, double }
%"class.blink::Member.1361" = type { %"class.blink::MemberBase.1362" }
%"class.blink::MemberBase.1362" = type { %"class.blink::Interpolation"* }
%"class.blink::Interpolation" = type { i32 (...)** }
%"class.absl::optional.716" = type { %"class.absl::optional_internal::optional_data.717" }
%"class.absl::optional_internal::optional_data.717" = type { %"class.absl::optional_internal::optional_data_base.718" }
%"class.absl::optional_internal::optional_data_base.718" = type { %"class.absl::optional_internal::optional_data_dtor_base.719" }
%"class.absl::optional_internal::optional_data_dtor_base.719" = type { i8, %union.anon.720 }
%union.anon.720 = type { %"class.blink::AnimationTimeDelta" }
%"class.absl::optional.784" = type { %"class.absl::optional_internal::optional_data.785" }
%"class.absl::optional_internal::optional_data.785" = type { %"class.absl::optional_internal::optional_data_base.786" }
%"class.absl::optional_internal::optional_data_base.786" = type { %"class.absl::optional_internal::optional_data_dtor_base.787" }
%"class.absl::optional_internal::optional_data_dtor_base.787" = type { i8, %union.anon.788 }
%union.anon.788 = type { i32 }
%"struct.blink::Timing" = type <{ %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", i32, [4 x i8], double, double, %"class.absl::optional.716", i32, [4 x i8], %class.scoped_refptr.538, i16, [6 x i8] }>
%"class.blink::Member.789" = type { %"class.blink::MemberBase.790" }
%"class.blink::MemberBase.790" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.793", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::HeapVector.793" = type { %"class.WTF::Vector.796" }
%"class.WTF::Vector.796" = type { %"class.WTF::VectorBuffer.797" }
%"class.WTF::VectorBuffer.797" = type { %"class.WTF::VectorBufferBase.798" }
%"class.WTF::VectorBufferBase.798" = type { %"class.blink::Member.799"*, i32, i32 }
%"class.blink::Member.799" = type opaque
%"class.blink::Member.801" = type { %"class.blink::MemberBase.802" }
%"class.blink::MemberBase.802" = type { %"class.blink::AnimationTimeline"* }
%"class.blink::AnimationTimeline" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.358", i32, [4 x i8], %"class.blink::HeapHashSet", %"class.blink::HeapHashSet.809", %"class.std::__1::unique_ptr.815", %"class.absl::optional.848" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.805" }
%"class.WTF::HashTable.805" = type <{ %"class.blink::Member.807"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.807" = type { %"class.blink::MemberBase.808" }
%"class.blink::MemberBase.808" = type { %"class.blink::Animation"* }
%"class.blink::Animation" = type <{ %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleObserver.base", [4 x i8], %"class.blink::CompositorAnimationDelegate", %"class.blink::CompositorAnimationClient", %"class.blink::AnimationEffectOwner", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.WTF::String", i32, [4 x i8], double, %"class.absl::optional.725", %"class.absl::optional.716", %"class.absl::optional.716", %"class.absl::optional.784", %"class.absl::optional.716", i8, [3 x i8], i32, %"class.blink::Member.937", %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::Member.358", %"class.blink::Member.801", i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], %"class.blink::Member.941", %"class.blink::Member.941", %"class.blink::Member.941", %"class.std::__1::unique_ptr.943", i8, [3 x i8], i32, %"class.blink::Member.949", i8, [7 x i8], %"class.base::TimeTicks", i8, i8, i8, [5 x i8] }>
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.921" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.909" }
%"class.blink::HeapVector.909" = type { %"class.WTF::Vector.912" }
%"class.WTF::Vector.912" = type { %"class.WTF::VectorBuffer.913" }
%"class.WTF::VectorBuffer.913" = type { %"class.WTF::VectorBufferBase.914", [32 x i8] }
%"class.WTF::VectorBufferBase.914" = type { %"struct.std::__1::pair.915"*, i32, i32 }
%"struct.std::__1::pair.915" = type { %"class.WTF::AtomicString", %"class.blink::Member.916" }
%"class.blink::Member.916" = type { %"class.blink::MemberBase.917" }
%"class.blink::MemberBase.917" = type { %"class.blink::HeapVector.918"* }
%"class.blink::HeapVector.918" = type opaque
%"class.std::__1::unique_ptr.921" = type { %"class.std::__1::__compressed_pair.922" }
%"class.std::__1::__compressed_pair.922" = type { %"struct.std::__1::__compressed_pair_elem.923" }
%"struct.std::__1::__compressed_pair_elem.923" = type { %"class.WTF::Vector.924"* }
%"class.WTF::Vector.924" = type opaque
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.928" }
%"class.blink::WeakMember.928" = type { %"class.blink::MemberBase.929" }
%"class.blink::MemberBase.929" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::CompositorAnimationDelegate" = type { i32 (...)** }
%"class.blink::CompositorAnimationClient" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::ScriptPromiseProperty"* }
%"class.blink::ScriptPromiseProperty" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::AnimationEffect"* }
%"class.blink::Member.941" = type { %"class.blink::MemberBase.942" }
%"class.blink::MemberBase.942" = type { %"class.blink::Event"* }
%"class.blink::Event" = type opaque
%"class.std::__1::unique_ptr.943" = type { %"class.std::__1::__compressed_pair.944" }
%"class.std::__1::__compressed_pair.944" = type { %"struct.std::__1::__compressed_pair_elem.945" }
%"struct.std::__1::__compressed_pair_elem.945" = type { %"class.blink::Animation::CompositorState"* }
%"class.blink::Animation::CompositorState" = type { %"class.absl::optional.725", %"class.absl::optional.725", double, i8, i32 }
%"class.blink::Member.949" = type { %"class.blink::MemberBase.950" }
%"class.blink::MemberBase.950" = type { %"class.blink::Animation::CompositorAnimationHolder"* }
%"class.blink::Animation::CompositorAnimationHolder" = type { %"class.blink::ThreadState::PrefinalizerRegistration.953", %"class.std::__1::unique_ptr.954", %"class.blink::Member.807" }
%"class.blink::ThreadState::PrefinalizerRegistration.953" = type { i8 }
%"class.std::__1::unique_ptr.954" = type { %"class.std::__1::__compressed_pair.955" }
%"class.std::__1::__compressed_pair.955" = type { %"struct.std::__1::__compressed_pair_elem.956" }
%"struct.std::__1::__compressed_pair_elem.956" = type { %"class.blink::CompositorAnimation"* }
%"class.blink::CompositorAnimation" = type opaque
%"class.blink::HeapHashSet.809" = type { %"class.WTF::HashSet.812" }
%"class.WTF::HashSet.812" = type { %"class.WTF::HashTable.813" }
%"class.WTF::HashTable.813" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.std::__1::unique_ptr.815" = type { %"class.std::__1::__compressed_pair.816" }
%"class.std::__1::__compressed_pair.816" = type { %"struct.std::__1::__compressed_pair_elem.817" }
%"struct.std::__1::__compressed_pair_elem.817" = type { %"class.blink::CompositorAnimationTimeline"* }
%"class.blink::CompositorAnimationTimeline" = type { %class.scoped_refptr.818 }
%class.scoped_refptr.818 = type { %"class.cc::AnimationTimeline"* }
%"class.cc::AnimationTimeline" = type <{ i32 (...)**, %"class.base::RefCounted.819", [4 x i8], %"class.std::__1::unordered_map", i32, [4 x i8], %"class.cc::AnimationHost"*, i8, i8, [6 x i8] }>
%"class.base::RefCounted.819" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.820" }
%"class.std::__1::__hash_table.820" = type <{ %"class.std::__1::unique_ptr.821", %"class.std::__1::__compressed_pair.831", %"class.std::__1::__compressed_pair.836", %"class.std::__1::__compressed_pair.840", [4 x i8] }>
%"class.std::__1::unique_ptr.821" = type { %"class.std::__1::__compressed_pair.822" }
%"class.std::__1::__compressed_pair.822" = type { %"struct.std::__1::__compressed_pair_elem.823", %"struct.std::__1::__compressed_pair_elem.825" }
%"struct.std::__1::__compressed_pair_elem.823" = type { %"struct.std::__1::__hash_node_base.824"** }
%"struct.std::__1::__hash_node_base.824" = type { %"struct.std::__1::__hash_node_base.824"* }
%"struct.std::__1::__compressed_pair_elem.825" = type { %"class.std::__1::__bucket_list_deallocator.826" }
%"class.std::__1::__bucket_list_deallocator.826" = type { %"class.std::__1::__compressed_pair.827" }
%"class.std::__1::__compressed_pair.827" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"struct.std::__1::__hash_node_base.824" }
%"class.std::__1::__compressed_pair.836" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"class.std::__1::__compressed_pair.840" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"class.cc::AnimationHost" = type opaque
%"class.absl::optional.848" = type { %"class.absl::optional_internal::optional_data.849" }
%"class.absl::optional_internal::optional_data.849" = type { %"class.absl::optional_internal::optional_data_base.850" }
%"class.absl::optional_internal::optional_data_base.850" = type { %"class.absl::optional_internal::optional_data_dtor_base.851" }
%"class.absl::optional_internal::optional_data_dtor_base.851" = type { i8, %union.anon.852 }
%union.anon.852 = type { %"struct.blink::AnimationTimeline::PhaseAndTime" }
%"struct.blink::AnimationTimeline::PhaseAndTime" = type { i32, %"class.absl::optional.853" }
%"class.absl::optional.853" = type { %"class.absl::optional_internal::optional_data.854" }
%"class.absl::optional_internal::optional_data.854" = type { %"class.absl::optional_internal::optional_data_base.855" }
%"class.absl::optional_internal::optional_data_base.855" = type { %"class.absl::optional_internal::optional_data_dtor_base.856" }
%"class.absl::optional_internal::optional_data_dtor_base.856" = type { i8, %union.anon.857 }
%union.anon.857 = type { %"class.base::TimeDelta" }
%"class.blink::HeapHashSet.864" = type { %"class.WTF::HashSet.867" }
%"class.WTF::HashSet.867" = type { %"class.WTF::HashTable.868" }
%"class.WTF::HashTable.868" = type <{ %"class.blink::Member.870"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.870" = type { %"class.blink::MemberBase.1373" }
%"class.blink::MemberBase.1373" = type { %"class.blink::Animation"* }
%"class.WTF::Vector.859" = type { %"class.WTF::VectorBuffer.860" }
%"class.WTF::VectorBuffer.860" = type { %"class.WTF::VectorBufferBase.861" }
%"class.WTF::VectorBufferBase.861" = type { i32*, i32, i32 }
%"class.blink::HeapVector.871" = type { %"class.WTF::Vector.874" }
%"class.WTF::Vector.874" = type { %"class.WTF::VectorBuffer.875" }
%"class.WTF::VectorBuffer.875" = type { %"class.WTF::VectorBufferBase.876" }
%"class.WTF::VectorBufferBase.876" = type { %"class.blink::UpdatedCSSAnimation"*, i32, i32 }
%"class.blink::UpdatedCSSAnimation" = type { i32, %"class.blink::Member.807", %"class.blink::Member.712", %"struct.blink::Timing", %"class.blink::Member.789", i32, %"class.blink::Member.801", %"class.WTF::Vector.557" }
%"class.blink::HeapVector.878" = type { %"class.WTF::Vector.881" }
%"class.WTF::Vector.881" = type { %"class.WTF::VectorBuffer.882" }
%"class.WTF::VectorBuffer.882" = type { %"class.WTF::VectorBufferBase.883" }
%"class.WTF::VectorBufferBase.883" = type { %"class.blink::Member.807"*, i32, i32 }
%"class.blink::HeapHashMap.885" = type { %"class.WTF::HashMap.888" }
%"class.WTF::HashMap.888" = type { %"class.WTF::HashTable.889" }
%"class.WTF::HashTable.889" = type <{ %"struct.WTF::KeyValuePair.891"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.891" = type { %"class.blink::PropertyHandle", %"class.blink::Member.1384" }
%"class.blink::Member.1384" = type { %"class.blink::MemberBase.1385" }
%"class.blink::MemberBase.1385" = type { %"struct.blink::CSSAnimationUpdate::NewTransition"* }
%"struct.blink::CSSAnimationUpdate::NewTransition" = type { i32 (...)**, %"class.blink::PropertyHandle", %class.scoped_refptr.32, %class.scoped_refptr.32, %class.scoped_refptr.32, double, %"class.blink::Member.712" }
%"class.WTF::HashSet.892" = type { %"class.WTF::HashTable.893" }
%"class.WTF::HashTable.893" = type <{ %"class.blink::PropertyHandle"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.896" = type { %"class.WTF::HashMap.899" }
%"class.WTF::HashMap.899" = type { %"class.WTF::HashTable.900" }
%"class.WTF::HashTable.900" = type <{ %"struct.WTF::KeyValuePair.902"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.902" = type { %"class.blink::PropertyHandle", %"class.blink::Member.1374" }
%"class.blink::Member.1374" = type { %"class.blink::MemberBase.1375" }
%"class.blink::MemberBase.1375" = type { %"class.blink::HeapVector.1376"* }
%"class.blink::HeapVector.1376" = type { %"class.WTF::Vector.1379" }
%"class.WTF::Vector.1379" = type { %"class.WTF::VectorBuffer.1380" }
%"class.WTF::VectorBuffer.1380" = type { %"class.WTF::VectorBufferBase.1381", [8 x i8] }
%"class.WTF::VectorBufferBase.1381" = type { %"class.blink::Member.1361"*, i32, i32 }
%"class.blink::FontBuilder" = type <{ %"class.blink::Document"*, %"class.blink::TreeScope"*, %"class.blink::FontDescription", i32, [4 x i8] }>
%"class.blink::PseudoElement" = type opaque
%"class.blink::ElementStyleResources" = type { %"class.blink::Element"*, %"class.WTF::HashSet.903", %"class.WTF::HashSet.903", float, %"class.blink::PseudoElement"* }
%"class.WTF::HashSet.903" = type { %"class.WTF::HashTable.904" }
%"class.WTF::HashTable.904" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1328", %"class.blink::Member.1330" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1328" = type { %"class.blink::MemberBase.1329" }
%"class.blink::MemberBase.1329" = type { %"class.blink::SVGResource"* }
%"class.blink::Member.1330" = type { %"class.blink::MemberBase.1331" }
%"class.blink::MemberBase.1331" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1334", %"class.blink::Member.1336" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::Member.1334" = type { %"class.blink::MemberBase.1335" }
%"class.blink::MemberBase.1335" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1340", %"class.blink::Member.1330", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.1347] }
%"class.blink::HeapVector.1340" = type { %"class.WTF::Vector.1343" }
%"class.WTF::Vector.1343" = type { %"class.WTF::VectorBuffer.1344" }
%"class.WTF::VectorBuffer.1344" = type { %"class.WTF::VectorBufferBase.1345" }
%"class.WTF::VectorBufferBase.1345" = type { %"class.blink::Member.1336"*, i32, i32 }
%class.sk_sp.1347 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.1348, i32, %"class.absl::optional.1349", i8, i32 }
%class.sk_sp.1348 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.1349" = type { %"class.absl::optional_internal::optional_data.1350" }
%"class.absl::optional_internal::optional_data.1350" = type { %"class.absl::optional_internal::optional_data_base.1351" }
%"class.absl::optional_internal::optional_data_base.1351" = type { %"class.absl::optional_internal::optional_data_dtor_base.1352" }
%"class.absl::optional_internal::optional_data_dtor_base.1352" = type { i8, %union.anon.1353 }
%union.anon.1353 = type { %struct.SkRect }
%"class.blink::BasicColorMatrixFilterOperation" = type { %"class.blink::FilterOperation.base", double }
%"class.blink::BasicComponentTransferFilterOperation" = type { %"class.blink::FilterOperation.base", double }
%"class.blink::BlurFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.blink::Length", [4 x i8] }
%"class.blink::DropShadowFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.blink::ShadowData" }
%"class.blink::cssvalue::CSSURIValue" = type { %"class.blink::CSSValue", %"class.WTF::AtomicString", i8, %"class.blink::Member.1328", %"class.WTF::AtomicString" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapVectorBacking" = type { i8 }

$_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15FilterOperationEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_15FilterOperationEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15FilterOperationEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15FilterOperationEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_15FilterOperationEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPNS1_24ReferenceFilterOperationEEEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_15FilterOperationEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_15FilterOperationEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_15FilterOperationEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_15FilterOperationEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_15FilterOperationEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_15FilterOperationEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_15FilterOperationEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink31BasicColorMatrixFilterOperationD0Ev = comdat any

$_ZNK5blink15FilterOperation5TraceEPNS_7VisitorE = comdat any

$_ZNK5blink31BasicColorMatrixFilterOperationeqERKNS_15FilterOperationE = comdat any

$_ZNK5blink15FilterOperation10IsSameTypeERKS0_ = comdat any

$_ZNK5blink15FilterOperation14AffectsOpacityEv = comdat any

$_ZNK5blink15FilterOperation11MovesPixelsEv = comdat any

$_ZNK5blink15FilterOperation7MapRectERKNS_9FloatRectE = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_15FilterOperationEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPNS1_31BasicColorMatrixFilterOperationEEEvOT_ = comdat any

$_ZN5blink15FilterOperationD2Ev = comdat any

$_ZN5blink37BasicComponentTransferFilterOperationD0Ev = comdat any

$_ZNK5blink37BasicComponentTransferFilterOperationeqERKNS_15FilterOperationE = comdat any

$_ZNK5blink37BasicComponentTransferFilterOperation14AffectsOpacityEv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_15FilterOperationEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPNS1_37BasicComponentTransferFilterOperationEEEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_15FilterOperationEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPNS1_19BlurFilterOperationEEEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_15FilterOperationEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPNS1_25DropShadowFilterOperationEEEvOT_ = comdat any

$_ZZN5blink11GCInfoTraitINS_15FilterOperationEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15FilterOperationEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_15FilterOperationEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_15FilterOperationEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink31BasicColorMatrixFilterOperationE = comdat any

$_ZTVN5blink37BasicComponentTransferFilterOperationE = comdat any

@.str = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.1 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15FilterOperationEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::FilterOperation]\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.3 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15FilterOperationEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15FilterOperationEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15FilterOperationEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15FilterOperationEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15FilterOperationEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.4 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.5 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.6 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.7 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.8 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.9 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_15FilterOperationEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_15FilterOperationEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_15FilterOperationEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_15FilterOperationEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_15FilterOperationEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [171 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::FilterOperation>, WTF::VectorTraits<blink::Member<blink::FilterOperation> > >]\00", align 1
@_ZTVN5blink31BasicColorMatrixFilterOperationE = linkonce_odr hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::FilterOperation"*)* @_ZN5blink15FilterOperationD2Ev to i8*), i8* bitcast (void (%"class.blink::BasicColorMatrixFilterOperation"*)* @_ZN5blink31BasicColorMatrixFilterOperationD0Ev to i8*), i8* bitcast (void (%"class.blink::FilterOperation"*, %"class.blink::Visitor"*)* @_ZNK5blink15FilterOperation5TraceEPNS_7VisitorE to i8*), i8* bitcast (i1 (%"class.blink::BasicColorMatrixFilterOperation"*, %"class.blink::FilterOperation"*)* @_ZNK5blink31BasicColorMatrixFilterOperationeqERKNS_15FilterOperationE to i8*), i8* bitcast (i1 (%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"*)* @_ZNK5blink15FilterOperation10IsSameTypeERKS0_ to i8*), i8* bitcast (i1 (%"class.blink::FilterOperation"*)* @_ZNK5blink15FilterOperation14AffectsOpacityEv to i8*), i8* bitcast (i1 (%"class.blink::FilterOperation"*)* @_ZNK5blink15FilterOperation11MovesPixelsEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::FilterOperation"*, %"class.blink::FloatRect"*)* @_ZNK5blink15FilterOperation7MapRectERKNS_9FloatRectE to i8*)] }, comdat, align 8
@_ZTVN5blink37BasicComponentTransferFilterOperationE = linkonce_odr hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::FilterOperation"*)* @_ZN5blink15FilterOperationD2Ev to i8*), i8* bitcast (void (%"class.blink::BasicComponentTransferFilterOperation"*)* @_ZN5blink37BasicComponentTransferFilterOperationD0Ev to i8*), i8* bitcast (void (%"class.blink::FilterOperation"*, %"class.blink::Visitor"*)* @_ZNK5blink15FilterOperation5TraceEPNS_7VisitorE to i8*), i8* bitcast (i1 (%"class.blink::BasicComponentTransferFilterOperation"*, %"class.blink::FilterOperation"*)* @_ZNK5blink37BasicComponentTransferFilterOperationeqERKNS_15FilterOperationE to i8*), i8* bitcast (i1 (%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"*)* @_ZNK5blink15FilterOperation10IsSameTypeERKS0_ to i8*), i8* bitcast (i1 (%"class.blink::BasicComponentTransferFilterOperation"*)* @_ZNK5blink37BasicComponentTransferFilterOperation14AffectsOpacityEv to i8*), i8* bitcast (i1 (%"class.blink::FilterOperation"*)* @_ZNK5blink15FilterOperation11MovesPixelsEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::FilterOperation"*, %"class.blink::FloatRect"*)* @_ZNK5blink15FilterOperation7MapRectERKNS_9FloatRectE to i8*)] }, comdat, align 8
@_ZTVN5blink19BlurFilterOperationE = external unnamed_addr constant { [10 x i8*] }, align 8
@_ZTVN5blink25DropShadowFilterOperationE = external unnamed_addr constant { [10 x i8*] }, align 8
@switch.table._ZN5blink23FilterOperationResolver22CreateFilterOperationsERNS_18StyleResolverStateERKNS_8CSSValueENS_13CSSPropertyIDE = private unnamed_addr constant [10 x i32] [i32 6, i32 1, i32 2, i32 3, i32 4, i32 7, i32 8, i32 9, i32 10, i32 11], align 4
@switch.table._ZN5blink23FilterOperationResolver22CreateFilterOperationsERNS_18StyleResolverStateERKNS_8CSSValueENS_13CSSPropertyIDE.10 = private unnamed_addr constant [10 x i32] [i32 1019, i32 1015, i32 1016, i32 1017, i32 1018, i32 1020, i32 1021, i32 1022, i32 1023, i32 1024], align 4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN5blink23FilterOperationResolver22FilterOperationForTypeENS_10CSSValueIDE(i32) local_unnamed_addr #0 align 2 {
  %2 = add i32 %0, -774
  %3 = icmp ult i32 %2, 10
  br i1 %3, label %4, label %8

4:                                                ; preds = %1
  %5 = sext i32 %2 to i64
  %6 = getelementptr inbounds [10 x i32], [10 x i32]* @switch.table._ZN5blink23FilterOperationResolver22CreateFilterOperationsERNS_18StyleResolverStateERKNS_8CSSValueENS_13CSSPropertyIDE, i64 0, i64 %5
  %7 = load i32, i32* %6, align 4
  ret i32 %7

8:                                                ; preds = %1
  ret i32 16
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZN5blink23FilterOperationResolver33ResolveNumericArgumentForFunctionERKNS_16CSSFunctionValueE(%"class.blink::CSSFunctionValue"* dereferenceable(64)) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSFunctionValue", %"class.blink::CSSFunctionValue"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %27 [
    i32 775, label %4
    i32 776, label %4
    i32 777, label %4
    i32 774, label %4
    i32 780, label %4
    i32 781, label %4
    i32 779, label %4
    i32 778, label %17
  ]

4:                                                ; preds = %1, %1, %1, %1, %1, %1, %1
  %5 = getelementptr inbounds %"class.blink::CSSFunctionValue", %"class.blink::CSSFunctionValue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %27

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::CSSFunctionValue", %"class.blink::CSSFunctionValue"* %0, i64 0, i32 0, i32 1, i32 0
  %10 = tail call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %9, i32 0) #7
  %11 = bitcast %"class.blink::Member"* %10 to %"class.blink::CSSPrimitiveValue"**
  %12 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %11, align 8
  %13 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* %12) #7
  %14 = tail call zeroext i1 @_ZNK5blink17CSSPrimitiveValue12IsPercentageEv(%"class.blink::CSSPrimitiveValue"* %12) #7
  %15 = fdiv double %13, 1.000000e+02
  %16 = select i1 %14, double %15, double %13
  br label %27

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.blink::CSSFunctionValue", %"class.blink::CSSFunctionValue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %27

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.blink::CSSFunctionValue", %"class.blink::CSSFunctionValue"* %0, i64 0, i32 0, i32 1, i32 0
  %23 = tail call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %22, i32 0) #7
  %24 = bitcast %"class.blink::Member"* %23 to %"class.blink::CSSPrimitiveValue"**
  %25 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %24, align 8
  %26 = tail call double @_ZNK5blink17CSSPrimitiveValue14ComputeDegreesEv(%"class.blink::CSSPrimitiveValue"* %25) #7
  br label %27

27:                                               ; preds = %1, %17, %21, %4, %8
  %28 = phi double [ 1.000000e+00, %4 ], [ %16, %8 ], [ %26, %21 ], [ 0.000000e+00, %17 ], [ 0.000000e+00, %1 ]
  ret double %28
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink17CSSPrimitiveValue12IsPercentageEv(%"class.blink::CSSPrimitiveValue"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare double @_ZNK5blink17CSSPrimitiveValue14ComputeDegreesEv(%"class.blink::CSSPrimitiveValue"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23FilterOperationResolver22CreateFilterOperationsERNS_18StyleResolverStateERKNS_8CSSValueENS_13CSSPropertyIDE(%"class.blink::FilterOperations"* noalias sret, %"class.blink::StyleResolverState"* dereferenceable(600), %"class.blink::CSSValue"* readonly dereferenceable(3), i32) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.blink::ReferenceFilterOperation"*, align 8
  %6 = alloca %"class.blink::BasicColorMatrixFilterOperation"*, align 8
  %7 = alloca %"class.blink::BasicComponentTransferFilterOperation"*, align 8
  %8 = alloca i64, align 8
  %9 = bitcast i64* %8 to %"class.blink::Length"*
  %10 = alloca i64, align 8
  %11 = bitcast i64* %10 to %"class.blink::Length"*
  %12 = alloca %"class.blink::BlurFilterOperation"*, align 8
  %13 = alloca %"class.blink::ShadowData", align 4
  %14 = alloca %"class.blink::DropShadowFilterOperation"*, align 8
  %15 = getelementptr inbounds %"class.blink::FilterOperations", %"class.blink::FilterOperations"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.blink::FilterOperations", %"class.blink::FilterOperations"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.blink::FilterOperations", %"class.blink::FilterOperations"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %18 = bitcast %"class.blink::FilterOperations"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 -86, i64 16, i1 false)
  tail call void @_ZN5blink16FilterOperationsC1Ev(%"class.blink::FilterOperations"* %0) #7
  %19 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 0, i32 2
  %20 = load i8, i8* %19, align 1
  %21 = icmp ne i8 %20, 2
  %22 = icmp eq %"class.blink::CSSValue"* %2, null
  %23 = or i1 %22, %21
  br i1 %23, label %24, label %351

24:                                               ; preds = %4
  %25 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %1, i64 0, i32 3
  %26 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 2, i32 2
  %27 = bitcast i8* %26 to %"class.blink::Member"**
  %28 = load %"class.blink::Member"*, %"class.blink::Member"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 6, i32 2
  %30 = bitcast i8* %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %28, i64 %32
  %34 = icmp eq i32 %31, 0
  br i1 %34, label %351, label %35

35:                                               ; preds = %24
  %36 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %1, i64 0, i32 1
  %37 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %1, i64 0, i32 11
  %38 = bitcast %"class.blink::ReferenceFilterOperation"** %5 to i8*
  %39 = bitcast %"class.blink::ReferenceFilterOperation"** %5 to i8**
  %40 = getelementptr inbounds %"class.blink::FilterOperations", %"class.blink::FilterOperations"* %0, i64 0, i32 0, i32 0
  %41 = bitcast %"class.blink::ShadowData"* %13 to i8*
  %42 = getelementptr inbounds %"class.blink::ShadowData", %"class.blink::ShadowData"* %13, i64 0, i32 3, i32 0, i32 0
  %43 = getelementptr inbounds %"class.blink::ShadowData", %"class.blink::ShadowData"* %13, i64 0, i32 3, i32 1
  %44 = getelementptr inbounds %"class.blink::ShadowData", %"class.blink::ShadowData"* %13, i64 0, i32 4
  %45 = getelementptr inbounds %"class.blink::ShadowData", %"class.blink::ShadowData"* %13, i64 0, i32 3
  %46 = bitcast %"class.blink::StyleColor"* %45 to i64*
  %47 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %1, i64 0, i32 2, i32 0
  %48 = bitcast %"class.blink::DropShadowFilterOperation"** %14 to i8*
  %49 = bitcast %"class.blink::DropShadowFilterOperation"** %14 to i8**
  %50 = bitcast i64* %8 to i8*
  %51 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %9, i64 0, i32 2
  %52 = bitcast i64* %10 to i8*
  %53 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %11, i64 0, i32 2
  %54 = bitcast %"class.blink::BlurFilterOperation"** %12 to i8*
  %55 = bitcast %"class.blink::BlurFilterOperation"** %12 to i8**
  %56 = bitcast %"class.blink::BasicComponentTransferFilterOperation"** %7 to i8*
  %57 = bitcast %"class.blink::BasicComponentTransferFilterOperation"** %7 to i8**
  %58 = bitcast %"class.blink::BasicColorMatrixFilterOperation"** %6 to i8*
  %59 = bitcast %"class.blink::BasicColorMatrixFilterOperation"** %6 to i8**
  %60 = bitcast %"class.blink::ShadowData"* %13 to i8*
  br label %61

61:                                               ; preds = %35, %348
  %62 = phi %"class.blink::Member"* [ %28, %35 ], [ %349, %348 ]
  %63 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %62, i64 0, i32 0, i32 0
  %64 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %63, align 8
  %65 = icmp eq %"class.blink::CSSValue"* %64, null
  br i1 %65, label %105, label %66

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %64, i64 0, i32 2
  %68 = load i8, i8* %67, align 1
  %69 = icmp eq i8 %68, 8
  br i1 %69, label %70, label %105

70:                                               ; preds = %66
  %71 = bitcast %"class.blink::CSSValue"* %64 to %"class.blink::cssvalue::CSSURIValue"*
  %72 = load %"class.blink::Document"*, %"class.blink::Document"** %36, align 8
  call void @_ZNK5blink8Document8CountUseENS_5mojom10WebFeatureE(%"class.blink::Document"* %72, i32 1014) #7
  %73 = call %"class.blink::SVGResource"* @_ZN5blink21ElementStyleResources23GetSVGResourceFromValueENS_13CSSPropertyIDERKNS_8cssvalue11CSSURIValueE(%"class.blink::ElementStyleResources"* %37, i32 %3, %"class.blink::cssvalue::CSSURIValue"* nonnull dereferenceable(40) %71) #7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #7
  %74 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %64, i64 5, i32 1
  %75 = load i8, i8* %74, align 8, !range !2
  %76 = icmp eq i8 %75, 0
  %77 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %64, i64 2, i32 2
  %78 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %64, i64 10, i32 2
  %79 = select i1 %76, i8* %78, i8* %77
  %80 = bitcast i8* %79 to %"class.WTF::AtomicString"*
  %81 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15FilterOperationEEEPhm(i64 40) #7
  %82 = bitcast i8* %81 to %"class.blink::ReferenceFilterOperation"*
  call void @_ZN5blink24ReferenceFilterOperationC1ERKN3WTF12AtomicStringEPNS_11SVGResourceE(%"class.blink::ReferenceFilterOperation"* %82, %"class.WTF::AtomicString"* dereferenceable(8) %80, %"class.blink::SVGResource"* %73) #7
  %83 = getelementptr inbounds i8, i8* %81, i64 -4
  %84 = bitcast i8* %83 to i16*
  %85 = load atomic i16, i16* %84 monotonic, align 2
  %86 = or i16 %85, 1
  store atomic i16 %86, i16* %84 release, align 2
  store i8* %81, i8** %39, align 8
  %87 = load i32, i32* %17, align 4
  %88 = load i32, i32* %16, align 8
  %89 = icmp eq i32 %87, %88
  br i1 %89, label %103, label %90, !prof !3

90:                                               ; preds = %70
  %91 = ptrtoint i8* %81 to i64
  %92 = load %"class.blink::Member.466"*, %"class.blink::Member.466"** %15, align 8
  %93 = zext i32 %87 to i64
  %94 = getelementptr inbounds %"class.blink::Member.466", %"class.blink::Member.466"* %92, i64 %93
  %95 = bitcast %"class.blink::Member.466"* %94 to i64*
  store atomic i64 %91, i64* %95 monotonic, align 8
  %96 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %100, label %98

98:                                               ; preds = %90
  %99 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %81) #7
  br label %100

100:                                              ; preds = %98, %90
  %101 = load i32, i32* %17, align 4
  %102 = add i32 %101, 1
  store i32 %102, i32* %17, align 4
  br label %104

103:                                              ; preds = %70
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_15FilterOperationEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPNS1_24ReferenceFilterOperationEEEvOT_(%"class.WTF::Vector.463"* %40, %"class.blink::ReferenceFilterOperation"** nonnull dereferenceable(8) %5) #7
  br label %104

104:                                              ; preds = %100, %103
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #7
  br label %348

105:                                              ; preds = %66, %61
  %106 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %64, i64 18, i32 2
  %107 = bitcast i8* %106 to i32*
  %108 = load i32, i32* %107, align 8
  %109 = add i32 %108, -774
  %110 = icmp ult i32 %109, 10
  br i1 %110, label %111, label %120

111:                                              ; preds = %105
  %112 = sext i32 %109 to i64
  %113 = getelementptr inbounds [10 x i32], [10 x i32]* @switch.table._ZN5blink23FilterOperationResolver22CreateFilterOperationsERNS_18StyleResolverStateERKNS_8CSSValueENS_13CSSPropertyIDE, i64 0, i64 %112
  %114 = load i32, i32* %113, align 4
  %115 = sext i32 %109 to i64
  %116 = getelementptr inbounds [10 x i32], [10 x i32]* @switch.table._ZN5blink23FilterOperationResolver22CreateFilterOperationsERNS_18StyleResolverStateERKNS_8CSSValueENS_13CSSPropertyIDE.10, i64 0, i64 %115
  %117 = load i32, i32* %116, align 4
  %118 = load %"class.blink::Document"*, %"class.blink::Document"** %36, align 8
  call void @_ZNK5blink8Document8CountUseENS_5mojom10WebFeatureE(%"class.blink::Document"* %118, i32 %117) #7
  %119 = load i32, i32* %107, align 8
  br label %120

120:                                              ; preds = %105, %111
  %121 = phi i32 [ %119, %111 ], [ %108, %105 ]
  %122 = phi i32 [ %114, %111 ], [ 16, %105 ]
  switch i32 %121, label %348 [
    i32 775, label %123
    i32 776, label %123
    i32 777, label %123
    i32 778, label %123
    i32 774, label %181
    i32 780, label %181
    i32 781, label %181
    i32 779, label %181
    i32 782, label %239
    i32 783, label %307
  ]

123:                                              ; preds = %120, %120, %120, %120
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #7
  switch i32 %121, label %151 [
    i32 775, label %124
    i32 776, label %124
    i32 777, label %124
    i32 778, label %139
  ]

124:                                              ; preds = %123, %123, %123
  %125 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %64, i64 6, i32 2
  %126 = bitcast i8* %125 to i32*
  %127 = load i32, i32* %126, align 4
  %128 = icmp eq i32 %127, 1
  br i1 %128, label %129, label %151

129:                                              ; preds = %124
  %130 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %64, i64 2, i32 2
  %131 = bitcast i8* %130 to %"class.WTF::Vector"*
  %132 = call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %131, i32 0) #7
  %133 = bitcast %"class.blink::Member"* %132 to %"class.blink::CSSPrimitiveValue"**
  %134 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %133, align 8
  %135 = call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* %134) #7
  %136 = call zeroext i1 @_ZNK5blink17CSSPrimitiveValue12IsPercentageEv(%"class.blink::CSSPrimitiveValue"* %134) #7
  %137 = fdiv double %135, 1.000000e+02
  %138 = select i1 %136, double %137, double %135
  br label %151

139:                                              ; preds = %123
  %140 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %64, i64 6, i32 2
  %141 = bitcast i8* %140 to i32*
  %142 = load i32, i32* %141, align 4
  %143 = icmp eq i32 %142, 1
  br i1 %143, label %144, label %151

144:                                              ; preds = %139
  %145 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %64, i64 2, i32 2
  %146 = bitcast i8* %145 to %"class.WTF::Vector"*
  %147 = call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %146, i32 0) #7
  %148 = bitcast %"class.blink::Member"* %147 to %"class.blink::CSSPrimitiveValue"**
  %149 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %148, align 8
  %150 = call double @_ZNK5blink17CSSPrimitiveValue14ComputeDegreesEv(%"class.blink::CSSPrimitiveValue"* %149) #7
  br label %151

151:                                              ; preds = %123, %124, %129, %139, %144
  %152 = phi double [ 1.000000e+00, %124 ], [ %138, %129 ], [ %150, %144 ], [ 0.000000e+00, %139 ], [ 0.000000e+00, %123 ]
  %153 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15FilterOperationEEEPhm(i64 24) #7
  %154 = bitcast i8* %153 to i32 (...)***
  %155 = getelementptr inbounds i8, i8* %153, i64 8
  %156 = bitcast i8* %155 to i32*
  store i32 %122, i32* %156, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink31BasicColorMatrixFilterOperationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %154, align 8
  %157 = getelementptr inbounds i8, i8* %153, i64 16
  %158 = bitcast i8* %157 to double*
  store double %152, double* %158, align 8
  %159 = getelementptr inbounds i8, i8* %153, i64 -4
  %160 = bitcast i8* %159 to i16*
  %161 = load atomic i16, i16* %160 monotonic, align 2
  %162 = or i16 %161, 1
  store atomic i16 %162, i16* %160 release, align 2
  store i8* %153, i8** %59, align 8
  %163 = load i32, i32* %17, align 4
  %164 = load i32, i32* %16, align 8
  %165 = icmp eq i32 %163, %164
  br i1 %165, label %179, label %166, !prof !3

166:                                              ; preds = %151
  %167 = ptrtoint i8* %153 to i64
  %168 = load %"class.blink::Member.466"*, %"class.blink::Member.466"** %15, align 8
  %169 = zext i32 %163 to i64
  %170 = getelementptr inbounds %"class.blink::Member.466", %"class.blink::Member.466"* %168, i64 %169
  %171 = bitcast %"class.blink::Member.466"* %170 to i64*
  store atomic i64 %167, i64* %171 monotonic, align 8
  %172 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %176, label %174

174:                                              ; preds = %166
  %175 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %153) #7
  br label %176

176:                                              ; preds = %174, %166
  %177 = load i32, i32* %17, align 4
  %178 = add i32 %177, 1
  store i32 %178, i32* %17, align 4
  br label %180

179:                                              ; preds = %151
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_15FilterOperationEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPNS1_31BasicColorMatrixFilterOperationEEEvOT_(%"class.WTF::Vector.463"* %40, %"class.blink::BasicColorMatrixFilterOperation"** nonnull dereferenceable(8) %6) #7
  br label %180

180:                                              ; preds = %176, %179
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #7
  br label %348

181:                                              ; preds = %120, %120, %120, %120
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #7
  switch i32 %121, label %209 [
    i32 775, label %182
    i32 776, label %182
    i32 777, label %182
    i32 774, label %182
    i32 780, label %182
    i32 781, label %182
    i32 779, label %182
    i32 778, label %197
  ]

182:                                              ; preds = %181, %181, %181, %181, %181, %181, %181
  %183 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %64, i64 6, i32 2
  %184 = bitcast i8* %183 to i32*
  %185 = load i32, i32* %184, align 4
  %186 = icmp eq i32 %185, 1
  br i1 %186, label %187, label %209

187:                                              ; preds = %182
  %188 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %64, i64 2, i32 2
  %189 = bitcast i8* %188 to %"class.WTF::Vector"*
  %190 = call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %189, i32 0) #7
  %191 = bitcast %"class.blink::Member"* %190 to %"class.blink::CSSPrimitiveValue"**
  %192 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %191, align 8
  %193 = call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* %192) #7
  %194 = call zeroext i1 @_ZNK5blink17CSSPrimitiveValue12IsPercentageEv(%"class.blink::CSSPrimitiveValue"* %192) #7
  %195 = fdiv double %193, 1.000000e+02
  %196 = select i1 %194, double %195, double %193
  br label %209

197:                                              ; preds = %181
  %198 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %64, i64 6, i32 2
  %199 = bitcast i8* %198 to i32*
  %200 = load i32, i32* %199, align 4
  %201 = icmp eq i32 %200, 1
  br i1 %201, label %202, label %209

202:                                              ; preds = %197
  %203 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %64, i64 2, i32 2
  %204 = bitcast i8* %203 to %"class.WTF::Vector"*
  %205 = call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %204, i32 0) #7
  %206 = bitcast %"class.blink::Member"* %205 to %"class.blink::CSSPrimitiveValue"**
  %207 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %206, align 8
  %208 = call double @_ZNK5blink17CSSPrimitiveValue14ComputeDegreesEv(%"class.blink::CSSPrimitiveValue"* %207) #7
  br label %209

209:                                              ; preds = %181, %182, %187, %197, %202
  %210 = phi double [ 1.000000e+00, %182 ], [ %196, %187 ], [ %208, %202 ], [ 0.000000e+00, %197 ], [ 0.000000e+00, %181 ]
  %211 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15FilterOperationEEEPhm(i64 24) #7
  %212 = bitcast i8* %211 to i32 (...)***
  %213 = getelementptr inbounds i8, i8* %211, i64 8
  %214 = bitcast i8* %213 to i32*
  store i32 %122, i32* %214, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink37BasicComponentTransferFilterOperationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %212, align 8
  %215 = getelementptr inbounds i8, i8* %211, i64 16
  %216 = bitcast i8* %215 to double*
  store double %210, double* %216, align 8
  %217 = getelementptr inbounds i8, i8* %211, i64 -4
  %218 = bitcast i8* %217 to i16*
  %219 = load atomic i16, i16* %218 monotonic, align 2
  %220 = or i16 %219, 1
  store atomic i16 %220, i16* %218 release, align 2
  store i8* %211, i8** %57, align 8
  %221 = load i32, i32* %17, align 4
  %222 = load i32, i32* %16, align 8
  %223 = icmp eq i32 %221, %222
  br i1 %223, label %237, label %224, !prof !3

224:                                              ; preds = %209
  %225 = ptrtoint i8* %211 to i64
  %226 = load %"class.blink::Member.466"*, %"class.blink::Member.466"** %15, align 8
  %227 = zext i32 %221 to i64
  %228 = getelementptr inbounds %"class.blink::Member.466", %"class.blink::Member.466"* %226, i64 %227
  %229 = bitcast %"class.blink::Member.466"* %228 to i64*
  store atomic i64 %225, i64* %229 monotonic, align 8
  %230 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %234, label %232

232:                                              ; preds = %224
  %233 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %211) #7
  br label %234

234:                                              ; preds = %232, %224
  %235 = load i32, i32* %17, align 4
  %236 = add i32 %235, 1
  store i32 %236, i32* %17, align 4
  br label %238

237:                                              ; preds = %209
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_15FilterOperationEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPNS1_37BasicComponentTransferFilterOperationEEEvOT_(%"class.WTF::Vector.463"* %40, %"class.blink::BasicComponentTransferFilterOperation"** nonnull dereferenceable(8) %7) #7
  br label %238

238:                                              ; preds = %234, %237
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #7
  br label %348

239:                                              ; preds = %120
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #7
  store i64 -6196950888238546944, i64* %8, align 8
  %240 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %64, i64 6, i32 2
  %241 = bitcast i8* %240 to i32*
  %242 = load i32, i32* %241, align 4
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %268, label %244

244:                                              ; preds = %239
  %245 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %64, i64 2, i32 2
  %246 = bitcast i8* %245 to %"class.WTF::Vector"*
  %247 = call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %246, i32 0) #7
  %248 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %248, align 8
  %250 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %249, i64 0, i32 2
  %251 = load i8, i8* %250, align 1
  %252 = icmp ult i8 %251, 2
  %253 = bitcast %"class.blink::CSSValue"* %249 to %"class.blink::CSSPrimitiveValue"*
  %254 = select i1 %252, %"class.blink::CSSPrimitiveValue"* %253, %"class.blink::CSSPrimitiveValue"* null
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #7
  call void @_ZNK5blink17CSSPrimitiveValue15ConvertToLengthERKNS_25CSSToLengthConversionDataE(%"class.blink::Length"* nonnull sret %11, %"class.blink::CSSPrimitiveValue"* %254, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %25) #7
  %255 = load i8, i8* %53, align 1
  %256 = icmp eq i8 %255, 8
  br i1 %256, label %257, label %258

257:                                              ; preds = %244
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %11) #7
  br label %258

258:                                              ; preds = %257, %244
  %259 = load i8, i8* %51, align 1
  %260 = icmp eq i8 %259, 8
  br i1 %260, label %261, label %262

261:                                              ; preds = %258
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %9) #7
  br label %262

262:                                              ; preds = %258, %261
  %263 = load i64, i64* %10, align 8
  store i64 %263, i64* %8, align 8
  %264 = load i8, i8* %53, align 1
  %265 = icmp eq i8 %264, 8
  br i1 %265, label %266, label %267

266:                                              ; preds = %262
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %11) #7
  br label %267

267:                                              ; preds = %262, %266
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #7
  br label %268

268:                                              ; preds = %239, %267
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #7
  %269 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15FilterOperationEEEPhm(i64 24) #7
  %270 = bitcast i8* %269 to i32 (...)***
  %271 = getelementptr inbounds i8, i8* %269, i64 8
  %272 = bitcast i8* %271 to i32*
  store i32 10, i32* %272, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink19BlurFilterOperationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %270, align 8
  %273 = getelementptr inbounds i8, i8* %269, i64 12
  %274 = bitcast i8* %273 to i64*
  %275 = load i64, i64* %8, align 8
  store i64 %275, i64* %274, align 4
  %276 = and i64 %275, 280375465082880
  %277 = icmp eq i64 %276, 8796093022208
  br i1 %277, label %278, label %280

278:                                              ; preds = %268
  %279 = bitcast i8* %273 to %"class.blink::Length"*
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %279) #7
  br label %280

280:                                              ; preds = %268, %278
  %281 = getelementptr inbounds i8, i8* %269, i64 -4
  %282 = bitcast i8* %281 to i16*
  %283 = load atomic i16, i16* %282 monotonic, align 2
  %284 = or i16 %283, 1
  store atomic i16 %284, i16* %282 release, align 2
  store i8* %269, i8** %55, align 8
  %285 = load i32, i32* %17, align 4
  %286 = load i32, i32* %16, align 8
  %287 = icmp eq i32 %285, %286
  br i1 %287, label %301, label %288, !prof !3

288:                                              ; preds = %280
  %289 = ptrtoint i8* %269 to i64
  %290 = load %"class.blink::Member.466"*, %"class.blink::Member.466"** %15, align 8
  %291 = zext i32 %285 to i64
  %292 = getelementptr inbounds %"class.blink::Member.466", %"class.blink::Member.466"* %290, i64 %291
  %293 = bitcast %"class.blink::Member.466"* %292 to i64*
  store atomic i64 %289, i64* %293 monotonic, align 8
  %294 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %295 = icmp eq i32 %294, 0
  br i1 %295, label %298, label %296

296:                                              ; preds = %288
  %297 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %269) #7
  br label %298

298:                                              ; preds = %296, %288
  %299 = load i32, i32* %17, align 4
  %300 = add i32 %299, 1
  store i32 %300, i32* %17, align 4
  br label %302

301:                                              ; preds = %280
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_15FilterOperationEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPNS1_19BlurFilterOperationEEEvOT_(%"class.WTF::Vector.463"* %40, %"class.blink::BlurFilterOperation"** nonnull dereferenceable(8) %12) #7
  br label %302

302:                                              ; preds = %298, %301
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #7
  %303 = load i8, i8* %51, align 1
  %304 = icmp eq i8 %303, 8
  br i1 %304, label %305, label %306

305:                                              ; preds = %302
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %9) #7
  br label %306

306:                                              ; preds = %302, %305
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #7
  br label %348

307:                                              ; preds = %120
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %41) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %60, i8 -1, i64 16, i1 false)
  store i32 -1431655766, i32* %42, align 4
  store i32 -1431655766, i32* %43, align 4
  store i32 -1431655766, i32* %44, align 4
  %308 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %64, i64 2, i32 2
  %309 = bitcast i8* %308 to %"class.WTF::Vector"*
  %310 = call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %309, i32 0) #7
  %311 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %310, i64 0, i32 0, i32 0
  %312 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %311, align 8
  call void @_ZN5blink21StyleBuilderConverter13ConvertShadowERKNS_25CSSToLengthConversionDataEPNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::ShadowData"* nonnull sret %13, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %25, %"class.blink::StyleResolverState"* %1, %"class.blink::CSSValue"* dereferenceable(3) %312) #7
  %313 = load i64, i64* %46, align 4
  %314 = and i64 %313, -4294967296
  %315 = icmp eq i64 %314, 631360192512
  br i1 %315, label %316, label %320

316:                                              ; preds = %307
  %317 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %47, align 8
  %318 = call i32 @_ZNK5blink13ComputedStyle15GetCurrentColorEv(%"class.blink::ComputedStyle"* %317) #7
  %319 = zext i32 %318 to i64
  store i64 %319, i64* %46, align 4
  br label %320

320:                                              ; preds = %316, %307
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #7
  %321 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15FilterOperationEEEPhm(i64 40) #7
  %322 = bitcast i8* %321 to i32 (...)***
  %323 = getelementptr inbounds i8, i8* %321, i64 8
  %324 = bitcast i8* %323 to i32*
  store i32 11, i32* %324, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink25DropShadowFilterOperationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %322, align 8
  %325 = getelementptr inbounds i8, i8* %321, i64 12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %325, i8* nonnull align 4 %41, i64 28, i1 false) #7
  %326 = getelementptr inbounds i8, i8* %321, i64 -4
  %327 = bitcast i8* %326 to i16*
  %328 = load atomic i16, i16* %327 monotonic, align 2
  %329 = or i16 %328, 1
  store atomic i16 %329, i16* %327 release, align 2
  store i8* %321, i8** %49, align 8
  %330 = load i32, i32* %17, align 4
  %331 = load i32, i32* %16, align 8
  %332 = icmp eq i32 %330, %331
  br i1 %332, label %346, label %333, !prof !3

333:                                              ; preds = %320
  %334 = ptrtoint i8* %321 to i64
  %335 = load %"class.blink::Member.466"*, %"class.blink::Member.466"** %15, align 8
  %336 = zext i32 %330 to i64
  %337 = getelementptr inbounds %"class.blink::Member.466", %"class.blink::Member.466"* %335, i64 %336
  %338 = bitcast %"class.blink::Member.466"* %337 to i64*
  store atomic i64 %334, i64* %338 monotonic, align 8
  %339 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %340 = icmp eq i32 %339, 0
  br i1 %340, label %343, label %341

341:                                              ; preds = %333
  %342 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %321) #7
  br label %343

343:                                              ; preds = %341, %333
  %344 = load i32, i32* %17, align 4
  %345 = add i32 %344, 1
  store i32 %345, i32* %17, align 4
  br label %347

346:                                              ; preds = %320
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_15FilterOperationEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPNS1_25DropShadowFilterOperationEEEvOT_(%"class.WTF::Vector.463"* %40, %"class.blink::DropShadowFilterOperation"** nonnull dereferenceable(8) %14) #7
  br label %347

347:                                              ; preds = %343, %346
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #7
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %41) #7
  br label %348

348:                                              ; preds = %180, %238, %306, %347, %120, %104
  %349 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %62, i64 1
  %350 = icmp eq %"class.blink::Member"* %349, %33
  br i1 %350, label %351, label %61

351:                                              ; preds = %348, %24, %4
  ret void
}

declare void @_ZN5blink16FilterOperationsC1Ev(%"class.blink::FilterOperations"*) unnamed_addr #3

declare %"class.blink::SVGResource"* @_ZN5blink21ElementStyleResources23GetSVGResourceFromValueENS_13CSSPropertyIDERKNS_8cssvalue11CSSURIValueE(%"class.blink::ElementStyleResources"*, i32, %"class.blink::cssvalue::CSSURIValue"* dereferenceable(40)) local_unnamed_addr #3

declare void @_ZNK5blink17CSSPrimitiveValue15ConvertToLengthERKNS_25CSSToLengthConversionDataE(%"class.blink::Length"* sret, %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSToLengthConversionData"* dereferenceable(56)) local_unnamed_addr #3

declare void @_ZN5blink21StyleBuilderConverter13ConvertShadowERKNS_25CSSToLengthConversionDataEPNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::ShadowData"* sret, %"class.blink::CSSToLengthConversionData"* dereferenceable(56), %"class.blink::StyleResolverState"*, %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #3

declare i32 @_ZNK5blink13ComputedStyle15GetCurrentColorEv(%"class.blink::ComputedStyle"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23FilterOperationResolver31CreateOffscreenFilterOperationsERKNS_8CSSValueERKNS_4FontE(%"class.blink::FilterOperations"* noalias sret, %"class.blink::CSSValue"* readonly dereferenceable(3), %"class.blink::Font"* dereferenceable(88)) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.blink::CSSToLengthConversionData::FontSizes", align 8
  %5 = alloca %"class.blink::CSSToLengthConversionData::ViewportSize", align 8
  %6 = alloca %"class.blink::CSSToLengthConversionData", align 8
  %7 = alloca %"class.blink::BasicColorMatrixFilterOperation"*, align 8
  %8 = alloca %"class.blink::BasicComponentTransferFilterOperation"*, align 8
  %9 = alloca i64, align 8
  %10 = bitcast i64* %9 to %"class.blink::Length"*
  %11 = alloca i64, align 8
  %12 = bitcast i64* %11 to %"class.blink::Length"*
  %13 = alloca %"class.blink::BlurFilterOperation"*, align 8
  %14 = alloca %"class.blink::ShadowData", align 4
  %15 = alloca %"class.blink::DropShadowFilterOperation"*, align 8
  %16 = getelementptr inbounds %"class.blink::FilterOperations", %"class.blink::FilterOperations"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.blink::FilterOperations", %"class.blink::FilterOperations"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.blink::FilterOperations", %"class.blink::FilterOperations"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %19 = bitcast %"class.blink::FilterOperations"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 -86, i64 16, i1 false)
  tail call void @_ZN5blink16FilterOperationsC1Ev(%"class.blink::FilterOperations"* %0) #7
  %20 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp ne i8 %21, 2
  %23 = icmp eq %"class.blink::CSSValue"* %1, null
  %24 = or i1 %23, %22
  br i1 %24, label %25, label %308

25:                                               ; preds = %3
  %26 = bitcast %"class.blink::CSSToLengthConversionData::FontSizes"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #7
  %27 = getelementptr inbounds %"class.blink::CSSToLengthConversionData::FontSizes", %"class.blink::CSSToLengthConversionData::FontSizes"* %4, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %27, align 8
  %28 = getelementptr inbounds %"class.blink::CSSToLengthConversionData::FontSizes", %"class.blink::CSSToLengthConversionData::FontSizes"* %4, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %28, align 4
  %29 = getelementptr inbounds %"class.blink::CSSToLengthConversionData::FontSizes", %"class.blink::CSSToLengthConversionData::FontSizes"* %4, i64 0, i32 2
  store %"class.blink::Font"* inttoptr (i64 -6148914691236517206 to %"class.blink::Font"*), %"class.blink::Font"** %29, align 8
  %30 = getelementptr inbounds %"class.blink::CSSToLengthConversionData::FontSizes", %"class.blink::CSSToLengthConversionData::FontSizes"* %4, i64 0, i32 3
  store float 0xFFFFFFFFE0000000, float* %30, align 8
  %31 = getelementptr inbounds %"class.blink::CSSToLengthConversionData::FontSizes", %"class.blink::CSSToLengthConversionData::FontSizes"* %4, i64 0, i32 4, i64 0
  %32 = bitcast i8* %31 to i32*
  store i32 -1431655766, i32* %32, align 4
  call void @_ZN5blink25CSSToLengthConversionData9FontSizesC1EffPKNS_4FontEf(%"class.blink::CSSToLengthConversionData::FontSizes"* nonnull %4, float 1.600000e+01, float 1.600000e+01, %"class.blink::Font"* %2, float 1.000000e+00) #7
  %33 = bitcast %"class.blink::CSSToLengthConversionData::ViewportSize"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #7
  %34 = bitcast %"class.blink::CSSToLengthConversionData"* %6 to i8*
  %35 = bitcast %"class.blink::CSSToLengthConversionData::ViewportSize"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 0, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %34) #7
  %36 = getelementptr inbounds %"class.blink::CSSToLengthConversionData", %"class.blink::CSSToLengthConversionData"* %6, i64 0, i32 0
  store %"class.blink::ComputedStyle"* inttoptr (i64 -6148914691236517206 to %"class.blink::ComputedStyle"*), %"class.blink::ComputedStyle"** %36, align 8
  %37 = getelementptr inbounds %"class.blink::CSSToLengthConversionData", %"class.blink::CSSToLengthConversionData"* %6, i64 0, i32 1, i32 0
  store float 0xFFFFFFFFE0000000, float* %37, align 8
  %38 = getelementptr inbounds %"class.blink::CSSToLengthConversionData", %"class.blink::CSSToLengthConversionData"* %6, i64 0, i32 1, i32 1
  store float 0xFFFFFFFFE0000000, float* %38, align 4
  %39 = getelementptr inbounds %"class.blink::CSSToLengthConversionData", %"class.blink::CSSToLengthConversionData"* %6, i64 0, i32 1, i32 2
  store %"class.blink::Font"* inttoptr (i64 -6148914691236517206 to %"class.blink::Font"*), %"class.blink::Font"** %39, align 8
  %40 = getelementptr inbounds %"class.blink::CSSToLengthConversionData", %"class.blink::CSSToLengthConversionData"* %6, i64 0, i32 1, i32 3
  store float 0xFFFFFFFFE0000000, float* %40, align 8
  %41 = getelementptr inbounds %"class.blink::CSSToLengthConversionData", %"class.blink::CSSToLengthConversionData"* %6, i64 0, i32 1, i32 4, i64 0
  %42 = getelementptr inbounds %"class.blink::CSSToLengthConversionData", %"class.blink::CSSToLengthConversionData"* %6, i64 0, i32 2, i32 0, i32 0
  %43 = bitcast i8* %41 to i32*
  store i32 -1431655766, i32* %43, align 4
  %44 = getelementptr inbounds %"class.blink::CSSToLengthConversionData", %"class.blink::CSSToLengthConversionData"* %6, i64 0, i32 4, i64 0
  %45 = bitcast double* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 -1, i64 20, i1 false)
  %46 = bitcast i8* %44 to i32*
  store i32 -1431655766, i32* %46, align 4
  call void @_ZN5blink25CSSToLengthConversionDataC1EPKNS_13ComputedStyleERKNS0_9FontSizesERKNS0_12ViewportSizeEf(%"class.blink::CSSToLengthConversionData"* nonnull %6, %"class.blink::ComputedStyle"* null, %"class.blink::CSSToLengthConversionData::FontSizes"* nonnull dereferenceable(24) %4, %"class.blink::CSSToLengthConversionData::ViewportSize"* nonnull dereferenceable(16) %5, float 1.000000e+00) #7
  %47 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 2, i32 2
  %48 = bitcast i8* %47 to %"class.blink::Member"**
  %49 = load %"class.blink::Member"*, %"class.blink::Member"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 6, i32 2
  %51 = bitcast i8* %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %49, i64 %53
  %55 = icmp eq i32 %52, 0
  br i1 %55, label %77, label %56

56:                                               ; preds = %25
  %57 = bitcast %"class.blink::ShadowData"* %14 to i8*
  %58 = getelementptr inbounds %"class.blink::ShadowData", %"class.blink::ShadowData"* %14, i64 0, i32 3, i32 0, i32 0
  %59 = getelementptr inbounds %"class.blink::ShadowData", %"class.blink::ShadowData"* %14, i64 0, i32 3, i32 1
  %60 = getelementptr inbounds %"class.blink::ShadowData", %"class.blink::ShadowData"* %14, i64 0, i32 4
  %61 = getelementptr inbounds %"class.blink::ShadowData", %"class.blink::ShadowData"* %14, i64 0, i32 3
  %62 = bitcast %"class.blink::StyleColor"* %61 to i64*
  %63 = bitcast %"class.blink::DropShadowFilterOperation"** %15 to i8*
  %64 = bitcast %"class.blink::DropShadowFilterOperation"** %15 to i8**
  %65 = getelementptr inbounds %"class.blink::FilterOperations", %"class.blink::FilterOperations"* %0, i64 0, i32 0, i32 0
  %66 = bitcast i64* %9 to i8*
  %67 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %10, i64 0, i32 2
  %68 = bitcast i64* %11 to i8*
  %69 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %12, i64 0, i32 2
  %70 = bitcast %"class.blink::BlurFilterOperation"** %13 to i8*
  %71 = bitcast %"class.blink::BlurFilterOperation"** %13 to i8**
  %72 = bitcast %"class.blink::BasicComponentTransferFilterOperation"** %8 to i8*
  %73 = bitcast %"class.blink::BasicComponentTransferFilterOperation"** %8 to i8**
  %74 = bitcast %"class.blink::BasicColorMatrixFilterOperation"** %7 to i8*
  %75 = bitcast %"class.blink::BasicColorMatrixFilterOperation"** %7 to i8**
  %76 = bitcast %"class.blink::ShadowData"* %14 to i8*
  br label %78

77:                                               ; preds = %305, %25
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %34) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #7
  br label %308

78:                                               ; preds = %56, %305
  %79 = phi %"class.blink::Member"* [ %49, %56 ], [ %306, %305 ]
  %80 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %79, i64 0, i32 0, i32 0
  %81 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %80, align 8
  %82 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %81, i64 0, i32 2
  %83 = load i8, i8* %82, align 1
  %84 = icmp eq i8 %83, 8
  br i1 %84, label %305, label %85

85:                                               ; preds = %78
  %86 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %81, i64 18, i32 2
  %87 = bitcast i8* %86 to i32*
  %88 = load i32, i32* %87, align 8
  switch i32 %88, label %305 [
    i32 775, label %94
    i32 776, label %89
    i32 777, label %90
    i32 778, label %110
    i32 774, label %153
    i32 779, label %91
    i32 780, label %92
    i32 781, label %93
    i32 782, label %199
    i32 783, label %267
  ]

89:                                               ; preds = %85
  br label %94

90:                                               ; preds = %85
  br label %94

91:                                               ; preds = %85
  br label %153

92:                                               ; preds = %85
  br label %153

93:                                               ; preds = %85
  br label %153

94:                                               ; preds = %85, %89, %90
  %95 = phi i32 [ 3, %90 ], [ 2, %89 ], [ 1, %85 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #7
  %96 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %81, i64 6, i32 2
  %97 = bitcast i8* %96 to i32*
  %98 = load i32, i32* %97, align 4
  %99 = icmp eq i32 %98, 1
  br i1 %99, label %100, label %122

100:                                              ; preds = %94
  %101 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %81, i64 2, i32 2
  %102 = bitcast i8* %101 to %"class.WTF::Vector"*
  %103 = call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %102, i32 0) #7
  %104 = bitcast %"class.blink::Member"* %103 to %"class.blink::CSSPrimitiveValue"**
  %105 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %104, align 8
  %106 = call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* %105) #7
  %107 = call zeroext i1 @_ZNK5blink17CSSPrimitiveValue12IsPercentageEv(%"class.blink::CSSPrimitiveValue"* %105) #7
  %108 = fdiv double %106, 1.000000e+02
  %109 = select i1 %107, double %108, double %106
  br label %122

110:                                              ; preds = %85
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #7
  %111 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %81, i64 6, i32 2
  %112 = bitcast i8* %111 to i32*
  %113 = load i32, i32* %112, align 4
  %114 = icmp eq i32 %113, 1
  br i1 %114, label %115, label %122

115:                                              ; preds = %110
  %116 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %81, i64 2, i32 2
  %117 = bitcast i8* %116 to %"class.WTF::Vector"*
  %118 = call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %117, i32 0) #7
  %119 = bitcast %"class.blink::Member"* %118 to %"class.blink::CSSPrimitiveValue"**
  %120 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %119, align 8
  %121 = call double @_ZNK5blink17CSSPrimitiveValue14ComputeDegreesEv(%"class.blink::CSSPrimitiveValue"* %120) #7
  br label %122

122:                                              ; preds = %94, %100, %110, %115
  %123 = phi i32 [ %95, %94 ], [ %95, %100 ], [ 4, %115 ], [ 4, %110 ]
  %124 = phi double [ 1.000000e+00, %94 ], [ %109, %100 ], [ %121, %115 ], [ 0.000000e+00, %110 ]
  %125 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15FilterOperationEEEPhm(i64 24) #7
  %126 = bitcast i8* %125 to i32 (...)***
  %127 = getelementptr inbounds i8, i8* %125, i64 8
  %128 = bitcast i8* %127 to i32*
  store i32 %123, i32* %128, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink31BasicColorMatrixFilterOperationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %126, align 8
  %129 = getelementptr inbounds i8, i8* %125, i64 16
  %130 = bitcast i8* %129 to double*
  store double %124, double* %130, align 8
  %131 = getelementptr inbounds i8, i8* %125, i64 -4
  %132 = bitcast i8* %131 to i16*
  %133 = load atomic i16, i16* %132 monotonic, align 2
  %134 = or i16 %133, 1
  store atomic i16 %134, i16* %132 release, align 2
  store i8* %125, i8** %75, align 8
  %135 = load i32, i32* %18, align 4
  %136 = load i32, i32* %17, align 8
  %137 = icmp eq i32 %135, %136
  br i1 %137, label %151, label %138, !prof !3

138:                                              ; preds = %122
  %139 = ptrtoint i8* %125 to i64
  %140 = load %"class.blink::Member.466"*, %"class.blink::Member.466"** %16, align 8
  %141 = zext i32 %135 to i64
  %142 = getelementptr inbounds %"class.blink::Member.466", %"class.blink::Member.466"* %140, i64 %141
  %143 = bitcast %"class.blink::Member.466"* %142 to i64*
  store atomic i64 %139, i64* %143 monotonic, align 8
  %144 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %148, label %146

146:                                              ; preds = %138
  %147 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %125) #7
  br label %148

148:                                              ; preds = %146, %138
  %149 = load i32, i32* %18, align 4
  %150 = add i32 %149, 1
  store i32 %150, i32* %18, align 4
  br label %152

151:                                              ; preds = %122
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_15FilterOperationEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPNS1_31BasicColorMatrixFilterOperationEEEvOT_(%"class.WTF::Vector.463"* %65, %"class.blink::BasicColorMatrixFilterOperation"** nonnull dereferenceable(8) %7) #7
  br label %152

152:                                              ; preds = %148, %151
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #7
  br label %305

153:                                              ; preds = %85, %93, %92, %91
  %154 = phi i32 [ 7, %91 ], [ 8, %92 ], [ 9, %93 ], [ 6, %85 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #7
  %155 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %81, i64 6, i32 2
  %156 = bitcast i8* %155 to i32*
  %157 = load i32, i32* %156, align 4
  %158 = icmp eq i32 %157, 1
  br i1 %158, label %159, label %169

159:                                              ; preds = %153
  %160 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %81, i64 2, i32 2
  %161 = bitcast i8* %160 to %"class.WTF::Vector"*
  %162 = call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %161, i32 0) #7
  %163 = bitcast %"class.blink::Member"* %162 to %"class.blink::CSSPrimitiveValue"**
  %164 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %163, align 8
  %165 = call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* %164) #7
  %166 = call zeroext i1 @_ZNK5blink17CSSPrimitiveValue12IsPercentageEv(%"class.blink::CSSPrimitiveValue"* %164) #7
  %167 = fdiv double %165, 1.000000e+02
  %168 = select i1 %166, double %167, double %165
  br label %169

169:                                              ; preds = %153, %159
  %170 = phi double [ 1.000000e+00, %153 ], [ %168, %159 ]
  %171 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15FilterOperationEEEPhm(i64 24) #7
  %172 = bitcast i8* %171 to i32 (...)***
  %173 = getelementptr inbounds i8, i8* %171, i64 8
  %174 = bitcast i8* %173 to i32*
  store i32 %154, i32* %174, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink37BasicComponentTransferFilterOperationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %172, align 8
  %175 = getelementptr inbounds i8, i8* %171, i64 16
  %176 = bitcast i8* %175 to double*
  store double %170, double* %176, align 8
  %177 = getelementptr inbounds i8, i8* %171, i64 -4
  %178 = bitcast i8* %177 to i16*
  %179 = load atomic i16, i16* %178 monotonic, align 2
  %180 = or i16 %179, 1
  store atomic i16 %180, i16* %178 release, align 2
  store i8* %171, i8** %73, align 8
  %181 = load i32, i32* %18, align 4
  %182 = load i32, i32* %17, align 8
  %183 = icmp eq i32 %181, %182
  br i1 %183, label %197, label %184, !prof !3

184:                                              ; preds = %169
  %185 = ptrtoint i8* %171 to i64
  %186 = load %"class.blink::Member.466"*, %"class.blink::Member.466"** %16, align 8
  %187 = zext i32 %181 to i64
  %188 = getelementptr inbounds %"class.blink::Member.466", %"class.blink::Member.466"* %186, i64 %187
  %189 = bitcast %"class.blink::Member.466"* %188 to i64*
  store atomic i64 %185, i64* %189 monotonic, align 8
  %190 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %194, label %192

192:                                              ; preds = %184
  %193 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %171) #7
  br label %194

194:                                              ; preds = %192, %184
  %195 = load i32, i32* %18, align 4
  %196 = add i32 %195, 1
  store i32 %196, i32* %18, align 4
  br label %198

197:                                              ; preds = %169
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_15FilterOperationEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPNS1_37BasicComponentTransferFilterOperationEEEvOT_(%"class.WTF::Vector.463"* %65, %"class.blink::BasicComponentTransferFilterOperation"** nonnull dereferenceable(8) %8) #7
  br label %198

198:                                              ; preds = %194, %197
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #7
  br label %305

199:                                              ; preds = %85
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #7
  store i64 -6196950888238546944, i64* %9, align 8
  %200 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %81, i64 6, i32 2
  %201 = bitcast i8* %200 to i32*
  %202 = load i32, i32* %201, align 4
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %228, label %204

204:                                              ; preds = %199
  %205 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %81, i64 2, i32 2
  %206 = bitcast i8* %205 to %"class.WTF::Vector"*
  %207 = call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %206, i32 0) #7
  %208 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %207, i64 0, i32 0, i32 0
  %209 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %208, align 8
  %210 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %209, i64 0, i32 2
  %211 = load i8, i8* %210, align 1
  %212 = icmp ult i8 %211, 2
  %213 = bitcast %"class.blink::CSSValue"* %209 to %"class.blink::CSSPrimitiveValue"*
  %214 = select i1 %212, %"class.blink::CSSPrimitiveValue"* %213, %"class.blink::CSSPrimitiveValue"* null
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #7
  call void @_ZNK5blink17CSSPrimitiveValue15ConvertToLengthERKNS_25CSSToLengthConversionDataE(%"class.blink::Length"* nonnull sret %12, %"class.blink::CSSPrimitiveValue"* %214, %"class.blink::CSSToLengthConversionData"* nonnull dereferenceable(56) %6) #7
  %215 = load i8, i8* %69, align 1
  %216 = icmp eq i8 %215, 8
  br i1 %216, label %217, label %218

217:                                              ; preds = %204
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %12) #7
  br label %218

218:                                              ; preds = %217, %204
  %219 = load i8, i8* %67, align 1
  %220 = icmp eq i8 %219, 8
  br i1 %220, label %221, label %222

221:                                              ; preds = %218
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %10) #7
  br label %222

222:                                              ; preds = %218, %221
  %223 = load i64, i64* %11, align 8
  store i64 %223, i64* %9, align 8
  %224 = load i8, i8* %69, align 1
  %225 = icmp eq i8 %224, 8
  br i1 %225, label %226, label %227

226:                                              ; preds = %222
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %12) #7
  br label %227

227:                                              ; preds = %222, %226
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #7
  br label %228

228:                                              ; preds = %199, %227
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70) #7
  %229 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15FilterOperationEEEPhm(i64 24) #7
  %230 = bitcast i8* %229 to i32 (...)***
  %231 = getelementptr inbounds i8, i8* %229, i64 8
  %232 = bitcast i8* %231 to i32*
  store i32 10, i32* %232, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink19BlurFilterOperationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %230, align 8
  %233 = getelementptr inbounds i8, i8* %229, i64 12
  %234 = bitcast i8* %233 to i64*
  %235 = load i64, i64* %9, align 8
  store i64 %235, i64* %234, align 4
  %236 = and i64 %235, 280375465082880
  %237 = icmp eq i64 %236, 8796093022208
  br i1 %237, label %238, label %240

238:                                              ; preds = %228
  %239 = bitcast i8* %233 to %"class.blink::Length"*
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %239) #7
  br label %240

240:                                              ; preds = %228, %238
  %241 = getelementptr inbounds i8, i8* %229, i64 -4
  %242 = bitcast i8* %241 to i16*
  %243 = load atomic i16, i16* %242 monotonic, align 2
  %244 = or i16 %243, 1
  store atomic i16 %244, i16* %242 release, align 2
  store i8* %229, i8** %71, align 8
  %245 = load i32, i32* %18, align 4
  %246 = load i32, i32* %17, align 8
  %247 = icmp eq i32 %245, %246
  br i1 %247, label %261, label %248, !prof !3

248:                                              ; preds = %240
  %249 = ptrtoint i8* %229 to i64
  %250 = load %"class.blink::Member.466"*, %"class.blink::Member.466"** %16, align 8
  %251 = zext i32 %245 to i64
  %252 = getelementptr inbounds %"class.blink::Member.466", %"class.blink::Member.466"* %250, i64 %251
  %253 = bitcast %"class.blink::Member.466"* %252 to i64*
  store atomic i64 %249, i64* %253 monotonic, align 8
  %254 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %258, label %256

256:                                              ; preds = %248
  %257 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %229) #7
  br label %258

258:                                              ; preds = %256, %248
  %259 = load i32, i32* %18, align 4
  %260 = add i32 %259, 1
  store i32 %260, i32* %18, align 4
  br label %262

261:                                              ; preds = %240
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_15FilterOperationEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPNS1_19BlurFilterOperationEEEvOT_(%"class.WTF::Vector.463"* %65, %"class.blink::BlurFilterOperation"** nonnull dereferenceable(8) %13) #7
  br label %262

262:                                              ; preds = %258, %261
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #7
  %263 = load i8, i8* %67, align 1
  %264 = icmp eq i8 %263, 8
  br i1 %264, label %265, label %266

265:                                              ; preds = %262
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %10) #7
  br label %266

266:                                              ; preds = %262, %265
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #7
  br label %305

267:                                              ; preds = %85
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %57) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %76, i8 -1, i64 16, i1 false)
  store i32 -1431655766, i32* %58, align 4
  store i32 -1431655766, i32* %59, align 4
  store i32 -1431655766, i32* %60, align 4
  %268 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %81, i64 2, i32 2
  %269 = bitcast i8* %268 to %"class.WTF::Vector"*
  %270 = call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %269, i32 0) #7
  %271 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %270, i64 0, i32 0, i32 0
  %272 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %271, align 8
  call void @_ZN5blink21StyleBuilderConverter13ConvertShadowERKNS_25CSSToLengthConversionDataEPNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::ShadowData"* nonnull sret %14, %"class.blink::CSSToLengthConversionData"* nonnull dereferenceable(56) %6, %"class.blink::StyleResolverState"* null, %"class.blink::CSSValue"* dereferenceable(3) %272) #7
  %273 = load i64, i64* %62, align 4
  %274 = and i64 %273, -4294967296
  %275 = icmp eq i64 %274, 631360192512
  br i1 %275, label %276, label %277

276:                                              ; preds = %267
  store i64 4278190080, i64* %62, align 4
  br label %277

277:                                              ; preds = %276, %267
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #7
  %278 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15FilterOperationEEEPhm(i64 40) #7
  %279 = bitcast i8* %278 to i32 (...)***
  %280 = getelementptr inbounds i8, i8* %278, i64 8
  %281 = bitcast i8* %280 to i32*
  store i32 11, i32* %281, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink25DropShadowFilterOperationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %279, align 8
  %282 = getelementptr inbounds i8, i8* %278, i64 12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %282, i8* nonnull align 4 %57, i64 28, i1 false) #7
  %283 = getelementptr inbounds i8, i8* %278, i64 -4
  %284 = bitcast i8* %283 to i16*
  %285 = load atomic i16, i16* %284 monotonic, align 2
  %286 = or i16 %285, 1
  store atomic i16 %286, i16* %284 release, align 2
  store i8* %278, i8** %64, align 8
  %287 = load i32, i32* %18, align 4
  %288 = load i32, i32* %17, align 8
  %289 = icmp eq i32 %287, %288
  br i1 %289, label %303, label %290, !prof !3

290:                                              ; preds = %277
  %291 = ptrtoint i8* %278 to i64
  %292 = load %"class.blink::Member.466"*, %"class.blink::Member.466"** %16, align 8
  %293 = zext i32 %287 to i64
  %294 = getelementptr inbounds %"class.blink::Member.466", %"class.blink::Member.466"* %292, i64 %293
  %295 = bitcast %"class.blink::Member.466"* %294 to i64*
  store atomic i64 %291, i64* %295 monotonic, align 8
  %296 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %297 = icmp eq i32 %296, 0
  br i1 %297, label %300, label %298

298:                                              ; preds = %290
  %299 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %278) #7
  br label %300

300:                                              ; preds = %298, %290
  %301 = load i32, i32* %18, align 4
  %302 = add i32 %301, 1
  store i32 %302, i32* %18, align 4
  br label %304

303:                                              ; preds = %277
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_15FilterOperationEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPNS1_25DropShadowFilterOperationEEEvOT_(%"class.WTF::Vector.463"* %65, %"class.blink::DropShadowFilterOperation"** nonnull dereferenceable(8) %15) #7
  br label %304

304:                                              ; preds = %300, %303
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #7
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %57) #7
  br label %305

305:                                              ; preds = %85, %152, %198, %266, %304, %78
  %306 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %79, i64 1
  %307 = icmp eq %"class.blink::Member"* %306, %54
  br i1 %307, label %77, label %78

308:                                              ; preds = %3, %77
  ret void
}

declare void @_ZN5blink25CSSToLengthConversionData9FontSizesC1EffPKNS_4FontEf(%"class.blink::CSSToLengthConversionData::FontSizes"*, float, float, %"class.blink::Font"*, float) unnamed_addr #3

declare void @_ZN5blink25CSSToLengthConversionDataC1EPKNS_13ComputedStyleERKNS0_9FontSizesERKNS0_12ViewportSizeEf(%"class.blink::CSSToLengthConversionData"*, %"class.blink::ComputedStyle"*, %"class.blink::CSSToLengthConversionData::FontSizes"* dereferenceable(24), %"class.blink::CSSToLengthConversionData::ViewportSize"* dereferenceable(16), float) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #7
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #7
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #7
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #7
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member"*, %"class.blink::Member"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %24, i64 %25
  ret %"class.blink::Member"* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

declare void @_ZNK5blink8Document8CountUseENS_5mojom10WebFeatureE(%"class.blink::Document"*, i32) local_unnamed_addr #3

declare void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #3

declare void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN5blink24ReferenceFilterOperationC1ERKN3WTF12AtomicStringEPNS_11SVGResourceE(%"class.blink::ReferenceFilterOperation"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::SVGResource"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15FilterOperationEEEPhm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #7
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #7
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15FilterOperationEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15FilterOperationEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15FilterOperationEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #7
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15FilterOperationEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #5 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #7
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #7
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #7
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #7
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* %21, i8* %22) #7
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #7
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.3, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #7
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #7
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #7
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !3

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #7
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #3

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #3

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #3

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15FilterOperationEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::FilterOperation"*
  %4 = bitcast i8* %1 to void (%"class.blink::FilterOperation"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::FilterOperation"*, %"class.blink::Visitor"*)**, void (%"class.blink::FilterOperation"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::FilterOperation"*, %"class.blink::Visitor"*)*, void (%"class.blink::FilterOperation"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::FilterOperation"*, %"class.blink::Visitor"*)*, void (%"class.blink::FilterOperation"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::FilterOperation"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15FilterOperationEE8FinalizeEPv(i8*) #1 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::FilterOperation"*
  %3 = bitcast i8* %0 to void (%"class.blink::FilterOperation"*)***
  %4 = load void (%"class.blink::FilterOperation"*)**, void (%"class.blink::FilterOperation"*)*** %3, align 8
  %5 = load void (%"class.blink::FilterOperation"*)*, void (%"class.blink::FilterOperation"*)** %4, align 8
  tail call void %5(%"class.blink::FilterOperation"* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15FilterOperationEE7GetNameEPKv(i8*) #1 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_15FilterOperationEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPNS1_24ReferenceFilterOperationEEEvOT_(%"class.WTF::Vector.463"*, %"class.blink::ReferenceFilterOperation"** dereferenceable(8)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.463", %"class.WTF::Vector.463"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.463", %"class.WTF::Vector.463"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_15FilterOperationEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.463"* %0, i32 %14) #7
  %15 = getelementptr inbounds %"class.WTF::Vector.463", %"class.WTF::Vector.463"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.466"*, %"class.blink::Member.466"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.466", %"class.blink::Member.466"* %16, i64 %18
  %20 = bitcast %"class.blink::ReferenceFilterOperation"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.466"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #7
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_15FilterOperationEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.463"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.463", %"class.WTF::Vector.463"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !4

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.463", %"class.WTF::Vector.463"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.466"*, %"class.blink::Member.466"** %8, align 8
  %10 = icmp eq %"class.blink::Member.466"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_15FilterOperationEEEEEmm(i64 %11) #7
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_15FilterOperationEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #7
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.463"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #7
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.466"*, %"class.blink::Member.466"** %8, align 8
  %26 = icmp eq %"class.blink::Member.466"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.466"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #7
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #7
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #7
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5, i64 0, i64 0)) #7
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #7
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_15FilterOperationEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.463"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_15FilterOperationEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.463"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.463"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.463", %"class.WTF::Vector.463"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.463"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.463", %"class.WTF::Vector.463"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #7
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #7
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_15FilterOperationEEEEEmm(i64 %14) #7
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_15FilterOperationEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #7
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.463", %"class.WTF::Vector.463"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.466"*, %"class.blink::Member.466"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.463", %"class.WTF::Vector.463"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member.466"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.466"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !4

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.463"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #7
  %33 = bitcast %"class.WTF::Vector.463"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #7
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #7
  %42 = bitcast %"class.WTF::Vector.463"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.463", %"class.WTF::Vector.463"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #7
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_15FilterOperationEEEEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.6, i64 0, i64 0), i8* %11, i8* %12) #7
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.7, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #7
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_15FilterOperationEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #7
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #7
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.9, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #7
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_15FilterOperationEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_15FilterOperationEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #7
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #7
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_15FilterOperationEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_15FilterOperationEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_15FilterOperationEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #7
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([171 x i8], [171 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_15FilterOperationEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_15FilterOperationEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.466"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.466", %"class.blink::Member.466"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.466"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15FilterOperationEE5TraceEPNS_7VisitorEPKv) #7
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_15FilterOperationEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #1 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8 1 }
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #3

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #3

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #3

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink31BasicColorMatrixFilterOperationD0Ev(%"class.blink::BasicColorMatrixFilterOperation"*) unnamed_addr #5 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink15FilterOperation5TraceEPNS_7VisitorE(%"class.blink::FilterOperation"*, %"class.blink::Visitor"*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink31BasicColorMatrixFilterOperationeqERKNS_15FilterOperationE(%"class.blink::BasicColorMatrixFilterOperation"*, %"class.blink::FilterOperation"* dereferenceable(16)) unnamed_addr #1 comdat align 2 {
  %3 = bitcast %"class.blink::BasicColorMatrixFilterOperation"* %0 to %"class.blink::FilterOperation"*
  %4 = bitcast %"class.blink::BasicColorMatrixFilterOperation"* %0 to i1 (%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"*)***
  %5 = load i1 (%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"*)**, i1 (%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"*)*, i1 (%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"*)** %5, i64 4
  %7 = load i1 (%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"*)*, i1 (%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::FilterOperation"* %3, %"class.blink::FilterOperation"* dereferenceable(16) %1) #7
  br i1 %8, label %9, label %16

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::BasicColorMatrixFilterOperation", %"class.blink::BasicColorMatrixFilterOperation"* %0, i64 0, i32 1
  %11 = load double, double* %10, align 8
  %12 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %1, i64 1
  %13 = bitcast %"class.blink::FilterOperation"* %12 to double*
  %14 = load double, double* %13, align 8
  %15 = fcmp oeq double %11, %14
  br label %16

16:                                               ; preds = %2, %9
  %17 = phi i1 [ %15, %9 ], [ false, %2 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15FilterOperation10IsSameTypeERKS0_(%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"* dereferenceable(16)) unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %4, %6
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15FilterOperation14AffectsOpacityEv(%"class.blink::FilterOperation"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15FilterOperation11MovesPixelsEv(%"class.blink::FilterOperation"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { <2 x float>, <2 x float> } @_ZNK5blink15FilterOperation7MapRectERKNS_9FloatRectE(%"class.blink::FilterOperation"*, %"class.blink::FloatRect"* dereferenceable(16)) unnamed_addr #1 comdat align 2 {
  %3 = bitcast %"class.blink::FloatRect"* %1 to <2 x float>*
  %4 = load <2 x float>, <2 x float>* %3, align 4
  %5 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %1, i64 0, i32 1
  %6 = bitcast %"class.blink::FloatSize"* %5 to <2 x float>*
  %7 = load <2 x float>, <2 x float>* %6, align 4
  %8 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %4, 0
  %9 = insertvalue { <2 x float>, <2 x float> } %8, <2 x float> %7, 1
  ret { <2 x float>, <2 x float> } %9
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_15FilterOperationEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPNS1_31BasicColorMatrixFilterOperationEEEvOT_(%"class.WTF::Vector.463"*, %"class.blink::BasicColorMatrixFilterOperation"** dereferenceable(8)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.463", %"class.WTF::Vector.463"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.463", %"class.WTF::Vector.463"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_15FilterOperationEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.463"* %0, i32 %14) #7
  %15 = getelementptr inbounds %"class.WTF::Vector.463", %"class.WTF::Vector.463"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.466"*, %"class.blink::Member.466"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.466", %"class.blink::Member.466"* %16, i64 %18
  %20 = bitcast %"class.blink::BasicColorMatrixFilterOperation"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.466"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #7
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15FilterOperationD2Ev(%"class.blink::FilterOperation"*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink37BasicComponentTransferFilterOperationD0Ev(%"class.blink::BasicComponentTransferFilterOperation"*) unnamed_addr #5 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink37BasicComponentTransferFilterOperationeqERKNS_15FilterOperationE(%"class.blink::BasicComponentTransferFilterOperation"*, %"class.blink::FilterOperation"* dereferenceable(16)) unnamed_addr #1 comdat align 2 {
  %3 = bitcast %"class.blink::BasicComponentTransferFilterOperation"* %0 to %"class.blink::FilterOperation"*
  %4 = bitcast %"class.blink::BasicComponentTransferFilterOperation"* %0 to i1 (%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"*)***
  %5 = load i1 (%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"*)**, i1 (%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"*)*, i1 (%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"*)** %5, i64 4
  %7 = load i1 (%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"*)*, i1 (%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::FilterOperation"* %3, %"class.blink::FilterOperation"* dereferenceable(16) %1) #7
  br i1 %8, label %9, label %16

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::BasicComponentTransferFilterOperation", %"class.blink::BasicComponentTransferFilterOperation"* %0, i64 0, i32 1
  %11 = load double, double* %10, align 8
  %12 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %1, i64 1
  %13 = bitcast %"class.blink::FilterOperation"* %12 to double*
  %14 = load double, double* %13, align 8
  %15 = fcmp oeq double %11, %14
  br label %16

16:                                               ; preds = %2, %9
  %17 = phi i1 [ %15, %9 ], [ false, %2 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink37BasicComponentTransferFilterOperation14AffectsOpacityEv(%"class.blink::BasicComponentTransferFilterOperation"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::BasicComponentTransferFilterOperation", %"class.blink::BasicComponentTransferFilterOperation"* %0, i64 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 7
  ret i1 %4
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_15FilterOperationEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPNS1_37BasicComponentTransferFilterOperationEEEvOT_(%"class.WTF::Vector.463"*, %"class.blink::BasicComponentTransferFilterOperation"** dereferenceable(8)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.463", %"class.WTF::Vector.463"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.463", %"class.WTF::Vector.463"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_15FilterOperationEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.463"* %0, i32 %14) #7
  %15 = getelementptr inbounds %"class.WTF::Vector.463", %"class.WTF::Vector.463"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.466"*, %"class.blink::Member.466"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.466", %"class.blink::Member.466"* %16, i64 %18
  %20 = bitcast %"class.blink::BasicComponentTransferFilterOperation"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.466"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #7
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_15FilterOperationEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPNS1_19BlurFilterOperationEEEvOT_(%"class.WTF::Vector.463"*, %"class.blink::BlurFilterOperation"** dereferenceable(8)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.463", %"class.WTF::Vector.463"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.463", %"class.WTF::Vector.463"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_15FilterOperationEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.463"* %0, i32 %14) #7
  %15 = getelementptr inbounds %"class.WTF::Vector.463", %"class.WTF::Vector.463"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.466"*, %"class.blink::Member.466"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.466", %"class.blink::Member.466"* %16, i64 %18
  %20 = bitcast %"class.blink::BlurFilterOperation"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.466"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #7
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_15FilterOperationEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPNS1_25DropShadowFilterOperationEEEvOT_(%"class.WTF::Vector.463"*, %"class.blink::DropShadowFilterOperation"** dereferenceable(8)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.463", %"class.WTF::Vector.463"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.463", %"class.WTF::Vector.463"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_15FilterOperationEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.463"* %0, i32 %14) #7
  %15 = getelementptr inbounds %"class.WTF::Vector.463", %"class.WTF::Vector.463"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.466"*, %"class.blink::Member.466"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.466", %"class.blink::Member.466"* %16, i64 %18
  %20 = bitcast %"class.blink::DropShadowFilterOperation"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.466"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #7
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2000, i32 1}
