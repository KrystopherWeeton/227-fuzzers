; ModuleID = '../../third_party/pdfium/core/fpdfapi/parser/cpdf_linearized_header.cpp'
source_filename = "../../third_party/pdfium/core/fpdfapi/parser/cpdf_linearized_header.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CPDF_LinearizedHeader = type <{ i64, i32, [4 x i8], i64, i32, [4 x i8], i64, i32, [4 x i8], i64, i64, i32, [4 x i8] }>
%class.CPDF_Dictionary = type { %class.CPDF_Object, i32, %"class.fxcrt::WeakPtr", %"class.std::__1::map" }
%class.CPDF_Object = type { %"class.fxcrt::Retainable", i32, i32 }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.fxcrt::WeakPtr" = type { %"class.fxcrt::RetainPtr.5" }
%"class.fxcrt::RetainPtr.5" = type { %"class.std::__1::unique_ptr.6" }
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* }
%"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle" = type { i64, %"class.std::__1::unique_ptr.57" }
%"class.std::__1::unique_ptr.57" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.fxcrt::StringPoolTemplate"* }
%"class.fxcrt::StringPoolTemplate" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.60", %"class.std::__1::__compressed_pair.68", %"class.std::__1::__compressed_pair.73", %"class.std::__1::__compressed_pair.75", [4 x i8] }>
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62", %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { i64 }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { float }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.19", %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%class.CPDF_SyntaxParser = type { %"class.fxcrt::RetainPtr", i64, i64, i64, %"class.fxcrt::WeakPtr", %"class.std::__1::vector", i64, i32, [257 x i8], i32, %"class.fxcrt::UnownedPtr" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr.1" }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %class.CPDF_ReadValidator* }
%class.CPDF_ReadValidator = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { i8* }
%"class.fxcrt::UnownedPtr" = type { %"class.std::__1::vector.14"* }
%"class.std::__1::vector.14" = type opaque
%"class.fxcrt::RetainPtr.27" = type { %"class.std::__1::unique_ptr.28" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %class.CPDF_Object* }
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr.44" }
%"class.fxcrt::RetainPtr.44" = type { %"class.std::__1::unique_ptr.45" }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%class.CPDF_IndirectObjectHolder = type { i32 (...)**, i32, %"class.std::__1::map.33", %"class.fxcrt::WeakPtr" }
%"class.std::__1::map.33" = type { %"class.std::__1::__tree.34" }
%"class.std::__1::__tree.34" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.35", %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%class.CPDF_Number = type { %class.CPDF_Object, %class.FX_Number }
%class.FX_Number = type { i8, i8, %union.anon }
%union.anon = type { i32 }
%class.CPDF_Array = type <{ %class.CPDF_Object, %"class.std::__1::vector.50", %"class.fxcrt::WeakPtr", i32, [4 x i8] }>
%"class.std::__1::vector.50" = type { %"class.std::__1::__vector_base.51" }
%"class.std::__1::__vector_base.51" = type { %"class.fxcrt::RetainPtr.27"*, %"class.fxcrt::RetainPtr.27"*, %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.fxcrt::RetainPtr.27"* }

@.str = private unnamed_addr constant [11 x i8] c"Linearized\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"L\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"P\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"T\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"N\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"E\00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c"O\00", align 1
@.str.7 = private unnamed_addr constant [7 x i8] c"endobj\00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c"H\00", align 1

@_ZN21CPDF_LinearizedHeaderC1EPK15CPDF_Dictionaryl = hidden unnamed_addr alias void (%class.CPDF_LinearizedHeader*, %class.CPDF_Dictionary*, i64), void (%class.CPDF_LinearizedHeader*, %class.CPDF_Dictionary*, i64)* @_ZN21CPDF_LinearizedHeaderC2EPK15CPDF_Dictionaryl
@_ZN21CPDF_LinearizedHeaderD1Ev = hidden unnamed_addr alias void (%class.CPDF_LinearizedHeader*), void (%class.CPDF_LinearizedHeader*)* @_ZN21CPDF_LinearizedHeaderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %class.CPDF_LinearizedHeader* @_ZN21CPDF_LinearizedHeader5ParseEP17CPDF_SyntaxParser(%class.CPDF_SyntaxParser*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.fxcrt::RetainPtr.27", align 8
  %3 = alloca %"class.fxcrt::ByteString", align 8
  %4 = alloca %"class.fxcrt::ByteString", align 8
  tail call void @_ZN17CPDF_SyntaxParser6SetPosEl(%class.CPDF_SyntaxParser* %0, i64 9) #8
  call void @_ZN17CPDF_SyntaxParser17GetIndirectObjectEP25CPDF_IndirectObjectHolderNS_9ParseTypeE(%"class.fxcrt::RetainPtr.27"* nonnull sret %2, %class.CPDF_SyntaxParser* %0, %class.CPDF_IndirectObjectHolder* null, i32 1) #8
  %5 = getelementptr inbounds %"class.fxcrt::RetainPtr.27", %"class.fxcrt::RetainPtr.27"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %class.CPDF_Object*, %class.CPDF_Object** %5, align 8
  %7 = icmp eq %class.CPDF_Object* %6, null
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  store %class.CPDF_Object* null, %class.CPDF_Object** %5, align 8
  br label %107

9:                                                ; preds = %1
  %10 = bitcast %class.CPDF_Object* %6 to %class.CPDF_Dictionary* (%class.CPDF_Object*)***
  %11 = load %class.CPDF_Dictionary* (%class.CPDF_Object*)**, %class.CPDF_Dictionary* (%class.CPDF_Object*)*** %10, align 8, !noalias !2
  %12 = getelementptr inbounds %class.CPDF_Dictionary* (%class.CPDF_Object*)*, %class.CPDF_Dictionary* (%class.CPDF_Object*)** %11, i64 27
  %13 = load %class.CPDF_Dictionary* (%class.CPDF_Object*)*, %class.CPDF_Dictionary* (%class.CPDF_Object*)** %12, align 8, !noalias !2
  %14 = call %class.CPDF_Dictionary* %13(%class.CPDF_Object* nonnull %6) #8, !noalias !2
  %15 = icmp eq %class.CPDF_Dictionary* %14, null
  br i1 %15, label %20, label %16

16:                                               ; preds = %9
  %17 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %14, i64 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8, !noalias !2
  %19 = add nsw i64 %18, 1
  store i64 %19, i64* %17, align 8, !noalias !2
  br label %20

20:                                               ; preds = %9, %16
  %21 = load %class.CPDF_Object*, %class.CPDF_Object** %5, align 8
  store %class.CPDF_Object* null, %class.CPDF_Object** %5, align 8
  %22 = icmp eq %class.CPDF_Object* %21, null
  br i1 %22, label %34, label %23

23:                                               ; preds = %20
  %24 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %21, i64 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = add nsw i64 %25, -1
  store i64 %26, i64* %24, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %28, label %34

28:                                               ; preds = %23
  %29 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %21, i64 0, i32 0
  %30 = bitcast %class.CPDF_Object* %21 to void (%"class.fxcrt::Retainable"*)***
  %31 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %31, i64 1
  %33 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %32, align 8
  call void %33(%"class.fxcrt::Retainable"* nonnull %29) #8
  br label %34

34:                                               ; preds = %20, %23, %28
  br i1 %15, label %107, label %35

35:                                               ; preds = %34
  %36 = bitcast %"class.fxcrt::ByteString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #8
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0)) #8
  %37 = call zeroext i1 @_ZNK15CPDF_Dictionary8KeyExistERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* nonnull %14, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %3) #8
  br i1 %37, label %38, label %48

38:                                               ; preds = %35
  %39 = call fastcc zeroext i1 @_ZN12_GLOBAL__N_129IsValidNumericDictionaryValueIlEEbPK15CPDF_DictionaryPKcT_b(%class.CPDF_Dictionary* nonnull %14, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  br i1 %39, label %40, label %48

40:                                               ; preds = %38
  %41 = call fastcc zeroext i1 @_ZN12_GLOBAL__N_129IsValidNumericDictionaryValueIjEEbPK15CPDF_DictionaryPKcT_b(%class.CPDF_Dictionary* nonnull %14, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i32 0, i1 zeroext false)
  br i1 %41, label %42, label %48

42:                                               ; preds = %40
  %43 = call fastcc zeroext i1 @_ZN12_GLOBAL__N_129IsValidNumericDictionaryValueIlEEbPK15CPDF_DictionaryPKcT_b(%class.CPDF_Dictionary* nonnull %14, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0))
  br i1 %43, label %44, label %48

44:                                               ; preds = %42
  %45 = call fastcc zeroext i1 @_ZN12_GLOBAL__N_129IsValidNumericDictionaryValueIjEEbPK15CPDF_DictionaryPKcT_b(%class.CPDF_Dictionary* nonnull %14, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i32 1, i1 zeroext true)
  br i1 %45, label %46, label %48

46:                                               ; preds = %44
  %47 = call fastcc zeroext i1 @_ZN12_GLOBAL__N_129IsValidNumericDictionaryValueIlEEbPK15CPDF_DictionaryPKcT_b(%class.CPDF_Dictionary* nonnull %14, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  br i1 %47, label %49, label %48

48:                                               ; preds = %35, %38, %40, %42, %44, %46
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #8
  br label %95

49:                                               ; preds = %46
  %50 = call fastcc zeroext i1 @_ZN12_GLOBAL__N_129IsValidNumericDictionaryValueIjEEbPK15CPDF_DictionaryPKcT_b(%class.CPDF_Dictionary* nonnull %14, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0), i32 1, i1 zeroext true)
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #8
  br i1 %50, label %51, label %95

51:                                               ; preds = %49
  %52 = bitcast %"class.fxcrt::ByteString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #8
  call void @_ZN17CPDF_SyntaxParser11GetNextWordEPb(%"class.fxcrt::ByteString"* nonnull sret %4, %class.CPDF_SyntaxParser* %0, i8* null) #8
  %53 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i64 0, i64 0)) #8
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #8
  br i1 %53, label %54, label %95

54:                                               ; preds = %51
  %55 = call i8* @_Znwm(i64 72) #9
  %56 = bitcast i8* %55 to %class.CPDF_LinearizedHeader*
  %57 = getelementptr inbounds %class.CPDF_SyntaxParser, %class.CPDF_SyntaxParser* %0, i64 0, i32 3
  %58 = load i64, i64* %57, align 8
  call void @_ZN21CPDF_LinearizedHeaderC2EPK15CPDF_Dictionaryl(%class.CPDF_LinearizedHeader* nonnull %56, %class.CPDF_Dictionary* nonnull %14, i64 %58)
  %59 = ptrtoint i8* %55 to i64
  %60 = call i64 @_ZNK17CPDF_SyntaxParser15GetDocumentSizeEv(%class.CPDF_SyntaxParser* %0) #8
  %61 = bitcast i8* %55 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = icmp eq i64 %62, %60
  br i1 %63, label %64, label %94

64:                                               ; preds = %54
  %65 = getelementptr inbounds i8, i8* %55, i64 8
  %66 = bitcast i8* %65 to i32*
  %67 = load i32, i32* %66, align 8
  %68 = icmp ult i32 %67, 2147483647
  br i1 %68, label %69, label %94

69:                                               ; preds = %64
  %70 = getelementptr inbounds i8, i8* %55, i64 24
  %71 = bitcast i8* %70 to i32*
  %72 = load i32, i32* %71, align 8
  %73 = icmp ult i32 %67, %72
  br i1 %73, label %74, label %94

74:                                               ; preds = %69
  %75 = getelementptr inbounds i8, i8* %55, i64 16
  %76 = bitcast i8* %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = icmp slt i64 %77, %60
  br i1 %78, label %79, label %94

79:                                               ; preds = %74
  %80 = getelementptr inbounds i8, i8* %55, i64 32
  %81 = bitcast i8* %80 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = icmp slt i64 %82, %60
  br i1 %83, label %84, label %94

84:                                               ; preds = %79
  %85 = getelementptr inbounds i8, i8* %55, i64 48
  %86 = bitcast i8* %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = icmp slt i64 %87, %60
  br i1 %88, label %89, label %94

89:                                               ; preds = %84
  %90 = getelementptr inbounds i8, i8* %55, i64 56
  %91 = bitcast i8* %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = icmp slt i64 %92, %60
  br i1 %93, label %95, label %94

94:                                               ; preds = %89, %84, %79, %74, %69, %64, %54
  call void @_ZdlPv(i8* nonnull %55) #9
  br label %95

95:                                               ; preds = %51, %49, %89, %48, %94
  %96 = phi i64 [ 0, %94 ], [ 0, %51 ], [ 0, %49 ], [ 0, %48 ], [ %59, %89 ]
  %97 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %14, i64 0, i32 0, i32 0, i32 1
  %98 = load i64, i64* %97, align 8
  %99 = add nsw i64 %98, -1
  store i64 %99, i64* %97, align 8
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %101, label %107

101:                                              ; preds = %95
  %102 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %14, i64 0, i32 0, i32 0
  %103 = bitcast %class.CPDF_Dictionary* %14 to void (%"class.fxcrt::Retainable"*)***
  %104 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %103, align 8
  %105 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %104, i64 1
  %106 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %105, align 8
  call void %106(%"class.fxcrt::Retainable"* nonnull %102) #8
  br label %107

107:                                              ; preds = %34, %8, %95, %101
  %108 = phi i64 [ %96, %95 ], [ %96, %101 ], [ 0, %34 ], [ 0, %8 ]
  %109 = inttoptr i64 %108 to %class.CPDF_LinearizedHeader*
  ret %class.CPDF_LinearizedHeader* %109
}

declare void @_ZN17CPDF_SyntaxParser6SetPosEl(%class.CPDF_SyntaxParser*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN17CPDF_SyntaxParser17GetIndirectObjectEP25CPDF_IndirectObjectHolderNS_9ParseTypeE(%"class.fxcrt::RetainPtr.27"* sret, %class.CPDF_SyntaxParser*, %class.CPDF_IndirectObjectHolder*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK15CPDF_Dictionary8KeyExistERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN12_GLOBAL__N_129IsValidNumericDictionaryValueIlEEbPK15CPDF_DictionaryPKcT_b(%class.CPDF_Dictionary*, i8*) unnamed_addr #0 {
  %3 = alloca %"class.fxcrt::ByteString", align 8
  %4 = alloca %"class.fxcrt::ByteString", align 8
  %5 = bitcast %"class.fxcrt::ByteString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %3, i8* %1) #8
  %6 = call zeroext i1 @_ZNK15CPDF_Dictionary8KeyExistERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %0, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %3) #8
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  br i1 %6, label %7, label %27

7:                                                ; preds = %2
  %8 = bitcast %"class.fxcrt::ByteString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #8
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %4, i8* %1) #8
  %9 = call %class.CPDF_Object* @_ZNK15CPDF_Dictionary12GetObjectForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %0, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %4) #8
  %10 = icmp eq %class.CPDF_Object* %9, null
  br i1 %10, label %17, label %11

11:                                               ; preds = %7
  %12 = bitcast %class.CPDF_Object* %9 to %class.CPDF_Number* (%class.CPDF_Object*)***
  %13 = load %class.CPDF_Number* (%class.CPDF_Object*)**, %class.CPDF_Number* (%class.CPDF_Object*)*** %12, align 8
  %14 = getelementptr inbounds %class.CPDF_Number* (%class.CPDF_Object*)*, %class.CPDF_Number* (%class.CPDF_Object*)** %13, i64 32
  %15 = load %class.CPDF_Number* (%class.CPDF_Object*)*, %class.CPDF_Number* (%class.CPDF_Object*)** %14, align 8
  %16 = call %class.CPDF_Number* %15(%class.CPDF_Object* nonnull %9) #8
  br label %17

17:                                               ; preds = %7, %11
  %18 = phi %class.CPDF_Number* [ %16, %11 ], [ null, %7 ]
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #8
  %19 = icmp eq %class.CPDF_Number* %18, null
  br i1 %19, label %27, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %class.CPDF_Number, %class.CPDF_Number* %18, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 4, !range !5
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %20
  %25 = call i32 @_ZNK11CPDF_Number10GetIntegerEv(%class.CPDF_Number* nonnull %18) #8
  %26 = icmp sgt i32 %25, 0
  br label %27

27:                                               ; preds = %20, %17, %24, %2
  %28 = phi i1 [ false, %2 ], [ false, %17 ], [ false, %20 ], [ %26, %24 ]
  ret i1 %28
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN12_GLOBAL__N_129IsValidNumericDictionaryValueIjEEbPK15CPDF_DictionaryPKcT_b(%class.CPDF_Dictionary*, i8*, i32, i1 zeroext) unnamed_addr #0 {
  %5 = alloca %"class.fxcrt::ByteString", align 8
  %6 = alloca %"class.fxcrt::ByteString", align 8
  %7 = bitcast %"class.fxcrt::ByteString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #8
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %5, i8* %1) #8
  %8 = call zeroext i1 @_ZNK15CPDF_Dictionary8KeyExistERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %0, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %5) #8
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #8
  br i1 %8, label %11, label %9

9:                                                ; preds = %4
  %10 = xor i1 %3, true
  br label %33

11:                                               ; preds = %4
  %12 = bitcast %"class.fxcrt::ByteString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #8
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %6, i8* %1) #8
  %13 = call %class.CPDF_Object* @_ZNK15CPDF_Dictionary12GetObjectForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %0, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %6) #8
  %14 = icmp eq %class.CPDF_Object* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %11
  %16 = bitcast %class.CPDF_Object* %13 to %class.CPDF_Number* (%class.CPDF_Object*)***
  %17 = load %class.CPDF_Number* (%class.CPDF_Object*)**, %class.CPDF_Number* (%class.CPDF_Object*)*** %16, align 8
  %18 = getelementptr inbounds %class.CPDF_Number* (%class.CPDF_Object*)*, %class.CPDF_Number* (%class.CPDF_Object*)** %17, i64 32
  %19 = load %class.CPDF_Number* (%class.CPDF_Object*)*, %class.CPDF_Number* (%class.CPDF_Object*)** %18, align 8
  %20 = call %class.CPDF_Number* %19(%class.CPDF_Object* nonnull %13) #8
  br label %21

21:                                               ; preds = %11, %15
  %22 = phi %class.CPDF_Number* [ %20, %15 ], [ null, %11 ]
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #8
  %23 = icmp eq %class.CPDF_Number* %22, null
  br i1 %23, label %33, label %24

24:                                               ; preds = %21
  %25 = getelementptr inbounds %class.CPDF_Number, %class.CPDF_Number* %22, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 4, !range !5
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %33, label %28

28:                                               ; preds = %24
  %29 = call i32 @_ZNK11CPDF_Number10GetIntegerEv(%class.CPDF_Number* nonnull %22) #8
  %30 = icmp sgt i32 %29, -1
  %31 = icmp uge i32 %29, %2
  %32 = and i1 %30, %31
  br label %33

33:                                               ; preds = %24, %21, %28, %9
  %34 = phi i1 [ %10, %9 ], [ false, %21 ], [ false, %24 ], [ %32, %28 ]
  ret i1 %34
}

; Function Attrs: nounwind
declare void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN17CPDF_SyntaxParser11GetNextWordEPb(%"class.fxcrt::ByteString"* sret, %class.CPDF_SyntaxParser*, i8*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare i64 @_ZNK17CPDF_SyntaxParser15GetDocumentSizeEv(%class.CPDF_SyntaxParser*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21CPDF_LinearizedHeaderC2EPK15CPDF_Dictionaryl(%class.CPDF_LinearizedHeader* nocapture, %class.CPDF_Dictionary*, i64) unnamed_addr #0 align 2 {
  %4 = alloca %"class.fxcrt::ByteString", align 8
  %5 = alloca %"class.fxcrt::ByteString", align 8
  %6 = alloca %"class.fxcrt::ByteString", align 8
  %7 = alloca %"class.fxcrt::ByteString", align 8
  %8 = alloca %"class.fxcrt::ByteString", align 8
  %9 = alloca %"class.fxcrt::ByteString", align 8
  %10 = alloca %"class.fxcrt::ByteString", align 8
  %11 = getelementptr inbounds %class.CPDF_LinearizedHeader, %class.CPDF_LinearizedHeader* %0, i64 0, i32 0
  %12 = bitcast %"class.fxcrt::ByteString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #8
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #8
  %13 = call i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %1, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %4) #8
  %14 = sext i32 %13 to i64
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #8
  store i64 %14, i64* %11, align 8
  %15 = getelementptr inbounds %class.CPDF_LinearizedHeader, %class.CPDF_LinearizedHeader* %0, i64 0, i32 1
  %16 = bitcast %"class.fxcrt::ByteString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #8
  %17 = call i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %1, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %5) #8
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  store i32 %17, i32* %15, align 8
  %18 = getelementptr inbounds %class.CPDF_LinearizedHeader, %class.CPDF_LinearizedHeader* %0, i64 0, i32 3
  %19 = bitcast %"class.fxcrt::ByteString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #8
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #8
  %20 = call i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %1, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %6) #8
  %21 = sext i32 %20 to i64
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #8
  store i64 %21, i64* %18, align 8
  %22 = getelementptr inbounds %class.CPDF_LinearizedHeader, %class.CPDF_LinearizedHeader* %0, i64 0, i32 4
  %23 = bitcast %"class.fxcrt::ByteString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #8
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #8
  %24 = call i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %1, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %7) #8
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #8
  store i32 %24, i32* %22, align 8
  %25 = getelementptr inbounds %class.CPDF_LinearizedHeader, %class.CPDF_LinearizedHeader* %0, i64 0, i32 6
  %26 = bitcast %"class.fxcrt::ByteString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #8
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #8
  %27 = call i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %1, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %8) #8
  %28 = sext i32 %27 to i64
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #8
  store i64 %28, i64* %25, align 8
  %29 = getelementptr inbounds %class.CPDF_LinearizedHeader, %class.CPDF_LinearizedHeader* %0, i64 0, i32 7
  %30 = bitcast %"class.fxcrt::ByteString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #8
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %9, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #8
  %31 = call i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %1, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %9) #8
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #8
  store i32 %31, i32* %29, align 8
  %32 = getelementptr inbounds %class.CPDF_LinearizedHeader, %class.CPDF_LinearizedHeader* %0, i64 0, i32 9
  store i64 %2, i64* %32, align 8
  %33 = getelementptr inbounds %class.CPDF_LinearizedHeader, %class.CPDF_LinearizedHeader* %0, i64 0, i32 10
  store i64 0, i64* %33, align 8
  %34 = getelementptr inbounds %class.CPDF_LinearizedHeader, %class.CPDF_LinearizedHeader* %0, i64 0, i32 11
  store i32 0, i32* %34, align 8
  %35 = bitcast %"class.fxcrt::ByteString"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #8
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %10, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #8
  %36 = call %class.CPDF_Array* @_ZNK15CPDF_Dictionary11GetArrayForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %1, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %10) #8
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %10) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #8
  %37 = icmp eq %class.CPDF_Array* %36, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %3
  %39 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %36, i64 0, i32 1
  %40 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %36, i64 0, i32 1, i32 0, i32 1
  %41 = bitcast %"class.fxcrt::RetainPtr.27"** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.std::__1::vector.50"* %39 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = sub i64 %42, %44
  %46 = ashr exact i64 %45, 3
  switch i64 %46, label %55 [
    i64 4, label %47
    i64 2, label %47
  ]

47:                                               ; preds = %38, %38
  %48 = call i32 @_ZNK10CPDF_Array12GetIntegerAtEm(%class.CPDF_Array* nonnull %36, i64 0) #8
  %49 = icmp sgt i32 %48, 0
  %50 = select i1 %49, i32 %48, i32 0
  %51 = zext i32 %50 to i64
  store i64 %51, i64* %33, align 8
  %52 = call i32 @_ZNK10CPDF_Array12GetIntegerAtEm(%class.CPDF_Array* nonnull %36, i64 1) #8
  %53 = icmp sgt i32 %52, -1
  br i1 %53, label %54, label %55

54:                                               ; preds = %47
  store i32 %52, i32* %34, align 8
  br label %55

55:                                               ; preds = %3, %47, %54, %38
  ret void
}

declare i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

declare %class.CPDF_Array* @_ZNK15CPDF_Dictionary11GetArrayForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

declare i32 @_ZNK10CPDF_Array12GetIntegerAtEm(%class.CPDF_Array*, i64) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN21CPDF_LinearizedHeaderD2Ev(%class.CPDF_LinearizedHeader* nocapture) unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK21CPDF_LinearizedHeader12HasHintTableEv(%class.CPDF_LinearizedHeader* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.CPDF_LinearizedHeader, %class.CPDF_LinearizedHeader* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 8
  %4 = icmp ugt i32 %3, 1
  br i1 %4, label %5, label %13

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CPDF_LinearizedHeader, %class.CPDF_LinearizedHeader* %0, i64 0, i32 10
  %7 = load i64, i64* %6, align 8
  %8 = icmp sgt i64 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %5
  %10 = getelementptr inbounds %class.CPDF_LinearizedHeader, %class.CPDF_LinearizedHeader* %0, i64 0, i32 11
  %11 = load i32, i32* %10, align 8
  %12 = icmp ne i32 %11, 0
  br label %13

13:                                               ; preds = %9, %5, %1
  %14 = phi i1 [ false, %5 ], [ false, %1 ], [ %12, %9 ]
  ret i1 %14
}

declare zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"*, i8*) local_unnamed_addr #1

declare %class.CPDF_Object* @_ZNK15CPDF_Dictionary12GetObjectForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

declare i32 @_ZNK11CPDF_Number10GetIntegerEv(%class.CPDF_Number*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_Z12ToDictionaryN5fxcrt9RetainPtrI11CPDF_ObjectEE: argument 0"}
!4 = distinct !{!4, !"_Z12ToDictionaryN5fxcrt9RetainPtrI11CPDF_ObjectEE"}
!5 = !{i8 0, i8 2}
