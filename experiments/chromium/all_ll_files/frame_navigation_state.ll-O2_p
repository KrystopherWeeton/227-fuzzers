; ModuleID = '../../chrome/browser/extensions/api/web_navigation/frame_navigation_state.cc'
source_filename = "../../chrome/browser/extensions/api/web_navigation/frame_navigation_state.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.extensions::FrameNavigationState" = type { %"class.content::RenderDocumentHostUserData", i8, i8, i8, %class.GURL }
%"class.content::RenderDocumentHostUserData" = type { %"class.base::SupportsUserData::Data" }
%"class.base::SupportsUserData::Data" = type { i32 (...)** }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"class.content::RenderFrameHost" = type { %"class.IPC::Listener", %"class.IPC::Sender" }
%"class.IPC::Listener" = type { i32 (...)** }
%"class.IPC::Sender" = type { i32 (...)** }
%"class.std::__1::allocator" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZN10extensions20FrameNavigationState23allow_extension_scheme_E = hidden local_unnamed_addr global i8 0, align 1
@_ZN10extensions20FrameNavigationState12kUserDataKeyE = hidden local_unnamed_addr constant i32 0, align 4
@_ZTVN10extensions20FrameNavigationStateE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.extensions::FrameNavigationState"*)* @_ZN10extensions20FrameNavigationStateD2Ev to i8*), i8* bitcast (void (%"class.extensions::FrameNavigationState"*)* @_ZN10extensions20FrameNavigationStateD0Ev to i8*), i8* bitcast (void ()* @_ZN4base16SupportsUserData4Data5CloneEv to i8*)] }, align 8
@_ZN10extensions12_GLOBAL__N_113kValidSchemesE = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN7content15kChromeUISchemeE, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kHttpSchemeE, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url12kHttpsSchemeE, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kFileSchemeE, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url10kFtpSchemeE, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url17kJavaScriptSchemeE, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kDataSchemeE, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url17kFileSystemSchemeE, i32 0, i32 0)], align 16
@_ZN10extensions16kExtensionSchemeE = external constant [0 x i8], align 1
@_ZN7content15kChromeUISchemeE = external constant [0 x i8], align 1
@_ZN3url11kHttpSchemeE = external constant [0 x i8], align 1
@_ZN3url12kHttpsSchemeE = external constant [0 x i8], align 1
@_ZN3url11kFileSchemeE = external constant [0 x i8], align 1
@_ZN3url10kFtpSchemeE = external constant [0 x i8], align 1
@_ZN3url17kJavaScriptSchemeE = external constant [0 x i8], align 1
@_ZN3url11kDataSchemeE = external constant [0 x i8], align 1
@_ZN3url17kFileSystemSchemeE = external constant [0 x i8], align 1

@_ZN10extensions20FrameNavigationStateC1EPN7content15RenderFrameHostE = hidden unnamed_addr alias void (%"class.extensions::FrameNavigationState"*, %"class.content::RenderFrameHost"*), void (%"class.extensions::FrameNavigationState"*, %"class.content::RenderFrameHost"*)* @_ZN10extensions20FrameNavigationStateC2EPN7content15RenderFrameHostE
@_ZN10extensions20FrameNavigationStateD1Ev = hidden unnamed_addr alias void (%"class.extensions::FrameNavigationState"*), void (%"class.extensions::FrameNavigationState"*)* @_ZN10extensions20FrameNavigationStateD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions20FrameNavigationStateC2EPN7content15RenderFrameHostE(%"class.extensions::FrameNavigationState"*, %"class.content::RenderFrameHost"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.extensions::FrameNavigationState", %"class.extensions::FrameNavigationState"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN10extensions20FrameNavigationStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.extensions::FrameNavigationState", %"class.extensions::FrameNavigationState"* %0, i64 0, i32 1
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"class.extensions::FrameNavigationState", %"class.extensions::FrameNavigationState"* %0, i64 0, i32 2
  store i8 0, i8* %5, align 1
  %6 = getelementptr inbounds %"class.extensions::FrameNavigationState", %"class.extensions::FrameNavigationState"* %0, i64 0, i32 3
  store i8 0, i8* %6, align 2
  %7 = getelementptr inbounds %"class.extensions::FrameNavigationState", %"class.extensions::FrameNavigationState"* %0, i64 0, i32 4
  tail call void @_ZN4GURLC1Ev(%class.GURL* %7) #8
  ret void
}

declare void @_ZN4GURLC1Ev(%class.GURL*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions20FrameNavigationStateD2Ev(%"class.extensions::FrameNavigationState"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::FrameNavigationState", %"class.extensions::FrameNavigationState"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN10extensions20FrameNavigationStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.extensions::FrameNavigationState", %"class.extensions::FrameNavigationState"* %0, i64 0, i32 4
  tail call void @_ZN4GURLD1Ev(%class.GURL* %3) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions20FrameNavigationStateD0Ev(%"class.extensions::FrameNavigationState"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::FrameNavigationState", %"class.extensions::FrameNavigationState"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN10extensions20FrameNavigationStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.extensions::FrameNavigationState", %"class.extensions::FrameNavigationState"* %0, i64 0, i32 4
  tail call void @_ZN4GURLD1Ev(%class.GURL* %3) #8
  %4 = bitcast %"class.extensions::FrameNavigationState"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10extensions20FrameNavigationState10IsValidUrlERK4GURL(%class.GURL* dereferenceable(120)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::allocator", align 1
  %3 = alloca %"class.std::__1::allocator", align 1
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %7 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 2, i32 0, i32 1
  %8 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 0
  %9 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 2, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::allocator", %"class.std::__1::allocator"* %3, i64 0, i32 0
  %11 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %17

15:                                               ; preds = %48
  %16 = icmp eq i64 %49, 8
  br i1 %16, label %50, label %17

17:                                               ; preds = %15, %1
  %18 = phi i64 [ 0, %1 ], [ %49, %15 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8
  %19 = load i32, i32* %7, align 4, !noalias !2
  %20 = icmp slt i32 %19, 1
  br i1 %20, label %21, label %22

21:                                               ; preds = %17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #8, !alias.scope !2
  br label %28

22:                                               ; preds = %17
  %23 = load i32, i32* %9, align 4, !noalias !2
  %24 = sext i32 %23 to i64
  %25 = sext i32 %19 to i64
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #8, !noalias !2
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %4, %"class.std::__1::basic_string"* dereferenceable(24) %8, i64 %24, i64 %25, %"class.std::__1::allocator"* nonnull dereferenceable(1) %3) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #8, !noalias !2
  %26 = load i8, i8* %12, align 1
  %27 = load i64, i64* %13, align 8
  br label %28

28:                                               ; preds = %21, %22
  %29 = phi i64 [ 0, %21 ], [ %27, %22 ]
  %30 = phi i8 [ 0, %21 ], [ %26, %22 ]
  %31 = getelementptr inbounds [8 x i8*], [8 x i8*]* @_ZN10extensions12_GLOBAL__N_113kValidSchemesE, i64 0, i64 %18
  %32 = load i8*, i8** %31, align 8
  %33 = call i64 @strlen(i8* %32) #8
  %34 = icmp slt i8 %30, 0
  %35 = zext i8 %30 to i64
  %36 = select i1 %34, i64 %29, i64 %35
  %37 = icmp eq i64 %33, %36
  br i1 %37, label %38, label %42

38:                                               ; preds = %28
  %39 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %4, i64 0, i64 -1, i8* %32, i64 %33) #8
  %40 = icmp eq i32 %39, 0
  %41 = load i8, i8* %12, align 1
  br label %42

42:                                               ; preds = %28, %38
  %43 = phi i8 [ %41, %38 ], [ %30, %28 ]
  %44 = phi i1 [ %40, %38 ], [ false, %28 ]
  %45 = icmp slt i8 %43, 0
  br i1 %45, label %46, label %48

46:                                               ; preds = %42
  %47 = load i8*, i8** %14, align 8
  call void @_ZdlPv(i8* %47) #9
  br label %48

48:                                               ; preds = %42, %46
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8
  %49 = add nuw nsw i64 %18, 1
  br i1 %44, label %97, label %15

50:                                               ; preds = %15
  %51 = call zeroext i1 @_ZNK4GURL12IsAboutBlankEv(%class.GURL* %0) #8
  br i1 %51, label %97, label %52

52:                                               ; preds = %50
  %53 = call zeroext i1 @_ZNK4GURL13IsAboutSrcdocEv(%class.GURL* %0) #8
  br i1 %53, label %97, label %54

54:                                               ; preds = %52
  %55 = load i8, i8* @_ZN10extensions20FrameNavigationState23allow_extension_scheme_E, align 1, !range !7
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %97, label %57

57:                                               ; preds = %54
  %58 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58) #8
  %59 = load i32, i32* %7, align 4, !noalias !8
  %60 = icmp slt i32 %59, 1
  br i1 %60, label %61, label %64

61:                                               ; preds = %57
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 0, i64 24, i1 false) #8, !alias.scope !8
  %62 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %63 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions16kExtensionSchemeE, i64 0, i64 0)) #8
  br label %78

64:                                               ; preds = %57
  %65 = load i32, i32* %9, align 4, !noalias !8
  %66 = sext i32 %65 to i64
  %67 = sext i32 %59 to i64
  %68 = getelementptr inbounds %"class.std::__1::allocator", %"class.std::__1::allocator"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %68) #8, !noalias !8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %5, %"class.std::__1::basic_string"* dereferenceable(24) %8, i64 %66, i64 %67, %"class.std::__1::allocator"* nonnull dereferenceable(1) %2) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %68) #8, !noalias !8
  %69 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %69, i64 0, i32 1, i32 0
  %71 = load i8, i8* %70, align 1
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %73 = load i64, i64* %72, align 8
  %74 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions16kExtensionSchemeE, i64 0, i64 0)) #8
  %75 = icmp slt i8 %71, 0
  %76 = zext i8 %71 to i64
  %77 = select i1 %75, i64 %73, i64 %76
  br label %78

78:                                               ; preds = %64, %61
  %79 = phi i64 [ %63, %61 ], [ %74, %64 ]
  %80 = phi i8 [ 0, %61 ], [ %71, %64 ]
  %81 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %62, %61 ], [ %69, %64 ]
  %82 = phi i64 [ 0, %61 ], [ %77, %64 ]
  %83 = icmp eq i64 %79, %82
  br i1 %83, label %84, label %89

84:                                               ; preds = %78
  %85 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %81, i64 0, i32 1, i32 0
  %86 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %5, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions16kExtensionSchemeE, i64 0, i64 0), i64 %79) #8
  %87 = icmp eq i32 %86, 0
  %88 = load i8, i8* %85, align 1
  br label %89

89:                                               ; preds = %78, %84
  %90 = phi i8 [ %80, %78 ], [ %88, %84 ]
  %91 = phi i1 [ false, %78 ], [ %87, %84 ]
  %92 = icmp slt i8 %90, 0
  br i1 %92, label %93, label %96

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load i8*, i8** %94, align 8
  call void @_ZdlPv(i8* %95) #9
  br label %96

96:                                               ; preds = %89, %93
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58) #8
  br label %97

97:                                               ; preds = %48, %54, %50, %52, %96
  %98 = phi i1 [ %91, %96 ], [ true, %52 ], [ true, %50 ], [ false, %54 ], [ true, %48 ]
  ret i1 %98
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare zeroext i1 @_ZNK4GURL12IsAboutBlankEv(%class.GURL*) local_unnamed_addr #1

declare zeroext i1 @_ZNK4GURL13IsAboutSrcdocEv(%class.GURL*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK10extensions20FrameNavigationState13CanSendEventsEv(%"class.extensions::FrameNavigationState"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::FrameNavigationState", %"class.extensions::FrameNavigationState"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8, !range !7
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.extensions::FrameNavigationState", %"class.extensions::FrameNavigationState"* %0, i64 0, i32 4
  %7 = tail call zeroext i1 @_ZN10extensions20FrameNavigationState10IsValidUrlERK4GURL(%class.GURL* dereferenceable(120) %6)
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i1 [ false, %1 ], [ %7, %5 ]
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions20FrameNavigationState25StartTrackingDocumentLoadERK4GURLbbb(%"class.extensions::FrameNavigationState"*, %class.GURL* dereferenceable(120), i1 zeroext, i1 zeroext, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = zext i1 %4 to i8
  %7 = getelementptr inbounds %"class.extensions::FrameNavigationState", %"class.extensions::FrameNavigationState"* %0, i64 0, i32 1
  store i8 %6, i8* %7, align 8
  %8 = getelementptr inbounds %"class.extensions::FrameNavigationState", %"class.extensions::FrameNavigationState"* %0, i64 0, i32 4
  %9 = tail call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %8, %class.GURL* dereferenceable(120) %1) #8
  %10 = or i1 %2, %3
  br i1 %10, label %14, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.extensions::FrameNavigationState", %"class.extensions::FrameNavigationState"* %0, i64 0, i32 2
  store i8 1, i8* %12, align 1
  %13 = getelementptr inbounds %"class.extensions::FrameNavigationState", %"class.extensions::FrameNavigationState"* %0, i64 0, i32 3
  store i8 1, i8* %13, align 2
  br label %14

14:                                               ; preds = %5, %11
  ret void
}

declare dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions20FrameNavigationState6GetUrlEv(%class.GURL* noalias sret, %"class.extensions::FrameNavigationState"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.extensions::FrameNavigationState", %"class.extensions::FrameNavigationState"* %1, i64 0, i32 4
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %0, %class.GURL* dereferenceable(120) %3) #8
  ret void
}

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN10extensions20FrameNavigationState23SetErrorOccurredInFrameEv(%"class.extensions::FrameNavigationState"* nocapture) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.extensions::FrameNavigationState", %"class.extensions::FrameNavigationState"* %0, i64 0, i32 1
  store i8 1, i8* %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10extensions20FrameNavigationState23GetErrorOccurredInFrameEv(%"class.extensions::FrameNavigationState"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.extensions::FrameNavigationState", %"class.extensions::FrameNavigationState"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8, !range !7
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN10extensions20FrameNavigationState24SetDocumentLoadCompletedEv(%"class.extensions::FrameNavigationState"* nocapture) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.extensions::FrameNavigationState", %"class.extensions::FrameNavigationState"* %0, i64 0, i32 2
  store i8 0, i8* %2, align 1
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10extensions20FrameNavigationState24GetDocumentLoadCompletedEv(%"class.extensions::FrameNavigationState"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.extensions::FrameNavigationState", %"class.extensions::FrameNavigationState"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 1, !range !7
  %4 = icmp eq i8 %3, 0
  ret i1 %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN10extensions20FrameNavigationState18SetParsingFinishedEv(%"class.extensions::FrameNavigationState"* nocapture) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.extensions::FrameNavigationState", %"class.extensions::FrameNavigationState"* %0, i64 0, i32 3
  store i8 0, i8* %2, align 2
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10extensions20FrameNavigationState18GetParsingFinishedEv(%"class.extensions::FrameNavigationState"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.extensions::FrameNavigationState", %"class.extensions::FrameNavigationState"* %0, i64 0, i32 3
  %3 = load i8, i8* %2, align 2, !range !7
  %4 = icmp eq i8 %3, 0
  ret i1 %4
}

declare void @_ZN4base16SupportsUserData4Data5CloneEv() unnamed_addr

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator"* dereferenceable(1)) unnamed_addr #1

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!4 = distinct !{!4, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!5 = distinct !{!5, !6, !"_ZNK4GURL6schemeEv: argument 0"}
!6 = distinct !{!6, !"_ZNK4GURL6schemeEv"}
!7 = !{i8 0, i8 2}
!8 = !{!9, !11}
!9 = distinct !{!9, !10, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!10 = distinct !{!10, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!11 = distinct !{!11, !12, !"_ZNK4GURL6schemeEv: argument 0"}
!12 = distinct !{!12, !"_ZNK4GURL6schemeEv"}
