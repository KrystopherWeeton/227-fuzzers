; ModuleID = '../../third_party/blink/renderer/modules/xr/xr_input_source.cc'
source_filename = "../../third_party/blink/renderer/modules/xr/xr_input_source.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.51", i32, [4 x i8], %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.187", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.198", %"class.std::__1::unique_ptr.204", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.216", %"class.std::__1::unique_ptr.222", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.229", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.60", %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.84", %"class.std::__1::unique_ptr.95", %"class.std::__1::unique_ptr.102", %"class.std::__1::unique_ptr.102", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.116", %"class.std::__1::unique_ptr.123", %"class.std::__1::unique_ptr.123", %"class.std::__1::unique_ptr.130", %"class.std::__1::unique_ptr.137", %"class.std::__1::unique_ptr.144", %"class.std::__1::unique_ptr.167", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.87" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.87" = type { %"struct.std::__1::__atomic_base.88" }
%"struct.std::__1::__atomic_base.88" = type { %"struct.std::__1::__atomic_base.89" }
%"struct.std::__1::__atomic_base.89" = type { %"struct.std::__1::__cxx_atomic_impl.90" }
%"struct.std::__1::__cxx_atomic_impl.90" = type { %"struct.std::__1::__cxx_atomic_base_impl.91" }
%"struct.std::__1::__cxx_atomic_base_impl.91" = type { i64 }
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.blink::Worklist.98"* }
%"class.blink::Worklist.98" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.87" }
%"class.std::__1::unique_ptr.102" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"class.blink::Worklist.105"* }
%"class.blink::Worklist.105" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.87" }
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.blink::Worklist.112"* }
%"class.blink::Worklist.112" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.87" }
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.blink::Worklist.119"* }
%"class.blink::Worklist.119" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.87" }
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"class.blink::Worklist.126"* }
%"class.blink::Worklist.126" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.87" }
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.blink::Worklist.133"* }
%"class.blink::Worklist.133" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.87" }
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.blink::Worklist.140"* }
%"class.blink::Worklist.140" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.87" }
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.147", %"class.std::__1::__compressed_pair.154", %"class.std::__1::__compressed_pair.159", %"class.std::__1::__compressed_pair.161", [4 x i8] }>
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149", %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { i64 }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { float }
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.170", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.170" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.179" }
%"class.WTF::Vector.179" = type { %"class.WTF::VectorBuffer.180" }
%"class.WTF::VectorBuffer.180" = type { %"class.WTF::VectorBufferBase.181" }
%"class.WTF::VectorBufferBase.181" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.195" }
%"class.WTF::VectorBuffer.195" = type { %"class.WTF::VectorBufferBase.196" }
%"class.WTF::VectorBufferBase.196" = type { %"struct.std::__1::pair.197"*, i32, i32 }
%"struct.std::__1::pair.197" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.198" = type { %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.204" = type { %"class.std::__1::__compressed_pair.205" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.210" }
%"class.std::__1::unique_ptr.210" = type { %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.98"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.105"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.112"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.119"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.126"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1867", i64 }
%"class.std::__1::vector.1867" = type { %"class.std::__1::__vector_base.1868" }
%"class.std::__1::__vector_base.1868" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1869" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1869" = type { %"struct.std::__1::__compressed_pair_elem.1870" }
%"struct.std::__1::__compressed_pair_elem.1870" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.216" = type { %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.222" = type { %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.228 }
%class.scoped_refptr.228 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.229" = type { %"struct.std::__1::__atomic_base.230" }
%"struct.std::__1::__atomic_base.230" = type { %"struct.std::__1::__cxx_atomic_impl.231" }
%"struct.std::__1::__cxx_atomic_impl.231" = type { %"struct.std::__1::__cxx_atomic_base_impl.232" }
%"struct.std::__1::__cxx_atomic_base_impl.232" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.47" }
%"class.WTF::HashTable.47" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember.49", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.49" = type { %"class.blink::MemberBase.50" }
%"class.blink::MemberBase.50" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.268" }
%"struct.std::__1::atomic.268" = type { %"struct.std::__1::__atomic_base.269" }
%"struct.std::__1::__atomic_base.269" = type { %"struct.std::__1::__atomic_base.270" }
%"struct.std::__1::__atomic_base.270" = type { %"struct.std::__1::__cxx_atomic_impl.271" }
%"struct.std::__1::__cxx_atomic_impl.271" = type { %"struct.std::__1::__cxx_atomic_base_impl.272" }
%"struct.std::__1::__cxx_atomic_base_impl.272" = type { i32 }
%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.311 }
%class.scoped_refptr.311 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.312", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.312" = type { %"class.base::RefCounted.313" }
%"class.base::RefCounted.313" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::XRInputSource::InternalState" = type { i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i8, %"class.base::TimeTicks", %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::XRInputSource" = type { %"class.blink::ScriptWrappable", %"class.blink::Gamepad::Client", %"struct.blink::XRInputSource::InternalState", %"class.blink::Member", %"class.blink::Member.682", %"class.blink::Member.686", %"class.blink::Member.688", %"class.blink::Member.705", %"class.std::__1::unique_ptr.670", %"class.std::__1::unique_ptr.670" }
%"class.blink::Gamepad::Client" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::XRSession"* }
%"class.blink::Member.682" = type { %"class.blink::MemberBase.683" }
%"class.blink::MemberBase.683" = type { %"class.blink::XRTargetRaySpace"* }
%"class.blink::XRTargetRaySpace" = type { %"class.blink::XRSpace", %"class.blink::Member.684" }
%"class.blink::XRSpace" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.5" }
%"class.WTF::Vector.5" = type { %"class.WTF::VectorBuffer.6" }
%"class.WTF::VectorBuffer.6" = type { %"class.WTF::VectorBufferBase.7", [32 x i8] }
%"class.WTF::VectorBufferBase.7" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member.8" }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::HeapVector.10"* }
%"class.blink::HeapVector.10" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.WTF::Vector.13"* }
%"class.WTF::Vector.13" = type opaque
%"class.blink::Member.684" = type { %"class.blink::MemberBase.685" }
%"class.blink::MemberBase.685" = type { %"class.blink::XRInputSource"* }
%"class.blink::Member.686" = type { %"class.blink::MemberBase.687" }
%"class.blink::MemberBase.687" = type { %"class.blink::XRGripSpace"* }
%"class.blink::XRGripSpace" = type { %"class.blink::XRSpace", %"class.blink::Member.684" }
%"class.blink::Member.688" = type { %"class.blink::MemberBase.689" }
%"class.blink::MemberBase.689" = type { %"class.blink::Gamepad"* }
%"class.blink::Gamepad" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.690", %"class.WTF::String", i32, i8, double, %"class.WTF::String", %"class.WTF::Vector.692", %"class.blink::HeapVector.697", i8, i32, i8, i8, %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.blink::Member.690" = type { %"class.blink::MemberBase.691" }
%"class.blink::MemberBase.691" = type { %"class.blink::Gamepad::Client"* }
%"class.WTF::Vector.692" = type { %"class.WTF::VectorBuffer.693" }
%"class.WTF::VectorBuffer.693" = type { %"class.WTF::VectorBufferBase.694" }
%"class.WTF::VectorBufferBase.694" = type { double*, i32, i32 }
%"class.blink::HeapVector.697" = type { %"class.WTF::Vector.700" }
%"class.WTF::Vector.700" = type { %"class.WTF::VectorBuffer.701" }
%"class.WTF::VectorBuffer.701" = type { %"class.WTF::VectorBufferBase.702" }
%"class.WTF::VectorBufferBase.702" = type { %"class.blink::Member.703"*, i32, i32 }
%"class.blink::Member.703" = type opaque
%"class.blink::Member.705" = type { %"class.blink::MemberBase.706" }
%"class.blink::MemberBase.706" = type { %"class.blink::XRHand"* }
%"class.blink::XRHand" = type { %"class.blink::ScriptWrappable", %"class.blink::PairIterable", %"struct.std::__1::array" }
%"class.blink::PairIterable" = type { %"class.blink::Iterable" }
%"class.blink::Iterable" = type { i32 (...)** }
%"struct.std::__1::array" = type { [25 x %"class.std::__1::tuple"] }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.707" }
%"class.std::__1::__tuple_leaf" = type { %"class.WTF::String" }
%"class.std::__1::__tuple_leaf.707" = type { %"class.blink::Member.708" }
%"class.blink::Member.708" = type { %"class.blink::MemberBase.709" }
%"class.blink::MemberBase.709" = type { %"class.blink::XRJointSpace"* }
%"class.blink::XRJointSpace" = type opaque
%"class.std::__1::unique_ptr.670" = type { %"class.std::__1::__compressed_pair.671" }
%"class.std::__1::__compressed_pair.671" = type { %"struct.std::__1::__compressed_pair_elem.672" }
%"struct.std::__1::__compressed_pair_elem.672" = type { %"class.blink::TransformationMatrix"* }
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::XRSession" = type <{ %"class.blink::EventTargetWithInlineData", %"class.device::mojom::blink::XRSessionClient", %"class.device::mojom::blink::XRInputSourceButtonListener", %"class.blink::ActiveScriptWrappable", %"class.blink::HeapVector.15", i8, [7 x i8], %"class.WTF::Vector", %"class.blink::HeapVector.23", %"class.blink::Member.246", i32, i8, [3 x i8], %"class.WTF::String", %"class.WTF::String", i32, i32, %"class.WTF::String", %"class.blink::Member.335", %"class.blink::Member.337", %"class.blink::HeapVector.339", %"class.blink::Member.29", i8, i8, [6 x i8], %"class.WTF::HashSet.347", %"class.std::__1::unique_ptr.351", i8, [7 x i8], %"class.blink::HeapHashMap.528", %"class.blink::HeapHashSet.535", %"class.blink::HeapHashMap.541", %"class.blink::HeapHashMap.548", %"class.blink::HeapHashMap.555", %"class.WTF::HashSet.562", %"class.WTF::HashSet.562", %"class.blink::Member.566", %"class.blink::Member.568", %"class.absl::optional.570", [4 x i8], %"class.blink::HeapVector.575", %"class.WTF::Vector.583", %"class.blink::Member.594", %"class.blink::Member.603", %"class.blink::Member.605", %"class.blink::Member.607", %"class.blink::Member.301", %"class.blink::Member.609", i8, [7 x i8], %"class.blink::HeapHashSet.535", %"class.blink::HeapVector.611", i32, [4 x i8], %"class.mojo::StructPtr.619", %"class.blink::HeapMojoReceiver.636", %"class.blink::HeapMojoAssociatedReceiver", %"class.WTF::Vector.641", %"class.blink::Member.647", %"class.std::__1::unique_ptr.670", i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i8, [3 x i8], float, i8, i8, [6 x i8], %"class.std::__1::unique_ptr.676", i8, i8, i16, i8, [3 x i8] }>
%"class.device::mojom::blink::XRSessionClient" = type { i32 (...)** }
%"class.device::mojom::blink::XRInputSourceButtonListener" = type { i32 (...)** }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::HeapVector.15" = type { %"class.WTF::Vector.18" }
%"class.WTF::Vector.18" = type { %"class.WTF::VectorBuffer.19" }
%"class.WTF::VectorBuffer.19" = type { %"class.WTF::VectorBufferBase.20" }
%"class.WTF::VectorBufferBase.20" = type { %"class.blink::Member.21"*, i32, i32 }
%"class.blink::Member.21" = type opaque
%"class.blink::HeapVector.23" = type { %"class.WTF::Vector.26" }
%"class.WTF::Vector.26" = type { %"class.WTF::VectorBuffer.27" }
%"class.WTF::VectorBuffer.27" = type { %"class.WTF::VectorBufferBase.28" }
%"class.WTF::VectorBufferBase.28" = type { %"class.blink::Member.29"*, i32, i32 }
%"class.blink::Member.246" = type { %"class.blink::MemberBase.247" }
%"class.blink::MemberBase.247" = type { %"class.blink::XRSystem"* }
%"class.blink::XRSystem" = type <{ %"class.blink::EventTargetWithInlineData", %"class.blink::Supplement", %"class.blink::ExecutionContextLifecycleObserver.base", [4 x i8], %"class.device::mojom::blink::VRServiceClient", %"class.blink::FocusChangedObserver", i8, i8, [6 x i8], %"class.blink::HeapHashSet.250", %"class.blink::HeapHashSet.257", i8, [7 x i8], %"class.WTF::Vector.264", %"class.blink::Member.275", %"class.blink::HeapHashSet.277", %"class.blink::HeapMojoRemote", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoReceiver", %"class.base::TimeTicks", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.blink::Member.297", %"class.blink::Member.331", i8, i8, [6 x i8] }>
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.248" }
%"class.blink::Member.248" = type { %"class.blink::MemberBase.249" }
%"class.blink::MemberBase.249" = type { %"class.blink::Navigator"* }
%"class.blink::Navigator" = type opaque
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.33" }
%"class.blink::MemberBase.33" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember.37"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.37" = type opaque
%"class.device::mojom::blink::VRServiceClient" = type { i32 (...)** }
%"class.blink::FocusChangedObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::HeapHashSet.250" = type { %"class.WTF::HashSet.253" }
%"class.WTF::HashSet.253" = type { %"class.WTF::HashTable.254" }
%"class.WTF::HashTable.254" = type <{ %"class.blink::Member.256"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.256" = type opaque
%"class.blink::HeapHashSet.257" = type { %"class.WTF::HashSet.260" }
%"class.WTF::HashSet.260" = type { %"class.WTF::HashTable.261" }
%"class.WTF::HashTable.261" = type <{ %"class.blink::Member.263"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.263" = type opaque
%"class.WTF::Vector.264" = type { %"class.WTF::VectorBuffer.265" }
%"class.WTF::VectorBuffer.265" = type { %"class.WTF::VectorBufferBase.266" }
%"class.WTF::VectorBufferBase.266" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.267 }
%class.scoped_refptr.267 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.268" }
%"class.blink::Member.275" = type { %"class.blink::MemberBase.276" }
%"class.blink::MemberBase.276" = type { %"class.blink::XRFrameProvider"* }
%"class.blink::XRFrameProvider" = type opaque
%"class.blink::HeapHashSet.277" = type { %"class.WTF::HashSet.280" }
%"class.WTF::HashSet.280" = type { %"class.WTF::HashTable.281" }
%"class.WTF::HashTable.281" = type <{ %"class.blink::WeakMember.283"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.283" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.284" }
%"class.blink::Member.284" = type { %"class.blink::MemberBase.285" }
%"class.blink::MemberBase.285" = type { %"class.blink::HeapMojoRemote<device::mojom::blink::VRService, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<device::mojom::blink::VRService, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.286" }
%"class.blink::Member.286" = type { %"class.blink::MemberBase.287" }
%"class.blink::MemberBase.287" = type { %"class.blink::HeapMojoAssociatedRemote<device::mojom::blink::XREnvironmentIntegrationProvider, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<device::mojom::blink::XREnvironmentIntegrationProvider, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.288" }
%"class.blink::Member.288" = type { %"class.blink::MemberBase.289" }
%"class.blink::MemberBase.289" = type { %"class.blink::HeapMojoReceiver<device::mojom::blink::VRServiceClient, blink::XRSystem, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<device::mojom::blink::VRServiceClient, blink::XRSystem, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.290 }
%class.scoped_refptr.290 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.291", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.291" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.292" }
%"struct.std::__1::atomic.292" = type { %"struct.std::__1::__atomic_base.293" }
%"struct.std::__1::__atomic_base.293" = type { %"struct.std::__1::__atomic_base.294" }
%"struct.std::__1::__atomic_base.294" = type { %"struct.std::__1::__cxx_atomic_impl.295" }
%"struct.std::__1::__cxx_atomic_impl.295" = type { %"struct.std::__1::__cxx_atomic_base_impl.296" }
%"struct.std::__1::__cxx_atomic_base_impl.296" = type { i8 }
%"class.blink::Member.297" = type { %"class.blink::MemberBase.298" }
%"class.blink::MemberBase.298" = type { %"class.blink::XrEnterFullscreenObserver"* }
%"class.blink::XrEnterFullscreenObserver" = type { %"class.blink::NativeEventListener", %"class.blink::Member.301", %"class.base::OnceCallback.330" }
%"class.blink::NativeEventListener" = type { %"class.blink::EventListener" }
%"class.blink::EventListener" = type { %"class.blink::NameClient", %"class.blink::probe::AsyncTaskId" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i64 }
%"class.base::OnceCallback.330" = type { %"class.base::internal::CallbackBase" }
%"class.blink::Member.331" = type { %"class.blink::MemberBase.332" }
%"class.blink::MemberBase.332" = type { %"class.blink::XrExitFullscreenObserver"* }
%"class.blink::XrExitFullscreenObserver" = type { %"class.blink::NativeEventListener", %"class.blink::Member.333", %"class.base::OnceCallback" }
%"class.blink::Member.333" = type { %"class.blink::MemberBase.334" }
%"class.blink::MemberBase.334" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.931", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.264", %"class.WTF::Vector.264", i8, i32, %"class.blink::Member.939", %"class.blink::Member.668", %"class.blink::Member.1129", %"class.blink::Member.1131", %"class.blink::Member.1133", %"class.blink::Member.1135", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1143", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1149", %"class.blink::Member.1151", %"class.blink::Member.894", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1153", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.870", %"class.blink::Member.301", %"class.blink::Member.1104", %"class.blink::Member.301", %"class.blink::Member.301", %"class.blink::Member.301", %"class.blink::UserActionElementSet", %"class.blink::Member.1168", double, double, i64, i64, %"class.blink::HeapHashSet.1170", %"class.blink::HeapHashSet.1177", i16, i8, %"class.blink::Member.1184", %"class.blink::Member.1186", %"class.blink::Member.1188", %"class.blink::Member.1190", %"class.blink::TextLinkColors", %"class.blink::Member.1192", i8, [7 x i8], %"class.blink::HeapHashMap.1194", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.301", %"class.WTF::Vector.1201", %"class.blink::Member.1206", %"class.blink::Member.1208", i8, %"class.blink::Member.301", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1210", %"class.blink::HeapVector.1212", %"class.std::__1::unique_ptr.1220", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1226", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1239", %"class.WTF::Vector.1241", i8, i8, %"class.std::__1::unique_ptr.1246", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.870", %"class.blink::HeapVector.1252", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1260", i8, i32, %"class.blink::Member.1262", %"class.blink::Member.1264", %"class.blink::Member.1266", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1268", %"class.WTF::HashMap.1270", %"class.blink::Member.1275", %"class.blink::Member.1277", %"class.blink::Member.1279", %"class.blink::Member.1281", %"class.blink::Member.333", %"class.blink::Member.333", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1283", i8, i32, %"class.blink::Member.1290", %"class.blink::Member.1292", i32, %"class.blink::Member.1294", %"class.blink::Member.1296", %"class.blink::Member.1298", %"class.std::__1::unique_ptr.1300", i64, %"class.std::__1::unique_ptr.1306", i32, i32, %"class.blink::Member.1312", %"class.blink::Member.1314", %"class.blink::Member.1316", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1318", %"class.WTF::Vector.1115", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1320", %"class.blink::Member.1327", %"class.std::__1::unique_ptr.1329", %"class.blink::Member.1335", i8, i8, %"class.WTF::String", %"class.blink::Member.1337", i8, [7 x i8], %"class.blink::HeapHashMap.1339", %"class.blink::HeapObserverSet.1346", %"class.blink::Member.1354", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1356", i32, i8, i8, %"class.blink::WeakMember.1358", %"class.blink::Member.1359" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.303", %"class.blink::Member.303" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.303", %"class.blink::Member.305", %"class.blink::Member.303", %"class.blink::Member.303", %"class.blink::Member.307" }
%"class.blink::Member.305" = type { %"class.blink::MemberBase.306" }
%"class.blink::MemberBase.306" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.307" = type { %"class.blink::MemberBase.308" }
%"class.blink::MemberBase.308" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.303" = type { %"class.blink::MemberBase.304" }
%"class.blink::MemberBase.304" = type { %"class.blink::Node"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.853", %"class.blink::Member.333", %"class.blink::Member.305", %"class.blink::Member.855", %"class.blink::Member.855", %"class.blink::Member.877", %"class.blink::Member.879", %"class.blink::Member.881", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.886", %"class.blink::HeapVector.888" }
%"class.blink::Member.853" = type { %"class.blink::MemberBase.854" }
%"class.blink::MemberBase.854" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.855" = type { %"class.blink::MemberBase.856" }
%"class.blink::MemberBase.856" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.859" }
%"class.blink::HeapHashMap.859" = type { %"class.WTF::HashMap.862" }
%"class.WTF::HashMap.862" = type { %"class.WTF::HashTable.863" }
%"class.WTF::HashTable.863" = type <{ %"struct.WTF::KeyValuePair.865"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.865" = type { %"class.WTF::AtomicString", %"class.blink::Member.866" }
%"class.blink::Member.866" = type { %"class.blink::MemberBase.867" }
%"class.blink::MemberBase.867" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.301", i32, %"class.blink::HeapVector.870" }
%"class.blink::Member.877" = type { %"class.blink::MemberBase.878" }
%"class.blink::MemberBase.878" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.879" = type { %"class.blink::MemberBase.880" }
%"class.blink::MemberBase.880" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.881" = type { %"class.blink::MemberBase.882" }
%"class.blink::MemberBase.882" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.883" }
%"class.blink::Member.883" = type { %"class.blink::MemberBase.884" }
%"class.blink::MemberBase.884" = type { %"class.blink::HeapHashMap.885"* }
%"class.blink::HeapHashMap.885" = type opaque
%"class.blink::Member.886" = type { %"class.blink::MemberBase.887" }
%"class.blink::MemberBase.887" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.888" = type { %"class.WTF::Vector.891" }
%"class.WTF::Vector.891" = type { %"class.WTF::VectorBuffer.892" }
%"class.WTF::VectorBuffer.892" = type { %"class.WTF::VectorBufferBase.893" }
%"class.WTF::VectorBufferBase.893" = type { %"class.blink::Member.894"*, i32, i32 }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable.931" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.932" }
%"class.blink::HeapHashMap.932" = type { %"class.WTF::HashMap.935" }
%"class.WTF::HashMap.935" = type { %"class.WTF::HashTable.936" }
%"class.WTF::HashTable.936" = type <{ %"struct.WTF::KeyValuePair.938"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.938" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type { %"class.blink::DOMWindow", %"class.blink::ExecutionContext.base", %"class.blink::Supplementable.964", %"class.blink::ThreadState::PrefinalizerRegistration.972", %"class.blink::Member.973", %"class.blink::Member.333", %"class.blink::Member.975", i8, %"class.blink::Member.977", %"class.blink::Member.979", %"class.blink::Member.981", %"class.blink::Member.981", %"class.blink::Member.981", %"class.blink::Member.981", %"class.blink::Member.981", %"class.blink::Member.981", %"class.blink::Member.248", %"class.blink::Member.983", %"class.blink::Member.985", %"class.blink::Member.987", %"class.blink::Member.989", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector", %"class.blink::Member.991", %class.scoped_refptr.993, %"class.blink::HeapHashSet.1055", %"class.blink::Member.1062", %"class.blink::HeapHashMap.1070", %"class.std::__1::unique_ptr.1077", %"class.blink::Member.1089", %"class.blink::Member.1108", %"class.blink::Member.1110", %"class.blink::Member.1112", %"class.WTF::Vector.1115", %"class.util::TokenType.952", %"class.WTF::HashSet.1120", %"class.WTF::Deque.1124" }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.941", %"class.blink::Member.943", %"class.blink::Member.945", %"class.blink::Member.947", i8, %"class.WTF::Vector.949" }
%"class.blink::Member.941" = type { %"class.blink::MemberBase.942" }
%"class.blink::MemberBase.942" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.1385", %"class.blink::Member.1387", %"class.blink::Member.1389", i8, i32, i8, i32, %"class.blink::Member.1391", %"class.blink::Member.943", %"class.blink::FrameLifecycle", %"class.blink::Member.941", %"class.blink::Member.941", %"class.blink::Member.941", %"class.blink::Member.941", %"class.blink::Member.941", %"class.blink::Member.941", %"class.blink::Member.1093", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.1399", i8, %"class.base::UnguessableToken", %"class.absl::optional.1401", %"class.absl::optional.1406", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.941", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1385" = type { %"class.blink::MemberBase.1386" }
%"class.blink::MemberBase.1386" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.1387" = type { %"class.blink::MemberBase.1388" }
%"class.blink::MemberBase.1388" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.1389" = type { %"class.blink::MemberBase.1390" }
%"class.blink::MemberBase.1390" = type { %"class.blink::DOMWindow"* }
%"class.blink::Member.1391" = type { %"class.blink::MemberBase.1392" }
%"class.blink::MemberBase.1392" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.1093" = type { %"class.blink::MemberBase.1094" }
%"class.blink::MemberBase.1094" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.1418", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.1426", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.1434", %"class.blink::FrameLoader", %"class.blink::Member.1455", %"class.blink::Member.301", %"class.blink::Member.1457", %"class.blink::Member.1459", %"class.blink::Member.1461", %"class.blink::Member.1463", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.1465", %class.scoped_refptr.1467, %"class.blink::Member.1468", %"class.blink::Member.1470", %"class.blink::Member.1472", %"class.blink::Member.1474", %"class.blink::Member.1476", %"class.blink::Member.1478", %"class.blink::Member.1480", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote.1482", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.1485", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.1491", %"class.std::__1::unique_ptr.1492", %"class.absl::optional.1406", i32, [4 x i8], %"class.std::__1::unique_ptr.1498", %"class.blink::HeapMojoAssociatedRemote.1504", %"class.blink::HeapMojoAssociatedRemote.1507", %"class.blink::HeapMojoAssociatedReceiver.1510", %"class.blink::HeapMojoAssociatedReceiver.1513", %"class.blink::HeapMojoReceiver.1516", %"class.blink::HeapMojoAssociatedReceiver.1519", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.1522", %"class.blink::Member.1524", %"class.blink::Member.1526", %"class.blink::Member.1528", %"class.mojo::StructPtr.1531", %"class.blink::Member.1540", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.1542", i8, [7 x i8] }>
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.1418" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1419" }
%"class.blink::HeapHashMap.1419" = type { %"class.WTF::HashMap.1422" }
%"class.WTF::HashMap.1422" = type { %"class.WTF::HashTable.1423" }
%"class.WTF::HashTable.1423" = type <{ %"struct.WTF::KeyValuePair.1425"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1425" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1426" = type { %"class.std::__1::__compressed_pair.1427" }
%"class.std::__1::__compressed_pair.1427" = type { %"struct.std::__1::__compressed_pair_elem.1428" }
%"struct.std::__1::__compressed_pair_elem.1428" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.1080", %"class.base::WeakPtrFactory.1085" }
%"class.WTF::HashMap.1080" = type { %"class.WTF::HashTable.1081" }
%"class.WTF::HashTable.1081" = type <{ %"struct.WTF::KeyValuePair.1084"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1084" = type opaque
%"class.base::WeakPtrFactory.1085" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.376 }
%class.scoped_refptr.376 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.1432" }
%"class.blink::Member.1432" = type { %"class.blink::MemberBase.1433" }
%"class.blink::MemberBase.1433" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback.472", %"class.base::RepeatingCallback.1976", i64, %"class.std::__1::map.1977", i8*, i64, %"class.base::WeakPtrFactory.1986" }
%"class.base::RepeatingCallback.472" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::RepeatingCallback.1976" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.1977" = type { %"class.std::__1::__tree.1978" }
%"class.std::__1::__tree.1978" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1979", %"class.std::__1::__compressed_pair.1983" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1979" = type { %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1983" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"class.base::WeakPtrFactory.1986" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.1434" = type { %"class.WTF::HashSet.1437" }
%"class.WTF::HashSet.1437" = type { %"class.WTF::HashTable.1438" }
%"class.WTF::HashTable.1438" = type <{ %"class.blink::WeakMember.1440"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1440" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.1093", %"class.blink::Member.1441", %"class.blink::Member.1443", %"class.std::__1::unique_ptr.1445", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.1451" }
%"class.blink::Member.1441" = type { %"class.blink::MemberBase.1442" }
%"class.blink::MemberBase.1442" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.1443" = type { %"class.blink::MemberBase.1444" }
%"class.blink::MemberBase.1444" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.1445" = type { %"class.std::__1::__compressed_pair.1446" }
%"class.std::__1::__compressed_pair.1446" = type { %"struct.std::__1::__compressed_pair_elem.1447" }
%"struct.std::__1::__compressed_pair_elem.1447" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.WTF::HashSet.1451" = type { %"class.WTF::HashTable.1452" }
%"class.WTF::HashTable.1452" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1455" = type { %"class.blink::MemberBase.1456" }
%"class.blink::MemberBase.1456" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1549", %"class.blink::Member.1093", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1554", i8, i32, %"class.blink::Color", %"class.absl::optional.1556", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1561", %"class.blink::Member.1563", %"class.blink::Member.1563", %"class.std::__1::unique_ptr.1566", i32, [4 x i8], %"class.WTF::HashSet.1569", %"class.blink::Member.1576", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1578", %"class.blink::HeapHashSet.1585", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1593", i8, %"class.blink::Member.1599", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1611", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1625", i8, %"class.std::__1::unique_ptr.1631", %"class.std::__1::unique_ptr.1747", %"class.WTF::Vector.1753", i32, %class.scoped_refptr.1758, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1759", %"class.blink::Member.1761", %"class.blink::Member.1763", %"class.blink::HeapHashSet.1765", %"class.blink::HeapHashSet.1772", %"class.std::__1::unique_ptr.1779", %"class.std::__1::unique_ptr.1786", %"class.WTF::Vector.264" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.1549" = type { %"class.WTF::HashTable.1550" }
%"class.WTF::HashTable.1550" = type <{ %class.scoped_refptr.1553*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1553 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1554" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1555", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.1158, %"class.base::WeakPtrFactory.1159" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.1158 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.357" }>
%"class.base::RefCountedThreadSafe.357" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory.1159" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.1555" = type { %"class.blink::MemberBase.1456" }
%"class.blink::Color" = type { i32 }
%"class.absl::optional.1556" = type { %"class.absl::optional_internal::optional_data.1557" }
%"class.absl::optional_internal::optional_data.1557" = type { %"class.absl::optional_internal::optional_data_base.1558" }
%"class.absl::optional_internal::optional_data_base.1558" = type { %"class.absl::optional_internal::optional_data_dtor_base.1559" }
%"class.absl::optional_internal::optional_data_dtor_base.1559" = type { i8, %union.anon.1560 }
%union.anon.1560 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1561" = type { %"class.blink::MemberBase.1562" }
%"class.blink::MemberBase.1562" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1563" = type { %"class.blink::MemberBase.1564" }
%"class.blink::MemberBase.1564" = type { %"class.blink::HeapHashSet.1565"* }
%"class.blink::HeapHashSet.1565" = type opaque
%"class.std::__1::unique_ptr.1566" = type { %"class.std::__1::__compressed_pair.1567" }
%"class.std::__1::__compressed_pair.1567" = type { %"struct.std::__1::__compressed_pair_elem.1568" }
%"struct.std::__1::__compressed_pair_elem.1568" = type { %"class.WTF::HashSet.1569"* }
%"class.WTF::HashSet.1569" = type { %"class.WTF::HashTable.1570" }
%"class.WTF::HashTable.1570" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.1576" = type { %"class.blink::MemberBase.1577" }
%"class.blink::MemberBase.1577" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1578" = type { %"class.WTF::HashSet.1581" }
%"class.WTF::HashSet.1581" = type { %"class.WTF::HashTable.1582" }
%"class.WTF::HashTable.1582" = type <{ %"class.blink::Member.1584"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1584" = type opaque
%"class.blink::HeapHashSet.1585" = type { %"class.WTF::HashSet.1588" }
%"class.WTF::HashSet.1588" = type { %"class.WTF::HashTable.1589" }
%"class.WTF::HashTable.1589" = type <{ %"class.blink::Member.1591"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1591" = type { %"class.blink::MemberBase.1592" }
%"class.blink::MemberBase.1592" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1820", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1831", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.301" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::Member.1820" = type { %"class.blink::MemberBase.1821" }
%"class.blink::MemberBase.1821" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.1822", %"class.blink::Member.1823", %"class.blink::Member.1825", %"class.blink::Member.1827", %"class.blink::Member.1829", %"class.WTF::Vector.264", i16, %class.scoped_refptr.1158 }
%"class.blink::ThreadState::PrefinalizerRegistration.1822" = type { i8 }
%"class.blink::Member.1823" = type { %"class.blink::MemberBase.1824" }
%"class.blink::MemberBase.1824" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.1825" = type { %"class.blink::MemberBase.1826" }
%"class.blink::MemberBase.1826" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.1827" = type { %"class.blink::MemberBase.1828" }
%"class.blink::MemberBase.1828" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.1829" = type { %"class.blink::MemberBase.1830" }
%"class.blink::MemberBase.1830" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type opaque
%"class.blink::HeapTaskRunnerTimer.1831" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1832", { i64, i64 } }
%"class.blink::WeakMember.1832" = type { %"class.blink::MemberBase.1592" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1593" = type { %"class.std::__1::__compressed_pair.1594" }
%"class.std::__1::__compressed_pair.1594" = type { %"struct.std::__1::__compressed_pair_elem.1595" }
%"struct.std::__1::__compressed_pair_elem.1595" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1599" = type { %"class.blink::MemberBase.1600" }
%"class.blink::MemberBase.1600" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1603", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1603" = type { %"class.WTF::HashTable.1604" }
%"class.WTF::HashTable.1604" = type <{ %"struct.WTF::KeyValuePair.1606"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1606" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1607", i32, i32 }
%"class.WTF::Vector.1607" = type { %"class.WTF::VectorBuffer.1608" }
%"class.WTF::VectorBuffer.1608" = type { %"class.WTF::VectorBufferBase.1609" }
%"class.WTF::VectorBufferBase.1609" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1611" = type { %"class.WTF::LinkedHashSet.1614" }
%"class.WTF::LinkedHashSet.1614" = type { %"class.WTF::HashMap.1615", %"class.WTF::VectorBackedLinkedList.1619" }
%"class.WTF::HashMap.1615" = type { %"class.WTF::HashTable.1616" }
%"class.WTF::HashTable.1616" = type <{ %"struct.WTF::KeyValuePair.1618"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1618" = type opaque
%"class.WTF::VectorBackedLinkedList.1619" = type { %"class.WTF::Vector.1620", i32, i32 }
%"class.WTF::Vector.1620" = type { %"class.WTF::VectorBuffer.1621" }
%"class.WTF::VectorBuffer.1621" = type { %"class.WTF::VectorBufferBase.1622" }
%"class.WTF::VectorBufferBase.1622" = type { %"class.WTF::VectorBackedLinkedListNode.1623"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1623" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1625" = type { %"class.std::__1::__compressed_pair.1626" }
%"class.std::__1::__compressed_pair.1626" = type { %"struct.std::__1::__compressed_pair_elem.1627" }
%"struct.std::__1::__compressed_pair_elem.1627" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1631" = type { %"class.std::__1::__compressed_pair.1632" }
%"class.std::__1::__compressed_pair.1632" = type { %"struct.std::__1::__compressed_pair_elem.1633" }
%"struct.std::__1::__compressed_pair_elem.1633" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1634, %class.scoped_refptr.1634, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1724", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1729", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1634 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1635", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1642" }
%"class.WTF::RefCounted.1635" = type { %"class.base::RefCounted.1636" }
%"class.base::RefCounted.1636" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1637", i32, [4 x i8] }>
%"class.WTF::Vector.1637" = type { %"class.WTF::VectorBuffer.1638" }
%"class.WTF::VectorBuffer.1638" = type { %"class.WTF::VectorBufferBase.1639" }
%"class.WTF::VectorBufferBase.1639" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1642" = type { %"class.WTF::VectorBuffer.1643" }
%"class.WTF::VectorBuffer.1643" = type { %"class.WTF::VectorBufferBase.1644" }
%"class.WTF::VectorBufferBase.1644" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1648", %"class.std::__1::unique_ptr.1697", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1645, %class.scoped_refptr.1646, %class.scoped_refptr.1647 }
%class.scoped_refptr.1645 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1661", i8, i8, %class.scoped_refptr.1645, i32, i32 }
%"class.WTF::RefCounted.1661" = type { %"class.base::RefCounted.1662" }
%"class.base::RefCounted.1662" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1646 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1815" }
%"class.blink::PaintPropertyNode.1815" = type { %"class.WTF::RefCounted.1816", i8, i8, %class.scoped_refptr.1646, i32, i32 }
%"class.WTF::RefCounted.1816" = type { %"class.base::RefCounted.1817" }
%"class.base::RefCounted.1817" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1647 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1812" }
%"class.blink::PaintPropertyNode.1812" = type { %"class.WTF::RefCounted.1813", i8, i8, %class.scoped_refptr.1647, i32, i32 }
%"class.WTF::RefCounted.1813" = type { %"class.base::RefCounted.1814" }
%"class.base::RefCounted.1814" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1648" = type { %"class.std::__1::__compressed_pair.1649" }
%"class.std::__1::__compressed_pair.1649" = type { %"struct.std::__1::__compressed_pair_elem.1650" }
%"struct.std::__1::__compressed_pair_elem.1650" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1651", %"class.WTF::Vector.1656", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1651" = type { %"class.WTF::VectorBuffer.1652" }
%"class.WTF::VectorBuffer.1652" = type { %"class.WTF::VectorBufferBase.1653" }
%"class.WTF::VectorBufferBase.1653" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1656" = type { %"class.WTF::VectorBuffer.1657" }
%"class.WTF::VectorBuffer.1657" = type { %"class.WTF::VectorBufferBase.1658" }
%"class.WTF::VectorBufferBase.1658" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1676" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1669, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1670", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1663" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.1663" = type { %"class.std::__1::__compressed_pair.1664" }
%"class.std::__1::__compressed_pair.1664" = type { %"struct.std::__1::__compressed_pair_elem.1665" }
%"struct.std::__1::__compressed_pair_elem.1665" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1669 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1797", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1797" = type { %"class.WTF::RefCounted.1798", i8, i8, %class.scoped_refptr.1669, i32, i32 }
%"class.WTF::RefCounted.1798" = type { %"class.base::RefCounted.1799" }
%"class.base::RefCounted.1799" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1800" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1800" = type { %"class.absl::optional_internal::optional_data.1801" }
%"class.absl::optional_internal::optional_data.1801" = type { %"class.absl::optional_internal::optional_data_base.1802" }
%"class.absl::optional_internal::optional_data_base.1802" = type { %"class.absl::optional_internal::optional_data_dtor_base.1803" }
%"class.absl::optional_internal::optional_data_dtor_base.1803" = type { i8, %union.anon.1804 }
%union.anon.1804 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1805", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1805" = type { %"class.std::__1::__vector_base.1806" }
%"class.std::__1::__vector_base.1806" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1807" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1807" = type { %"struct.std::__1::__compressed_pair_elem.1808" }
%"struct.std::__1::__compressed_pair_elem.1808" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1670" = type { %"class.std::__1::__compressed_pair.1671" }
%"class.std::__1::__compressed_pair.1671" = type { %"struct.std::__1::__compressed_pair_elem.1672" }
%"struct.std::__1::__compressed_pair_elem.1672" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1676" = type { %"class.std::__1::__compressed_pair.1677" }
%"class.std::__1::__compressed_pair.1677" = type { %"struct.std::__1::__compressed_pair_elem.1678" }
%"struct.std::__1::__compressed_pair_elem.1678" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1679", %"class.std::__1::unique_ptr.1685", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1679" = type { %"class.std::__1::__compressed_pair.1680" }
%"class.std::__1::__compressed_pair.1680" = type { %"struct.std::__1::__compressed_pair_elem.1681" }
%"struct.std::__1::__compressed_pair_elem.1681" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1685" = type { %"class.std::__1::__compressed_pair.1686" }
%"class.std::__1::__compressed_pair.1686" = type { %"struct.std::__1::__compressed_pair_elem.1687" }
%"struct.std::__1::__compressed_pair_elem.1687" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1697" = type { %"class.std::__1::__compressed_pair.1698" }
%"class.std::__1::__compressed_pair.1698" = type { %"struct.std::__1::__compressed_pair_elem.1699" }
%"struct.std::__1::__compressed_pair_elem.1699" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1700", %"class.absl::optional.1700" }
%"class.absl::optional.1700" = type { %"class.absl::optional_internal::optional_data.1701" }
%"class.absl::optional_internal::optional_data.1701" = type { %"class.absl::optional_internal::optional_data_base.1702" }
%"class.absl::optional_internal::optional_data_base.1702" = type { %"class.absl::optional_internal::optional_data_dtor_base.1703" }
%"class.absl::optional_internal::optional_data_dtor_base.1703" = type { i8, [3 x i8], %union.anon.1704 }
%union.anon.1704 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1642"*, %"class.absl::optional.1710", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1710" = type { %"class.absl::optional_internal::optional_data.1711" }
%"class.absl::optional_internal::optional_data.1711" = type { %"class.absl::optional_internal::optional_data_base.1712" }
%"class.absl::optional_internal::optional_data_base.1712" = type { %"class.absl::optional_internal::optional_data_dtor_base.1713" }
%"class.absl::optional_internal::optional_data_dtor_base.1713" = type { i8, %union.anon.1714 }
%union.anon.1714 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1715", %"class.WTF::Vector.1719" }
%"class.WTF::Vector.1715" = type { %"class.WTF::VectorBuffer.1716" }
%"class.WTF::VectorBuffer.1716" = type { %"class.WTF::VectorBufferBase.665", [128 x i8] }
%"class.WTF::VectorBufferBase.665" = type { i32*, i32, i32 }
%"class.WTF::Vector.1719" = type { %"class.WTF::VectorBuffer.1720" }
%"class.WTF::VectorBuffer.1720" = type { %"class.WTF::VectorBufferBase.1721", [128 x i8] }
%"class.WTF::VectorBufferBase.1721" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1724" = type { %"class.WTF::VectorBuffer.1725" }
%"class.WTF::VectorBuffer.1725" = type { %"class.WTF::VectorBufferBase.1726" }
%"class.WTF::VectorBufferBase.1726" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1729" = type { %"class.WTF::HashTable.1730" }
%"class.WTF::HashTable.1730" = type <{ %"struct.WTF::KeyValuePair.1733"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1733" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1734", %"class.WTF::Vector.1739" }
%"class.WTF::HashMap.1734" = type { %"class.WTF::HashTable.1735" }
%"class.WTF::HashTable.1735" = type <{ %"struct.WTF::KeyValuePair.1738"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1738" = type opaque
%"class.WTF::Vector.1739" = type { %"class.WTF::VectorBuffer.1740" }
%"class.WTF::VectorBuffer.1740" = type { %"class.WTF::VectorBufferBase.1741" }
%"class.WTF::VectorBufferBase.1741" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1747" = type { %"class.std::__1::__compressed_pair.1748" }
%"class.std::__1::__compressed_pair.1748" = type { %"struct.std::__1::__compressed_pair_elem.1749" }
%"struct.std::__1::__compressed_pair_elem.1749" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1753" = type { %"class.WTF::VectorBuffer.1754" }
%"class.WTF::VectorBuffer.1754" = type { %"class.WTF::VectorBufferBase.1755" }
%"class.WTF::VectorBufferBase.1755" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1758 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1759" = type { %"class.blink::MemberBase.1760" }
%"class.blink::MemberBase.1760" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1761" = type { %"class.blink::MemberBase.1762" }
%"class.blink::MemberBase.1762" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1763" = type { %"class.blink::MemberBase.1764" }
%"class.blink::MemberBase.1764" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1765" = type { %"class.WTF::HashSet.1768" }
%"class.WTF::HashSet.1768" = type { %"class.WTF::HashTable.1769" }
%"class.WTF::HashTable.1769" = type <{ %"class.blink::WeakMember.1771"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1771" = type opaque
%"class.blink::HeapHashSet.1772" = type { %"class.WTF::HashSet.1775" }
%"class.WTF::HashSet.1775" = type { %"class.WTF::HashTable.1776" }
%"class.WTF::HashTable.1776" = type <{ %"class.blink::WeakMember.1778"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1778" = type opaque
%"class.std::__1::unique_ptr.1779" = type { %"class.std::__1::__compressed_pair.1780" }
%"class.std::__1::__compressed_pair.1780" = type { %"struct.std::__1::__compressed_pair_elem.1781" }
%"struct.std::__1::__compressed_pair_elem.1781" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1782" }
%"class.base::time_internal::TimeBase.1782" = type { i64 }
%"class.std::__1::unique_ptr.1786" = type { %"class.std::__1::__compressed_pair.1787" }
%"class.std::__1::__compressed_pair.1787" = type { %"struct.std::__1::__compressed_pair_elem.1788" }
%"struct.std::__1::__compressed_pair_elem.1788" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1789", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.1789" = type { %"class.absl::optional_internal::optional_data.1790" }
%"class.absl::optional_internal::optional_data.1790" = type { %"class.absl::optional_internal::optional_data_base.1791" }
%"class.absl::optional_internal::optional_data_base.1791" = type { %"class.absl::optional_internal::optional_data_dtor_base.1792" }
%"class.absl::optional_internal::optional_data_dtor_base.1792" = type { i8, %union.anon.1793 }
%union.anon.1793 = type { %"class.base::Time" }
%"class.blink::Member.1457" = type { %"class.blink::MemberBase.1458" }
%"class.blink::MemberBase.1458" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.1459" = type { %"class.blink::MemberBase.1460" }
%"class.blink::MemberBase.1460" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.1461" = type { %"class.blink::MemberBase.1462" }
%"class.blink::MemberBase.1462" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.1463" = type { %"class.blink::MemberBase.1464" }
%"class.blink::MemberBase.1464" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.1465" = type { %"class.blink::MemberBase.1466" }
%"class.blink::MemberBase.1466" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type opaque
%class.scoped_refptr.1467 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.1468" = type { %"class.blink::MemberBase.1469" }
%"class.blink::MemberBase.1469" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.1470" = type { %"class.blink::MemberBase.1471" }
%"class.blink::MemberBase.1471" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.1472" = type { %"class.blink::MemberBase.1473" }
%"class.blink::MemberBase.1473" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.1474" = type { %"class.blink::MemberBase.1475" }
%"class.blink::MemberBase.1475" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.1476" = type { %"class.blink::MemberBase.1477" }
%"class.blink::MemberBase.1477" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.1478" = type { %"class.blink::MemberBase.1479" }
%"class.blink::MemberBase.1479" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.1480" = type { %"class.blink::MemberBase.1481" }
%"class.blink::MemberBase.1481" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote.1482" = type { %"class.blink::Member.1483" }
%"class.blink::Member.1483" = type { %"class.blink::MemberBase.1484" }
%"class.blink::MemberBase.1484" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.1989" }
%"class.mojo::Remote.1989" = type { %"class.mojo::internal::InterfacePtrState.1990" }
%"class.mojo::internal::InterfacePtrState.1990" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1991" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.354, %"class.std::__1::unique_ptr.469", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.356, i32 }>
%class.scoped_refptr.354 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.356, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.435", %"class.absl::optional.440", %"class.absl::optional.396", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.460", i8, [7 x i8], %class.scoped_refptr.356, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.355" }>
%"class.base::RefCountedThreadSafe.355" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.358" }
%"class.std::__1::__compressed_pair.358" = type { %"struct.std::__1::__compressed_pair_elem.359" }
%"struct.std::__1::__compressed_pair_elem.359" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.360 }
%union.anon.360 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.364", %"class.std::__1::unique_ptr.370", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.364" = type { %"class.std::__1::__compressed_pair.365" }
%"class.std::__1::__compressed_pair.365" = type { %"struct.std::__1::__compressed_pair_elem.366" }
%"struct.std::__1::__compressed_pair_elem.366" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.370" = type { %"class.std::__1::__compressed_pair.371" }
%"class.std::__1::__compressed_pair.371" = type { %"struct.std::__1::__compressed_pair_elem.372" }
%"struct.std::__1::__compressed_pair_elem.372" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.356, %"class.std::__1::unique_ptr.377", %"class.absl::optional.386", %"struct.std::__1::atomic.229", i8, i8, i8, i8, i32, i32, %"class.absl::optional.396", %"class.std::__1::unique_ptr.401", i8, i64, %class.scoped_refptr.431, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.433", %"class.base::WeakPtrFactory.434" }
%"class.std::__1::unique_ptr.377" = type { %"class.std::__1::__compressed_pair.378" }
%"class.std::__1::__compressed_pair.378" = type { %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.356, i8, %"class.mojo::ScopedHandleBase.380", %class.scoped_refptr.381, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.382" }
%"class.mojo::ScopedHandleBase.380" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.381 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.382" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.386" = type { %"class.absl::optional_internal::optional_data.387" }
%"class.absl::optional_internal::optional_data.387" = type { %"class.absl::optional_internal::optional_data_base.388" }
%"class.absl::optional_internal::optional_data_base.388" = type { %"class.absl::optional_internal::optional_data_dtor_base.389" }
%"class.absl::optional_internal::optional_data_dtor_base.389" = type { i8, %union.anon.390 }
%union.anon.390 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.391", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.391" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.401" = type { %"class.std::__1::__compressed_pair.402" }
%"class.std::__1::__compressed_pair.402" = type { %"struct.std::__1::__compressed_pair_elem.403" }
%"struct.std::__1::__compressed_pair_elem.403" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.404", i8, i64, %class.scoped_refptr.405, %class.scoped_refptr.427 }
%"class.base::RepeatingCallback.404" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.405 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.406", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.416", i8, [7 x i8] }>
%"class.base::RefCounted.406" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.407 }
%class.scoped_refptr.407 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.408", %"class.std::__1::__compressed_pair.413" }
%"class.std::__1::__compressed_pair.408" = type { %"struct.std::__1::__compressed_pair_elem.409" }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"class.std::__1::map.416" = type { %"class.std::__1::__tree.417" }
%"class.std::__1::__tree.417" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.418", %"class.std::__1::__compressed_pair.422" }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.409" }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%class.scoped_refptr.427 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.431 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.432 }
%class.scoped_refptr.432 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.852", [4 x i8], %"class.base::RepeatingCallback.472", %class.scoped_refptr.356, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.852" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtr.433" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.434" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.435" = type { %"class.absl::optional_internal::optional_data.436" }
%"class.absl::optional_internal::optional_data.436" = type { %"class.absl::optional_internal::optional_data_base.437" }
%"class.absl::optional_internal::optional_data_base.437" = type { %"class.absl::optional_internal::optional_data_dtor_base.438" }
%"class.absl::optional_internal::optional_data_dtor_base.438" = type { i8, %union.anon.439 }
%union.anon.439 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.440" = type { %"class.absl::optional_internal::optional_data.441" }
%"class.absl::optional_internal::optional_data.441" = type { %"class.absl::optional_internal::optional_data_base.442" }
%"class.absl::optional_internal::optional_data_base.442" = type { %"class.absl::optional_internal::optional_data_dtor_base.443" }
%"class.absl::optional_internal::optional_data_dtor_base.443" = type { i8, [7 x i8], %union.anon.444 }
%union.anon.444 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.396" = type { %"class.absl::optional_internal::optional_data.397" }
%"class.absl::optional_internal::optional_data.397" = type { %"class.absl::optional_internal::optional_data_base.398" }
%"class.absl::optional_internal::optional_data_base.398" = type { %"class.absl::optional_internal::optional_data_dtor_base.399" }
%"class.absl::optional_internal::optional_data_dtor_base.399" = type { i8, %union.anon.400 }
%union.anon.400 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.445 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.445 = type { %"class.std::__1::map.448" }
%"class.std::__1::map.448" = type { %"class.std::__1::__tree.449" }
%"class.std::__1::__tree.449" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.450", %"class.std::__1::__compressed_pair.454" }
%"class.std::__1::__compressed_pair.450" = type { %"struct.std::__1::__compressed_pair_elem.409" }
%"class.std::__1::__compressed_pair.454" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.459"*, i64 }
%"class.std::__1::unique_ptr.459" = type opaque
%"class.std::__1::map.460" = type { %"class.std::__1::__tree.461" }
%"class.std::__1::__tree.461" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.462", %"class.std::__1::__compressed_pair.466" }
%"class.std::__1::__compressed_pair.462" = type { %"struct.std::__1::__compressed_pair_elem.409" }
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"class.std::__1::unique_ptr.469" = type { %"class.std::__1::__compressed_pair.470" }
%"class.std::__1::__compressed_pair.470" = type { %"struct.std::__1::__compressed_pair_elem.471" }
%"struct.std::__1::__compressed_pair_elem.471" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.472", %"class.base::OnceCallback.473", %"class.absl::optional.474", %"class.absl::optional.479", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.486", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.494", %"class.std::__1::map.505", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.514", i8, %class.scoped_refptr.356, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.515" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.473" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.474" = type { %"class.absl::optional_internal::optional_data.475" }
%"class.absl::optional_internal::optional_data.475" = type { %"class.absl::optional_internal::optional_data_base.476" }
%"class.absl::optional_internal::optional_data_base.476" = type { %"class.absl::optional_internal::optional_data_dtor_base.477" }
%"class.absl::optional_internal::optional_data_dtor_base.477" = type { i8, %union.anon.478 }
%union.anon.478 = type { %"class.base::TimeDelta" }
%"class.absl::optional.479" = type { %"class.absl::optional_internal::optional_data.480" }
%"class.absl::optional_internal::optional_data.480" = type { %"class.absl::optional_internal::optional_data_base.481" }
%"class.absl::optional_internal::optional_data_base.481" = type { %"class.absl::optional_internal::optional_data_dtor_base.482" }
%"class.absl::optional_internal::optional_data_dtor_base.482" = type { i8, %union.anon.483 }
%union.anon.483 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.356, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.484" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.484" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.485 }
%class.scoped_refptr.485 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.486" = type { %"class.std::__1::__compressed_pair.487" }
%"class.std::__1::__compressed_pair.487" = type { %"struct.std::__1::__compressed_pair_elem.488" }
%"struct.std::__1::__compressed_pair_elem.488" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.489", %class.scoped_refptr.490 }
%"class.base::RepeatingCallback.489" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.490 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.355", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.494" = type { %"class.std::__1::__tree.495" }
%"class.std::__1::__tree.495" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.496", %"class.std::__1::__compressed_pair.500" }
%"class.std::__1::__compressed_pair.496" = type { %"struct.std::__1::__compressed_pair_elem.409" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"class.std::__1::map.505" = type { %"class.std::__1::__tree.506" }
%"class.std::__1::__tree.506" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.507", %"class.std::__1::__compressed_pair.511" }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.409" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"class.base::OnceCallback.514" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.515" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.356 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.std::__1::unique_ptr.1991" = type { %"class.std::__1::__compressed_pair.1992" }
%"class.std::__1::__compressed_pair.1992" = type { %"struct.std::__1::__compressed_pair_elem.1993" }
%"struct.std::__1::__compressed_pair_elem.1993" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1485" = type { %"class.std::__1::__compressed_pair.1486" }
%"class.std::__1::__compressed_pair.1486" = type { %"struct.std::__1::__compressed_pair_elem.1487" }
%"struct.std::__1::__compressed_pair_elem.1487" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.1491" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.1492" = type { %"class.std::__1::__compressed_pair.1493" }
%"class.std::__1::__compressed_pair.1493" = type { %"struct.std::__1::__compressed_pair_elem.1494" }
%"struct.std::__1::__compressed_pair_elem.1494" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.std::__1::unique_ptr.1498" = type { %"class.std::__1::__compressed_pair.1499" }
%"class.std::__1::__compressed_pair.1499" = type { %"struct.std::__1::__compressed_pair_elem.1500" }
%"struct.std::__1::__compressed_pair_elem.1500" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote.1504" = type { %"class.blink::Member.1505" }
%"class.blink::Member.1505" = type { %"class.blink::MemberBase.1506" }
%"class.blink::MemberBase.1506" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.1999" }
%"class.mojo::AssociatedRemote.1999" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2000" }
%"class.mojo::internal::AssociatedInterfacePtrState.2000" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2001" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.469", i32 }>
%"class.std::__1::unique_ptr.2001" = type { %"class.std::__1::__compressed_pair.2002" }
%"class.std::__1::__compressed_pair.2002" = type { %"struct.std::__1::__compressed_pair_elem.2003" }
%"struct.std::__1::__compressed_pair_elem.2003" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.1507" = type { %"class.blink::Member.1508" }
%"class.blink::Member.1508" = type { %"class.blink::MemberBase.1509" }
%"class.blink::MemberBase.1509" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2009" }
%"class.mojo::AssociatedRemote.2009" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2010" }
%"class.mojo::internal::AssociatedInterfacePtrState.2010" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2011" }
%"class.std::__1::unique_ptr.2011" = type { %"class.std::__1::__compressed_pair.2012" }
%"class.std::__1::__compressed_pair.2012" = type { %"struct.std::__1::__compressed_pair_elem.2013" }
%"struct.std::__1::__compressed_pair_elem.2013" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver.1510" = type { %"class.blink::Member.1511" }
%"class.blink::Member.1511" = type { %"class.blink::MemberBase.1512" }
%"class.blink::MemberBase.1512" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2019", %"class.blink::Member.1093", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2019" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.2020" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.469" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.2020" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.1513" = type { %"class.blink::Member.1514" }
%"class.blink::Member.1514" = type { %"class.blink::MemberBase.1515" }
%"class.blink::MemberBase.1515" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2023", %"class.blink::Member.1093", %"class.mojo::AssociatedReceiver.2024" }
%"class.blink::ThreadState::PrefinalizerRegistration.2023" = type { i8 }
%"class.mojo::AssociatedReceiver.2024" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.2025" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.2025" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver.1516" = type { %"class.blink::Member.1517" }
%"class.blink::Member.1517" = type { %"class.blink::MemberBase.1518" }
%"class.blink::MemberBase.1518" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2028", %"class.blink::Member.1093", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2028" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.354, %"class.std::__1::unique_ptr.469", %"class.base::WeakPtrFactory.2029" }
%"class.base::WeakPtrFactory.2029" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.1519" = type { %"class.blink::Member.1520" }
%"class.blink::Member.1520" = type { %"class.blink::MemberBase.1521" }
%"class.blink::MemberBase.1521" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2032", %"class.blink::Member.1093", %"class.mojo::AssociatedReceiver.2033" }
%"class.blink::ThreadState::PrefinalizerRegistration.2032" = type { i8 }
%"class.mojo::AssociatedReceiver.2033" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.2034" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.2034" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1522" = type { %"class.blink::MemberBase.1523" }
%"class.blink::MemberBase.1523" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.1524" = type { %"class.blink::MemberBase.1525" }
%"class.blink::MemberBase.1525" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.1526" = type { %"class.blink::MemberBase.1527" }
%"class.blink::MemberBase.1527" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.1528" = type { %"class.blink::MemberBase.1529" }
%"class.blink::MemberBase.1529" = type { %"class.blink::HeapHashMap.1530"* }
%"class.blink::HeapHashMap.1530" = type opaque
%"class.mojo::StructPtr.1531" = type { %"class.std::__1::unique_ptr.1532" }
%"class.std::__1::unique_ptr.1532" = type { %"class.std::__1::__compressed_pair.1533" }
%"class.std::__1::__compressed_pair.1533" = type { %"struct.std::__1::__compressed_pair_elem.1534" }
%"struct.std::__1::__compressed_pair_elem.1534" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.1535", %"class.mojo::InlinedStructPtr.1536" }
%"class.mojo::InlinedStructPtr.1535" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.1536" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.1540" = type { %"class.blink::MemberBase.1541" }
%"class.blink::MemberBase.1541" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.1542" = type { %"class.absl::optional_internal::optional_data.1543" }
%"class.absl::optional_internal::optional_data.1543" = type { %"class.absl::optional_internal::optional_data_base.1544" }
%"class.absl::optional_internal::optional_data_base.1544" = type { %"class.absl::optional_internal::optional_data_dtor_base.1545" }
%"class.absl::optional_internal::optional_data_dtor_base.1545" = type { i8, %union.anon.1546 }
%union.anon.1546 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.941", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair.1393"*, %"struct.std::__1::pair.1393"*, %"class.std::__1::__compressed_pair.1394" }
%"struct.std::__1::pair.1393" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.1394" = type { %"struct.std::__1::__compressed_pair_elem.1395" }
%"struct.std::__1::__compressed_pair_elem.1395" = type { %"struct.std::__1::pair.1393"* }
%"class.blink::Member.1399" = type { %"class.blink::MemberBase.1400" }
%"class.blink::MemberBase.1400" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.1401" = type { %"class.absl::optional_internal::optional_data.1402" }
%"class.absl::optional_internal::optional_data.1402" = type { %"class.absl::optional_internal::optional_data_base.1403" }
%"class.absl::optional_internal::optional_data_base.1403" = type { %"class.absl::optional_internal::optional_data_dtor_base.1404" }
%"class.absl::optional_internal::optional_data_dtor_base.1404" = type { i8, %union.anon.1405 }
%union.anon.1405 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.1406" = type { %"class.absl::optional_internal::optional_data.1407" }
%"class.absl::optional_internal::optional_data.1407" = type { %"class.absl::optional_internal::optional_data_base.1408" }
%"class.absl::optional_internal::optional_data_base.1408" = type { %"class.absl::optional_internal::optional_data_dtor_base.1409" }
%"class.absl::optional_internal::optional_data_dtor_base.1409" = type { i8, %union.anon.1410 }
%union.anon.1410 = type { %"class.base::UnguessableToken" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.1411" }
%"class.blink::HeapHashSet.1411" = type { %"class.WTF::HashSet.1414" }
%"class.WTF::HashSet.1414" = type { %"class.WTF::HashTable.1415" }
%"class.WTF::HashTable.1415" = type <{ %"class.blink::WeakMember.1417"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1417" = type opaque
%"class.blink::Member.943" = type { %"class.blink::MemberBase.944" }
%"class.blink::MemberBase.944" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::Member.945" = type { %"class.blink::MemberBase.946" }
%"class.blink::MemberBase.946" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.947" = type { %"class.blink::MemberBase.948" }
%"class.blink::MemberBase.948" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.949" = type { %"class.WTF::VectorBuffer.950" }
%"class.WTF::VectorBuffer.950" = type { %"class.WTF::VectorBufferBase.951" }
%"class.WTF::VectorBufferBase.951" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType.952", %"class.mojo::Remote.954", i8, %"class.WTF::String" }
%"class.mojo::Remote.954" = type { %"class.mojo::internal::InterfacePtrState.955" }
%"class.mojo::internal::InterfacePtrState.955" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.956" }
%"class.std::__1::unique_ptr.956" = type { %"class.std::__1::__compressed_pair.957" }
%"class.std::__1::__compressed_pair.957" = type { %"struct.std::__1::__compressed_pair_elem.958" }
%"struct.std::__1::__compressed_pair_elem.958" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.771", i32, i8, [3 x i8], %"class.blink::HeapVector.773", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.781", %"class.blink::Member.783", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.792", %"class.blink::Member.848", %"class.blink::Member.850", i8 }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.710" }
%"class.blink::HeapHashMap.710" = type { %"class.WTF::HashMap.713" }
%"class.WTF::HashMap.713" = type { %"class.WTF::HashTable.714" }
%"class.WTF::HashTable.714" = type <{ %"struct.WTF::KeyValuePair.716"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.716" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.717" }
%"class.blink::Supplementable.717" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.718" }
%"class.blink::HeapHashMap.718" = type { %"class.WTF::HashMap.721" }
%"class.WTF::HashMap.721" = type { %"class.WTF::HashTable.722" }
%"class.WTF::HashTable.722" = type <{ %"struct.WTF::KeyValuePair.724"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.724" = type { i8*, %"class.blink::Member.1963" }
%"class.blink::Member.1963" = type { %"class.blink::MemberBase.1964" }
%"class.blink::MemberBase.1964" = type { %"class.blink::Supplement.1965"* }
%"class.blink::Supplement.1965" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1966" }
%"class.blink::Member.1966" = type { %"class.blink::MemberBase.1967" }
%"class.blink::MemberBase.1967" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.725, %"class.std::__1::unique_ptr.734", %"class.std::__1::unique_ptr.734", %"class.std::__1::unique_ptr.761", %"class.std::__1::unique_ptr.761", %"class.blink::Member.668", i32, [4 x i8], %"class.WTF::HashSet.767", i32, i32 }
%class.scoped_refptr.725 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.726", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.728", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.733 }
%"class.WTF::RefCounted.726" = type { %"class.base::RefCounted.727" }
%"class.base::RefCounted.727" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.728" = type { %"class.absl::optional_internal::optional_data.729" }
%"class.absl::optional_internal::optional_data.729" = type { %"class.absl::optional_internal::optional_data_base.730" }
%"class.absl::optional_internal::optional_data_base.730" = type { %"class.absl::optional_internal::optional_data_dtor_base.731" }
%"class.absl::optional_internal::optional_data_dtor_base.731" = type { i8, %union.anon.732 }
%union.anon.732 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.733 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.734" = type { %"class.std::__1::__compressed_pair.735" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.736" }
%"struct.std::__1::__compressed_pair_elem.736" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map.737", %"class.std::__1::map.748", %"class.std::__1::map.757"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.728" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::map.737" = type { %"class.std::__1::__tree.738" }
%"class.std::__1::__tree.738" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.739", %"class.std::__1::__compressed_pair.743" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.409" }
%"class.std::__1::__compressed_pair.743" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"class.std::__1::map.748" = type { %"class.std::__1::__tree.749" }
%"class.std::__1::__tree.749" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.750", %"class.std::__1::__compressed_pair.754" }
%"class.std::__1::__compressed_pair.750" = type { %"struct.std::__1::__compressed_pair_elem.409" }
%"class.std::__1::__compressed_pair.754" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"class.std::__1::map.757" = type opaque
%"class.std::__1::unique_ptr.761" = type { %"class.std::__1::__compressed_pair.762" }
%"class.std::__1::__compressed_pair.762" = type { %"struct.std::__1::__compressed_pair_elem.763" }
%"struct.std::__1::__compressed_pair_elem.763" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.767" = type { %"class.WTF::HashTable.768" }
%"class.WTF::HashTable.768" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.771" = type { %"class.blink::MemberBase.772" }
%"class.blink::MemberBase.772" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.773" = type { %"class.WTF::Vector.776" }
%"class.WTF::Vector.776" = type { %"class.WTF::VectorBuffer.777" }
%"class.WTF::VectorBuffer.777" = type { %"class.WTF::VectorBufferBase.778" }
%"class.WTF::VectorBufferBase.778" = type { %"class.blink::Member.779"*, i32, i32 }
%"class.blink::Member.779" = type opaque
%"class.blink::Member.781" = type { %"class.blink::MemberBase.782" }
%"class.blink::MemberBase.782" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.783" = type { %"class.blink::MemberBase.784" }
%"class.blink::MemberBase.784" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.785", i32, i32 }
%"class.blink::HeapHashMap.785" = type { %"class.WTF::HashMap.788" }
%"class.WTF::HashMap.788" = type { %"class.WTF::HashTable.789" }
%"class.WTF::HashTable.789" = type <{ %"struct.WTF::KeyValuePair.791"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.791" = type opaque
%"class.std::__1::unique_ptr.792" = type { %"class.std::__1::__compressed_pair.793" }
%"class.std::__1::__compressed_pair.793" = type { %"struct.std::__1::__compressed_pair_elem.794" }
%"struct.std::__1::__compressed_pair_elem.794" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr.795", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr.795" = type { %"class.std::__1::unique_ptr.796" }
%"class.std::__1::unique_ptr.796" = type { %"class.std::__1::__compressed_pair.797" }
%"class.std::__1::__compressed_pair.797" = type { %"struct.std::__1::__compressed_pair_elem.798" }
%"struct.std::__1::__compressed_pair_elem.798" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.799" }
%"class.WTF::Vector.799" = type { %"class.WTF::VectorBuffer.800" }
%"class.WTF::VectorBuffer.800" = type { %"class.WTF::VectorBufferBase.801" }
%"class.WTF::VectorBufferBase.801" = type { %"class.mojo::StructPtr.802"*, i32, i32 }
%"class.mojo::StructPtr.802" = type { %"class.std::__1::unique_ptr.803" }
%"class.std::__1::unique_ptr.803" = type { %"class.std::__1::__compressed_pair.804" }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"struct.std::__1::__compressed_pair_elem.805" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.806", %"class.WTF::HashMap.813", %"class.WTF::HashMap.818", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr.823", i8, %"class.WTF::Vector", i32, %"class.mojo::StructPtr.824", %"class.WTF::Vector" }
%"class.mojo::StructPtr.806" = type { %"class.std::__1::unique_ptr.807" }
%"class.std::__1::unique_ptr.807" = type { %"class.std::__1::__compressed_pair.808" }
%"class.std::__1::__compressed_pair.808" = type { %"struct.std::__1::__compressed_pair_elem.809" }
%"struct.std::__1::__compressed_pair_elem.809" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.813" = type { %"class.WTF::HashTable.814" }
%"class.WTF::HashTable.814" = type <{ %"struct.WTF::KeyValuePair.817"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.817" = type opaque
%"class.WTF::HashMap.818" = type { %"class.WTF::HashTable.819" }
%"class.WTF::HashTable.819" = type <{ %"struct.WTF::KeyValuePair.822"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.822" = type opaque
%"class.mojo::InlinedStructPtr.823" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.824" = type { %"class.std::__1::unique_ptr.825" }
%"class.std::__1::unique_ptr.825" = type { %"class.std::__1::__compressed_pair.826" }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector", i8, i8, [6 x i8] }>
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.839" }
%"class.std::__1::unique_ptr.839" = type { %"class.std::__1::__compressed_pair.840" }
%"class.std::__1::__compressed_pair.840" = type { %"struct.std::__1::__compressed_pair_elem.841" }
%"struct.std::__1::__compressed_pair_elem.841" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.848" = type { %"class.blink::MemberBase.849" }
%"class.blink::MemberBase.849" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.850" = type { %"class.blink::MemberBase.851" }
%"class.blink::MemberBase.851" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Supplementable.964" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.965" }
%"class.blink::HeapHashMap.965" = type { %"class.WTF::HashMap.968" }
%"class.WTF::HashMap.968" = type { %"class.WTF::HashTable.969" }
%"class.WTF::HashTable.969" = type <{ %"struct.WTF::KeyValuePair.971"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.971" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration.972" = type { i8 }
%"class.blink::Member.973" = type { %"class.blink::MemberBase.974" }
%"class.blink::MemberBase.974" = type { %"class.blink::ScriptController"* }
%"class.blink::ScriptController" = type opaque
%"class.blink::Member.975" = type { %"class.blink::MemberBase.976" }
%"class.blink::MemberBase.976" = type { %"class.blink::DOMVisualViewport"* }
%"class.blink::DOMVisualViewport" = type opaque
%"class.blink::Member.977" = type { %"class.blink::MemberBase.978" }
%"class.blink::MemberBase.978" = type { %"class.blink::Screen"* }
%"class.blink::Screen" = type opaque
%"class.blink::Member.979" = type { %"class.blink::MemberBase.980" }
%"class.blink::MemberBase.980" = type { %"class.blink::History"* }
%"class.blink::History" = type opaque
%"class.blink::Member.981" = type { %"class.blink::MemberBase.982" }
%"class.blink::MemberBase.982" = type { %"class.blink::BarProp"* }
%"class.blink::BarProp" = type opaque
%"class.blink::Member.983" = type { %"class.blink::MemberBase.984" }
%"class.blink::MemberBase.984" = type { %"class.blink::StyleMedia"* }
%"class.blink::StyleMedia" = type opaque
%"class.blink::Member.985" = type { %"class.blink::MemberBase.986" }
%"class.blink::MemberBase.986" = type { %"class.blink::CustomElementRegistry"* }
%"class.blink::CustomElementRegistry" = type opaque
%"class.blink::Member.987" = type { %"class.blink::MemberBase.988" }
%"class.blink::MemberBase.988" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type opaque
%"class.blink::Member.989" = type { %"class.blink::MemberBase.990" }
%"class.blink::MemberBase.990" = type { %"class.blink::External"* }
%"class.blink::External" = type opaque
%"class.blink::Member.991" = type { %"class.blink::MemberBase.992" }
%"class.blink::MemberBase.992" = type { %"class.blink::ApplicationCache"* }
%"class.blink::ApplicationCache" = type opaque
%class.scoped_refptr.993 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.995", i64, %"class.WTF::Vector.999", %"class.WTF::Vector.1004", %"class.WTF::Vector.1010", %"class.WTF::Vector.1028", %class.scoped_refptr.725, %"class.WTF::HashMap.1034", %"class.WTF::Vector.1039", %"class.WTF::Vector.999", %"class.WTF::Vector.1045", %"class.WTF::HashMap.1050", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.994" }
%"class.base::RefCountedThreadSafe.994" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.995" = type { %"class.std::__1::__compressed_pair.996" }
%"class.std::__1::__compressed_pair.996" = type { %"struct.std::__1::__compressed_pair_elem.997" }
%"struct.std::__1::__compressed_pair_elem.997" = type { i8* }
%"class.WTF::Vector.1004" = type { %"class.WTF::VectorBuffer.1005" }
%"class.WTF::VectorBuffer.1005" = type { %"class.WTF::VectorBufferBase.1006", [8 x i8] }
%"class.WTF::VectorBufferBase.1006" = type { %class.scoped_refptr.1007*, i32, i32 }
%class.scoped_refptr.1007 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.1010" = type { %"class.WTF::VectorBuffer.1011" }
%"class.WTF::VectorBuffer.1011" = type { %"class.WTF::VectorBufferBase.1012" }
%"class.WTF::VectorBufferBase.1012" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.1014", %"class.std::__1::unique_ptr.1020" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.1013 }
%class.scoped_refptr.1013 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.1014" = type { %"class.std::__1::__compressed_pair.1015" }
%"class.std::__1::__compressed_pair.1015" = type { %"struct.std::__1::__compressed_pair_elem.1016" }
%"struct.std::__1::__compressed_pair_elem.1016" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1020" = type { %"class.std::__1::__compressed_pair.1021" }
%"class.std::__1::__compressed_pair.1021" = type { %"struct.std::__1::__compressed_pair_elem.1022" }
%"struct.std::__1::__compressed_pair_elem.1022" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.1028" = type { %"class.WTF::VectorBuffer.1029" }
%"class.WTF::VectorBuffer.1029" = type { %"class.WTF::VectorBufferBase.1030" }
%"class.WTF::VectorBufferBase.1030" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.1031", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.1031" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.1034" = type { %"class.WTF::HashTable.1035" }
%"class.WTF::HashTable.1035" = type <{ %"struct.WTF::KeyValuePair.1038"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1038" = type opaque
%"class.WTF::Vector.1039" = type { %"class.WTF::VectorBuffer.1040" }
%"class.WTF::VectorBuffer.1040" = type { %"class.WTF::VectorBufferBase.1041" }
%"class.WTF::VectorBufferBase.1041" = type { %"class.mojo::ScopedHandleBase.1042"*, i32, i32 }
%"class.mojo::ScopedHandleBase.1042" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.999" = type { %"class.WTF::VectorBuffer.1000" }
%"class.WTF::VectorBuffer.1000" = type { %"class.WTF::VectorBufferBase.1001", [16 x i8] }
%"class.WTF::VectorBufferBase.1001" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.1045" = type { %"class.WTF::VectorBuffer.1046" }
%"class.WTF::VectorBuffer.1046" = type { %"class.WTF::VectorBufferBase.1047" }
%"class.WTF::VectorBufferBase.1047" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.WTF::HashMap.1050" = type { %"class.WTF::HashTable.1051" }
%"class.WTF::HashTable.1051" = type <{ %"struct.WTF::KeyValuePair.1054"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1054" = type { i8**, %"class.std::__1::unique_ptr.1968" }
%"class.std::__1::unique_ptr.1968" = type { %"class.std::__1::__compressed_pair.1969" }
%"class.std::__1::__compressed_pair.1969" = type { %"struct.std::__1::__compressed_pair_elem.1970" }
%"struct.std::__1::__compressed_pair_elem.1970" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::HeapHashSet.1055" = type { %"class.WTF::HashSet.1058" }
%"class.WTF::HashSet.1058" = type { %"class.WTF::HashTable.1059" }
%"class.WTF::HashTable.1059" = type <{ %"class.blink::WeakMember.1061"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1061" = type opaque
%"class.blink::Member.1062" = type { %"class.blink::MemberBase.1063" }
%"class.blink::MemberBase.1063" = type { %"class.blink::Event"* }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.1064", %"class.blink::Member.1064", %"class.blink::Member.1066", %"class.blink::Member.1068", %"class.base::TimeTicks" }
%"class.blink::Member.1064" = type { %"class.blink::MemberBase.1065" }
%"class.blink::MemberBase.1065" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.1066" = type { %"class.blink::MemberBase.1067" }
%"class.blink::MemberBase.1067" = type { %"class.blink::Event"* }
%"class.blink::Member.1068" = type { %"class.blink::MemberBase.1069" }
%"class.blink::MemberBase.1069" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type { %"class.blink::HeapVector.1835", %"class.blink::Member.303", %"class.blink::Member.1062", %"class.blink::HeapVector.1844", %"class.blink::Member.1852" }
%"class.blink::HeapVector.1835" = type { %"class.WTF::Vector.1838" }
%"class.WTF::Vector.1838" = type { %"class.WTF::VectorBuffer.1839" }
%"class.WTF::VectorBuffer.1839" = type { %"class.WTF::VectorBufferBase.1840" }
%"class.WTF::VectorBufferBase.1840" = type { %"class.blink::NodeEventContext"*, i32, i32 }
%"class.blink::NodeEventContext" = type { %"class.blink::Member.303", %"class.blink::Member.1064", %"class.blink::Member.1841" }
%"class.blink::Member.1841" = type { %"class.blink::MemberBase.1842" }
%"class.blink::MemberBase.1842" = type { %"class.blink::TreeScopeEventContext"* }
%"class.blink::TreeScopeEventContext" = type { %"class.blink::Member.305", %"class.blink::Member.1064", %"class.blink::Member.1064", %"class.blink::Member.1856", %"class.blink::Member.1859", %"class.blink::Member.1841", %"class.blink::HeapVector.1861", i32, i32 }
%"class.blink::Member.1856" = type { %"class.blink::MemberBase.1857" }
%"class.blink::MemberBase.1857" = type { %"class.blink::HeapVector.1858"* }
%"class.blink::HeapVector.1858" = type opaque
%"class.blink::Member.1859" = type { %"class.blink::MemberBase.1860" }
%"class.blink::MemberBase.1860" = type { %"class.blink::TouchEventContext"* }
%"class.blink::TouchEventContext" = type opaque
%"class.blink::HeapVector.1861" = type { %"class.WTF::Vector.1864" }
%"class.WTF::Vector.1864" = type { %"class.WTF::VectorBuffer.1865" }
%"class.WTF::VectorBuffer.1865" = type { %"class.WTF::VectorBufferBase.1849" }
%"class.WTF::VectorBufferBase.1849" = type { %"class.blink::Member.1841"*, i32, i32 }
%"class.blink::HeapVector.1844" = type { %"class.WTF::Vector.1847" }
%"class.WTF::Vector.1847" = type { %"class.WTF::VectorBuffer.1848" }
%"class.WTF::VectorBuffer.1848" = type { %"class.WTF::VectorBufferBase.1849", [64 x i8] }
%"class.blink::Member.1852" = type { %"class.blink::MemberBase.1853" }
%"class.blink::MemberBase.1853" = type { %"class.blink::WindowEventContext"* }
%"class.blink::WindowEventContext" = type opaque
%"class.blink::HeapHashMap.1070" = type { %"class.WTF::HashMap.1073" }
%"class.WTF::HashMap.1073" = type { %"class.WTF::HashTable.1074" }
%"class.WTF::HashTable.1074" = type <{ %"struct.WTF::KeyValuePair.1076"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1076" = type opaque
%"class.std::__1::unique_ptr.1077" = type { %"class.std::__1::__compressed_pair.1078" }
%"class.std::__1::__compressed_pair.1078" = type { %"struct.std::__1::__compressed_pair_elem.1079" }
%"struct.std::__1::__compressed_pair_elem.1079" = type { %"class.blink::FrameOrWorkerScheduler"* }
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::InputMethodController"* }
%"class.blink::InputMethodController" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.1093", %"class.blink::CachedTextInputInfo", %"class.blink::Member.1104", %"class.blink::Member.1106", i8, i32 }
%"class.blink::CachedTextInputInfo" = type { %"class.blink::Member.1095", %"class.blink::LayoutObject"*, %"class.blink::HeapHashMap.1097", %"class.WTF::String", %"class.blink::CachedTextInputInfo::CachedPlainTextRange", %"class.blink::CachedTextInputInfo::CachedPlainTextRange" }
%"class.blink::Member.1095" = type { %"class.blink::MemberBase.1096" }
%"class.blink::MemberBase.1096" = type { %"class.blink::ContainerNode"* }
%"class.blink::HeapHashMap.1097" = type { %"class.WTF::HashMap.1100" }
%"class.WTF::HashMap.1100" = type { %"class.WTF::HashTable.1101" }
%"class.WTF::HashTable.1101" = type <{ %"struct.WTF::KeyValuePair.1103"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1103" = type opaque
%"class.blink::CachedTextInputInfo::CachedPlainTextRange" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i32 }
%"class.blink::PositionTemplate" = type { %"class.blink::Member.303", i32, i32 }
%"class.blink::Member.1106" = type { %"class.blink::MemberBase.1107" }
%"class.blink::MemberBase.1107" = type { %"class.blink::EditContext"* }
%"class.blink::EditContext" = type opaque
%"class.blink::Member.1108" = type { %"class.blink::MemberBase.1109" }
%"class.blink::MemberBase.1109" = type { %"class.blink::SpellChecker"* }
%"class.blink::SpellChecker" = type { %"class.blink::Member.939", %"class.blink::Member.1379", %"class.blink::Member.1381" }
%"class.blink::Member.1379" = type { %"class.blink::MemberBase.1380" }
%"class.blink::MemberBase.1380" = type { %"class.blink::SpellCheckRequester"* }
%"class.blink::SpellCheckRequester" = type opaque
%"class.blink::Member.1381" = type { %"class.blink::MemberBase.1382" }
%"class.blink::MemberBase.1382" = type { %"class.blink::IdleSpellCheckController"* }
%"class.blink::IdleSpellCheckController" = type opaque
%"class.blink::Member.1110" = type { %"class.blink::MemberBase.1111" }
%"class.blink::MemberBase.1111" = type { %"class.blink::TextSuggestionController"* }
%"class.blink::TextSuggestionController" = type { i32 (...)**, i8, %"class.blink::Member.939", %"class.blink::HeapMojoRemote.1374" }
%"class.blink::HeapMojoRemote.1374" = type { %"class.blink::Member.1375" }
%"class.blink::Member.1375" = type { %"class.blink::MemberBase.1376" }
%"class.blink::MemberBase.1376" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.1112" = type { %"class.blink::MemberBase.1113" }
%"class.blink::MemberBase.1113" = type { %"class.blink::HeapHashMap.1114"* }
%"class.blink::HeapHashMap.1114" = type opaque
%"class.util::TokenType.952" = type { %"class.base::StrongAlias.953" }
%"class.base::StrongAlias.953" = type { %"class.base::UnguessableToken" }
%"class.WTF::HashSet.1120" = type { %"class.WTF::HashTable.1121" }
%"class.WTF::HashTable.1121" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Deque.1124" = type { %"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.1127" }
%"class.WTF::VectorBuffer.1127" = type { %"class.WTF::VectorBufferBase.1128" }
%"class.WTF::VectorBufferBase.1128" = type { i64*, i32, i32 }
%"class.blink::Member.668" = type { %"class.blink::MemberBase.669" }
%"class.blink::MemberBase.669" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.771", i32, i8, [3 x i8], %"class.blink::HeapVector.773", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.781", %"class.blink::Member.783", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.792", %"class.blink::Member.848", %"class.blink::Member.850", i8, [7 x i8] }>
%"class.blink::Member.1129" = type { %"class.blink::MemberBase.1130" }
%"class.blink::MemberBase.1130" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.1131" = type { %"class.blink::MemberBase.1132" }
%"class.blink::MemberBase.1132" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.1133" = type { %"class.blink::MemberBase.1134" }
%"class.blink::MemberBase.1134" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1135" = type { %"class.blink::MemberBase.1136" }
%"class.blink::MemberBase.1136" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1143" = type { %"class.std::__1::__compressed_pair.1144" }
%"class.std::__1::__compressed_pair.1144" = type { %"struct.std::__1::__compressed_pair_elem.1145" }
%"struct.std::__1::__compressed_pair_elem.1145" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.1137" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.1137" = type { %"class.std::__1::__compressed_pair.1138" }
%"class.std::__1::__compressed_pair.1138" = type { %"struct.std::__1::__compressed_pair_elem.1139" }
%"struct.std::__1::__compressed_pair_elem.1139" = type { %"class.blink::KURL"* }
%"class.blink::Member.1149" = type { %"class.blink::MemberBase.1150" }
%"class.blink::MemberBase.1150" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1151" = type { %"class.blink::MemberBase.1152" }
%"class.blink::MemberBase.1152" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.894" = type { %"class.blink::MemberBase.895" }
%"class.blink::MemberBase.895" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.896", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.898, %"class.WTF::Vector.899", %"class.WTF::Vector.899", %"class.blink::Member.303", %"class.blink::Member.904", %"class.blink::HeapHashSet.908", %"class.blink::Member.333", %"class.WTF::HashSet.915", %"class.WTF::TextPosition", %"class.blink::Member.919", %"class.blink::HeapVector.921", %"class.blink::Member.928" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.896" = type { %"class.blink::MemberBase.897" }
%"class.blink::MemberBase.897" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.898 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.899" = type { %"class.WTF::VectorBuffer.900" }
%"class.WTF::VectorBuffer.900" = type { %"class.WTF::VectorBufferBase.901" }
%"class.WTF::VectorBufferBase.901" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.904" = type { %"class.blink::MemberBase.905" }
%"class.blink::MemberBase.905" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.906" }
%"class.blink::Member.906" = type { %"class.blink::MemberBase.907" }
%"class.blink::MemberBase.907" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.908" = type { %"class.WTF::HashSet.911" }
%"class.WTF::HashSet.911" = type { %"class.WTF::HashTable.912" }
%"class.WTF::HashTable.912" = type <{ %"class.blink::WeakMember.914"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.914" = type { %"class.blink::MemberBase.306" }
%"class.WTF::HashSet.915" = type { %"class.WTF::HashTable.916" }
%"class.WTF::HashTable.916" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.921" = type { %"class.WTF::Vector.924" }
%"class.WTF::Vector.924" = type { %"class.WTF::VectorBuffer.925" }
%"class.WTF::VectorBuffer.925" = type { %"class.WTF::VectorBufferBase.926" }
%"class.WTF::VectorBufferBase.926" = type { %"class.blink::Member.904"*, i32, i32 }
%"class.blink::Member.928" = type { %"class.blink::MemberBase.929" }
%"class.blink::MemberBase.929" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.1153" = type { %"class.WTF::VectorBuffer.1154" }
%"class.WTF::VectorBuffer.1154" = type { %"class.WTF::VectorBufferBase.1155" }
%"class.WTF::VectorBufferBase.1155" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.241 }
%class.scoped_refptr.241 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.1104" = type { %"class.blink::MemberBase.1105" }
%"class.blink::MemberBase.1105" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.333", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.303", %"class.blink::Member.303", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1161" }
%"class.blink::HeapHashMap.1161" = type { %"class.WTF::HashMap.1164" }
%"class.WTF::HashMap.1164" = type { %"class.WTF::HashTable.1165" }
%"class.WTF::HashTable.1165" = type <{ %"struct.WTF::KeyValuePair.1167"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1167" = type opaque
%"class.blink::Member.1168" = type { %"class.blink::MemberBase.1169" }
%"class.blink::MemberBase.1169" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1170" = type { %"class.WTF::HashSet.1173" }
%"class.WTF::HashSet.1173" = type { %"class.WTF::HashTable.1174" }
%"class.WTF::HashTable.1174" = type <{ %"class.blink::WeakMember.1176"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1176" = type opaque
%"class.blink::HeapHashSet.1177" = type { %"class.WTF::HashSet.1180" }
%"class.WTF::HashSet.1180" = type { %"class.WTF::HashTable.1181" }
%"class.WTF::HashTable.1181" = type <{ %"class.blink::WeakMember.1183"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1183" = type opaque
%"class.blink::Member.1184" = type { %"class.blink::MemberBase.1185" }
%"class.blink::MemberBase.1185" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1186" = type { %"class.blink::MemberBase.1187" }
%"class.blink::MemberBase.1187" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.1188" = type { %"class.blink::MemberBase.1189" }
%"class.blink::MemberBase.1189" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.305", %"class.blink::HeapVector.888" }
%"class.blink::Member.1190" = type { %"class.blink::MemberBase.1191" }
%"class.blink::MemberBase.1191" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1192" = type { %"class.blink::MemberBase.1193" }
%"class.blink::MemberBase.1193" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1194" = type { %"class.WTF::HashMap.1197" }
%"class.WTF::HashMap.1197" = type { %"class.WTF::HashTable.1198" }
%"class.WTF::HashTable.1198" = type <{ %"struct.WTF::KeyValuePair.1200"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1200" = type opaque
%"class.WTF::Vector.1201" = type { %"class.WTF::VectorBuffer.1202" }
%"class.WTF::VectorBuffer.1202" = type { %"class.WTF::VectorBufferBase.1203" }
%"class.WTF::VectorBufferBase.1203" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1206" = type { %"class.blink::MemberBase.1207" }
%"class.blink::MemberBase.1207" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1208" = type { %"class.blink::MemberBase.1209" }
%"class.blink::MemberBase.1209" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1210" = type { %"class.blink::MemberBase.1211" }
%"class.blink::MemberBase.1211" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1212" = type { %"class.WTF::Vector.1215" }
%"class.WTF::Vector.1215" = type { %"class.WTF::VectorBuffer.1216" }
%"class.WTF::VectorBuffer.1216" = type { %"class.WTF::VectorBufferBase.1217" }
%"class.WTF::VectorBufferBase.1217" = type { %"class.blink::Member.1218"*, i32, i32 }
%"class.blink::Member.1218" = type opaque
%"class.std::__1::unique_ptr.1220" = type { %"class.std::__1::__compressed_pair.1221" }
%"class.std::__1::__compressed_pair.1221" = type { %"struct.std::__1::__compressed_pair_elem.1222" }
%"struct.std::__1::__compressed_pair_elem.1222" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.1226" = type { %"class.WTF::HashSet.1229" }
%"class.WTF::HashSet.1229" = type { %"class.WTF::HashTable.1230" }
%"class.WTF::HashTable.1230" = type <{ %"class.blink::WeakMember.1232"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1232" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1233", i32, [4 x i8] }>
%"class.WTF::Vector.1233" = type { %"class.WTF::VectorBuffer.1234" }
%"class.WTF::VectorBuffer.1234" = type { %"class.WTF::VectorBufferBase.1235" }
%"class.WTF::VectorBufferBase.1235" = type { %"struct.std::__1::pair.1236"*, i32, i32 }
%"struct.std::__1::pair.1236" = type opaque
%"class.blink::Member.1239" = type { %"class.blink::MemberBase.1240" }
%"class.blink::MemberBase.1240" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1241" = type { %"class.WTF::VectorBuffer.1242" }
%"class.WTF::VectorBuffer.1242" = type { %"class.WTF::VectorBufferBase.1243" }
%"class.WTF::VectorBufferBase.1243" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1246" = type { %"class.std::__1::__compressed_pair.1247" }
%"class.std::__1::__compressed_pair.1247" = type { %"struct.std::__1::__compressed_pair_elem.1248" }
%"struct.std::__1::__compressed_pair_elem.1248" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.870" = type { %"class.WTF::Vector.873" }
%"class.WTF::Vector.873" = type { %"class.WTF::VectorBuffer.874" }
%"class.WTF::VectorBuffer.874" = type { %"class.WTF::VectorBufferBase.875" }
%"class.WTF::VectorBufferBase.875" = type { %"class.blink::Member.301"*, i32, i32 }
%"class.blink::HeapVector.1252" = type { %"class.WTF::Vector.1255" }
%"class.WTF::Vector.1255" = type { %"class.WTF::VectorBuffer.1256" }
%"class.WTF::VectorBuffer.1256" = type { %"class.WTF::VectorBufferBase.1257" }
%"class.WTF::VectorBufferBase.1257" = type { %"class.blink::Member.1258"*, i32, i32 }
%"class.blink::Member.1258" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.333" }
%"class.blink::Member.1260" = type { %"class.blink::MemberBase.1261" }
%"class.blink::MemberBase.1261" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1262" = type { %"class.blink::MemberBase.1263" }
%"class.blink::MemberBase.1263" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1264" = type { %"class.blink::MemberBase.1265" }
%"class.blink::MemberBase.1265" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1266" = type { %"class.blink::MemberBase.1267" }
%"class.blink::MemberBase.1267" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1268" = type { %"class.blink::MemberBase.1269" }
%"class.blink::MemberBase.1269" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1270" = type { %"class.WTF::HashTable.1271" }
%"class.WTF::HashTable.1271" = type <{ %"struct.WTF::KeyValuePair.1274"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1274" = type opaque
%"class.blink::Member.1275" = type { %"class.blink::MemberBase.1276" }
%"class.blink::MemberBase.1276" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1277" = type { %"class.blink::MemberBase.1278" }
%"class.blink::MemberBase.1278" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1279" = type { %"class.blink::MemberBase.1280" }
%"class.blink::MemberBase.1280" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1281" = type { %"class.blink::MemberBase.1282" }
%"class.blink::MemberBase.1282" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1160", { i64, i64 } }
%"class.blink::WeakMember.1160" = type { %"class.blink::MemberBase.334" }
%"class.blink::HeapHashSet.1283" = type { %"class.WTF::HashSet.1286" }
%"class.WTF::HashSet.1286" = type { %"class.WTF::HashTable.1287" }
%"class.WTF::HashTable.1287" = type <{ %"class.blink::Member.1289"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1289" = type opaque
%"class.blink::Member.1290" = type { %"class.blink::MemberBase.1291" }
%"class.blink::MemberBase.1291" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1292" = type { %"class.blink::MemberBase.1293" }
%"class.blink::MemberBase.1293" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1294" = type { %"class.blink::MemberBase.1295" }
%"class.blink::MemberBase.1295" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1296" = type { %"class.blink::MemberBase.1297" }
%"class.blink::MemberBase.1297" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1298" = type { %"class.blink::MemberBase.1299" }
%"class.blink::MemberBase.1299" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1300" = type { %"class.std::__1::__compressed_pair.1301" }
%"class.std::__1::__compressed_pair.1301" = type { %"struct.std::__1::__compressed_pair_elem.1302" }
%"struct.std::__1::__compressed_pair_elem.1302" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1306" = type { %"class.std::__1::__compressed_pair.1307" }
%"class.std::__1::__compressed_pair.1307" = type { %"struct.std::__1::__compressed_pair_elem.1308" }
%"struct.std::__1::__compressed_pair_elem.1308" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.1312" = type { %"class.blink::MemberBase.1313" }
%"class.blink::MemberBase.1313" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1314" = type { %"class.blink::MemberBase.1315" }
%"class.blink::MemberBase.1315" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1316" = type { %"class.blink::MemberBase.1317" }
%"class.blink::MemberBase.1317" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1115" = type { %"class.WTF::VectorBuffer.1116" }
%"class.WTF::VectorBuffer.1116" = type { %"class.WTF::VectorBufferBase.1117" }
%"class.WTF::VectorBufferBase.1117" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1320" = type { %"class.WTF::HashMap.1323" }
%"class.WTF::HashMap.1323" = type { %"class.WTF::HashTable.1324" }
%"class.WTF::HashTable.1324" = type <{ %"struct.WTF::KeyValuePair.1326"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1326" = type opaque
%"class.blink::Member.1327" = type { %"class.blink::MemberBase.1328" }
%"class.blink::MemberBase.1328" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1329" = type { %"class.std::__1::__compressed_pair.1330" }
%"class.std::__1::__compressed_pair.1330" = type { %"struct.std::__1::__compressed_pair_elem.1331" }
%"struct.std::__1::__compressed_pair_elem.1331" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1335" = type { %"class.blink::MemberBase.1336" }
%"class.blink::MemberBase.1336" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1337" = type { %"class.blink::MemberBase.1338" }
%"class.blink::MemberBase.1338" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1339" = type { %"class.WTF::HashMap.1342" }
%"class.WTF::HashMap.1342" = type { %"class.WTF::HashTable.1343" }
%"class.WTF::HashTable.1343" = type <{ %"struct.WTF::KeyValuePair.1345"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1345" = type opaque
%"class.blink::HeapObserverSet.1346" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1347" }
%"class.blink::HeapHashSet.1347" = type { %"class.WTF::HashSet.1350" }
%"class.WTF::HashSet.1350" = type { %"class.WTF::HashTable.1351" }
%"class.WTF::HashTable.1351" = type <{ %"class.blink::WeakMember.1353"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1353" = type opaque
%"class.blink::Member.1354" = type { %"class.blink::MemberBase.1355" }
%"class.blink::MemberBase.1355" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1356" = type { %"class.blink::MemberBase.1357" }
%"class.blink::MemberBase.1357" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.333", %"class.blink::HeapHashSet.1363", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1370", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1363" = type { %"class.WTF::HashSet.1366" }
%"class.WTF::HashSet.1366" = type { %"class.WTF::HashTable.1367" }
%"class.WTF::HashTable.1367" = type <{ %"class.blink::Member.1369"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1369" = type opaque
%"class.blink::HeapTaskRunnerTimer.1370" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1371", { i64, i64 } }
%"class.blink::WeakMember.1371" = type { %"class.blink::MemberBase.1357" }
%"class.blink::WeakMember.1358" = type { %"class.blink::MemberBase.304" }
%"class.blink::Member.1359" = type { %"class.blink::MemberBase.1360" }
%"class.blink::MemberBase.1360" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.335" = type { %"class.blink::MemberBase.336" }
%"class.blink::MemberBase.336" = type { %"class.blink::XRRenderState"* }
%"class.blink::XRRenderState" = type opaque
%"class.blink::Member.337" = type { %"class.blink::MemberBase.338" }
%"class.blink::MemberBase.338" = type { %"class.blink::XRLightProbe"* }
%"class.blink::XRLightProbe" = type opaque
%"class.blink::HeapVector.339" = type { %"class.WTF::Vector.342" }
%"class.WTF::Vector.342" = type { %"class.WTF::VectorBuffer.343" }
%"class.WTF::VectorBuffer.343" = type { %"class.WTF::VectorBufferBase.344" }
%"class.WTF::VectorBufferBase.344" = type { %"class.blink::Member.345"*, i32, i32 }
%"class.blink::Member.345" = type opaque
%"class.blink::Member.29" = type { %"class.blink::MemberBase.30" }
%"class.blink::MemberBase.30" = type { %"class.blink::ScriptPromiseResolver"* }
%"class.blink::ScriptPromiseResolver" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::ThreadState::PrefinalizerRegistration", i32, %"class.blink::Member.38", %"class.blink::TaskHandle", %"class.blink::ScriptPromise::InternalResolver", %"class.blink::TraceWrapperV8Reference.238", %"class.blink::SelfKeepAlive.242" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.38" = type { %"class.blink::MemberBase.39" }
%"class.blink::MemberBase.39" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.42, %"class.blink::Member.233", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.42 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.233" = type { %"class.blink::MemberBase.234" }
%"class.blink::MemberBase.234" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.235" }
%"class.blink::Persistent.235" = type { %"class.blink::PersistentBase.236" }
%"class.blink::PersistentBase.236" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.blink::ScriptPromise::InternalResolver" = type { %"class.blink::Member.38", %"class.blink::ScriptValue" }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.238", %class.scoped_refptr.241 }
%"class.blink::TraceWrapperV8Reference.238" = type { %"class.v8::TracedReference.239" }
%"class.v8::TracedReference.239" = type { %"class.v8::BasicTracedReference.240" }
%"class.v8::BasicTracedReference.240" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::SelfKeepAlive.242" = type { %"class.blink::Persistent.243" }
%"class.blink::Persistent.243" = type { %"class.blink::PersistentBase.244" }
%"class.blink::PersistentBase.244" = type { %"class.blink::ScriptPromiseResolver"*, %"class.blink::PersistentNodePtr" }
%"class.WTF::HashSet.347" = type { %"class.WTF::HashTable.348" }
%"class.WTF::HashTable.348" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.351" = type { %"class.std::__1::__compressed_pair.352" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.353" }
%"struct.std::__1::__compressed_pair_elem.353" = type { %"struct.blink::XRSession::MetricsReporter"* }
%"struct.blink::XRSession::MetricsReporter" = type { %"class.mojo::Remote", %"class.WTF::HashSet.347" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.519" }
%"class.std::__1::unique_ptr.519" = type { %"class.std::__1::__compressed_pair.520" }
%"class.std::__1::__compressed_pair.520" = type { %"struct.std::__1::__compressed_pair_elem.521" }
%"struct.std::__1::__compressed_pair_elem.521" = type { %"class.device::mojom::blink::XRSessionMetricsRecorderProxy"* }
%"class.device::mojom::blink::XRSessionMetricsRecorderProxy" = type { %"class.device::mojom::blink::XRSessionMetricsRecorder", %"class.mojo::MessageReceiverWithResponder"* }
%"class.device::mojom::blink::XRSessionMetricsRecorder" = type { i32 (...)** }
%"class.blink::HeapHashMap.528" = type { %"class.WTF::HashMap.531" }
%"class.WTF::HashMap.531" = type { %"class.WTF::HashTable.532" }
%"class.WTF::HashTable.532" = type <{ %"struct.WTF::KeyValuePair.534"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.534" = type opaque
%"class.blink::HeapHashMap.541" = type { %"class.WTF::HashMap.544" }
%"class.WTF::HashMap.544" = type { %"class.WTF::HashTable.545" }
%"class.WTF::HashTable.545" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type opaque
%"class.blink::HeapHashMap.548" = type { %"class.WTF::HashMap.551" }
%"class.WTF::HashMap.551" = type { %"class.WTF::HashTable.552" }
%"class.WTF::HashTable.552" = type <{ %"struct.WTF::KeyValuePair.554"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.554" = type opaque
%"class.blink::HeapHashMap.555" = type { %"class.WTF::HashMap.558" }
%"class.WTF::HashMap.558" = type { %"class.WTF::HashTable.559" }
%"class.WTF::HashTable.559" = type <{ %"struct.WTF::KeyValuePair.561"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.561" = type opaque
%"class.WTF::HashSet.562" = type { %"class.WTF::HashTable.563" }
%"class.WTF::HashTable.563" = type <{ i64*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.566" = type { %"class.blink::MemberBase.567" }
%"class.blink::MemberBase.567" = type { %"class.blink::XRPlaneManager"* }
%"class.blink::XRPlaneManager" = type opaque
%"class.blink::Member.568" = type { %"class.blink::MemberBase.569" }
%"class.blink::MemberBase.569" = type { %"class.blink::XRDepthManager"* }
%"class.blink::XRDepthManager" = type opaque
%"class.absl::optional.570" = type { %"class.absl::optional_internal::optional_data.571" }
%"class.absl::optional_internal::optional_data.571" = type { %"class.absl::optional_internal::optional_data_base.572" }
%"class.absl::optional_internal::optional_data_base.572" = type { %"class.absl::optional_internal::optional_data_dtor_base.573" }
%"class.absl::optional_internal::optional_data_dtor_base.573" = type { i8, %union.anon.574 }
%union.anon.574 = type { %"class.gfx::Size" }
%"class.blink::HeapVector.575" = type { %"class.WTF::Vector.578" }
%"class.WTF::Vector.578" = type { %"class.WTF::VectorBuffer.579" }
%"class.WTF::VectorBuffer.579" = type { %"class.WTF::VectorBufferBase.580" }
%"class.WTF::VectorBufferBase.580" = type { %"class.blink::Member.581"*, i32, i32 }
%"class.blink::Member.581" = type opaque
%"class.WTF::Vector.583" = type { %"class.WTF::VectorBuffer.584" }
%"class.WTF::VectorBuffer.584" = type { %"class.WTF::VectorBufferBase.585" }
%"class.WTF::VectorBufferBase.585" = type { %"class.mojo::StructPtr"*, i32, i32 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.586" }
%"class.std::__1::unique_ptr.586" = type { %"class.std::__1::__compressed_pair.587" }
%"class.std::__1::__compressed_pair.587" = type { %"struct.std::__1::__compressed_pair_elem.588" }
%"struct.std::__1::__compressed_pair_elem.588" = type { %"class.device::mojom::blink::XRView"* }
%"class.device::mojom::blink::XRView" = type { i32, %"class.mojo::InlinedStructPtr", %"class.gfx::Transform", %"class.gfx::Size" }
%"class.mojo::InlinedStructPtr" = type { %"class.device::mojom::blink::VRFieldOfView", i32 }
%"class.device::mojom::blink::VRFieldOfView" = type { float, float, float, float }
%"class.blink::Member.594" = type { %"class.blink::MemberBase.595" }
%"class.blink::MemberBase.595" = type { %"class.blink::XRInputSourceArray"* }
%"class.blink::XRInputSourceArray" = type { %"class.blink::ScriptWrappable", %"class.blink::HeapHashMap.596" }
%"class.blink::HeapHashMap.596" = type { %"class.WTF::HashMap.599" }
%"class.WTF::HashMap.599" = type { %"class.WTF::HashTable.600" }
%"class.WTF::HashTable.600" = type <{ %"struct.WTF::KeyValuePair.602"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.602" = type opaque
%"class.blink::Member.603" = type { %"class.blink::MemberBase.604" }
%"class.blink::MemberBase.604" = type { %"class.blink::XRWebGLLayer"* }
%"class.blink::XRWebGLLayer" = type opaque
%"class.blink::Member.605" = type { %"class.blink::MemberBase.606" }
%"class.blink::MemberBase.606" = type { %"class.blink::ResizeObserver"* }
%"class.blink::ResizeObserver" = type opaque
%"class.blink::Member.607" = type { %"class.blink::MemberBase.608" }
%"class.blink::MemberBase.608" = type { %"class.blink::XRCanvasInputProvider"* }
%"class.blink::XRCanvasInputProvider" = type opaque
%"class.blink::Member.301" = type { %"class.blink::MemberBase.302" }
%"class.blink::MemberBase.302" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.314" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.318", %"class.blink::Member.320", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.318" = type { %"class.WTF::SingleThreadedBitField.319" }
%"class.WTF::SingleThreadedBitField.319" = type { i32 }
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.322 }
%class.scoped_refptr.322 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.323", %"class.WTF::AtomicString", %"class.WTF::Vector.325" }
%"class.WTF::RefCounted.323" = type { %"class.base::RefCounted.324" }
%"class.base::RefCounted.324" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.325" = type { %"class.WTF::VectorBuffer.326" }
%"class.WTF::VectorBuffer.326" = type { %"class.WTF::VectorBufferBase.327", [32 x i8] }
%"class.WTF::VectorBufferBase.327" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::Member.609" = type { %"class.blink::MemberBase.610" }
%"class.blink::MemberBase.610" = type { %"class.blink::XRDOMOverlayState"* }
%"class.blink::XRDOMOverlayState" = type opaque
%"class.blink::HeapHashSet.535" = type { %"class.WTF::HashSet.538" }
%"class.WTF::HashSet.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"class.blink::Member.29"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapVector.611" = type { %"class.WTF::Vector.614" }
%"class.WTF::Vector.614" = type { %"class.WTF::VectorBuffer.615" }
%"class.WTF::VectorBuffer.615" = type { %"class.WTF::VectorBufferBase.616" }
%"class.WTF::VectorBufferBase.616" = type { %"class.blink::Member.617"*, i32, i32 }
%"class.blink::Member.617" = type opaque
%"class.mojo::StructPtr.619" = type { %"class.std::__1::unique_ptr.620" }
%"class.std::__1::unique_ptr.620" = type { %"class.std::__1::__compressed_pair.621" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.622" }
%"struct.std::__1::__compressed_pair_elem.622" = type { %"class.device::mojom::blink::VRStageParameters"* }
%"class.device::mojom::blink::VRStageParameters" = type { %"class.gfx::Transform", %"class.absl::optional.623" }
%"class.absl::optional.623" = type { %"class.absl::optional_internal::optional_data.624" }
%"class.absl::optional_internal::optional_data.624" = type { %"class.absl::optional_internal::optional_data_base.625" }
%"class.absl::optional_internal::optional_data_base.625" = type { %"class.absl::optional_internal::optional_data_dtor_base.626" }
%"class.absl::optional_internal::optional_data_dtor_base.626" = type { i8, %union.anon.627 }
%union.anon.627 = type { %"class.WTF::Vector.628" }
%"class.WTF::Vector.628" = type { %"class.WTF::VectorBuffer.629" }
%"class.WTF::VectorBuffer.629" = type { %"class.WTF::VectorBufferBase.630" }
%"class.WTF::VectorBufferBase.630" = type { %"class.gfx::Point3F"*, i32, i32 }
%"class.gfx::Point3F" = type { float, float, float }
%"class.blink::HeapMojoReceiver.636" = type { %"class.blink::Member.637" }
%"class.blink::Member.637" = type { %"class.blink::MemberBase.638" }
%"class.blink::MemberBase.638" = type { %"class.blink::HeapMojoReceiver<device::mojom::blink::XRSessionClient, blink::XRSession, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<device::mojom::blink::XRSessionClient, blink::XRSession, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.639" }
%"class.blink::Member.639" = type { %"class.blink::MemberBase.640" }
%"class.blink::MemberBase.640" = type { %"class.blink::HeapMojoAssociatedReceiver<device::mojom::blink::XRInputSourceButtonListener, blink::XRSession, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<device::mojom::blink::XRInputSourceButtonListener, blink::XRSession, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.WTF::Vector.641" = type { %"class.WTF::VectorBuffer.642" }
%"class.WTF::VectorBuffer.642" = type { %"class.WTF::VectorBufferBase.643" }
%"class.WTF::VectorBufferBase.643" = type { %"class.base::OnceCallback.644"*, i32, i32 }
%"class.base::OnceCallback.644" = type opaque
%"class.blink::Member.647" = type { %"class.blink::MemberBase.648" }
%"class.blink::MemberBase.648" = type { %"class.blink::XRFrameRequestCallbackCollection"* }
%"class.blink::XRFrameRequestCallbackCollection" = type { %"class.blink::NameClient", %"class.blink::HeapHashMap.651", %"class.WTF::HashMap.658", %"class.WTF::Vector.663", %"class.blink::HeapHashMap.651", %"class.WTF::HashMap.658", i32, %"class.blink::Member.668" }
%"class.WTF::Vector.663" = type { %"class.WTF::VectorBuffer.664" }
%"class.WTF::VectorBuffer.664" = type { %"class.WTF::VectorBufferBase.665" }
%"class.blink::HeapHashMap.651" = type { %"class.WTF::HashMap.654" }
%"class.WTF::HashMap.654" = type { %"class.WTF::HashTable.655" }
%"class.WTF::HashTable.655" = type <{ %"struct.WTF::KeyValuePair.657"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.657" = type opaque
%"class.WTF::HashMap.658" = type { %"class.WTF::HashTable.659" }
%"class.WTF::HashTable.659" = type <{ %"struct.WTF::KeyValuePair.662"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.662" = type opaque
%"class.std::__1::unique_ptr.676" = type { %"class.std::__1::__compressed_pair.677" }
%"class.std::__1::__compressed_pair.677" = type { %"struct.std::__1::__compressed_pair_elem.678" }
%"struct.std::__1::__compressed_pair_elem.678" = type { %"class.blink::XRSessionViewportScaler"* }
%"class.blink::XRSessionViewportScaler" = type opaque
%"class.mojo::StructPtr.1874" = type { %"class.std::__1::unique_ptr.1875" }
%"class.std::__1::unique_ptr.1875" = type { %"class.std::__1::__compressed_pair.1876" }
%"class.std::__1::__compressed_pair.1876" = type { %"struct.std::__1::__compressed_pair_elem.1877" }
%"struct.std::__1::__compressed_pair_elem.1877" = type { %"class.device::mojom::blink::XRInputSourceState"* }
%"class.device::mojom::blink::XRInputSourceState" = type { i32, %"class.mojo::StructPtr.1878", %"class.absl::optional.1882", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.absl::optional.1890", %"class.absl::optional.1895", %"class.mojo::StructPtr.1900" }
%"class.mojo::StructPtr.1878" = type { %"class.std::__1::unique_ptr.1879" }
%"class.std::__1::unique_ptr.1879" = type { %"class.std::__1::__compressed_pair.1880" }
%"class.std::__1::__compressed_pair.1880" = type { %"struct.std::__1::__compressed_pair_elem.1881" }
%"struct.std::__1::__compressed_pair_elem.1881" = type { %"class.device::mojom::blink::XRInputSourceDescription"* }
%"class.device::mojom::blink::XRInputSourceDescription" = type { i32, i32, %"class.absl::optional.1882", %"class.WTF::Vector" }
%"class.absl::optional.1882" = type { %"class.absl::optional_internal::optional_data.1883" }
%"class.absl::optional_internal::optional_data.1883" = type { %"class.absl::optional_internal::optional_data_base.1884" }
%"class.absl::optional_internal::optional_data_base.1884" = type { %"class.absl::optional_internal::optional_data_dtor_base.1885" }
%"class.absl::optional_internal::optional_data_dtor_base.1885" = type { i8, [3 x i8], %union.anon.1886 }
%union.anon.1886 = type { %"class.gfx::Transform" }
%"class.absl::optional.1890" = type { %"class.absl::optional_internal::optional_data.1891" }
%"class.absl::optional_internal::optional_data.1891" = type { %"class.absl::optional_internal::optional_data_base.1892" }
%"class.absl::optional_internal::optional_data_base.1892" = type { %"class.absl::optional_internal::optional_data_dtor_base.1893" }
%"class.absl::optional_internal::optional_data_dtor_base.1893" = type { i8, [3 x i8], %union.anon.1894 }
%union.anon.1894 = type { %"class.device::Gamepad" }
%"class.device::Gamepad" = type <{ i8, i8, [128 x i16], [2 x i8], i64, i32, i32, [16 x double], i32, [32 x %"class.device::GamepadButton"], %"class.device::GamepadHapticActuator", i32, %"class.device::GamepadPose", i32, i32, i8, [3 x i8] }>
%"class.device::GamepadButton" = type <{ i8, i8, i8, i8, double }>
%"class.device::GamepadHapticActuator" = type { i8, i32 }
%"class.device::GamepadPose" = type { i8, i8, i8, %"class.device::GamepadQuaternion", %"class.device::GamepadVector", %"class.device::GamepadVector", %"class.device::GamepadVector", %"class.device::GamepadVector", %"class.device::GamepadVector" }
%"class.device::GamepadQuaternion" = type { i8, float, float, float, float }
%"class.device::GamepadVector" = type { i8, float, float, float }
%"class.absl::optional.1895" = type { %"class.absl::optional_internal::optional_data.1896" }
%"class.absl::optional_internal::optional_data.1896" = type { %"class.absl::optional_internal::optional_data_base.1897" }
%"class.absl::optional_internal::optional_data_base.1897" = type { %"class.absl::optional_internal::optional_data_dtor_base.1898" }
%"class.absl::optional_internal::optional_data_dtor_base.1898" = type { i8, %union.anon.1899 }
%union.anon.1899 = type { %"class.gfx::PointF" }
%"class.mojo::StructPtr.1900" = type { %"class.std::__1::unique_ptr.1901" }
%"class.std::__1::unique_ptr.1901" = type { %"class.std::__1::__compressed_pair.1902" }
%"class.std::__1::__compressed_pair.1902" = type { %"struct.std::__1::__compressed_pair_elem.1903" }
%"struct.std::__1::__compressed_pair_elem.1903" = type { %"class.device::mojom::blink::XRHandTrackingData"* }
%"class.device::mojom::blink::XRHandTrackingData" = type { %"class.WTF::Vector.1904" }
%"class.WTF::Vector.1904" = type { %"class.WTF::VectorBuffer.1905" }
%"class.WTF::VectorBuffer.1905" = type { %"class.WTF::VectorBufferBase.1906" }
%"class.WTF::VectorBufferBase.1906" = type { %"class.mojo::StructPtr.1907"*, i32, i32 }
%"class.mojo::StructPtr.1907" = type { %"class.std::__1::unique_ptr.1908" }
%"class.std::__1::unique_ptr.1908" = type { %"class.std::__1::__compressed_pair.1909" }
%"class.std::__1::__compressed_pair.1909" = type { %"struct.std::__1::__compressed_pair_elem.1910" }
%"struct.std::__1::__compressed_pair_elem.1910" = type { %"class.device::mojom::blink::XRHandJointData"* }
%"class.device::mojom::blink::XRHandJointData" = type { i32, %"class.gfx::Transform", float }
%"class.blink::ExecutionContextLifecycleObserver" = type <{ %"class.blink::ContextLifecycleObserver", i32, [4 x i8] }>
%"class.absl::optional.1922" = type { %"class.absl::optional_internal::optional_data.1923" }
%"class.absl::optional_internal::optional_data.1923" = type { %"class.absl::optional_internal::optional_data_base.1924" }
%"class.absl::optional_internal::optional_data_base.1924" = type { %"class.absl::optional_internal::optional_data_dtor_base.1925" }
%"class.absl::optional_internal::optional_data_dtor_base.1925" = type { i8, %union.anon.1926 }
%union.anon.1926 = type { %"class.blink::TransformationMatrix" }
%"class.mojo::StructPtr.1927" = type { %"class.std::__1::unique_ptr.1928" }
%"class.std::__1::unique_ptr.1928" = type { %"class.std::__1::__compressed_pair.1929" }
%"class.std::__1::__compressed_pair.1929" = type { %"struct.std::__1::__compressed_pair_elem.1930" }
%"struct.std::__1::__compressed_pair_elem.1930" = type { %"class.device::mojom::blink::XRNativeOriginInformation"* }
%"class.device::mojom::blink::XRNativeOriginInformation" = type { i32, %"union.device::mojom::blink::XRNativeOriginInformation::Union_" }
%"union.device::mojom::blink::XRNativeOriginInformation::Union_" = type { i64 }
%"class.blink::XRFrame" = type <{ %"class.blink::ScriptWrappable", %"class.blink::Member", i8, i8, [6 x i8] }>
%"class.blink::XRInputSourceEvent" = type { %"class.blink::Event", %"class.blink::Member.1935", %"class.blink::Member.684" }
%"class.blink::Member.1935" = type { %"class.blink::MemberBase.1936" }
%"class.blink::MemberBase.1936" = type { %"class.blink::XRFrame"* }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::HitTestResult" = type { %"class.blink::HitTestRequest", i8, %"class.blink::Member.303", %"class.blink::Member.303", %"class.blink::Member.301", %"class.blink::Member.303", %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset", %"class.blink::Member.301", %"class.blink::Member.1591", i8, %"class.blink::Member.1937", %"class.WTF::String" }
%"class.blink::HitTestRequest" = type { i32, %"class.blink::LayoutObject"* }
%"class.blink::Member.1937" = type { %"class.blink::MemberBase.1938" }
%"class.blink::MemberBase.1938" = type { %"class.blink::HeapLinkedHashSet.1939"* }
%"class.blink::HeapLinkedHashSet.1939" = type opaque
%"class.blink::HitTestLocation" = type <{ %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalRect", %"class.blink::FloatPoint", %"class.blink::FloatQuad", i32, i8, i8, [2 x i8] }>
%"class.blink::FloatQuad" = type { %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint" }
%"class.blink::HTMLFrameOwnerElement" = type <{ %"class.blink::HTMLElement", %"class.blink::FrameOwner", %"class.blink::Member.941", %"class.blink::Member.1940", %"struct.blink::FramePolicy", %"class.blink::Member.1956", i8, i8, [6 x i8] }>
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::Member.1940" = type { %"class.blink::MemberBase.1941" }
%"class.blink::MemberBase.1941" = type { %"class.blink::EmbeddedContentView"* }
%"class.blink::EmbeddedContentView" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8, [5 x i8] }>
%"struct.blink::FramePolicy" = type <{ i32, [4 x i8], %"class.std::__1::vector.1942", %"class.base::flat_map", i8, [7 x i8] }>
%"class.std::__1::vector.1942" = type { %"class.std::__1::__vector_base.1943" }
%"class.std::__1::__vector_base.1943" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"class.std::__1::__compressed_pair.1951" }
%"struct.blink::ParsedPermissionsPolicyDeclaration" = type <{ i32, [4 x i8], %"class.std::__1::vector.1944", i8, i8, [6 x i8] }>
%"class.std::__1::vector.1944" = type { %"class.std::__1::__vector_base.1945" }
%"class.std::__1::__vector_base.1945" = type { %"class.url::Origin"*, %"class.url::Origin"*, %"class.std::__1::__compressed_pair.1946" }
%"class.std::__1::__compressed_pair.1946" = type { %"struct.std::__1::__compressed_pair_elem.1947" }
%"struct.std::__1::__compressed_pair_elem.1947" = type { %"class.url::Origin"* }
%"class.std::__1::__compressed_pair.1951" = type { %"struct.std::__1::__compressed_pair_elem.1952" }
%"struct.std::__1::__compressed_pair_elem.1952" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"* }
%"class.blink::Member.1956" = type { %"class.blink::MemberBase.1957" }
%"class.blink::MemberBase.1957" = type { %"class.blink::LazyLoadFrameObserver"* }
%"class.blink::LazyLoadFrameObserver" = type opaque
%"class.blink::XRSessionEvent" = type { %"class.blink::Event", %"class.blink::Member" }
%"class.v8::Value" = type { i8 }
%"class.blink::GamepadHapticActuator" = type { %"class.blink::ScriptWrappable", %"class.blink::ExecutionContextClient", i32, %"class.WTF::String", i8, %"class.blink::Member.1961" }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1960" }
%"class.blink::WeakMember.1960" = type { %"class.blink::MemberBase.669" }
%"class.blink::Member.1961" = type { %"class.blink::MemberBase.1962" }
%"class.blink::MemberBase.1962" = type { %"class.blink::GamepadDispatcher"* }
%"class.blink::GamepadDispatcher" = type opaque
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN5blink13XRInputSourceD2Ev = comdat any

$_ZN5blink13XRInputSourceD0Ev = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink15ScriptWrappable17HasEventListenersEv = comdat any

$_ZNK5blink13XRInputSource18GetWrapperTypeInfoEv = comdat any

$_ZN5blink13XRInputSource30GetVibrationActuatorForGamepadERKNS_7GamepadE = comdat any

$_ZThn16_N5blink13XRInputSource30GetVibrationActuatorForGamepadERKNS_7GamepadE = comdat any

$_ZThn16_N5blink13XRInputSourceD1Ev = comdat any

$_ZThn16_N5blink13XRInputSourceD0Ev = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_ = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN5blink10TraceTraitINS_9XRSessionEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_16XRTargetRaySpaceEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_11XRGripSpaceEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_7GamepadEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_6XRHandEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink13XRInputSourceE = hidden unnamed_addr constant { [12 x i8*], [6 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::XRInputSource"*)* @_ZN5blink13XRInputSourceD2Ev to i8*), i8* bitcast (void (%"class.blink::XRInputSource"*)* @_ZN5blink13XRInputSourceD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::XRInputSource"*, %"class.blink::Visitor"*)* @_ZNK5blink13XRInputSource5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::XRInputSource"*)* @_ZNK5blink13XRInputSource18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (%"class.blink::GamepadHapticActuator"* (%"class.blink::XRInputSource"*, %"class.blink::Gamepad"*)* @_ZN5blink13XRInputSource30GetVibrationActuatorForGamepadERKNS_7GamepadE to i8*)], [6 x i8*] [i8* inttoptr (i64 -16 to i8*), i8* null, i8* bitcast (void (%"class.blink::XRInputSource"*, %"class.blink::Visitor"*)* @_ZThn16_NK5blink13XRInputSource5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"class.blink::GamepadHapticActuator"* (%"class.blink::XRInputSource"*, %"class.blink::Gamepad"*)* @_ZThn16_N5blink13XRInputSource30GetVibrationActuatorForGamepadERKNS_7GamepadE to i8*), i8* bitcast (void (%"class.blink::XRInputSource"*)* @_ZThn16_N5blink13XRInputSourceD1Ev to i8*), i8* bitcast (void (%"class.blink::XRInputSource"*)* @_ZThn16_N5blink13XRInputSourceD0Ev to i8*)] }, align 8
@.str = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"left\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"right\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"gaze\00", align 1
@.str.4 = private unnamed_addr constant [16 x i8] c"tracked-pointer\00", align 1
@.str.5 = private unnamed_addr constant [7 x i8] c"screen\00", align 1
@_ZN5blink16event_type_names12kSelectstartE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16event_type_names10kSelectendE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16event_type_names7kSelectE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16event_type_names13kSqueezestartE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16event_type_names11kSqueezeendE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16event_type_names8kSqueezeE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16event_type_names15kBeforexrselectE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.6 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.7 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink13XRInputSource18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@.str.8 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.9 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@.str.10 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.12 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@_ZN5blink10html_names9kFrameTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kIFrameTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8

@_ZN5blink13XRInputSource13InternalStateC1EjN6device5mojom15XRTargetRayModeEN4base9TimeTicksE = hidden unnamed_addr alias void (%"struct.blink::XRInputSource::InternalState"*, i32, i32, i64), void (%"struct.blink::XRInputSource::InternalState"*, i32, i32, i64)* @_ZN5blink13XRInputSource13InternalStateC2EjN6device5mojom15XRTargetRayModeEN4base9TimeTicksE
@_ZN5blink13XRInputSource13InternalStateC1ERKS1_ = hidden unnamed_addr alias void (%"struct.blink::XRInputSource::InternalState"*, %"struct.blink::XRInputSource::InternalState"*), void (%"struct.blink::XRInputSource::InternalState"*, %"struct.blink::XRInputSource::InternalState"*)* @_ZN5blink13XRInputSource13InternalStateC2ERKS1_
@_ZN5blink13XRInputSource13InternalStateD1Ev = hidden unnamed_addr alias void (%"struct.blink::XRInputSource::InternalState"*), void (%"struct.blink::XRInputSource::InternalState"*)* @_ZN5blink13XRInputSource13InternalStateD2Ev
@_ZN5blink13XRInputSourceC1EPNS_9XRSessionEjN6device5mojom15XRTargetRayModeE = hidden unnamed_addr alias void (%"class.blink::XRInputSource"*, %"class.blink::XRSession"*, i32, i32), void (%"class.blink::XRInputSource"*, %"class.blink::XRSession"*, i32, i32)* @_ZN5blink13XRInputSourceC2EPNS_9XRSessionEjN6device5mojom15XRTargetRayModeE
@_ZN5blink13XRInputSourceC1ERKS0_ = hidden unnamed_addr alias void (%"class.blink::XRInputSource"*, %"class.blink::XRInputSource"*), void (%"class.blink::XRInputSource"*, %"class.blink::XRInputSource"*)* @_ZN5blink13XRInputSourceC2ERKS0_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13XRInputSource13InternalStateC2EjN6device5mojom15XRTargetRayModeEN4base9TimeTicksE(%"struct.blink::XRInputSource::InternalState"* nocapture, i32, i32, i64) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"struct.blink::XRInputSource::InternalState", %"struct.blink::XRInputSource::InternalState"* %0, i64 0, i32 0
  store i16 -1, i16* %5, align 8
  %6 = getelementptr inbounds %"struct.blink::XRInputSource::InternalState", %"struct.blink::XRInputSource::InternalState"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.blink::XRInputSource::InternalState", %"struct.blink::XRInputSource::InternalState"* %0, i64 0, i32 6
  call void @llvm.memset.p0i8.i64(i8* align 2 %6, i8 0, i64 5, i1 false)
  store i8 1, i8* %7, align 1
  %8 = getelementptr inbounds %"struct.blink::XRInputSource::InternalState", %"struct.blink::XRInputSource::InternalState"* %0, i64 0, i32 7
  store i32 %1, i32* %8, align 8
  %9 = getelementptr inbounds %"struct.blink::XRInputSource::InternalState", %"struct.blink::XRInputSource::InternalState"* %0, i64 0, i32 8
  store i32 0, i32* %9, align 4
  %10 = getelementptr inbounds %"struct.blink::XRInputSource::InternalState", %"struct.blink::XRInputSource::InternalState"* %0, i64 0, i32 9
  store i32 %2, i32* %10, align 8
  %11 = getelementptr inbounds %"struct.blink::XRInputSource::InternalState", %"struct.blink::XRInputSource::InternalState"* %0, i64 0, i32 10
  store i8 0, i8* %11, align 4
  %12 = getelementptr inbounds %"struct.blink::XRInputSource::InternalState", %"struct.blink::XRInputSource::InternalState"* %0, i64 0, i32 11, i32 0, i32 0
  store i64 %3, i64* %12, align 8
  %13 = getelementptr inbounds %"struct.blink::XRInputSource::InternalState", %"struct.blink::XRInputSource::InternalState"* %0, i64 0, i32 12
  %14 = bitcast %"class.WTF::Vector"* %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13XRInputSource13InternalStateC2ERKS1_(%"struct.blink::XRInputSource::InternalState"* nocapture, %"struct.blink::XRInputSource::InternalState"* nocapture readonly dereferenceable(48)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.blink::XRInputSource::InternalState"* %0 to i8*
  %4 = bitcast %"struct.blink::XRInputSource::InternalState"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 32, i1 false)
  %5 = getelementptr inbounds %"struct.blink::XRInputSource::InternalState", %"struct.blink::XRInputSource::InternalState"* %0, i64 0, i32 12
  %6 = getelementptr inbounds %"struct.blink::XRInputSource::InternalState", %"struct.blink::XRInputSource::InternalState"* %1, i64 0, i32 12, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::String"* null, %"class.WTF::String"** %8, align 8
  %9 = getelementptr inbounds %"struct.blink::XRInputSource::InternalState", %"struct.blink::XRInputSource::InternalState"* %0, i64 0, i32 12, i32 0, i32 0, i32 1
  store i32 0, i32* %9, align 8
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %20, label %11

11:                                               ; preds = %2
  %12 = zext i32 %7 to i64
  %13 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %12) #11
  %14 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %13, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #11
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast %"class.WTF::Vector"* %5 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = lshr i64 %13, 3
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %9, align 8
  %19 = bitcast i8* %14 to %"class.WTF::String"*
  br label %20

20:                                               ; preds = %11, %2
  %21 = phi %"class.WTF::String"* [ null, %2 ], [ %19, %11 ]
  %22 = getelementptr inbounds %"struct.blink::XRInputSource::InternalState", %"struct.blink::XRInputSource::InternalState"* %1, i64 0, i32 12, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"struct.blink::XRInputSource::InternalState", %"struct.blink::XRInputSource::InternalState"* %0, i64 0, i32 12, i32 0, i32 0, i32 2
  store i32 %23, i32* %24, align 4
  %25 = getelementptr inbounds %"struct.blink::XRInputSource::InternalState", %"struct.blink::XRInputSource::InternalState"* %1, i64 0, i32 12, i32 0, i32 0, i32 0
  %26 = load %"class.WTF::String"*, %"class.WTF::String"** %25, align 8
  %27 = load i32, i32* %22, align 4
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %26, i64 %28
  %30 = icmp eq i32 %27, 0
  br i1 %30, label %59, label %31

31:                                               ; preds = %20, %55
  %32 = phi %"class.WTF::String"* [ %56, %55 ], [ %21, %20 ]
  %33 = phi %"class.WTF::String"* [ %57, %55 ], [ %26, %20 ]
  %34 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %33, i64 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %32, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %36, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %55

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #11
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !2

52:                                               ; preds = %43
  tail call void @llvm.trap() #11
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %55

55:                                               ; preds = %53, %38, %31
  %56 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %32, i64 1
  %57 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %33, i64 1
  %58 = icmp eq %"class.WTF::String"* %57, %29
  br i1 %58, label %59, label %31

59:                                               ; preds = %55, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13XRInputSource13InternalStateD2Ev(%"struct.blink::XRInputSource::InternalState"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.blink::XRInputSource::InternalState", %"struct.blink::XRInputSource::InternalState"* %0, i64 0, i32 12
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %5 = icmp eq %"class.WTF::String"* %4, null
  br i1 %5, label %40, label %6, !prof !3

6:                                                ; preds = %1
  %7 = bitcast %"class.WTF::String"* %4 to i8*
  %8 = getelementptr inbounds %"struct.blink::XRInputSource::InternalState", %"struct.blink::XRInputSource::InternalState"* %0, i64 0, i32 12, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %38, label %11, !prof !2

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 %12
  br label %14

14:                                               ; preds = %32, %11
  %15 = phi %"class.WTF::String"* [ %33, %32 ], [ %4, %11 ]
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #11
  br label %32

32:                                               ; preds = %31, %28, %14
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 1
  %34 = icmp eq %"class.WTF::String"* %33, %13
  br i1 %34, label %35, label %14

35:                                               ; preds = %32
  store i32 0, i32* %8, align 4
  %36 = bitcast %"class.WTF::Vector"* %2 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %35, %6
  %39 = phi i8* [ %37, %35 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #11
  store %"class.WTF::String"* null, %"class.WTF::String"** %3, align 8
  br label %40

40:                                               ; preds = %1, %38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::XRInputSource"* @_ZN5blink13XRInputSource18CreateOrUpdateFromEPS0_PNS_9XRSessionERKN4mojo9StructPtrIN6device5mojom5blink18XRInputSourceStateEEE(%"class.blink::XRInputSource"*, %"class.blink::XRSession"*, %"class.mojo::StructPtr.1874"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.mojo::StructPtr.1874", %"class.mojo::StructPtr.1874"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.device::mojom::blink::XRInputSourceState"*, %"class.device::mojom::blink::XRInputSourceState"** %4, align 8
  %6 = icmp eq %"class.device::mojom::blink::XRInputSourceState"* %5, null
  br i1 %6, label %339, label %7

7:                                                ; preds = %3
  %8 = icmp eq %"class.blink::XRInputSource"* %0, null
  br i1 %8, label %9, label %56

9:                                                ; preds = %7
  %10 = getelementptr inbounds %"class.device::mojom::blink::XRInputSourceState", %"class.device::mojom::blink::XRInputSourceState"* %5, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 128) #11
  %13 = bitcast i8* %12 to %"class.blink::XRInputSource"*
  %14 = bitcast i8* %12 to i32 (...)***
  %15 = getelementptr inbounds i8, i8* %12, i64 8
  %16 = bitcast i8* %15 to i64**
  store i64* null, i64** %16, align 8
  %17 = getelementptr inbounds i8, i8* %12, i64 16
  %18 = bitcast i8* %17 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [6 x i8*] }, { [12 x i8*], [6 x i8*] }* @_ZTVN5blink13XRInputSourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [6 x i8*] }, { [12 x i8*], [6 x i8*] }* @_ZTVN5blink13XRInputSourceE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  %19 = getelementptr inbounds %"class.blink::XRSession", %"class.blink::XRSession"* %1, i64 0, i32 9, i32 0, i32 0
  %20 = load %"class.blink::XRSystem"*, %"class.blink::XRSystem"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::XRSystem", %"class.blink::XRSystem"* %20, i64 0, i32 19, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds i8, i8* %12, i64 24
  %24 = bitcast i8* %23 to i16*
  store i16 -1, i16* %24, align 8
  %25 = getelementptr inbounds i8, i8* %12, i64 26
  %26 = getelementptr inbounds i8, i8* %12, i64 31
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %25, i8 0, i64 5, i1 false) #11
  store i8 1, i8* %26, align 1
  %27 = getelementptr inbounds i8, i8* %12, i64 32
  %28 = bitcast i8* %27 to i32*
  store i32 %11, i32* %28, align 8
  %29 = getelementptr inbounds i8, i8* %12, i64 36
  %30 = bitcast i8* %29 to i32*
  store i32 0, i32* %30, align 4
  %31 = getelementptr inbounds i8, i8* %12, i64 40
  %32 = bitcast i8* %31 to i32*
  store i32 1, i32* %32, align 8
  %33 = getelementptr inbounds i8, i8* %12, i64 44
  store i8 0, i8* %33, align 4
  %34 = getelementptr inbounds i8, i8* %12, i64 48
  %35 = bitcast i8* %34 to i64*
  store i64 %22, i64* %35, align 8
  %36 = getelementptr inbounds i8, i8* %12, i64 56
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 16, i1 false) #11
  %37 = getelementptr inbounds i8, i8* %12, i64 72
  %38 = bitcast i8* %37 to %"class.blink::XRSession"**
  store %"class.blink::XRSession"* %1, %"class.blink::XRSession"** %38, align 8
  %39 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 88) #11
  %40 = bitcast i8* %39 to %"class.blink::XRTargetRaySpace"*
  tail call void @_ZN5blink16XRTargetRaySpaceC1EPNS_9XRSessionEPNS_13XRInputSourceE(%"class.blink::XRTargetRaySpace"* %40, %"class.blink::XRSession"* %1, %"class.blink::XRInputSource"* %13) #11
  %41 = getelementptr inbounds i8, i8* %39, i64 -4
  %42 = bitcast i8* %41 to i16*
  %43 = load atomic i16, i16* %42 monotonic, align 2
  %44 = or i16 %43, 1
  store atomic i16 %44, i16* %42 release, align 2
  %45 = getelementptr inbounds i8, i8* %12, i64 80
  %46 = bitcast i8* %45 to i8**
  store i8* %39, i8** %46, align 8
  %47 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 88) #11
  %48 = bitcast i8* %47 to %"class.blink::XRGripSpace"*
  tail call void @_ZN5blink11XRGripSpaceC1EPNS_9XRSessionEPNS_13XRInputSourceE(%"class.blink::XRGripSpace"* %48, %"class.blink::XRSession"* %1, %"class.blink::XRInputSource"* %13) #11
  %49 = getelementptr inbounds i8, i8* %47, i64 -4
  %50 = bitcast i8* %49 to i16*
  %51 = load atomic i16, i16* %50 monotonic, align 2
  %52 = or i16 %51, 1
  store atomic i16 %52, i16* %50 release, align 2
  %53 = getelementptr inbounds i8, i8* %12, i64 88
  %54 = bitcast i8* %53 to i8**
  store i8* %47, i8** %54, align 8
  %55 = getelementptr inbounds i8, i8* %12, i64 96
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 32, i1 false) #11
  br label %61

56:                                               ; preds = %7
  %57 = tail call zeroext i1 @_ZN5blink13XRInputSource21InvalidatesSameObjectERKN4mojo9StructPtrIN6device5mojom5blink18XRInputSourceStateEEE(%"class.blink::XRInputSource"* nonnull %0, %"class.mojo::StructPtr.1874"* dereferenceable(8) %2)
  br i1 %57, label %58, label %68

58:                                               ; preds = %56
  %59 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 128) #11
  %60 = bitcast i8* %59 to %"class.blink::XRInputSource"*
  tail call void @_ZN5blink13XRInputSourceC2ERKS0_(%"class.blink::XRInputSource"* %60, %"class.blink::XRInputSource"* nonnull dereferenceable(128) %0) #11
  br label %61

61:                                               ; preds = %9, %58
  %62 = phi i8* [ %12, %9 ], [ %59, %58 ]
  %63 = phi %"class.blink::XRInputSource"* [ %13, %9 ], [ %60, %58 ]
  %64 = getelementptr inbounds i8, i8* %62, i64 -4
  %65 = bitcast i8* %64 to i16*
  %66 = load atomic i16, i16* %65 monotonic, align 2
  %67 = or i16 %66, 1
  store atomic i16 %67, i16* %65 release, align 2
  br label %68

68:                                               ; preds = %61, %56
  %69 = phi %"class.blink::XRInputSource"* [ %0, %56 ], [ %63, %61 ]
  %70 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %69, i64 0, i32 2, i32 6
  %71 = load i8, i8* %70, align 1, !range !4
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %76, label %73

73:                                               ; preds = %68
  %74 = load %"class.device::mojom::blink::XRInputSourceState"*, %"class.device::mojom::blink::XRInputSourceState"** %4, align 8
  %75 = getelementptr inbounds %"class.device::mojom::blink::XRInputSourceState", %"class.device::mojom::blink::XRInputSourceState"* %74, i64 0, i32 10
  tail call void @_ZN5blink13XRInputSource13UpdateGamepadERKN4absl8optionalIN6device7GamepadEEE(%"class.blink::XRInputSource"* %69, %"class.absl::optional.1890"* dereferenceable(924) %75)
  br label %76

76:                                               ; preds = %68, %73
  %77 = load %"class.device::mojom::blink::XRInputSourceState"*, %"class.device::mojom::blink::XRInputSourceState"** %4, align 8
  %78 = getelementptr inbounds %"class.device::mojom::blink::XRInputSourceState", %"class.device::mojom::blink::XRInputSourceState"* %77, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %79 = load %"class.device::mojom::blink::XRInputSourceDescription"*, %"class.device::mojom::blink::XRInputSourceDescription"** %78, align 8
  %80 = icmp eq %"class.device::mojom::blink::XRInputSourceDescription"* %79, null
  br i1 %80, label %245, label %81

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"class.device::mojom::blink::XRInputSourceDescription", %"class.device::mojom::blink::XRInputSourceDescription"* %79, i64 0, i32 0
  %83 = load i32, i32* %82, align 8
  %84 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %69, i64 0, i32 2, i32 9
  store i32 %83, i32* %84, align 8
  %85 = load %"class.device::mojom::blink::XRInputSourceDescription"*, %"class.device::mojom::blink::XRInputSourceDescription"** %78, align 8
  %86 = getelementptr inbounds %"class.device::mojom::blink::XRInputSourceDescription", %"class.device::mojom::blink::XRInputSourceDescription"* %85, i64 0, i32 1
  %87 = load i32, i32* %86, align 4
  %88 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %69, i64 0, i32 2, i32 8
  store i32 %87, i32* %88, align 4
  %89 = load i8, i8* %70, align 1, !range !4
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %155, label %91

91:                                               ; preds = %81
  %92 = load %"class.device::mojom::blink::XRInputSourceDescription"*, %"class.device::mojom::blink::XRInputSourceDescription"** %78, align 8
  %93 = getelementptr inbounds %"class.device::mojom::blink::XRInputSourceDescription", %"class.device::mojom::blink::XRInputSourceDescription"* %92, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %94 = load i8, i8* %93, align 4, !range !4
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %146, label %96

96:                                               ; preds = %91
  %97 = tail call noalias i8* @malloc(i64 128) #11
  %98 = getelementptr inbounds %"class.device::mojom::blink::XRInputSourceDescription", %"class.device::mojom::blink::XRInputSourceDescription"* %92, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i64 0, i64 0
  %99 = bitcast float* %98 to <2 x float>*
  %100 = load <2 x float>, <2 x float>* %99, align 4
  %101 = fpext <2 x float> %100 to <2 x double>
  %102 = getelementptr inbounds %"class.device::mojom::blink::XRInputSourceDescription", %"class.device::mojom::blink::XRInputSourceDescription"* %92, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i64 0, i64 2
  %103 = bitcast float* %102 to <2 x float>*
  %104 = load <2 x float>, <2 x float>* %103, align 4
  %105 = fpext <2 x float> %104 to <2 x double>
  %106 = getelementptr inbounds %"class.device::mojom::blink::XRInputSourceDescription", %"class.device::mojom::blink::XRInputSourceDescription"* %92, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i64 1, i64 0
  %107 = bitcast float* %106 to <2 x float>*
  %108 = load <2 x float>, <2 x float>* %107, align 4
  %109 = fpext <2 x float> %108 to <2 x double>
  %110 = getelementptr inbounds %"class.device::mojom::blink::XRInputSourceDescription", %"class.device::mojom::blink::XRInputSourceDescription"* %92, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i64 1, i64 2
  %111 = bitcast float* %110 to <2 x float>*
  %112 = load <2 x float>, <2 x float>* %111, align 4
  %113 = fpext <2 x float> %112 to <2 x double>
  %114 = getelementptr inbounds %"class.device::mojom::blink::XRInputSourceDescription", %"class.device::mojom::blink::XRInputSourceDescription"* %92, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i64 2, i64 0
  %115 = bitcast float* %114 to <2 x float>*
  %116 = load <2 x float>, <2 x float>* %115, align 4
  %117 = fpext <2 x float> %116 to <2 x double>
  %118 = getelementptr inbounds %"class.device::mojom::blink::XRInputSourceDescription", %"class.device::mojom::blink::XRInputSourceDescription"* %92, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i64 2, i64 2
  %119 = bitcast float* %118 to <2 x float>*
  %120 = load <2 x float>, <2 x float>* %119, align 4
  %121 = fpext <2 x float> %120 to <2 x double>
  %122 = getelementptr inbounds %"class.device::mojom::blink::XRInputSourceDescription", %"class.device::mojom::blink::XRInputSourceDescription"* %92, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i64 3, i64 0
  %123 = bitcast float* %122 to <2 x float>*
  %124 = load <2 x float>, <2 x float>* %123, align 4
  %125 = fpext <2 x float> %124 to <2 x double>
  %126 = getelementptr inbounds %"class.device::mojom::blink::XRInputSourceDescription", %"class.device::mojom::blink::XRInputSourceDescription"* %92, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i64 3, i64 2
  %127 = bitcast float* %126 to <2 x float>*
  %128 = load <2 x float>, <2 x float>* %127, align 4
  %129 = fpext <2 x float> %128 to <2 x double>
  %130 = bitcast i8* %97 to <2 x double>*
  store <2 x double> %101, <2 x double>* %130, align 8
  %131 = getelementptr inbounds i8, i8* %97, i64 16
  %132 = bitcast i8* %131 to <2 x double>*
  store <2 x double> %105, <2 x double>* %132, align 8
  %133 = getelementptr inbounds i8, i8* %97, i64 32
  %134 = bitcast i8* %133 to <2 x double>*
  store <2 x double> %109, <2 x double>* %134, align 8
  %135 = getelementptr inbounds i8, i8* %97, i64 48
  %136 = bitcast i8* %135 to <2 x double>*
  store <2 x double> %113, <2 x double>* %136, align 8
  %137 = getelementptr inbounds i8, i8* %97, i64 64
  %138 = bitcast i8* %137 to <2 x double>*
  store <2 x double> %117, <2 x double>* %138, align 8
  %139 = getelementptr inbounds i8, i8* %97, i64 80
  %140 = bitcast i8* %139 to <2 x double>*
  store <2 x double> %121, <2 x double>* %140, align 8
  %141 = getelementptr inbounds i8, i8* %97, i64 96
  %142 = bitcast i8* %141 to <2 x double>*
  store <2 x double> %125, <2 x double>* %142, align 8
  %143 = getelementptr inbounds i8, i8* %97, i64 112
  %144 = bitcast i8* %143 to <2 x double>*
  store <2 x double> %129, <2 x double>* %144, align 8
  %145 = ptrtoint i8* %97 to i64
  br label %146

146:                                              ; preds = %91, %96
  %147 = phi i64 [ %145, %96 ], [ 0, %91 ]
  %148 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %69, i64 0, i32 9
  %149 = getelementptr inbounds %"class.std::__1::unique_ptr.670", %"class.std::__1::unique_ptr.670"* %148, i64 0, i32 0, i32 0, i32 0
  %150 = load %"class.blink::TransformationMatrix"*, %"class.blink::TransformationMatrix"** %149, align 8
  %151 = bitcast %"class.std::__1::unique_ptr.670"* %148 to i64*
  store i64 %147, i64* %151, align 8
  %152 = icmp eq %"class.blink::TransformationMatrix"* %150, null
  br i1 %152, label %155, label %153

153:                                              ; preds = %146
  %154 = bitcast %"class.blink::TransformationMatrix"* %150 to i8*
  tail call void @free(i8* %154) #11
  br label %155

155:                                              ; preds = %146, %153, %81
  %156 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %69, i64 0, i32 2, i32 12
  %157 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %69, i64 0, i32 2, i32 12, i32 0, i32 0, i32 1
  %158 = load i32, i32* %157, align 8
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %195, label %160

160:                                              ; preds = %155
  %161 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %69, i64 0, i32 2, i32 12, i32 0, i32 0, i32 2
  %162 = load i32, i32* %161, align 4
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %191, label %164

164:                                              ; preds = %160
  %165 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %156, i64 0, i32 0, i32 0, i32 0
  %166 = load %"class.WTF::String"*, %"class.WTF::String"** %165, align 8
  %167 = zext i32 %162 to i64
  %168 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %166, i64 %167
  br label %169

169:                                              ; preds = %187, %164
  %170 = phi %"class.WTF::String"* [ %188, %187 ], [ %166, %164 ]
  %171 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %170, i64 0, i32 0, i32 0
  %172 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %171, align 8
  %173 = icmp eq %"class.WTF::StringImpl"* %172, null
  br i1 %173, label %187, label %174

174:                                              ; preds = %169
  %175 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %172, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %176 = load atomic i32, i32* %175 monotonic, align 4
  %177 = and i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %172, i64 0, i32 0
  %180 = load i32, i32* %179, align 4
  br i1 %178, label %181, label %183

181:                                              ; preds = %174
  %182 = add i32 %180, -1
  store i32 %182, i32* %179, align 4
  br label %183

183:                                              ; preds = %181, %174
  %184 = phi i32 [ %182, %181 ], [ %180, %174 ]
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %183
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %172) #11
  br label %187

187:                                              ; preds = %186, %183, %169
  %188 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %170, i64 1
  %189 = icmp eq %"class.WTF::String"* %188, %168
  br i1 %189, label %190, label %169

190:                                              ; preds = %187
  store i32 0, i32* %161, align 4
  br label %191

191:                                              ; preds = %190, %160
  %192 = bitcast %"class.WTF::Vector"* %156 to i8**
  %193 = load i8*, i8** %192, align 8
  %194 = bitcast %"class.WTF::Vector"* %156 to i64*
  store atomic i64 0, i64* %194 monotonic, align 8
  store i32 0, i32* %157, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %193) #11
  br label %195

195:                                              ; preds = %155, %191
  %196 = load %"class.device::mojom::blink::XRInputSourceState"*, %"class.device::mojom::blink::XRInputSourceState"** %4, align 8
  %197 = getelementptr inbounds %"class.device::mojom::blink::XRInputSourceState", %"class.device::mojom::blink::XRInputSourceState"* %196, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %198 = load %"class.device::mojom::blink::XRInputSourceDescription"*, %"class.device::mojom::blink::XRInputSourceDescription"** %197, align 8
  %199 = getelementptr inbounds %"class.device::mojom::blink::XRInputSourceDescription", %"class.device::mojom::blink::XRInputSourceDescription"* %198, i64 0, i32 3, i32 0, i32 0, i32 0
  %200 = load %"class.WTF::String"*, %"class.WTF::String"** %199, align 8
  %201 = getelementptr inbounds %"class.device::mojom::blink::XRInputSourceDescription", %"class.device::mojom::blink::XRInputSourceDescription"* %198, i64 0, i32 3, i32 0, i32 0, i32 2
  %202 = load i32, i32* %201, align 4
  %203 = zext i32 %202 to i64
  %204 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %200, i64 %203
  %205 = icmp eq i32 %202, 0
  br i1 %205, label %245, label %206

206:                                              ; preds = %195
  %207 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %69, i64 0, i32 2, i32 12, i32 0, i32 0, i32 2
  %208 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %156, i64 0, i32 0, i32 0, i32 0
  br label %209

209:                                              ; preds = %206, %242
  %210 = phi %"class.WTF::String"* [ %200, %206 ], [ %243, %242 ]
  %211 = load i32, i32* %207, align 4
  %212 = load i32, i32* %157, align 8
  %213 = icmp eq i32 %211, %212
  br i1 %213, label %241, label %214, !prof !2

214:                                              ; preds = %209
  %215 = load %"class.WTF::String"*, %"class.WTF::String"** %208, align 8
  %216 = zext i32 %211 to i64
  %217 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %210, i64 0, i32 0, i32 0
  %218 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %217, align 8
  %219 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %215, i64 %216, i32 0, i32 0
  store %"class.WTF::StringImpl"* %218, %"class.WTF::StringImpl"** %219, align 8
  %220 = icmp eq %"class.WTF::StringImpl"* %218, null
  br i1 %220, label %238, label %221

221:                                              ; preds = %214
  %222 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %218, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %223 = load atomic i32, i32* %222 monotonic, align 4
  %224 = and i32 %223, 2
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %226, label %238

226:                                              ; preds = %221
  %227 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %218, i64 0, i32 0
  %228 = load i32, i32* %227, align 4
  %229 = zext i32 %228 to i33
  %230 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %229, i33 1) #11
  %231 = extractvalue { i33, i1 } %230, 1
  %232 = extractvalue { i33, i1 } %230, 0
  %233 = icmp slt i33 %232, 0
  %234 = or i1 %231, %233
  br i1 %234, label %235, label %236, !prof !2

235:                                              ; preds = %226
  tail call void @llvm.trap() #11
  unreachable

236:                                              ; preds = %226
  %237 = trunc i33 %232 to i32
  store i32 %237, i32* %227, align 4
  br label %238

238:                                              ; preds = %236, %221, %214
  %239 = load i32, i32* %207, align 4
  %240 = add i32 %239, 1
  store i32 %240, i32* %207, align 4
  br label %242

241:                                              ; preds = %209
  tail call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector"* %156, %"class.WTF::String"* dereferenceable(8) %210) #11
  br label %242

242:                                              ; preds = %238, %241
  %243 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %210, i64 1
  %244 = icmp eq %"class.WTF::String"* %243, %204
  br i1 %244, label %245, label %209

245:                                              ; preds = %242, %195, %76
  %246 = load i8, i8* %70, align 1, !range !4
  %247 = icmp eq i8 %246, 0
  br i1 %247, label %334, label %248

248:                                              ; preds = %245
  %249 = load %"class.device::mojom::blink::XRInputSourceState"*, %"class.device::mojom::blink::XRInputSourceState"** %4, align 8
  %250 = getelementptr inbounds %"class.device::mojom::blink::XRInputSourceState", %"class.device::mojom::blink::XRInputSourceState"* %249, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %251 = load i8, i8* %250, align 4, !range !4
  %252 = icmp eq i8 %251, 0
  br i1 %252, label %303, label %253

253:                                              ; preds = %248
  %254 = tail call noalias i8* @malloc(i64 128) #11
  %255 = getelementptr inbounds %"class.device::mojom::blink::XRInputSourceState", %"class.device::mojom::blink::XRInputSourceState"* %249, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i64 0, i64 0
  %256 = bitcast float* %255 to <2 x float>*
  %257 = load <2 x float>, <2 x float>* %256, align 4
  %258 = fpext <2 x float> %257 to <2 x double>
  %259 = getelementptr inbounds %"class.device::mojom::blink::XRInputSourceState", %"class.device::mojom::blink::XRInputSourceState"* %249, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i64 0, i64 2
  %260 = bitcast float* %259 to <2 x float>*
  %261 = load <2 x float>, <2 x float>* %260, align 4
  %262 = fpext <2 x float> %261 to <2 x double>
  %263 = getelementptr inbounds %"class.device::mojom::blink::XRInputSourceState", %"class.device::mojom::blink::XRInputSourceState"* %249, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i64 1, i64 0
  %264 = bitcast float* %263 to <2 x float>*
  %265 = load <2 x float>, <2 x float>* %264, align 4
  %266 = fpext <2 x float> %265 to <2 x double>
  %267 = getelementptr inbounds %"class.device::mojom::blink::XRInputSourceState", %"class.device::mojom::blink::XRInputSourceState"* %249, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i64 1, i64 2
  %268 = bitcast float* %267 to <2 x float>*
  %269 = load <2 x float>, <2 x float>* %268, align 4
  %270 = fpext <2 x float> %269 to <2 x double>
  %271 = getelementptr inbounds %"class.device::mojom::blink::XRInputSourceState", %"class.device::mojom::blink::XRInputSourceState"* %249, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i64 2, i64 0
  %272 = bitcast float* %271 to <2 x float>*
  %273 = load <2 x float>, <2 x float>* %272, align 4
  %274 = fpext <2 x float> %273 to <2 x double>
  %275 = getelementptr inbounds %"class.device::mojom::blink::XRInputSourceState", %"class.device::mojom::blink::XRInputSourceState"* %249, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i64 2, i64 2
  %276 = bitcast float* %275 to <2 x float>*
  %277 = load <2 x float>, <2 x float>* %276, align 4
  %278 = fpext <2 x float> %277 to <2 x double>
  %279 = getelementptr inbounds %"class.device::mojom::blink::XRInputSourceState", %"class.device::mojom::blink::XRInputSourceState"* %249, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i64 3, i64 0
  %280 = bitcast float* %279 to <2 x float>*
  %281 = load <2 x float>, <2 x float>* %280, align 4
  %282 = fpext <2 x float> %281 to <2 x double>
  %283 = getelementptr inbounds %"class.device::mojom::blink::XRInputSourceState", %"class.device::mojom::blink::XRInputSourceState"* %249, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i64 3, i64 2
  %284 = bitcast float* %283 to <2 x float>*
  %285 = load <2 x float>, <2 x float>* %284, align 4
  %286 = fpext <2 x float> %285 to <2 x double>
  %287 = bitcast i8* %254 to <2 x double>*
  store <2 x double> %258, <2 x double>* %287, align 8
  %288 = getelementptr inbounds i8, i8* %254, i64 16
  %289 = bitcast i8* %288 to <2 x double>*
  store <2 x double> %262, <2 x double>* %289, align 8
  %290 = getelementptr inbounds i8, i8* %254, i64 32
  %291 = bitcast i8* %290 to <2 x double>*
  store <2 x double> %266, <2 x double>* %291, align 8
  %292 = getelementptr inbounds i8, i8* %254, i64 48
  %293 = bitcast i8* %292 to <2 x double>*
  store <2 x double> %270, <2 x double>* %293, align 8
  %294 = getelementptr inbounds i8, i8* %254, i64 64
  %295 = bitcast i8* %294 to <2 x double>*
  store <2 x double> %274, <2 x double>* %295, align 8
  %296 = getelementptr inbounds i8, i8* %254, i64 80
  %297 = bitcast i8* %296 to <2 x double>*
  store <2 x double> %278, <2 x double>* %297, align 8
  %298 = getelementptr inbounds i8, i8* %254, i64 96
  %299 = bitcast i8* %298 to <2 x double>*
  store <2 x double> %282, <2 x double>* %299, align 8
  %300 = getelementptr inbounds i8, i8* %254, i64 112
  %301 = bitcast i8* %300 to <2 x double>*
  store <2 x double> %286, <2 x double>* %301, align 8
  %302 = ptrtoint i8* %254 to i64
  br label %303

303:                                              ; preds = %248, %253
  %304 = phi i64 [ %302, %253 ], [ 0, %248 ]
  %305 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %69, i64 0, i32 8
  %306 = getelementptr inbounds %"class.std::__1::unique_ptr.670", %"class.std::__1::unique_ptr.670"* %305, i64 0, i32 0, i32 0, i32 0
  %307 = load %"class.blink::TransformationMatrix"*, %"class.blink::TransformationMatrix"** %306, align 8
  %308 = bitcast %"class.std::__1::unique_ptr.670"* %305 to i64*
  store i64 %304, i64* %308, align 8
  %309 = icmp eq %"class.blink::TransformationMatrix"* %307, null
  br i1 %309, label %312, label %310

310:                                              ; preds = %303
  %311 = bitcast %"class.blink::TransformationMatrix"* %307 to i8*
  tail call void @free(i8* %311) #11
  br label %312

312:                                              ; preds = %303, %310
  %313 = load i8, i8* %70, align 1
  %314 = icmp eq i8 %313, 0
  br i1 %314, label %334, label %315

315:                                              ; preds = %312
  %316 = load %"class.device::mojom::blink::XRInputSourceState"*, %"class.device::mojom::blink::XRInputSourceState"** %4, align 8
  %317 = getelementptr inbounds %"class.device::mojom::blink::XRInputSourceState", %"class.device::mojom::blink::XRInputSourceState"* %316, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %318 = load %"class.device::mojom::blink::XRHandTrackingData"*, %"class.device::mojom::blink::XRHandTrackingData"** %317, align 8
  %319 = icmp eq %"class.device::mojom::blink::XRHandTrackingData"* %318, null
  br i1 %319, label %334, label %320

320:                                              ; preds = %315
  %321 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 424) #11
  %322 = bitcast i8* %321 to %"class.blink::XRHand"*
  tail call void @_ZN5blink6XRHandC1EPKN6device5mojom5blink18XRHandTrackingDataEPNS_13XRInputSourceE(%"class.blink::XRHand"* %322, %"class.device::mojom::blink::XRHandTrackingData"* nonnull %318, %"class.blink::XRInputSource"* %69) #11
  %323 = getelementptr inbounds i8, i8* %321, i64 -4
  %324 = bitcast i8* %323 to i16*
  %325 = load atomic i16, i16* %324 monotonic, align 2
  %326 = or i16 %325, 1
  store atomic i16 %326, i16* %324 release, align 2
  %327 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %69, i64 0, i32 7
  %328 = ptrtoint i8* %321 to i64
  %329 = bitcast %"class.blink::Member.705"* %327 to i64*
  store atomic i64 %328, i64* %329 monotonic, align 8
  %330 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %331 = icmp eq i32 %330, 0
  br i1 %331, label %334, label %332

332:                                              ; preds = %320
  %333 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %321) #11
  br label %334

334:                                              ; preds = %245, %332, %320, %315, %312
  %335 = load %"class.device::mojom::blink::XRInputSourceState"*, %"class.device::mojom::blink::XRInputSourceState"** %4, align 8
  %336 = getelementptr inbounds %"class.device::mojom::blink::XRInputSourceState", %"class.device::mojom::blink::XRInputSourceState"* %335, i64 0, i32 3
  %337 = load i8, i8* %336, align 8, !range !4
  %338 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %69, i64 0, i32 2, i32 10
  store i8 %337, i8* %338, align 4
  br label %339

339:                                              ; preds = %3, %334
  %340 = phi %"class.blink::XRInputSource"* [ %69, %334 ], [ %0, %3 ]
  ret %"class.blink::XRInputSource"* %340
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink13XRInputSource21InvalidatesSameObjectERKN4mojo9StructPtrIN6device5mojom5blink18XRInputSourceStateEEE(%"class.blink::XRInputSource"*, %"class.mojo::StructPtr.1874"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.mojo::StructPtr.1874", %"class.mojo::StructPtr.1874"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.device::mojom::blink::XRInputSourceState"*, %"class.device::mojom::blink::XRInputSourceState"** %3, align 8
  %5 = getelementptr inbounds %"class.device::mojom::blink::XRInputSourceState", %"class.device::mojom::blink::XRInputSourceState"* %4, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  %6 = load i8, i8* %5, align 4, !range !4
  %7 = icmp eq i8 %6, 0
  %8 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 6, i32 0, i32 0
  %9 = load %"class.blink::Gamepad"*, %"class.blink::Gamepad"** %8, align 8
  %10 = icmp ne %"class.blink::Gamepad"* %9, null
  br i1 %7, label %12, label %11

11:                                               ; preds = %2
  br i1 %10, label %13, label %64

12:                                               ; preds = %2
  br i1 %10, label %64, label %13

13:                                               ; preds = %11, %12
  %14 = getelementptr inbounds %"class.device::mojom::blink::XRInputSourceState", %"class.device::mojom::blink::XRInputSourceState"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.device::mojom::blink::XRInputSourceDescription"*, %"class.device::mojom::blink::XRInputSourceDescription"** %14, align 8
  %16 = icmp eq %"class.device::mojom::blink::XRInputSourceDescription"* %15, null
  br i1 %16, label %64, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.device::mojom::blink::XRInputSourceDescription", %"class.device::mojom::blink::XRInputSourceDescription"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 2, i32 8
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %19, %21
  br i1 %22, label %23, label %64

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.device::mojom::blink::XRInputSourceDescription", %"class.device::mojom::blink::XRInputSourceDescription"* %15, i64 0, i32 0
  %25 = load i32, i32* %24, align 8
  %26 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 2, i32 9
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %25, %27
  br i1 %28, label %29, label %64

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.device::mojom::blink::XRInputSourceDescription", %"class.device::mojom::blink::XRInputSourceDescription"* %15, i64 0, i32 3, i32 0, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 2, i32 12
  %33 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 2, i32 12, i32 0, i32 0, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %31, %34
  br i1 %35, label %36, label %64

36:                                               ; preds = %29
  %37 = icmp eq i32 %31, 0
  br i1 %37, label %64, label %38

38:                                               ; preds = %36
  %39 = getelementptr inbounds %"class.device::mojom::blink::XRInputSourceDescription", %"class.device::mojom::blink::XRInputSourceDescription"* %15, i64 0, i32 3
  %40 = tail call dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %39, i32 0) #11
  %41 = tail call dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %32, i32 0) #11
  %42 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %40, i64 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %41, i64 0, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %43, %"class.WTF::StringImpl"* %45) #11
  br i1 %46, label %47, label %64

47:                                               ; preds = %38, %51
  %48 = phi i32 [ %63, %51 ], [ 1, %38 ]
  %49 = load i32, i32* %33, align 4
  %50 = icmp ult i32 %48, %49
  br i1 %50, label %51, label %64

51:                                               ; preds = %47
  %52 = load %"class.device::mojom::blink::XRInputSourceState"*, %"class.device::mojom::blink::XRInputSourceState"** %3, align 8
  %53 = getelementptr inbounds %"class.device::mojom::blink::XRInputSourceState", %"class.device::mojom::blink::XRInputSourceState"* %52, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %54 = load %"class.device::mojom::blink::XRInputSourceDescription"*, %"class.device::mojom::blink::XRInputSourceDescription"** %53, align 8
  %55 = getelementptr inbounds %"class.device::mojom::blink::XRInputSourceDescription", %"class.device::mojom::blink::XRInputSourceDescription"* %54, i64 0, i32 3
  %56 = tail call dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %55, i32 %48) #11
  %57 = tail call dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %32, i32 %48) #11
  %58 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %56, i64 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %57, i64 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %59, %"class.WTF::StringImpl"* %61) #11
  %63 = add nuw i32 %48, 1
  br i1 %62, label %47, label %64

64:                                               ; preds = %51, %47, %38, %36, %13, %29, %23, %17, %11, %12
  %65 = phi i1 [ true, %12 ], [ true, %11 ], [ true, %17 ], [ true, %23 ], [ true, %29 ], [ false, %13 ], [ false, %36 ], [ true, %38 ], [ false, %47 ], [ true, %51 ]
  ret i1 %65
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13XRInputSource13UpdateGamepadERKN4absl8optionalIN6device7GamepadEEE(%"class.blink::XRInputSource"*, %"class.absl::optional.1890"* dereferenceable(924)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.absl::optional.1890", %"class.absl::optional.1890"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 4, !range !4
  %5 = icmp eq i8 %4, 0
  %6 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 6
  br i1 %5, label %49, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::Member.688", %"class.blink::Member.688"* %6, i64 0, i32 0, i32 0
  %9 = load %"class.blink::Gamepad"*, %"class.blink::Gamepad"** %8, align 8
  %10 = icmp eq %"class.blink::Gamepad"* %9, null
  br i1 %10, label %11, label %30

11:                                               ; preds = %7
  %12 = tail call i64 @_ZN4base9TimeTicks3NowEv() #11
  %13 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 120) #11
  %14 = bitcast i8* %13 to %"class.blink::Gamepad"*
  %15 = icmp eq %"class.blink::XRInputSource"* %0, null
  %16 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 1
  %17 = select i1 %15, %"class.blink::Gamepad::Client"* null, %"class.blink::Gamepad::Client"* %16
  %18 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 2, i32 11, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  tail call void @_ZN5blink7GamepadC1EPNS0_6ClientEiN4base9TimeTicksES4_(%"class.blink::Gamepad"* %14, %"class.blink::Gamepad::Client"* %17, i32 -1, i64 %19, i64 %12) #11
  %20 = getelementptr inbounds i8, i8* %13, i64 -4
  %21 = bitcast i8* %20 to i16*
  %22 = load atomic i16, i16* %21 monotonic, align 2
  %23 = or i16 %22, 1
  store atomic i16 %23, i16* %21 release, align 2
  %24 = ptrtoint i8* %13 to i64
  %25 = bitcast %"class.blink::Member.688"* %6 to i64*
  store atomic i64 %24, i64* %25 monotonic, align 8
  %26 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %30, label %28

28:                                               ; preds = %11
  %29 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %13) #11
  br label %30

30:                                               ; preds = %7, %28, %11
  %31 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 3, i32 0, i32 0
  %32 = load %"class.blink::XRSession"*, %"class.blink::XRSession"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::XRSession", %"class.blink::XRSession"* %32, i64 0, i32 9, i32 0, i32 0
  %34 = load %"class.blink::XRSystem"*, %"class.blink::XRSystem"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::XRSystem", %"class.blink::XRSystem"* %34, i64 0, i32 2
  %36 = bitcast %"class.blink::ExecutionContextLifecycleObserver.base"* %35 to %"class.blink::ExecutionContextLifecycleObserver"*
  %37 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink33ExecutionContextLifecycleObserver9DomWindowEv(%"class.blink::ExecutionContextLifecycleObserver"* %36) #11
  %38 = icmp eq %"class.blink::LocalDOMWindow"* %37, null
  br i1 %38, label %41, label %39

39:                                               ; preds = %30
  %40 = tail call zeroext i1 @_ZNK5blink14LocalDOMWindow29CrossOriginIsolatedCapabilityEv(%"class.blink::LocalDOMWindow"* nonnull %37) #11
  br label %41

41:                                               ; preds = %30, %39
  %42 = phi i1 [ %40, %39 ], [ false, %30 ]
  %43 = load i8, i8* %3, align 4, !range !4
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %45, label %46, !prof !2

45:                                               ; preds = %41
  tail call void @llvm.trap() #11
  unreachable

46:                                               ; preds = %41
  %47 = load %"class.blink::Gamepad"*, %"class.blink::Gamepad"** %8, align 8
  %48 = getelementptr inbounds %"class.absl::optional.1890", %"class.absl::optional.1890"* %1, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZN5blink7Gamepad21UpdateFromDeviceStateERKN6device7GamepadEb(%"class.blink::Gamepad"* %47, %"class.device::Gamepad"* dereferenceable(920) %48, i1 zeroext %42) #11
  br label %51

49:                                               ; preds = %2
  %50 = bitcast %"class.blink::Member.688"* %6 to i64*
  store atomic i64 0, i64* %50 monotonic, align 8
  br label %51

51:                                               ; preds = %49, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13XRInputSourceC2EPNS_9XRSessionEjN6device5mojom15XRTargetRayModeE(%"class.blink::XRInputSource"*, %"class.blink::XRSession"*, i32, i32) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %6, align 8
  %7 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [6 x i8*] }, { [12 x i8*], [6 x i8*] }* @_ZTVN5blink13XRInputSourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [6 x i8*] }, { [12 x i8*], [6 x i8*] }* @_ZTVN5blink13XRInputSourceE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.blink::XRSession", %"class.blink::XRSession"* %1, i64 0, i32 9, i32 0, i32 0
  %9 = load %"class.blink::XRSystem"*, %"class.blink::XRSystem"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::XRSystem", %"class.blink::XRSystem"* %9, i64 0, i32 19, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 2, i32 0
  store i16 -1, i16* %12, align 8
  %13 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 2, i32 1
  %14 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 2, i32 6
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %13, i8 0, i64 5, i1 false) #11
  store i8 1, i8* %14, align 1
  %15 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 2, i32 7
  store i32 %2, i32* %15, align 8
  %16 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 2, i32 8
  store i32 0, i32* %16, align 4
  %17 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 2, i32 9
  store i32 %3, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 2, i32 10
  store i8 0, i8* %18, align 4
  %19 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 2, i32 11, i32 0, i32 0
  store i64 %11, i64* %19, align 8
  %20 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 2, i32 12
  %21 = bitcast %"class.WTF::Vector"* %20 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #11
  %22 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::XRSession"* %1, %"class.blink::XRSession"** %22, align 8
  %23 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 88) #11
  %24 = bitcast i8* %23 to %"class.blink::XRTargetRaySpace"*
  tail call void @_ZN5blink16XRTargetRaySpaceC1EPNS_9XRSessionEPNS_13XRInputSourceE(%"class.blink::XRTargetRaySpace"* %24, %"class.blink::XRSession"* %1, %"class.blink::XRInputSource"* %0) #11
  %25 = getelementptr inbounds i8, i8* %23, i64 -4
  %26 = bitcast i8* %25 to i16*
  %27 = load atomic i16, i16* %26 monotonic, align 2
  %28 = or i16 %27, 1
  store atomic i16 %28, i16* %26 release, align 2
  %29 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 4, i32 0, i32 0
  %30 = bitcast %"class.blink::XRTargetRaySpace"** %29 to i8**
  store i8* %23, i8** %30, align 8
  %31 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 88) #11
  %32 = bitcast i8* %31 to %"class.blink::XRGripSpace"*
  tail call void @_ZN5blink11XRGripSpaceC1EPNS_9XRSessionEPNS_13XRInputSourceE(%"class.blink::XRGripSpace"* %32, %"class.blink::XRSession"* %1, %"class.blink::XRInputSource"* %0) #11
  %33 = getelementptr inbounds i8, i8* %31, i64 -4
  %34 = bitcast i8* %33 to i16*
  %35 = load atomic i16, i16* %34 monotonic, align 2
  %36 = or i16 %35, 1
  store atomic i16 %36, i16* %34 release, align 2
  %37 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 5, i32 0, i32 0
  %38 = bitcast %"class.blink::XRGripSpace"** %37 to i8**
  store i8* %31, i8** %38, align 8
  %39 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 6, i32 0, i32 0
  %40 = bitcast %"class.blink::Gamepad"** %39 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 32, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13XRInputSourceC2ERKS0_(%"class.blink::XRInputSource"*, %"class.blink::XRInputSource"* nocapture readonly dereferenceable(128)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %4, align 8
  %5 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [6 x i8*] }, { [12 x i8*], [6 x i8*] }* @_ZTVN5blink13XRInputSourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [6 x i8*] }, { [12 x i8*], [6 x i8*] }* @_ZTVN5blink13XRInputSourceE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %1, i64 0, i32 2
  %8 = bitcast %"struct.blink::XRInputSource::InternalState"* %6 to i8*
  %9 = bitcast %"struct.blink::XRInputSource::InternalState"* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 32, i1 false) #11
  %10 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 2, i32 12
  %11 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %1, i64 0, i32 2, i32 12, i32 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %10, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::String"* null, %"class.WTF::String"** %13, align 8
  %14 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 2, i32 12, i32 0, i32 0, i32 1
  store i32 0, i32* %14, align 8
  %15 = icmp eq i32 %12, 0
  br i1 %15, label %25, label %16

16:                                               ; preds = %2
  %17 = zext i32 %12 to i64
  %18 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %17) #11
  %19 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %18, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #11
  %20 = ptrtoint i8* %19 to i64
  %21 = bitcast %"class.WTF::Vector"* %10 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = lshr i64 %18, 3
  %23 = trunc i64 %22 to i32
  store i32 %23, i32* %14, align 8
  %24 = bitcast i8* %19 to %"class.WTF::String"*
  br label %25

25:                                               ; preds = %16, %2
  %26 = phi %"class.WTF::String"* [ null, %2 ], [ %24, %16 ]
  %27 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %1, i64 0, i32 2, i32 12, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 2, i32 12, i32 0, i32 0, i32 2
  store i32 %28, i32* %29, align 4
  %30 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %1, i64 0, i32 2, i32 12, i32 0, i32 0, i32 0
  %31 = load %"class.WTF::String"*, %"class.WTF::String"** %30, align 8
  %32 = load i32, i32* %27, align 4
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %31, i64 %33
  %35 = icmp eq i32 %32, 0
  br i1 %35, label %64, label %36

36:                                               ; preds = %25, %60
  %37 = phi %"class.WTF::String"* [ %61, %60 ], [ %26, %25 ]
  %38 = phi %"class.WTF::String"* [ %62, %60 ], [ %31, %25 ]
  %39 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %37, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %40, %"class.WTF::StringImpl"** %41, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %42, label %60, label %43

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = zext i32 %50 to i33
  %52 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %51, i33 1) #11
  %53 = extractvalue { i33, i1 } %52, 1
  %54 = extractvalue { i33, i1 } %52, 0
  %55 = icmp slt i33 %54, 0
  %56 = or i1 %53, %55
  br i1 %56, label %57, label %58, !prof !2

57:                                               ; preds = %48
  tail call void @llvm.trap() #11
  unreachable

58:                                               ; preds = %48
  %59 = trunc i33 %54 to i32
  store i32 %59, i32* %49, align 4
  br label %60

60:                                               ; preds = %58, %43, %36
  %61 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %37, i64 1
  %62 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %38, i64 1
  %63 = icmp eq %"class.WTF::String"* %62, %34
  br i1 %63, label %64, label %36

64:                                               ; preds = %60, %25
  %65 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 3
  %66 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %1, i64 0, i32 3
  %67 = bitcast %"class.blink::Member"* %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = bitcast %"class.blink::Member"* %65 to i64*
  store i64 %68, i64* %69, align 8
  %70 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 88) #11
  %71 = bitcast i8* %70 to %"class.blink::XRTargetRaySpace"*
  %72 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %66, i64 0, i32 0, i32 0
  %73 = load %"class.blink::XRSession"*, %"class.blink::XRSession"** %72, align 8
  tail call void @_ZN5blink16XRTargetRaySpaceC1EPNS_9XRSessionEPNS_13XRInputSourceE(%"class.blink::XRTargetRaySpace"* %71, %"class.blink::XRSession"* %73, %"class.blink::XRInputSource"* %0) #11
  %74 = getelementptr inbounds i8, i8* %70, i64 -4
  %75 = bitcast i8* %74 to i16*
  %76 = load atomic i16, i16* %75 monotonic, align 2
  %77 = or i16 %76, 1
  store atomic i16 %77, i16* %75 release, align 2
  %78 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 4, i32 0, i32 0
  %79 = bitcast %"class.blink::XRTargetRaySpace"** %78 to i8**
  store i8* %70, i8** %79, align 8
  %80 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 88) #11
  %81 = bitcast i8* %80 to %"class.blink::XRGripSpace"*
  %82 = load %"class.blink::XRSession"*, %"class.blink::XRSession"** %72, align 8
  tail call void @_ZN5blink11XRGripSpaceC1EPNS_9XRSessionEPNS_13XRInputSourceE(%"class.blink::XRGripSpace"* %81, %"class.blink::XRSession"* %82, %"class.blink::XRInputSource"* %0) #11
  %83 = getelementptr inbounds i8, i8* %80, i64 -4
  %84 = bitcast i8* %83 to i16*
  %85 = load atomic i16, i16* %84 monotonic, align 2
  %86 = or i16 %85, 1
  store atomic i16 %86, i16* %84 release, align 2
  %87 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 5, i32 0, i32 0
  %88 = bitcast %"class.blink::XRGripSpace"** %87 to i8**
  store i8* %80, i8** %88, align 8
  %89 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 6
  %90 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %1, i64 0, i32 6
  %91 = bitcast %"class.blink::Member.688"* %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = bitcast %"class.blink::Member.688"* %89 to i64*
  store i64 %92, i64* %93, align 8
  %94 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 7
  %95 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %1, i64 0, i32 7
  %96 = bitcast %"class.blink::Member.705"* %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %"class.blink::Member.705"* %94 to i64*
  store i64 %97, i64* %98, align 8
  %99 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %1, i64 0, i32 8, i32 0, i32 0, i32 0
  %100 = load %"class.blink::TransformationMatrix"*, %"class.blink::TransformationMatrix"** %99, align 8
  %101 = icmp eq %"class.blink::TransformationMatrix"* %100, null
  br i1 %101, label %106, label %102

102:                                              ; preds = %64
  %103 = tail call noalias i8* @malloc(i64 128) #11
  %104 = bitcast %"class.blink::TransformationMatrix"* %100 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %103, i8* nonnull align 8 %104, i64 128, i1 false) #11
  %105 = bitcast i8* %103 to %"class.blink::TransformationMatrix"*
  br label %106

106:                                              ; preds = %64, %102
  %107 = phi %"class.blink::TransformationMatrix"* [ %105, %102 ], [ null, %64 ]
  %108 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  store %"class.blink::TransformationMatrix"* %107, %"class.blink::TransformationMatrix"** %108, align 8
  %109 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %1, i64 0, i32 9, i32 0, i32 0, i32 0
  %110 = load %"class.blink::TransformationMatrix"*, %"class.blink::TransformationMatrix"** %109, align 8
  %111 = icmp eq %"class.blink::TransformationMatrix"* %110, null
  br i1 %111, label %116, label %112

112:                                              ; preds = %106
  %113 = tail call noalias i8* @malloc(i64 128) #11
  %114 = bitcast %"class.blink::TransformationMatrix"* %110 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* nonnull align 8 %114, i64 128, i1 false) #11
  %115 = bitcast i8* %113 to %"class.blink::TransformationMatrix"*
  br label %116

116:                                              ; preds = %106, %112
  %117 = phi %"class.blink::TransformationMatrix"* [ %115, %112 ], [ null, %106 ]
  %118 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  store %"class.blink::TransformationMatrix"* %117, %"class.blink::TransformationMatrix"** %118, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink13XRInputSource10handednessEv(%"class.blink::XRInputSource"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 2, i32 8
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %8 [
    i32 0, label %5
    i32 1, label %6
    i32 2, label %7
  ]

5:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 4) #11
  br label %9

6:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i64 4) #11
  br label %9

7:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i64 5) #11
  br label %9

8:                                                ; preds = %1
  unreachable

9:                                                ; preds = %7, %6, %5
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  ret %"class.WTF::StringImpl"* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink13XRInputSource13targetRayModeEv(%"class.blink::XRInputSource"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 2, i32 9
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %8 [
    i32 1, label %5
    i32 2, label %6
    i32 3, label %7
  ]

5:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i64 4) #11
  br label %9

6:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0), i64 15) #11
  br label %9

7:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0), i64 6) #11
  br label %9

8:                                                ; preds = %1
  unreachable

9:                                                ; preds = %7, %6, %5
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  ret %"class.WTF::StringImpl"* %11
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::XRSpace"* @_ZNK5blink13XRInputSource14targetRaySpaceEv(%"class.blink::XRInputSource"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 4, i32 0, i32 0
  %3 = load %"class.blink::XRTargetRaySpace"*, %"class.blink::XRTargetRaySpace"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::XRTargetRaySpace", %"class.blink::XRTargetRaySpace"* %3, i64 0, i32 0
  ret %"class.blink::XRSpace"* %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::XRSpace"* @_ZNK5blink13XRInputSource9gripSpaceEv(%"class.blink::XRInputSource"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 2, i32 6
  %3 = load i8, i8* %2, align 1, !range !4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 2, i32 9
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 2
  br i1 %8, label %9, label %13

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 5, i32 0, i32 0
  %11 = load %"class.blink::XRGripSpace"*, %"class.blink::XRGripSpace"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::XRGripSpace", %"class.blink::XRGripSpace"* %11, i64 0, i32 0
  br label %13

13:                                               ; preds = %5, %1, %9
  %14 = phi %"class.blink::XRSpace"* [ %12, %9 ], [ null, %1 ], [ null, %5 ]
  ret %"class.blink::XRSpace"* %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13XRInputSource19SetInputFromPointerEPKNS_20TransformationMatrixE(%"class.blink::XRInputSource"* nocapture, %"class.blink::TransformationMatrix"* readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 2, i32 6
  %4 = load i8, i8* %3, align 1, !range !4
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %21, label %6

6:                                                ; preds = %2
  %7 = icmp eq %"class.blink::TransformationMatrix"* %1, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %6
  %9 = tail call noalias i8* @malloc(i64 128) #11
  %10 = bitcast %"class.blink::TransformationMatrix"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* nonnull align 8 %10, i64 128, i1 false) #11
  %11 = ptrtoint i8* %9 to i64
  br label %12

12:                                               ; preds = %6, %8
  %13 = phi i64 [ %11, %8 ], [ 0, %6 ]
  %14 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 9
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.670", %"class.std::__1::unique_ptr.670"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::TransformationMatrix"*, %"class.blink::TransformationMatrix"** %15, align 8
  %17 = bitcast %"class.std::__1::unique_ptr.670"* %14 to i64*
  store i64 %13, i64* %17, align 8
  %18 = icmp eq %"class.blink::TransformationMatrix"* %16, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %12
  %20 = bitcast %"class.blink::TransformationMatrix"* %16 to i8*
  tail call void @free(i8* %20) #11
  br label %21

21:                                               ; preds = %12, %19, %2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink13XRInputSource19SetGamepadConnectedEb(%"class.blink::XRInputSource"* nocapture readonly, i1 zeroext) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 6, i32 0, i32 0
  %4 = load %"class.blink::Gamepad"*, %"class.blink::Gamepad"** %3, align 8
  %5 = icmp eq %"class.blink::Gamepad"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = zext i1 %1 to i8
  %8 = getelementptr inbounds %"class.blink::Gamepad", %"class.blink::Gamepad"* %4, i64 0, i32 4
  store i8 %7, i8* %8, align 4
  br label %9

9:                                                ; preds = %2, %6
  ret void
}

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #4

declare %"class.blink::LocalDOMWindow"* @_ZNK5blink33ExecutionContextLifecycleObserver9DomWindowEv(%"class.blink::ExecutionContextLifecycleObserver"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK5blink14LocalDOMWindow29CrossOriginIsolatedCapabilityEv(%"class.blink::LocalDOMWindow"*) unnamed_addr #4

declare void @_ZN5blink7Gamepad21UpdateFromDeviceStateERKN6device7GamepadEb(%"class.blink::Gamepad"*, %"class.device::Gamepad"* dereferenceable(920), i1 zeroext) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink13XRInputSource13MojoFromInputEv(%"class.absl::optional.1922"* noalias nocapture sret, %"class.blink::XRInputSource"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %1, i64 0, i32 8, i32 0, i32 0, i32 0
  %4 = load %"class.blink::TransformationMatrix"*, %"class.blink::TransformationMatrix"** %3, align 8
  %5 = icmp eq %"class.blink::TransformationMatrix"* %4, null
  %6 = getelementptr inbounds %"class.absl::optional.1922", %"class.absl::optional.1922"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %5, label %7, label %10

7:                                                ; preds = %2
  store i8 0, i8* %6, align 8
  %8 = getelementptr inbounds %"class.absl::optional.1922", %"class.absl::optional.1922"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast %union.anon.1926* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 128, i1 false) #11
  br label %14

10:                                               ; preds = %2
  store i8 1, i8* %6, align 8
  %11 = getelementptr inbounds %"class.absl::optional.1922", %"class.absl::optional.1922"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %12 = bitcast %"class.blink::TransformationMatrix"* %11 to i8*
  %13 = bitcast %"class.blink::TransformationMatrix"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* nonnull align 8 %13, i64 128, i1 false) #11
  br label %14

14:                                               ; preds = %10, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink13XRInputSource16InputFromPointerEv(%"class.absl::optional.1922"* noalias nocapture sret, %"class.blink::XRInputSource"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %1, i64 0, i32 9, i32 0, i32 0, i32 0
  %4 = load %"class.blink::TransformationMatrix"*, %"class.blink::TransformationMatrix"** %3, align 8
  %5 = icmp eq %"class.blink::TransformationMatrix"* %4, null
  %6 = getelementptr inbounds %"class.absl::optional.1922", %"class.absl::optional.1922"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %5, label %7, label %10

7:                                                ; preds = %2
  store i8 0, i8* %6, align 8
  %8 = getelementptr inbounds %"class.absl::optional.1922", %"class.absl::optional.1922"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast %union.anon.1926* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 128, i1 false) #11
  br label %14

10:                                               ; preds = %2
  store i8 1, i8* %6, align 8
  %11 = getelementptr inbounds %"class.absl::optional.1922", %"class.absl::optional.1922"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %12 = bitcast %"class.blink::TransformationMatrix"* %11 to i8*
  %13 = bitcast %"class.blink::TransformationMatrix"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* nonnull align 8 %13, i64 128, i1 false) #11
  br label %14

14:                                               ; preds = %10, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink13XRInputSource12nativeOriginEv(%"class.mojo::StructPtr.1927"* noalias nocapture sret, %"class.blink::XRInputSource"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %1, i64 0, i32 2, i32 7
  %4 = load i32, i32* %3, align 8
  %5 = tail call i8* @_Znwm(i64 16) #12, !noalias !5
  %6 = bitcast i8* %5 to %"class.device::mojom::blink::XRNativeOriginInformation"*
  tail call void @_ZN6device5mojom5blink25XRNativeOriginInformationC1Ev(%"class.device::mojom::blink::XRNativeOriginInformation"* nonnull %6) #11, !noalias !5
  %7 = ptrtoint i8* %5 to i64
  %8 = bitcast %"class.mojo::StructPtr.1927"* %0 to i64*
  store i64 %7, i64* %8, align 8, !alias.scope !5
  tail call void @_ZN6device5mojom5blink25XRNativeOriginInformation19set_input_source_idEj(%"class.device::mojom::blink::XRNativeOriginInformation"* nonnull %6, i32 %4) #11, !noalias !5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13XRInputSource13OnSelectStartEv(%"class.blink::XRInputSource"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 2, i32 1
  %3 = load i8, i8* %2, align 2, !range !4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %35

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::XRSession"*, %"class.blink::XRSession"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::XRSession", %"class.blink::XRSession"* %7, i64 0, i32 22
  %9 = load i8, i8* %8, align 8, !range !4
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %35

11:                                               ; preds = %5
  store i8 1, i8* %2, align 2
  %12 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 2, i32 2
  store i8 0, i8* %12, align 1
  %13 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names12kSelectstartE, align 8
  %14 = tail call %"class.blink::XRFrame"* @_ZN5blink9XRSession23CreatePresentationFrameEb(%"class.blink::XRSession"* %7, i1 zeroext false) #11
  %15 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 120) #11
  %16 = bitcast i8* %15 to %"class.blink::XRInputSourceEvent"*
  tail call void @_ZN5blink18XRInputSourceEventC1ERKN3WTF12AtomicStringEPNS_7XRFrameEPNS_13XRInputSourceE(%"class.blink::XRInputSourceEvent"* %16, %"class.WTF::AtomicString"* dereferenceable(8) %13, %"class.blink::XRFrame"* %14, %"class.blink::XRInputSource"* %0) #11
  %17 = getelementptr inbounds i8, i8* %15, i64 -4
  %18 = bitcast i8* %17 to i16*
  %19 = load atomic i16, i16* %18 monotonic, align 2
  %20 = or i16 %19, 1
  store atomic i16 %20, i16* %18 release, align 2
  %21 = load %"class.blink::XRSession"*, %"class.blink::XRSession"** %6, align 8
  %22 = getelementptr inbounds %"class.blink::XRSession", %"class.blink::XRSession"* %21, i64 0, i32 0, i32 0
  %23 = bitcast i8* %15 to %"class.blink::Event"*
  %24 = tail call i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"* %22, %"class.blink::Event"* dereferenceable(104) %23) #11
  %25 = getelementptr inbounds i8, i8* %15, i64 24
  %26 = bitcast i8* %25 to i16*
  %27 = load i16, i16* %26, align 8
  %28 = and i16 %27, 32
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %31, label %30

30:                                               ; preds = %11
  store i8 1, i8* %12, align 1
  br label %31

31:                                               ; preds = %11, %30
  %32 = getelementptr inbounds i8, i8* %15, i64 104
  %33 = bitcast i8* %32 to %"class.blink::XRFrame"**
  %34 = load %"class.blink::XRFrame"*, %"class.blink::XRFrame"** %33, align 8
  tail call void @_ZN5blink7XRFrame10DeactivateEv(%"class.blink::XRFrame"* %34) #11
  br label %35

35:                                               ; preds = %5, %1, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::XRInputSourceEvent"* @_ZN5blink13XRInputSource22CreateInputSourceEventERKN3WTF12AtomicStringE(%"class.blink::XRInputSource"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::XRSession"*, %"class.blink::XRSession"** %3, align 8
  %5 = tail call %"class.blink::XRFrame"* @_ZN5blink9XRSession23CreatePresentationFrameEb(%"class.blink::XRSession"* %4, i1 zeroext false) #11
  %6 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 120) #11
  %7 = bitcast i8* %6 to %"class.blink::XRInputSourceEvent"*
  tail call void @_ZN5blink18XRInputSourceEventC1ERKN3WTF12AtomicStringEPNS_7XRFrameEPNS_13XRInputSourceE(%"class.blink::XRInputSourceEvent"* %7, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.blink::XRFrame"* %5, %"class.blink::XRInputSource"* %0) #11
  %8 = getelementptr inbounds i8, i8* %6, i64 -4
  %9 = bitcast i8* %8 to i16*
  %10 = load atomic i16, i16* %9 monotonic, align 2
  %11 = or i16 %10, 1
  store atomic i16 %11, i16* %9 release, align 2
  ret %"class.blink::XRInputSourceEvent"* %7
}

declare i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) local_unnamed_addr #4

declare void @_ZN5blink7XRFrame10DeactivateEv(%"class.blink::XRFrame"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13XRInputSource11OnSelectEndEv(%"class.blink::XRInputSource"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 2, i32 1
  %3 = load i8, i8* %2, align 2, !range !4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %43, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::XRSession"*, %"class.blink::XRSession"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::XRSession", %"class.blink::XRSession"* %7, i64 0, i32 22
  %9 = load i8, i8* %8, align 8, !range !4
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %43

11:                                               ; preds = %5
  store i8 0, i8* %2, align 2
  %12 = getelementptr inbounds %"class.blink::XRSession", %"class.blink::XRSession"* %7, i64 0, i32 9, i32 0, i32 0
  %13 = load %"class.blink::XRSystem"*, %"class.blink::XRSystem"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::XRSystem", %"class.blink::XRSystem"* %13, i64 0, i32 2
  %15 = bitcast %"class.blink::ExecutionContextLifecycleObserver.base"* %14 to %"class.blink::ExecutionContextLifecycleObserver"*
  %16 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink33ExecutionContextLifecycleObserver9DomWindowEv(%"class.blink::ExecutionContextLifecycleObserver"* %15) #11
  %17 = icmp eq %"class.blink::LocalDOMWindow"* %16, null
  br i1 %17, label %43, label %18

18:                                               ; preds = %11
  %19 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names10kSelectendE, align 8
  %20 = load %"class.blink::XRSession"*, %"class.blink::XRSession"** %6, align 8
  %21 = tail call %"class.blink::XRFrame"* @_ZN5blink9XRSession23CreatePresentationFrameEb(%"class.blink::XRSession"* %20, i1 zeroext false) #11
  %22 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 120) #11
  %23 = bitcast i8* %22 to %"class.blink::XRInputSourceEvent"*
  tail call void @_ZN5blink18XRInputSourceEventC1ERKN3WTF12AtomicStringEPNS_7XRFrameEPNS_13XRInputSourceE(%"class.blink::XRInputSourceEvent"* %23, %"class.WTF::AtomicString"* dereferenceable(8) %19, %"class.blink::XRFrame"* %21, %"class.blink::XRInputSource"* %0) #11
  %24 = getelementptr inbounds i8, i8* %22, i64 -4
  %25 = bitcast i8* %24 to i16*
  %26 = load atomic i16, i16* %25 monotonic, align 2
  %27 = or i16 %26, 1
  store atomic i16 %27, i16* %25 release, align 2
  %28 = load %"class.blink::XRSession"*, %"class.blink::XRSession"** %6, align 8
  %29 = getelementptr inbounds %"class.blink::XRSession", %"class.blink::XRSession"* %28, i64 0, i32 0, i32 0
  %30 = bitcast i8* %22 to %"class.blink::Event"*
  %31 = tail call i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"* %29, %"class.blink::Event"* dereferenceable(104) %30) #11
  %32 = getelementptr inbounds i8, i8* %22, i64 24
  %33 = bitcast i8* %32 to i16*
  %34 = load i16, i16* %33, align 8
  %35 = and i16 %34, 32
  %36 = icmp eq i16 %35, 0
  br i1 %36, label %39, label %37

37:                                               ; preds = %18
  %38 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 2, i32 2
  store i8 1, i8* %38, align 1
  br label %39

39:                                               ; preds = %18, %37
  %40 = getelementptr inbounds i8, i8* %22, i64 104
  %41 = bitcast i8* %40 to %"class.blink::XRFrame"**
  %42 = load %"class.blink::XRFrame"*, %"class.blink::XRFrame"** %41, align 8
  tail call void @_ZN5blink7XRFrame10DeactivateEv(%"class.blink::XRFrame"* %42) #11
  br label %43

43:                                               ; preds = %5, %11, %1, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13XRInputSource8OnSelectEv(%"class.blink::XRInputSource"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 2, i32 1
  %3 = load i8, i8* %2, align 2, !range !4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %6

5:                                                ; preds = %1
  tail call void @_ZN5blink13XRInputSource13OnSelectStartEv(%"class.blink::XRInputSource"* %0)
  br label %6

6:                                                ; preds = %1, %5
  %7 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 3, i32 0, i32 0
  %8 = load %"class.blink::XRSession"*, %"class.blink::XRSession"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::XRSession", %"class.blink::XRSession"* %8, i64 0, i32 9, i32 0, i32 0
  %10 = load %"class.blink::XRSystem"*, %"class.blink::XRSystem"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::XRSystem", %"class.blink::XRSystem"* %10, i64 0, i32 2
  %12 = bitcast %"class.blink::ExecutionContextLifecycleObserver.base"* %11 to %"class.blink::ExecutionContextLifecycleObserver"*
  %13 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink33ExecutionContextLifecycleObserver9DomWindowEv(%"class.blink::ExecutionContextLifecycleObserver"* %12) #11
  %14 = icmp eq %"class.blink::LocalDOMWindow"* %13, null
  br i1 %14, label %44, label %15

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %13, i64 0, i32 0, i32 1, i32 0, i32 0
  %17 = bitcast %"class.blink::Frame"** %16 to %"class.blink::LocalFrame"**
  %18 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %17, align 8
  tail call void @_ZN5blink10LocalFrame20NotifyUserActivationEPS0_NS_5mojom30UserActivationNotificationTypeEb(%"class.blink::LocalFrame"* %18, i32 1, i1 zeroext false) #11
  %19 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 2, i32 2
  %20 = load i8, i8* %19, align 1, !range !4
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %43

22:                                               ; preds = %15
  %23 = load %"class.blink::XRSession"*, %"class.blink::XRSession"** %7, align 8
  %24 = getelementptr inbounds %"class.blink::XRSession", %"class.blink::XRSession"* %23, i64 0, i32 22
  %25 = load i8, i8* %24, align 8, !range !4
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %27, label %43

27:                                               ; preds = %22
  %28 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names7kSelectE, align 8
  %29 = tail call %"class.blink::XRFrame"* @_ZN5blink9XRSession23CreatePresentationFrameEb(%"class.blink::XRSession"* %23, i1 zeroext false) #11
  %30 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 120) #11
  %31 = bitcast i8* %30 to %"class.blink::XRInputSourceEvent"*
  tail call void @_ZN5blink18XRInputSourceEventC1ERKN3WTF12AtomicStringEPNS_7XRFrameEPNS_13XRInputSourceE(%"class.blink::XRInputSourceEvent"* %31, %"class.WTF::AtomicString"* dereferenceable(8) %28, %"class.blink::XRFrame"* %29, %"class.blink::XRInputSource"* %0) #11
  %32 = getelementptr inbounds i8, i8* %30, i64 -4
  %33 = bitcast i8* %32 to i16*
  %34 = load atomic i16, i16* %33 monotonic, align 2
  %35 = or i16 %34, 1
  store atomic i16 %35, i16* %33 release, align 2
  %36 = load %"class.blink::XRSession"*, %"class.blink::XRSession"** %7, align 8
  %37 = getelementptr inbounds %"class.blink::XRSession", %"class.blink::XRSession"* %36, i64 0, i32 0, i32 0
  %38 = bitcast i8* %30 to %"class.blink::Event"*
  %39 = tail call i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"* %37, %"class.blink::Event"* dereferenceable(104) %38) #11
  %40 = getelementptr inbounds i8, i8* %30, i64 104
  %41 = bitcast i8* %40 to %"class.blink::XRFrame"**
  %42 = load %"class.blink::XRFrame"*, %"class.blink::XRFrame"** %41, align 8
  tail call void @_ZN5blink7XRFrame10DeactivateEv(%"class.blink::XRFrame"* %42) #11
  br label %43

43:                                               ; preds = %22, %15, %27
  tail call void @_ZN5blink13XRInputSource11OnSelectEndEv(%"class.blink::XRInputSource"* %0)
  br label %44

44:                                               ; preds = %6, %43
  ret void
}

declare void @_ZN5blink10LocalFrame20NotifyUserActivationEPS0_NS_5mojom30UserActivationNotificationTypeEb(%"class.blink::LocalFrame"*, i32, i1 zeroext) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13XRInputSource14OnSqueezeStartEv(%"class.blink::XRInputSource"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 2, i32 3
  %3 = load i8, i8* %2, align 4, !range !4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %35

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::XRSession"*, %"class.blink::XRSession"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::XRSession", %"class.blink::XRSession"* %7, i64 0, i32 22
  %9 = load i8, i8* %8, align 8, !range !4
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %35

11:                                               ; preds = %5
  store i8 1, i8* %2, align 4
  %12 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 2, i32 4
  store i8 0, i8* %12, align 1
  %13 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names13kSqueezestartE, align 8
  %14 = tail call %"class.blink::XRFrame"* @_ZN5blink9XRSession23CreatePresentationFrameEb(%"class.blink::XRSession"* %7, i1 zeroext false) #11
  %15 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 120) #11
  %16 = bitcast i8* %15 to %"class.blink::XRInputSourceEvent"*
  tail call void @_ZN5blink18XRInputSourceEventC1ERKN3WTF12AtomicStringEPNS_7XRFrameEPNS_13XRInputSourceE(%"class.blink::XRInputSourceEvent"* %16, %"class.WTF::AtomicString"* dereferenceable(8) %13, %"class.blink::XRFrame"* %14, %"class.blink::XRInputSource"* %0) #11
  %17 = getelementptr inbounds i8, i8* %15, i64 -4
  %18 = bitcast i8* %17 to i16*
  %19 = load atomic i16, i16* %18 monotonic, align 2
  %20 = or i16 %19, 1
  store atomic i16 %20, i16* %18 release, align 2
  %21 = load %"class.blink::XRSession"*, %"class.blink::XRSession"** %6, align 8
  %22 = getelementptr inbounds %"class.blink::XRSession", %"class.blink::XRSession"* %21, i64 0, i32 0, i32 0
  %23 = bitcast i8* %15 to %"class.blink::Event"*
  %24 = tail call i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"* %22, %"class.blink::Event"* dereferenceable(104) %23) #11
  %25 = getelementptr inbounds i8, i8* %15, i64 24
  %26 = bitcast i8* %25 to i16*
  %27 = load i16, i16* %26, align 8
  %28 = and i16 %27, 32
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %31, label %30

30:                                               ; preds = %11
  store i8 1, i8* %12, align 1
  br label %31

31:                                               ; preds = %11, %30
  %32 = getelementptr inbounds i8, i8* %15, i64 104
  %33 = bitcast i8* %32 to %"class.blink::XRFrame"**
  %34 = load %"class.blink::XRFrame"*, %"class.blink::XRFrame"** %33, align 8
  tail call void @_ZN5blink7XRFrame10DeactivateEv(%"class.blink::XRFrame"* %34) #11
  br label %35

35:                                               ; preds = %5, %1, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13XRInputSource12OnSqueezeEndEv(%"class.blink::XRInputSource"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 2, i32 3
  %3 = load i8, i8* %2, align 4, !range !4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %43, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::XRSession"*, %"class.blink::XRSession"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::XRSession", %"class.blink::XRSession"* %7, i64 0, i32 22
  %9 = load i8, i8* %8, align 8, !range !4
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %43

11:                                               ; preds = %5
  store i8 0, i8* %2, align 4
  %12 = getelementptr inbounds %"class.blink::XRSession", %"class.blink::XRSession"* %7, i64 0, i32 9, i32 0, i32 0
  %13 = load %"class.blink::XRSystem"*, %"class.blink::XRSystem"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::XRSystem", %"class.blink::XRSystem"* %13, i64 0, i32 2
  %15 = bitcast %"class.blink::ExecutionContextLifecycleObserver.base"* %14 to %"class.blink::ExecutionContextLifecycleObserver"*
  %16 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink33ExecutionContextLifecycleObserver9DomWindowEv(%"class.blink::ExecutionContextLifecycleObserver"* %15) #11
  %17 = icmp eq %"class.blink::LocalDOMWindow"* %16, null
  br i1 %17, label %43, label %18

18:                                               ; preds = %11
  %19 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names11kSqueezeendE, align 8
  %20 = load %"class.blink::XRSession"*, %"class.blink::XRSession"** %6, align 8
  %21 = tail call %"class.blink::XRFrame"* @_ZN5blink9XRSession23CreatePresentationFrameEb(%"class.blink::XRSession"* %20, i1 zeroext false) #11
  %22 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 120) #11
  %23 = bitcast i8* %22 to %"class.blink::XRInputSourceEvent"*
  tail call void @_ZN5blink18XRInputSourceEventC1ERKN3WTF12AtomicStringEPNS_7XRFrameEPNS_13XRInputSourceE(%"class.blink::XRInputSourceEvent"* %23, %"class.WTF::AtomicString"* dereferenceable(8) %19, %"class.blink::XRFrame"* %21, %"class.blink::XRInputSource"* %0) #11
  %24 = getelementptr inbounds i8, i8* %22, i64 -4
  %25 = bitcast i8* %24 to i16*
  %26 = load atomic i16, i16* %25 monotonic, align 2
  %27 = or i16 %26, 1
  store atomic i16 %27, i16* %25 release, align 2
  %28 = load %"class.blink::XRSession"*, %"class.blink::XRSession"** %6, align 8
  %29 = getelementptr inbounds %"class.blink::XRSession", %"class.blink::XRSession"* %28, i64 0, i32 0, i32 0
  %30 = bitcast i8* %22 to %"class.blink::Event"*
  %31 = tail call i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"* %29, %"class.blink::Event"* dereferenceable(104) %30) #11
  %32 = getelementptr inbounds i8, i8* %22, i64 24
  %33 = bitcast i8* %32 to i16*
  %34 = load i16, i16* %33, align 8
  %35 = and i16 %34, 32
  %36 = icmp eq i16 %35, 0
  br i1 %36, label %39, label %37

37:                                               ; preds = %18
  %38 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 2, i32 4
  store i8 1, i8* %38, align 1
  br label %39

39:                                               ; preds = %18, %37
  %40 = getelementptr inbounds i8, i8* %22, i64 104
  %41 = bitcast i8* %40 to %"class.blink::XRFrame"**
  %42 = load %"class.blink::XRFrame"*, %"class.blink::XRFrame"** %41, align 8
  tail call void @_ZN5blink7XRFrame10DeactivateEv(%"class.blink::XRFrame"* %42) #11
  br label %43

43:                                               ; preds = %5, %11, %1, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13XRInputSource9OnSqueezeEv(%"class.blink::XRInputSource"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 2, i32 3
  %3 = load i8, i8* %2, align 4, !range !4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %6

5:                                                ; preds = %1
  tail call void @_ZN5blink13XRInputSource14OnSqueezeStartEv(%"class.blink::XRInputSource"* %0)
  br label %6

6:                                                ; preds = %1, %5
  %7 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 3, i32 0, i32 0
  %8 = load %"class.blink::XRSession"*, %"class.blink::XRSession"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::XRSession", %"class.blink::XRSession"* %8, i64 0, i32 9, i32 0, i32 0
  %10 = load %"class.blink::XRSystem"*, %"class.blink::XRSystem"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::XRSystem", %"class.blink::XRSystem"* %10, i64 0, i32 2
  %12 = bitcast %"class.blink::ExecutionContextLifecycleObserver.base"* %11 to %"class.blink::ExecutionContextLifecycleObserver"*
  %13 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink33ExecutionContextLifecycleObserver9DomWindowEv(%"class.blink::ExecutionContextLifecycleObserver"* %12) #11
  %14 = icmp eq %"class.blink::LocalDOMWindow"* %13, null
  br i1 %14, label %44, label %15

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %13, i64 0, i32 0, i32 1, i32 0, i32 0
  %17 = bitcast %"class.blink::Frame"** %16 to %"class.blink::LocalFrame"**
  %18 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %17, align 8
  tail call void @_ZN5blink10LocalFrame20NotifyUserActivationEPS0_NS_5mojom30UserActivationNotificationTypeEb(%"class.blink::LocalFrame"* %18, i32 1, i1 zeroext false) #11
  %19 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 2, i32 4
  %20 = load i8, i8* %19, align 1, !range !4
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %43

22:                                               ; preds = %15
  %23 = load %"class.blink::XRSession"*, %"class.blink::XRSession"** %7, align 8
  %24 = getelementptr inbounds %"class.blink::XRSession", %"class.blink::XRSession"* %23, i64 0, i32 22
  %25 = load i8, i8* %24, align 8, !range !4
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %27, label %43

27:                                               ; preds = %22
  %28 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names8kSqueezeE, align 8
  %29 = tail call %"class.blink::XRFrame"* @_ZN5blink9XRSession23CreatePresentationFrameEb(%"class.blink::XRSession"* %23, i1 zeroext false) #11
  %30 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 120) #11
  %31 = bitcast i8* %30 to %"class.blink::XRInputSourceEvent"*
  tail call void @_ZN5blink18XRInputSourceEventC1ERKN3WTF12AtomicStringEPNS_7XRFrameEPNS_13XRInputSourceE(%"class.blink::XRInputSourceEvent"* %31, %"class.WTF::AtomicString"* dereferenceable(8) %28, %"class.blink::XRFrame"* %29, %"class.blink::XRInputSource"* %0) #11
  %32 = getelementptr inbounds i8, i8* %30, i64 -4
  %33 = bitcast i8* %32 to i16*
  %34 = load atomic i16, i16* %33 monotonic, align 2
  %35 = or i16 %34, 1
  store atomic i16 %35, i16* %33 release, align 2
  %36 = load %"class.blink::XRSession"*, %"class.blink::XRSession"** %7, align 8
  %37 = getelementptr inbounds %"class.blink::XRSession", %"class.blink::XRSession"* %36, i64 0, i32 0, i32 0
  %38 = bitcast i8* %30 to %"class.blink::Event"*
  %39 = tail call i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"* %37, %"class.blink::Event"* dereferenceable(104) %38) #11
  %40 = getelementptr inbounds i8, i8* %30, i64 104
  %41 = bitcast i8* %40 to %"class.blink::XRFrame"**
  %42 = load %"class.blink::XRFrame"*, %"class.blink::XRFrame"** %41, align 8
  tail call void @_ZN5blink7XRFrame10DeactivateEv(%"class.blink::XRFrame"* %42) #11
  br label %43

43:                                               ; preds = %22, %15, %27
  tail call void @_ZN5blink13XRInputSource12OnSqueezeEndEv(%"class.blink::XRInputSource"* %0)
  br label %44

44:                                               ; preds = %6, %43
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13XRInputSource18UpdateButtonStatesERKN4mojo9StructPtrIN6device5mojom5blink18XRInputSourceStateEEE(%"class.blink::XRInputSource"*, %"class.mojo::StructPtr.1874"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.mojo::StructPtr.1874", %"class.mojo::StructPtr.1874"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.device::mojom::blink::XRInputSourceState"*, %"class.device::mojom::blink::XRInputSourceState"** %3, align 8
  %5 = icmp eq %"class.device::mojom::blink::XRInputSourceState"* %4, null
  br i1 %5, label %57, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 2, i32 6
  %8 = load i8, i8* %7, align 1, !range !4
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.device::mojom::blink::XRInputSourceState", %"class.device::mojom::blink::XRInputSourceState"* %4, i64 0, i32 6
  %12 = load i8, i8* %11, align 1, !range !4
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %57, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15, align 2
  br label %57

16:                                               ; preds = %6
  %17 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 2, i32 5
  %18 = load i8, i8* %17, align 2, !range !4
  %19 = icmp eq i8 %18, 0
  %20 = getelementptr inbounds %"class.device::mojom::blink::XRInputSourceState", %"class.device::mojom::blink::XRInputSourceState"* %4, i64 0, i32 6
  %21 = load i8, i8* %20, align 1, !range !4
  %22 = icmp ne i8 %21, 0
  br i1 %19, label %25, label %23

23:                                               ; preds = %16
  br i1 %22, label %24, label %57

24:                                               ; preds = %23
  store i8 0, i8* %17, align 2
  br label %57

25:                                               ; preds = %16
  br i1 %22, label %26, label %28

26:                                               ; preds = %25
  tail call void @_ZN5blink13XRInputSource8OnSelectEv(%"class.blink::XRInputSource"* %0)
  %27 = load %"class.device::mojom::blink::XRInputSourceState"*, %"class.device::mojom::blink::XRInputSourceState"** %3, align 8
  br label %28

28:                                               ; preds = %26, %25
  %29 = phi %"class.device::mojom::blink::XRInputSourceState"* [ %27, %26 ], [ %4, %25 ]
  %30 = getelementptr inbounds %"class.device::mojom::blink::XRInputSourceState", %"class.device::mojom::blink::XRInputSourceState"* %29, i64 0, i32 5
  %31 = load i8, i8* %30, align 2, !range !4
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %34, label %33

33:                                               ; preds = %28
  tail call void @_ZN5blink13XRInputSource13OnSelectStartEv(%"class.blink::XRInputSource"* %0)
  br label %39

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 2, i32 1
  %36 = load i8, i8* %35, align 2, !range !4
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %39, label %38

38:                                               ; preds = %34
  tail call void @_ZN5blink13XRInputSource11OnSelectEndEv(%"class.blink::XRInputSource"* %0)
  br label %39

39:                                               ; preds = %34, %38, %33
  %40 = load %"class.device::mojom::blink::XRInputSourceState"*, %"class.device::mojom::blink::XRInputSourceState"** %3, align 8
  %41 = getelementptr inbounds %"class.device::mojom::blink::XRInputSourceState", %"class.device::mojom::blink::XRInputSourceState"* %40, i64 0, i32 8
  %42 = load i8, i8* %41, align 1, !range !4
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %46, label %44

44:                                               ; preds = %39
  tail call void @_ZN5blink13XRInputSource9OnSqueezeEv(%"class.blink::XRInputSource"* %0)
  %45 = load %"class.device::mojom::blink::XRInputSourceState"*, %"class.device::mojom::blink::XRInputSourceState"** %3, align 8
  br label %46

46:                                               ; preds = %39, %44
  %47 = phi %"class.device::mojom::blink::XRInputSourceState"* [ %40, %39 ], [ %45, %44 ]
  %48 = getelementptr inbounds %"class.device::mojom::blink::XRInputSourceState", %"class.device::mojom::blink::XRInputSourceState"* %47, i64 0, i32 7
  %49 = load i8, i8* %48, align 4, !range !4
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %52, label %51

51:                                               ; preds = %46
  tail call void @_ZN5blink13XRInputSource14OnSqueezeStartEv(%"class.blink::XRInputSource"* %0)
  br label %57

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 2, i32 3
  %54 = load i8, i8* %53, align 4, !range !4
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %57, label %56

56:                                               ; preds = %52
  tail call void @_ZN5blink13XRInputSource12OnSqueezeEndEv(%"class.blink::XRInputSource"* %0)
  br label %57

57:                                               ; preds = %2, %52, %10, %56, %23, %24, %14, %51
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13XRInputSource21ProcessOverlayHitTestEPNS_7ElementERKN4mojo9StructPtrIN6device5mojom5blink18XRInputSourceStateEEE(%"class.blink::XRInputSource"* nocapture, %"class.blink::Element"* nocapture readonly, %"class.mojo::StructPtr.1874"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::FloatPoint", align 4
  %5 = alloca %"class.blink::HitTestResult", align 8
  %6 = alloca %"class.blink::HitTestLocation", align 4
  %7 = bitcast %"class.blink::FloatPoint"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %4, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %8, align 4
  %9 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %4, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %9, align 4
  %10 = getelementptr inbounds %"class.mojo::StructPtr.1874", %"class.mojo::StructPtr.1874"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"class.device::mojom::blink::XRInputSourceState"*, %"class.device::mojom::blink::XRInputSourceState"** %10, align 8
  %12 = getelementptr inbounds %"class.device::mojom::blink::XRInputSourceState", %"class.device::mojom::blink::XRInputSourceState"* %11, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %13 = load i8, i8* %12, align 4, !range !4
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %16, !prof !2

15:                                               ; preds = %3
  tail call void @llvm.trap() #11
  unreachable

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.device::mojom::blink::XRInputSourceState", %"class.device::mojom::blink::XRInputSourceState"* %11, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0
  %18 = bitcast %"class.gfx::PointF"* %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.device::mojom::blink::XRInputSourceState", %"class.device::mojom::blink::XRInputSourceState"* %11, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %21 = bitcast float* %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = bitcast %"class.blink::FloatPoint"* %4 to i32*
  store i32 %19, i32* %23, align 4
  %24 = bitcast float* %9 to i32*
  store i32 %22, i32* %24, align 4
  %25 = bitcast %"class.blink::HitTestResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %25) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 112, i1 false)
  %26 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %27 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %27, i64 0, i32 2, i32 0, i32 0
  %29 = load %"class.blink::Document"*, %"class.blink::Document"** %28, align 8
  %30 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %29) #11
  %31 = bitcast %"class.blink::HitTestLocation"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %31) #11
  call void @_ZN5blink15HitTestLocationC1ERKNS_10FloatPointE(%"class.blink::HitTestLocation"* nonnull %6, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %4) #11
  call void @_ZN5blink19event_handling_util20HitTestResultInFrameEPNS_10LocalFrameERKNS_15HitTestLocationEj(%"class.blink::HitTestResult"* nonnull sret %5, %"class.blink::LocalFrame"* %30, %"class.blink::HitTestLocation"* nonnull dereferenceable(72) %6, i32 134) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %31) #11
  %32 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %5, i64 0, i32 4, i32 0, i32 0
  %33 = load %"class.blink::Element"*, %"class.blink::Element"** %32, align 8
  %34 = icmp eq %"class.blink::Element"* %33, null
  br i1 %34, label %119, label %35

35:                                               ; preds = %16
  %36 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %33, i64 0, i32 0, i32 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = and i32 %37, 48
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %75

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %33, i64 0, i32 0, i32 0
  %42 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kFrameTagE, align 8
  %43 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %42, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %41, i64 1, i32 2
  %46 = bitcast %"class.blink::Member.303"* %45 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %47 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %47, i64 0, i32 3, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %44, i64 0, i32 3, i32 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %49, %51
  br i1 %52, label %60, label %53

53:                                               ; preds = %40
  %54 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kIFrameTagE, align 8
  %55 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %54, i64 0, i32 0, i32 0, i32 0
  %56 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %56, i64 0, i32 3, i32 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = icmp eq %"class.WTF::StringImpl"* %49, %58
  br i1 %59, label %60, label %75

60:                                               ; preds = %53, %40
  %61 = bitcast %"class.blink::Element"* %33 to %"class.blink::HTMLFrameOwnerElement"*
  %62 = call %"class.blink::Document"* @_ZNK5blink21HTMLFrameOwnerElement15contentDocumentEv(%"class.blink::HTMLFrameOwnerElement"* nonnull %61) #11
  %63 = icmp eq %"class.blink::Document"* %62, null
  br i1 %63, label %75, label %64

64:                                               ; preds = %60
  %65 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* nonnull %62) #11
  %66 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %65, i64 0, i32 0
  %67 = call zeroext i1 @_ZNK5blink5Frame24IsCrossOriginToMainFrameEv(%"class.blink::Frame"* %66) #11
  br i1 %67, label %68, label %75

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 2, i32 6
  store i8 0, i8* %69, align 1
  %70 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 2, i32 1
  %71 = load i8, i8* %70, align 2, !range !4
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %73, label %119

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 2, i32 5
  store i8 1, i8* %74, align 2
  br label %119

75:                                               ; preds = %60, %64, %35, %53
  %76 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 2, i32 6
  store i8 1, i8* %76, align 1
  %77 = load %"class.device::mojom::blink::XRInputSourceState"*, %"class.device::mojom::blink::XRInputSourceState"** %10, align 8
  %78 = getelementptr inbounds %"class.device::mojom::blink::XRInputSourceState", %"class.device::mojom::blink::XRInputSourceState"* %77, i64 0, i32 4
  %79 = load i8, i8* %78, align 1, !range !4
  %80 = icmp eq i8 %79, 0
  %81 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 2, i32 5
  br i1 %80, label %83, label %82

82:                                               ; preds = %75
  store i8 1, i8* %81, align 2
  br label %119

83:                                               ; preds = %75
  %84 = load i8, i8* %81, align 2, !range !4
  %85 = icmp eq i8 %84, 0
  %86 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 2, i32 5
  br i1 %85, label %87, label %119

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 2, i32 1
  %89 = load i8, i8* %88, align 2, !range !4
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %91, label %119

91:                                               ; preds = %87
  %92 = load %"class.device::mojom::blink::XRInputSourceState"*, %"class.device::mojom::blink::XRInputSourceState"** %10, align 8
  %93 = getelementptr inbounds %"class.device::mojom::blink::XRInputSourceState", %"class.device::mojom::blink::XRInputSourceState"* %92, i64 0, i32 5
  %94 = load i8, i8* %93, align 2, !range !4
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %96, label %100

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"class.device::mojom::blink::XRInputSourceState", %"class.device::mojom::blink::XRInputSourceState"* %92, i64 0, i32 6
  %98 = load i8, i8* %97, align 1, !range !4
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %119, label %100

100:                                              ; preds = %96, %91
  %101 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names15kBeforexrselectE, align 8
  %102 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 112) #11
  %103 = bitcast i8* %102 to %"class.blink::XRSessionEvent"*
  %104 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 3, i32 0, i32 0
  %105 = load %"class.blink::XRSession"*, %"class.blink::XRSession"** %104, align 8
  call void @_ZN5blink14XRSessionEventC1ERKN3WTF12AtomicStringEPNS_9XRSessionENS_5Event7BubblesENS7_10CancelableENS7_12ComposedModeE(%"class.blink::XRSessionEvent"* %103, %"class.WTF::AtomicString"* dereferenceable(8) %101, %"class.blink::XRSession"* %105, i32 0, i32 0, i32 0) #11
  %106 = getelementptr inbounds i8, i8* %102, i64 -4
  %107 = bitcast i8* %106 to i16*
  %108 = load atomic i16, i16* %107 monotonic, align 2
  %109 = or i16 %108, 1
  store atomic i16 %109, i16* %107 release, align 2
  %110 = bitcast i8* %102 to %"class.blink::Event"*
  %111 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %33, i64 0, i32 0, i32 0, i32 0
  %112 = call i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"* %111, %"class.blink::Event"* dereferenceable(104) %110) #11
  %113 = getelementptr inbounds i8, i8* %102, i64 24
  %114 = bitcast i8* %113 to i16*
  %115 = load i16, i16* %114, align 8
  %116 = lshr i16 %115, 5
  %117 = trunc i16 %116 to i8
  %118 = and i8 %117, 1
  store i8 %118, i8* %86, align 2
  br label %119

119:                                              ; preds = %82, %96, %73, %68, %83, %87, %100, %16
  call void @_ZN5blink13HitTestResultD1Ev(%"class.blink::HitTestResult"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %25) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink19event_handling_util20HitTestResultInFrameEPNS_10LocalFrameERKNS_15HitTestLocationEj(%"class.blink::HitTestResult"* sret, %"class.blink::LocalFrame"*, %"class.blink::HitTestLocation"* dereferenceable(72), i32) local_unnamed_addr #4

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #4

declare void @_ZN5blink15HitTestLocationC1ERKNS_10FloatPointE(%"class.blink::HitTestLocation"*, %"class.blink::FloatPoint"* dereferenceable(8)) unnamed_addr #4

declare %"class.blink::Document"* @_ZNK5blink21HTMLFrameOwnerElement15contentDocumentEv(%"class.blink::HTMLFrameOwnerElement"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK5blink5Frame24IsCrossOriginToMainFrameEv(%"class.blink::Frame"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink13HitTestResultD1Ev(%"class.blink::HitTestResult"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13XRInputSource9OnRemovedEv(%"class.blink::XRInputSource"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 2, i32 1
  %3 = load i8, i8* %2, align 2, !range !4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %31, label %5

5:                                                ; preds = %1
  store i8 0, i8* %2, align 2
  %6 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names10kSelectendE, align 8
  %7 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 3, i32 0, i32 0
  %8 = load %"class.blink::XRSession"*, %"class.blink::XRSession"** %7, align 8
  %9 = tail call %"class.blink::XRFrame"* @_ZN5blink9XRSession23CreatePresentationFrameEb(%"class.blink::XRSession"* %8, i1 zeroext false) #11
  %10 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 120) #11
  %11 = bitcast i8* %10 to %"class.blink::XRInputSourceEvent"*
  tail call void @_ZN5blink18XRInputSourceEventC1ERKN3WTF12AtomicStringEPNS_7XRFrameEPNS_13XRInputSourceE(%"class.blink::XRInputSourceEvent"* %11, %"class.WTF::AtomicString"* dereferenceable(8) %6, %"class.blink::XRFrame"* %9, %"class.blink::XRInputSource"* %0) #11
  %12 = getelementptr inbounds i8, i8* %10, i64 -4
  %13 = bitcast i8* %12 to i16*
  %14 = load atomic i16, i16* %13 monotonic, align 2
  %15 = or i16 %14, 1
  store atomic i16 %15, i16* %13 release, align 2
  %16 = load %"class.blink::XRSession"*, %"class.blink::XRSession"** %7, align 8
  %17 = getelementptr inbounds %"class.blink::XRSession", %"class.blink::XRSession"* %16, i64 0, i32 0, i32 0
  %18 = bitcast i8* %10 to %"class.blink::Event"*
  %19 = tail call i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"* %17, %"class.blink::Event"* dereferenceable(104) %18) #11
  %20 = getelementptr inbounds i8, i8* %10, i64 24
  %21 = bitcast i8* %20 to i16*
  %22 = load i16, i16* %21, align 8
  %23 = and i16 %22, 32
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %5
  %26 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 2, i32 2
  store i8 1, i8* %26, align 1
  br label %27

27:                                               ; preds = %5, %25
  %28 = getelementptr inbounds i8, i8* %10, i64 104
  %29 = bitcast i8* %28 to %"class.blink::XRFrame"**
  %30 = load %"class.blink::XRFrame"*, %"class.blink::XRFrame"** %29, align 8
  tail call void @_ZN5blink7XRFrame10DeactivateEv(%"class.blink::XRFrame"* %30) #11
  br label %31

31:                                               ; preds = %1, %27
  %32 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 2, i32 3
  %33 = load i8, i8* %32, align 4, !range !4
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %61, label %35

35:                                               ; preds = %31
  store i8 0, i8* %32, align 4
  %36 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names11kSqueezeendE, align 8
  %37 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 3, i32 0, i32 0
  %38 = load %"class.blink::XRSession"*, %"class.blink::XRSession"** %37, align 8
  %39 = tail call %"class.blink::XRFrame"* @_ZN5blink9XRSession23CreatePresentationFrameEb(%"class.blink::XRSession"* %38, i1 zeroext false) #11
  %40 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 120) #11
  %41 = bitcast i8* %40 to %"class.blink::XRInputSourceEvent"*
  tail call void @_ZN5blink18XRInputSourceEventC1ERKN3WTF12AtomicStringEPNS_7XRFrameEPNS_13XRInputSourceE(%"class.blink::XRInputSourceEvent"* %41, %"class.WTF::AtomicString"* dereferenceable(8) %36, %"class.blink::XRFrame"* %39, %"class.blink::XRInputSource"* %0) #11
  %42 = getelementptr inbounds i8, i8* %40, i64 -4
  %43 = bitcast i8* %42 to i16*
  %44 = load atomic i16, i16* %43 monotonic, align 2
  %45 = or i16 %44, 1
  store atomic i16 %45, i16* %43 release, align 2
  %46 = load %"class.blink::XRSession"*, %"class.blink::XRSession"** %37, align 8
  %47 = getelementptr inbounds %"class.blink::XRSession", %"class.blink::XRSession"* %46, i64 0, i32 0, i32 0
  %48 = bitcast i8* %40 to %"class.blink::Event"*
  %49 = tail call i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"* %47, %"class.blink::Event"* dereferenceable(104) %48) #11
  %50 = getelementptr inbounds i8, i8* %40, i64 24
  %51 = bitcast i8* %50 to i16*
  %52 = load i16, i16* %51, align 8
  %53 = and i16 %52, 32
  %54 = icmp eq i16 %53, 0
  br i1 %54, label %57, label %55

55:                                               ; preds = %35
  %56 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 2, i32 4
  store i8 1, i8* %56, align 1
  br label %57

57:                                               ; preds = %35, %55
  %58 = getelementptr inbounds i8, i8* %40, i64 104
  %59 = bitcast i8* %58 to %"class.blink::XRFrame"**
  %60 = load %"class.blink::XRFrame"*, %"class.blink::XRFrame"** %59, align 8
  tail call void @_ZN5blink7XRFrame10DeactivateEv(%"class.blink::XRFrame"* %60) #11
  br label %61

61:                                               ; preds = %31, %57
  %62 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 6, i32 0, i32 0
  %63 = load %"class.blink::Gamepad"*, %"class.blink::Gamepad"** %62, align 8
  %64 = icmp eq %"class.blink::Gamepad"* %63, null
  br i1 %64, label %67, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::Gamepad", %"class.blink::Gamepad"* %63, i64 0, i32 4
  store i8 0, i8* %66, align 4
  br label %67

67:                                               ; preds = %61, %65
  ret void
}

declare %"class.blink::XRFrame"* @_ZN5blink9XRSession23CreatePresentationFrameEb(%"class.blink::XRSession"*, i1 zeroext) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink13XRInputSource5TraceEPNS_7VisitorE(%"class.blink::XRInputSource"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 3
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_9XRSessionEE5TraceEPNS_7VisitorEPKv) #11
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 4
  %15 = bitcast %"class.blink::Member.682"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16XRTargetRaySpaceEE5TraceEPNS_7VisitorEPKv) #11
  br label %24

24:                                               ; preds = %13, %18
  %25 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 5
  %26 = bitcast %"class.blink::Member.686"* %25 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %24
  %30 = inttoptr i64 %27 to i8*
  %31 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, i64 5
  %34 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, align 8
  tail call void %34(%"class.blink::Visitor"* %1, i8* nonnull %30, i8* nonnull %30, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11XRGripSpaceEE5TraceEPNS_7VisitorEPKv) #11
  br label %35

35:                                               ; preds = %24, %29
  %36 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 6
  %37 = bitcast %"class.blink::Member.688"* %36 to i64*
  %38 = load atomic i64, i64* %37 monotonic, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %46, label %40

40:                                               ; preds = %35
  %41 = inttoptr i64 %38 to i8*
  %42 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %43 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %43, i64 5
  %45 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %44, align 8
  tail call void %45(%"class.blink::Visitor"* %1, i8* nonnull %41, i8* nonnull %41, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7GamepadEE5TraceEPNS_7VisitorEPKv) #11
  br label %46

46:                                               ; preds = %35, %40
  %47 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 7
  %48 = bitcast %"class.blink::Member.705"* %47 to i64*
  %49 = load atomic i64, i64* %48 monotonic, align 8
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %57, label %51

51:                                               ; preds = %46
  %52 = inttoptr i64 %49 to i8*
  %53 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %54 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %54, i64 5
  %56 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %55, align 8
  tail call void %56(%"class.blink::Visitor"* %1, i8* nonnull %52, i8* nonnull %52, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_6XRHandEE5TraceEPNS_7VisitorEPKv) #11
  br label %57

57:                                               ; preds = %46, %51
  %58 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %58, %"class.blink::Visitor"* %1) #11
  ret void
}

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_NK5blink13XRInputSource5TraceEPNS_7VisitorE(%"class.blink::XRInputSource"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 -1, i32 8
  %4 = bitcast %"class.std::__1::unique_ptr.670"* %3 to %"class.blink::XRInputSource"*
  tail call void @_ZNK5blink13XRInputSource5TraceEPNS_7VisitorE(%"class.blink::XRInputSource"* %4, %"class.blink::Visitor"* %1)
  ret void
}

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13XRInputSourceD2Ev(%"class.blink::XRInputSource"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [6 x i8*] }, { [12 x i8*], [6 x i8*] }* @_ZTVN5blink13XRInputSourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [6 x i8*] }, { [12 x i8*], [6 x i8*] }* @_ZTVN5blink13XRInputSourceE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %5 = load %"class.blink::TransformationMatrix"*, %"class.blink::TransformationMatrix"** %4, align 8
  store %"class.blink::TransformationMatrix"* null, %"class.blink::TransformationMatrix"** %4, align 8
  %6 = icmp eq %"class.blink::TransformationMatrix"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.blink::TransformationMatrix"* %5 to i8*
  tail call void @free(i8* %8) #11
  br label %9

9:                                                ; preds = %1, %7
  %10 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %11 = load %"class.blink::TransformationMatrix"*, %"class.blink::TransformationMatrix"** %10, align 8
  store %"class.blink::TransformationMatrix"* null, %"class.blink::TransformationMatrix"** %10, align 8
  %12 = icmp eq %"class.blink::TransformationMatrix"* %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %9
  %14 = bitcast %"class.blink::TransformationMatrix"* %11 to i8*
  tail call void @free(i8* %14) #11
  br label %15

15:                                               ; preds = %9, %13
  %16 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 2, i32 12
  %17 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.WTF::String"*, %"class.WTF::String"** %17, align 8
  %19 = icmp eq %"class.WTF::String"* %18, null
  br i1 %19, label %54, label %20, !prof !3

20:                                               ; preds = %15
  %21 = bitcast %"class.WTF::String"* %18 to i8*
  %22 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 0, i32 2, i32 12, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %52, label %25, !prof !2

25:                                               ; preds = %20
  %26 = zext i32 %23 to i64
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 %26
  br label %28

28:                                               ; preds = %46, %25
  %29 = phi %"class.WTF::String"* [ %47, %46 ], [ %18, %25 ]
  %30 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %29, i64 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #11
  br label %46

46:                                               ; preds = %45, %42, %28
  %47 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %29, i64 1
  %48 = icmp eq %"class.WTF::String"* %47, %27
  br i1 %48, label %49, label %28

49:                                               ; preds = %46
  store i32 0, i32* %22, align 4
  %50 = bitcast %"class.WTF::Vector"* %16 to i8**
  %51 = load i8*, i8** %50, align 8
  br label %52

52:                                               ; preds = %49, %20
  %53 = phi i8* [ %51, %49 ], [ %21, %20 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %53) #11
  store %"class.WTF::String"* null, %"class.WTF::String"** %17, align 8
  br label %54

54:                                               ; preds = %15, %52
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13XRInputSourceD0Ev(%"class.blink::XRInputSource"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN5blink13XRInputSourceD2Ev(%"class.blink::XRInputSource"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable17HasEventListenersEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink13XRInputSource18GetWrapperTypeInfoEv(%"class.blink::XRInputSource"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink13XRInputSource18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #4

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::GamepadHapticActuator"* @_ZN5blink13XRInputSource30GetVibrationActuatorForGamepadERKNS_7GamepadE(%"class.blink::XRInputSource"*, %"class.blink::Gamepad"* dereferenceable(120)) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::GamepadHapticActuator"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::GamepadHapticActuator"* @_ZThn16_N5blink13XRInputSource30GetVibrationActuatorForGamepadERKNS_7GamepadE(%"class.blink::XRInputSource"*, %"class.blink::Gamepad"* dereferenceable(120)) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::GamepadHapticActuator"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn16_N5blink13XRInputSourceD1Ev(%"class.blink::XRInputSource"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 -1, i32 8
  %3 = bitcast %"class.std::__1::unique_ptr.670"* %2 to %"class.blink::XRInputSource"*
  tail call void @_ZN5blink13XRInputSourceD2Ev(%"class.blink::XRInputSource"* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn16_N5blink13XRInputSourceD0Ev(%"class.blink::XRInputSource"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::XRInputSource", %"class.blink::XRInputSource"* %0, i64 -1, i32 8
  %3 = bitcast %"class.std::__1::unique_ptr.670"* %2 to %"class.blink::XRInputSource"*
  tail call void @_ZN5blink13XRInputSourceD2Ev(%"class.blink::XRInputSource"* %3) #11
  ret void
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #4

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #4

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #4

declare void @_ZN6device5mojom5blink25XRNativeOriginInformation19set_input_source_idEj(%"class.device::mojom::blink::XRNativeOriginInformation"*, i32) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare void @_ZN6device5mojom5blink25XRNativeOriginInformationC1Ev(%"class.device::mojom::blink::XRNativeOriginInformation"*) unnamed_addr #4

declare void @_ZN5blink18XRInputSourceEventC1ERKN3WTF12AtomicStringEPNS_7XRFrameEPNS_13XRInputSourceE(%"class.blink::XRInputSourceEvent"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::XRFrame"*, %"class.blink::XRInputSource"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #11
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #11
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #11
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #11
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #11
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i8* %40, i8* %41) #11
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #11
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.7, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #11
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #11
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !2

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #11
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #4

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #4

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #4

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #4

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #4

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #11
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.9, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #4

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #9

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %8 = icmp ugt %"class.WTF::String"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::String"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::String"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %26) #11
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #11
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.WTF::String"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.WTF::String"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !3

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #11
  %47 = bitcast %"class.WTF::Vector"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #11
  %51 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.WTF::String"* %1 to i64
  %56 = ptrtoint %"class.WTF::String"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !3

69:                                               ; preds = %54
  %70 = icmp eq %"class.WTF::String"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %71) #11
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #11
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.WTF::String"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.WTF::String"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !3

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #11
  %87 = bitcast %"class.WTF::Vector"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #11
  %91 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.WTF::String"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.WTF::String"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.WTF::String"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.WTF::String"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %101, i64 0, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 %103, i32 0, i32 0
  store %"class.WTF::StringImpl"* %105, %"class.WTF::StringImpl"** %106, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %107, label %125, label %108

108:                                              ; preds = %99
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %125

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = zext i32 %115 to i33
  %117 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %116, i33 1) #11
  %118 = extractvalue { i33, i1 } %117, 1
  %119 = extractvalue { i33, i1 } %117, 0
  %120 = icmp slt i33 %119, 0
  %121 = or i1 %118, %120
  br i1 %121, label %122, label %123, !prof !2

122:                                              ; preds = %113
  tail call void @llvm.trap() #11
  unreachable

123:                                              ; preds = %113
  %124 = trunc i33 %119 to i32
  store i32 %124, i32* %114, align 4
  br label %125

125:                                              ; preds = %99, %108, %123
  %126 = load i32, i32* %3, align 4
  %127 = add i32 %126, 1
  store i32 %127, i32* %3, align 4
  ret void
}

declare void @_ZN5blink6XRHandC1EPKN6device5mojom5blink18XRHandTrackingDataEPNS_13XRInputSourceE(%"class.blink::XRHand"*, %"class.device::mojom::blink::XRHandTrackingData"*, %"class.blink::XRInputSource"*) unnamed_addr #4

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #4

declare void @_ZN5blink16XRTargetRaySpaceC1EPNS_9XRSessionEPNS_13XRInputSourceE(%"class.blink::XRTargetRaySpace"*, %"class.blink::XRSession"*, %"class.blink::XRInputSource"*) unnamed_addr #4

declare void @_ZN5blink11XRGripSpaceC1EPNS_9XRSessionEPNS_13XRInputSourceE(%"class.blink::XRGripSpace"*, %"class.blink::XRSession"*, %"class.blink::XRInputSource"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.10, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::String"*, %"class.WTF::String"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 %25
  ret %"class.WTF::String"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #4

declare void @_ZN5blink7GamepadC1EPNS0_6ClientEiN4base9TimeTicksES4_(%"class.blink::Gamepad"*, %"class.blink::Gamepad::Client"*, i32, i64, i64) unnamed_addr #4

declare void @_ZN5blink14XRSessionEventC1ERKN3WTF12AtomicStringEPNS_9XRSessionENS_5Event7BubblesENS7_10CancelableENS7_12ComposedModeE(%"class.blink::XRSessionEvent"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::XRSession"*, i32, i32, i32) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_9XRSessionEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::XRSession"*
  tail call void @_ZNK5blink9XRSession5TraceEPNS_7VisitorE(%"class.blink::XRSession"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

declare void @_ZNK5blink9XRSession5TraceEPNS_7VisitorE(%"class.blink::XRSession"*, %"class.blink::Visitor"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16XRTargetRaySpaceEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::XRTargetRaySpace"*
  %4 = bitcast i8* %1 to void (%"class.blink::XRTargetRaySpace"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::XRTargetRaySpace"*, %"class.blink::Visitor"*)**, void (%"class.blink::XRTargetRaySpace"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::XRTargetRaySpace"*, %"class.blink::Visitor"*)*, void (%"class.blink::XRTargetRaySpace"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::XRTargetRaySpace"*, %"class.blink::Visitor"*)*, void (%"class.blink::XRTargetRaySpace"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::XRTargetRaySpace"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11XRGripSpaceEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::XRGripSpace"*
  %4 = bitcast i8* %1 to void (%"class.blink::XRGripSpace"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::XRGripSpace"*, %"class.blink::Visitor"*)**, void (%"class.blink::XRGripSpace"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::XRGripSpace"*, %"class.blink::Visitor"*)*, void (%"class.blink::XRGripSpace"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::XRGripSpace"*, %"class.blink::Visitor"*)*, void (%"class.blink::XRGripSpace"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::XRGripSpace"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_7GamepadEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Gamepad"*
  tail call void @_ZNK5blink7Gamepad5TraceEPNS_7VisitorE(%"class.blink::Gamepad"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

declare void @_ZNK5blink7Gamepad5TraceEPNS_7VisitorE(%"class.blink::Gamepad"*, %"class.blink::Visitor"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_6XRHandEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::XRHand"*
  %4 = bitcast i8* %1 to void (%"class.blink::XRHand"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::XRHand"*, %"class.blink::Visitor"*)**, void (%"class.blink::XRHand"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::XRHand"*, %"class.blink::Visitor"*)*, void (%"class.blink::XRHand"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::XRHand"*, %"class.blink::Visitor"*)*, void (%"class.blink::XRHand"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::XRHand"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN6device5mojom5blink25XRNativeOriginInformation16NewInputSourceIdEj: argument 0"}
!7 = distinct !{!7, !"_ZN6device5mojom5blink25XRNativeOriginInformation16NewInputSourceIdEj"}
