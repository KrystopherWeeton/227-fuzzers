; ModuleID = '../../cc/metrics/event_metrics.cc'
source_filename = "../../cc/metrics/event_metrics.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.anon.16 = type { i32, i32, i8* }
%union.anon.5 = type { i32 }
%"struct.absl::optional_internal::empty_struct" = type { i8 }
%"class.cc::EventMetrics" = type { i32, %"class.absl::optional", %"class.base::TickClock"*, [6 x %"class.base::TimeTicks"] }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TickClock" = type { i32 (...)** }
%"struct.cc::EventMetricsSet" = type { %"class.std::__1::vector", %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.cc::EventMetrics"* }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.std::__1::unique_ptr"* }
%"class.base::DefaultTickClock" = type { %"class.base::TickClock" }
%struct.anon = type { i32, i32, i8*, %"class.absl::optional.1" }
%"class.absl::optional.1" = type { %"class.absl::optional_internal::optional_data.2" }
%"class.absl::optional_internal::optional_data.2" = type { %"class.absl::optional_internal::optional_data_base.3" }
%"class.absl::optional_internal::optional_data_base.3" = type { %"class.absl::optional_internal::optional_data_dtor_base.4" }
%"class.absl::optional_internal::optional_data_dtor_base.4" = type { i8, %union.anon.5 }

@_ZN2cc12_GLOBAL__N_112kScrollTypesE = internal unnamed_addr constant [4 x %struct.anon.16] [%struct.anon.16 { i32 0, i32 2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.26, i32 0, i32 0) }, %struct.anon.16 { i32 1, i32 3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.27, i32 0, i32 0) }, %struct.anon.16 { i32 2, i32 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.28, i32 0, i32 0) }, %struct.anon.16 { i32 3, i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i32 0, i32 0) }], align 16
@.str = private unnamed_addr constant [13 x i8] c"MousePressed\00", align 1
@.str.1 = private unnamed_addr constant [14 x i8] c"MouseReleased\00", align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"MouseWheel\00", align 1
@.str.3 = private unnamed_addr constant [11 x i8] c"KeyPressed\00", align 1
@.str.4 = private unnamed_addr constant [12 x i8] c"KeyReleased\00", align 1
@.str.5 = private unnamed_addr constant [13 x i8] c"TouchPressed\00", align 1
@.str.6 = private unnamed_addr constant [14 x i8] c"TouchReleased\00", align 1
@.str.7 = private unnamed_addr constant [11 x i8] c"TouchMoved\00", align 1
@.str.8 = private unnamed_addr constant [19 x i8] c"GestureScrollBegin\00", align 1
@.str.9 = private unnamed_addr constant [20 x i8] c"GestureScrollUpdate\00", align 1
@.str.10 = private unnamed_addr constant [17 x i8] c"GestureScrollEnd\00", align 1
@.str.11 = private unnamed_addr constant [17 x i8] c"GestureDoubleTap\00", align 1
@.str.12 = private unnamed_addr constant [17 x i8] c"GestureLongPress\00", align 1
@.str.13 = private unnamed_addr constant [15 x i8] c"GestureLongTap\00", align 1
@.str.14 = private unnamed_addr constant [17 x i8] c"GestureShowPress\00", align 1
@.str.15 = private unnamed_addr constant [11 x i8] c"GestureTap\00", align 1
@.str.16 = private unnamed_addr constant [17 x i8] c"GestureTapCancel\00", align 1
@.str.17 = private unnamed_addr constant [15 x i8] c"GestureTapDown\00", align 1
@.str.18 = private unnamed_addr constant [22 x i8] c"GestureTapUnconfirmed\00", align 1
@.str.19 = private unnamed_addr constant [20 x i8] c"GestureTwoFingerTap\00", align 1
@.str.20 = private unnamed_addr constant [25 x i8] c"FirstGestureScrollUpdate\00", align 1
@.str.21 = private unnamed_addr constant [13 x i8] c"MouseDragged\00", align 1
@.str.22 = private unnamed_addr constant [18 x i8] c"GesturePinchBegin\00", align 1
@.str.23 = private unnamed_addr constant [16 x i8] c"GesturePinchEnd\00", align 1
@.str.24 = private unnamed_addr constant [19 x i8] c"GesturePinchUpdate\00", align 1
@_ZN2cc12_GLOBAL__N_118kInterestingEventsE = internal unnamed_addr constant <{ { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, %union.anon.5 } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, %union.anon.5 } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } } }> <{ { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } } { i32 0, i32 1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } { i8 0, [3 x i8] undef, { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } undef } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } } { i32 1, i32 3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i32 0, i32 0), { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } { i8 0, [3 x i8] undef, { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } undef } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } } { i32 2, i32 9, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i32 0, i32 0), { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } { i8 0, [3 x i8] undef, { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } undef } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } } { i32 3, i32 7, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i32 0, i32 0), { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } { i8 0, [3 x i8] undef, { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } undef } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } } { i32 4, i32 8, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i32 0, i32 0), { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } { i8 0, [3 x i8] undef, { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } undef } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } } { i32 5, i32 12, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i32 0, i32 0), { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } { i8 0, [3 x i8] undef, { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } undef } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } } { i32 6, i32 11, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i32 0, i32 0), { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } { i8 0, [3 x i8] undef, { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } undef } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } } { i32 7, i32 13, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i32 0, i32 0), { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } { i8 0, [3 x i8] undef, { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } undef } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } } { i32 8, i32 16, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.8, i32 0, i32 0), { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } { i8 0, [3 x i8] undef, { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } undef } }, { i32, i32, i8*, { i8, %union.anon.5 } } { i32 9, i32 18, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9, i32 0, i32 0), { i8, %union.anon.5 } { i8 1, %union.anon.5 { i32 1 } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } } { i32 10, i32 17, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i32 0, i32 0), { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } { i8 0, [3 x i8] undef, { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } undef } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } } { i32 11, i32 23, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i32 0, i32 0), { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } { i8 0, [3 x i8] undef, { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } undef } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } } { i32 12, i32 30, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i32 0, i32 0), { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } { i8 0, [3 x i8] undef, { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } undef } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } } { i32 13, i32 31, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.13, i32 0, i32 0), { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } { i8 0, [3 x i8] undef, { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } undef } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } } { i32 14, i32 33, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14, i32 0, i32 0), { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } { i8 0, [3 x i8] undef, { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } undef } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } } { i32 15, i32 19, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i32 0, i32 0), { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } { i8 0, [3 x i8] undef, { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } undef } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } } { i32 16, i32 21, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.16, i32 0, i32 0), { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } { i8 0, [3 x i8] undef, { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } undef } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } } { i32 17, i32 20, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17, i32 0, i32 0), { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } { i8 0, [3 x i8] undef, { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } undef } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } } { i32 18, i32 22, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.18, i32 0, i32 0), { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } { i8 0, [3 x i8] undef, { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } undef } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } } { i32 19, i32 26, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.19, i32 0, i32 0), { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } { i8 0, [3 x i8] undef, { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } undef } }, { i32, i32, i8*, { i8, %union.anon.5 } } { i32 20, i32 18, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.20, i32 0, i32 0), { i8, %union.anon.5 } { i8 1, %union.anon.5 zeroinitializer } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } } { i32 21, i32 2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.21, i32 0, i32 0), { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } { i8 0, [3 x i8] undef, { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } undef } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } } { i32 22, i32 27, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.22, i32 0, i32 0), { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } { i8 0, [3 x i8] undef, { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } undef } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } } { i32 23, i32 28, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.23, i32 0, i32 0), { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } { i8 0, [3 x i8] undef, { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } undef } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } } { i32 24, i32 29, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.24, i32 0, i32 0), { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } { i8 0, [3 x i8] undef, { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } undef } } }>, align 16
@.str.26 = private unnamed_addr constant [11 x i8] c"Autoscroll\00", align 1
@.str.27 = private unnamed_addr constant [10 x i8] c"Scrollbar\00", align 1
@.str.28 = private unnamed_addr constant [12 x i8] c"Touchscreen\00", align 1
@.str.29 = private unnamed_addr constant [6 x i8] c"Wheel\00", align 1
@switch.table._ZN2cc12EventMetrics18CreateFromExistingEN2ui9EventTypeEN4absl8optionalINS0_16ScrollUpdateTypeEEENS4_INS1_15ScrollInputTypeEEENS0_13DispatchStageEPKS0_ = private unnamed_addr constant [4 x i64] [i64 8589934592, i64 12884901888, i64 0, i64 4294967296], align 8

@_ZN2cc12EventMetricsC1ENS0_9EventTypeEN4absl8optionalINS0_10ScrollTypeEEEN4base9TimeTicksEPKNS6_9TickClockE = hidden unnamed_addr alias void (%"class.cc::EventMetrics"*, i32, i64, i64, %"class.base::TickClock"*), void (%"class.cc::EventMetrics"*, i32, i64, i64, %"class.base::TickClock"*)* @_ZN2cc12EventMetricsC2ENS0_9EventTypeEN4absl8optionalINS0_10ScrollTypeEEEN4base9TimeTicksEPKNS6_9TickClockE
@_ZN2cc12EventMetricsD1Ev = hidden unnamed_addr alias void (%"class.cc::EventMetrics"*), void (%"class.cc::EventMetrics"*)* @_ZN2cc12EventMetricsD2Ev
@_ZN2cc15EventMetricsSetC1Ev = hidden unnamed_addr alias void (%"struct.cc::EventMetricsSet"*), void (%"struct.cc::EventMetricsSet"*)* @_ZN2cc15EventMetricsSetC2Ev
@_ZN2cc15EventMetricsSetD1Ev = hidden unnamed_addr alias void (%"struct.cc::EventMetricsSet"*), void (%"struct.cc::EventMetricsSet"*)* @_ZN2cc15EventMetricsSetD2Ev
@_ZN2cc15EventMetricsSetC1ENSt3__16vectorINS1_10unique_ptrINS_12EventMetricsENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEESA_ = hidden unnamed_addr alias void (%"struct.cc::EventMetricsSet"*, %"class.std::__1::vector"*, %"class.std::__1::vector"*), void (%"struct.cc::EventMetricsSet"*, %"class.std::__1::vector"*, %"class.std::__1::vector"*)* @_ZN2cc15EventMetricsSetC2ENSt3__16vectorINS1_10unique_ptrINS_12EventMetricsENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEESA_
@_ZN2cc15EventMetricsSetC1EOS0_ = hidden unnamed_addr alias void (%"struct.cc::EventMetricsSet"*, %"struct.cc::EventMetricsSet"*), void (%"struct.cc::EventMetricsSet"*, %"struct.cc::EventMetricsSet"*)* @_ZN2cc15EventMetricsSetC2EOS0_

; Function Attrs: nounwind ssp uwtable
define hidden %"class.cc::EventMetrics"* @_ZN2cc12EventMetrics6CreateEN2ui9EventTypeEN4absl8optionalINS0_16ScrollUpdateTypeEEENS4_INS1_15ScrollInputTypeEEEN4base9TimeTicksE(i32, i64, i64, i64) local_unnamed_addr #0 align 2 {
  %5 = tail call %"class.base::DefaultTickClock"* @_ZN4base16DefaultTickClock11GetInstanceEv() #10
  %6 = getelementptr inbounds %"class.base::DefaultTickClock", %"class.base::DefaultTickClock"* %5, i64 0, i32 0
  %7 = trunc i64 %2 to i8
  %8 = lshr i64 %2, 32
  %9 = trunc i64 %8 to i32
  %10 = trunc i64 %1 to i8
  %11 = lshr i64 %1, 32
  %12 = trunc i64 %11 to i32
  %13 = icmp ne i8 %10, 0
  %14 = xor i1 %13, true
  br label %15

15:                                               ; preds = %34, %4
  %16 = phi i64 [ 0, %4 ], [ %35, %34 ]
  %17 = getelementptr inbounds [25 x %struct.anon], [25 x %struct.anon]* bitcast (<{ { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, %union.anon.5 } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, %union.anon.5 } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } } }>* @_ZN2cc12_GLOBAL__N_118kInterestingEventsE to [25 x %struct.anon]*), i64 0, i64 %16, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, %0
  br i1 %19, label %20, label %34

20:                                               ; preds = %15
  %21 = getelementptr inbounds [25 x %struct.anon], [25 x %struct.anon]* bitcast (<{ { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, %union.anon.5 } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, %union.anon.5 } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } } }>* @_ZN2cc12_GLOBAL__N_118kInterestingEventsE to [25 x %struct.anon]*), i64 0, i64 %16, i32 3, i32 0, i32 0, i32 0, i32 0
  %22 = load i8, i8* %21, align 8, !range !2
  %23 = icmp ne i8 %22, 0
  %24 = xor i1 %13, %23
  %25 = or i1 %24, %14
  br i1 %25, label %33, label %26

26:                                               ; preds = %20
  %27 = icmp eq i8 %22, 0
  br i1 %27, label %28, label %29, !prof !3

28:                                               ; preds = %26
  tail call void @llvm.trap() #10
  unreachable

29:                                               ; preds = %26
  %30 = getelementptr inbounds [25 x %struct.anon], [25 x %struct.anon]* bitcast (<{ { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, %union.anon.5 } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, %union.anon.5 } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } } }>* @_ZN2cc12_GLOBAL__N_118kInterestingEventsE to [25 x %struct.anon]*), i64 0, i64 %16, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, %12
  br i1 %32, label %37, label %34

33:                                               ; preds = %20
  br i1 %24, label %34, label %37

34:                                               ; preds = %33, %29, %15
  %35 = add nuw nsw i64 %16, 1
  %36 = icmp eq i64 %35, 25
  br i1 %36, label %67, label %15

37:                                               ; preds = %33, %29
  %38 = trunc i64 %16 to i32
  %39 = tail call i8* @_Znwm(i64 72) #11
  %40 = bitcast i8* %39 to %"class.cc::EventMetrics"*
  %41 = icmp ne i8 %7, 0
  %42 = icmp ult i32 %9, 4
  %43 = and i1 %41, %42
  br i1 %43, label %44, label %48

44:                                               ; preds = %37
  %45 = ashr i64 %2, 32
  %46 = getelementptr inbounds [4 x i64], [4 x i64]* @switch.table._ZN2cc12EventMetrics18CreateFromExistingEN2ui9EventTypeEN4absl8optionalINS0_16ScrollUpdateTypeEEENS4_INS1_15ScrollInputTypeEEENS0_13DispatchStageEPKS0_, i64 0, i64 %45
  %47 = load i64, i64* %46, align 8
  br label %48

48:                                               ; preds = %37, %44
  %49 = phi i64 [ 0, %37 ], [ 1, %44 ]
  %50 = phi i64 [ 0, %37 ], [ %47, %44 ]
  %51 = or i64 %50, %49
  %52 = bitcast i8* %39 to i32*
  store i32 %38, i32* %52, align 8
  %53 = getelementptr inbounds i8, i8* %39, i64 4
  %54 = bitcast i8* %53 to i64*
  store i64 %51, i64* %54, align 4
  %55 = getelementptr inbounds i8, i8* %39, i64 16
  %56 = bitcast i8* %55 to %"class.base::TickClock"**
  store %"class.base::TickClock"* %6, %"class.base::TickClock"** %56, align 8
  %57 = getelementptr i8, i8* %39, i64 32
  %58 = getelementptr inbounds i8, i8* %39, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 32, i1 false) #10
  %59 = getelementptr inbounds i8, i8* %39, i64 24
  %60 = bitcast i8* %59 to i64*
  store i64 %3, i64* %60, align 8
  %61 = bitcast %"class.base::DefaultTickClock"* %5 to i64 (%"class.base::TickClock"*)***
  %62 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %61, align 8
  %63 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %62, i64 2
  %64 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %63, align 8
  %65 = tail call i64 %64(%"class.base::TickClock"* %6) #10
  %66 = bitcast i8* %57 to i64*
  store i64 %65, i64* %66, align 8
  br label %67

67:                                               ; preds = %34, %48
  %68 = phi %"class.cc::EventMetrics"* [ %40, %48 ], [ null, %34 ]
  ret %"class.cc::EventMetrics"* %68
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.cc::EventMetrics"* @_ZN2cc12EventMetrics14CreateInternalEN2ui9EventTypeEN4absl8optionalINS0_16ScrollUpdateTypeEEENS4_INS1_15ScrollInputTypeEEEN4base9TimeTicksEPKNS9_9TickClockE(i32, i64, i64, i64, %"class.base::TickClock"*) local_unnamed_addr #0 align 2 {
  %6 = trunc i64 %2 to i8
  %7 = lshr i64 %2, 32
  %8 = trunc i64 %7 to i32
  %9 = trunc i64 %1 to i8
  %10 = lshr i64 %1, 32
  %11 = trunc i64 %10 to i32
  %12 = icmp ne i8 %9, 0
  %13 = xor i1 %12, true
  br label %14

14:                                               ; preds = %33, %5
  %15 = phi i64 [ 0, %5 ], [ %34, %33 ]
  %16 = getelementptr inbounds [25 x %struct.anon], [25 x %struct.anon]* bitcast (<{ { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, %union.anon.5 } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, %union.anon.5 } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } } }>* @_ZN2cc12_GLOBAL__N_118kInterestingEventsE to [25 x %struct.anon]*), i64 0, i64 %15, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, %0
  br i1 %18, label %19, label %33

19:                                               ; preds = %14
  %20 = getelementptr inbounds [25 x %struct.anon], [25 x %struct.anon]* bitcast (<{ { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, %union.anon.5 } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, %union.anon.5 } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } } }>* @_ZN2cc12_GLOBAL__N_118kInterestingEventsE to [25 x %struct.anon]*), i64 0, i64 %15, i32 3, i32 0, i32 0, i32 0, i32 0
  %21 = load i8, i8* %20, align 8, !range !2
  %22 = icmp ne i8 %21, 0
  %23 = xor i1 %12, %22
  %24 = or i1 %23, %13
  br i1 %24, label %32, label %25

25:                                               ; preds = %19
  %26 = icmp eq i8 %21, 0
  br i1 %26, label %27, label %28, !prof !3

27:                                               ; preds = %25
  tail call void @llvm.trap() #10
  unreachable

28:                                               ; preds = %25
  %29 = getelementptr inbounds [25 x %struct.anon], [25 x %struct.anon]* bitcast (<{ { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, %union.anon.5 } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, %union.anon.5 } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } } }>* @_ZN2cc12_GLOBAL__N_118kInterestingEventsE to [25 x %struct.anon]*), i64 0, i64 %15, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, %11
  br i1 %31, label %36, label %33

32:                                               ; preds = %19
  br i1 %23, label %33, label %36

33:                                               ; preds = %32, %28, %14
  %34 = add nuw nsw i64 %15, 1
  %35 = icmp eq i64 %34, 25
  br i1 %35, label %59, label %14

36:                                               ; preds = %28, %32
  %37 = trunc i64 %15 to i32
  %38 = tail call i8* @_Znwm(i64 72) #11
  %39 = bitcast i8* %38 to %"class.cc::EventMetrics"*
  %40 = icmp ne i8 %6, 0
  %41 = icmp ult i32 %8, 4
  %42 = and i1 %40, %41
  br i1 %42, label %43, label %47

43:                                               ; preds = %36
  %44 = ashr i64 %2, 32
  %45 = getelementptr inbounds [4 x i64], [4 x i64]* @switch.table._ZN2cc12EventMetrics18CreateFromExistingEN2ui9EventTypeEN4absl8optionalINS0_16ScrollUpdateTypeEEENS4_INS1_15ScrollInputTypeEEENS0_13DispatchStageEPKS0_, i64 0, i64 %44
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %36, %43
  %48 = phi i64 [ 0, %36 ], [ 1, %43 ]
  %49 = phi i64 [ 0, %36 ], [ %46, %43 ]
  %50 = or i64 %49, %48
  %51 = bitcast i8* %38 to i32*
  store i32 %37, i32* %51, align 8
  %52 = getelementptr inbounds i8, i8* %38, i64 4
  %53 = bitcast i8* %52 to i64*
  store i64 %50, i64* %53, align 4
  %54 = getelementptr inbounds i8, i8* %38, i64 16
  %55 = bitcast i8* %54 to %"class.base::TickClock"**
  store %"class.base::TickClock"* %4, %"class.base::TickClock"** %55, align 8
  %56 = getelementptr i8, i8* %38, i64 32
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 40, i1 false) #10
  %57 = getelementptr inbounds i8, i8* %38, i64 24
  %58 = bitcast i8* %57 to i64*
  store i64 %3, i64* %58, align 8
  br label %59

59:                                               ; preds = %33, %47
  %60 = phi %"class.cc::EventMetrics"* [ %39, %47 ], [ null, %33 ]
  ret %"class.cc::EventMetrics"* %60
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare %"class.base::DefaultTickClock"* @_ZN4base16DefaultTickClock11GetInstanceEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc12EventMetrics25SetDispatchStageTimestampENS0_13DispatchStageE(%"class.cc::EventMetrics"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::EventMetrics", %"class.cc::EventMetrics"* %0, i64 0, i32 2
  %4 = load %"class.base::TickClock"*, %"class.base::TickClock"** %3, align 8
  %5 = bitcast %"class.base::TickClock"* %4 to i64 (%"class.base::TickClock"*)***
  %6 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %5, align 8
  %7 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %6, i64 2
  %8 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %7, align 8
  %9 = tail call i64 %8(%"class.base::TickClock"* %4) #10
  %10 = sext i32 %1 to i64
  %11 = getelementptr inbounds %"class.cc::EventMetrics", %"class.cc::EventMetrics"* %0, i64 0, i32 3, i64 %10, i32 0, i32 0
  store i64 %9, i64* %11, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.cc::EventMetrics"* @_ZN2cc12EventMetrics16CreateForTestingEN2ui9EventTypeEN4absl8optionalINS0_16ScrollUpdateTypeEEENS4_INS1_15ScrollInputTypeEEEN4base9TimeTicksEPKNS9_9TickClockE(i32, i64, i64, i64, %"class.base::TickClock"*) local_unnamed_addr #0 align 2 {
  %6 = trunc i64 %2 to i8
  %7 = lshr i64 %2, 32
  %8 = trunc i64 %7 to i32
  %9 = trunc i64 %1 to i8
  %10 = lshr i64 %1, 32
  %11 = trunc i64 %10 to i32
  %12 = icmp ne i8 %9, 0
  %13 = xor i1 %12, true
  br label %14

14:                                               ; preds = %33, %5
  %15 = phi i64 [ 0, %5 ], [ %34, %33 ]
  %16 = getelementptr inbounds [25 x %struct.anon], [25 x %struct.anon]* bitcast (<{ { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, %union.anon.5 } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, %union.anon.5 } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } } }>* @_ZN2cc12_GLOBAL__N_118kInterestingEventsE to [25 x %struct.anon]*), i64 0, i64 %15, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, %0
  br i1 %18, label %19, label %33

19:                                               ; preds = %14
  %20 = getelementptr inbounds [25 x %struct.anon], [25 x %struct.anon]* bitcast (<{ { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, %union.anon.5 } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, %union.anon.5 } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } } }>* @_ZN2cc12_GLOBAL__N_118kInterestingEventsE to [25 x %struct.anon]*), i64 0, i64 %15, i32 3, i32 0, i32 0, i32 0, i32 0
  %21 = load i8, i8* %20, align 8, !range !2
  %22 = icmp ne i8 %21, 0
  %23 = xor i1 %12, %22
  %24 = or i1 %23, %13
  br i1 %24, label %32, label %25

25:                                               ; preds = %19
  %26 = icmp eq i8 %21, 0
  br i1 %26, label %27, label %28, !prof !3

27:                                               ; preds = %25
  tail call void @llvm.trap() #10
  unreachable

28:                                               ; preds = %25
  %29 = getelementptr inbounds [25 x %struct.anon], [25 x %struct.anon]* bitcast (<{ { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, %union.anon.5 } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, %union.anon.5 } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } } }>* @_ZN2cc12_GLOBAL__N_118kInterestingEventsE to [25 x %struct.anon]*), i64 0, i64 %15, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, %11
  br i1 %31, label %36, label %33

32:                                               ; preds = %19
  br i1 %23, label %33, label %36

33:                                               ; preds = %32, %28, %14
  %34 = add nuw nsw i64 %15, 1
  %35 = icmp eq i64 %34, 25
  br i1 %35, label %66, label %14

36:                                               ; preds = %32, %28
  %37 = trunc i64 %15 to i32
  %38 = tail call i8* @_Znwm(i64 72) #11
  %39 = bitcast i8* %38 to %"class.cc::EventMetrics"*
  %40 = icmp ne i8 %6, 0
  %41 = icmp ult i32 %8, 4
  %42 = and i1 %40, %41
  br i1 %42, label %43, label %47

43:                                               ; preds = %36
  %44 = ashr i64 %2, 32
  %45 = getelementptr inbounds [4 x i64], [4 x i64]* @switch.table._ZN2cc12EventMetrics18CreateFromExistingEN2ui9EventTypeEN4absl8optionalINS0_16ScrollUpdateTypeEEENS4_INS1_15ScrollInputTypeEEENS0_13DispatchStageEPKS0_, i64 0, i64 %44
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %36, %43
  %48 = phi i64 [ 0, %36 ], [ 1, %43 ]
  %49 = phi i64 [ 0, %36 ], [ %46, %43 ]
  %50 = or i64 %49, %48
  %51 = bitcast i8* %38 to i32*
  store i32 %37, i32* %51, align 8
  %52 = getelementptr inbounds i8, i8* %38, i64 4
  %53 = bitcast i8* %52 to i64*
  store i64 %50, i64* %53, align 4
  %54 = getelementptr inbounds i8, i8* %38, i64 16
  %55 = bitcast i8* %54 to %"class.base::TickClock"**
  store %"class.base::TickClock"* %4, %"class.base::TickClock"** %55, align 8
  %56 = getelementptr i8, i8* %38, i64 32
  %57 = getelementptr inbounds i8, i8* %38, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 32, i1 false) #10
  %58 = getelementptr inbounds i8, i8* %38, i64 24
  %59 = bitcast i8* %58 to i64*
  store i64 %3, i64* %59, align 8
  %60 = bitcast %"class.base::TickClock"* %4 to i64 (%"class.base::TickClock"*)***
  %61 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %60, align 8
  %62 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %61, i64 2
  %63 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %62, align 8
  %64 = tail call i64 %63(%"class.base::TickClock"* %4) #10
  %65 = bitcast i8* %56 to i64*
  store i64 %64, i64* %65, align 8
  br label %66

66:                                               ; preds = %33, %47
  %67 = phi %"class.cc::EventMetrics"* [ %39, %47 ], [ null, %33 ]
  ret %"class.cc::EventMetrics"* %67
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.cc::EventMetrics"* @_ZN2cc12EventMetrics18CreateFromExistingEN2ui9EventTypeEN4absl8optionalINS0_16ScrollUpdateTypeEEENS4_INS1_15ScrollInputTypeEEENS0_13DispatchStageEPKS0_(i32, i64, i64, i32, %"class.cc::EventMetrics"* readonly) local_unnamed_addr #0 align 2 {
  %6 = icmp ne %"class.cc::EventMetrics"* %4, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %5
  %8 = getelementptr inbounds %"class.cc::EventMetrics", %"class.cc::EventMetrics"* %4, i64 0, i32 2
  %9 = load %"class.base::TickClock"*, %"class.base::TickClock"** %8, align 8
  br label %13

10:                                               ; preds = %5
  %11 = tail call %"class.base::DefaultTickClock"* @_ZN4base16DefaultTickClock11GetInstanceEv() #10
  %12 = getelementptr inbounds %"class.base::DefaultTickClock", %"class.base::DefaultTickClock"* %11, i64 0, i32 0
  br label %13

13:                                               ; preds = %10, %7
  %14 = phi %"class.base::TickClock"* [ %9, %7 ], [ %12, %10 ]
  %15 = trunc i64 %2 to i8
  %16 = lshr i64 %2, 32
  %17 = trunc i64 %16 to i32
  %18 = trunc i64 %1 to i8
  %19 = lshr i64 %1, 32
  %20 = trunc i64 %19 to i32
  %21 = icmp ne i8 %18, 0
  %22 = xor i1 %21, true
  br label %23

23:                                               ; preds = %42, %13
  %24 = phi i64 [ 0, %13 ], [ %43, %42 ]
  %25 = getelementptr inbounds [25 x %struct.anon], [25 x %struct.anon]* bitcast (<{ { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, %union.anon.5 } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, %union.anon.5 } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } } }>* @_ZN2cc12_GLOBAL__N_118kInterestingEventsE to [25 x %struct.anon]*), i64 0, i64 %24, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, %0
  br i1 %27, label %28, label %42

28:                                               ; preds = %23
  %29 = getelementptr inbounds [25 x %struct.anon], [25 x %struct.anon]* bitcast (<{ { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, %union.anon.5 } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, %union.anon.5 } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } } }>* @_ZN2cc12_GLOBAL__N_118kInterestingEventsE to [25 x %struct.anon]*), i64 0, i64 %24, i32 3, i32 0, i32 0, i32 0, i32 0
  %30 = load i8, i8* %29, align 8, !range !2
  %31 = icmp ne i8 %30, 0
  %32 = xor i1 %21, %31
  %33 = or i1 %32, %22
  br i1 %33, label %41, label %34

34:                                               ; preds = %28
  %35 = icmp eq i8 %30, 0
  br i1 %35, label %36, label %37, !prof !3

36:                                               ; preds = %34
  tail call void @llvm.trap() #10
  unreachable

37:                                               ; preds = %34
  %38 = getelementptr inbounds [25 x %struct.anon], [25 x %struct.anon]* bitcast (<{ { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, %union.anon.5 } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, %union.anon.5 } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } } }>* @_ZN2cc12_GLOBAL__N_118kInterestingEventsE to [25 x %struct.anon]*), i64 0, i64 %24, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, %20
  br i1 %40, label %45, label %42

41:                                               ; preds = %28
  br i1 %32, label %42, label %45

42:                                               ; preds = %41, %37, %23
  %43 = add nuw nsw i64 %24, 1
  %44 = icmp eq i64 %43, 25
  br i1 %44, label %78, label %23

45:                                               ; preds = %41, %37
  %46 = trunc i64 %24 to i32
  %47 = tail call i8* @_Znwm(i64 72) #11
  %48 = bitcast i8* %47 to %"class.cc::EventMetrics"*
  %49 = icmp ne i8 %15, 0
  %50 = icmp ult i32 %17, 4
  %51 = and i1 %49, %50
  br i1 %51, label %52, label %56

52:                                               ; preds = %45
  %53 = ashr i64 %2, 32
  %54 = getelementptr inbounds [4 x i64], [4 x i64]* @switch.table._ZN2cc12EventMetrics18CreateFromExistingEN2ui9EventTypeEN4absl8optionalINS0_16ScrollUpdateTypeEEENS4_INS1_15ScrollInputTypeEEENS0_13DispatchStageEPKS0_, i64 0, i64 %53
  %55 = load i64, i64* %54, align 8
  br label %56

56:                                               ; preds = %45, %52
  %57 = phi i64 [ 0, %45 ], [ 1, %52 ]
  %58 = phi i64 [ 0, %45 ], [ %55, %52 ]
  %59 = or i64 %58, %57
  %60 = bitcast i8* %47 to i32*
  store i32 %46, i32* %60, align 8
  %61 = getelementptr inbounds i8, i8* %47, i64 4
  %62 = bitcast i8* %61 to i64*
  store i64 %59, i64* %62, align 4
  %63 = getelementptr inbounds i8, i8* %47, i64 16
  %64 = bitcast i8* %63 to %"class.base::TickClock"**
  store %"class.base::TickClock"* %14, %"class.base::TickClock"** %64, align 8
  %65 = getelementptr inbounds i8, i8* %47, i64 24
  call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 48, i1 false)
  br i1 %6, label %66, label %75

66:                                               ; preds = %56
  %67 = sext i32 %3 to i64
  br label %68

68:                                               ; preds = %66, %68
  %69 = phi i64 [ 0, %66 ], [ %73, %68 ]
  %70 = getelementptr inbounds %"class.cc::EventMetrics", %"class.cc::EventMetrics"* %4, i64 0, i32 3, i64 %69, i32 0, i32 0
  %71 = getelementptr inbounds %"class.cc::EventMetrics", %"class.cc::EventMetrics"* %48, i64 0, i32 3, i64 %69, i32 0, i32 0
  %72 = load i64, i64* %70, align 8
  store i64 %72, i64* %71, align 8
  %73 = add i64 %69, 1
  %74 = icmp ugt i64 %73, %67
  br i1 %74, label %76, label %68

75:                                               ; preds = %56
  tail call void @_ZdlPv(i8* nonnull %47) #11
  br label %78

76:                                               ; preds = %68
  %77 = bitcast i8* %47 to %"class.cc::EventMetrics"*
  br label %78

78:                                               ; preds = %42, %76, %75
  %79 = phi %"class.cc::EventMetrics"* [ null, %75 ], [ %77, %76 ], [ null, %42 ]
  ret %"class.cc::EventMetrics"* %79
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2cc12EventMetricsC2ENS0_9EventTypeEN4absl8optionalINS0_10ScrollTypeEEEN4base9TimeTicksEPKNS6_9TickClockE(%"class.cc::EventMetrics"*, i32, i64, i64, %"class.base::TickClock"*) unnamed_addr #4 align 2 {
  %6 = getelementptr inbounds %"class.cc::EventMetrics", %"class.cc::EventMetrics"* %0, i64 0, i32 0
  store i32 %1, i32* %6, align 8
  %7 = getelementptr inbounds %"class.cc::EventMetrics", %"class.cc::EventMetrics"* %0, i64 0, i32 1
  %8 = bitcast %"class.absl::optional"* %7 to i64*
  store i64 %2, i64* %8, align 4
  %9 = getelementptr inbounds %"class.cc::EventMetrics", %"class.cc::EventMetrics"* %0, i64 0, i32 2
  store %"class.base::TickClock"* %4, %"class.base::TickClock"** %9, align 8
  %10 = getelementptr %"class.cc::EventMetrics", %"class.cc::EventMetrics"* %0, i64 0, i32 3, i64 1
  %11 = bitcast %"class.base::TimeTicks"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 40, i1 false)
  %12 = getelementptr inbounds %"class.cc::EventMetrics", %"class.cc::EventMetrics"* %0, i64 0, i32 3, i64 0, i32 0, i32 0
  store i64 %3, i64* %12, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2cc12EventMetricsD2Ev(%"class.cc::EventMetrics"* nocapture) unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @_ZNK2cc12EventMetrics11GetTypeNameEv(%"class.cc::EventMetrics"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.cc::EventMetrics", %"class.cc::EventMetrics"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = sext i32 %3 to i64
  %5 = getelementptr inbounds [25 x %struct.anon], [25 x %struct.anon]* bitcast (<{ { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, %union.anon.5 } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, %union.anon.5 } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } }, { i32, i32, i8*, { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } } }>* @_ZN2cc12_GLOBAL__N_118kInterestingEventsE to [25 x %struct.anon]*), i64 0, i64 %4, i32 2
  %6 = load i8*, i8** %5, align 8
  ret i8* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZNK2cc12EventMetrics17GetScrollTypeNameEv(%"class.cc::EventMetrics"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::EventMetrics", %"class.cc::EventMetrics"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %6, !prof !3

5:                                                ; preds = %1
  tail call void @llvm.trap() #10
  unreachable

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::EventMetrics", %"class.cc::EventMetrics"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds [4 x %struct.anon.16], [4 x %struct.anon.16]* @_ZN2cc12_GLOBAL__N_112kScrollTypesE, i64 0, i64 %9, i32 2
  %11 = load i8*, i8** %10, align 8
  ret i8* %11
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK2cc12EventMetrics25GetDispatchStageTimestampENS0_13DispatchStageE(%"class.cc::EventMetrics"* nocapture readonly, i32) local_unnamed_addr #6 align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds %"class.cc::EventMetrics", %"class.cc::EventMetrics"* %0, i64 0, i32 3, i64 %3, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  ret i64 %5
}

; Function Attrs: nounwind ssp uwtable writeonly
define hidden void @_ZN2cc12EventMetrics20ResetToDispatchStageENS0_13DispatchStageE(%"class.cc::EventMetrics"* nocapture, i32) local_unnamed_addr #7 align 2 {
  %3 = sext i32 %1 to i64
  %4 = add nsw i64 %3, 1
  %5 = icmp ult i64 %4, 6
  br i1 %5, label %6, label %12

6:                                                ; preds = %2
  %7 = bitcast %"class.cc::EventMetrics"* %0 to i8*
  %8 = shl nsw i64 %3, 3
  %9 = add nsw i64 %8, 32
  %10 = getelementptr i8, i8* %7, i64 %9
  %11 = sub nsw i64 40, %8
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 %11, i1 false)
  br label %12

12:                                               ; preds = %6, %2
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2cc12EventMetrics33ShouldReportScrollingTotalLatencyEv(%"class.cc::EventMetrics"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.cc::EventMetrics", %"class.cc::EventMetrics"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = add i32 %3, -8
  %5 = icmp ult i32 %4, 13
  br i1 %5, label %6, label %11

6:                                                ; preds = %1
  %7 = trunc i32 %4 to i13
  %8 = lshr i13 -4089, %7
  %9 = and i13 %8, 1
  %10 = icmp ne i13 %9, 0
  ret i1 %10

11:                                               ; preds = %1
  ret i1 false
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2cc12EventMetrics19HasSmoothInputEventEv(%"class.cc::EventMetrics"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.cc::EventMetrics", %"class.cc::EventMetrics"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 21
  %5 = icmp eq i32 %3, 7
  %6 = or i1 %4, %5
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.cc::EventMetrics"* @_ZNK2cc12EventMetrics5CloneEv(%"class.cc::EventMetrics"*) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 72) #11
  %3 = bitcast i8* %2 to %"class.cc::EventMetrics"*
  %4 = getelementptr inbounds %"class.cc::EventMetrics", %"class.cc::EventMetrics"* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.cc::EventMetrics", %"class.cc::EventMetrics"* %0, i64 0, i32 1
  %7 = bitcast %"class.absl::optional"* %6 to i64*
  %8 = load i64, i64* %7, align 4
  %9 = getelementptr inbounds %"class.cc::EventMetrics", %"class.cc::EventMetrics"* %0, i64 0, i32 2
  %10 = bitcast %"class.base::TickClock"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast i8* %2 to i32*
  store i32 %5, i32* %12, align 8
  %13 = getelementptr inbounds i8, i8* %2, i64 4
  %14 = bitcast i8* %13 to i64*
  store i64 %8, i64* %14, align 4
  %15 = getelementptr inbounds i8, i8* %2, i64 16
  %16 = bitcast i8* %15 to i64*
  store i64 %11, i64* %16, align 8
  %17 = getelementptr inbounds i8, i8* %2, i64 24
  %18 = getelementptr inbounds %"class.cc::EventMetrics", %"class.cc::EventMetrics"* %0, i64 0, i32 3
  %19 = bitcast [6 x %"class.base::TimeTicks"]* %18 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %19, i64 48, i1 false) #10
  ret %"class.cc::EventMetrics"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2cc12EventMetricseqERKS0_(%"class.cc::EventMetrics"* readonly, %"class.cc::EventMetrics"* nocapture readonly dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::EventMetrics", %"class.cc::EventMetrics"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.cc::EventMetrics", %"class.cc::EventMetrics"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %40

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.cc::EventMetrics", %"class.cc::EventMetrics"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %10 = load i8, i8* %9, align 4, !range !2
  %11 = icmp ne i8 %10, 0
  %12 = getelementptr inbounds %"class.cc::EventMetrics", %"class.cc::EventMetrics"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %13 = load i8, i8* %12, align 4, !range !2
  %14 = icmp ne i8 %13, 0
  %15 = xor i1 %11, %14
  %16 = xor i1 %11, true
  %17 = or i1 %15, %16
  br i1 %17, label %27, label %18

18:                                               ; preds = %8
  %19 = icmp eq i8 %13, 0
  br i1 %19, label %20, label %21, !prof !3

20:                                               ; preds = %18
  tail call void @llvm.trap() #10
  unreachable

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.cc::EventMetrics", %"class.cc::EventMetrics"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"class.cc::EventMetrics", %"class.cc::EventMetrics"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %23, %25
  br i1 %26, label %28, label %40

27:                                               ; preds = %8
  br i1 %15, label %40, label %28

28:                                               ; preds = %27, %21
  %29 = getelementptr inbounds %"class.cc::EventMetrics", %"class.cc::EventMetrics"* %1, i64 0, i32 3, i64 0, i32 0, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %"class.cc::EventMetrics", %"class.cc::EventMetrics"* %0, i64 0, i32 3, i64 0, i32 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = icmp eq i64 %32, %30
  br i1 %33, label %34, label %40

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.cc::EventMetrics", %"class.cc::EventMetrics"* %1, i64 0, i32 3, i64 1, i32 0, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %"class.cc::EventMetrics", %"class.cc::EventMetrics"* %0, i64 0, i32 3, i64 1, i32 0, i32 0
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %36
  br i1 %39, label %41, label %40

40:                                               ; preds = %28, %34, %41, %47, %53, %27, %21, %2
  ret i1 false

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.cc::EventMetrics", %"class.cc::EventMetrics"* %1, i64 0, i32 3, i64 2, i32 0, i32 0
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"class.cc::EventMetrics", %"class.cc::EventMetrics"* %0, i64 0, i32 3, i64 2, i32 0, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = icmp eq i64 %45, %43
  br i1 %46, label %47, label %40

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.cc::EventMetrics", %"class.cc::EventMetrics"* %1, i64 0, i32 3, i64 3, i32 0, i32 0
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %"class.cc::EventMetrics", %"class.cc::EventMetrics"* %0, i64 0, i32 3, i64 3, i32 0, i32 0
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %51, %49
  br i1 %52, label %53, label %40

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.cc::EventMetrics", %"class.cc::EventMetrics"* %1, i64 0, i32 3, i64 4, i32 0, i32 0
  %55 = load i64, i64* %54, align 8
  %56 = getelementptr inbounds %"class.cc::EventMetrics", %"class.cc::EventMetrics"* %0, i64 0, i32 3, i64 4, i32 0, i32 0
  %57 = load i64, i64* %56, align 8
  %58 = icmp eq i64 %57, %55
  br i1 %58, label %59, label %40

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"class.cc::EventMetrics", %"class.cc::EventMetrics"* %1, i64 0, i32 3, i64 5, i32 0, i32 0
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds %"class.cc::EventMetrics", %"class.cc::EventMetrics"* %0, i64 0, i32 3, i64 5, i32 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = icmp eq i64 %63, %61
  ret i1 %64
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc15EventMetricsSetC2Ev(%"struct.cc::EventMetricsSet"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.cc::EventMetricsSet"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 48, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc15EventMetricsSetD2Ev(%"struct.cc::EventMetricsSet"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.cc::EventMetricsSet", %"struct.cc::EventMetricsSet"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %5 = icmp eq %"class.std::__1::unique_ptr"* %4, null
  br i1 %5, label %26, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::unique_ptr"* %4 to i8*
  %8 = getelementptr inbounds %"struct.cc::EventMetricsSet", %"struct.cc::EventMetricsSet"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr"* %9, %4
  br i1 %10, label %24, label %11

11:                                               ; preds = %6, %19
  %12 = phi %"class.std::__1::unique_ptr"* [ %13, %19 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %12, i64 -1
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.cc::EventMetrics"*, %"class.cc::EventMetrics"** %14, align 8
  store %"class.cc::EventMetrics"* null, %"class.cc::EventMetrics"** %14, align 8
  %16 = icmp eq %"class.cc::EventMetrics"* %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %11
  %18 = bitcast %"class.cc::EventMetrics"* %15 to i8*
  tail call void @_ZdlPv(i8* %18) #11
  br label %19

19:                                               ; preds = %17, %11
  %20 = icmp eq %"class.std::__1::unique_ptr"* %13, %4
  br i1 %20, label %21, label %11

21:                                               ; preds = %19
  %22 = bitcast %"class.std::__1::vector"* %2 to i8**
  %23 = load i8*, i8** %22, align 8
  br label %24

24:                                               ; preds = %21, %6
  %25 = phi i8* [ %23, %21 ], [ %7, %6 ]
  store %"class.std::__1::unique_ptr"* %4, %"class.std::__1::unique_ptr"** %8, align 8
  tail call void @_ZdlPv(i8* %25) #11
  br label %26

26:                                               ; preds = %1, %24
  %27 = getelementptr inbounds %"struct.cc::EventMetricsSet", %"struct.cc::EventMetricsSet"* %0, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %27, align 8
  %29 = icmp eq %"class.std::__1::unique_ptr"* %28, null
  br i1 %29, label %50, label %30

30:                                               ; preds = %26
  %31 = bitcast %"class.std::__1::unique_ptr"* %28 to i8*
  %32 = getelementptr inbounds %"struct.cc::EventMetricsSet", %"struct.cc::EventMetricsSet"* %0, i64 0, i32 0, i32 0, i32 1
  %33 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %32, align 8
  %34 = icmp eq %"class.std::__1::unique_ptr"* %33, %28
  br i1 %34, label %48, label %35

35:                                               ; preds = %30, %43
  %36 = phi %"class.std::__1::unique_ptr"* [ %37, %43 ], [ %33, %30 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 -1
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %37, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.cc::EventMetrics"*, %"class.cc::EventMetrics"** %38, align 8
  store %"class.cc::EventMetrics"* null, %"class.cc::EventMetrics"** %38, align 8
  %40 = icmp eq %"class.cc::EventMetrics"* %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %35
  %42 = bitcast %"class.cc::EventMetrics"* %39 to i8*
  tail call void @_ZdlPv(i8* %42) #11
  br label %43

43:                                               ; preds = %41, %35
  %44 = icmp eq %"class.std::__1::unique_ptr"* %37, %28
  br i1 %44, label %45, label %35

45:                                               ; preds = %43
  %46 = bitcast %"struct.cc::EventMetricsSet"* %0 to i8**
  %47 = load i8*, i8** %46, align 8
  br label %48

48:                                               ; preds = %45, %30
  %49 = phi i8* [ %47, %45 ], [ %31, %30 ]
  store %"class.std::__1::unique_ptr"* %28, %"class.std::__1::unique_ptr"** %32, align 8
  tail call void @_ZdlPv(i8* %49) #11
  br label %50

50:                                               ; preds = %26, %48
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc15EventMetricsSetC2ENSt3__16vectorINS1_10unique_ptrINS_12EventMetricsENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEESA_(%"struct.cc::EventMetricsSet"* nocapture, %"class.std::__1::vector"* nocapture, %"class.std::__1::vector"* nocapture) unnamed_addr #0 align 2 {
  %4 = bitcast %"struct.cc::EventMetricsSet"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #10
  %5 = bitcast %"class.std::__1::vector"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"struct.cc::EventMetricsSet"* %0 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %9 = bitcast %"class.std::__1::unique_ptr"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"struct.cc::EventMetricsSet", %"struct.cc::EventMetricsSet"* %0, i64 0, i32 0, i32 0, i32 1
  %12 = bitcast %"class.std::__1::unique_ptr"** %11 to i64*
  store i64 %10, i64* %12, align 8
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"class.std::__1::unique_ptr"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"struct.cc::EventMetricsSet", %"struct.cc::EventMetricsSet"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"class.std::__1::unique_ptr"** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast %"class.std::__1::vector"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #10
  %19 = getelementptr inbounds %"struct.cc::EventMetricsSet", %"struct.cc::EventMetricsSet"* %0, i64 0, i32 1
  %20 = bitcast %"class.std::__1::vector"* %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false) #10
  %21 = bitcast %"class.std::__1::vector"* %2 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.std::__1::vector"* %19 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %25 = bitcast %"class.std::__1::unique_ptr"** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"struct.cc::EventMetricsSet", %"struct.cc::EventMetricsSet"* %0, i64 0, i32 1, i32 0, i32 1
  %28 = bitcast %"class.std::__1::unique_ptr"** %27 to i64*
  store i64 %26, i64* %28, align 8
  %29 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %30 = bitcast %"class.std::__1::unique_ptr"** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %"struct.cc::EventMetricsSet", %"struct.cc::EventMetricsSet"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %33 = bitcast %"class.std::__1::unique_ptr"** %32 to i64*
  store i64 %31, i64* %33, align 8
  %34 = bitcast %"class.std::__1::vector"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 24, i1 false) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc15EventMetricsSetC2EOS0_(%"struct.cc::EventMetricsSet"* nocapture, %"struct.cc::EventMetricsSet"* nocapture dereferenceable(48)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.cc::EventMetricsSet"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #10
  %4 = bitcast %"struct.cc::EventMetricsSet"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"struct.cc::EventMetricsSet"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"struct.cc::EventMetricsSet", %"struct.cc::EventMetricsSet"* %1, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::unique_ptr"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"struct.cc::EventMetricsSet", %"struct.cc::EventMetricsSet"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = bitcast %"class.std::__1::unique_ptr"** %10 to i64*
  store i64 %9, i64* %11, align 8
  %12 = getelementptr inbounds %"struct.cc::EventMetricsSet", %"struct.cc::EventMetricsSet"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast %"class.std::__1::unique_ptr"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"struct.cc::EventMetricsSet", %"struct.cc::EventMetricsSet"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr"** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = bitcast %"struct.cc::EventMetricsSet"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #10
  %18 = getelementptr inbounds %"struct.cc::EventMetricsSet", %"struct.cc::EventMetricsSet"* %0, i64 0, i32 1
  %19 = getelementptr inbounds %"struct.cc::EventMetricsSet", %"struct.cc::EventMetricsSet"* %1, i64 0, i32 1
  %20 = bitcast %"class.std::__1::vector"* %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false) #10
  %21 = bitcast %"class.std::__1::vector"* %19 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.std::__1::vector"* %18 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"struct.cc::EventMetricsSet", %"struct.cc::EventMetricsSet"* %1, i64 0, i32 1, i32 0, i32 1
  %25 = bitcast %"class.std::__1::unique_ptr"** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"struct.cc::EventMetricsSet", %"struct.cc::EventMetricsSet"* %0, i64 0, i32 1, i32 0, i32 1
  %28 = bitcast %"class.std::__1::unique_ptr"** %27 to i64*
  store i64 %26, i64* %28, align 8
  %29 = getelementptr inbounds %"struct.cc::EventMetricsSet", %"struct.cc::EventMetricsSet"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %30 = bitcast %"class.std::__1::unique_ptr"** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %"struct.cc::EventMetricsSet", %"struct.cc::EventMetricsSet"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %33 = bitcast %"class.std::__1::unique_ptr"** %32 to i64*
  store i64 %31, i64* %33, align 8
  %34 = bitcast %"class.std::__1::vector"* %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 24, i1 false) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(48) %"struct.cc::EventMetricsSet"* @_ZN2cc15EventMetricsSetaSEOS0_(%"struct.cc::EventMetricsSet"* returned, %"struct.cc::EventMetricsSet"* nocapture dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.cc::EventMetricsSet", %"struct.cc::EventMetricsSet"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %5 = icmp eq %"class.std::__1::unique_ptr"* %4, null
  br i1 %5, label %27, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.std::__1::unique_ptr"* %4 to i8*
  %8 = getelementptr inbounds %"struct.cc::EventMetricsSet", %"struct.cc::EventMetricsSet"* %0, i64 0, i32 0, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr"* %9, %4
  br i1 %10, label %24, label %11

11:                                               ; preds = %6, %19
  %12 = phi %"class.std::__1::unique_ptr"* [ %13, %19 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %12, i64 -1
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.cc::EventMetrics"*, %"class.cc::EventMetrics"** %14, align 8
  store %"class.cc::EventMetrics"* null, %"class.cc::EventMetrics"** %14, align 8
  %16 = icmp eq %"class.cc::EventMetrics"* %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %11
  %18 = bitcast %"class.cc::EventMetrics"* %15 to i8*
  tail call void @_ZdlPv(i8* %18) #11
  br label %19

19:                                               ; preds = %17, %11
  %20 = icmp eq %"class.std::__1::unique_ptr"* %13, %4
  br i1 %20, label %21, label %11

21:                                               ; preds = %19
  %22 = bitcast %"struct.cc::EventMetricsSet"* %0 to i8**
  %23 = load i8*, i8** %22, align 8
  br label %24

24:                                               ; preds = %21, %6
  %25 = phi i8* [ %23, %21 ], [ %7, %6 ]
  store %"class.std::__1::unique_ptr"* %4, %"class.std::__1::unique_ptr"** %8, align 8
  tail call void @_ZdlPv(i8* %25) #11
  %26 = bitcast %"struct.cc::EventMetricsSet"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 24, i1 false) #10
  br label %27

27:                                               ; preds = %2, %24
  %28 = bitcast %"struct.cc::EventMetricsSet"* %1 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"struct.cc::EventMetricsSet"* %0 to i64*
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"struct.cc::EventMetricsSet", %"struct.cc::EventMetricsSet"* %1, i64 0, i32 0, i32 0, i32 1
  %32 = bitcast %"class.std::__1::unique_ptr"** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %"struct.cc::EventMetricsSet", %"struct.cc::EventMetricsSet"* %0, i64 0, i32 0, i32 0, i32 1
  %35 = bitcast %"class.std::__1::unique_ptr"** %34 to i64*
  store i64 %33, i64* %35, align 8
  %36 = getelementptr inbounds %"struct.cc::EventMetricsSet", %"struct.cc::EventMetricsSet"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %37 = bitcast %"class.std::__1::unique_ptr"** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %"struct.cc::EventMetricsSet", %"struct.cc::EventMetricsSet"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %40 = bitcast %"class.std::__1::unique_ptr"** %39 to i64*
  store i64 %38, i64* %40, align 8
  %41 = bitcast %"struct.cc::EventMetricsSet"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 24, i1 false) #10
  %42 = getelementptr inbounds %"struct.cc::EventMetricsSet", %"struct.cc::EventMetricsSet"* %0, i64 0, i32 1
  %43 = getelementptr inbounds %"struct.cc::EventMetricsSet", %"struct.cc::EventMetricsSet"* %1, i64 0, i32 1
  %44 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %42, i64 0, i32 0, i32 0
  %45 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %44, align 8
  %46 = icmp eq %"class.std::__1::unique_ptr"* %45, null
  br i1 %46, label %68, label %47

47:                                               ; preds = %27
  %48 = bitcast %"class.std::__1::unique_ptr"* %45 to i8*
  %49 = getelementptr inbounds %"struct.cc::EventMetricsSet", %"struct.cc::EventMetricsSet"* %0, i64 0, i32 1, i32 0, i32 1
  %50 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %49, align 8
  %51 = icmp eq %"class.std::__1::unique_ptr"* %50, %45
  br i1 %51, label %65, label %52

52:                                               ; preds = %47, %60
  %53 = phi %"class.std::__1::unique_ptr"* [ %54, %60 ], [ %50, %47 ]
  %54 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %53, i64 -1
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %54, i64 0, i32 0, i32 0, i32 0
  %56 = load %"class.cc::EventMetrics"*, %"class.cc::EventMetrics"** %55, align 8
  store %"class.cc::EventMetrics"* null, %"class.cc::EventMetrics"** %55, align 8
  %57 = icmp eq %"class.cc::EventMetrics"* %56, null
  br i1 %57, label %60, label %58

58:                                               ; preds = %52
  %59 = bitcast %"class.cc::EventMetrics"* %56 to i8*
  tail call void @_ZdlPv(i8* %59) #11
  br label %60

60:                                               ; preds = %58, %52
  %61 = icmp eq %"class.std::__1::unique_ptr"* %54, %45
  br i1 %61, label %62, label %52

62:                                               ; preds = %60
  %63 = bitcast %"class.std::__1::vector"* %42 to i8**
  %64 = load i8*, i8** %63, align 8
  br label %65

65:                                               ; preds = %62, %47
  %66 = phi i8* [ %64, %62 ], [ %48, %47 ]
  store %"class.std::__1::unique_ptr"* %45, %"class.std::__1::unique_ptr"** %49, align 8
  tail call void @_ZdlPv(i8* %66) #11
  %67 = bitcast %"class.std::__1::vector"* %42 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 24, i1 false) #10
  br label %68

68:                                               ; preds = %27, %65
  %69 = bitcast %"class.std::__1::vector"* %43 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = bitcast %"class.std::__1::vector"* %42 to i64*
  store i64 %70, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.cc::EventMetricsSet", %"struct.cc::EventMetricsSet"* %1, i64 0, i32 1, i32 0, i32 1
  %73 = bitcast %"class.std::__1::unique_ptr"** %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = getelementptr inbounds %"struct.cc::EventMetricsSet", %"struct.cc::EventMetricsSet"* %0, i64 0, i32 1, i32 0, i32 1
  %76 = bitcast %"class.std::__1::unique_ptr"** %75 to i64*
  store i64 %74, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.cc::EventMetricsSet", %"struct.cc::EventMetricsSet"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %78 = bitcast %"class.std::__1::unique_ptr"** %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = getelementptr inbounds %"struct.cc::EventMetricsSet", %"struct.cc::EventMetricsSet"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %81 = bitcast %"class.std::__1::unique_ptr"** %80 to i64*
  store i64 %79, i64* %81, align 8
  %82 = bitcast %"class.std::__1::vector"* %43 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %82, i8 0, i64 24, i1 false) #10
  ret %"struct.cc::EventMetricsSet"* %0
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
