; ModuleID = '../../third_party/skia/src/gpu/gradients/GrGradientBitmapCache.cpp'
source_filename = "../../third_party/skia/src/gpu/gradients/GrGradientBitmapCache.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%class.GrGradientBitmapCache = type { %class.SkMutex, i32, i32, i32, %"struct.GrGradientBitmapCache::Entry"*, %"struct.GrGradientBitmapCache::Entry"* }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkOnce = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"struct.GrGradientBitmapCache::Entry" = type { %"struct.GrGradientBitmapCache::Entry"*, %"struct.GrGradientBitmapCache::Entry"*, i8*, i64, %class.SkBitmap }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.7 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.6, i32, i32 }
%class.sk_sp.6 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.7 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%struct.SkRGBA4f = type { float, float, float, float }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.(anonymous namespace)::SkNx"*, i32)* }
%"class.(anonymous namespace)::SkNx" = type { <4 x float> }
%class.SkAutoSTMalloc = type { i32*, %union.anon }
%union.anon = type { [64 x i32] }

@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN21GrGradientBitmapCache12fillGradientEPK8SkRGBA4fIL11SkAlphaType2EEPKfi11SkColorTypeP8SkBitmapE3$_0FvRKN12_GLOBAL__N_14SkNxILi4EfEEiEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN21GrGradientBitmapCache12fillGradientEPK8SkRGBA4fIL11SkAlphaType2EEPKfi11SkColorTypeP8SkBitmapE3$_1FvRKN12_GLOBAL__N_14SkNxILi4EfEEiEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8

@_ZN21GrGradientBitmapCacheC1Eii = hidden unnamed_addr alias void (%class.GrGradientBitmapCache*, i32, i32), void (%class.GrGradientBitmapCache*, i32, i32)* @_ZN21GrGradientBitmapCacheC2Eii
@_ZN21GrGradientBitmapCacheD1Ev = hidden unnamed_addr alias void (%class.GrGradientBitmapCache*), void (%class.GrGradientBitmapCache*)* @_ZN21GrGradientBitmapCacheD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN21GrGradientBitmapCacheC2Eii(%class.GrGradientBitmapCache* nocapture, i32, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.GrGradientBitmapCache, %class.GrGradientBitmapCache* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %4, align 4
  %5 = getelementptr inbounds %class.GrGradientBitmapCache, %class.GrGradientBitmapCache* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %5, align 1
  %6 = getelementptr inbounds %class.GrGradientBitmapCache, %class.GrGradientBitmapCache* %0, i64 0, i32 0, i32 0, i32 2
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %6, align 8
  %7 = getelementptr inbounds %class.GrGradientBitmapCache, %class.GrGradientBitmapCache* %0, i64 0, i32 2
  store i32 %1, i32* %7, align 4
  %8 = getelementptr inbounds %class.GrGradientBitmapCache, %class.GrGradientBitmapCache* %0, i64 0, i32 3
  store i32 %2, i32* %8, align 8
  %9 = getelementptr inbounds %class.GrGradientBitmapCache, %class.GrGradientBitmapCache* %0, i64 0, i32 1
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %class.GrGradientBitmapCache, %class.GrGradientBitmapCache* %0, i64 0, i32 4
  %11 = bitcast %"struct.GrGradientBitmapCache::Entry"** %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21GrGradientBitmapCacheD2Ev(%class.GrGradientBitmapCache*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.GrGradientBitmapCache, %class.GrGradientBitmapCache* %0, i64 0, i32 4
  %3 = load %"struct.GrGradientBitmapCache::Entry"*, %"struct.GrGradientBitmapCache::Entry"** %2, align 8
  %4 = icmp eq %"struct.GrGradientBitmapCache::Entry"* %3, null
  br i1 %4, label %14, label %5

5:                                                ; preds = %1, %5
  %6 = phi %"struct.GrGradientBitmapCache::Entry"* [ %9, %5 ], [ %3, %1 ]
  %7 = bitcast %"struct.GrGradientBitmapCache::Entry"* %6 to i8*
  %8 = getelementptr inbounds %"struct.GrGradientBitmapCache::Entry", %"struct.GrGradientBitmapCache::Entry"* %6, i64 0, i32 1
  %9 = load %"struct.GrGradientBitmapCache::Entry"*, %"struct.GrGradientBitmapCache::Entry"** %8, align 8
  %10 = getelementptr inbounds %"struct.GrGradientBitmapCache::Entry", %"struct.GrGradientBitmapCache::Entry"* %6, i64 0, i32 2
  %11 = load i8*, i8** %10, align 8
  tail call void @_Z7sk_freePv(i8* %11) #11
  %12 = getelementptr inbounds %"struct.GrGradientBitmapCache::Entry", %"struct.GrGradientBitmapCache::Entry"* %6, i64 0, i32 4
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %12) #11
  tail call void @_ZdlPv(i8* %7) #12
  %13 = icmp eq %"struct.GrGradientBitmapCache::Entry"* %9, null
  br i1 %13, label %14, label %5

14:                                               ; preds = %5, %1
  %15 = getelementptr inbounds %class.GrGradientBitmapCache, %class.GrGradientBitmapCache* %0, i64 0, i32 0, i32 0
  tail call void @_ZN11SkSemaphoreD1Ev(%class.SkSemaphore* %15) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK21GrGradientBitmapCache4findEPKvmP8SkBitmap(%class.GrGradientBitmapCache*, i8* nocapture readonly, i64, %class.SkBitmap*) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %class.GrGradientBitmapCache, %class.GrGradientBitmapCache* %0, i64 0, i32 4
  %6 = load %"struct.GrGradientBitmapCache::Entry"*, %"struct.GrGradientBitmapCache::Entry"** %5, align 8
  %7 = icmp eq %"struct.GrGradientBitmapCache::Entry"* %6, null
  br i1 %7, label %52, label %8

8:                                                ; preds = %4, %48
  %9 = phi %"struct.GrGradientBitmapCache::Entry"* [ %50, %48 ], [ %6, %4 ]
  %10 = getelementptr inbounds %"struct.GrGradientBitmapCache::Entry", %"struct.GrGradientBitmapCache::Entry"* %9, i64 0, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, %2
  br i1 %12, label %13, label %48

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"struct.GrGradientBitmapCache::Entry", %"struct.GrGradientBitmapCache::Entry"* %9, i64 0, i32 2
  %15 = load i8*, i8** %14, align 8
  %16 = tail call i32 @bcmp(i8* %15, i8* %1, i64 %2) #11
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %48

18:                                               ; preds = %13
  %19 = icmp eq %class.SkBitmap* %3, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %18
  %21 = getelementptr inbounds %"struct.GrGradientBitmapCache::Entry", %"struct.GrGradientBitmapCache::Entry"* %9, i64 0, i32 4
  %22 = tail call dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSERKS_(%class.SkBitmap* nonnull %3, %class.SkBitmap* dereferenceable(56) %21) #11
  br label %23

23:                                               ; preds = %18, %20
  %24 = getelementptr inbounds %"struct.GrGradientBitmapCache::Entry", %"struct.GrGradientBitmapCache::Entry"* %9, i64 0, i32 0
  %25 = load %"struct.GrGradientBitmapCache::Entry"*, %"struct.GrGradientBitmapCache::Entry"** %24, align 8
  %26 = icmp eq %"struct.GrGradientBitmapCache::Entry"* %25, null
  %27 = getelementptr inbounds %"struct.GrGradientBitmapCache::Entry", %"struct.GrGradientBitmapCache::Entry"* %9, i64 0, i32 1
  %28 = bitcast %"struct.GrGradientBitmapCache::Entry"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"struct.GrGradientBitmapCache::Entry", %"struct.GrGradientBitmapCache::Entry"* %25, i64 0, i32 1
  %31 = select i1 %26, %"struct.GrGradientBitmapCache::Entry"** %5, %"struct.GrGradientBitmapCache::Entry"** %30
  %32 = bitcast %"struct.GrGradientBitmapCache::Entry"** %31 to i64*
  store i64 %29, i64* %32, align 8
  %33 = load %"struct.GrGradientBitmapCache::Entry"*, %"struct.GrGradientBitmapCache::Entry"** %27, align 8
  %34 = icmp eq %"struct.GrGradientBitmapCache::Entry"* %33, null
  %35 = bitcast %"struct.GrGradientBitmapCache::Entry"* %9 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"struct.GrGradientBitmapCache::Entry"* %33 to i64*
  %38 = getelementptr inbounds %class.GrGradientBitmapCache, %class.GrGradientBitmapCache* %0, i64 0, i32 5
  %39 = bitcast %"struct.GrGradientBitmapCache::Entry"** %38 to i64*
  %40 = select i1 %34, i64* %39, i64* %37
  store i64 %36, i64* %40, align 8
  store %"struct.GrGradientBitmapCache::Entry"* null, %"struct.GrGradientBitmapCache::Entry"** %24, align 8
  %41 = bitcast %"struct.GrGradientBitmapCache::Entry"** %5 to i64*
  %42 = load i64, i64* %41, align 8
  store i64 %42, i64* %28, align 8
  %43 = load %"struct.GrGradientBitmapCache::Entry"*, %"struct.GrGradientBitmapCache::Entry"** %5, align 8
  %44 = icmp eq %"struct.GrGradientBitmapCache::Entry"* %43, null
  %45 = getelementptr inbounds %"struct.GrGradientBitmapCache::Entry", %"struct.GrGradientBitmapCache::Entry"* %43, i64 0, i32 0
  %46 = getelementptr inbounds %class.GrGradientBitmapCache, %class.GrGradientBitmapCache* %0, i64 0, i32 5
  %47 = select i1 %44, %"struct.GrGradientBitmapCache::Entry"** %46, %"struct.GrGradientBitmapCache::Entry"** %45
  store %"struct.GrGradientBitmapCache::Entry"* %9, %"struct.GrGradientBitmapCache::Entry"** %47, align 8
  store %"struct.GrGradientBitmapCache::Entry"* %9, %"struct.GrGradientBitmapCache::Entry"** %5, align 8
  br label %52

48:                                               ; preds = %8, %13
  %49 = getelementptr inbounds %"struct.GrGradientBitmapCache::Entry", %"struct.GrGradientBitmapCache::Entry"* %9, i64 0, i32 1
  %50 = load %"struct.GrGradientBitmapCache::Entry"*, %"struct.GrGradientBitmapCache::Entry"** %49, align 8
  %51 = icmp eq %"struct.GrGradientBitmapCache::Entry"* %50, null
  br i1 %51, label %52, label %8

52:                                               ; preds = %48, %4, %23
  %53 = phi i1 [ true, %23 ], [ false, %4 ], [ false, %48 ]
  ret i1 %53
}

declare dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSERKS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21GrGradientBitmapCache3addEPKvmRK8SkBitmap(%class.GrGradientBitmapCache*, i8* nocapture readonly, i64, %class.SkBitmap* dereferenceable(56)) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %class.GrGradientBitmapCache, %class.GrGradientBitmapCache* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %class.GrGradientBitmapCache, %class.GrGradientBitmapCache* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %6, %8
  br i1 %9, label %10, label %39

10:                                               ; preds = %4
  %11 = getelementptr inbounds %class.GrGradientBitmapCache, %class.GrGradientBitmapCache* %0, i64 0, i32 5
  %12 = load %"struct.GrGradientBitmapCache::Entry"*, %"struct.GrGradientBitmapCache::Entry"** %11, align 8
  %13 = getelementptr inbounds %"struct.GrGradientBitmapCache::Entry", %"struct.GrGradientBitmapCache::Entry"* %12, i64 0, i32 0
  %14 = load %"struct.GrGradientBitmapCache::Entry"*, %"struct.GrGradientBitmapCache::Entry"** %13, align 8
  %15 = icmp eq %"struct.GrGradientBitmapCache::Entry"* %14, null
  %16 = getelementptr inbounds %"struct.GrGradientBitmapCache::Entry", %"struct.GrGradientBitmapCache::Entry"* %12, i64 0, i32 1
  %17 = bitcast %"struct.GrGradientBitmapCache::Entry"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %class.GrGradientBitmapCache, %class.GrGradientBitmapCache* %0, i64 0, i32 4
  %20 = getelementptr inbounds %"struct.GrGradientBitmapCache::Entry", %"struct.GrGradientBitmapCache::Entry"* %14, i64 0, i32 1
  %21 = select i1 %15, %"struct.GrGradientBitmapCache::Entry"** %19, %"struct.GrGradientBitmapCache::Entry"** %20
  %22 = bitcast %"struct.GrGradientBitmapCache::Entry"** %21 to i64*
  store i64 %18, i64* %22, align 8
  %23 = load %"struct.GrGradientBitmapCache::Entry"*, %"struct.GrGradientBitmapCache::Entry"** %16, align 8
  %24 = icmp eq %"struct.GrGradientBitmapCache::Entry"* %23, null
  %25 = bitcast %"struct.GrGradientBitmapCache::Entry"* %12 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"struct.GrGradientBitmapCache::Entry"* %23 to i64*
  %28 = bitcast %"struct.GrGradientBitmapCache::Entry"** %11 to i64*
  %29 = select i1 %24, i64* %28, i64* %27
  store i64 %26, i64* %29, align 8
  %30 = icmp eq %"struct.GrGradientBitmapCache::Entry"* %12, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %10
  %32 = getelementptr inbounds %"struct.GrGradientBitmapCache::Entry", %"struct.GrGradientBitmapCache::Entry"* %12, i64 0, i32 2
  %33 = load i8*, i8** %32, align 8
  tail call void @_Z7sk_freePv(i8* %33) #11
  %34 = getelementptr inbounds %"struct.GrGradientBitmapCache::Entry", %"struct.GrGradientBitmapCache::Entry"* %12, i64 0, i32 4
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %34) #11
  %35 = bitcast %"struct.GrGradientBitmapCache::Entry"* %12 to i8*
  tail call void @_ZdlPv(i8* %35) #12
  br label %36

36:                                               ; preds = %31, %10
  %37 = load i32, i32* %5, align 8
  %38 = add nsw i32 %37, -1
  store i32 %38, i32* %5, align 8
  br label %39

39:                                               ; preds = %36, %4
  %40 = tail call i8* @_Znwm(i64 88) #12
  %41 = getelementptr inbounds i8, i8* %40, i64 32
  %42 = bitcast i8* %41 to %class.SkBitmap*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 0, i64 16, i1 false) #11
  tail call void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap* %42, %class.SkBitmap* dereferenceable(56) %3) #11
  %43 = tail call i8* @_Z15sk_malloc_flagsmj(i64 %2, i32 2) #11
  %44 = getelementptr inbounds i8, i8* %40, i64 16
  %45 = bitcast i8* %44 to i8**
  store i8* %43, i8** %45, align 8
  %46 = getelementptr inbounds i8, i8* %40, i64 24
  %47 = bitcast i8* %46 to i64*
  store i64 %2, i64* %47, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %43, i8* align 1 %1, i64 %2, i1 false) #11
  %48 = bitcast i8* %40 to %"struct.GrGradientBitmapCache::Entry"**
  store %"struct.GrGradientBitmapCache::Entry"* null, %"struct.GrGradientBitmapCache::Entry"** %48, align 8
  %49 = getelementptr inbounds %class.GrGradientBitmapCache, %class.GrGradientBitmapCache* %0, i64 0, i32 4
  %50 = bitcast %"struct.GrGradientBitmapCache::Entry"** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %40, i64 8
  %53 = bitcast i8* %52 to i64*
  store i64 %51, i64* %53, align 8
  %54 = icmp eq i64 %51, 0
  %55 = inttoptr i64 %51 to i8**
  %56 = getelementptr inbounds %class.GrGradientBitmapCache, %class.GrGradientBitmapCache* %0, i64 0, i32 5
  %57 = bitcast %"struct.GrGradientBitmapCache::Entry"** %56 to i8**
  %58 = select i1 %54, i8** %57, i8** %55
  store i8* %40, i8** %58, align 8
  %59 = bitcast %"struct.GrGradientBitmapCache::Entry"** %49 to i8**
  store i8* %40, i8** %59, align 8
  %60 = load i32, i32* %5, align 8
  %61 = add nsw i32 %60, 1
  store i32 %61, i32* %5, align 8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21GrGradientBitmapCache12fillGradientEPK8SkRGBA4fIL11SkAlphaType2EEPKfi11SkColorTypeP8SkBitmap(%class.GrGradientBitmapCache* nocapture readonly, %struct.SkRGBA4f* nocapture readonly, float* nocapture readonly, i32, i32, %class.SkBitmap* nocapture readonly) local_unnamed_addr #6 align 2 {
  %7 = alloca i16*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca %"class.std::__1::function", align 8
  %10 = alloca %"class.std::__1::function", align 8
  %11 = alloca %"class.std::__1::function", align 8
  %12 = alloca %"class.(anonymous namespace)::SkNx", align 16
  %13 = bitcast i16** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #11
  %14 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %5, i64 0, i32 1, i32 0
  %15 = bitcast i8** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast i16** %7 to i64*
  store i64 %16, i64* %17, align 8
  %18 = bitcast i32** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #11
  %19 = bitcast i32** %8 to i64*
  store i64 %16, i64* %19, align 8
  %20 = bitcast %"class.std::__1::function"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #11
  %21 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %9, i64 0, i32 0, i32 1, i32 0
  %22 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %9, i64 0, i32 0, i32 2
  %23 = ptrtoint i16** %7 to i64
  %24 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %9, i64 0, i32 0, i32 0, i32 1, i64 0
  %25 = bitcast i8* %24 to i64*
  store i64 -6148914691236517206, i64* %25, align 8
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.(anonymous namespace)::SkNx"*, i32)* @"_ZNSt3__110__function16__policy_invokerIFvRKN12_GLOBAL__N_14SkNxILi4EfEEiEE11__call_implINS0_20__default_alloc_funcIZN21GrGradientBitmapCache12fillGradientEPK8SkRGBA4fIL11SkAlphaType2EEPKfi11SkColorTypeP8SkBitmapE3$_0S7_EEEEvPKNS0_16__policy_storageES6_i", void (%"union.std::__1::__function::__policy_storage"*, %"class.(anonymous namespace)::SkNx"*, i32)** %21, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN21GrGradientBitmapCache12fillGradientEPK8SkRGBA4fIL11SkAlphaType2EEPKfi11SkColorTypeP8SkBitmapE3$_0FvRKN12_GLOBAL__N_14SkNxILi4EfEEiEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %22, align 8
  %26 = bitcast %"class.std::__1::function"* %9 to i64*
  store i64 %23, i64* %26, align 8
  %27 = bitcast %"class.std::__1::function"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %27) #11
  %28 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %10, i64 0, i32 0, i32 1, i32 0
  %29 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %10, i64 0, i32 0, i32 2
  %30 = ptrtoint i32** %8 to i64
  %31 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %10, i64 0, i32 0, i32 0, i32 1, i64 0
  %32 = bitcast i8* %31 to i64*
  store i64 -6148914691236517206, i64* %32, align 8
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.(anonymous namespace)::SkNx"*, i32)* @"_ZNSt3__110__function16__policy_invokerIFvRKN12_GLOBAL__N_14SkNxILi4EfEEiEE11__call_implINS0_20__default_alloc_funcIZN21GrGradientBitmapCache12fillGradientEPK8SkRGBA4fIL11SkAlphaType2EEPKfi11SkColorTypeP8SkBitmapE3$_1S7_EEEEvPKNS0_16__policy_storageES6_i", void (%"union.std::__1::__function::__policy_storage"*, %"class.(anonymous namespace)::SkNx"*, i32)** %28, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN21GrGradientBitmapCache12fillGradientEPK8SkRGBA4fIL11SkAlphaType2EEPKfi11SkColorTypeP8SkBitmapE3$_1FvRKN12_GLOBAL__N_14SkNxILi4EfEEiEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %29, align 8
  %33 = bitcast %"class.std::__1::function"* %10 to i64*
  store i64 %30, i64* %33, align 8
  %34 = bitcast %"class.std::__1::function"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %34) #11
  %35 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %11, i64 0, i32 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %11, i64 0, i32 0, i32 1, i32 0
  %37 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %11, i64 0, i32 0, i32 2
  %38 = icmp eq i32 %4, 13
  %39 = select i1 %38, %"class.std::__1::function"* %9, %"class.std::__1::function"* %10
  %40 = bitcast %"class.std::__1::function"* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %34, i8* nonnull align 8 %40, i64 16, i1 false) #11
  %41 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %11, i64 0, i32 0, i32 1
  %42 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %39, i64 0, i32 0, i32 1
  %43 = bitcast %"struct.std::__1::__function::__policy_invoker"* %42 to i64*
  %44 = bitcast %"struct.std::__1::__function::__policy_invoker"* %41 to i64*
  %45 = load i64, i64* %43, align 8
  store i64 %45, i64* %44, align 8
  %46 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %39, i64 0, i32 0, i32 2
  %47 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %46, align 8
  store %"struct.std::__1::__function::__policy"* %47, %"struct.std::__1::__function::__policy"** %37, align 8
  %48 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %47, i64 0, i32 0
  %49 = load i8* (i8*)*, i8* (i8*)** %48, align 8
  %50 = icmp eq i8* (i8*)* %49, null
  br i1 %50, label %55, label %51

51:                                               ; preds = %6
  %52 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %39, i64 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  %54 = call i8* %49(i8* %53) #11
  store i8* %54, i8** %35, align 8
  br label %55

55:                                               ; preds = %6, %51
  %56 = icmp sgt i32 %3, 1
  br i1 %56, label %57, label %63

57:                                               ; preds = %55
  %58 = getelementptr inbounds %class.GrGradientBitmapCache, %class.GrGradientBitmapCache* %0, i64 0, i32 3
  %59 = bitcast %"class.(anonymous namespace)::SkNx"* %12 to i8*
  %60 = getelementptr inbounds %"class.(anonymous namespace)::SkNx", %"class.(anonymous namespace)::SkNx"* %12, i64 0, i32 0
  %61 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %11, i64 0, i32 0, i32 0
  %62 = zext i32 %3 to i64
  br label %71

63:                                               ; preds = %108, %55
  %64 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %37, align 8
  %65 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %64, i64 0, i32 1
  %66 = load void (i8*)*, void (i8*)** %65, align 8
  %67 = icmp eq void (i8*)* %66, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %63
  %69 = load i8*, i8** %35, align 8
  call void %66(i8* %69) #11
  br label %70

70:                                               ; preds = %63, %68
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %34) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %27) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #11
  ret void

71:                                               ; preds = %108, %57
  %72 = phi i64 [ 1, %57 ], [ %109, %108 ]
  %73 = phi i32 [ 0, %57 ], [ %83, %108 ]
  %74 = getelementptr inbounds float, float* %2, i64 %72
  %75 = load float, float* %74, align 4
  %76 = load i32, i32* %58, align 8
  %77 = sitofp i32 %76 to float
  %78 = fmul float %75, %77
  %79 = add nsw i32 %76, -1
  %80 = sitofp i32 %79 to float
  %81 = fcmp ogt float %78, %80
  %82 = select i1 %81, float %80, float %78
  %83 = fptosi float %82 to i32
  %84 = icmp slt i32 %73, %83
  br i1 %84, label %85, label %108

85:                                               ; preds = %71
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %59) #11
  %86 = add nsw i64 %72, -1
  %87 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %1, i64 %86, i32 0
  %88 = bitcast float* %87 to <4 x float>*
  %89 = load <4 x float>, <4 x float>* %88, align 1
  store <4 x float> %89, <4 x float>* %60, align 16
  %90 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %1, i64 %72, i32 0
  %91 = bitcast float* %90 to <4 x float>*
  %92 = load <4 x float>, <4 x float>* %91, align 1
  %93 = sub nsw i32 %83, %73
  %94 = sitofp i32 %93 to float
  %95 = fdiv float 1.000000e+00, %94
  %96 = insertelement <4 x float> undef, float %95, i32 0
  %97 = shufflevector <4 x float> %96, <4 x float> undef, <4 x i32> zeroinitializer
  %98 = fsub <4 x float> %92, %89
  %99 = fmul <4 x float> %97, %98
  br label %101

100:                                              ; preds = %101
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %59) #11
  br label %108

101:                                              ; preds = %101, %85
  %102 = phi i32 [ %73, %85 ], [ %106, %101 ]
  %103 = load void (%"union.std::__1::__function::__policy_storage"*, %"class.(anonymous namespace)::SkNx"*, i32)*, void (%"union.std::__1::__function::__policy_storage"*, %"class.(anonymous namespace)::SkNx"*, i32)** %36, align 8
  call void %103(%"union.std::__1::__function::__policy_storage"* nonnull %61, %"class.(anonymous namespace)::SkNx"* nonnull dereferenceable(16) %12, i32 %102) #11
  %104 = load <4 x float>, <4 x float>* %60, align 16
  %105 = fadd <4 x float> %99, %104
  store <4 x float> %105, <4 x float>* %60, align 16
  %106 = add nsw i32 %102, 1
  %107 = icmp slt i32 %102, %83
  br i1 %107, label %101, label %100

108:                                              ; preds = %100, %71
  %109 = add nuw nsw i64 %72, 1
  %110 = icmp eq i64 %109, %62
  br i1 %110, label %63, label %71
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21GrGradientBitmapCache11getGradientEPK8SkRGBA4fIL11SkAlphaType2EEPKfi11SkColorTypeS1_P8SkBitmap(%class.GrGradientBitmapCache*, %struct.SkRGBA4f* nocapture readonly, float* nocapture readonly, i32, i32, i32, %class.SkBitmap*) local_unnamed_addr #1 align 2 {
  %8 = alloca %class.SkAutoSTMalloc, align 8
  %9 = alloca %struct.SkImageInfo, align 8
  %10 = sext i32 %3 to i64
  %11 = shl nsw i64 %10, 4
  %12 = shl i32 %3, 2
  %13 = or i32 %12, 3
  %14 = icmp sgt i32 %3, 2
  %15 = add nsw i32 %3, -1
  %16 = select i1 %14, i32 %15, i32 0
  %17 = add nsw i32 %13, %16
  %18 = bitcast %class.SkAutoSTMalloc* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %18) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 264, i1 false)
  %19 = sext i32 %17 to i64
  %20 = icmp ugt i32 %17, 64
  br i1 %20, label %21, label %25

21:                                               ; preds = %7
  %22 = tail call i8* @_Z15sk_malloc_throwmm(i64 %19, i64 4) #11
  %23 = bitcast %class.SkAutoSTMalloc* %8 to i8**
  store i8* %22, i8** %23, align 8
  %24 = bitcast i8* %22 to i32*
  br label %32

25:                                               ; preds = %7
  %26 = icmp eq i32 %17, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %class.SkAutoSTMalloc, %class.SkAutoSTMalloc* %8, i64 0, i32 1, i32 0, i64 0
  %29 = getelementptr inbounds %class.SkAutoSTMalloc, %class.SkAutoSTMalloc* %8, i64 0, i32 0
  store i32* %28, i32** %29, align 8
  br label %32

30:                                               ; preds = %25
  %31 = getelementptr inbounds %class.SkAutoSTMalloc, %class.SkAutoSTMalloc* %8, i64 0, i32 0
  store i32* null, i32** %31, align 8
  br label %32

32:                                               ; preds = %21, %27, %30
  %33 = phi i32* [ %24, %21 ], [ %28, %27 ], [ null, %30 ]
  %34 = getelementptr inbounds %class.SkAutoSTMalloc, %class.SkAutoSTMalloc* %8, i64 0, i32 0
  %35 = getelementptr inbounds i32, i32* %33, i64 1
  store i32 %3, i32* %33, align 4
  %36 = bitcast i32* %35 to i8*
  %37 = bitcast %struct.SkRGBA4f* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 %37, i64 %11, i1 false)
  %38 = sext i32 %12 to i64
  %39 = getelementptr inbounds i32, i32* %35, i64 %38
  br i1 %14, label %40, label %208

40:                                               ; preds = %32
  %41 = zext i32 %3 to i64
  %42 = add nsw i64 %41, -1
  %43 = icmp ult i64 %42, 8
  br i1 %43, label %140, label %44

44:                                               ; preds = %40
  %45 = add nsw i64 %38, %41
  %46 = getelementptr i32, i32* %33, i64 %45
  %47 = getelementptr float, float* %2, i64 1
  %48 = getelementptr float, float* %2, i64 %41
  %49 = bitcast float* %48 to i32*
  %50 = icmp ult i32* %39, %49
  %51 = bitcast i32* %46 to float*
  %52 = icmp ult float* %47, %51
  %53 = and i1 %50, %52
  br i1 %53, label %140, label %54

54:                                               ; preds = %44
  %55 = and i64 %42, -8
  %56 = or i64 %55, 1
  %57 = getelementptr i32, i32* %39, i64 %55
  %58 = add nsw i64 %55, -8
  %59 = lshr exact i64 %58, 3
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 3
  %62 = icmp ult i64 %58, 24
  br i1 %62, label %118, label %63

63:                                               ; preds = %54
  %64 = sub nsw i64 %60, %61
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ 0, %63 ], [ %115, %65 ]
  %67 = phi i64 [ %64, %63 ], [ %116, %65 ]
  %68 = or i64 %66, 1
  %69 = getelementptr i32, i32* %39, i64 %66
  %70 = getelementptr inbounds float, float* %2, i64 %68
  %71 = bitcast float* %70 to <4 x i32>*
  %72 = load <4 x i32>, <4 x i32>* %71, align 4, !alias.scope !2
  %73 = getelementptr inbounds float, float* %70, i64 4
  %74 = bitcast float* %73 to <4 x i32>*
  %75 = load <4 x i32>, <4 x i32>* %74, align 4, !alias.scope !2
  %76 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> %72, <4 x i32>* %76, align 4, !alias.scope !5, !noalias !2
  %77 = getelementptr i32, i32* %69, i64 4
  %78 = bitcast i32* %77 to <4 x i32>*
  store <4 x i32> %75, <4 x i32>* %78, align 4, !alias.scope !5, !noalias !2
  %79 = or i64 %66, 8
  %80 = or i64 %66, 9
  %81 = getelementptr i32, i32* %39, i64 %79
  %82 = getelementptr inbounds float, float* %2, i64 %80
  %83 = bitcast float* %82 to <4 x i32>*
  %84 = load <4 x i32>, <4 x i32>* %83, align 4, !alias.scope !2
  %85 = getelementptr inbounds float, float* %82, i64 4
  %86 = bitcast float* %85 to <4 x i32>*
  %87 = load <4 x i32>, <4 x i32>* %86, align 4, !alias.scope !2
  %88 = bitcast i32* %81 to <4 x i32>*
  store <4 x i32> %84, <4 x i32>* %88, align 4, !alias.scope !5, !noalias !2
  %89 = getelementptr i32, i32* %81, i64 4
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> %87, <4 x i32>* %90, align 4, !alias.scope !5, !noalias !2
  %91 = or i64 %66, 16
  %92 = or i64 %66, 17
  %93 = getelementptr i32, i32* %39, i64 %91
  %94 = getelementptr inbounds float, float* %2, i64 %92
  %95 = bitcast float* %94 to <4 x i32>*
  %96 = load <4 x i32>, <4 x i32>* %95, align 4, !alias.scope !2
  %97 = getelementptr inbounds float, float* %94, i64 4
  %98 = bitcast float* %97 to <4 x i32>*
  %99 = load <4 x i32>, <4 x i32>* %98, align 4, !alias.scope !2
  %100 = bitcast i32* %93 to <4 x i32>*
  store <4 x i32> %96, <4 x i32>* %100, align 4, !alias.scope !5, !noalias !2
  %101 = getelementptr i32, i32* %93, i64 4
  %102 = bitcast i32* %101 to <4 x i32>*
  store <4 x i32> %99, <4 x i32>* %102, align 4, !alias.scope !5, !noalias !2
  %103 = or i64 %66, 24
  %104 = or i64 %66, 25
  %105 = getelementptr i32, i32* %39, i64 %103
  %106 = getelementptr inbounds float, float* %2, i64 %104
  %107 = bitcast float* %106 to <4 x i32>*
  %108 = load <4 x i32>, <4 x i32>* %107, align 4, !alias.scope !2
  %109 = getelementptr inbounds float, float* %106, i64 4
  %110 = bitcast float* %109 to <4 x i32>*
  %111 = load <4 x i32>, <4 x i32>* %110, align 4, !alias.scope !2
  %112 = bitcast i32* %105 to <4 x i32>*
  store <4 x i32> %108, <4 x i32>* %112, align 4, !alias.scope !5, !noalias !2
  %113 = getelementptr i32, i32* %105, i64 4
  %114 = bitcast i32* %113 to <4 x i32>*
  store <4 x i32> %111, <4 x i32>* %114, align 4, !alias.scope !5, !noalias !2
  %115 = add i64 %66, 32
  %116 = add i64 %67, -4
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %65, !llvm.loop !7

118:                                              ; preds = %65, %54
  %119 = phi i64 [ 0, %54 ], [ %115, %65 ]
  %120 = icmp eq i64 %61, 0
  br i1 %120, label %138, label %121

121:                                              ; preds = %118, %121
  %122 = phi i64 [ %135, %121 ], [ %119, %118 ]
  %123 = phi i64 [ %136, %121 ], [ %61, %118 ]
  %124 = or i64 %122, 1
  %125 = getelementptr i32, i32* %39, i64 %122
  %126 = getelementptr inbounds float, float* %2, i64 %124
  %127 = bitcast float* %126 to <4 x i32>*
  %128 = load <4 x i32>, <4 x i32>* %127, align 4, !alias.scope !2
  %129 = getelementptr inbounds float, float* %126, i64 4
  %130 = bitcast float* %129 to <4 x i32>*
  %131 = load <4 x i32>, <4 x i32>* %130, align 4, !alias.scope !2
  %132 = bitcast i32* %125 to <4 x i32>*
  store <4 x i32> %128, <4 x i32>* %132, align 4, !alias.scope !5, !noalias !2
  %133 = getelementptr i32, i32* %125, i64 4
  %134 = bitcast i32* %133 to <4 x i32>*
  store <4 x i32> %131, <4 x i32>* %134, align 4, !alias.scope !5, !noalias !2
  %135 = add i64 %122, 8
  %136 = add i64 %123, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %121, !llvm.loop !9

138:                                              ; preds = %121, %118
  %139 = icmp eq i64 %42, %55
  br i1 %139, label %208, label %140

140:                                              ; preds = %138, %44, %40
  %141 = phi i64 [ 1, %44 ], [ 1, %40 ], [ %56, %138 ]
  %142 = phi i32* [ %39, %44 ], [ %39, %40 ], [ %57, %138 ]
  %143 = sub nsw i64 %41, %141
  %144 = xor i64 %141, -1
  %145 = add nsw i64 %144, %41
  %146 = and i64 %143, 7
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %159, label %148

148:                                              ; preds = %140, %148
  %149 = phi i64 [ %156, %148 ], [ %141, %140 ]
  %150 = phi i32* [ %155, %148 ], [ %142, %140 ]
  %151 = phi i64 [ %157, %148 ], [ %146, %140 ]
  %152 = getelementptr inbounds float, float* %2, i64 %149
  %153 = bitcast float* %152 to i32*
  %154 = load i32, i32* %153, align 4
  %155 = getelementptr inbounds i32, i32* %150, i64 1
  store i32 %154, i32* %150, align 4
  %156 = add nuw nsw i64 %149, 1
  %157 = add i64 %151, -1
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %159, label %148, !llvm.loop !11

159:                                              ; preds = %148, %140
  %160 = phi i32* [ undef, %140 ], [ %155, %148 ]
  %161 = phi i64 [ %141, %140 ], [ %156, %148 ]
  %162 = phi i32* [ %142, %140 ], [ %155, %148 ]
  %163 = icmp ult i64 %145, 7
  br i1 %163, label %208, label %164

164:                                              ; preds = %159, %164
  %165 = phi i64 [ %206, %164 ], [ %161, %159 ]
  %166 = phi i32* [ %205, %164 ], [ %162, %159 ]
  %167 = getelementptr inbounds float, float* %2, i64 %165
  %168 = bitcast float* %167 to i32*
  %169 = load i32, i32* %168, align 4
  %170 = getelementptr inbounds i32, i32* %166, i64 1
  store i32 %169, i32* %166, align 4
  %171 = add nuw nsw i64 %165, 1
  %172 = getelementptr inbounds float, float* %2, i64 %171
  %173 = bitcast float* %172 to i32*
  %174 = load i32, i32* %173, align 4
  %175 = getelementptr inbounds i32, i32* %166, i64 2
  store i32 %174, i32* %170, align 4
  %176 = add nuw nsw i64 %165, 2
  %177 = getelementptr inbounds float, float* %2, i64 %176
  %178 = bitcast float* %177 to i32*
  %179 = load i32, i32* %178, align 4
  %180 = getelementptr inbounds i32, i32* %166, i64 3
  store i32 %179, i32* %175, align 4
  %181 = add nuw nsw i64 %165, 3
  %182 = getelementptr inbounds float, float* %2, i64 %181
  %183 = bitcast float* %182 to i32*
  %184 = load i32, i32* %183, align 4
  %185 = getelementptr inbounds i32, i32* %166, i64 4
  store i32 %184, i32* %180, align 4
  %186 = add nuw nsw i64 %165, 4
  %187 = getelementptr inbounds float, float* %2, i64 %186
  %188 = bitcast float* %187 to i32*
  %189 = load i32, i32* %188, align 4
  %190 = getelementptr inbounds i32, i32* %166, i64 5
  store i32 %189, i32* %185, align 4
  %191 = add nuw nsw i64 %165, 5
  %192 = getelementptr inbounds float, float* %2, i64 %191
  %193 = bitcast float* %192 to i32*
  %194 = load i32, i32* %193, align 4
  %195 = getelementptr inbounds i32, i32* %166, i64 6
  store i32 %194, i32* %190, align 4
  %196 = add nuw nsw i64 %165, 6
  %197 = getelementptr inbounds float, float* %2, i64 %196
  %198 = bitcast float* %197 to i32*
  %199 = load i32, i32* %198, align 4
  %200 = getelementptr inbounds i32, i32* %166, i64 7
  store i32 %199, i32* %195, align 4
  %201 = add nuw nsw i64 %165, 7
  %202 = getelementptr inbounds float, float* %2, i64 %201
  %203 = bitcast float* %202 to i32*
  %204 = load i32, i32* %203, align 4
  %205 = getelementptr inbounds i32, i32* %166, i64 8
  store i32 %204, i32* %200, align 4
  %206 = add nuw nsw i64 %165, 8
  %207 = icmp eq i64 %206, %41
  br i1 %207, label %208, label %164, !llvm.loop !12

208:                                              ; preds = %159, %164, %138, %32
  %209 = phi i32* [ %39, %32 ], [ %57, %138 ], [ %160, %159 ], [ %205, %164 ]
  %210 = getelementptr inbounds i32, i32* %209, i64 1
  store i32 %5, i32* %209, align 4
  store i32 %4, i32* %210, align 4
  %211 = getelementptr inbounds %class.GrGradientBitmapCache, %class.GrGradientBitmapCache* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = atomicrmw sub i32* %211, i32 1 acquire
  %213 = icmp slt i32 %212, 1
  br i1 %213, label %214, label %216

214:                                              ; preds = %208
  %215 = getelementptr inbounds %class.GrGradientBitmapCache, %class.GrGradientBitmapCache* %0, i64 0, i32 0, i32 0
  call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %215) #11
  br label %216

216:                                              ; preds = %208, %214
  %217 = shl nsw i64 %19, 2
  %218 = bitcast %class.SkAutoSTMalloc* %8 to i8**
  %219 = load i8*, i8** %218, align 8
  %220 = getelementptr inbounds %class.GrGradientBitmapCache, %class.GrGradientBitmapCache* %0, i64 0, i32 4
  %221 = load %"struct.GrGradientBitmapCache::Entry"*, %"struct.GrGradientBitmapCache::Entry"** %220, align 8
  %222 = icmp eq %"struct.GrGradientBitmapCache::Entry"* %221, null
  br i1 %222, label %267, label %223

223:                                              ; preds = %216, %263
  %224 = phi %"struct.GrGradientBitmapCache::Entry"* [ %265, %263 ], [ %221, %216 ]
  %225 = getelementptr inbounds %"struct.GrGradientBitmapCache::Entry", %"struct.GrGradientBitmapCache::Entry"* %224, i64 0, i32 3
  %226 = load i64, i64* %225, align 8
  %227 = icmp eq i64 %226, %217
  br i1 %227, label %228, label %263

228:                                              ; preds = %223
  %229 = getelementptr inbounds %"struct.GrGradientBitmapCache::Entry", %"struct.GrGradientBitmapCache::Entry"* %224, i64 0, i32 2
  %230 = load i8*, i8** %229, align 8
  %231 = call i32 @bcmp(i8* %230, i8* %219, i64 %217) #11
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %233, label %263

233:                                              ; preds = %228
  %234 = icmp eq %class.SkBitmap* %6, null
  br i1 %234, label %238, label %235

235:                                              ; preds = %233
  %236 = getelementptr inbounds %"struct.GrGradientBitmapCache::Entry", %"struct.GrGradientBitmapCache::Entry"* %224, i64 0, i32 4
  %237 = call dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSERKS_(%class.SkBitmap* nonnull %6, %class.SkBitmap* dereferenceable(56) %236) #11
  br label %238

238:                                              ; preds = %235, %233
  %239 = getelementptr inbounds %"struct.GrGradientBitmapCache::Entry", %"struct.GrGradientBitmapCache::Entry"* %224, i64 0, i32 0
  %240 = load %"struct.GrGradientBitmapCache::Entry"*, %"struct.GrGradientBitmapCache::Entry"** %239, align 8
  %241 = icmp eq %"struct.GrGradientBitmapCache::Entry"* %240, null
  %242 = getelementptr inbounds %"struct.GrGradientBitmapCache::Entry", %"struct.GrGradientBitmapCache::Entry"* %224, i64 0, i32 1
  %243 = bitcast %"struct.GrGradientBitmapCache::Entry"** %242 to i64*
  %244 = load i64, i64* %243, align 8
  %245 = getelementptr inbounds %"struct.GrGradientBitmapCache::Entry", %"struct.GrGradientBitmapCache::Entry"* %240, i64 0, i32 1
  %246 = select i1 %241, %"struct.GrGradientBitmapCache::Entry"** %220, %"struct.GrGradientBitmapCache::Entry"** %245
  %247 = bitcast %"struct.GrGradientBitmapCache::Entry"** %246 to i64*
  store i64 %244, i64* %247, align 8
  %248 = load %"struct.GrGradientBitmapCache::Entry"*, %"struct.GrGradientBitmapCache::Entry"** %242, align 8
  %249 = icmp eq %"struct.GrGradientBitmapCache::Entry"* %248, null
  %250 = bitcast %"struct.GrGradientBitmapCache::Entry"* %224 to i64*
  %251 = load i64, i64* %250, align 8
  %252 = getelementptr inbounds %class.GrGradientBitmapCache, %class.GrGradientBitmapCache* %0, i64 0, i32 5
  %253 = bitcast %"struct.GrGradientBitmapCache::Entry"** %252 to i64*
  %254 = bitcast %"struct.GrGradientBitmapCache::Entry"* %248 to i64*
  %255 = select i1 %249, i64* %253, i64* %254
  store i64 %251, i64* %255, align 8
  store %"struct.GrGradientBitmapCache::Entry"* null, %"struct.GrGradientBitmapCache::Entry"** %239, align 8
  %256 = bitcast %"struct.GrGradientBitmapCache::Entry"** %220 to i64*
  %257 = load i64, i64* %256, align 8
  store i64 %257, i64* %243, align 8
  %258 = load %"struct.GrGradientBitmapCache::Entry"*, %"struct.GrGradientBitmapCache::Entry"** %220, align 8
  %259 = icmp eq %"struct.GrGradientBitmapCache::Entry"* %258, null
  %260 = getelementptr inbounds %"struct.GrGradientBitmapCache::Entry", %"struct.GrGradientBitmapCache::Entry"* %258, i64 0, i32 0
  %261 = getelementptr inbounds %class.GrGradientBitmapCache, %class.GrGradientBitmapCache* %0, i64 0, i32 5
  %262 = select i1 %259, %"struct.GrGradientBitmapCache::Entry"** %261, %"struct.GrGradientBitmapCache::Entry"** %260
  store %"struct.GrGradientBitmapCache::Entry"* %224, %"struct.GrGradientBitmapCache::Entry"** %262, align 8
  store %"struct.GrGradientBitmapCache::Entry"* %224, %"struct.GrGradientBitmapCache::Entry"** %220, align 8
  br label %293

263:                                              ; preds = %228, %223
  %264 = getelementptr inbounds %"struct.GrGradientBitmapCache::Entry", %"struct.GrGradientBitmapCache::Entry"* %224, i64 0, i32 1
  %265 = load %"struct.GrGradientBitmapCache::Entry"*, %"struct.GrGradientBitmapCache::Entry"** %264, align 8
  %266 = icmp eq %"struct.GrGradientBitmapCache::Entry"* %265, null
  br i1 %266, label %267, label %223

267:                                              ; preds = %263, %216
  %268 = bitcast %struct.SkImageInfo* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %268) #11
  %269 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %9, i64 0, i32 0, i32 0, i32 0
  %270 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %9, i64 0, i32 0, i32 1
  %271 = getelementptr inbounds %class.GrGradientBitmapCache, %class.GrGradientBitmapCache* %0, i64 0, i32 3
  %272 = load i32, i32* %271, align 8
  %273 = zext i32 %4 to i64
  %274 = zext i32 %5 to i64
  %275 = shl nuw i64 %274, 32
  %276 = or i64 %275, %273
  %277 = zext i32 %272 to i64
  %278 = or i64 %277, 4294967296
  %279 = bitcast %struct.SkImageInfo* %9 to i64*
  store i64 0, i64* %279, align 8, !alias.scope !13
  %280 = bitcast i32* %270 to i64*
  store i64 %276, i64* %280, align 8, !alias.scope !13
  %281 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %9, i64 0, i32 1
  %282 = bitcast %struct.SkISize* %281 to i64*
  store i64 %278, i64* %282, align 8, !alias.scope !13
  call void @_ZN8SkBitmap11allocPixelsERK11SkImageInfo(%class.SkBitmap* %6, %struct.SkImageInfo* nonnull dereferenceable(24) %9) #11
  call void @_ZN21GrGradientBitmapCache12fillGradientEPK8SkRGBA4fIL11SkAlphaType2EEPKfi11SkColorTypeP8SkBitmap(%class.GrGradientBitmapCache* %0, %struct.SkRGBA4f* %1, float* %2, i32 %3, i32 %4, %class.SkBitmap* %6)
  call void @_ZN8SkBitmap12setImmutableEv(%class.SkBitmap* %6) #11
  %283 = load i8*, i8** %218, align 8
  call void @_ZN21GrGradientBitmapCache3addEPKvmRK8SkBitmap(%class.GrGradientBitmapCache* %0, i8* %283, i64 %217, %class.SkBitmap* dereferenceable(56) %6)
  %284 = load %class.SkColorSpace*, %class.SkColorSpace** %269, align 8
  %285 = icmp eq %class.SkColorSpace* %284, null
  br i1 %285, label %292, label %286

286:                                              ; preds = %267
  %287 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %284, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %288 = atomicrmw add i32* %287, i32 -1 acq_rel
  %289 = icmp eq i32 %288, 1
  br i1 %289, label %290, label %292

290:                                              ; preds = %286
  %291 = bitcast %class.SkColorSpace* %284 to i8*
  call void @_ZdlPv(i8* %291) #12
  br label %292

292:                                              ; preds = %267, %286, %290
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %268) #11
  br label %293

293:                                              ; preds = %238, %292
  %294 = atomicrmw add i32* %211, i32 1 release
  %295 = icmp slt i32 %294, 0
  br i1 %295, label %296, label %298

296:                                              ; preds = %293
  %297 = getelementptr inbounds %class.GrGradientBitmapCache, %class.GrGradientBitmapCache* %0, i64 0, i32 0, i32 0
  call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %297, i32 1) #11
  br label %298

298:                                              ; preds = %293, %296
  %299 = load i32*, i32** %34, align 8
  %300 = getelementptr inbounds %class.SkAutoSTMalloc, %class.SkAutoSTMalloc* %8, i64 0, i32 1, i32 0, i64 0
  %301 = icmp eq i32* %299, %300
  br i1 %301, label %304, label %302

302:                                              ; preds = %298
  %303 = bitcast i32* %299 to i8*
  call void @_Z7sk_freePv(i8* %303) #11
  br label %304

304:                                              ; preds = %298, %302
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %18) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN8SkBitmap11allocPixelsERK11SkImageInfo(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24)) local_unnamed_addr #4

declare void @_ZN8SkBitmap12setImmutableEv(%class.SkBitmap*) local_unnamed_addr #4

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN11SkSemaphoreD1Ev(%class.SkSemaphore*) unnamed_addr #7

declare void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) unnamed_addr #4

declare i8* @_Z15sk_malloc_flagsmj(i64, i32) local_unnamed_addr #4

declare void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore*) local_unnamed_addr #4

declare void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore*, i32) local_unnamed_addr #4

; Function Attrs: nofree nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvRKN12_GLOBAL__N_14SkNxILi4EfEEiEE11__call_implINS0_20__default_alloc_funcIZN21GrGradientBitmapCache12fillGradientEPK8SkRGBA4fIL11SkAlphaType2EEPKfi11SkColorTypeP8SkBitmapE3$_0S7_EEEEvPKNS0_16__policy_storageES6_i"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.(anonymous namespace)::SkNx"* nocapture readonly dereferenceable(16), i32) #8 align 2 {
  %4 = bitcast %"class.(anonymous namespace)::SkNx"* %1 to <4 x i32>*
  %5 = load <4 x i32>, <4 x i32>* %4, align 1
  %6 = and <4 x i32> %5, <i32 2147475456, i32 2147475456, i32 2147475456, i32 2147475456>
  %7 = icmp ugt <4 x i32> %6, <i32 947904511, i32 947904511, i32 947904511, i32 947904511>
  %8 = add <4 x i32> %5, <i32 134217728, i32 134217728, i32 134217728, i32 134217728>
  %9 = lshr <4 x i32> %8, <i32 13, i32 13, i32 13, i32 13>
  %10 = shl <4 x i32> %9, <i32 16, i32 16, i32 16, i32 16>
  %11 = select <4 x i1> %7, <4 x i32> %10, <4 x i32> zeroinitializer
  %12 = and <4 x i32> %5, <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>
  %13 = or <4 x i32> %11, %12
  %14 = ashr exact <4 x i32> %13, <i32 16, i32 16, i32 16, i32 16>
  %15 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %14, <4 x i32> %14) #11
  %16 = extractelement <8 x i16> %15, i32 0
  %17 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to i16***
  %18 = load i16**, i16*** %17, align 8
  %19 = load i16*, i16** %18, align 8
  %20 = shl nsw i32 %2, 2
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds i16, i16* %19, i64 %21
  store i16 %16, i16* %22, align 2
  %23 = extractelement <8 x i16> %15, i32 1
  %24 = load i16**, i16*** %17, align 8
  %25 = load i16*, i16** %24, align 8
  %26 = or i32 %20, 1
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds i16, i16* %25, i64 %27
  store i16 %23, i16* %28, align 2
  %29 = extractelement <8 x i16> %15, i32 2
  %30 = load i16**, i16*** %17, align 8
  %31 = load i16*, i16** %30, align 8
  %32 = or i32 %20, 2
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds i16, i16* %31, i64 %33
  store i16 %29, i16* %34, align 2
  %35 = extractelement <8 x i16> %15, i32 3
  %36 = load i16**, i16*** %17, align 8
  %37 = load i16*, i16** %36, align 8
  %38 = or i32 %20, 3
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %37, i64 %39
  store i16 %35, i16* %40, align 2
  ret void
}

; Function Attrs: nounwind readnone
declare <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32>, <4 x i32>) #9

; Function Attrs: nofree nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvRKN12_GLOBAL__N_14SkNxILi4EfEEiEE11__call_implINS0_20__default_alloc_funcIZN21GrGradientBitmapCache12fillGradientEPK8SkRGBA4fIL11SkAlphaType2EEPKfi11SkColorTypeP8SkBitmapE3$_1S7_EEEEvPKNS0_16__policy_storageES6_i"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.(anonymous namespace)::SkNx"* nocapture readonly dereferenceable(16), i32) #8 align 2 {
  %4 = getelementptr inbounds %"class.(anonymous namespace)::SkNx", %"class.(anonymous namespace)::SkNx"* %1, i64 0, i32 0
  %5 = load <4 x float>, <4 x float>* %4, align 16
  %6 = fmul <4 x float> %5, <float 2.550000e+02, float 2.550000e+02, float 2.550000e+02, float 2.550000e+02>
  %7 = tail call <4 x i32> @llvm.x86.sse2.cvtps2dq(<4 x float> %6) #11
  %8 = bitcast <4 x i32> %7 to <8 x i16>
  %9 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %8, <8 x i16> undef) #11
  %10 = bitcast <16 x i8> %9 to <8 x i16>
  %11 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %10, <8 x i16> undef) #11
  %12 = bitcast <16 x i8> %11 to <4 x i32>
  %13 = extractelement <4 x i32> %12, i32 0
  %14 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to i32***
  %15 = load i32**, i32*** %14, align 8
  %16 = load i32*, i32** %15, align 8
  %17 = sext i32 %2 to i64
  %18 = getelementptr inbounds i32, i32* %16, i64 %17
  store i32 %13, i32* %18, align 4
  ret void
}

; Function Attrs: nounwind readnone
declare <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16>, <8 x i16>) #9

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.x86.sse2.cvtps2dq(<4 x float>) #9

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #4

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #10

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone }
attributes #10 = { nofree nounwind readonly }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZN11SkImageInfo4MakeEii11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!15 = distinct !{!15, !"_ZN11SkImageInfo4MakeEii11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
