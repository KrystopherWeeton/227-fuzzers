; ModuleID = '../../components/sync/engine/sync_manager.cc'
source_filename = "../../components/sync/engine/sync_manager.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.syncer::SyncManager::Observer" = type { i32 (...)** }
%"struct.syncer::SyncManager::InitArgs" = type { %class.GURL, i8, %"class.base::FilePath", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.10", %"class.syncer::ExtensionsActivity"*, %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.16", %"class.syncer::SyncEncryptionHandler"*, %"class.syncer::CancelationSignal"*, %"class.base::TimeDelta", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.syncer::HttpPostProviderFactory"* }
%"class.syncer::HttpPostProviderFactory" = type { i32 (...)** }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.syncer::SyncEncryptionHandler::Observer"* }
%"class.syncer::SyncEncryptionHandler::Observer" = type { i32 (...)** }
%"class.syncer::ExtensionsActivity" = type opaque
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.syncer::EngineComponentsFactory"* }
%"class.syncer::EngineComponentsFactory" = type { i32 (...)** }
%"class.syncer::SyncEncryptionHandler" = type { i32 (...)** }
%"class.syncer::CancelationSignal" = type opaque
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.syncer::SyncManager" = type { i32 (...)** }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZTVN6syncer11SyncManagerE = hidden unnamed_addr constant { [31 x i8*] } { [31 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.syncer::SyncManager"*)* @_ZN6syncer11SyncManagerD2Ev to i8*), i8* bitcast (void (%"class.syncer::SyncManager"*)* @_ZN6syncer11SyncManagerD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN6syncer11SyncManager8ObserverE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.syncer::SyncManager::Observer"*)* @_ZN6syncer11SyncManager8ObserverD2Ev to i8*), i8* bitcast (void (%"class.syncer::SyncManager::Observer"*)* @_ZN6syncer11SyncManager8ObserverD0Ev to i8*)] }, align 8

@_ZN6syncer11SyncManager8ObserverD1Ev = hidden unnamed_addr alias void (%"class.syncer::SyncManager::Observer"*), void (%"class.syncer::SyncManager::Observer"*)* @_ZN6syncer11SyncManager8ObserverD2Ev
@_ZN6syncer11SyncManager8InitArgsC1Ev = hidden unnamed_addr alias void (%"struct.syncer::SyncManager::InitArgs"*), void (%"struct.syncer::SyncManager::InitArgs"*)* @_ZN6syncer11SyncManager8InitArgsC2Ev
@_ZN6syncer11SyncManager8InitArgsD1Ev = hidden unnamed_addr alias void (%"struct.syncer::SyncManager::InitArgs"*), void (%"struct.syncer::SyncManager::InitArgs"*)* @_ZN6syncer11SyncManager8InitArgsD2Ev
@_ZN6syncer11SyncManagerD1Ev = hidden unnamed_addr alias void (%"class.syncer::SyncManager"*), void (%"class.syncer::SyncManager"*)* @_ZN6syncer11SyncManagerD2Ev

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6syncer11SyncManager8ObserverD2Ev(%"class.syncer::SyncManager::Observer"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN6syncer11SyncManager8ObserverD0Ev(%"class.syncer::SyncManager::Observer"* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @llvm.trap() #9
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6syncer11SyncManager8InitArgsC2Ev(%"struct.syncer::SyncManager::InitArgs"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"struct.syncer::SyncManager::InitArgs", %"struct.syncer::SyncManager::InitArgs"* %0, i64 0, i32 0
  tail call void @_ZN4GURLC1Ev(%class.GURL* %2) #10
  %3 = getelementptr inbounds %"struct.syncer::SyncManager::InitArgs", %"struct.syncer::SyncManager::InitArgs"* %0, i64 0, i32 1
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %"struct.syncer::SyncManager::InitArgs", %"struct.syncer::SyncManager::InitArgs"* %0, i64 0, i32 2
  tail call void @_ZN4base8FilePathC1Ev(%"class.base::FilePath"* %4) #10
  %5 = getelementptr inbounds %"struct.syncer::SyncManager::InitArgs", %"struct.syncer::SyncManager::InitArgs"* %0, i64 0, i32 3
  %6 = bitcast %"class.std::__1::unique_ptr.4"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 152, i1 false)
  ret void
}

declare void @_ZN4GURLC1Ev(%class.GURL*) unnamed_addr #4

declare void @_ZN4base8FilePathC1Ev(%"class.base::FilePath"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6syncer11SyncManager8InitArgsD2Ev(%"struct.syncer::SyncManager::InitArgs"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"struct.syncer::SyncManager::InitArgs", %"struct.syncer::SyncManager::InitArgs"* %0, i64 0, i32 13
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #11
  br label %10

10:                                               ; preds = %1, %7
  %11 = getelementptr inbounds %"struct.syncer::SyncManager::InitArgs", %"struct.syncer::SyncManager::InitArgs"* %0, i64 0, i32 12
  %12 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  tail call void @_ZdlPv(i8* %18) #11
  br label %19

19:                                               ; preds = %10, %16
  %20 = getelementptr inbounds %"struct.syncer::SyncManager::InitArgs", %"struct.syncer::SyncManager::InitArgs"* %0, i64 0, i32 11
  %21 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  tail call void @_ZdlPv(i8* %27) #11
  br label %28

28:                                               ; preds = %19, %25
  %29 = getelementptr inbounds %"struct.syncer::SyncManager::InitArgs", %"struct.syncer::SyncManager::InitArgs"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %30 = load %"class.syncer::EngineComponentsFactory"*, %"class.syncer::EngineComponentsFactory"** %29, align 8
  store %"class.syncer::EngineComponentsFactory"* null, %"class.syncer::EngineComponentsFactory"** %29, align 8
  %31 = icmp eq %"class.syncer::EngineComponentsFactory"* %30, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %28
  %33 = bitcast %"class.syncer::EngineComponentsFactory"* %30 to void (%"class.syncer::EngineComponentsFactory"*)***
  %34 = load void (%"class.syncer::EngineComponentsFactory"*)**, void (%"class.syncer::EngineComponentsFactory"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.syncer::EngineComponentsFactory"*)*, void (%"class.syncer::EngineComponentsFactory"*)** %34, i64 1
  %36 = load void (%"class.syncer::EngineComponentsFactory"*)*, void (%"class.syncer::EngineComponentsFactory"*)** %35, align 8
  tail call void %36(%"class.syncer::EngineComponentsFactory"* nonnull %30) #10
  br label %37

37:                                               ; preds = %28, %32
  %38 = getelementptr inbounds %"struct.syncer::SyncManager::InitArgs", %"struct.syncer::SyncManager::InitArgs"* %0, i64 0, i32 6
  %39 = bitcast %"class.std::__1::basic_string"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  tail call void @_ZdlPv(i8* %45) #11
  br label %46

46:                                               ; preds = %37, %43
  %47 = getelementptr inbounds %"struct.syncer::SyncManager::InitArgs", %"struct.syncer::SyncManager::InitArgs"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %48 = load %"class.syncer::SyncEncryptionHandler::Observer"*, %"class.syncer::SyncEncryptionHandler::Observer"** %47, align 8
  store %"class.syncer::SyncEncryptionHandler::Observer"* null, %"class.syncer::SyncEncryptionHandler::Observer"** %47, align 8
  %49 = icmp eq %"class.syncer::SyncEncryptionHandler::Observer"* %48, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %46
  %51 = bitcast %"class.syncer::SyncEncryptionHandler::Observer"* %48 to void (%"class.syncer::SyncEncryptionHandler::Observer"*)***
  %52 = load void (%"class.syncer::SyncEncryptionHandler::Observer"*)**, void (%"class.syncer::SyncEncryptionHandler::Observer"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.syncer::SyncEncryptionHandler::Observer"*)*, void (%"class.syncer::SyncEncryptionHandler::Observer"*)** %52, i64 1
  %54 = load void (%"class.syncer::SyncEncryptionHandler::Observer"*)*, void (%"class.syncer::SyncEncryptionHandler::Observer"*)** %53, align 8
  tail call void %54(%"class.syncer::SyncEncryptionHandler::Observer"* nonnull %48) #10
  br label %55

55:                                               ; preds = %46, %50
  %56 = getelementptr inbounds %"struct.syncer::SyncManager::InitArgs", %"struct.syncer::SyncManager::InitArgs"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %57 = load %"class.syncer::HttpPostProviderFactory"*, %"class.syncer::HttpPostProviderFactory"** %56, align 8
  store %"class.syncer::HttpPostProviderFactory"* null, %"class.syncer::HttpPostProviderFactory"** %56, align 8
  %58 = icmp eq %"class.syncer::HttpPostProviderFactory"* %57, null
  br i1 %58, label %64, label %59

59:                                               ; preds = %55
  %60 = bitcast %"class.syncer::HttpPostProviderFactory"* %57 to void (%"class.syncer::HttpPostProviderFactory"*)***
  %61 = load void (%"class.syncer::HttpPostProviderFactory"*)**, void (%"class.syncer::HttpPostProviderFactory"*)*** %60, align 8
  %62 = getelementptr inbounds void (%"class.syncer::HttpPostProviderFactory"*)*, void (%"class.syncer::HttpPostProviderFactory"*)** %61, i64 1
  %63 = load void (%"class.syncer::HttpPostProviderFactory"*)*, void (%"class.syncer::HttpPostProviderFactory"*)** %62, align 8
  tail call void %63(%"class.syncer::HttpPostProviderFactory"* nonnull %57) #10
  br label %64

64:                                               ; preds = %55, %59
  %65 = getelementptr inbounds %"struct.syncer::SyncManager::InitArgs", %"struct.syncer::SyncManager::InitArgs"* %0, i64 0, i32 2
  tail call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* %65) #10
  %66 = getelementptr inbounds %"struct.syncer::SyncManager::InitArgs", %"struct.syncer::SyncManager::InitArgs"* %0, i64 0, i32 0
  tail call void @_ZN4GURLD1Ev(%class.GURL* %66) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #5

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6syncer11SyncManagerC2Ev(%"class.syncer::SyncManager"* nocapture) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.syncer::SyncManager", %"class.syncer::SyncManager"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*] }, { [31 x i8*] }* @_ZTVN6syncer11SyncManagerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6syncer11SyncManagerD2Ev(%"class.syncer::SyncManager"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN6syncer11SyncManagerD0Ev(%"class.syncer::SyncManager"* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @llvm.trap() #9
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #8

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
