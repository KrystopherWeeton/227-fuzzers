; ModuleID = '../../third_party/boringssl/src/crypto/x509/x509_lu.c'
source_filename = "../../third_party/boringssl/src/crypto/x509/x509_lu.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.x509_cinf_st = type { %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.X509_algor_st*, %struct.X509_name_st*, %struct.X509_val_st*, %struct.X509_name_st*, %struct.X509_pubkey_st*, %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.stack_st_X509_EXTENSION*, %struct.ASN1_ENCODING_st }
%struct.X509_val_st = type opaque
%struct.X509_name_st = type { %struct.stack_st_X509_NAME_ENTRY*, i32, %struct.buf_mem_st*, i8*, i32 }
%struct.stack_st_X509_NAME_ENTRY = type opaque
%struct.buf_mem_st = type { i64, i8*, i64 }
%struct.X509_pubkey_st = type opaque
%struct.stack_st_X509_EXTENSION = type opaque
%struct.ASN1_ENCODING_st = type { i8*, i64, i32, i8 }
%struct.X509_algor_st = type { %struct.asn1_object_st*, %struct.asn1_type_st* }
%struct.asn1_object_st = type { i8*, i8*, i32, i32, i8*, i32 }
%struct.asn1_type_st = type { i32, %union.anon.0 }
%union.anon.0 = type { i8* }
%struct.crypto_ex_data_st = type { %struct.stack_st_void* }
%struct.stack_st_void = type opaque
%struct.asn1_string_st = type { i32, i32, i8*, i64 }
%struct.AUTHORITY_KEYID_st = type { %struct.asn1_string_st*, %struct.stack_st_GENERAL_NAME*, %struct.asn1_string_st* }
%struct.X509_POLICY_CACHE_st = type opaque
%struct.stack_st_DIST_POINT = type opaque
%struct.stack_st_GENERAL_NAME = type opaque
%struct.NAME_CONSTRAINTS_st = type { %struct.stack_st_GENERAL_SUBTREE*, %struct.stack_st_GENERAL_SUBTREE* }
%struct.stack_st_GENERAL_SUBTREE = type opaque
%struct.x509_cert_aux_st = type opaque
%struct.crypto_buffer_st = type opaque
%union.crypto_mutex_st = type { double, [48 x i8] }
%struct.x509_lookup_st = type { i32, i32, %struct.x509_lookup_method_st*, i8*, %struct.x509_store_st* }
%struct.x509_store_st = type { i32, %struct.stack_st_X509_OBJECT*, %union.crypto_mutex_st, %struct.stack_st_X509*, %struct.stack_st_X509_LOOKUP*, %struct.X509_VERIFY_PARAM_st*, i32 (%struct.x509_store_ctx_st*)*, i32 (i32, %struct.x509_store_ctx_st*)*, i32 (%struct.x509_st**, %struct.x509_store_ctx_st*, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.x509_st*, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st**, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*, %struct.x509_st*)*, %struct.stack_st_X509* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, %struct.stack_st_X509_CRL* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, i32 (%struct.x509_store_ctx_st*)*, i32 }
%struct.stack_st_X509_OBJECT = type opaque
%struct.stack_st_X509 = type opaque
%struct.stack_st_X509_LOOKUP = type opaque
%struct.X509_VERIFY_PARAM_st = type { i8*, i64, i64, i64, i32, i32, i32, %struct.stack_st_ASN1_OBJECT*, %struct.X509_VERIFY_PARAM_ID_st* }
%struct.stack_st_ASN1_OBJECT = type opaque
%struct.X509_VERIFY_PARAM_ID_st = type opaque
%struct.x509_store_ctx_st = type { %struct.x509_store_st*, %struct.x509_st*, %struct.stack_st_X509*, %struct.stack_st_X509_CRL*, %struct.X509_VERIFY_PARAM_st*, i8*, {}*, i32 (i32, %struct.x509_store_ctx_st*)*, i32 (%struct.x509_st**, %struct.x509_store_ctx_st*, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.x509_st*, %struct.x509_st*)*, {}*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st**, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*, %struct.x509_st*)*, {}*, %struct.stack_st_X509* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, %struct.stack_st_X509_CRL* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, {}*, i32, i32, %struct.stack_st_X509*, %struct.X509_POLICY_TREE_st*, i32, i32, i32, %struct.x509_st*, %struct.x509_st*, %struct.X509_crl_st*, i32, i32, %struct.x509_store_ctx_st*, %struct.crypto_ex_data_st }
%struct.stack_st_X509_CRL = type opaque
%struct.X509_POLICY_TREE_st = type opaque
%struct.x509_st = type { %struct.x509_cinf_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, %struct.crypto_ex_data_st, i64, i64, i64, i64, i64, i64, %struct.asn1_string_st*, %struct.AUTHORITY_KEYID_st*, %struct.X509_POLICY_CACHE_st*, %struct.stack_st_DIST_POINT*, %struct.stack_st_GENERAL_NAME*, %struct.NAME_CONSTRAINTS_st*, [20 x i8], %struct.x509_cert_aux_st*, %struct.crypto_buffer_st*, %union.crypto_mutex_st }
%struct.X509_crl_st = type { %struct.X509_crl_info_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, i32, %struct.AUTHORITY_KEYID_st*, %struct.ISSUING_DIST_POINT_st*, i32, i32, %struct.asn1_string_st*, %struct.asn1_string_st*, [20 x i8], %struct.stack_st_GENERAL_NAMES*, %struct.x509_crl_method_st*, i8* }
%struct.X509_crl_info_st = type { %struct.asn1_string_st*, %struct.X509_algor_st*, %struct.X509_name_st*, %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.stack_st_X509_REVOKED*, %struct.stack_st_X509_EXTENSION*, %struct.ASN1_ENCODING_st }
%struct.stack_st_X509_REVOKED = type opaque
%struct.ISSUING_DIST_POINT_st = type { %struct.DIST_POINT_NAME_st*, i32, i32, %struct.asn1_string_st*, i32, i32 }
%struct.DIST_POINT_NAME_st = type { i32, %union.anon.1, %struct.X509_name_st* }
%union.anon.1 = type { %struct.stack_st_GENERAL_NAME* }
%struct.stack_st_GENERAL_NAMES = type opaque
%struct.x509_crl_method_st = type opaque
%struct.x509_lookup_method_st = type { i8*, i32 (%struct.x509_lookup_st*)*, void (%struct.x509_lookup_st*)*, i32 (%struct.x509_lookup_st*)*, i32 (%struct.x509_lookup_st*)*, i32 (%struct.x509_lookup_st*, i32, i8*, i64, i8**)*, i32 (%struct.x509_lookup_st*, i32, %struct.X509_name_st*, %struct.x509_object_st*)*, i32 (%struct.x509_lookup_st*, i32, %struct.X509_name_st*, %struct.asn1_string_st*, %struct.x509_object_st*)*, i32 (%struct.x509_lookup_st*, i32, i8*, i32, %struct.x509_object_st*)*, i32 (%struct.x509_lookup_st*, i32, i8*, i32, %struct.x509_object_st*)* }
%struct.x509_object_st = type { i32, %union.anon }
%union.anon = type { i8* }
%struct.stack_st = type { i64, i8**, i32, i64, i32 (i8**, i8**)* }

@.str = private unnamed_addr constant [54 x i8] c"../../third_party/boringssl/src/crypto/x509/x509_lu.c\00", align 1
@__const.x509_object_idx_cnt.x509_s = private unnamed_addr constant { %struct.x509_cinf_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, [4 x i8], %struct.crypto_ex_data_st, i64, i64, i64, i64, i64, i64, %struct.asn1_string_st*, %struct.AUTHORITY_KEYID_st*, %struct.X509_POLICY_CACHE_st*, %struct.stack_st_DIST_POINT*, %struct.stack_st_GENERAL_NAME*, %struct.NAME_CONSTRAINTS_st*, [20 x i8], [4 x i8], %struct.x509_cert_aux_st*, %struct.crypto_buffer_st*, %union.crypto_mutex_st } { %struct.x509_cinf_st* inttoptr (i64 -6148914691236517206 to %struct.x509_cinf_st*), %struct.X509_algor_st* inttoptr (i64 -6148914691236517206 to %struct.X509_algor_st*), %struct.asn1_string_st* inttoptr (i64 -6148914691236517206 to %struct.asn1_string_st*), i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %struct.crypto_ex_data_st { %struct.stack_st_void* inttoptr (i64 -6148914691236517206 to %struct.stack_st_void*) }, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, %struct.asn1_string_st* inttoptr (i64 -6148914691236517206 to %struct.asn1_string_st*), %struct.AUTHORITY_KEYID_st* inttoptr (i64 -6148914691236517206 to %struct.AUTHORITY_KEYID_st*), %struct.X509_POLICY_CACHE_st* inttoptr (i64 -6148914691236517206 to %struct.X509_POLICY_CACHE_st*), %struct.stack_st_DIST_POINT* inttoptr (i64 -6148914691236517206 to %struct.stack_st_DIST_POINT*), %struct.stack_st_GENERAL_NAME* inttoptr (i64 -6148914691236517206 to %struct.stack_st_GENERAL_NAME*), %struct.NAME_CONSTRAINTS_st* inttoptr (i64 -6148914691236517206 to %struct.NAME_CONSTRAINTS_st*), [20 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA", [4 x i8] c"\AA\AA\AA\AA", %struct.x509_cert_aux_st* inttoptr (i64 -6148914691236517206 to %struct.x509_cert_aux_st*), %struct.crypto_buffer_st* inttoptr (i64 -6148914691236517206 to %struct.crypto_buffer_st*), %union.crypto_mutex_st { double 0xFFFFFFFFFFFFFFFF, [48 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" } }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden %struct.x509_lookup_st* @X509_LOOKUP_new(%struct.x509_lookup_method_st*) local_unnamed_addr #0 {
  %2 = tail call i8* @OPENSSL_malloc(i64 32) #6
  %3 = bitcast i8* %2 to %struct.x509_lookup_st*
  %4 = icmp eq i8* %2, null
  br i1 %4, label %19, label %5

5:                                                ; preds = %1
  %6 = bitcast i8* %2 to i32*
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds i8, i8* %2, i64 4
  %8 = bitcast i8* %7 to i32*
  store i32 0, i32* %8, align 4
  %9 = getelementptr inbounds i8, i8* %2, i64 8
  %10 = bitcast i8* %9 to %struct.x509_lookup_method_st**
  store %struct.x509_lookup_method_st* %0, %struct.x509_lookup_method_st** %10, align 8
  %11 = getelementptr inbounds i8, i8* %2, i64 16
  %12 = getelementptr inbounds %struct.x509_lookup_method_st, %struct.x509_lookup_method_st* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false)
  %13 = load i32 (%struct.x509_lookup_st*)*, i32 (%struct.x509_lookup_st*)** %12, align 8
  %14 = icmp eq i32 (%struct.x509_lookup_st*)* %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %5
  %16 = tail call i32 %13(%struct.x509_lookup_st* nonnull %3) #6
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @OPENSSL_free(i8* nonnull %2) #6
  br label %19

19:                                               ; preds = %5, %15, %1, %18
  %20 = phi %struct.x509_lookup_st* [ null, %18 ], [ null, %1 ], [ %3, %15 ], [ %3, %5 ]
  ret %struct.x509_lookup_st* %20
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i8* @OPENSSL_malloc(i64) local_unnamed_addr #2

declare void @OPENSSL_free(i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @X509_LOOKUP_free(%struct.x509_lookup_st*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.x509_lookup_st* %0, null
  br i1 %2, label %14, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.x509_lookup_st, %struct.x509_lookup_st* %0, i64 0, i32 2
  %5 = load %struct.x509_lookup_method_st*, %struct.x509_lookup_method_st** %4, align 8
  %6 = icmp eq %struct.x509_lookup_method_st* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.x509_lookup_method_st, %struct.x509_lookup_method_st* %5, i64 0, i32 2
  %9 = load void (%struct.x509_lookup_st*)*, void (%struct.x509_lookup_st*)** %8, align 8
  %10 = icmp eq void (%struct.x509_lookup_st*)* %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %7
  tail call void %9(%struct.x509_lookup_st* nonnull %0) #6
  br label %12

12:                                               ; preds = %7, %3, %11
  %13 = bitcast %struct.x509_lookup_st* %0 to i8*
  tail call void @OPENSSL_free(i8* nonnull %13) #6
  br label %14

14:                                               ; preds = %1, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_LOOKUP_init(%struct.x509_lookup_st*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.x509_lookup_st, %struct.x509_lookup_st* %0, i64 0, i32 2
  %3 = load %struct.x509_lookup_method_st*, %struct.x509_lookup_method_st** %2, align 8
  %4 = icmp eq %struct.x509_lookup_method_st* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.x509_lookup_method_st, %struct.x509_lookup_method_st* %3, i64 0, i32 3
  %7 = load i32 (%struct.x509_lookup_st*)*, i32 (%struct.x509_lookup_st*)** %6, align 8
  %8 = icmp eq i32 (%struct.x509_lookup_st*)* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  %10 = tail call i32 %7(%struct.x509_lookup_st* %0) #6
  br label %11

11:                                               ; preds = %5, %1, %9
  %12 = phi i32 [ %10, %9 ], [ 0, %1 ], [ 1, %5 ]
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_LOOKUP_shutdown(%struct.x509_lookup_st*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.x509_lookup_st, %struct.x509_lookup_st* %0, i64 0, i32 2
  %3 = load %struct.x509_lookup_method_st*, %struct.x509_lookup_method_st** %2, align 8
  %4 = icmp eq %struct.x509_lookup_method_st* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.x509_lookup_method_st, %struct.x509_lookup_method_st* %3, i64 0, i32 4
  %7 = load i32 (%struct.x509_lookup_st*)*, i32 (%struct.x509_lookup_st*)** %6, align 8
  %8 = icmp eq i32 (%struct.x509_lookup_st*)* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  %10 = tail call i32 %7(%struct.x509_lookup_st* %0) #6
  br label %11

11:                                               ; preds = %5, %1, %9
  %12 = phi i32 [ %10, %9 ], [ 0, %1 ], [ 1, %5 ]
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_LOOKUP_ctrl(%struct.x509_lookup_st*, i32, i8*, i64, i8**) local_unnamed_addr #0 {
  %6 = getelementptr inbounds %struct.x509_lookup_st, %struct.x509_lookup_st* %0, i64 0, i32 2
  %7 = load %struct.x509_lookup_method_st*, %struct.x509_lookup_method_st** %6, align 8
  %8 = icmp eq %struct.x509_lookup_method_st* %7, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.x509_lookup_method_st, %struct.x509_lookup_method_st* %7, i64 0, i32 5
  %11 = load i32 (%struct.x509_lookup_st*, i32, i8*, i64, i8**)*, i32 (%struct.x509_lookup_st*, i32, i8*, i64, i8**)** %10, align 8
  %12 = icmp eq i32 (%struct.x509_lookup_st*, i32, i8*, i64, i8**)* %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %9
  %14 = tail call i32 %11(%struct.x509_lookup_st* %0, i32 %1, i8* %2, i64 %3, i8** %4) #6
  br label %15

15:                                               ; preds = %9, %5, %13
  %16 = phi i32 [ %14, %13 ], [ -1, %5 ], [ 1, %9 ]
  ret i32 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_LOOKUP_by_subject(%struct.x509_lookup_st*, i32, %struct.X509_name_st*, %struct.x509_object_st*) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.x509_lookup_st, %struct.x509_lookup_st* %0, i64 0, i32 2
  %6 = load %struct.x509_lookup_method_st*, %struct.x509_lookup_method_st** %5, align 8
  %7 = icmp eq %struct.x509_lookup_method_st* %6, null
  br i1 %7, label %20, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.x509_lookup_method_st, %struct.x509_lookup_method_st* %6, i64 0, i32 6
  %10 = load i32 (%struct.x509_lookup_st*, i32, %struct.X509_name_st*, %struct.x509_object_st*)*, i32 (%struct.x509_lookup_st*, i32, %struct.X509_name_st*, %struct.x509_object_st*)** %9, align 8
  %11 = icmp eq i32 (%struct.x509_lookup_st*, i32, %struct.X509_name_st*, %struct.x509_object_st*)* %10, null
  br i1 %11, label %20, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.x509_lookup_st, %struct.x509_lookup_st* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %20

16:                                               ; preds = %12
  %17 = tail call i32 %10(%struct.x509_lookup_st* %0, i32 %1, %struct.X509_name_st* %2, %struct.x509_object_st* %3) #6
  %18 = icmp sgt i32 %17, 0
  %19 = zext i1 %18 to i32
  br label %20

20:                                               ; preds = %12, %4, %8, %16
  %21 = phi i32 [ %19, %16 ], [ 0, %8 ], [ 0, %4 ], [ 0, %12 ]
  ret i32 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_LOOKUP_by_issuer_serial(%struct.x509_lookup_st*, i32, %struct.X509_name_st*, %struct.asn1_string_st*, %struct.x509_object_st*) local_unnamed_addr #0 {
  %6 = getelementptr inbounds %struct.x509_lookup_st, %struct.x509_lookup_st* %0, i64 0, i32 2
  %7 = load %struct.x509_lookup_method_st*, %struct.x509_lookup_method_st** %6, align 8
  %8 = icmp eq %struct.x509_lookup_method_st* %7, null
  br i1 %8, label %17, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.x509_lookup_method_st, %struct.x509_lookup_method_st* %7, i64 0, i32 7
  %11 = load i32 (%struct.x509_lookup_st*, i32, %struct.X509_name_st*, %struct.asn1_string_st*, %struct.x509_object_st*)*, i32 (%struct.x509_lookup_st*, i32, %struct.X509_name_st*, %struct.asn1_string_st*, %struct.x509_object_st*)** %10, align 8
  %12 = icmp eq i32 (%struct.x509_lookup_st*, i32, %struct.X509_name_st*, %struct.asn1_string_st*, %struct.x509_object_st*)* %11, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %9
  %14 = tail call i32 %11(%struct.x509_lookup_st* %0, i32 %1, %struct.X509_name_st* %2, %struct.asn1_string_st* %3, %struct.x509_object_st* %4) #6
  %15 = icmp sgt i32 %14, 0
  %16 = zext i1 %15 to i32
  br label %17

17:                                               ; preds = %5, %9, %13
  %18 = phi i32 [ %16, %13 ], [ 0, %9 ], [ 0, %5 ]
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_LOOKUP_by_fingerprint(%struct.x509_lookup_st*, i32, i8*, i32, %struct.x509_object_st*) local_unnamed_addr #0 {
  %6 = getelementptr inbounds %struct.x509_lookup_st, %struct.x509_lookup_st* %0, i64 0, i32 2
  %7 = load %struct.x509_lookup_method_st*, %struct.x509_lookup_method_st** %6, align 8
  %8 = icmp eq %struct.x509_lookup_method_st* %7, null
  br i1 %8, label %17, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.x509_lookup_method_st, %struct.x509_lookup_method_st* %7, i64 0, i32 8
  %11 = load i32 (%struct.x509_lookup_st*, i32, i8*, i32, %struct.x509_object_st*)*, i32 (%struct.x509_lookup_st*, i32, i8*, i32, %struct.x509_object_st*)** %10, align 8
  %12 = icmp eq i32 (%struct.x509_lookup_st*, i32, i8*, i32, %struct.x509_object_st*)* %11, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %9
  %14 = tail call i32 %11(%struct.x509_lookup_st* %0, i32 %1, i8* %2, i32 %3, %struct.x509_object_st* %4) #6
  %15 = icmp sgt i32 %14, 0
  %16 = zext i1 %15 to i32
  br label %17

17:                                               ; preds = %5, %9, %13
  %18 = phi i32 [ %16, %13 ], [ 0, %9 ], [ 0, %5 ]
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_LOOKUP_by_alias(%struct.x509_lookup_st*, i32, i8*, i32, %struct.x509_object_st*) local_unnamed_addr #0 {
  %6 = getelementptr inbounds %struct.x509_lookup_st, %struct.x509_lookup_st* %0, i64 0, i32 2
  %7 = load %struct.x509_lookup_method_st*, %struct.x509_lookup_method_st** %6, align 8
  %8 = icmp eq %struct.x509_lookup_method_st* %7, null
  br i1 %8, label %17, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.x509_lookup_method_st, %struct.x509_lookup_method_st* %7, i64 0, i32 9
  %11 = load i32 (%struct.x509_lookup_st*, i32, i8*, i32, %struct.x509_object_st*)*, i32 (%struct.x509_lookup_st*, i32, i8*, i32, %struct.x509_object_st*)** %10, align 8
  %12 = icmp eq i32 (%struct.x509_lookup_st*, i32, i8*, i32, %struct.x509_object_st*)* %11, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %9
  %14 = tail call i32 %11(%struct.x509_lookup_st* %0, i32 %1, i8* %2, i32 %3, %struct.x509_object_st* %4) #6
  %15 = icmp sgt i32 %14, 0
  %16 = zext i1 %15 to i32
  br label %17

17:                                               ; preds = %5, %9, %13
  %18 = phi i32 [ %16, %13 ], [ 0, %9 ], [ 0, %5 ]
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.x509_store_st* @X509_STORE_new() local_unnamed_addr #0 {
  %1 = tail call i8* @OPENSSL_malloc(i64 192) #6
  %2 = bitcast i8* %1 to %struct.x509_store_st*
  %3 = icmp eq i8* %1, null
  br i1 %3, label %45, label %4

4:                                                ; preds = %0
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %1, i8 0, i64 192, i1 false) #6
  %5 = getelementptr inbounds i8, i8* %1, i64 16
  %6 = bitcast i8* %5 to %union.crypto_mutex_st*
  tail call void @CRYPTO_MUTEX_init(%union.crypto_mutex_st* %6) #6
  %7 = tail call %struct.stack_st* @sk_new(i32 (i8**, i8**)* bitcast (i32 (%struct.x509_object_st**, %struct.x509_object_st**)* @x509_object_cmp to i32 (i8**, i8**)*)) #6
  %8 = getelementptr inbounds i8, i8* %1, i64 8
  %9 = bitcast i8* %8 to %struct.stack_st_X509_OBJECT**
  %10 = bitcast i8* %8 to %struct.stack_st**
  store %struct.stack_st* %7, %struct.stack_st** %10, align 8
  %11 = icmp eq %struct.stack_st* %7, null
  br i1 %11, label %26, label %12

12:                                               ; preds = %4
  %13 = bitcast i8* %1 to i32*
  store i32 1, i32* %13, align 8
  %14 = tail call %struct.stack_st* @sk_new_null() #6
  %15 = getelementptr inbounds i8, i8* %1, i64 80
  %16 = bitcast i8* %15 to %struct.stack_st**
  store %struct.stack_st* %14, %struct.stack_st** %16, align 8
  %17 = icmp eq %struct.stack_st* %14, null
  br i1 %17, label %26, label %18

18:                                               ; preds = %12
  %19 = tail call %struct.X509_VERIFY_PARAM_st* @X509_VERIFY_PARAM_new() #6
  %20 = getelementptr inbounds i8, i8* %1, i64 88
  %21 = bitcast i8* %20 to %struct.X509_VERIFY_PARAM_st**
  store %struct.X509_VERIFY_PARAM_st* %19, %struct.X509_VERIFY_PARAM_st** %21, align 8
  %22 = icmp eq %struct.X509_VERIFY_PARAM_st* %19, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds i8, i8* %1, i64 184
  %25 = bitcast i8* %24 to i32*
  store i32 1, i32* %25, align 8
  br label %45

26:                                               ; preds = %4, %12, %18
  tail call void @CRYPTO_MUTEX_cleanup(%union.crypto_mutex_st* %6) #6
  %27 = getelementptr inbounds i8, i8* %1, i64 88
  %28 = bitcast i8* %27 to %struct.X509_VERIFY_PARAM_st**
  %29 = load %struct.X509_VERIFY_PARAM_st*, %struct.X509_VERIFY_PARAM_st** %28, align 8
  %30 = icmp eq %struct.X509_VERIFY_PARAM_st* %29, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %26
  tail call void @X509_VERIFY_PARAM_free(%struct.X509_VERIFY_PARAM_st* nonnull %29) #6
  br label %32

32:                                               ; preds = %26, %31
  %33 = getelementptr inbounds i8, i8* %1, i64 80
  %34 = bitcast i8* %33 to %struct.stack_st_X509_LOOKUP**
  %35 = load %struct.stack_st_X509_LOOKUP*, %struct.stack_st_X509_LOOKUP** %34, align 8
  %36 = icmp eq %struct.stack_st_X509_LOOKUP* %35, null
  br i1 %36, label %39, label %37

37:                                               ; preds = %32
  %38 = bitcast %struct.stack_st_X509_LOOKUP* %35 to %struct.stack_st*
  tail call void @sk_free(%struct.stack_st* nonnull %38) #6
  br label %39

39:                                               ; preds = %32, %37
  %40 = load %struct.stack_st_X509_OBJECT*, %struct.stack_st_X509_OBJECT** %9, align 8
  %41 = icmp eq %struct.stack_st_X509_OBJECT* %40, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %39
  %43 = bitcast %struct.stack_st_X509_OBJECT* %40 to %struct.stack_st*
  tail call void @sk_free(%struct.stack_st* nonnull %43) #6
  br label %44

44:                                               ; preds = %39, %42
  tail call void @OPENSSL_free(i8* nonnull %1) #6
  br label %45

45:                                               ; preds = %0, %44, %23
  %46 = phi %struct.x509_store_st* [ null, %44 ], [ %2, %23 ], [ null, %0 ]
  ret %struct.x509_store_st* %46
}

declare void @CRYPTO_MUTEX_init(%union.crypto_mutex_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal i32 @x509_object_cmp(%struct.x509_object_st** nocapture readonly, %struct.x509_object_st** nocapture readonly) #0 {
  %3 = load %struct.x509_object_st*, %struct.x509_object_st** %0, align 8
  %4 = getelementptr inbounds %struct.x509_object_st, %struct.x509_object_st* %3, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = load %struct.x509_object_st*, %struct.x509_object_st** %1, align 8
  %7 = getelementptr inbounds %struct.x509_object_st, %struct.x509_object_st* %6, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = sub nsw i32 %5, %8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %28

11:                                               ; preds = %2
  switch i32 %5, label %28 [
    i32 1, label %12
    i32 2, label %20
  ]

12:                                               ; preds = %11
  %13 = getelementptr inbounds %struct.x509_object_st, %struct.x509_object_st* %3, i64 0, i32 1
  %14 = bitcast %union.anon* %13 to %struct.x509_st**
  %15 = load %struct.x509_st*, %struct.x509_st** %14, align 8
  %16 = getelementptr inbounds %struct.x509_object_st, %struct.x509_object_st* %6, i64 0, i32 1
  %17 = bitcast %union.anon* %16 to %struct.x509_st**
  %18 = load %struct.x509_st*, %struct.x509_st** %17, align 8
  %19 = tail call i32 @X509_subject_name_cmp(%struct.x509_st* %15, %struct.x509_st* %18) #6
  br label %28

20:                                               ; preds = %11
  %21 = getelementptr inbounds %struct.x509_object_st, %struct.x509_object_st* %3, i64 0, i32 1
  %22 = bitcast %union.anon* %21 to %struct.X509_crl_st**
  %23 = load %struct.X509_crl_st*, %struct.X509_crl_st** %22, align 8
  %24 = getelementptr inbounds %struct.x509_object_st, %struct.x509_object_st* %6, i64 0, i32 1
  %25 = bitcast %union.anon* %24 to %struct.X509_crl_st**
  %26 = load %struct.X509_crl_st*, %struct.X509_crl_st** %25, align 8
  %27 = tail call i32 @X509_CRL_cmp(%struct.X509_crl_st* %23, %struct.X509_crl_st* %26) #6
  br label %28

28:                                               ; preds = %12, %20, %11, %2
  %29 = phi i32 [ %9, %2 ], [ 0, %11 ], [ %27, %20 ], [ %19, %12 ]
  ret i32 %29
}

declare %struct.X509_VERIFY_PARAM_st* @X509_VERIFY_PARAM_new() local_unnamed_addr #2

declare void @CRYPTO_MUTEX_cleanup(%union.crypto_mutex_st*) local_unnamed_addr #2

declare void @X509_VERIFY_PARAM_free(%struct.X509_VERIFY_PARAM_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_STORE_up_ref(%struct.x509_store_st*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %0, i64 0, i32 17
  tail call void @CRYPTO_refcount_inc(i32* %2) #6
  ret i32 1
}

declare void @CRYPTO_refcount_inc(i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @X509_STORE_free(%struct.x509_store_st*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.x509_store_st* %0, null
  br i1 %2, label %53, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %0, i64 0, i32 17
  %5 = tail call i32 @CRYPTO_refcount_dec_and_test_zero(i32* %4) #6
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %53, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %0, i64 0, i32 2
  tail call void @CRYPTO_MUTEX_cleanup(%union.crypto_mutex_st* %8) #6
  %9 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %0, i64 0, i32 4
  %10 = bitcast %struct.stack_st_X509_LOOKUP** %9 to %struct.stack_st**
  %11 = load %struct.stack_st*, %struct.stack_st** %10, align 8
  %12 = tail call i64 @sk_num(%struct.stack_st* %11) #6
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %43, label %14

14:                                               ; preds = %7, %39
  %15 = phi i64 [ %40, %39 ], [ 0, %7 ]
  %16 = tail call i8* @sk_value(%struct.stack_st* %11, i64 %15) #6
  %17 = bitcast i8* %16 to %struct.x509_lookup_st*
  %18 = getelementptr inbounds i8, i8* %16, i64 8
  %19 = bitcast i8* %18 to %struct.x509_lookup_method_st**
  %20 = load %struct.x509_lookup_method_st*, %struct.x509_lookup_method_st** %19, align 8
  %21 = icmp eq %struct.x509_lookup_method_st* %20, null
  br i1 %21, label %28, label %22

22:                                               ; preds = %14
  %23 = getelementptr inbounds %struct.x509_lookup_method_st, %struct.x509_lookup_method_st* %20, i64 0, i32 4
  %24 = load i32 (%struct.x509_lookup_st*)*, i32 (%struct.x509_lookup_st*)** %23, align 8
  %25 = icmp eq i32 (%struct.x509_lookup_st*)* %24, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %22
  %27 = tail call i32 %24(%struct.x509_lookup_st* %17) #6
  br label %28

28:                                               ; preds = %14, %22, %26
  %29 = icmp eq i8* %16, null
  br i1 %29, label %39, label %30

30:                                               ; preds = %28
  %31 = load %struct.x509_lookup_method_st*, %struct.x509_lookup_method_st** %19, align 8
  %32 = icmp eq %struct.x509_lookup_method_st* %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %struct.x509_lookup_method_st, %struct.x509_lookup_method_st* %31, i64 0, i32 2
  %35 = load void (%struct.x509_lookup_st*)*, void (%struct.x509_lookup_st*)** %34, align 8
  %36 = icmp eq void (%struct.x509_lookup_st*)* %35, null
  br i1 %36, label %38, label %37

37:                                               ; preds = %33
  tail call void %35(%struct.x509_lookup_st* nonnull %17) #6
  br label %38

38:                                               ; preds = %37, %33, %30
  tail call void @OPENSSL_free(i8* nonnull %16) #6
  br label %39

39:                                               ; preds = %28, %38
  %40 = add nuw i64 %15, 1
  %41 = tail call i64 @sk_num(%struct.stack_st* %11) #6
  %42 = icmp ult i64 %40, %41
  br i1 %42, label %14, label %43

43:                                               ; preds = %39, %7
  tail call void @sk_free(%struct.stack_st* %11) #6
  %44 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %0, i64 0, i32 1
  %45 = bitcast %struct.stack_st_X509_OBJECT** %44 to %struct.stack_st**
  %46 = load %struct.stack_st*, %struct.stack_st** %45, align 8
  tail call void @sk_pop_free_ex(%struct.stack_st* %46, void (void (i8*)*, i8*)* nonnull @sk_X509_OBJECT_call_free_func, void (i8*)* bitcast (void (%struct.x509_object_st*)* @cleanup to void (i8*)*)) #6
  %47 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %0, i64 0, i32 5
  %48 = load %struct.X509_VERIFY_PARAM_st*, %struct.X509_VERIFY_PARAM_st** %47, align 8
  %49 = icmp eq %struct.X509_VERIFY_PARAM_st* %48, null
  br i1 %49, label %51, label %50

50:                                               ; preds = %43
  tail call void @X509_VERIFY_PARAM_free(%struct.X509_VERIFY_PARAM_st* nonnull %48) #6
  br label %51

51:                                               ; preds = %43, %50
  %52 = bitcast %struct.x509_store_st* %0 to i8*
  tail call void @OPENSSL_free(i8* nonnull %52) #6
  br label %53

53:                                               ; preds = %3, %1, %51
  ret void
}

declare i32 @CRYPTO_refcount_dec_and_test_zero(i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @cleanup(%struct.x509_object_st*) #0 {
  %2 = icmp eq %struct.x509_object_st* %0, null
  br i1 %2, label %16, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.x509_object_st, %struct.x509_object_st* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  switch i32 %5, label %14 [
    i32 1, label %6
    i32 2, label %10
  ]

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.x509_object_st, %struct.x509_object_st* %0, i64 0, i32 1
  %8 = bitcast %union.anon* %7 to %struct.x509_st**
  %9 = load %struct.x509_st*, %struct.x509_st** %8, align 8
  tail call void @X509_free(%struct.x509_st* %9) #6
  br label %14

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.x509_object_st, %struct.x509_object_st* %0, i64 0, i32 1
  %12 = bitcast %union.anon* %11 to %struct.X509_crl_st**
  %13 = load %struct.X509_crl_st*, %struct.X509_crl_st** %12, align 8
  tail call void @X509_CRL_free(%struct.X509_crl_st* %13) #6
  br label %14

14:                                               ; preds = %3, %10, %6
  %15 = bitcast %struct.x509_object_st* %0 to i8*
  tail call void @OPENSSL_free(i8* nonnull %15) #6
  br label %16

16:                                               ; preds = %1, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.x509_lookup_st* @X509_STORE_add_lookup(%struct.x509_store_st*, %struct.x509_lookup_method_st*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %0, i64 0, i32 4
  %4 = bitcast %struct.stack_st_X509_LOOKUP** %3 to %struct.stack_st**
  %5 = load %struct.stack_st*, %struct.stack_st** %4, align 8
  %6 = tail call i64 @sk_num(%struct.stack_st* %5) #6
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %19, label %11

8:                                                ; preds = %11
  %9 = tail call i64 @sk_num(%struct.stack_st* %5) #6
  %10 = icmp ult i64 %18, %9
  br i1 %10, label %11, label %19

11:                                               ; preds = %2, %8
  %12 = phi i64 [ %18, %8 ], [ 0, %2 ]
  %13 = tail call i8* @sk_value(%struct.stack_st* %5, i64 %12) #6
  %14 = getelementptr inbounds i8, i8* %13, i64 8
  %15 = bitcast i8* %14 to %struct.x509_lookup_method_st**
  %16 = load %struct.x509_lookup_method_st*, %struct.x509_lookup_method_st** %15, align 8
  %17 = icmp eq %struct.x509_lookup_method_st* %16, %1
  %18 = add nuw i64 %12, 1
  br i1 %17, label %52, label %8

19:                                               ; preds = %8, %2
  %20 = tail call i8* @OPENSSL_malloc(i64 32) #6
  %21 = bitcast i8* %20 to %struct.x509_lookup_st*
  %22 = icmp eq i8* %20, null
  br i1 %22, label %54, label %23

23:                                               ; preds = %19
  %24 = bitcast i8* %20 to i32*
  store i32 0, i32* %24, align 8
  %25 = getelementptr inbounds i8, i8* %20, i64 4
  %26 = bitcast i8* %25 to i32*
  store i32 0, i32* %26, align 4
  %27 = getelementptr inbounds i8, i8* %20, i64 8
  %28 = bitcast i8* %27 to %struct.x509_lookup_method_st**
  store %struct.x509_lookup_method_st* %1, %struct.x509_lookup_method_st** %28, align 8
  %29 = getelementptr inbounds i8, i8* %20, i64 16
  %30 = getelementptr inbounds %struct.x509_lookup_method_st, %struct.x509_lookup_method_st* %1, i64 0, i32 1
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #6
  %31 = load i32 (%struct.x509_lookup_st*)*, i32 (%struct.x509_lookup_st*)** %30, align 8
  %32 = icmp eq i32 (%struct.x509_lookup_st*)* %31, null
  br i1 %32, label %37, label %33

33:                                               ; preds = %23
  %34 = tail call i32 %31(%struct.x509_lookup_st* nonnull %21) #6
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %33
  tail call void @OPENSSL_free(i8* nonnull %20) #6
  br label %54

37:                                               ; preds = %33, %23
  %38 = getelementptr inbounds i8, i8* %20, i64 24
  %39 = bitcast i8* %38 to %struct.x509_store_st**
  store %struct.x509_store_st* %0, %struct.x509_store_st** %39, align 8
  %40 = load %struct.stack_st*, %struct.stack_st** %4, align 8
  %41 = tail call i64 @sk_push(%struct.stack_st* %40, i8* nonnull %20) #6
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %54

43:                                               ; preds = %37
  %44 = load %struct.x509_lookup_method_st*, %struct.x509_lookup_method_st** %28, align 8
  %45 = icmp eq %struct.x509_lookup_method_st* %44, null
  br i1 %45, label %51, label %46

46:                                               ; preds = %43
  %47 = getelementptr inbounds %struct.x509_lookup_method_st, %struct.x509_lookup_method_st* %44, i64 0, i32 2
  %48 = load void (%struct.x509_lookup_st*)*, void (%struct.x509_lookup_st*)** %47, align 8
  %49 = icmp eq void (%struct.x509_lookup_st*)* %48, null
  br i1 %49, label %51, label %50

50:                                               ; preds = %46
  tail call void %48(%struct.x509_lookup_st* nonnull %21) #6
  br label %51

51:                                               ; preds = %43, %46, %50
  tail call void @OPENSSL_free(i8* nonnull %20) #6
  br label %54

52:                                               ; preds = %11
  %53 = bitcast i8* %13 to %struct.x509_lookup_st*
  br label %54

54:                                               ; preds = %52, %19, %36, %37, %51
  %55 = phi %struct.x509_lookup_st* [ null, %51 ], [ %21, %37 ], [ null, %36 ], [ null, %19 ], [ %53, %52 ]
  ret %struct.x509_lookup_st* %55
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_STORE_get_by_subject(%struct.x509_store_ctx_st* nocapture readonly, i32, %struct.X509_name_st*, %struct.x509_object_st* nocapture) local_unnamed_addr #0 {
  %5 = alloca %struct.x509_object_st, align 8
  %6 = getelementptr inbounds %struct.x509_store_ctx_st, %struct.x509_store_ctx_st* %0, i64 0, i32 0
  %7 = load %struct.x509_store_st*, %struct.x509_store_st** %6, align 8
  %8 = bitcast %struct.x509_object_st* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %7, i64 0, i32 2
  tail call void @CRYPTO_MUTEX_lock_write(%union.crypto_mutex_st* %9) #6
  %10 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %7, i64 0, i32 1
  %11 = load %struct.stack_st_X509_OBJECT*, %struct.stack_st_X509_OBJECT** %10, align 8
  %12 = tail call %struct.x509_object_st* @X509_OBJECT_retrieve_by_subject(%struct.stack_st_X509_OBJECT* %11, i32 %1, %struct.X509_name_st* %2)
  tail call void @CRYPTO_MUTEX_unlock_write(%union.crypto_mutex_st* %9) #6
  %13 = icmp eq %struct.x509_object_st* %12, null
  %14 = icmp eq i32 %1, 2
  %15 = or i1 %14, %13
  br i1 %15, label %16, label %52

16:                                               ; preds = %4
  %17 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %7, i64 0, i32 4
  %18 = bitcast %struct.stack_st_X509_LOOKUP** %17 to %struct.stack_st**
  %19 = load %struct.stack_st*, %struct.stack_st** %18, align 8
  %20 = call i64 @sk_num(%struct.stack_st* %19) #6
  %21 = trunc i64 %20 to i32
  %22 = icmp sgt i32 %21, 0
  br i1 %22, label %23, label %51

23:                                               ; preds = %16, %44
  %24 = phi i64 [ %45, %44 ], [ 0, %16 ]
  %25 = load %struct.stack_st*, %struct.stack_st** %18, align 8
  %26 = call i8* @sk_value(%struct.stack_st* %25, i64 %24) #6
  %27 = bitcast i8* %26 to %struct.x509_lookup_st*
  %28 = getelementptr inbounds i8, i8* %26, i64 8
  %29 = bitcast i8* %28 to %struct.x509_lookup_method_st**
  %30 = load %struct.x509_lookup_method_st*, %struct.x509_lookup_method_st** %29, align 8
  %31 = icmp eq %struct.x509_lookup_method_st* %30, null
  br i1 %31, label %44, label %32

32:                                               ; preds = %23
  %33 = getelementptr inbounds %struct.x509_lookup_method_st, %struct.x509_lookup_method_st* %30, i64 0, i32 6
  %34 = load i32 (%struct.x509_lookup_st*, i32, %struct.X509_name_st*, %struct.x509_object_st*)*, i32 (%struct.x509_lookup_st*, i32, %struct.X509_name_st*, %struct.x509_object_st*)** %33, align 8
  %35 = icmp eq i32 (%struct.x509_lookup_st*, i32, %struct.X509_name_st*, %struct.x509_object_st*)* %34, null
  br i1 %35, label %44, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds i8, i8* %26, i64 4
  %38 = bitcast i8* %37 to i32*
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %36
  %42 = call i32 %34(%struct.x509_lookup_st* %27, i32 %1, %struct.X509_name_st* %2, %struct.x509_object_st* nonnull %5) #6
  %43 = icmp slt i32 %42, 1
  br i1 %43, label %44, label %52

44:                                               ; preds = %36, %23, %32, %41
  %45 = add nuw nsw i64 %24, 1
  %46 = load %struct.stack_st*, %struct.stack_st** %18, align 8
  %47 = call i64 @sk_num(%struct.stack_st* %46) #6
  %48 = shl i64 %47, 32
  %49 = ashr exact i64 %48, 32
  %50 = icmp slt i64 %45, %49
  br i1 %50, label %23, label %51

51:                                               ; preds = %44, %16
  br i1 %13, label %68, label %52

52:                                               ; preds = %41, %51, %4
  %53 = phi %struct.x509_object_st* [ %12, %51 ], [ %12, %4 ], [ %5, %41 ]
  %54 = getelementptr inbounds %struct.x509_object_st, %struct.x509_object_st* %53, i64 0, i32 0
  %55 = load i32, i32* %54, align 8
  %56 = getelementptr inbounds %struct.x509_object_st, %struct.x509_object_st* %3, i64 0, i32 0
  store i32 %55, i32* %56, align 8
  %57 = getelementptr inbounds %struct.x509_object_st, %struct.x509_object_st* %53, i64 0, i32 1, i32 0
  %58 = bitcast i8** %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = getelementptr inbounds %struct.x509_object_st, %struct.x509_object_st* %3, i64 0, i32 1
  %61 = bitcast %union.anon* %60 to i64*
  store i64 %59, i64* %61, align 8
  switch i32 %55, label %68 [
    i32 1, label %62
    i32 2, label %65
  ]

62:                                               ; preds = %52
  %63 = inttoptr i64 %59 to %struct.x509_st*
  %64 = call i32 @X509_up_ref(%struct.x509_st* %63) #6
  br label %68

65:                                               ; preds = %52
  %66 = inttoptr i64 %59 to %struct.X509_crl_st*
  %67 = call i32 @X509_CRL_up_ref(%struct.X509_crl_st* %66) #6
  br label %68

68:                                               ; preds = %65, %62, %52, %51
  %69 = phi i32 [ 0, %51 ], [ 1, %52 ], [ 1, %62 ], [ 1, %65 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #6
  ret i32 %69
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @CRYPTO_MUTEX_lock_write(%union.crypto_mutex_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.x509_object_st* @X509_OBJECT_retrieve_by_subject(%struct.stack_st_X509_OBJECT*, i32, %struct.X509_name_st*) local_unnamed_addr #0 {
  %4 = alloca %struct.x509_object_st, align 8
  %5 = alloca %struct.x509_st, align 8
  %6 = alloca %struct.x509_cinf_st, align 8
  %7 = alloca %struct.X509_crl_st, align 8
  %8 = alloca %struct.X509_crl_info_st, align 8
  %9 = alloca i64, align 8
  %10 = bitcast %struct.x509_object_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 16, i1 false) #6
  %11 = bitcast %struct.x509_st* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 232, i8* nonnull %11) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 8 bitcast ({ %struct.x509_cinf_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, [4 x i8], %struct.crypto_ex_data_st, i64, i64, i64, i64, i64, i64, %struct.asn1_string_st*, %struct.AUTHORITY_KEYID_st*, %struct.X509_POLICY_CACHE_st*, %struct.stack_st_DIST_POINT*, %struct.stack_st_GENERAL_NAME*, %struct.NAME_CONSTRAINTS_st*, [20 x i8], [4 x i8], %struct.x509_cert_aux_st*, %struct.crypto_buffer_st*, %union.crypto_mutex_st }* @__const.x509_object_idx_cnt.x509_s to i8*), i64 232, i1 false) #6
  %12 = bitcast %struct.x509_cinf_st* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %12) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 104, i1 false) #6
  %13 = bitcast %struct.X509_crl_st* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %13) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 120, i1 false) #6
  %14 = bitcast %struct.X509_crl_info_st* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %14) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 80, i1 false) #6
  %15 = getelementptr inbounds %struct.x509_object_st, %struct.x509_object_st* %4, i64 0, i32 0
  store i32 %1, i32* %15, align 8
  switch i32 %1, label %35 [
    i32 1, label %16
    i32 2, label %21
  ]

16:                                               ; preds = %3
  %17 = getelementptr inbounds %struct.x509_object_st, %struct.x509_object_st* %4, i64 0, i32 1
  %18 = bitcast %union.anon* %17 to %struct.x509_st**
  store %struct.x509_st* %5, %struct.x509_st** %18, align 8
  %19 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %5, i64 0, i32 0
  store %struct.x509_cinf_st* %6, %struct.x509_cinf_st** %19, align 8
  %20 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %6, i64 0, i32 5
  br label %26

21:                                               ; preds = %3
  %22 = getelementptr inbounds %struct.x509_object_st, %struct.x509_object_st* %4, i64 0, i32 1
  %23 = bitcast %union.anon* %22 to %struct.X509_crl_st**
  store %struct.X509_crl_st* %7, %struct.X509_crl_st** %23, align 8
  %24 = getelementptr inbounds %struct.X509_crl_st, %struct.X509_crl_st* %7, i64 0, i32 0
  store %struct.X509_crl_info_st* %8, %struct.X509_crl_info_st** %24, align 8
  %25 = getelementptr inbounds %struct.X509_crl_info_st, %struct.X509_crl_info_st* %8, i64 0, i32 2
  br label %26

26:                                               ; preds = %21, %16
  %27 = phi %struct.X509_name_st** [ %25, %21 ], [ %20, %16 ]
  store %struct.X509_name_st* %2, %struct.X509_name_st** %27, align 8
  %28 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #6
  store i64 -6148914691236517206, i64* %9, align 8
  %29 = bitcast %struct.stack_st_X509_OBJECT* %0 to %struct.stack_st*
  call void @sk_sort(%struct.stack_st* %29) #6
  %30 = call i32 @sk_find(%struct.stack_st* %29, i64* nonnull %9, i8* nonnull %10, i32 (i32 (i8**, i8**)*, i8**, i8**)* nonnull @sk_X509_OBJECT_call_cmp_func) #6
  %31 = icmp eq i32 %30, 0
  %32 = load i64, i64* %9, align 8
  %33 = trunc i64 %32 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #6
  %34 = select i1 %31, i32 -1, i32 %33
  br label %35

35:                                               ; preds = %26, %3
  %36 = phi i32 [ -1, %3 ], [ %34, %26 ]
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %14) #6
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %13) #6
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %12) #6
  call void @llvm.lifetime.end.p0i8(i64 232, i8* nonnull %11) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #6
  %37 = icmp eq i32 %36, -1
  br i1 %37, label %43, label %38

38:                                               ; preds = %35
  %39 = sext i32 %36 to i64
  %40 = bitcast %struct.stack_st_X509_OBJECT* %0 to %struct.stack_st*
  %41 = call i8* @sk_value(%struct.stack_st* %40, i64 %39) #6
  %42 = bitcast i8* %41 to %struct.x509_object_st*
  br label %43

43:                                               ; preds = %35, %38
  %44 = phi %struct.x509_object_st* [ %42, %38 ], [ null, %35 ]
  ret %struct.x509_object_st* %44
}

declare void @CRYPTO_MUTEX_unlock_write(%union.crypto_mutex_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_OBJECT_up_ref_count(%struct.x509_object_st* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.x509_object_st, %struct.x509_object_st* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %14 [
    i32 1, label %4
    i32 2, label %9
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.x509_object_st, %struct.x509_object_st* %0, i64 0, i32 1
  %6 = bitcast %union.anon* %5 to %struct.x509_st**
  %7 = load %struct.x509_st*, %struct.x509_st** %6, align 8
  %8 = tail call i32 @X509_up_ref(%struct.x509_st* %7) #6
  br label %14

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.x509_object_st, %struct.x509_object_st* %0, i64 0, i32 1
  %11 = bitcast %union.anon* %10 to %struct.X509_crl_st**
  %12 = load %struct.X509_crl_st*, %struct.X509_crl_st** %11, align 8
  %13 = tail call i32 @X509_CRL_up_ref(%struct.X509_crl_st* %12) #6
  br label %14

14:                                               ; preds = %1, %9, %4
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_STORE_add_cert(%struct.x509_store_st*, %struct.x509_st*) local_unnamed_addr #0 {
  %3 = icmp eq %struct.x509_st* %1, null
  br i1 %3, label %50, label %4

4:                                                ; preds = %2
  %5 = tail call i8* @OPENSSL_malloc(i64 16) #6
  %6 = bitcast i8* %5 to %struct.x509_object_st*
  %7 = icmp eq i8* %5, null
  br i1 %7, label %8, label %9

8:                                                ; preds = %4
  tail call void @ERR_put_error(i32 11, i32 0, i32 65, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 343) #6
  br label %50

9:                                                ; preds = %4
  %10 = bitcast i8* %5 to i32*
  store i32 1, i32* %10, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 8
  %12 = bitcast i8* %11 to %struct.x509_st**
  store %struct.x509_st* %1, %struct.x509_st** %12, align 8
  %13 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %0, i64 0, i32 2
  tail call void @CRYPTO_MUTEX_lock_write(%union.crypto_mutex_st* %13) #6
  %14 = load i32, i32* %10, align 8
  switch i32 %14, label %22 [
    i32 1, label %15
    i32 2, label %18
  ]

15:                                               ; preds = %9
  %16 = load %struct.x509_st*, %struct.x509_st** %12, align 8
  %17 = tail call i32 @X509_up_ref(%struct.x509_st* %16) #6
  br label %22

18:                                               ; preds = %9
  %19 = bitcast i8* %11 to %struct.X509_crl_st**
  %20 = load %struct.X509_crl_st*, %struct.X509_crl_st** %19, align 8
  %21 = tail call i32 @X509_CRL_up_ref(%struct.X509_crl_st* %20) #6
  br label %22

22:                                               ; preds = %9, %15, %18
  %23 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %0, i64 0, i32 1
  %24 = load %struct.stack_st_X509_OBJECT*, %struct.stack_st_X509_OBJECT** %23, align 8
  %25 = tail call %struct.x509_object_st* @X509_OBJECT_retrieve_match(%struct.stack_st_X509_OBJECT* %24, %struct.x509_object_st* nonnull %6)
  %26 = icmp eq %struct.x509_object_st* %25, null
  br i1 %26, label %35, label %27

27:                                               ; preds = %22
  %28 = load i32, i32* %10, align 8
  switch i32 %28, label %34 [
    i32 1, label %29
    i32 2, label %31
  ]

29:                                               ; preds = %27
  %30 = load %struct.x509_st*, %struct.x509_st** %12, align 8
  tail call void @X509_free(%struct.x509_st* %30) #6
  br label %34

31:                                               ; preds = %27
  %32 = bitcast i8* %11 to %struct.X509_crl_st**
  %33 = load %struct.X509_crl_st*, %struct.X509_crl_st** %32, align 8
  tail call void @X509_CRL_free(%struct.X509_crl_st* %33) #6
  br label %34

34:                                               ; preds = %27, %29, %31
  tail call void @OPENSSL_free(i8* nonnull %5) #6
  tail call void @ERR_put_error(i32 11, i32 0, i32 105, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 356) #6
  br label %48

35:                                               ; preds = %22
  %36 = bitcast %struct.stack_st_X509_OBJECT** %23 to %struct.stack_st**
  %37 = load %struct.stack_st*, %struct.stack_st** %36, align 8
  %38 = tail call i64 @sk_push(%struct.stack_st* %37, i8* nonnull %5) #6
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %40, label %48

40:                                               ; preds = %35
  %41 = load i32, i32* %10, align 8
  switch i32 %41, label %47 [
    i32 1, label %42
    i32 2, label %44
  ]

42:                                               ; preds = %40
  %43 = load %struct.x509_st*, %struct.x509_st** %12, align 8
  tail call void @X509_free(%struct.x509_st* %43) #6
  br label %47

44:                                               ; preds = %40
  %45 = bitcast i8* %11 to %struct.X509_crl_st**
  %46 = load %struct.X509_crl_st*, %struct.X509_crl_st** %45, align 8
  tail call void @X509_CRL_free(%struct.X509_crl_st* %46) #6
  br label %47

47:                                               ; preds = %40, %42, %44
  tail call void @OPENSSL_free(i8* nonnull %5) #6
  tail call void @ERR_put_error(i32 11, i32 0, i32 65, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 361) #6
  br label %48

48:                                               ; preds = %35, %47, %34
  %49 = phi i32 [ 0, %34 ], [ 1, %35 ], [ 0, %47 ]
  tail call void @CRYPTO_MUTEX_unlock_write(%union.crypto_mutex_st* %13) #6
  br label %50

50:                                               ; preds = %2, %48, %8
  %51 = phi i32 [ 0, %8 ], [ %49, %48 ], [ 0, %2 ]
  ret i32 %51
}

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.x509_object_st* @X509_OBJECT_retrieve_match(%struct.stack_st_X509_OBJECT*, %struct.x509_object_st*) local_unnamed_addr #0 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #6
  store i64 -6148914691236517206, i64* %3, align 8
  %5 = bitcast %struct.stack_st_X509_OBJECT* %0 to %struct.stack_st*
  tail call void @sk_sort(%struct.stack_st* %5) #6
  %6 = bitcast %struct.x509_object_st* %1 to i8*
  %7 = call i32 @sk_find(%struct.stack_st* %5, i64* nonnull %3, i8* %6, i32 (i32 (i8**, i8**)*, i8**, i8**)* nonnull @sk_X509_OBJECT_call_cmp_func) #6
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %76, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.x509_object_st, %struct.x509_object_st* %1, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = add i32 %11, -1
  %13 = icmp ult i32 %12, 2
  %14 = load i64, i64* %3, align 8
  br i1 %13, label %15, label %22

15:                                               ; preds = %9
  %16 = call i64 @sk_num(%struct.stack_st* %5) #6
  %17 = icmp ult i64 %14, %16
  br i1 %17, label %18, label %76

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.x509_object_st, %struct.x509_object_st* %1, i64 0, i32 1
  %20 = bitcast %union.anon* %19 to %struct.X509_crl_st**
  %21 = bitcast %union.anon* %19 to %struct.x509_st**
  br label %25

22:                                               ; preds = %9
  %23 = call i8* @sk_value(%struct.stack_st* %5, i64 %14) #6
  %24 = bitcast i8* %23 to %struct.x509_object_st*
  br label %76

25:                                               ; preds = %18, %66
  %26 = phi i64 [ %14, %18 ], [ %67, %66 ]
  %27 = call i8* @sk_value(%struct.stack_st* %5, i64 %26) #6
  %28 = bitcast i8* %27 to i32*
  %29 = load i32, i32* %28, align 8
  %30 = load i32, i32* %10, align 8
  %31 = icmp eq i32 %29, %30
  br i1 %31, label %32, label %76

32:                                               ; preds = %25
  switch i32 %29, label %50 [
    i32 1, label %33
    i32 2, label %39
  ]

33:                                               ; preds = %32
  %34 = getelementptr inbounds i8, i8* %27, i64 8
  %35 = bitcast i8* %34 to %struct.x509_st**
  %36 = load %struct.x509_st*, %struct.x509_st** %35, align 8
  %37 = load %struct.x509_st*, %struct.x509_st** %21, align 8
  %38 = call i32 @X509_subject_name_cmp(%struct.x509_st* %36, %struct.x509_st* %37) #6
  br label %45

39:                                               ; preds = %32
  %40 = getelementptr inbounds i8, i8* %27, i64 8
  %41 = bitcast i8* %40 to %struct.X509_crl_st**
  %42 = load %struct.X509_crl_st*, %struct.X509_crl_st** %41, align 8
  %43 = load %struct.X509_crl_st*, %struct.X509_crl_st** %20, align 8
  %44 = call i32 @X509_CRL_cmp(%struct.X509_crl_st* %42, %struct.X509_crl_st* %43) #6
  br label %45

45:                                               ; preds = %33, %39
  %46 = phi i32 [ %44, %39 ], [ %38, %33 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %76

48:                                               ; preds = %45
  %49 = load i32, i32* %10, align 8
  br label %50

50:                                               ; preds = %32, %48
  %51 = phi i32 [ %49, %48 ], [ %29, %32 ]
  switch i32 %51, label %74 [
    i32 1, label %52
    i32 2, label %59
  ]

52:                                               ; preds = %50
  %53 = getelementptr inbounds i8, i8* %27, i64 8
  %54 = bitcast i8* %53 to %struct.x509_st**
  %55 = load %struct.x509_st*, %struct.x509_st** %54, align 8
  %56 = load %struct.x509_st*, %struct.x509_st** %21, align 8
  %57 = call i32 @X509_cmp(%struct.x509_st* %55, %struct.x509_st* %56) #6
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %70, label %66

59:                                               ; preds = %50
  %60 = getelementptr inbounds i8, i8* %27, i64 8
  %61 = bitcast i8* %60 to %struct.X509_crl_st**
  %62 = load %struct.X509_crl_st*, %struct.X509_crl_st** %61, align 8
  %63 = load %struct.X509_crl_st*, %struct.X509_crl_st** %20, align 8
  %64 = call i32 @X509_CRL_match(%struct.X509_crl_st* %62, %struct.X509_crl_st* %63) #6
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %52, %59
  %67 = add nuw i64 %26, 1
  %68 = call i64 @sk_num(%struct.stack_st* %5) #6
  %69 = icmp ult i64 %67, %68
  br i1 %69, label %25, label %76

70:                                               ; preds = %52
  %71 = bitcast i8* %27 to %struct.x509_object_st*
  br label %76

72:                                               ; preds = %59
  %73 = bitcast i8* %27 to %struct.x509_object_st*
  br label %76

74:                                               ; preds = %50
  %75 = bitcast i8* %27 to %struct.x509_object_st*
  br label %76

76:                                               ; preds = %45, %66, %25, %15, %70, %72, %74, %2, %22
  %77 = phi %struct.x509_object_st* [ %24, %22 ], [ null, %2 ], [ %75, %74 ], [ %73, %72 ], [ %71, %70 ], [ null, %15 ], [ null, %25 ], [ null, %66 ], [ null, %45 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #6
  ret %struct.x509_object_st* %77
}

; Function Attrs: nounwind ssp uwtable
define hidden void @X509_OBJECT_free_contents(%struct.x509_object_st* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.x509_object_st, %struct.x509_object_st* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %12 [
    i32 1, label %4
    i32 2, label %8
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.x509_object_st, %struct.x509_object_st* %0, i64 0, i32 1
  %6 = bitcast %union.anon* %5 to %struct.x509_st**
  %7 = load %struct.x509_st*, %struct.x509_st** %6, align 8
  tail call void @X509_free(%struct.x509_st* %7) #6
  br label %12

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.x509_object_st, %struct.x509_object_st* %0, i64 0, i32 1
  %10 = bitcast %union.anon* %9 to %struct.X509_crl_st**
  %11 = load %struct.X509_crl_st*, %struct.X509_crl_st** %10, align 8
  tail call void @X509_CRL_free(%struct.X509_crl_st* %11) #6
  br label %12

12:                                               ; preds = %1, %8, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_STORE_add_crl(%struct.x509_store_st*, %struct.X509_crl_st*) local_unnamed_addr #0 {
  %3 = icmp eq %struct.X509_crl_st* %1, null
  br i1 %3, label %50, label %4

4:                                                ; preds = %2
  %5 = tail call i8* @OPENSSL_malloc(i64 16) #6
  %6 = bitcast i8* %5 to %struct.x509_object_st*
  %7 = icmp eq i8* %5, null
  br i1 %7, label %8, label %9

8:                                                ; preds = %4
  tail call void @ERR_put_error(i32 11, i32 0, i32 65, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 379) #6
  br label %50

9:                                                ; preds = %4
  %10 = bitcast i8* %5 to i32*
  store i32 2, i32* %10, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 8
  %12 = bitcast i8* %11 to %struct.X509_crl_st**
  store %struct.X509_crl_st* %1, %struct.X509_crl_st** %12, align 8
  %13 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %0, i64 0, i32 2
  tail call void @CRYPTO_MUTEX_lock_write(%union.crypto_mutex_st* %13) #6
  %14 = load i32, i32* %10, align 8
  switch i32 %14, label %22 [
    i32 1, label %15
    i32 2, label %19
  ]

15:                                               ; preds = %9
  %16 = bitcast i8* %11 to %struct.x509_st**
  %17 = load %struct.x509_st*, %struct.x509_st** %16, align 8
  %18 = tail call i32 @X509_up_ref(%struct.x509_st* %17) #6
  br label %22

19:                                               ; preds = %9
  %20 = load %struct.X509_crl_st*, %struct.X509_crl_st** %12, align 8
  %21 = tail call i32 @X509_CRL_up_ref(%struct.X509_crl_st* %20) #6
  br label %22

22:                                               ; preds = %9, %15, %19
  %23 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %0, i64 0, i32 1
  %24 = load %struct.stack_st_X509_OBJECT*, %struct.stack_st_X509_OBJECT** %23, align 8
  %25 = tail call %struct.x509_object_st* @X509_OBJECT_retrieve_match(%struct.stack_st_X509_OBJECT* %24, %struct.x509_object_st* nonnull %6)
  %26 = icmp eq %struct.x509_object_st* %25, null
  br i1 %26, label %35, label %27

27:                                               ; preds = %22
  %28 = load i32, i32* %10, align 8
  switch i32 %28, label %34 [
    i32 1, label %29
    i32 2, label %32
  ]

29:                                               ; preds = %27
  %30 = bitcast i8* %11 to %struct.x509_st**
  %31 = load %struct.x509_st*, %struct.x509_st** %30, align 8
  tail call void @X509_free(%struct.x509_st* %31) #6
  br label %34

32:                                               ; preds = %27
  %33 = load %struct.X509_crl_st*, %struct.X509_crl_st** %12, align 8
  tail call void @X509_CRL_free(%struct.X509_crl_st* %33) #6
  br label %34

34:                                               ; preds = %27, %29, %32
  tail call void @OPENSSL_free(i8* nonnull %5) #6
  tail call void @ERR_put_error(i32 11, i32 0, i32 105, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 392) #6
  br label %48

35:                                               ; preds = %22
  %36 = bitcast %struct.stack_st_X509_OBJECT** %23 to %struct.stack_st**
  %37 = load %struct.stack_st*, %struct.stack_st** %36, align 8
  %38 = tail call i64 @sk_push(%struct.stack_st* %37, i8* nonnull %5) #6
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %40, label %48

40:                                               ; preds = %35
  %41 = load i32, i32* %10, align 8
  switch i32 %41, label %47 [
    i32 1, label %42
    i32 2, label %45
  ]

42:                                               ; preds = %40
  %43 = bitcast i8* %11 to %struct.x509_st**
  %44 = load %struct.x509_st*, %struct.x509_st** %43, align 8
  tail call void @X509_free(%struct.x509_st* %44) #6
  br label %47

45:                                               ; preds = %40
  %46 = load %struct.X509_crl_st*, %struct.X509_crl_st** %12, align 8
  tail call void @X509_CRL_free(%struct.X509_crl_st* %46) #6
  br label %47

47:                                               ; preds = %40, %42, %45
  tail call void @OPENSSL_free(i8* nonnull %5) #6
  tail call void @ERR_put_error(i32 11, i32 0, i32 65, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 397) #6
  br label %48

48:                                               ; preds = %35, %47, %34
  %49 = phi i32 [ 0, %34 ], [ 1, %35 ], [ 0, %47 ]
  tail call void @CRYPTO_MUTEX_unlock_write(%union.crypto_mutex_st* %13) #6
  br label %50

50:                                               ; preds = %2, %48, %8
  %51 = phi i32 [ 0, %8 ], [ %49, %48 ], [ 0, %2 ]
  ret i32 %51
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @X509_STORE_set0_additional_untrusted(%struct.x509_store_st* nocapture, %struct.stack_st_X509*) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %0, i64 0, i32 3
  store %struct.stack_st_X509* %1, %struct.stack_st_X509** %3, align 8
  ret void
}

declare i32 @X509_up_ref(%struct.x509_st*) local_unnamed_addr #2

declare i32 @X509_CRL_up_ref(%struct.X509_crl_st*) local_unnamed_addr #2

declare void @X509_free(%struct.x509_st*) #2

declare void @X509_CRL_free(%struct.X509_crl_st*) #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @X509_OBJECT_get_type(%struct.x509_object_st* nocapture readonly) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.x509_object_st, %struct.x509_object_st* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.x509_st* @X509_OBJECT_get0_X509(%struct.x509_object_st* readonly) local_unnamed_addr #4 {
  %2 = icmp eq %struct.x509_object_st* %0, null
  br i1 %2, label %11, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.x509_object_st, %struct.x509_object_st* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 1
  br i1 %6, label %7, label %11

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.x509_object_st, %struct.x509_object_st* %0, i64 0, i32 1
  %9 = bitcast %union.anon* %8 to %struct.x509_st**
  %10 = load %struct.x509_st*, %struct.x509_st** %9, align 8
  br label %11

11:                                               ; preds = %1, %3, %7
  %12 = phi %struct.x509_st* [ %10, %7 ], [ null, %3 ], [ null, %1 ]
  ret %struct.x509_st* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_OBJECT_idx_by_subject(%struct.stack_st_X509_OBJECT*, i32, %struct.X509_name_st*) local_unnamed_addr #0 {
  %4 = alloca %struct.x509_object_st, align 8
  %5 = alloca %struct.x509_st, align 8
  %6 = alloca %struct.x509_cinf_st, align 8
  %7 = alloca %struct.X509_crl_st, align 8
  %8 = alloca %struct.X509_crl_info_st, align 8
  %9 = alloca i64, align 8
  %10 = bitcast %struct.x509_object_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 16, i1 false) #6
  %11 = bitcast %struct.x509_st* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 232, i8* nonnull %11) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 8 bitcast ({ %struct.x509_cinf_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, [4 x i8], %struct.crypto_ex_data_st, i64, i64, i64, i64, i64, i64, %struct.asn1_string_st*, %struct.AUTHORITY_KEYID_st*, %struct.X509_POLICY_CACHE_st*, %struct.stack_st_DIST_POINT*, %struct.stack_st_GENERAL_NAME*, %struct.NAME_CONSTRAINTS_st*, [20 x i8], [4 x i8], %struct.x509_cert_aux_st*, %struct.crypto_buffer_st*, %union.crypto_mutex_st }* @__const.x509_object_idx_cnt.x509_s to i8*), i64 232, i1 false) #6
  %12 = bitcast %struct.x509_cinf_st* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %12) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 104, i1 false) #6
  %13 = bitcast %struct.X509_crl_st* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %13) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 120, i1 false) #6
  %14 = bitcast %struct.X509_crl_info_st* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %14) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 80, i1 false) #6
  %15 = getelementptr inbounds %struct.x509_object_st, %struct.x509_object_st* %4, i64 0, i32 0
  store i32 %1, i32* %15, align 8
  switch i32 %1, label %35 [
    i32 1, label %16
    i32 2, label %21
  ]

16:                                               ; preds = %3
  %17 = getelementptr inbounds %struct.x509_object_st, %struct.x509_object_st* %4, i64 0, i32 1
  %18 = bitcast %union.anon* %17 to %struct.x509_st**
  store %struct.x509_st* %5, %struct.x509_st** %18, align 8
  %19 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %5, i64 0, i32 0
  store %struct.x509_cinf_st* %6, %struct.x509_cinf_st** %19, align 8
  %20 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %6, i64 0, i32 5
  br label %26

21:                                               ; preds = %3
  %22 = getelementptr inbounds %struct.x509_object_st, %struct.x509_object_st* %4, i64 0, i32 1
  %23 = bitcast %union.anon* %22 to %struct.X509_crl_st**
  store %struct.X509_crl_st* %7, %struct.X509_crl_st** %23, align 8
  %24 = getelementptr inbounds %struct.X509_crl_st, %struct.X509_crl_st* %7, i64 0, i32 0
  store %struct.X509_crl_info_st* %8, %struct.X509_crl_info_st** %24, align 8
  %25 = getelementptr inbounds %struct.X509_crl_info_st, %struct.X509_crl_info_st* %8, i64 0, i32 2
  br label %26

26:                                               ; preds = %21, %16
  %27 = phi %struct.X509_name_st** [ %25, %21 ], [ %20, %16 ]
  store %struct.X509_name_st* %2, %struct.X509_name_st** %27, align 8
  %28 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #6
  store i64 -6148914691236517206, i64* %9, align 8
  %29 = bitcast %struct.stack_st_X509_OBJECT* %0 to %struct.stack_st*
  call void @sk_sort(%struct.stack_st* %29) #6
  %30 = call i32 @sk_find(%struct.stack_st* %29, i64* nonnull %9, i8* nonnull %10, i32 (i32 (i8**, i8**)*, i8**, i8**)* nonnull @sk_X509_OBJECT_call_cmp_func) #6
  %31 = icmp eq i32 %30, 0
  %32 = load i64, i64* %9, align 8
  %33 = trunc i64 %32 to i32
  %34 = select i1 %31, i32 -1, i32 %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #6
  br label %35

35:                                               ; preds = %3, %26
  %36 = phi i32 [ %34, %26 ], [ -1, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %14) #6
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %13) #6
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %12) #6
  call void @llvm.lifetime.end.p0i8(i64 232, i8* nonnull %11) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #6
  ret i32 %36
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @x509_object_idx_cnt(%struct.stack_st_X509_OBJECT*, i32, %struct.X509_name_st*, i32*) unnamed_addr #0 {
  %5 = alloca %struct.x509_object_st, align 8
  %6 = alloca %struct.x509_st, align 8
  %7 = alloca %struct.x509_cinf_st, align 8
  %8 = alloca %struct.X509_crl_st, align 8
  %9 = alloca %struct.X509_crl_info_st, align 8
  %10 = alloca i64, align 8
  %11 = bitcast %struct.x509_object_st* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false)
  %12 = bitcast %struct.x509_st* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 232, i8* nonnull %12) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 8 bitcast ({ %struct.x509_cinf_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, [4 x i8], %struct.crypto_ex_data_st, i64, i64, i64, i64, i64, i64, %struct.asn1_string_st*, %struct.AUTHORITY_KEYID_st*, %struct.X509_POLICY_CACHE_st*, %struct.stack_st_DIST_POINT*, %struct.stack_st_GENERAL_NAME*, %struct.NAME_CONSTRAINTS_st*, [20 x i8], [4 x i8], %struct.x509_cert_aux_st*, %struct.crypto_buffer_st*, %union.crypto_mutex_st }* @__const.x509_object_idx_cnt.x509_s to i8*), i64 232, i1 false)
  %13 = bitcast %struct.x509_cinf_st* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %13) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 104, i1 false)
  %14 = bitcast %struct.X509_crl_st* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %14) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 120, i1 false)
  %15 = bitcast %struct.X509_crl_info_st* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %15) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 80, i1 false)
  %16 = getelementptr inbounds %struct.x509_object_st, %struct.x509_object_st* %5, i64 0, i32 0
  store i32 %1, i32* %16, align 8
  switch i32 %1, label %84 [
    i32 1, label %17
    i32 2, label %22
  ]

17:                                               ; preds = %4
  %18 = getelementptr inbounds %struct.x509_object_st, %struct.x509_object_st* %5, i64 0, i32 1
  %19 = bitcast %union.anon* %18 to %struct.x509_st**
  store %struct.x509_st* %6, %struct.x509_st** %19, align 8
  %20 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %6, i64 0, i32 0
  store %struct.x509_cinf_st* %7, %struct.x509_cinf_st** %20, align 8
  %21 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %7, i64 0, i32 5
  br label %27

22:                                               ; preds = %4
  %23 = getelementptr inbounds %struct.x509_object_st, %struct.x509_object_st* %5, i64 0, i32 1
  %24 = bitcast %union.anon* %23 to %struct.X509_crl_st**
  store %struct.X509_crl_st* %8, %struct.X509_crl_st** %24, align 8
  %25 = getelementptr inbounds %struct.X509_crl_st, %struct.X509_crl_st* %8, i64 0, i32 0
  store %struct.X509_crl_info_st* %9, %struct.X509_crl_info_st** %25, align 8
  %26 = getelementptr inbounds %struct.X509_crl_info_st, %struct.X509_crl_info_st* %9, i64 0, i32 2
  br label %27

27:                                               ; preds = %22, %17
  %28 = phi %struct.X509_name_st** [ %26, %22 ], [ %21, %17 ]
  store %struct.X509_name_st* %2, %struct.X509_name_st** %28, align 8
  %29 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #6
  store i64 -6148914691236517206, i64* %10, align 8
  %30 = bitcast %struct.stack_st_X509_OBJECT* %0 to %struct.stack_st*
  call void @sk_sort(%struct.stack_st* %30) #6
  %31 = call i32 @sk_find(%struct.stack_st* %30, i64* nonnull %10, i8* nonnull %11, i32 (i32 (i8**, i8**)*, i8**, i8**)* nonnull @sk_X509_OBJECT_call_cmp_func) #6
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %82, label %33

33:                                               ; preds = %27
  %34 = icmp eq i32* %3, null
  br i1 %34, label %79, label %35

35:                                               ; preds = %33
  store i32 1, i32* %3, align 4
  %36 = load i64, i64* %10, align 8
  %37 = trunc i64 %36 to i32
  %38 = add i32 %37, 1
  %39 = call i64 @sk_num(%struct.stack_st* %30) #6
  %40 = trunc i64 %39 to i32
  %41 = icmp slt i32 %38, %40
  br i1 %41, label %42, label %79

42:                                               ; preds = %35
  %43 = getelementptr inbounds %struct.x509_object_st, %struct.x509_object_st* %5, i64 0, i32 1
  %44 = bitcast %union.anon* %43 to %struct.X509_crl_st**
  %45 = bitcast %union.anon* %43 to %struct.x509_st**
  %46 = sext i32 %38 to i64
  br label %47

47:                                               ; preds = %42, %71
  %48 = phi i64 [ %46, %42 ], [ %78, %71 ]
  %49 = phi i32 [ %38, %42 ], [ %74, %71 ]
  %50 = call i8* @sk_value(%struct.stack_st* %30, i64 %48) #6
  %51 = bitcast i8* %50 to i32*
  %52 = load i32, i32* %51, align 8
  %53 = load i32, i32* %16, align 8
  %54 = icmp eq i32 %52, %53
  br i1 %54, label %55, label %79

55:                                               ; preds = %47
  switch i32 %52, label %71 [
    i32 1, label %56
    i32 2, label %62
  ]

56:                                               ; preds = %55
  %57 = getelementptr inbounds i8, i8* %50, i64 8
  %58 = bitcast i8* %57 to %struct.x509_st**
  %59 = load %struct.x509_st*, %struct.x509_st** %58, align 8
  %60 = load %struct.x509_st*, %struct.x509_st** %45, align 8
  %61 = call i32 @X509_subject_name_cmp(%struct.x509_st* %59, %struct.x509_st* %60) #6
  br label %68

62:                                               ; preds = %55
  %63 = getelementptr inbounds i8, i8* %50, i64 8
  %64 = bitcast i8* %63 to %struct.X509_crl_st**
  %65 = load %struct.X509_crl_st*, %struct.X509_crl_st** %64, align 8
  %66 = load %struct.X509_crl_st*, %struct.X509_crl_st** %44, align 8
  %67 = call i32 @X509_CRL_cmp(%struct.X509_crl_st* %65, %struct.X509_crl_st* %66) #6
  br label %68

68:                                               ; preds = %56, %62
  %69 = phi i32 [ %67, %62 ], [ %61, %56 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %79

71:                                               ; preds = %55, %68
  %72 = load i32, i32* %3, align 4
  %73 = add nsw i32 %72, 1
  store i32 %73, i32* %3, align 4
  %74 = add nsw i32 %49, 1
  %75 = call i64 @sk_num(%struct.stack_st* %30) #6
  %76 = trunc i64 %75 to i32
  %77 = icmp slt i32 %74, %76
  %78 = add nsw i64 %48, 1
  br i1 %77, label %47, label %79

79:                                               ; preds = %68, %71, %47, %35, %33
  %80 = load i64, i64* %10, align 8
  %81 = trunc i64 %80 to i32
  br label %82

82:                                               ; preds = %27, %79
  %83 = phi i32 [ %81, %79 ], [ -1, %27 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #6
  br label %84

84:                                               ; preds = %4, %82
  %85 = phi i32 [ %83, %82 ], [ -1, %4 ]
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %15) #6
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %14) #6
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %13) #6
  call void @llvm.lifetime.end.p0i8(i64 232, i8* nonnull %12) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #6
  ret i32 %85
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.stack_st_X509_OBJECT* @X509_STORE_get0_objects(%struct.x509_store_st* nocapture readonly) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %0, i64 0, i32 1
  %3 = load %struct.stack_st_X509_OBJECT*, %struct.stack_st_X509_OBJECT** %2, align 8
  ret %struct.stack_st_X509_OBJECT* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.stack_st_X509* @X509_STORE_get1_certs(%struct.x509_store_ctx_st* nocapture readonly, %struct.X509_name_st*) local_unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.x509_object_st, align 8
  %5 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #6
  store i32 -1431655766, i32* %3, align 4
  %6 = tail call %struct.stack_st* @sk_new_null() #6
  %7 = bitcast %struct.stack_st* %6 to %struct.stack_st_X509*
  %8 = icmp eq %struct.stack_st* %6, null
  br i1 %8, label %82, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.x509_store_ctx_st, %struct.x509_store_ctx_st* %0, i64 0, i32 0
  %11 = load %struct.x509_store_st*, %struct.x509_store_st** %10, align 8
  %12 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %11, i64 0, i32 2
  tail call void @CRYPTO_MUTEX_lock_write(%union.crypto_mutex_st* %12) #6
  %13 = load %struct.x509_store_st*, %struct.x509_store_st** %10, align 8
  %14 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %13, i64 0, i32 1
  %15 = load %struct.stack_st_X509_OBJECT*, %struct.stack_st_X509_OBJECT** %14, align 8
  %16 = call fastcc i32 @x509_object_idx_cnt(%struct.stack_st_X509_OBJECT* %15, i32 1, %struct.X509_name_st* %1, i32* nonnull %3)
  %17 = icmp slt i32 %16, 0
  br i1 %17, label %18, label %48

18:                                               ; preds = %9
  %19 = bitcast %struct.x509_object_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 16, i1 false)
  %20 = load %struct.x509_store_st*, %struct.x509_store_st** %10, align 8
  %21 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %20, i64 0, i32 2
  call void @CRYPTO_MUTEX_unlock_write(%union.crypto_mutex_st* %21) #6
  %22 = call i32 @X509_STORE_get_by_subject(%struct.x509_store_ctx_st* %0, i32 1, %struct.X509_name_st* %1, %struct.x509_object_st* nonnull %4)
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %46, label %24

24:                                               ; preds = %18
  %25 = getelementptr inbounds %struct.x509_object_st, %struct.x509_object_st* %4, i64 0, i32 0
  %26 = load i32, i32* %25, align 8
  switch i32 %26, label %35 [
    i32 1, label %27
    i32 2, label %31
  ]

27:                                               ; preds = %24
  %28 = getelementptr inbounds %struct.x509_object_st, %struct.x509_object_st* %4, i64 0, i32 1
  %29 = bitcast %union.anon* %28 to %struct.x509_st**
  %30 = load %struct.x509_st*, %struct.x509_st** %29, align 8
  call void @X509_free(%struct.x509_st* %30) #6
  br label %35

31:                                               ; preds = %24
  %32 = getelementptr inbounds %struct.x509_object_st, %struct.x509_object_st* %4, i64 0, i32 1
  %33 = bitcast %union.anon* %32 to %struct.X509_crl_st**
  %34 = load %struct.X509_crl_st*, %struct.X509_crl_st** %33, align 8
  call void @X509_CRL_free(%struct.X509_crl_st* %34) #6
  br label %35

35:                                               ; preds = %24, %27, %31
  %36 = load %struct.x509_store_st*, %struct.x509_store_st** %10, align 8
  %37 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %36, i64 0, i32 2
  call void @CRYPTO_MUTEX_lock_write(%union.crypto_mutex_st* %37) #6
  %38 = load %struct.x509_store_st*, %struct.x509_store_st** %10, align 8
  %39 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %38, i64 0, i32 1
  %40 = load %struct.stack_st_X509_OBJECT*, %struct.stack_st_X509_OBJECT** %39, align 8
  %41 = call fastcc i32 @x509_object_idx_cnt(%struct.stack_st_X509_OBJECT* %40, i32 1, %struct.X509_name_st* %1, i32* nonnull %3)
  %42 = icmp slt i32 %41, 0
  br i1 %42, label %43, label %47

43:                                               ; preds = %35
  %44 = load %struct.x509_store_st*, %struct.x509_store_st** %10, align 8
  %45 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %44, i64 0, i32 2
  call void @CRYPTO_MUTEX_unlock_write(%union.crypto_mutex_st* %45) #6
  br label %46

46:                                               ; preds = %18, %43
  call void @sk_free(%struct.stack_st* nonnull %6) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #6
  br label %82

47:                                               ; preds = %35
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #6
  br label %48

48:                                               ; preds = %47, %9
  %49 = phi i32 [ %41, %47 ], [ %16, %9 ]
  %50 = load i32, i32* %3, align 4
  %51 = icmp sgt i32 %50, 0
  %52 = load %struct.x509_store_st*, %struct.x509_store_st** %10, align 8
  br i1 %51, label %53, label %79

53:                                               ; preds = %48
  %54 = sext i32 %49 to i64
  br label %55

55:                                               ; preds = %53, %72
  %56 = phi i64 [ %54, %53 ], [ %75, %72 ]
  %57 = phi %struct.x509_store_st* [ %52, %53 ], [ %78, %72 ]
  %58 = phi i32 [ 0, %53 ], [ %74, %72 ]
  %59 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %57, i64 0, i32 1
  %60 = bitcast %struct.stack_st_X509_OBJECT** %59 to %struct.stack_st**
  %61 = load %struct.stack_st*, %struct.stack_st** %60, align 8
  %62 = call i8* @sk_value(%struct.stack_st* %61, i64 %56) #6
  %63 = getelementptr inbounds i8, i8* %62, i64 8
  %64 = bitcast i8* %63 to %struct.x509_st**
  %65 = load %struct.x509_st*, %struct.x509_st** %64, align 8
  %66 = bitcast %struct.x509_st* %65 to i8*
  %67 = call i64 @sk_push(%struct.stack_st* nonnull %6, i8* %66) #6
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %55
  %70 = load %struct.x509_store_st*, %struct.x509_store_st** %10, align 8
  %71 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %70, i64 0, i32 2
  call void @CRYPTO_MUTEX_unlock_write(%union.crypto_mutex_st* %71) #6
  call void @sk_pop_free_ex(%struct.stack_st* nonnull %6, void (void (i8*)*, i8*)* nonnull @sk_X509_call_free_func, void (i8*)* bitcast (void (%struct.x509_st*)* @X509_free to void (i8*)*)) #6
  br label %82

72:                                               ; preds = %55
  %73 = call i32 @X509_up_ref(%struct.x509_st* %65) #6
  %74 = add nuw nsw i32 %58, 1
  %75 = add nsw i64 %56, 1
  %76 = load i32, i32* %3, align 4
  %77 = icmp slt i32 %74, %76
  %78 = load %struct.x509_store_st*, %struct.x509_store_st** %10, align 8
  br i1 %77, label %55, label %79

79:                                               ; preds = %72, %48
  %80 = phi %struct.x509_store_st* [ %52, %48 ], [ %78, %72 ]
  %81 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %80, i64 0, i32 2
  call void @CRYPTO_MUTEX_unlock_write(%union.crypto_mutex_st* %81) #6
  br label %82

82:                                               ; preds = %46, %2, %79, %69
  %83 = phi %struct.stack_st_X509* [ null, %69 ], [ %7, %79 ], [ null, %2 ], [ null, %46 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #6
  ret %struct.stack_st_X509* %83
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.stack_st_X509_CRL* @X509_STORE_get1_crls(%struct.x509_store_ctx_st* nocapture readonly, %struct.X509_name_st*) local_unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.x509_object_st, align 8
  %5 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #6
  store i32 -1431655766, i32* %3, align 4
  %6 = bitcast %struct.x509_object_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  %7 = tail call %struct.stack_st* @sk_new_null() #6
  %8 = bitcast %struct.stack_st* %7 to %struct.stack_st_X509_CRL*
  %9 = icmp eq %struct.stack_st* %7, null
  br i1 %9, label %70, label %10

10:                                               ; preds = %2
  %11 = call i32 @X509_STORE_get_by_subject(%struct.x509_store_ctx_st* %0, i32 2, %struct.X509_name_st* %1, %struct.x509_object_st* nonnull %4)
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %14

13:                                               ; preds = %10
  tail call void @sk_free(%struct.stack_st* nonnull %7) #6
  br label %70

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.x509_object_st, %struct.x509_object_st* %4, i64 0, i32 0
  %16 = load i32, i32* %15, align 8
  switch i32 %16, label %25 [
    i32 1, label %17
    i32 2, label %21
  ]

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.x509_object_st, %struct.x509_object_st* %4, i64 0, i32 1
  %19 = bitcast %union.anon* %18 to %struct.x509_st**
  %20 = load %struct.x509_st*, %struct.x509_st** %19, align 8
  tail call void @X509_free(%struct.x509_st* %20) #6
  br label %25

21:                                               ; preds = %14
  %22 = getelementptr inbounds %struct.x509_object_st, %struct.x509_object_st* %4, i64 0, i32 1
  %23 = bitcast %union.anon* %22 to %struct.X509_crl_st**
  %24 = load %struct.X509_crl_st*, %struct.X509_crl_st** %23, align 8
  tail call void @X509_CRL_free(%struct.X509_crl_st* %24) #6
  br label %25

25:                                               ; preds = %14, %17, %21
  %26 = getelementptr inbounds %struct.x509_store_ctx_st, %struct.x509_store_ctx_st* %0, i64 0, i32 0
  %27 = load %struct.x509_store_st*, %struct.x509_store_st** %26, align 8
  %28 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %27, i64 0, i32 2
  tail call void @CRYPTO_MUTEX_lock_write(%union.crypto_mutex_st* %28) #6
  %29 = load %struct.x509_store_st*, %struct.x509_store_st** %26, align 8
  %30 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %29, i64 0, i32 1
  %31 = load %struct.stack_st_X509_OBJECT*, %struct.stack_st_X509_OBJECT** %30, align 8
  %32 = call fastcc i32 @x509_object_idx_cnt(%struct.stack_st_X509_OBJECT* %31, i32 2, %struct.X509_name_st* %1, i32* nonnull %3)
  %33 = icmp slt i32 %32, 0
  br i1 %33, label %40, label %34

34:                                               ; preds = %25
  %35 = load i32, i32* %3, align 4
  %36 = icmp sgt i32 %35, 0
  %37 = load %struct.x509_store_st*, %struct.x509_store_st** %26, align 8
  br i1 %36, label %38, label %67

38:                                               ; preds = %34
  %39 = sext i32 %32 to i64
  br label %43

40:                                               ; preds = %25
  %41 = load %struct.x509_store_st*, %struct.x509_store_st** %26, align 8
  %42 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %41, i64 0, i32 2
  call void @CRYPTO_MUTEX_unlock_write(%union.crypto_mutex_st* %42) #6
  call void @sk_free(%struct.stack_st* nonnull %7) #6
  br label %70

43:                                               ; preds = %38, %61
  %44 = phi i64 [ %39, %38 ], [ %63, %61 ]
  %45 = phi %struct.x509_store_st* [ %37, %38 ], [ %66, %61 ]
  %46 = phi i32 [ 0, %38 ], [ %62, %61 ]
  %47 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %45, i64 0, i32 1
  %48 = bitcast %struct.stack_st_X509_OBJECT** %47 to %struct.stack_st**
  %49 = load %struct.stack_st*, %struct.stack_st** %48, align 8
  %50 = call i8* @sk_value(%struct.stack_st* %49, i64 %44) #6
  %51 = getelementptr inbounds i8, i8* %50, i64 8
  %52 = bitcast i8* %51 to %struct.X509_crl_st**
  %53 = load %struct.X509_crl_st*, %struct.X509_crl_st** %52, align 8
  %54 = call i32 @X509_CRL_up_ref(%struct.X509_crl_st* %53) #6
  %55 = bitcast %struct.X509_crl_st* %53 to i8*
  %56 = call i64 @sk_push(%struct.stack_st* nonnull %7, i8* %55) #6
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %43
  %59 = load %struct.x509_store_st*, %struct.x509_store_st** %26, align 8
  %60 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %59, i64 0, i32 2
  call void @CRYPTO_MUTEX_unlock_write(%union.crypto_mutex_st* %60) #6
  call void @X509_CRL_free(%struct.X509_crl_st* %53) #6
  call void @sk_pop_free_ex(%struct.stack_st* nonnull %7, void (void (i8*)*, i8*)* nonnull @sk_X509_CRL_call_free_func, void (i8*)* bitcast (void (%struct.X509_crl_st*)* @X509_CRL_free to void (i8*)*)) #6
  br label %70

61:                                               ; preds = %43
  %62 = add nuw nsw i32 %46, 1
  %63 = add nsw i64 %44, 1
  %64 = load i32, i32* %3, align 4
  %65 = icmp slt i32 %62, %64
  %66 = load %struct.x509_store_st*, %struct.x509_store_st** %26, align 8
  br i1 %65, label %43, label %67

67:                                               ; preds = %61, %34
  %68 = phi %struct.x509_store_st* [ %37, %34 ], [ %66, %61 ]
  %69 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %68, i64 0, i32 2
  call void @CRYPTO_MUTEX_unlock_write(%union.crypto_mutex_st* %69) #6
  br label %70

70:                                               ; preds = %2, %67, %58, %40, %13
  %71 = phi %struct.stack_st_X509_CRL* [ null, %40 ], [ null, %58 ], [ %8, %67 ], [ null, %13 ], [ null, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #6
  ret %struct.stack_st_X509_CRL* %71
}

declare i32 @X509_cmp(%struct.x509_st*, %struct.x509_st*) local_unnamed_addr #2

declare i32 @X509_CRL_match(%struct.X509_crl_st*, %struct.X509_crl_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_STORE_CTX_get1_issuer(%struct.x509_st** nocapture, %struct.x509_store_ctx_st*, %struct.x509_st*) local_unnamed_addr #0 {
  %4 = alloca %struct.x509_object_st, align 8
  %5 = alloca %struct.x509_st, align 8
  %6 = alloca %struct.x509_cinf_st, align 8
  %7 = alloca i64, align 8
  %8 = alloca %struct.x509_object_st, align 8
  %9 = bitcast %struct.x509_object_st* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = tail call %struct.X509_name_st* @X509_get_issuer_name(%struct.x509_st* %2) #6
  %11 = call i32 @X509_STORE_get_by_subject(%struct.x509_store_ctx_st* %1, i32 1, %struct.X509_name_st* %10, %struct.x509_object_st* nonnull %8)
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %111, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %struct.x509_store_ctx_st, %struct.x509_store_ctx_st* %1, i64 0, i32 9
  %15 = load i32 (%struct.x509_store_ctx_st*, %struct.x509_st*, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.x509_st*, %struct.x509_st*)** %14, align 8
  %16 = getelementptr inbounds %struct.x509_object_st, %struct.x509_object_st* %8, i64 0, i32 1
  %17 = bitcast %union.anon* %16 to %struct.x509_st**
  %18 = load %struct.x509_st*, %struct.x509_st** %17, align 8
  %19 = tail call i32 %15(%struct.x509_store_ctx_st* %1, %struct.x509_st* %2, %struct.x509_st* %18) #6
  %20 = icmp eq i32 %19, 0
  %21 = bitcast %struct.x509_st* %18 to %struct.X509_crl_st*
  br i1 %20, label %25, label %22

22:                                               ; preds = %13
  %23 = ptrtoint %struct.x509_st* %18 to i64
  %24 = bitcast %struct.x509_st** %0 to i64*
  store i64 %23, i64* %24, align 8
  br label %111

25:                                               ; preds = %13
  %26 = getelementptr inbounds %struct.x509_object_st, %struct.x509_object_st* %8, i64 0, i32 0
  %27 = load i32, i32* %26, align 8
  switch i32 %27, label %30 [
    i32 1, label %28
    i32 2, label %29
  ]

28:                                               ; preds = %25
  tail call void @X509_free(%struct.x509_st* %18) #6
  br label %30

29:                                               ; preds = %25
  tail call void @X509_CRL_free(%struct.X509_crl_st* %21) #6
  br label %30

30:                                               ; preds = %25, %28, %29
  %31 = getelementptr inbounds %struct.x509_store_ctx_st, %struct.x509_store_ctx_st* %1, i64 0, i32 0
  %32 = load %struct.x509_store_st*, %struct.x509_store_st** %31, align 8
  %33 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %32, i64 0, i32 2
  tail call void @CRYPTO_MUTEX_lock_write(%union.crypto_mutex_st* %33) #6
  %34 = load %struct.x509_store_st*, %struct.x509_store_st** %31, align 8
  %35 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %34, i64 0, i32 1
  %36 = bitcast %struct.stack_st_X509_OBJECT** %35 to %struct.stack_st**
  %37 = load %struct.stack_st*, %struct.stack_st** %36, align 8
  %38 = bitcast %struct.x509_object_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #6
  %39 = bitcast %struct.x509_object_st* %4 to i64*
  store i64 -6148914691236517206, i64* %39, align 8
  %40 = bitcast %struct.x509_st* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 232, i8* nonnull %40) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %40, i8* align 8 bitcast ({ %struct.x509_cinf_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, [4 x i8], %struct.crypto_ex_data_st, i64, i64, i64, i64, i64, i64, %struct.asn1_string_st*, %struct.AUTHORITY_KEYID_st*, %struct.X509_POLICY_CACHE_st*, %struct.stack_st_DIST_POINT*, %struct.stack_st_GENERAL_NAME*, %struct.NAME_CONSTRAINTS_st*, [20 x i8], [4 x i8], %struct.x509_cert_aux_st*, %struct.crypto_buffer_st*, %union.crypto_mutex_st }* @__const.x509_object_idx_cnt.x509_s to i8*), i64 232, i1 false) #6
  %41 = bitcast %struct.x509_cinf_st* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %41) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 104, i1 false) #6
  %42 = getelementptr inbounds %struct.x509_object_st, %struct.x509_object_st* %4, i64 0, i32 0
  store i32 1, i32* %42, align 8
  %43 = getelementptr inbounds %struct.x509_object_st, %struct.x509_object_st* %4, i64 0, i32 1
  %44 = bitcast %union.anon* %43 to %struct.x509_st**
  store %struct.x509_st* %5, %struct.x509_st** %44, align 8
  %45 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %5, i64 0, i32 0
  store %struct.x509_cinf_st* %6, %struct.x509_cinf_st** %45, align 8
  %46 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %6, i64 0, i32 5
  store %struct.X509_name_st* %10, %struct.X509_name_st** %46, align 8
  %47 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #6
  store i64 -6148914691236517206, i64* %7, align 8
  call void @sk_sort(%struct.stack_st* %37) #6
  %48 = call i32 @sk_find(%struct.stack_st* %37, i64* nonnull %7, i8* nonnull %38, i32 (i32 (i8**, i8**)*, i8**, i8**)* nonnull @sk_X509_OBJECT_call_cmp_func) #6
  %49 = icmp eq i32 %48, 0
  %50 = load i64, i64* %7, align 8
  %51 = trunc i64 %50 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #6
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %41) #6
  call void @llvm.lifetime.end.p0i8(i64 232, i8* nonnull %40) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #6
  %52 = icmp eq i32 %51, -1
  %53 = or i1 %49, %52
  br i1 %53, label %107, label %54

54:                                               ; preds = %30
  %55 = shl i64 %50, 32
  %56 = ashr exact i64 %55, 32
  %57 = load %struct.x509_store_st*, %struct.x509_store_st** %31, align 8
  %58 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %57, i64 0, i32 1
  %59 = bitcast %struct.stack_st_X509_OBJECT** %58 to %struct.stack_st**
  %60 = load %struct.stack_st*, %struct.stack_st** %59, align 8
  %61 = call i64 @sk_num(%struct.stack_st* %60) #6
  %62 = icmp ult i64 %56, %61
  br i1 %62, label %70, label %107

63:                                               ; preds = %87
  %64 = load %struct.x509_store_st*, %struct.x509_store_st** %31, align 8
  %65 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %64, i64 0, i32 1
  %66 = bitcast %struct.stack_st_X509_OBJECT** %65 to %struct.stack_st**
  %67 = load %struct.stack_st*, %struct.stack_st** %66, align 8
  %68 = call i64 @sk_num(%struct.stack_st* %67) #6
  %69 = icmp ult i64 %92, %68
  br i1 %69, label %70, label %107

70:                                               ; preds = %54, %63
  %71 = phi i64 [ %92, %63 ], [ %56, %54 ]
  %72 = load %struct.x509_store_st*, %struct.x509_store_st** %31, align 8
  %73 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %72, i64 0, i32 1
  %74 = bitcast %struct.stack_st_X509_OBJECT** %73 to %struct.stack_st**
  %75 = load %struct.stack_st*, %struct.stack_st** %74, align 8
  %76 = call i8* @sk_value(%struct.stack_st* %75, i64 %71) #6
  %77 = bitcast i8* %76 to i32*
  %78 = load i32, i32* %77, align 8
  %79 = icmp eq i32 %78, 1
  br i1 %79, label %80, label %107

80:                                               ; preds = %70
  %81 = getelementptr inbounds i8, i8* %76, i64 8
  %82 = bitcast i8* %81 to %struct.x509_st**
  %83 = load %struct.x509_st*, %struct.x509_st** %82, align 8
  %84 = call %struct.X509_name_st* @X509_get_subject_name(%struct.x509_st* %83) #6
  %85 = call i32 @X509_NAME_cmp(%struct.X509_name_st* %10, %struct.X509_name_st* %84) #6
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %107

87:                                               ; preds = %80
  %88 = load i32 (%struct.x509_store_ctx_st*, %struct.x509_st*, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.x509_st*, %struct.x509_st*)** %14, align 8
  %89 = load %struct.x509_st*, %struct.x509_st** %82, align 8
  %90 = call i32 %88(%struct.x509_store_ctx_st* %1, %struct.x509_st* %2, %struct.x509_st* %89) #6
  %91 = icmp eq i32 %90, 0
  %92 = add nuw i64 %71, 1
  br i1 %91, label %63, label %93

93:                                               ; preds = %87
  %94 = bitcast i8* %76 to i32*
  %95 = bitcast i8* %81 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = bitcast %struct.x509_st** %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = load i32, i32* %94, align 8
  switch i32 %98, label %107 [
    i32 1, label %99
    i32 2, label %103
  ]

99:                                               ; preds = %93
  %100 = bitcast i8* %81 to %struct.x509_st**
  %101 = load %struct.x509_st*, %struct.x509_st** %100, align 8
  %102 = call i32 @X509_up_ref(%struct.x509_st* %101) #6
  br label %107

103:                                              ; preds = %93
  %104 = bitcast i8* %81 to %struct.X509_crl_st**
  %105 = load %struct.X509_crl_st*, %struct.X509_crl_st** %104, align 8
  %106 = call i32 @X509_CRL_up_ref(%struct.X509_crl_st* %105) #6
  br label %107

107:                                              ; preds = %63, %70, %80, %54, %103, %99, %93, %30
  %108 = phi i32 [ 0, %30 ], [ 1, %93 ], [ 1, %99 ], [ 1, %103 ], [ 0, %54 ], [ 0, %80 ], [ 0, %70 ], [ 0, %63 ]
  %109 = load %struct.x509_store_st*, %struct.x509_store_st** %31, align 8
  %110 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %109, i64 0, i32 2
  call void @CRYPTO_MUTEX_unlock_write(%union.crypto_mutex_st* %110) #6
  br label %111

111:                                              ; preds = %3, %107, %22
  %112 = phi i32 [ 1, %22 ], [ %108, %107 ], [ 0, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #6
  ret i32 %112
}

declare %struct.X509_name_st* @X509_get_issuer_name(%struct.x509_st*) local_unnamed_addr #2

declare i32 @X509_NAME_cmp(%struct.X509_name_st*, %struct.X509_name_st*) local_unnamed_addr #2

declare %struct.X509_name_st* @X509_get_subject_name(%struct.x509_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_STORE_set_flags(%struct.x509_store_st* nocapture readonly, i64) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %0, i64 0, i32 5
  %4 = load %struct.X509_VERIFY_PARAM_st*, %struct.X509_VERIFY_PARAM_st** %3, align 8
  %5 = tail call i32 @X509_VERIFY_PARAM_set_flags(%struct.X509_VERIFY_PARAM_st* %4, i64 %1) #6
  ret i32 %5
}

declare i32 @X509_VERIFY_PARAM_set_flags(%struct.X509_VERIFY_PARAM_st*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_STORE_set_depth(%struct.x509_store_st* nocapture readonly, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %0, i64 0, i32 5
  %4 = load %struct.X509_VERIFY_PARAM_st*, %struct.X509_VERIFY_PARAM_st** %3, align 8
  tail call void @X509_VERIFY_PARAM_set_depth(%struct.X509_VERIFY_PARAM_st* %4, i32 %1) #6
  ret i32 1
}

declare void @X509_VERIFY_PARAM_set_depth(%struct.X509_VERIFY_PARAM_st*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_STORE_set_purpose(%struct.x509_store_st* nocapture readonly, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %0, i64 0, i32 5
  %4 = load %struct.X509_VERIFY_PARAM_st*, %struct.X509_VERIFY_PARAM_st** %3, align 8
  %5 = tail call i32 @X509_VERIFY_PARAM_set_purpose(%struct.X509_VERIFY_PARAM_st* %4, i32 %1) #6
  ret i32 %5
}

declare i32 @X509_VERIFY_PARAM_set_purpose(%struct.X509_VERIFY_PARAM_st*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_STORE_set_trust(%struct.x509_store_st* nocapture readonly, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %0, i64 0, i32 5
  %4 = load %struct.X509_VERIFY_PARAM_st*, %struct.X509_VERIFY_PARAM_st** %3, align 8
  %5 = tail call i32 @X509_VERIFY_PARAM_set_trust(%struct.X509_VERIFY_PARAM_st* %4, i32 %1) #6
  ret i32 %5
}

declare i32 @X509_VERIFY_PARAM_set_trust(%struct.X509_VERIFY_PARAM_st*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_STORE_set1_param(%struct.x509_store_st* nocapture readonly, %struct.X509_VERIFY_PARAM_st*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %0, i64 0, i32 5
  %4 = load %struct.X509_VERIFY_PARAM_st*, %struct.X509_VERIFY_PARAM_st** %3, align 8
  %5 = tail call i32 @X509_VERIFY_PARAM_set1(%struct.X509_VERIFY_PARAM_st* %4, %struct.X509_VERIFY_PARAM_st* %1) #6
  ret i32 %5
}

declare i32 @X509_VERIFY_PARAM_set1(%struct.X509_VERIFY_PARAM_st*, %struct.X509_VERIFY_PARAM_st*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.X509_VERIFY_PARAM_st* @X509_STORE_get0_param(%struct.x509_store_st* nocapture readonly) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %0, i64 0, i32 5
  %3 = load %struct.X509_VERIFY_PARAM_st*, %struct.X509_VERIFY_PARAM_st** %2, align 8
  ret %struct.X509_VERIFY_PARAM_st* %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @X509_STORE_set_verify(%struct.x509_store_st* nocapture, i32 (%struct.x509_store_ctx_st*)*) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %0, i64 0, i32 6
  store i32 (%struct.x509_store_ctx_st*)* %1, i32 (%struct.x509_store_ctx_st*)** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 (%struct.x509_store_ctx_st*)* @X509_STORE_get_verify(%struct.x509_store_st* nocapture readonly) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %0, i64 0, i32 6
  %3 = load i32 (%struct.x509_store_ctx_st*)*, i32 (%struct.x509_store_ctx_st*)** %2, align 8
  ret i32 (%struct.x509_store_ctx_st*)* %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @X509_STORE_set_verify_cb(%struct.x509_store_st* nocapture, i32 (i32, %struct.x509_store_ctx_st*)*) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %0, i64 0, i32 7
  store i32 (i32, %struct.x509_store_ctx_st*)* %1, i32 (i32, %struct.x509_store_ctx_st*)** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 (i32, %struct.x509_store_ctx_st*)* @X509_STORE_get_verify_cb(%struct.x509_store_st* nocapture readonly) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %0, i64 0, i32 7
  %3 = load i32 (i32, %struct.x509_store_ctx_st*)*, i32 (i32, %struct.x509_store_ctx_st*)** %2, align 8
  ret i32 (i32, %struct.x509_store_ctx_st*)* %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @X509_STORE_set_get_issuer(%struct.x509_store_st* nocapture, i32 (%struct.x509_st**, %struct.x509_store_ctx_st*, %struct.x509_st*)*) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %0, i64 0, i32 8
  store i32 (%struct.x509_st**, %struct.x509_store_ctx_st*, %struct.x509_st*)* %1, i32 (%struct.x509_st**, %struct.x509_store_ctx_st*, %struct.x509_st*)** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 (%struct.x509_st**, %struct.x509_store_ctx_st*, %struct.x509_st*)* @X509_STORE_get_get_issuer(%struct.x509_store_st* nocapture readonly) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %0, i64 0, i32 8
  %3 = load i32 (%struct.x509_st**, %struct.x509_store_ctx_st*, %struct.x509_st*)*, i32 (%struct.x509_st**, %struct.x509_store_ctx_st*, %struct.x509_st*)** %2, align 8
  ret i32 (%struct.x509_st**, %struct.x509_store_ctx_st*, %struct.x509_st*)* %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @X509_STORE_set_check_issued(%struct.x509_store_st* nocapture, i32 (%struct.x509_store_ctx_st*, %struct.x509_st*, %struct.x509_st*)*) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %0, i64 0, i32 9
  store i32 (%struct.x509_store_ctx_st*, %struct.x509_st*, %struct.x509_st*)* %1, i32 (%struct.x509_store_ctx_st*, %struct.x509_st*, %struct.x509_st*)** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 (%struct.x509_store_ctx_st*, %struct.x509_st*, %struct.x509_st*)* @X509_STORE_get_check_issued(%struct.x509_store_st* nocapture readonly) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %0, i64 0, i32 9
  %3 = load i32 (%struct.x509_store_ctx_st*, %struct.x509_st*, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.x509_st*, %struct.x509_st*)** %2, align 8
  ret i32 (%struct.x509_store_ctx_st*, %struct.x509_st*, %struct.x509_st*)* %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @X509_STORE_set_check_revocation(%struct.x509_store_st* nocapture, i32 (%struct.x509_store_ctx_st*)*) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %0, i64 0, i32 10
  store i32 (%struct.x509_store_ctx_st*)* %1, i32 (%struct.x509_store_ctx_st*)** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 (%struct.x509_store_ctx_st*)* @X509_STORE_get_check_revocation(%struct.x509_store_st* nocapture readonly) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %0, i64 0, i32 10
  %3 = load i32 (%struct.x509_store_ctx_st*)*, i32 (%struct.x509_store_ctx_st*)** %2, align 8
  ret i32 (%struct.x509_store_ctx_st*)* %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @X509_STORE_set_get_crl(%struct.x509_store_st* nocapture, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st**, %struct.x509_st*)*) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %0, i64 0, i32 11
  store i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st**, %struct.x509_st*)* %1, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st**, %struct.x509_st*)** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st**, %struct.x509_st*)* @X509_STORE_get_get_crl(%struct.x509_store_st* nocapture readonly) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %0, i64 0, i32 11
  %3 = load i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st**, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st**, %struct.x509_st*)** %2, align 8
  ret i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st**, %struct.x509_st*)* %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @X509_STORE_set_check_crl(%struct.x509_store_st* nocapture, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*)*) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %0, i64 0, i32 12
  store i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*)* %1, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*)** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*)* @X509_STORE_get_check_crl(%struct.x509_store_st* nocapture readonly) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %0, i64 0, i32 12
  %3 = load i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*)** %2, align 8
  ret i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*)* %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @X509_STORE_set_cert_crl(%struct.x509_store_st* nocapture, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*, %struct.x509_st*)*) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %0, i64 0, i32 13
  store i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*, %struct.x509_st*)* %1, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*, %struct.x509_st*)** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*, %struct.x509_st*)* @X509_STORE_get_cert_crl(%struct.x509_store_st* nocapture readonly) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %0, i64 0, i32 13
  %3 = load i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*, %struct.x509_st*)** %2, align 8
  ret i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*, %struct.x509_st*)* %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @X509_STORE_set_lookup_certs(%struct.x509_store_st* nocapture, %struct.stack_st_X509* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %0, i64 0, i32 14
  store %struct.stack_st_X509* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)* %1, %struct.stack_st_X509* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.stack_st_X509* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)* @X509_STORE_get_lookup_certs(%struct.x509_store_st* nocapture readonly) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %0, i64 0, i32 14
  %3 = load %struct.stack_st_X509* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, %struct.stack_st_X509* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)** %2, align 8
  ret %struct.stack_st_X509* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)* %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @X509_STORE_set_lookup_crls(%struct.x509_store_st* nocapture, %struct.stack_st_X509_CRL* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %0, i64 0, i32 15
  store %struct.stack_st_X509_CRL* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)* %1, %struct.stack_st_X509_CRL* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.stack_st_X509_CRL* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)* @X509_STORE_get_lookup_crls(%struct.x509_store_st* nocapture readonly) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %0, i64 0, i32 15
  %3 = load %struct.stack_st_X509_CRL* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, %struct.stack_st_X509_CRL* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)** %2, align 8
  ret %struct.stack_st_X509_CRL* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)* %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @X509_STORE_set_cleanup(%struct.x509_store_st* nocapture, i32 (%struct.x509_store_ctx_st*)*) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %0, i64 0, i32 16
  store i32 (%struct.x509_store_ctx_st*)* %1, i32 (%struct.x509_store_ctx_st*)** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 (%struct.x509_store_ctx_st*)* @X509_STORE_get_cleanup(%struct.x509_store_st* nocapture readonly) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.x509_store_st, %struct.x509_store_st* %0, i64 0, i32 16
  %3 = load i32 (%struct.x509_store_ctx_st*)*, i32 (%struct.x509_store_ctx_st*)** %2, align 8
  ret i32 (%struct.x509_store_ctx_st*)* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.x509_store_st* @X509_STORE_CTX_get0_store(%struct.x509_store_ctx_st* nocapture readonly) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.x509_store_ctx_st, %struct.x509_store_ctx_st* %0, i64 0, i32 0
  %3 = load %struct.x509_store_st*, %struct.x509_store_st** %2, align 8
  ret %struct.x509_store_st* %3
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare %struct.stack_st* @sk_new(i32 (i8**, i8**)*) local_unnamed_addr #2

declare i32 @X509_subject_name_cmp(%struct.x509_st*, %struct.x509_st*) local_unnamed_addr #2

declare i32 @X509_CRL_cmp(%struct.X509_crl_st*, %struct.X509_crl_st*) local_unnamed_addr #2

declare %struct.stack_st* @sk_new_null() local_unnamed_addr #2

declare void @sk_free(%struct.stack_st*) local_unnamed_addr #2

declare i64 @sk_num(%struct.stack_st*) local_unnamed_addr #2

declare i8* @sk_value(%struct.stack_st*, i64) local_unnamed_addr #2

declare void @sk_pop_free_ex(%struct.stack_st*, void (void (i8*)*, i8*)*, void (i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @sk_X509_OBJECT_call_free_func(void (i8*)* nocapture, i8*) #5 {
  %3 = bitcast void (i8*)* %0 to void (%struct.x509_object_st*)*
  %4 = bitcast i8* %1 to %struct.x509_object_st*
  tail call void %3(%struct.x509_object_st* %4) #6
  ret void
}

declare i64 @sk_push(%struct.stack_st*, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @sk_X509_call_free_func(void (i8*)* nocapture, i8*) #5 {
  %3 = bitcast void (i8*)* %0 to void (%struct.x509_st*)*
  %4 = bitcast i8* %1 to %struct.x509_st*
  tail call void %3(%struct.x509_st* %4) #6
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @sk_X509_CRL_call_free_func(void (i8*)* nocapture, i8*) #5 {
  %3 = bitcast void (i8*)* %0 to void (%struct.X509_crl_st*)*
  %4 = bitcast i8* %1 to %struct.X509_crl_st*
  tail call void %3(%struct.X509_crl_st* %4) #6
  ret void
}

declare void @sk_sort(%struct.stack_st*) local_unnamed_addr #2

declare i32 @sk_find(%struct.stack_st*, i64*, i8*, i32 (i32 (i8**, i8**)*, i8**, i8**)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal i32 @sk_X509_OBJECT_call_cmp_func(i32 (i8**, i8**)* nocapture, i8** nocapture readonly, i8** nocapture readonly) #5 {
  %4 = alloca %struct.x509_object_st*, align 8
  %5 = alloca %struct.x509_object_st*, align 8
  %6 = bitcast %struct.x509_object_st** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #6
  %7 = bitcast i8** %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %struct.x509_object_st** %4 to i64*
  store i64 %8, i64* %9, align 8
  %10 = bitcast %struct.x509_object_st** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #6
  %11 = bitcast i8** %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %struct.x509_object_st** %5 to i64*
  store i64 %12, i64* %13, align 8
  %14 = bitcast i32 (i8**, i8**)* %0 to i32 (%struct.x509_object_st**, %struct.x509_object_st**)*
  %15 = call i32 %14(%struct.x509_object_st** nonnull %4, %struct.x509_object_st** nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #6
  ret i32 %15
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
