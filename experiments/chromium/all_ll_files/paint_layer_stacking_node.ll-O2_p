; ModuleID = '../../third_party/blink/renderer/core/paint/paint_layer_stacking_node.cc'
source_filename = "../../third_party/blink/renderer/core/paint/paint_layer_stacking_node.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::nothrow_t" = type { i8 }
%"class.blink::PaintLayerStackingNode" = type <{ %"class.blink::PaintLayer"*, %"class.WTF::Vector.2036", %"class.WTF::Vector.2036", %"class.WTF::HashMap.2041", %"class.WTF::Vector.2036", i8, [7 x i8] }>
%"class.WTF::HashMap.2041" = type { %"class.WTF::HashTable.2042" }
%"class.WTF::HashTable.2042" = type <{ %"struct.WTF::KeyValuePair.2045"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2045" = type { %"class.blink::PaintLayer"*, %"class.WTF::Vector.2036" }
%"class.WTF::Vector.2036" = type { %"class.WTF::VectorBuffer.2037" }
%"class.WTF::VectorBuffer.2037" = type { %"class.WTF::VectorBufferBase.2038" }
%"class.WTF::VectorBufferBase.2038" = type { %"class.blink::PaintLayer"**, i32, i32 }
%"class.blink::PaintLayer" = type { %"class.blink::DisplayItemClient.base", [6 x i8], %"class.blink::LayoutBoxModelObject"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::PaintLayer"*, %"class.std::__1::unique_ptr.2003", %"class.blink::Persistent.2009", %"class.std::__1::unique_ptr.2033", %"class.blink::CullRect", %"class.std::__1::unique_ptr.2049" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1609", [4 x i8] }>
%"class.WTF::RefCounted.1609" = type { %"class.base::RefCounted.1610" }
%"class.base::RefCounted.1610" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1602", i64 }
%"class.std::__1::vector.1602" = type { %"class.std::__1::__vector_base.1603" }
%"class.std::__1::__vector_base.1603" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1604" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1604" = type { %"struct.std::__1::__compressed_pair_elem.1605" }
%"struct.std::__1::__compressed_pair_elem.1605" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::Color" = type { i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2307 }
%class.scoped_refptr.2307 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.2308", %"class.WTF::Vector.630", %"class.WTF::Vector.2310", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.2308" = type { %"class.base::RefCounted.2309" }
%"class.base::RefCounted.2309" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.2310" = type { %"class.WTF::VectorBuffer.2311" }
%"class.WTF::VectorBuffer.2311" = type { %"class.WTF::VectorBufferBase.2312" }
%"class.WTF::VectorBufferBase.2312" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.2313 }
%union.anon.2313 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.906", %"class.WTF::Vector.906", i8, i32, %"class.blink::Member.913", %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.919", %"class.blink::Member.921", %"class.blink::Member.923", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.931", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.942", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.967", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.976", double, double, i64, i64, %"class.blink::HeapHashSet.978", %"class.blink::HeapHashSet.985", i16, i8, %"class.blink::Member.992", %"class.blink::Member.994", %"class.blink::Member.1318", %"class.blink::Member.1320", %"class.blink::TextLinkColors", %"class.blink::Member.1322", i8, [7 x i8], %"class.blink::HeapHashMap.1324", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1331", %"class.blink::Member.1336", %"class.blink::Member.1338", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1340", %"class.blink::HeapVector.1342", %"class.std::__1::unique_ptr.1350", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1356", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1369", %"class.WTF::Vector.1371", i8, i8, %"class.std::__1::unique_ptr.1376", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1382", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1390", i8, i32, %"class.blink::Member.1392", %"class.blink::Member.1394", %"class.blink::Member.1396", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1398", %"class.WTF::HashMap.1400", %"class.blink::Member.1405", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::Member.1411", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1413", i8, i32, %"class.blink::Member.1420", %"class.blink::Member.1422", i32, %"class.blink::Member.1424", %"class.blink::Member.1426", %"class.blink::Member.1428", %"class.std::__1::unique_ptr.1430", i64, %"class.std::__1::unique_ptr.1436", i32, i32, %"class.blink::Member.1447", %"class.blink::Member.1449", %"class.blink::Member.1451", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1453", %"class.WTF::Vector.1455", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1460", %"class.blink::Member.1467", %"class.std::__1::unique_ptr.1469", %"class.blink::Member.1475", i8, i8, %"class.WTF::String", %"class.blink::Member.1477", i8, [7 x i8], %"class.blink::HeapHashMap.1479", %"class.blink::HeapObserverSet", %"class.blink::Member.1493", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1495", i32, i8, i8, %"class.blink::WeakMember.1497", %"class.blink::Member.1498" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.899" }
%"class.blink::HeapHashMap.899" = type { %"class.WTF::HashMap.902" }
%"class.WTF::HashMap.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"struct.WTF::KeyValuePair.905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.905" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.909 }
%class.scoped_refptr.909 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.910", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.910" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1522", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1571", i32, i8, [3 x i8], %"class.blink::HeapVector.1573", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1581", %"class.blink::Member.1583", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1592", %"class.blink::Member.1598", %"class.blink::Member.1600", i8, [7 x i8] }>
%"class.blink::Supplementable.1522" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1523" }
%"class.blink::HeapHashMap.1523" = type { %"class.WTF::HashMap.1526" }
%"class.WTF::HashMap.1526" = type { %"class.WTF::HashTable.1527" }
%"class.WTF::HashTable.1527" = type <{ %"struct.WTF::KeyValuePair.1529"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1529" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1538" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1530" }
%"class.blink::HeapObserverSet.1530" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1531" }
%"class.blink::HeapHashSet.1531" = type { %"class.WTF::HashSet.1534" }
%"class.WTF::HashSet.1534" = type { %"class.WTF::HashTable.1535" }
%"class.WTF::HashTable.1535" = type <{ %"class.blink::WeakMember.1537"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1537" = type opaque
%"class.blink::Supplementable.1538" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1539" }
%"class.blink::HeapHashMap.1539" = type { %"class.WTF::HashMap.1542" }
%"class.WTF::HashMap.1542" = type { %"class.WTF::HashTable.1543" }
%"class.WTF::HashTable.1543" = type <{ %"struct.WTF::KeyValuePair.1545"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1545" = type { i8*, %"class.blink::Member.2293" }
%"class.blink::Member.2293" = type { %"class.blink::MemberBase.2294" }
%"class.blink::MemberBase.2294" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2295" }
%"class.blink::Member.2295" = type { %"class.blink::MemberBase.2296" }
%"class.blink::MemberBase.2296" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1546, %"class.std::__1::unique_ptr.1555", %"class.std::__1::unique_ptr.1555", %"class.std::__1::unique_ptr.1561", %"class.std::__1::unique_ptr.1561", %"class.blink::Member.915", i32, [4 x i8], %"class.WTF::HashSet.1567", i32, i32 }
%class.scoped_refptr.1546 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1547", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1549", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1554 }
%"class.WTF::RefCounted.1547" = type { %"class.base::RefCounted.1548" }
%"class.base::RefCounted.1548" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1549" = type { %"class.absl::optional_internal::optional_data.1550" }
%"class.absl::optional_internal::optional_data.1550" = type { %"class.absl::optional_internal::optional_data_base.1551" }
%"class.absl::optional_internal::optional_data_base.1551" = type { %"class.absl::optional_internal::optional_data_dtor_base.1552" }
%"class.absl::optional_internal::optional_data_dtor_base.1552" = type { i8, %union.anon.1553 }
%union.anon.1553 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.1554 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1555" = type { %"class.std::__1::__compressed_pair.1556" }
%"class.std::__1::__compressed_pair.1556" = type { %"struct.std::__1::__compressed_pair_elem.1557" }
%"struct.std::__1::__compressed_pair_elem.1557" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1561" = type { %"class.std::__1::__compressed_pair.1562" }
%"class.std::__1::__compressed_pair.1562" = type { %"struct.std::__1::__compressed_pair_elem.1563" }
%"struct.std::__1::__compressed_pair_elem.1563" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1567" = type { %"class.WTF::HashTable.1568" }
%"class.WTF::HashTable.1568" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1571" = type { %"class.blink::MemberBase.1572" }
%"class.blink::MemberBase.1572" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1573" = type { %"class.WTF::Vector.1576" }
%"class.WTF::Vector.1576" = type { %"class.WTF::VectorBuffer.1577" }
%"class.WTF::VectorBuffer.1577" = type { %"class.WTF::VectorBufferBase.1578" }
%"class.WTF::VectorBufferBase.1578" = type { %"class.blink::Member.1579"*, i32, i32 }
%"class.blink::Member.1579" = type opaque
%"class.blink::Member.1581" = type { %"class.blink::MemberBase.1582" }
%"class.blink::MemberBase.1582" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1583" = type { %"class.blink::MemberBase.1584" }
%"class.blink::MemberBase.1584" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1585", i32, i32 }
%"class.blink::HeapHashMap.1585" = type { %"class.WTF::HashMap.1588" }
%"class.WTF::HashMap.1588" = type { %"class.WTF::HashTable.1589" }
%"class.WTF::HashTable.1589" = type <{ %"struct.WTF::KeyValuePair.1591"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1591" = type opaque
%"class.std::__1::unique_ptr.1592" = type { %"class.std::__1::__compressed_pair.1593" }
%"class.std::__1::__compressed_pair.1593" = type { %"struct.std::__1::__compressed_pair_elem.1594" }
%"struct.std::__1::__compressed_pair_elem.1594" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1598" = type { %"class.blink::MemberBase.1599" }
%"class.blink::MemberBase.1599" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1600" = type { %"class.blink::MemberBase.1601" }
%"class.blink::MemberBase.1601" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.925" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::KURL"* }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.941 }
%class.scoped_refptr.941 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.945 }
%class.scoped_refptr.945 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.946", i32, i32, %"class.blink::Persistent.948" }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.948" = type { %"class.blink::PersistentBase.949" }
%"class.blink::PersistentBase.949" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.952" }
%"class.blink::HeapHashMap.952" = type { %"class.WTF::HashMap.955" }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.958" = type { %"class.blink::WeakMember.959", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.969" }
%"class.blink::HeapHashMap.969" = type { %"class.WTF::HashMap.972" }
%"class.WTF::HashMap.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"struct.WTF::KeyValuePair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.975" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.978" = type { %"class.WTF::HashSet.981" }
%"class.WTF::HashSet.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"class.blink::WeakMember.984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.984" = type opaque
%"class.blink::HeapHashSet.985" = type { %"class.WTF::HashSet.988" }
%"class.WTF::HashSet.988" = type { %"class.WTF::HashTable.989" }
%"class.WTF::HashTable.989" = type <{ %"class.blink::WeakMember.991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.991" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.998", %"class.blink::Member.1025", %"class.blink::HeapHashMap.1027", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1034", %"class.blink::HeapHashSet.1034", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1040", %"class.blink::Member.1052", %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1089", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1251", %"class.blink::Member.1257", %"class.blink::HeapHashMap.1259", %"class.blink::HeapHashMap.1266", %"class.std::__1::unique_ptr.1273", i32, %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1010", %"class.blink::HeapHashSet.1287", %"class.blink::HeapHashMap.1294", %"class.blink::Member.1301", %"class.blink::HeapHashMap.1303", %class.scoped_refptr.1310, %class.scoped_refptr.259, %"class.blink::Member.1215", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1311", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1002", %"class.blink::HeapVector.1010", i8 }>
%"class.blink::HeapVector.1002" = type { %"class.WTF::Vector.1005" }
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::Member.1008"*, i32, i32 }
%"class.blink::Member.1008" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1021", %"class.blink::Member.1023", %"class.blink::Member.1023", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1021" = type <{ %"class.blink::Member.1023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1023", %"class.blink::Member.1023" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1027" = type { %"class.WTF::HashMap.1030" }
%"class.WTF::HashMap.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"struct.WTF::KeyValuePair.1033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1033" = type opaque
%"class.blink::HeapHashSet.1034" = type { %"class.WTF::HashSet.1037" }
%"class.WTF::HashSet.1037" = type { %"class.WTF::HashTable.1038" }
%"class.WTF::HashTable.1038" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1042", %"class.blink::Member.1044" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1048", %"class.blink::Member.1050" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1513", %"class.blink::Member.1044", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.817] }
%"class.blink::HeapVector.1513" = type { %"class.WTF::Vector.1516" }
%"class.WTF::Vector.1516" = type { %"class.WTF::VectorBuffer.1517" }
%"class.WTF::VectorBuffer.1517" = type { %"class.WTF::VectorBufferBase.1518" }
%"class.WTF::VectorBufferBase.1518" = type { %"class.blink::Member.1050"*, i32, i32 }
%class.sk_sp.817 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.818, i32, %"class.absl::optional.819", i8, i32 }
%class.sk_sp.818 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { %struct.SkRect }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1025", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1056" }
%"class.blink::HeapHashMap.1056" = type { %"class.WTF::HashMap.1059" }
%"class.WTF::HashMap.1059" = type { %"class.WTF::HashTable.1060" }
%"class.WTF::HashTable.1060" = type <{ %"struct.WTF::KeyValuePair.1062"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1062" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1063", %"class.std::__1::unique_ptr.1075" }
%"class.blink::HeapVector.1063" = type { %"class.WTF::Vector.1066" }
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071", [16 x i8] }
%"class.WTF::VectorBufferBase.1071" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1087", i8, [7 x i8] }>
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1111", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1098", %class.scoped_refptr.1103, %class.scoped_refptr.1110, %class.scoped_refptr.1109, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1093" = type { %"class.WTF::HashTable.1094" }
%"class.WTF::HashTable.1094" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2321 }
%class.scoped_refptr.2321 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1106" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1107" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1108" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"struct.WTF::KeyValuePair.1102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1102" = type opaque
%class.scoped_refptr.1103 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1109, %class.scoped_refptr.1109 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1110 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1109 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1158", %"class.blink::HeapVector.1166", %"class.blink::HeapVector.1174", %"class.blink::HeapVector.1191", %"class.blink::HeapVector.1199", %"class.blink::HeapVector.1207", %"class.blink::HeapVector.1220", %"class.WTF::Vector.1227", i32, %"class.blink::Member.1233" }
%"class.blink::HeapHashMap.1115" = type { %"class.WTF::HashMap.1118" }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1121" = type { %"class.WTF::AtomicString", %"class.blink::Member.2331" }
%"class.blink::Member.2331" = type { %"class.blink::MemberBase.2332" }
%"class.blink::MemberBase.2332" = type { %"class.blink::HeapVector.1122"* }
%"class.blink::HeapVector.1122" = type { %"class.WTF::Vector.1125" }
%"class.WTF::Vector.1125" = type { %"class.WTF::VectorBuffer.1126" }
%"class.WTF::VectorBuffer.1126" = type { %"class.WTF::VectorBufferBase.1127" }
%"class.WTF::VectorBufferBase.1127" = type { %"class.blink::Member.1128"*, i32, i32 }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1132", i64, [4 x i32] }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1153" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1158" = type { %"class.WTF::Vector.1161" }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { %"class.blink::Member.1164"*, i32, i32 }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.2327" }
%"class.blink::MemberBase.2327" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1166" = type { %"class.WTF::Vector.1169" }
%"class.WTF::Vector.1169" = type { %"class.WTF::VectorBuffer.1170" }
%"class.WTF::VectorBuffer.1170" = type { %"class.WTF::VectorBufferBase.1171" }
%"class.WTF::VectorBufferBase.1171" = type { %"class.blink::Member.1172"*, i32, i32 }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.2328" }
%"class.blink::MemberBase.2328" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1174" = type { %"class.WTF::Vector.1177" }
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179" }
%"class.WTF::VectorBufferBase.1179" = type { %"class.blink::Member.1180"*, i32, i32 }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1182", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1182" = type { %"class.WTF::Vector.1185" }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"class.blink::Member.1188"*, i32, i32 }
%"class.blink::Member.1188" = type opaque
%"class.blink::HeapVector.1191" = type { %"class.WTF::Vector.1194" }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196" }
%"class.WTF::VectorBufferBase.1196" = type { %"class.blink::Member.1197"*, i32, i32 }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.2329" }
%"class.blink::MemberBase.2329" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1199" = type { %"class.WTF::Vector.1202" }
%"class.WTF::Vector.1202" = type { %"class.WTF::VectorBuffer.1203" }
%"class.WTF::VectorBuffer.1203" = type { %"class.WTF::VectorBufferBase.1204" }
%"class.WTF::VectorBufferBase.1204" = type { %"class.blink::Member.1205"*, i32, i32 }
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.2330" }
%"class.blink::MemberBase.2330" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", i32, [4 x i8] }>
%"class.blink::HeapVector.1207" = type { %"class.WTF::Vector.1210" }
%"class.WTF::Vector.1210" = type { %"class.WTF::VectorBuffer.1211" }
%"class.WTF::VectorBuffer.1211" = type { %"class.WTF::VectorBufferBase.1212" }
%"class.WTF::VectorBufferBase.1212" = type { %"class.blink::Member.1213"*, i32, i32 }
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215" }
%"class.blink::HeapVector.1220" = type { %"class.WTF::Vector.1223" }
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1132", i32, i32 }
%"class.WTF::Vector.1227" = type { %"class.WTF::VectorBuffer.1228" }
%"class.WTF::VectorBuffer.1228" = type { %"class.WTF::VectorBufferBase.1229" }
%"class.WTF::VectorBufferBase.1229" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1230, i8, [7 x i8] }>
%class.scoped_refptr.1230 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237" }
%"class.blink::HeapHashMap.1237" = type { %"class.WTF::HashMap.1240" }
%"class.WTF::HashMap.1240" = type { %"class.WTF::HashTable.1241" }
%"class.WTF::HashTable.1241" = type <{ %"struct.WTF::KeyValuePair.1243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1243" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1244" }
%"class.blink::HeapHashMap.1244" = type { %"class.WTF::HashMap.1247" }
%"class.WTF::HashMap.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"struct.WTF::KeyValuePair.1250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1250" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.2322", %"class.WTF::Vector.2322" }
%"class.WTF::Vector.2322" = type { %"class.WTF::VectorBuffer.2323" }
%"class.WTF::VectorBuffer.2323" = type { %"class.WTF::VectorBufferBase.2324" }
%"class.WTF::VectorBufferBase.2324" = type { %class.scoped_refptr.2321*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1251" = type { %"class.WTF::HashSet.1254" }
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1259" = type { %"class.WTF::HashMap.1262" }
%"class.WTF::HashMap.1262" = type { %"class.WTF::HashTable.1263" }
%"class.WTF::HashTable.1263" = type <{ %"struct.WTF::KeyValuePair.1265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1265" = type opaque
%"class.blink::HeapHashMap.1266" = type { %"class.WTF::HashMap.1269" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1272" = type opaque
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1279" = type { %"class.WTF::Vector.1282" }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"struct.std::__1::pair.1285"*, i32, i32 }
%"struct.std::__1::pair.1285" = type opaque
%"class.blink::HeapVector.1010" = type { %"class.WTF::Vector.1013" }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"struct.std::__1::pair.1016"*, i32, i32 }
%"struct.std::__1::pair.1016" = type opaque
%"class.blink::HeapHashSet.1287" = type { %"class.WTF::HashSet.1290" }
%"class.WTF::HashSet.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"class.blink::WeakMember.1293"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1293" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1294" = type { %"class.WTF::HashMap.1297" }
%"class.WTF::HashMap.1297" = type { %"class.WTF::HashTable.1298" }
%"class.WTF::HashTable.1298" = type <{ %"struct.WTF::KeyValuePair.1300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1300" = type { %"class.WTF::AtomicString", %"class.blink::Member.1180" }
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1303" = type { %"class.WTF::HashMap.1306" }
%"class.WTF::HashMap.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type opaque
%class.scoped_refptr.1310 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapHashSet.1311" = type { %"class.WTF::HashSet.1314" }
%"class.WTF::HashSet.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"class.blink::Member.1317"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1317" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1324" = type { %"class.WTF::HashMap.1327" }
%"class.WTF::HashMap.1327" = type { %"class.WTF::HashTable.1328" }
%"class.WTF::HashTable.1328" = type <{ %"struct.WTF::KeyValuePair.1330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1330" = type opaque
%"class.WTF::Vector.1331" = type { %"class.WTF::VectorBuffer.1332" }
%"class.WTF::VectorBuffer.1332" = type { %"class.WTF::VectorBufferBase.1333" }
%"class.WTF::VectorBufferBase.1333" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1342" = type { %"class.WTF::Vector.1345" }
%"class.WTF::Vector.1345" = type { %"class.WTF::VectorBuffer.1346" }
%"class.WTF::VectorBuffer.1346" = type { %"class.WTF::VectorBufferBase.1347" }
%"class.WTF::VectorBufferBase.1347" = type { %"class.blink::Member.1348"*, i32, i32 }
%"class.blink::Member.1348" = type opaque
%"class.std::__1::unique_ptr.1350" = type { %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1356" = type { %"class.WTF::HashSet.1359" }
%"class.WTF::HashSet.1359" = type { %"class.WTF::HashTable.1360" }
%"class.WTF::HashTable.1360" = type <{ %"class.blink::WeakMember.1362"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1362" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1363", i32, [4 x i8] }>
%"class.WTF::Vector.1363" = type { %"class.WTF::VectorBuffer.1364" }
%"class.WTF::VectorBuffer.1364" = type { %"class.WTF::VectorBufferBase.1365" }
%"class.WTF::VectorBufferBase.1365" = type { %"struct.std::__1::pair.1366"*, i32, i32 }
%"struct.std::__1::pair.1366" = type opaque
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1376" = type { %"class.std::__1::__compressed_pair.1377" }
%"class.std::__1::__compressed_pair.1377" = type { %"struct.std::__1::__compressed_pair_elem.1378" }
%"struct.std::__1::__compressed_pair_elem.1378" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type { %"class.blink::LayoutBlockFlow", %"class.blink::UntracedMember.1716", %"class.blink::LayoutUnit", %"class.blink::LayoutState"*, %"class.std::__1::unique_ptr.1954", %"class.std::__1::unique_ptr.1960", %"class.std::__1::unique_ptr.1966", %class.scoped_refptr.1712, %"class.blink::LayoutQuote"*, i32, i32, i8, i32, i32, %"class.blink::Persistent.1972", i32, i32, %"struct.blink::PhysicalRect" }
%"class.blink::LayoutBlockFlow" = type { %"class.blink::LayoutBlock.base", %"class.blink::LineBoxList", %"class.blink::Persistent.1675", %"class.std::__1::unique_ptr.1685" }
%"class.blink::LayoutBlock.base" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16 }>
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1631, %"class.WTF::Vector.1632", %"class.std::__1::unique_ptr.1637", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1658, %"class.blink::Persistent.1659" }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1631 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type opaque
%"class.WTF::Vector.1632" = type { %"class.WTF::VectorBuffer.1633" }
%"class.WTF::VectorBuffer.1633" = type { %"class.WTF::VectorBufferBase.1634", [8 x i8] }
%"class.WTF::VectorBufferBase.1634" = type { %class.scoped_refptr.1631*, i32, i32 }
%"class.std::__1::unique_ptr.1637" = type { %"class.std::__1::__compressed_pair.1638" }
%"class.std::__1::__compressed_pair.1638" = type { %"struct.std::__1::__compressed_pair_elem.1639" }
%"struct.std::__1::__compressed_pair_elem.1639" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1640", %"class.absl::optional.1645", %"class.absl::optional.1650" }
%"class.absl::optional.1640" = type { %"class.absl::optional_internal::optional_data.1641" }
%"class.absl::optional_internal::optional_data.1641" = type { %"class.absl::optional_internal::optional_data_base.1642" }
%"class.absl::optional_internal::optional_data_base.1642" = type { %"class.absl::optional_internal::optional_data_dtor_base.1643" }
%"class.absl::optional_internal::optional_data_dtor_base.1643" = type { i8, %union.anon.1644 }
%union.anon.1644 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1645" = type { %"class.absl::optional_internal::optional_data.1646" }
%"class.absl::optional_internal::optional_data.1646" = type { %"class.absl::optional_internal::optional_data_base.1647" }
%"class.absl::optional_internal::optional_data_base.1647" = type { %"class.absl::optional_internal::optional_data_dtor_base.1648" }
%"class.absl::optional_internal::optional_data_dtor_base.1648" = type { i8, [3 x i8], %union.anon.1649 }
%union.anon.1649 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1650" = type { %"class.absl::optional_internal::optional_data.1651" }
%"class.absl::optional_internal::optional_data.1651" = type { %"class.absl::optional_internal::optional_data_base.1652" }
%"class.absl::optional_internal::optional_data_base.1652" = type { %"class.absl::optional_internal::optional_data_dtor_base.1653" }
%"class.absl::optional_internal::optional_data_dtor_base.1653" = type { i8, %union.anon.1654 }
%union.anon.1654 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1658 = type { %"class.blink::InlineBox"* }
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1611", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1611" = type { %"class.std::__1::__compressed_pair.1612" }
%"class.std::__1::__compressed_pair.1612" = type { %"struct.std::__1::__compressed_pair_elem.1613" }
%"struct.std::__1::__compressed_pair_elem.1613" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1614", %"class.absl::optional.1623" }
%"class.absl::optional.1614" = type { %"class.absl::optional_internal::optional_data.1615" }
%"class.absl::optional_internal::optional_data.1615" = type { %"class.absl::optional_internal::optional_data_base.1616" }
%"class.absl::optional_internal::optional_data_base.1616" = type { %"class.absl::optional_internal::optional_data_dtor_base.1617" }
%"class.absl::optional_internal::optional_data_dtor_base.1617" = type { i8, %union.anon.1618 }
%union.anon.1618 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.absl::optional.1623" = type { %"class.absl::optional_internal::optional_data.1624" }
%"class.absl::optional_internal::optional_data.1624" = type { %"class.absl::optional_internal::optional_data_base.1625" }
%"class.absl::optional_internal::optional_data_base.1625" = type { %"class.absl::optional_internal::optional_data_dtor_base.1626" }
%"class.absl::optional_internal::optional_data_dtor_base.1626" = type { i8, %union.anon.1627 }
%union.anon.1627 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.blink::Persistent.1659" = type { %"class.blink::PersistentBase.1660" }
%"class.blink::PersistentBase.1660" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1663", %"struct.blink::PhysicalRect", %"class.blink::Member.1673" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.std::__1::unique_ptr.1663" = type { %"class.std::__1::__compressed_pair.1664" }
%"class.std::__1::__compressed_pair.1664" = type { %"struct.std::__1::__compressed_pair_elem.1665" }
%"struct.std::__1::__compressed_pair_elem.1665" = type { %"class.WTF::HashSet.1666"* }
%"class.WTF::HashSet.1666" = type { %"class.WTF::HashTable.1667" }
%"class.WTF::HashTable.1667" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1673" = type { %"class.blink::MemberBase.1674" }
%"class.blink::MemberBase.1674" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.blink::LineBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"* }
%"class.blink::Persistent.1675" = type { %"class.blink::PersistentBase.1676" }
%"class.blink::PersistentBase.1676" = type { %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData" = type <{ %"class.blink::LayoutBlockFlow::MarginValues", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutMultiColumnFlowThread"*, %"class.std::__1::unique_ptr.1679", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.blink::LayoutBlockFlow::MarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutMultiColumnFlowThread" = type <{ %"class.blink::LayoutFlowThread.base", [7 x i8], %"class.blink::FragmentationContext", %"class.blink::LayoutMultiColumnSet"*, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i8, i8, i8, [5 x i8] }>
%"class.blink::LayoutFlowThread.base" = type <{ %"class.blink::LayoutBlockFlow", %"class.WTF::LinkedHashSet.1936", %"class.WTF::PODIntervalTree.1949", i8 }>
%"class.WTF::LinkedHashSet.1936" = type { %"class.WTF::HashMap.1937", %"class.WTF::VectorBackedLinkedList.1942" }
%"class.WTF::HashMap.1937" = type { %"class.WTF::HashTable.1938" }
%"class.WTF::HashTable.1938" = type <{ %"struct.WTF::KeyValuePair.1941"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1941" = type opaque
%"class.WTF::VectorBackedLinkedList.1942" = type { %"class.WTF::Vector.1943", i32, i32 }
%"class.WTF::Vector.1943" = type { %"class.WTF::VectorBuffer.1944" }
%"class.WTF::VectorBuffer.1944" = type { %"class.WTF::VectorBufferBase.1945" }
%"class.WTF::VectorBufferBase.1945" = type { %"class.WTF::VectorBackedLinkedListNode.1946"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1946" = type opaque
%"class.WTF::PODIntervalTree.1949" = type { %"class.WTF::PODRedBlackTree.base.1953", [7 x i8] }
%"class.WTF::PODRedBlackTree.base.1953" = type <{ i32 (...)**, %class.scoped_refptr.1951, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node"*, i8 }>
%class.scoped_refptr.1951 = type { %"class.WTF::PODFreeListArena.1952"* }
%"class.WTF::PODFreeListArena.1952" = type opaque
%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node" = type opaque
%"class.blink::FragmentationContext" = type { i32 (...)** }
%"class.blink::LayoutMultiColumnSet" = type opaque
%"class.std::__1::unique_ptr.1679" = type { %"class.std::__1::__compressed_pair.1680" }
%"class.std::__1::__compressed_pair.1680" = type { %"struct.std::__1::__compressed_pair_elem.1681" }
%"struct.std::__1::__compressed_pair_elem.1681" = type { %"class.blink::NGOffsetMapping"* }
%"class.blink::NGOffsetMapping" = type opaque
%"class.std::__1::unique_ptr.1685" = type { %"class.std::__1::__compressed_pair.1686" }
%"class.std::__1::__compressed_pair.1686" = type { %"struct.std::__1::__compressed_pair_elem.1687" }
%"struct.std::__1::__compressed_pair_elem.1687" = type { %"class.blink::FloatingObjects"* }
%"class.blink::FloatingObjects" = type <{ %"class.WTF::ListHashSet.1688", %"class.WTF::PODIntervalTree", i32, i32, i8, [7 x i8], %"class.blink::LayoutBlockFlow"*, [2 x %"struct.blink::FloatingObjects::FloatBottomCachedValue"], i8, [7 x i8] }>
%"class.WTF::ListHashSet.1688" = type { %"class.WTF::HashTable.1691", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" }
%"class.WTF::HashTable.1691" = type <{ %"class.WTF::MallocedListHashSetNode"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::MallocedListHashSetNode" = type { %"class.std::__1::unique_ptr.1694", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"* }
%"class.std::__1::unique_ptr.1694" = type { %"class.std::__1::__compressed_pair.1695" }
%"class.std::__1::__compressed_pair.1695" = type { %"struct.std::__1::__compressed_pair_elem.1696" }
%"struct.std::__1::__compressed_pair_elem.1696" = type { %"class.blink::FloatingObject"* }
%"class.blink::FloatingObject" = type <{ %"class.blink::LayoutBox"*, %"class.blink::RootInlineBox"*, %"class.blink::LayoutRect", i8, [7 x i8] }>
%"class.blink::RootInlineBox" = type { %"class.blink::InlineFlowBox.base", i32, %"class.blink::LineLayoutItem", %class.scoped_refptr.1697, %"class.std::__1::unique_ptr.1698", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineFlowBox.base" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1611", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32 }>
%class.scoped_refptr.1697 = type { %"class.blink::BidiContext"* }
%"class.blink::BidiContext" = type { %"class.WTF::ThreadSafeRefCounted.2001", i16, %class.scoped_refptr.1697 }
%"class.WTF::ThreadSafeRefCounted.2001" = type { %"class.base::RefCountedThreadSafe.2002" }
%"class.base::RefCountedThreadSafe.2002" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1698" = type { %"class.std::__1::__compressed_pair.1699" }
%"class.std::__1::__compressed_pair.1699" = type { %"struct.std::__1::__compressed_pair_elem.1700" }
%"struct.std::__1::__compressed_pair_elem.1700" = type { %"class.WTF::Vector.1701"* }
%"class.WTF::Vector.1701" = type { %"class.WTF::VectorBuffer.1702" }
%"class.WTF::VectorBuffer.1702" = type { %"class.WTF::VectorBufferBase.1703" }
%"class.WTF::VectorBufferBase.1703" = type { %"class.blink::LayoutBox"**, i32, i32 }
%"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" = type { %"struct.WTF::MallocedListHashSetAllocator"* }
%"struct.WTF::MallocedListHashSetAllocator" = type { %"class.WTF::MallocedListHashSetNode"*, i8, [7 x i8], [96 x i8] }
%"class.WTF::PODIntervalTree" = type { %"class.WTF::PODRedBlackTree.base", [7 x i8] }
%"class.WTF::PODRedBlackTree.base" = type <{ i32 (...)**, %class.scoped_refptr.1712, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node"*, i8 }>
%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node" = type opaque
%"struct.blink::FloatingObjects::FloatBottomCachedValue" = type <{ %"class.blink::FloatingObject"*, i8, [7 x i8] }>
%"class.blink::UntracedMember.1716" = type { %"class.blink::MemberBase.1717" }
%"class.blink::MemberBase.1717" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1720", %"class.blink::Member.1725", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1727", i8, i32, %"class.blink::Color", %"class.absl::optional.1730", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1735", %"class.blink::Member.1737", %"class.blink::Member.1737", %"class.std::__1::unique_ptr.1740", i32, [4 x i8], %"class.WTF::HashSet.1743", %"class.blink::Member.1750", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1752", %"class.blink::HeapHashSet.1759", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1767", i8, %"class.blink::Member.1773", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1785", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1799", i8, %"class.std::__1::unique_ptr.1805", %"class.std::__1::unique_ptr.1886", %"class.WTF::Vector.1892", i32, %class.scoped_refptr.1897, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1898", %"class.blink::Member.1900", %"class.blink::Member.1902", %"class.blink::HeapHashSet.1904", %"class.blink::HeapHashSet.1911", %"class.std::__1::unique_ptr.1918", %"class.std::__1::unique_ptr.1925", %"class.WTF::Vector.906" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.WTF::HashSet.1720" = type { %"class.WTF::HashTable.1721" }
%"class.WTF::HashTable.1721" = type <{ %class.scoped_refptr.1724*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1724 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::Member.1725" = type { %"class.blink::MemberBase.1726" }
%"class.blink::MemberBase.1726" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1727" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1728", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.963, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.963 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.964" }>
%"class.base::RefCountedThreadSafe.964" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.965 }
%class.scoped_refptr.965 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::WeakMember.1728" = type { %"class.blink::MemberBase.1729" }
%"class.blink::MemberBase.1729" = type { %"class.blink::LocalFrameView"* }
%"class.absl::optional.1730" = type { %"class.absl::optional_internal::optional_data.1731" }
%"class.absl::optional_internal::optional_data.1731" = type { %"class.absl::optional_internal::optional_data_base.1732" }
%"class.absl::optional_internal::optional_data_base.1732" = type { %"class.absl::optional_internal::optional_data_dtor_base.1733" }
%"class.absl::optional_internal::optional_data_dtor_base.1733" = type { i8, %union.anon.1734 }
%union.anon.1734 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1735" = type { %"class.blink::MemberBase.1736" }
%"class.blink::MemberBase.1736" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1737" = type { %"class.blink::MemberBase.1738" }
%"class.blink::MemberBase.1738" = type { %"class.blink::HeapHashSet.1739"* }
%"class.blink::HeapHashSet.1739" = type opaque
%"class.std::__1::unique_ptr.1740" = type { %"class.std::__1::__compressed_pair.1741" }
%"class.std::__1::__compressed_pair.1741" = type { %"struct.std::__1::__compressed_pair_elem.1742" }
%"struct.std::__1::__compressed_pair_elem.1742" = type { %"class.WTF::HashSet.1743"* }
%"class.WTF::HashSet.1743" = type { %"class.WTF::HashTable.1744" }
%"class.WTF::HashTable.1744" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1750" = type { %"class.blink::MemberBase.1751" }
%"class.blink::MemberBase.1751" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1752" = type { %"class.WTF::HashSet.1755" }
%"class.WTF::HashSet.1755" = type { %"class.WTF::HashTable.1756" }
%"class.WTF::HashTable.1756" = type <{ %"class.blink::Member.1758"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1758" = type opaque
%"class.blink::HeapHashSet.1759" = type { %"class.WTF::HashSet.1762" }
%"class.WTF::HashSet.1762" = type { %"class.WTF::HashTable.1763" }
%"class.WTF::HashTable.1763" = type <{ %"class.blink::Member.1765"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1765" = type { %"class.blink::MemberBase.1766" }
%"class.blink::MemberBase.1766" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1989", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1999", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.343" }
%"class.blink::Member.1989" = type { %"class.blink::MemberBase.1990" }
%"class.blink::MemberBase.1990" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.1991", %"class.blink::Member.1993", %"class.blink::Member.1995", %"class.blink::Member.1997", %"class.WTF::Vector.906", i16, %class.scoped_refptr.963 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.1991" = type { %"class.blink::MemberBase.1992" }
%"class.blink::MemberBase.1992" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.1993" = type { %"class.blink::MemberBase.1994" }
%"class.blink::MemberBase.1994" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.1995" = type { %"class.blink::MemberBase.1996" }
%"class.blink::MemberBase.1996" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.1997" = type { %"class.blink::MemberBase.1998" }
%"class.blink::MemberBase.1998" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer.1999" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2000", { i64, i64 } }
%"class.blink::WeakMember.2000" = type { %"class.blink::MemberBase.1766" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1767" = type { %"class.std::__1::__compressed_pair.1768" }
%"class.std::__1::__compressed_pair.1768" = type { %"struct.std::__1::__compressed_pair_elem.1769" }
%"struct.std::__1::__compressed_pair_elem.1769" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1773" = type { %"class.blink::MemberBase.1774" }
%"class.blink::MemberBase.1774" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1777", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1777" = type { %"class.WTF::HashTable.1778" }
%"class.WTF::HashTable.1778" = type <{ %"struct.WTF::KeyValuePair.1780"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1780" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1781", i32, i32 }
%"class.WTF::Vector.1781" = type { %"class.WTF::VectorBuffer.1782" }
%"class.WTF::VectorBuffer.1782" = type { %"class.WTF::VectorBufferBase.1783" }
%"class.WTF::VectorBufferBase.1783" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1785" = type { %"class.WTF::LinkedHashSet.1788" }
%"class.WTF::LinkedHashSet.1788" = type { %"class.WTF::HashMap.1789", %"class.WTF::VectorBackedLinkedList.1793" }
%"class.WTF::HashMap.1789" = type { %"class.WTF::HashTable.1790" }
%"class.WTF::HashTable.1790" = type <{ %"struct.WTF::KeyValuePair.1792"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1792" = type opaque
%"class.WTF::VectorBackedLinkedList.1793" = type { %"class.WTF::Vector.1794", i32, i32 }
%"class.WTF::Vector.1794" = type { %"class.WTF::VectorBuffer.1795" }
%"class.WTF::VectorBuffer.1795" = type { %"class.WTF::VectorBufferBase.1796" }
%"class.WTF::VectorBufferBase.1796" = type { %"class.WTF::VectorBackedLinkedListNode.1797"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1797" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1799" = type { %"class.std::__1::__compressed_pair.1800" }
%"class.std::__1::__compressed_pair.1800" = type { %"struct.std::__1::__compressed_pair_elem.1801" }
%"struct.std::__1::__compressed_pair_elem.1801" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1805" = type { %"class.std::__1::__compressed_pair.1806" }
%"class.std::__1::__compressed_pair.1806" = type { %"struct.std::__1::__compressed_pair_elem.1807" }
%"struct.std::__1::__compressed_pair_elem.1807" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1808, %class.scoped_refptr.1808, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1863", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1868", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1808 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1809", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1816" }
%"class.WTF::RefCounted.1809" = type { %"class.base::RefCounted.1810" }
%"class.base::RefCounted.1810" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1811", i32, [4 x i8] }>
%"class.WTF::Vector.1811" = type { %"class.WTF::VectorBuffer.1812" }
%"class.WTF::VectorBuffer.1812" = type { %"class.WTF::VectorBufferBase.1813" }
%"class.WTF::VectorBufferBase.1813" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1816" = type { %"class.WTF::VectorBuffer.1817" }
%"class.WTF::VectorBuffer.1817" = type { %"class.WTF::VectorBufferBase.1818" }
%"class.WTF::VectorBufferBase.1818" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1819", %"class.std::__1::unique_ptr.1835", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.762, %class.scoped_refptr.814, %class.scoped_refptr.813 }
%class.scoped_refptr.762 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.760", i8, i8, %class.scoped_refptr.762, i32, i32 }
%"class.WTF::RefCounted.760" = type { %"class.base::RefCounted.761" }
%"class.base::RefCounted.761" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.814 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.851" }
%"class.blink::PaintPropertyNode.851" = type { %"class.WTF::RefCounted.852", i8, i8, %class.scoped_refptr.814, i32, i32 }
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.813 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.810" }
%"class.blink::PaintPropertyNode.810" = type { %"class.WTF::RefCounted.811", i8, i8, %class.scoped_refptr.813, i32, i32 }
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1819" = type { %"class.std::__1::__compressed_pair.1820" }
%"class.std::__1::__compressed_pair.1820" = type { %"struct.std::__1::__compressed_pair_elem.1821" }
%"struct.std::__1::__compressed_pair_elem.1821" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1822", %"class.WTF::Vector.1827", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1822" = type { %"class.WTF::VectorBuffer.1823" }
%"class.WTF::VectorBuffer.1823" = type { %"class.WTF::VectorBufferBase.1824" }
%"class.WTF::VectorBufferBase.1824" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1827" = type { %"class.WTF::VectorBuffer.1828" }
%"class.WTF::VectorBuffer.1828" = type { %"class.WTF::VectorBufferBase.1829" }
%"class.WTF::VectorBufferBase.1829" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.776" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.769, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.770", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.763" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.769 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.795", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.795" = type { %"class.WTF::RefCounted.796", i8, i8, %class.scoped_refptr.769, i32, i32 }
%"class.WTF::RefCounted.796" = type { %"class.base::RefCounted.797" }
%"class.base::RefCounted.797" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.798" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.803" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.785", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1835" = type { %"class.std::__1::__compressed_pair.1836" }
%"class.std::__1::__compressed_pair.1836" = type { %"struct.std::__1::__compressed_pair_elem.1837" }
%"struct.std::__1::__compressed_pair_elem.1837" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1838", %"class.absl::optional.1838" }
%"class.absl::optional.1838" = type { %"class.absl::optional_internal::optional_data.1839" }
%"class.absl::optional_internal::optional_data.1839" = type { %"class.absl::optional_internal::optional_data_base.1840" }
%"class.absl::optional_internal::optional_data_base.1840" = type { %"class.absl::optional_internal::optional_data_dtor_base.1841" }
%"class.absl::optional_internal::optional_data_dtor_base.1841" = type { i8, [3 x i8], %union.anon.1842 }
%union.anon.1842 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1816"*, %"class.absl::optional.1848", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1848" = type { %"class.absl::optional_internal::optional_data.1849" }
%"class.absl::optional_internal::optional_data.1849" = type { %"class.absl::optional_internal::optional_data_base.1850" }
%"class.absl::optional_internal::optional_data_base.1850" = type { %"class.absl::optional_internal::optional_data_dtor_base.1851" }
%"class.absl::optional_internal::optional_data_dtor_base.1851" = type { i8, %union.anon.1852 }
%union.anon.1852 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1853", %"class.WTF::Vector.1858" }
%"class.WTF::Vector.1853" = type { %"class.WTF::VectorBuffer.1854" }
%"class.WTF::VectorBuffer.1854" = type { %"class.WTF::VectorBufferBase.1855", [128 x i8] }
%"class.WTF::VectorBufferBase.1855" = type { i32*, i32, i32 }
%"class.WTF::Vector.1858" = type { %"class.WTF::VectorBuffer.1859" }
%"class.WTF::VectorBuffer.1859" = type { %"class.WTF::VectorBufferBase.1860", [128 x i8] }
%"class.WTF::VectorBufferBase.1860" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1863" = type { %"class.WTF::VectorBuffer.1864" }
%"class.WTF::VectorBuffer.1864" = type { %"class.WTF::VectorBufferBase.1865" }
%"class.WTF::VectorBufferBase.1865" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1868" = type { %"class.WTF::HashTable.1869" }
%"class.WTF::HashTable.1869" = type <{ %"struct.WTF::KeyValuePair.1872"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1872" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1873", %"class.WTF::Vector.1878" }
%"class.WTF::HashMap.1873" = type { %"class.WTF::HashTable.1874" }
%"class.WTF::HashTable.1874" = type <{ %"struct.WTF::KeyValuePair.1877"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1877" = type opaque
%"class.WTF::Vector.1878" = type { %"class.WTF::VectorBuffer.1879" }
%"class.WTF::VectorBuffer.1879" = type { %"class.WTF::VectorBufferBase.1880" }
%"class.WTF::VectorBufferBase.1880" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1886" = type { %"class.std::__1::__compressed_pair.1887" }
%"class.std::__1::__compressed_pair.1887" = type { %"struct.std::__1::__compressed_pair_elem.1888" }
%"struct.std::__1::__compressed_pair_elem.1888" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1892" = type { %"class.WTF::VectorBuffer.1893" }
%"class.WTF::VectorBuffer.1893" = type { %"class.WTF::VectorBufferBase.1894" }
%"class.WTF::VectorBufferBase.1894" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1897 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1898" = type { %"class.blink::MemberBase.1899" }
%"class.blink::MemberBase.1899" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1900" = type { %"class.blink::MemberBase.1901" }
%"class.blink::MemberBase.1901" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1902" = type { %"class.blink::MemberBase.1903" }
%"class.blink::MemberBase.1903" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1904" = type { %"class.WTF::HashSet.1907" }
%"class.WTF::HashSet.1907" = type { %"class.WTF::HashTable.1908" }
%"class.WTF::HashTable.1908" = type <{ %"class.blink::WeakMember.1910"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1910" = type opaque
%"class.blink::HeapHashSet.1911" = type { %"class.WTF::HashSet.1914" }
%"class.WTF::HashSet.1914" = type { %"class.WTF::HashTable.1915" }
%"class.WTF::HashTable.1915" = type <{ %"class.blink::WeakMember.1917"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1917" = type opaque
%"class.std::__1::unique_ptr.1918" = type { %"class.std::__1::__compressed_pair.1919" }
%"class.std::__1::__compressed_pair.1919" = type { %"struct.std::__1::__compressed_pair_elem.1920" }
%"struct.std::__1::__compressed_pair_elem.1920" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1921" }
%"class.base::time_internal::TimeBase.1921" = type { i64 }
%"class.std::__1::unique_ptr.1925" = type { %"class.std::__1::__compressed_pair.1926" }
%"class.std::__1::__compressed_pair.1926" = type { %"struct.std::__1::__compressed_pair_elem.1927" }
%"struct.std::__1::__compressed_pair_elem.1927" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1928", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.1928" = type { %"class.absl::optional_internal::optional_data.1929" }
%"class.absl::optional_internal::optional_data.1929" = type { %"class.absl::optional_internal::optional_data_base.1930" }
%"class.absl::optional_internal::optional_data_base.1930" = type { %"class.absl::optional_internal::optional_data_dtor_base.1931" }
%"class.absl::optional_internal::optional_data_dtor_base.1931" = type { i8, %union.anon.1932 }
%union.anon.1932 = type { %"class.base::Time" }
%"class.blink::LayoutState" = type { i8, %"class.blink::LayoutFlowThread"*, %"class.blink::LayoutState"*, %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.WTF::AtomicString", %"class.blink::LayoutObject"* }
%"class.blink::LayoutFlowThread" = type <{ %"class.blink::LayoutBlockFlow", %"class.WTF::LinkedHashSet.1936", %"class.WTF::PODIntervalTree.1949", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1954" = type { %"class.std::__1::__compressed_pair.1955" }
%"class.std::__1::__compressed_pair.1955" = type { %"struct.std::__1::__compressed_pair_elem.1956" }
%"struct.std::__1::__compressed_pair_elem.1956" = type { %"class.blink::ViewFragmentationContext"* }
%"class.blink::ViewFragmentationContext" = type opaque
%"class.std::__1::unique_ptr.1960" = type { %"class.std::__1::__compressed_pair.1961" }
%"class.std::__1::__compressed_pair.1961" = type { %"struct.std::__1::__compressed_pair_elem.1962" }
%"struct.std::__1::__compressed_pair_elem.1962" = type { %"class.blink::NamedPagesMapper"* }
%"class.blink::NamedPagesMapper" = type opaque
%"class.std::__1::unique_ptr.1966" = type { %"class.std::__1::__compressed_pair.1967" }
%"class.std::__1::__compressed_pair.1967" = type { %"struct.std::__1::__compressed_pair_elem.1968" }
%"struct.std::__1::__compressed_pair_elem.1968" = type { %"class.blink::PaintLayerCompositor"* }
%"class.blink::PaintLayerCompositor" = type { %"class.blink::LayoutView"*, i8, i8, i32, %"class.blink::CompositingInputsRoot" }
%"class.blink::CompositingInputsRoot" = type { %"class.blink::PaintLayer"* }
%class.scoped_refptr.1712 = type { %"class.WTF::PODFreeListArena"* }
%"class.WTF::PODFreeListArena" = type opaque
%"class.blink::LayoutQuote" = type opaque
%"class.blink::Persistent.1972" = type { %"class.blink::PersistentBase.1973" }
%"class.blink::PersistentBase.1973" = type { %"class.blink::HitTestCache"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HitTestCache" = type { i32, %"class.blink::HeapVector.1976", i64 }
%"class.blink::HeapVector.1976" = type { %"class.WTF::Vector.1979" }
%"class.WTF::Vector.1979" = type { %"class.WTF::VectorBuffer.1980" }
%"class.WTF::VectorBuffer.1980" = type { %"class.WTF::VectorBufferBase.1981", [368 x i8] }
%"class.WTF::VectorBufferBase.1981" = type { %"struct.blink::HitTestCacheEntry"*, i32, i32 }
%"struct.blink::HitTestCacheEntry" = type { %"class.blink::HitTestLocation", %"class.blink::HitTestResult" }
%"class.blink::HitTestLocation" = type <{ %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalRect", %"class.blink::FloatPoint", %"class.blink::FloatQuad", i32, i8, i8, [2 x i8] }>
%"class.blink::FloatQuad" = type { %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint" }
%"class.blink::HitTestResult" = type { %"class.blink::HitTestRequest", i8, %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.343", %"class.blink::Member.318", %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset", %"class.blink::Member.343", %"class.blink::Member.1765", i8, %"class.blink::Member.1982", %"class.WTF::String" }
%"class.blink::HitTestRequest" = type { i32, %"class.blink::LayoutObject"* }
%"class.blink::Member.1982" = type { %"class.blink::MemberBase.1983" }
%"class.blink::MemberBase.1983" = type { %"class.blink::HeapLinkedHashSet.1984"* }
%"class.blink::HeapLinkedHashSet.1984" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1382" = type { %"class.WTF::Vector.1385" }
%"class.WTF::Vector.1385" = type { %"class.WTF::VectorBuffer.1386" }
%"class.WTF::VectorBuffer.1386" = type { %"class.WTF::VectorBufferBase.1387" }
%"class.WTF::VectorBufferBase.1387" = type { %"class.blink::Member.1388"*, i32, i32 }
%"class.blink::Member.1388" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1400" = type { %"class.WTF::HashTable.1401" }
%"class.WTF::HashTable.1401" = type <{ %"struct.WTF::KeyValuePair.1404"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1404" = type opaque
%"class.blink::Member.1405" = type { %"class.blink::MemberBase.1406" }
%"class.blink::MemberBase.1406" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.966", { i64, i64 } }
%"class.blink::WeakMember.966" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashSet.1413" = type { %"class.WTF::HashSet.1416" }
%"class.WTF::HashSet.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"class.blink::Member.1419"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1419" = type opaque
%"class.blink::Member.1420" = type { %"class.blink::MemberBase.1421" }
%"class.blink::MemberBase.1421" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1422" = type { %"class.blink::MemberBase.1423" }
%"class.blink::MemberBase.1423" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1424" = type { %"class.blink::MemberBase.1425" }
%"class.blink::MemberBase.1425" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1426" = type { %"class.blink::MemberBase.1427" }
%"class.blink::MemberBase.1427" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1428" = type { %"class.blink::MemberBase.1429" }
%"class.blink::MemberBase.1429" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1430" = type { %"class.std::__1::__compressed_pair.1431" }
%"class.std::__1::__compressed_pair.1431" = type { %"struct.std::__1::__compressed_pair_elem.1432" }
%"struct.std::__1::__compressed_pair_elem.1432" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1436" = type { %"class.std::__1::__compressed_pair.1437" }
%"class.std::__1::__compressed_pair.1437" = type { %"struct.std::__1::__compressed_pair_elem.1438" }
%"struct.std::__1::__compressed_pair_elem.1438" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1439" = type { %"class.WTF::HashTable.1440" }
%"class.WTF::HashTable.1440" = type <{ %"struct.WTF::KeyValuePair.1443"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1443" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1455" = type { %"class.WTF::VectorBuffer.1456" }
%"class.WTF::VectorBuffer.1456" = type { %"class.WTF::VectorBufferBase.1457" }
%"class.WTF::VectorBufferBase.1457" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1460" = type { %"class.WTF::HashMap.1463" }
%"class.WTF::HashMap.1463" = type { %"class.WTF::HashTable.1464" }
%"class.WTF::HashTable.1464" = type <{ %"struct.WTF::KeyValuePair.1466"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1466" = type opaque
%"class.blink::Member.1467" = type { %"class.blink::MemberBase.1468" }
%"class.blink::MemberBase.1468" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1469" = type { %"class.std::__1::__compressed_pair.1470" }
%"class.std::__1::__compressed_pair.1470" = type { %"struct.std::__1::__compressed_pair_elem.1471" }
%"struct.std::__1::__compressed_pair_elem.1471" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1475" = type { %"class.blink::MemberBase.1476" }
%"class.blink::MemberBase.1476" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1479" = type { %"class.WTF::HashMap.1482" }
%"class.WTF::HashMap.1482" = type { %"class.WTF::HashTable.1483" }
%"class.WTF::HashTable.1483" = type <{ %"struct.WTF::KeyValuePair.1485"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1485" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1486" }
%"class.blink::HeapHashSet.1486" = type { %"class.WTF::HashSet.1489" }
%"class.WTF::HashSet.1489" = type { %"class.WTF::HashTable.1490" }
%"class.WTF::HashTable.1490" = type <{ %"class.blink::WeakMember.1492"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1492" = type opaque
%"class.blink::Member.1493" = type { %"class.blink::MemberBase.1494" }
%"class.blink::MemberBase.1494" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1495" = type { %"class.blink::MemberBase.1496" }
%"class.blink::MemberBase.1496" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1502", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1509", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1502" = type { %"class.WTF::HashSet.1505" }
%"class.WTF::HashSet.1505" = type { %"class.WTF::HashTable.1506" }
%"class.WTF::HashTable.1506" = type <{ %"class.blink::Member.1508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1508" = type opaque
%"class.blink::HeapTaskRunnerTimer.1509" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1510", { i64, i64 } }
%"class.blink::WeakMember.1510" = type { %"class.blink::MemberBase.1496" }
%"class.blink::WeakMember.1497" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.2297" }
%"class.WTF::Vector.2297" = type { %"class.WTF::VectorBuffer.2298" }
%"class.WTF::VectorBuffer.2298" = type { %"class.WTF::VectorBufferBase.2299" }
%"class.WTF::VectorBufferBase.2299" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.2302", %"class.absl::optional.2302", %"class.absl::optional.2302" }
%"class.absl::optional.2302" = type { %"class.absl::optional_internal::optional_data.2303" }
%"class.absl::optional_internal::optional_data.2303" = type { %"class.absl::optional_internal::optional_data_base.2304" }
%"class.absl::optional_internal::optional_data_base.2304" = type { %"class.absl::optional_internal::optional_data_dtor_base.2305" }
%"class.absl::optional_internal::optional_data_dtor_base.2305" = type { i8, %union.anon.2306 }
%union.anon.2306 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.897", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.2317" }
%"class.WTF::VectorBuffer.2317" = type { %"class.WTF::VectorBufferBase.2318", [32 x i8] }
%"class.WTF::VectorBufferBase.2318" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.877", i8, %"class.absl::optional.883", %class.scoped_refptr.859, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.888" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.794, %class.scoped_refptr.808, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.849, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.873 }
%class.scoped_refptr.759 = type { %"class.blink::TransformPaintPropertyNode"* }
%class.scoped_refptr.794 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.808 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.809 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.762, %class.scoped_refptr.814, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.836", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.815" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.831" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.817, [20 x float], i32, [4 x i8], %"class.std::__1::vector.824", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.826" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.842" }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { i32*, i32*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { i32* }
%class.scoped_refptr.849 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.850 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.862" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.762, %"class.absl::optional.854", %class.scoped_refptr.859, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, [3 x i8], %union.anon.858 }
%union.anon.858 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.865", i32, [4 x i8] }>
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.867" }
%"class.WTF::VectorBufferBase.867" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.blink::IntRect" }
%class.scoped_refptr.859 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.860", [4 x i8] }
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::FragmentData"* }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.std::__1::unique_ptr.2003" = type { %"class.std::__1::__compressed_pair.2004" }
%"class.std::__1::__compressed_pair.2004" = type { %"struct.std::__1::__compressed_pair_elem.2005" }
%"struct.std::__1::__compressed_pair_elem.2005" = type { %"struct.blink::PaintLayer::AncestorDependentCompositingInputs"* }
%"struct.blink::PaintLayer::AncestorDependentCompositingInputs" = type { %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::LayoutBoxModelObject"* }
%"class.blink::Persistent.2009" = type { %"class.blink::PersistentBase.2010" }
%"class.blink::PersistentBase.2010" = type { %"class.blink::PaintLayerScrollableArea"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::PaintLayerScrollableArea" = type { %"class.blink::ScrollableArea", %"class.blink::PaintLayer"*, i24, %"class.blink::IntPoint", %"struct.blink::PhysicalRect", [4 x i8], %"class.blink::PaintLayerScrollableArea::ScrollbarManager", %"class.blink::FloatSize", i8, %"class.blink::FloatSize", %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::ScrollAnchor", %"class.std::__1::unique_ptr.2015", i32, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient", %"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient", %"class.absl::optional.2028" }
%"class.blink::PaintLayerScrollableArea::ScrollbarManager" = type <{ %"class.blink::Member.2013", %"class.blink::Member.1765", %"class.blink::Member.1765", i8, [7 x i8] }>
%"class.blink::Member.2013" = type { %"class.blink::MemberBase.2014" }
%"class.blink::MemberBase.2014" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::LayoutCustomScrollbarPart" = type opaque
%"class.blink::ScrollAnchor" = type <{ %"class.blink::Member.1989", %"class.blink::LayoutObject"*, i32, %"class.blink::LayoutPoint", [4 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.2015" = type { %"class.std::__1::__compressed_pair.2016" }
%"class.std::__1::__compressed_pair.2016" = type { %"struct.std::__1::__compressed_pair_elem.2017" }
%"struct.std::__1::__compressed_pair_elem.2017" = type { %"struct.blink::PaintLayerScrollableAreaRareData"* }
%"struct.blink::PaintLayerScrollableAreaRareData" = type { %"class.WTF::HashMap.2018", %"class.absl::optional.798", i8, i8, %"class.WTF::Vector.1827" }
%"class.WTF::HashMap.2018" = type { %"class.WTF::HashTable.2019" }
%"class.WTF::HashTable.2019" = type <{ %"struct.WTF::KeyValuePair.2022"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2022" = type { %"class.blink::PaintLayer"*, %"struct.blink::StickyPositionScrollingConstraints" }
%"struct.blink::StickyPositionScrollingConstraints" = type { i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset" }
%"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2026" }
%"class.blink::Member.2026" = type { %"class.blink::MemberBase.2027" }
%"class.blink::MemberBase.2027" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2026" }
%"class.absl::optional.2028" = type { %"class.absl::optional_internal::optional_data.2029" }
%"class.absl::optional_internal::optional_data.2029" = type { %"class.absl::optional_internal::optional_data_base.2030" }
%"class.absl::optional_internal::optional_data_base.2030" = type { %"class.absl::optional_internal::optional_data_dtor_base.2031" }
%"class.absl::optional_internal::optional_data_dtor_base.2031" = type { i8, %union.anon.2032 }
%union.anon.2032 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.blink::WebString" = type { %class.scoped_refptr.5 }
%"class.std::__1::unique_ptr.2033" = type { %"class.std::__1::__compressed_pair.2034" }
%"class.std::__1::__compressed_pair.2034" = type { %"struct.std::__1::__compressed_pair_elem.2035" }
%"struct.std::__1::__compressed_pair_elem.2035" = type { %"class.blink::PaintLayerStackingNode"* }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.2049" = type { %"class.std::__1::__compressed_pair.2050" }
%"class.std::__1::__compressed_pair.2050" = type { %"struct.std::__1::__compressed_pair_elem.2051" }
%"struct.std::__1::__compressed_pair_elem.2051" = type { %"struct.blink::PaintLayerRareData"* }
%"struct.blink::PaintLayerRareData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.2052", %"class.blink::PaintLayer"*, i64, i64, i64, i32, %"class.std::__1::unique_ptr.2058", %"class.blink::CompositedLayerMapping"*, %"class.blink::Persistent.2064", %"struct.blink::PhysicalOffset" }
%"class.std::__1::unique_ptr.2052" = type { %"class.std::__1::__compressed_pair.2053" }
%"class.std::__1::__compressed_pair.2053" = type { %"struct.std::__1::__compressed_pair_elem.2054" }
%"struct.std::__1::__compressed_pair_elem.2054" = type { %"class.blink::TransformationMatrix"* }
%"class.std::__1::unique_ptr.2058" = type { %"class.std::__1::__compressed_pair.2059" }
%"class.std::__1::__compressed_pair.2059" = type { %"struct.std::__1::__compressed_pair_elem.2060" }
%"struct.std::__1::__compressed_pair_elem.2060" = type { %"class.blink::CompositedLayerMapping"* }
%"class.blink::CompositedLayerMapping" = type <{ %"class.blink::GraphicsLayerClient", %"class.blink::PaintLayer"*, %"class.std::__1::unique_ptr.2071", %"class.std::__1::unique_ptr.2071", %"class.blink::IntSize", %"class.std::__1::unique_ptr.2071", %"class.std::__1::unique_ptr.2071", %"class.std::__1::unique_ptr.2071", %"class.std::__1::unique_ptr.2071", %"class.std::__1::unique_ptr.2071", %"class.std::__1::unique_ptr.2071", %"class.std::__1::unique_ptr.2071", %"class.blink::IntSize", %"class.WTF::Vector.2276", %"class.WTF::Vector.2276", %"struct.blink::PhysicalRect", i8, [7 x i8] }>
%"class.blink::GraphicsLayerClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2071" = type { %"class.std::__1::__compressed_pair.2072" }
%"class.std::__1::__compressed_pair.2072" = type { %"struct.std::__1::__compressed_pair_elem.2073" }
%"struct.std::__1::__compressed_pair_elem.2073" = type { %"class.blink::GraphicsLayer"* }
%"class.blink::GraphicsLayer" = type { %"class.blink::DisplayItemClient.base", %"class.blink::LayerAsJSONClient", %"class.cc::ContentLayerClient", %"class.blink::GraphicsLayerClient"*, %"class.blink::IntSize", %"class.blink::TransformationMatrix", i8, i32, %"class.WTF::Vector.2074", %"class.blink::GraphicsLayer"*, %"class.blink::IntRect", %class.scoped_refptr.2079, %class.scoped_refptr.2080, %class.scoped_refptr.2137, i32, %"class.std::__1::unique_ptr.1805", %"class.blink::IntRect", %"class.std::__1::unique_ptr.2233", %"class.std::__1::unique_ptr.2233", %"class.std::__1::unique_ptr.2239", %"class.base::RepeatingCallback.2272", i32, i64 }
%"class.blink::LayerAsJSONClient" = type { i32 (...)** }
%"class.cc::ContentLayerClient" = type { i32 (...)** }
%"class.WTF::Vector.2074" = type { %"class.WTF::VectorBuffer.2075" }
%"class.WTF::VectorBuffer.2075" = type { %"class.WTF::VectorBufferBase.2076" }
%"class.WTF::VectorBufferBase.2076" = type { %"class.blink::GraphicsLayer"**, i32, i32 }
%class.scoped_refptr.2079 = type { %"class.cc::PictureLayer"* }
%"class.cc::PictureLayer" = type opaque
%class.scoped_refptr.2080 = type { %"class.cc::Layer"* }
%"class.cc::Layer" = type <{ i32 (...)**, %"class.base::RefCounted.2081", [4 x i8], %"class.cc::Layer"*, %"class.cc::LayerTreeHost"*, %"struct.cc::Layer::Inputs", %"class.std::__1::unique_ptr.2098", i32, i32, i32, i32, i32, i32, %"class.gfx::Vector2dF", i8, i16, [5 x i8], %"class.std::__1::unique_ptr.2117" }>
%"class.base::RefCounted.2081" = type { %"class.base::subtle::RefCountedBase" }
%"class.cc::LayerTreeHost" = type opaque
%"struct.cc::Layer::Inputs" = type { %"class.std::__1::vector.2082", %"class.gfx::Rect", %"class.gfx::Size", i32, i8, i32, %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", %"struct.cc::ElementId" }
%"class.std::__1::vector.2082" = type { %"class.std::__1::__vector_base.2083" }
%"class.std::__1::__vector_base.2083" = type { %class.scoped_refptr.2080*, %class.scoped_refptr.2080*, %"class.std::__1::__compressed_pair.2084" }
%"class.std::__1::__compressed_pair.2084" = type { %"struct.std::__1::__compressed_pair_elem.2085" }
%"struct.std::__1::__compressed_pair_elem.2085" = type { %class.scoped_refptr.2080* }
%"class.cc::TouchActionRegion" = type { %"class.base::flat_map" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree.2089" }
%"class.base::internal::flat_tree.2089" = type { %"class.std::__1::vector.2090" }
%"class.std::__1::vector.2090" = type { %"class.std::__1::__vector_base.2091" }
%"class.std::__1::__vector_base.2091" = type { %"struct.std::__1::pair.2092"*, %"struct.std::__1::pair.2092"*, %"class.std::__1::__compressed_pair.2093" }
%"struct.std::__1::pair.2092" = type opaque
%"class.std::__1::__compressed_pair.2093" = type { %"struct.std::__1::__compressed_pair_elem.2094" }
%"struct.std::__1::__compressed_pair_elem.2094" = type { %"struct.std::__1::pair.2092"* }
%"class.cc::Region" = type { %class.SkRegion }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"struct.SkRegion::RunHead" = type opaque
%"class.std::__1::unique_ptr.2098" = type { %"class.std::__1::__compressed_pair.2099" }
%"class.std::__1::__compressed_pair.2099" = type { %"struct.std::__1::__compressed_pair_elem.2100" }
%"struct.std::__1::__compressed_pair_elem.2100" = type { %"struct.cc::Layer::LayerTreeInputs"* }
%"struct.cc::Layer::LayerTreeInputs" = type { %"class.gfx::Rect", %"class.cc::PictureLayer"*, float, i32, i8, %"class.gfx::PointF", %"class.gfx::Transform", %"class.gfx::Point3F", %"class.viz::SubtreeCaptureId", i32, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.2101", float, i32, %"class.gfx::ScrollOffset", %"class.gfx::Size", %"class.gfx::RoundedCornersF", %"class.base::RepeatingCallback", %"class.std::__1::vector.2106" }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.gfx::Point3F" = type { float, float, float }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.absl::optional.2101" = type { %"class.absl::optional_internal::optional_data.2102" }
%"class.absl::optional_internal::optional_data.2102" = type { %"class.absl::optional_internal::optional_data_base.2103" }
%"class.absl::optional_internal::optional_data_base.2103" = type { %"class.absl::optional_internal::optional_data_dtor_base.2104" }
%"class.absl::optional_internal::optional_data_dtor_base.2104" = type { i8, %union.anon.2105 }
%union.anon.2105 = type { %"class.gfx::RRectF" }
%"class.gfx::RoundedCornersF" = type { float, float, float, float }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::vector.2106" = type { %"class.std::__1::__vector_base.2107" }
%"class.std::__1::__vector_base.2107" = type { %"class.std::__1::unique_ptr.2108"*, %"class.std::__1::unique_ptr.2108"*, %"class.std::__1::__compressed_pair.2109" }
%"class.std::__1::unique_ptr.2108" = type opaque
%"class.std::__1::__compressed_pair.2109" = type { %"struct.std::__1::__compressed_pair_elem.2110" }
%"struct.std::__1::__compressed_pair_elem.2110" = type { %"class.std::__1::unique_ptr.2108"* }
%"class.gfx::Vector2dF" = type { float, float }
%"class.std::__1::unique_ptr.2117" = type { %"class.std::__1::__compressed_pair.2118" }
%"class.std::__1::__compressed_pair.2118" = type { %"struct.std::__1::__compressed_pair_elem.2119" }
%"struct.std::__1::__compressed_pair_elem.2119" = type { %"struct.cc::LayerDebugInfo"* }
%"struct.cc::LayerDebugInfo" = type { %"class.std::__1::basic_string", i32, i32, %"class.std::__1::vector.2120", %"class.std::__1::vector.2120", %"class.std::__1::vector.2127" }
%"class.std::__1::vector.2120" = type { %"class.std::__1::__vector_base.2121" }
%"class.std::__1::__vector_base.2121" = type { i8**, i8**, %"class.std::__1::__compressed_pair.2122" }
%"class.std::__1::__compressed_pair.2122" = type { %"struct.std::__1::__compressed_pair_elem.2123" }
%"struct.std::__1::__compressed_pair_elem.2123" = type { i8** }
%"class.std::__1::vector.2127" = type { %"class.std::__1::__vector_base.2128" }
%"class.std::__1::__vector_base.2128" = type { %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"*, %"class.std::__1::__compressed_pair.2129" }
%"struct.cc::LayerDebugInfo::Invalidation" = type { %"class.gfx::Rect", i8*, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.2129" = type { %"struct.std::__1::__compressed_pair_elem.2130" }
%"struct.std::__1::__compressed_pair_elem.2130" = type { %"struct.cc::LayerDebugInfo::Invalidation"* }
%class.scoped_refptr.2137 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type <{ %"class.base::RefCountedThreadSafe.2138", [4 x i8], %"class.cc::RTree", %"class.cc::DiscardableImageMap", %"class.cc::PaintOpBuffer", %"class.std::__1::vector.824", %"class.std::__1::vector.2219", %"class.std::__1::vector.2226", i32, [4 x i8] }>
%"class.base::RefCountedThreadSafe.2138" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.cc::RTree" = type <{ i64, %"struct.cc::RTree<unsigned long>::Branch", %"class.std::__1::vector.2139", i8, [7 x i8] }>
%"struct.cc::RTree<unsigned long>::Branch" = type { %"struct.cc::RTree<unsigned long>::Node"*, i64, %"class.gfx::Rect" }
%"struct.cc::RTree<unsigned long>::Node" = type opaque
%"class.std::__1::vector.2139" = type { %"class.std::__1::__vector_base.2140" }
%"class.std::__1::__vector_base.2140" = type { %"struct.cc::RTree<unsigned long>::Node"*, %"struct.cc::RTree<unsigned long>::Node"*, %"class.std::__1::__compressed_pair.2141" }
%"class.std::__1::__compressed_pair.2141" = type { %"struct.std::__1::__compressed_pair_elem.2142" }
%"struct.std::__1::__compressed_pair_elem.2142" = type { %"struct.cc::RTree<unsigned long>::Node"* }
%"class.cc::DiscardableImageMap" = type { %"class.base::flat_map.2146", %"class.std::__1::vector.2156", %"class.base::flat_map.2170", i8, i8, [6 x i8], %"class.cc::RTree.2180", %"class.std::__1::vector.2211" }
%"class.base::flat_map.2146" = type { %"class.base::internal::flat_tree.2147" }
%"class.base::internal::flat_tree.2147" = type { %"class.std::__1::vector.2148" }
%"class.std::__1::vector.2148" = type { %"class.std::__1::__vector_base.2149" }
%"class.std::__1::__vector_base.2149" = type { %"struct.std::__1::pair.2150"*, %"struct.std::__1::pair.2150"*, %"class.std::__1::__compressed_pair.2151" }
%"struct.std::__1::pair.2150" = type opaque
%"class.std::__1::__compressed_pair.2151" = type { %"struct.std::__1::__compressed_pair_elem.2152" }
%"struct.std::__1::__compressed_pair_elem.2152" = type { %"struct.std::__1::pair.2150"* }
%"class.std::__1::vector.2156" = type { %"class.std::__1::__vector_base.2157" }
%"class.std::__1::__vector_base.2157" = type { %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"*, %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"*, %"class.std::__1::__compressed_pair.2165" }
%"struct.cc::DiscardableImageMap::AnimatedImageMetadata" = type { i32, i32, %"class.std::__1::vector.2158", i32, i32 }
%"class.std::__1::vector.2158" = type { %"class.std::__1::__vector_base.2159" }
%"class.std::__1::__vector_base.2159" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.2160" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.std::__1::__compressed_pair.2160" = type { %"struct.std::__1::__compressed_pair_elem.2161" }
%"struct.std::__1::__compressed_pair_elem.2161" = type { %"struct.cc::FrameMetadata"* }
%"class.std::__1::__compressed_pair.2165" = type { %"struct.std::__1::__compressed_pair_elem.2166" }
%"struct.std::__1::__compressed_pair_elem.2166" = type { %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"* }
%"class.base::flat_map.2170" = type { %"class.base::internal::flat_tree.2171" }
%"class.base::internal::flat_tree.2171" = type { %"class.std::__1::vector.2172" }
%"class.std::__1::vector.2172" = type { %"class.std::__1::__vector_base.2173" }
%"class.std::__1::__vector_base.2173" = type { %"struct.std::__1::pair.2174"*, %"struct.std::__1::pair.2174"*, %"class.std::__1::__compressed_pair.2175" }
%"struct.std::__1::pair.2174" = type { i32, i32 }
%"class.std::__1::__compressed_pair.2175" = type { %"struct.std::__1::__compressed_pair_elem.2176" }
%"struct.std::__1::__compressed_pair_elem.2176" = type { %"struct.std::__1::pair.2174"* }
%"class.cc::RTree.2180" = type <{ i64, %"struct.cc::RTree<cc::DrawImage>::Branch", %"class.std::__1::vector.2203", i8, [7 x i8] }>
%"struct.cc::RTree<cc::DrawImage>::Branch" = type { %"struct.cc::RTree<cc::DrawImage>::Node"*, %"class.cc::DrawImage", %"class.gfx::Rect" }
%"struct.cc::RTree<cc::DrawImage>::Node" = type opaque
%"class.cc::DrawImage" = type <{ %"class.cc::PaintImage", i8, [3 x i8], %struct.SkIRect, i32, %struct.SkSize, i8, [7 x i8], %"class.absl::optional.2193", %"class.absl::optional.2198", float, [4 x i8] }>
%"class.cc::PaintImage" = type { %class.sk_sp.2181, %class.sk_sp.2184, %"class.gfx::Rect", i32, %class.sk_sp.2189, %class.sk_sp.2190, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.2181, %class.scoped_refptr.2191 }
%class.sk_sp.2184 = type { %"class.cc::PaintOpBuffer"* }
%class.sk_sp.2189 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector.2158" }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.2182, i32, i32 }
%class.sk_sp.2182 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.2183, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.2183 = type { %"struct.std::__1::atomic.41" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.2190 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.2181 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.scoped_refptr.2191 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2192", [4 x i8] }>
%"class.base::RefCountedThreadSafe.2192" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%struct.SkSize = type { float, float }
%"class.absl::optional.2193" = type { %"class.absl::optional_internal::optional_data.2194" }
%"class.absl::optional_internal::optional_data.2194" = type { %"class.absl::optional_internal::optional_data_base.2195" }
%"class.absl::optional_internal::optional_data_base.2195" = type { %"class.absl::optional_internal::optional_data_dtor_base.2196" }
%"class.absl::optional_internal::optional_data_dtor_base.2196" = type { i8, %union.anon.2197 }
%union.anon.2197 = type { i64 }
%"class.absl::optional.2198" = type { %"class.absl::optional_internal::optional_data.2199" }
%"class.absl::optional_internal::optional_data.2199" = type { %"class.absl::optional_internal::optional_data_base.2200" }
%"class.absl::optional_internal::optional_data_base.2200" = type { %"class.absl::optional_internal::optional_data_dtor_base.2201" }
%"class.absl::optional_internal::optional_data_dtor_base.2201" = type { i8, %union.anon.2202 }
%union.anon.2202 = type { %"class.gfx::ColorSpace" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.std::__1::vector.2203" = type { %"class.std::__1::__vector_base.2204" }
%"class.std::__1::__vector_base.2204" = type { %"struct.cc::RTree<cc::DrawImage>::Node"*, %"struct.cc::RTree<cc::DrawImage>::Node"*, %"class.std::__1::__compressed_pair.2205" }
%"class.std::__1::__compressed_pair.2205" = type { %"struct.std::__1::__compressed_pair_elem.2206" }
%"struct.std::__1::__compressed_pair_elem.2206" = type { %"struct.cc::RTree<cc::DrawImage>::Node"* }
%"class.std::__1::vector.2211" = type { %"class.std::__1::__vector_base.2212" }
%"class.std::__1::__vector_base.2212" = type { %"struct.std::__1::pair.2213"*, %"struct.std::__1::pair.2213"*, %"class.std::__1::__compressed_pair.2214" }
%"struct.std::__1::pair.2213" = type opaque
%"class.std::__1::__compressed_pair.2214" = type { %"struct.std::__1::__compressed_pair_elem.2215" }
%"struct.std::__1::__compressed_pair_elem.2215" = type { %"struct.std::__1::pair.2213"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.2185", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.2185" = type { %"class.std::__1::__compressed_pair.2186" }
%"class.std::__1::__compressed_pair.2186" = type { %"struct.std::__1::__compressed_pair_elem.2187" }
%"struct.std::__1::__compressed_pair_elem.2187" = type { i8* }
%"class.std::__1::vector.2219" = type { %"class.std::__1::__vector_base.2220" }
%"class.std::__1::__vector_base.2220" = type { i64*, i64*, %"class.std::__1::__compressed_pair.2221" }
%"class.std::__1::__compressed_pair.2221" = type { %"struct.std::__1::__compressed_pair_elem.2222" }
%"struct.std::__1::__compressed_pair_elem.2222" = type { i64* }
%"class.std::__1::vector.2226" = type { %"class.std::__1::__vector_base.2227" }
%"class.std::__1::__vector_base.2227" = type { %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"class.std::__1::__compressed_pair.2228" }
%"struct.cc::DisplayItemList::PairedBeginInfo" = type { i64, i64 }
%"class.std::__1::__compressed_pair.2228" = type { %"struct.std::__1::__compressed_pair_elem.2229" }
%"struct.std::__1::__compressed_pair_elem.2229" = type { %"struct.cc::DisplayItemList::PairedBeginInfo"* }
%"class.std::__1::unique_ptr.2233" = type { %"class.std::__1::__compressed_pair.2234" }
%"class.std::__1::__compressed_pair.2234" = type { %"struct.std::__1::__compressed_pair_elem.2235" }
%"struct.std::__1::__compressed_pair_elem.2235" = type { %"struct.blink::GraphicsLayer::LayerState"* }
%"struct.blink::GraphicsLayer::LayerState" = type { %"class.blink::RefCountedPropertyTreeState", %"class.blink::IntPoint" }
%"class.std::__1::unique_ptr.2239" = type { %"class.std::__1::__compressed_pair.2240" }
%"class.std::__1::__compressed_pair.2240" = type { %"struct.std::__1::__compressed_pair_elem.2241" }
%"struct.std::__1::__compressed_pair_elem.2241" = type { %"class.blink::RasterInvalidator"* }
%"class.blink::RasterInvalidator" = type { %"class.gfx::Rect", %"class.WTF::Vector.2242", %class.scoped_refptr.2247, %"class.std::__1::unique_ptr.2248" }
%"class.WTF::Vector.2242" = type { %"class.WTF::VectorBuffer.2243" }
%"class.WTF::VectorBuffer.2243" = type { %"class.WTF::VectorBufferBase.2244" }
%"class.WTF::VectorBufferBase.2244" = type { %"struct.blink::RasterInvalidator::PaintChunkInfo"*, i32, i32 }
%"struct.blink::RasterInvalidator::PaintChunkInfo" = type { i32, %"class.blink::IntRect", %"class.blink::FloatClipRect", %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%class.scoped_refptr.2247 = type { %"class.blink::PaintArtifact"* }
%"class.std::__1::unique_ptr.2248" = type { %"class.std::__1::__compressed_pair.2249" }
%"class.std::__1::__compressed_pair.2249" = type { %"struct.std::__1::__compressed_pair_elem.2250" }
%"struct.std::__1::__compressed_pair_elem.2250" = type { %"struct.blink::RasterInvalidator::RasterInvalidationTrackingInfo"* }
%"struct.blink::RasterInvalidator::RasterInvalidationTrackingInfo" = type { %"class.WTF::HashMap.2251", %"class.blink::RasterInvalidationTracking" }
%"class.WTF::HashMap.2251" = type { %"class.WTF::HashTable.2252" }
%"class.WTF::HashTable.2252" = type <{ %"struct.WTF::KeyValuePair.2255"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2255" = type opaque
%"class.blink::RasterInvalidationTracking" = type { %"class.WTF::Vector.2256", %class.sk_sp.2184, %"class.blink::IntRect", %"class.blink::Region", %"class.WTF::Vector.2261", %class.sk_sp.2184 }
%"class.WTF::Vector.2256" = type { %"class.WTF::VectorBuffer.2257" }
%"class.WTF::VectorBuffer.2257" = type { %"class.WTF::VectorBufferBase.2258" }
%"class.WTF::VectorBufferBase.2258" = type { %"struct.blink::RasterInvalidationInfo"*, i32, i32 }
%"struct.blink::RasterInvalidationInfo" = type <{ %"class.blink::DisplayItemClient"*, %"class.WTF::String", %"class.blink::IntRect", i8, [7 x i8] }>
%"class.WTF::Vector.2261" = type { %"class.WTF::VectorBuffer.2262" }
%"class.WTF::VectorBuffer.2262" = type { %"class.WTF::VectorBufferBase.2263" }
%"class.WTF::VectorBufferBase.2263" = type { %"struct.blink::RasterUnderInvalidation"*, i32, i32 }
%"struct.blink::RasterUnderInvalidation" = type { i32, i32, i32, i32 }
%"class.base::RepeatingCallback.2272" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.WTF::Vector.2276" = type { %"class.WTF::VectorBuffer.2277" }
%"class.WTF::VectorBuffer.2277" = type { %"class.WTF::VectorBufferBase.2278" }
%"class.WTF::VectorBufferBase.2278" = type { %"struct.blink::GraphicsLayerPaintInfo"*, i32, i32 }
%"struct.blink::GraphicsLayerPaintInfo" = type <{ %"class.blink::PaintLayer"*, %"struct.blink::PhysicalRect", %"class.blink::ClipRect", [4 x i8], %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"class.blink::IntSize", i8, [7 x i8] }>
%"class.blink::ClipRect" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"class.blink::Persistent.2064" = type { %"class.blink::PersistentBase.2065" }
%"class.blink::PersistentBase.2065" = type { %"class.blink::PaintLayerResourceInfo"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::PaintLayerResourceInfo" = type { %"class.blink::SVGResourceClient", %"class.blink::PaintLayer"*, %"class.blink::FloatRect" }
%"class.blink::SVGResourceClient" = type { %"class.blink::GarbageCollectedMixin" }
%"struct.blink::PaintLayerStackingNode::HighestLayers" = type { %"struct.std::__1::array", %"class.WTF::Vector.2281" }
%"struct.std::__1::array" = type { [3 x %"class.blink::PaintLayer"*] }
%"class.WTF::Vector.2281" = type { %"class.WTF::VectorBuffer.base.2284", [4 x i8] }
%"class.WTF::VectorBuffer.base.2284" = type <{ %"class.WTF::VectorBufferBase.2283", [12 x i8] }>
%"class.WTF::VectorBufferBase.2283" = type { i32*, i32, i32 }
%"class.absl::optional.2288" = type { %"class.absl::optional_internal::optional_data.2289" }
%"class.absl::optional_internal::optional_data.2289" = type { %"class.absl::optional_internal::optional_data_base.2290" }
%"class.absl::optional_internal::optional_data_base.2290" = type { %"class.absl::optional_internal::optional_data_dtor_base.2291" }
%"class.absl::optional_internal::optional_data_dtor_base.2291" = type { i8, %union.anon.2292 }
%union.anon.2292 = type { %"struct.blink::PaintLayerStackingNode::HighestLayers" }
%"class.WTF::VectorBuffer.2282" = type <{ %"class.WTF::VectorBufferBase.2283", [12 x i8], [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN5blink22PaintLayerStackingNode13HighestLayers6UpdateERKNS_10PaintLayerE = comdat any

$_ZN5blink22PaintLayerStackingNode13HighestLayers34UpdateOrderForSubtreeHighestLayersENS1_9LayerTypeEPKNS_10PaintLayerE = comdat any

$_ZN3WTF6VectorIN5blink22PaintLayerStackingNode13HighestLayers9LayerTypeELj3ENS_18PartitionAllocatorEE14AppendSlowCaseIRS4_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink22PaintLayerStackingNode13HighestLayers9LayerTypeELj3ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink22PaintLayerStackingNode13HighestLayers9LayerTypeELj3ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink22PaintLayerStackingNode13HighestLayers9LayerTypeEEEmm = comdat any

$_ZN3WTF12VectorBufferIN5blink22PaintLayerStackingNode13HighestLayers9LayerTypeELj3ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink10PaintLayerEEEmm = comdat any

$_ZNSt3__113__stable_sortIRPFbPKN5blink10PaintLayerES4_EPPS2_EEvT0_SA_T_NS_15iterator_traitsISA_E15difference_typeEPNSD_10value_typeEl = comdat any

$_ZNSt3__118__stable_sort_moveIRPFbPKN5blink10PaintLayerES4_EPPS2_EEvT0_SA_T_NS_15iterator_traitsISA_E15difference_typeEPNSD_10value_typeE = comdat any

$_ZNSt3__115__inplace_mergeIRPFbPKN5blink10PaintLayerES4_EPPS2_EEvT0_SA_SA_T_NS_15iterator_traitsISA_E15difference_typeESE_PNSD_10value_typeEl = comdat any

$_ZN3WTF6VectorIPN5blink10PaintLayerELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_ = comdat any

$_ZN3WTF9HashTableIPKN5blink10PaintLayerENS_12KeyValuePairIS4_NS_6VectorIPS2_Lj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_S8_E6insertINS_17HashMapTranslatorISI_SD_S8_EERS4_S9_EENS_18HashTableAddResultISJ_SA_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPKN5blink10PaintLayerENS_12KeyValuePairIS4_NS_6VectorIPS2_Lj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_S8_E6ExpandEPSA_ = comdat any

$_ZN3WTF9HashTableIPKN5blink10PaintLayerENS_12KeyValuePairIS4_NS_6VectorIPS2_Lj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_S8_E8RehashToEPSA_jSK_ = comdat any

$_ZN3WTF9HashTableIPKN5blink10PaintLayerENS_12KeyValuePairIS4_NS_6VectorIPS2_Lj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_S8_E16LookupForWritingERKS4_ = comdat any

@.str = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.1 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.3 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.4 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink22PaintLayerStackingNode13HighestLayers9LayerTypeEEEPKcv = private unnamed_addr constant [103 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::PaintLayerStackingNode::HighestLayers::LayerType]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink10PaintLayerEEEPKcv = private unnamed_addr constant [67 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::PaintLayer *]\00", align 1
@_ZSt7nothrow = external global %"struct.std::nothrow_t", align 1
@.str.5 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.6 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN5blink10PaintLayerENS_6VectorIPS3_Lj0ENS_18PartitionAllocatorEEEEEEEPKcv = private unnamed_addr constant [155 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<const blink::PaintLayer *, WTF::Vector<blink::PaintLayer *, 0, WTF::PartitionAllocator> >]\00", align 1

@_ZN5blink22PaintLayerStackingNodeC1ERNS_10PaintLayerE = hidden unnamed_addr alias void (%"class.blink::PaintLayerStackingNode"*, %"class.blink::PaintLayer"*), void (%"class.blink::PaintLayerStackingNode"*, %"class.blink::PaintLayer"*)* @_ZN5blink22PaintLayerStackingNodeC2ERNS_10PaintLayerE
@_ZN5blink22PaintLayerStackingNodeD1Ev = hidden unnamed_addr alias void (%"class.blink::PaintLayerStackingNode"*), void (%"class.blink::PaintLayerStackingNode"*)* @_ZN5blink22PaintLayerStackingNodeD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22PaintLayerStackingNodeC2ERNS_10PaintLayerE(%"class.blink::PaintLayerStackingNode"* nocapture, %"class.blink::PaintLayer"* dereferenceable(152)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::PaintLayerStackingNode", %"class.blink::PaintLayerStackingNode"* %0, i64 0, i32 0
  store %"class.blink::PaintLayer"* %1, %"class.blink::PaintLayer"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::PaintLayerStackingNode", %"class.blink::PaintLayerStackingNode"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.blink::PaintLayerStackingNode", %"class.blink::PaintLayerStackingNode"* %0, i64 0, i32 4
  %6 = bitcast %"class.WTF::Vector.2036"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #9
  %7 = getelementptr inbounds %"class.blink::PaintLayerStackingNode", %"class.blink::PaintLayerStackingNode"* %0, i64 0, i32 5
  %8 = bitcast %"class.WTF::Vector.2036"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 52, i1 false)
  store i8 1, i8* %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22PaintLayerStackingNodeD2Ev(%"class.blink::PaintLayerStackingNode"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::PaintLayerStackingNode", %"class.blink::PaintLayerStackingNode"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %3 = load %"class.blink::PaintLayer"**, %"class.blink::PaintLayer"*** %2, align 8
  %4 = icmp eq %"class.blink::PaintLayer"** %3, null
  %5 = bitcast %"class.blink::PaintLayer"** %3 to i8*
  br i1 %4, label %12, label %6, !prof !2

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::PaintLayerStackingNode", %"class.blink::PaintLayerStackingNode"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10, !prof !3

10:                                               ; preds = %6
  store i32 0, i32* %7, align 4
  br label %11

11:                                               ; preds = %10, %6
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %5) #9
  store %"class.blink::PaintLayer"** null, %"class.blink::PaintLayer"*** %2, align 8
  br label %12

12:                                               ; preds = %1, %11
  %13 = getelementptr inbounds %"class.blink::PaintLayerStackingNode", %"class.blink::PaintLayerStackingNode"* %0, i64 0, i32 3, i32 0, i32 0
  %14 = load %"struct.WTF::KeyValuePair.2045"*, %"struct.WTF::KeyValuePair.2045"** %13, align 8
  %15 = icmp eq %"struct.WTF::KeyValuePair.2045"* %14, null
  br i1 %15, label %43, label %16, !prof !2

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::PaintLayerStackingNode", %"class.blink::PaintLayerStackingNode"* %0, i64 0, i32 3, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %41, label %20

20:                                               ; preds = %16
  %21 = zext i32 %18 to i64
  br label %22

22:                                               ; preds = %38, %20
  %23 = phi i64 [ 0, %20 ], [ %39, %38 ]
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.2045", %"struct.WTF::KeyValuePair.2045"* %14, i64 %23, i32 0
  %25 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %24, align 8
  %26 = icmp eq %"class.blink::PaintLayer"* %25, inttoptr (i64 -1 to %"class.blink::PaintLayer"*)
  br i1 %26, label %38, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.2045", %"struct.WTF::KeyValuePair.2045"* %14, i64 %23, i32 1, i32 0, i32 0, i32 0
  %29 = load %"class.blink::PaintLayer"**, %"class.blink::PaintLayer"*** %28, align 8
  %30 = icmp eq %"class.blink::PaintLayer"** %29, null
  %31 = bitcast %"class.blink::PaintLayer"** %29 to i8*
  br i1 %30, label %38, label %32, !prof !2

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.2045", %"struct.WTF::KeyValuePair.2045"* %14, i64 %23, i32 1, i32 0, i32 0, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %37, label %36, !prof !3

36:                                               ; preds = %32
  store i32 0, i32* %33, align 4
  br label %37

37:                                               ; preds = %36, %32
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %31) #9
  store %"class.blink::PaintLayer"** null, %"class.blink::PaintLayer"*** %28, align 8
  br label %38

38:                                               ; preds = %37, %27, %22
  %39 = add nuw nsw i64 %23, 1
  %40 = icmp eq i64 %39, %21
  br i1 %40, label %41, label %22

41:                                               ; preds = %38, %16
  %42 = bitcast %"struct.WTF::KeyValuePair.2045"* %14 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %42) #9
  store %"struct.WTF::KeyValuePair.2045"* null, %"struct.WTF::KeyValuePair.2045"** %13, align 8
  br label %43

43:                                               ; preds = %12, %41
  %44 = getelementptr inbounds %"class.blink::PaintLayerStackingNode", %"class.blink::PaintLayerStackingNode"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %45 = load %"class.blink::PaintLayer"**, %"class.blink::PaintLayer"*** %44, align 8
  %46 = icmp eq %"class.blink::PaintLayer"** %45, null
  %47 = bitcast %"class.blink::PaintLayer"** %45 to i8*
  br i1 %46, label %54, label %48, !prof !2

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.blink::PaintLayerStackingNode", %"class.blink::PaintLayerStackingNode"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %53, label %52, !prof !3

52:                                               ; preds = %48
  store i32 0, i32* %49, align 4
  br label %53

53:                                               ; preds = %52, %48
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %47) #9
  store %"class.blink::PaintLayer"** null, %"class.blink::PaintLayer"*** %44, align 8
  br label %54

54:                                               ; preds = %43, %53
  %55 = getelementptr inbounds %"class.blink::PaintLayerStackingNode", %"class.blink::PaintLayerStackingNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %56 = load %"class.blink::PaintLayer"**, %"class.blink::PaintLayer"*** %55, align 8
  %57 = icmp eq %"class.blink::PaintLayer"** %56, null
  %58 = bitcast %"class.blink::PaintLayer"** %56 to i8*
  br i1 %57, label %65, label %59, !prof !2

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.blink::PaintLayerStackingNode", %"class.blink::PaintLayerStackingNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %64, label %63, !prof !3

63:                                               ; preds = %59
  store i32 0, i32* %60, align 4
  br label %64

64:                                               ; preds = %63, %59
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %58) #9
  store %"class.blink::PaintLayer"** null, %"class.blink::PaintLayer"*** %55, align 8
  br label %65

65:                                               ; preds = %54, %64
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::PaintLayerCompositor"* @_ZNK5blink22PaintLayerStackingNode10CompositorEv(%"class.blink::PaintLayerStackingNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::PaintLayerStackingNode", %"class.blink::PaintLayerStackingNode"* %0, i64 0, i32 0
  %3 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %3, i64 0, i32 2
  %5 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %5, i64 0, i32 0
  %7 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %5, i64 0, i32 0, i32 6, i32 0, i32 0
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %9 = icmp eq %"class.blink::Node"* %8, null
  br i1 %9, label %10, label %17

10:                                               ; preds = %1, %10
  %11 = phi %"class.blink::LayoutObject"* [ %13, %10 ], [ %6, %1 ]
  %12 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %11, i64 0, i32 7
  %13 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %13, i64 0, i32 6, i32 0, i32 0
  %15 = load %"class.blink::Node"*, %"class.blink::Node"** %14, align 8
  %16 = icmp eq %"class.blink::Node"* %15, null
  br i1 %16, label %10, label %17

17:                                               ; preds = %10, %1
  %18 = phi %"class.blink::Node"* [ %8, %1 ], [ %15, %10 ]
  %19 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %18, i64 0, i32 3, i32 0, i32 0
  %20 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %20, i64 0, i32 2, i32 0, i32 0
  %22 = load %"class.blink::Document"*, %"class.blink::Document"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %22, i64 0, i32 113
  %24 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %23, align 8
  %25 = icmp eq %"class.blink::LayoutView"* %24, null
  br i1 %25, label %43, label %26

26:                                               ; preds = %17
  br i1 %9, label %27, label %34

27:                                               ; preds = %26, %27
  %28 = phi %"class.blink::LayoutObject"* [ %30, %27 ], [ %6, %26 ]
  %29 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %28, i64 0, i32 7
  %30 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %30, i64 0, i32 6, i32 0, i32 0
  %32 = load %"class.blink::Node"*, %"class.blink::Node"** %31, align 8
  %33 = icmp eq %"class.blink::Node"* %32, null
  br i1 %33, label %27, label %34

34:                                               ; preds = %27, %26
  %35 = phi %"class.blink::Node"* [ %8, %26 ], [ %32, %27 ]
  %36 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %35, i64 0, i32 3, i32 0, i32 0
  %37 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %37, i64 0, i32 2, i32 0, i32 0
  %39 = load %"class.blink::Document"*, %"class.blink::Document"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %39, i64 0, i32 113
  %41 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %40, align 8
  %42 = tail call %"class.blink::PaintLayerCompositor"* @_ZN5blink10LayoutView10CompositorEv(%"class.blink::LayoutView"* %41) #9
  br label %43

43:                                               ; preds = %17, %34
  %44 = phi %"class.blink::PaintLayerCompositor"* [ %42, %34 ], [ null, %17 ]
  ret %"class.blink::PaintLayerCompositor"* %44
}

declare %"class.blink::PaintLayerCompositor"* @_ZN5blink10LayoutView10CompositorEv(%"class.blink::LayoutView"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22PaintLayerStackingNode16DirtyZOrderListsEv(%"class.blink::PaintLayerStackingNode"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::PaintLayerStackingNode", %"class.blink::PaintLayerStackingNode"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.blink::PaintLayerStackingNode", %"class.blink::PaintLayerStackingNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %15, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::PaintLayerStackingNode", %"class.blink::PaintLayerStackingNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  store i32 0, i32* %7, align 4
  br label %11

11:                                               ; preds = %10, %6
  %12 = bitcast %"class.WTF::Vector.2036"* %2 to i8**
  %13 = load i8*, i8** %12, align 8
  %14 = bitcast %"class.WTF::Vector.2036"* %2 to i64*
  store atomic i64 0, i64* %14 monotonic, align 8
  store i32 0, i32* %3, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %13) #9
  br label %15

15:                                               ; preds = %1, %11
  %16 = getelementptr inbounds %"class.blink::PaintLayerStackingNode", %"class.blink::PaintLayerStackingNode"* %0, i64 0, i32 2
  %17 = getelementptr inbounds %"class.blink::PaintLayerStackingNode", %"class.blink::PaintLayerStackingNode"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %29, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.blink::PaintLayerStackingNode", %"class.blink::PaintLayerStackingNode"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %25, label %24

24:                                               ; preds = %20
  store i32 0, i32* %21, align 4
  br label %25

25:                                               ; preds = %24, %20
  %26 = bitcast %"class.WTF::Vector.2036"* %16 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = bitcast %"class.WTF::Vector.2036"* %16 to i64*
  store atomic i64 0, i64* %28 monotonic, align 8
  store i32 0, i32* %17, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %27) #9
  br label %29

29:                                               ; preds = %15, %25
  %30 = getelementptr inbounds %"class.blink::PaintLayerStackingNode", %"class.blink::PaintLayerStackingNode"* %0, i64 0, i32 3
  %31 = getelementptr inbounds %"class.blink::PaintLayerStackingNode", %"class.blink::PaintLayerStackingNode"* %0, i64 0, i32 3, i32 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::HashMap.2041", %"class.WTF::HashMap.2041"* %30, i64 0, i32 0, i32 0
  %35 = load %"struct.WTF::KeyValuePair.2045"*, %"struct.WTF::KeyValuePair.2045"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::PaintLayerStackingNode", %"class.blink::PaintLayerStackingNode"* %0, i64 0, i32 3, i32 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.2045", %"struct.WTF::KeyValuePair.2045"* %35, i64 %38
  br i1 %33, label %54, label %40

40:                                               ; preds = %29
  %41 = icmp eq i32 %37, 0
  br i1 %41, label %49, label %42

42:                                               ; preds = %40, %46
  %43 = phi %"struct.WTF::KeyValuePair.2045"* [ %47, %46 ], [ %35, %40 ]
  %44 = bitcast %"struct.WTF::KeyValuePair.2045"* %43 to i64*
  %45 = load i64, i64* %44, align 8
  switch i64 %45, label %49 [
    i64 -1, label %46
    i64 0, label %46
  ]

46:                                               ; preds = %42, %42
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.2045", %"struct.WTF::KeyValuePair.2045"* %43, i64 1
  %48 = icmp eq %"struct.WTF::KeyValuePair.2045"* %47, %39
  br i1 %48, label %54, label %42

49:                                               ; preds = %42, %40
  %50 = phi %"struct.WTF::KeyValuePair.2045"* [ %35, %40 ], [ %43, %42 ]
  %51 = icmp eq %"struct.WTF::KeyValuePair.2045"* %50, %39
  br i1 %51, label %54, label %124

52:                                               ; preds = %154, %164, %161
  %53 = load %"struct.WTF::KeyValuePair.2045"*, %"struct.WTF::KeyValuePair.2045"** %34, align 8
  br label %54

54:                                               ; preds = %46, %29, %52, %49
  %55 = phi %"struct.WTF::KeyValuePair.2045"* [ %53, %52 ], [ %35, %49 ], [ %35, %29 ], [ %35, %46 ]
  %56 = icmp eq %"struct.WTF::KeyValuePair.2045"* %55, null
  br i1 %56, label %84, label %57

57:                                               ; preds = %54
  %58 = load i32, i32* %36, align 8
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %81, label %60

60:                                               ; preds = %57
  %61 = zext i32 %58 to i64
  br label %62

62:                                               ; preds = %78, %60
  %63 = phi i64 [ 0, %60 ], [ %79, %78 ]
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.2045", %"struct.WTF::KeyValuePair.2045"* %55, i64 %63, i32 0
  %65 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %64, align 8
  %66 = icmp eq %"class.blink::PaintLayer"* %65, inttoptr (i64 -1 to %"class.blink::PaintLayer"*)
  br i1 %66, label %78, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.2045", %"struct.WTF::KeyValuePair.2045"* %55, i64 %63, i32 1, i32 0, i32 0, i32 0
  %69 = load %"class.blink::PaintLayer"**, %"class.blink::PaintLayer"*** %68, align 8
  %70 = icmp eq %"class.blink::PaintLayer"** %69, null
  %71 = bitcast %"class.blink::PaintLayer"** %69 to i8*
  br i1 %70, label %78, label %72, !prof !2

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.2045", %"struct.WTF::KeyValuePair.2045"* %55, i64 %63, i32 1, i32 0, i32 0, i32 2
  %74 = load i32, i32* %73, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %77, label %76, !prof !3

76:                                               ; preds = %72
  store i32 0, i32* %73, align 4
  br label %77

77:                                               ; preds = %76, %72
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %71) #9
  store %"class.blink::PaintLayer"** null, %"class.blink::PaintLayer"*** %68, align 8
  br label %78

78:                                               ; preds = %77, %67, %62
  %79 = add nuw nsw i64 %63, 1
  %80 = icmp eq i64 %79, %61
  br i1 %80, label %81, label %62

81:                                               ; preds = %78, %57
  %82 = bitcast %"struct.WTF::KeyValuePair.2045"* %55 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %82) #9
  %83 = bitcast %"class.WTF::HashMap.2041"* %30 to i64*
  store atomic i64 0, i64* %83 monotonic, align 8
  store i32 0, i32* %36, align 8
  store i32 0, i32* %31, align 4
  br label %84

84:                                               ; preds = %54, %81
  %85 = getelementptr inbounds %"class.blink::PaintLayerStackingNode", %"class.blink::PaintLayerStackingNode"* %0, i64 0, i32 4
  %86 = getelementptr inbounds %"class.blink::PaintLayerStackingNode", %"class.blink::PaintLayerStackingNode"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %87 = load i32, i32* %86, align 8
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %98, label %89

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.blink::PaintLayerStackingNode", %"class.blink::PaintLayerStackingNode"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %91 = load i32, i32* %90, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %94, label %93

93:                                               ; preds = %89
  store i32 0, i32* %90, align 4
  br label %94

94:                                               ; preds = %93, %89
  %95 = bitcast %"class.WTF::Vector.2036"* %85 to i8**
  %96 = load i8*, i8** %95, align 8
  %97 = bitcast %"class.WTF::Vector.2036"* %85 to i64*
  store atomic i64 0, i64* %97 monotonic, align 8
  store i32 0, i32* %86, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %96) #9
  br label %98

98:                                               ; preds = %84, %94
  %99 = getelementptr inbounds %"class.blink::PaintLayerStackingNode", %"class.blink::PaintLayerStackingNode"* %0, i64 0, i32 5
  store i8 1, i8* %99, align 8
  %100 = getelementptr inbounds %"class.blink::PaintLayerStackingNode", %"class.blink::PaintLayerStackingNode"* %0, i64 0, i32 0
  %101 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %100, align 8
  %102 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %101, i64 0, i32 2
  %103 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %102, align 8
  %104 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %103, i64 0, i32 0
  %105 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %103, i64 0, i32 0, i32 6, i32 0, i32 0
  %106 = load %"class.blink::Node"*, %"class.blink::Node"** %105, align 8
  %107 = icmp eq %"class.blink::Node"* %106, null
  br i1 %107, label %108, label %115

108:                                              ; preds = %98, %108
  %109 = phi %"class.blink::LayoutObject"* [ %111, %108 ], [ %104, %98 ]
  %110 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %109, i64 0, i32 7
  %111 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %110, align 8
  %112 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %111, i64 0, i32 6, i32 0, i32 0
  %113 = load %"class.blink::Node"*, %"class.blink::Node"** %112, align 8
  %114 = icmp eq %"class.blink::Node"* %113, null
  br i1 %114, label %108, label %115

115:                                              ; preds = %108, %98
  %116 = phi %"class.blink::Node"* [ %106, %98 ], [ %113, %108 ]
  %117 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %116, i64 0, i32 3, i32 0, i32 0
  %118 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %117, align 8
  %119 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %118, i64 0, i32 2, i32 0, i32 0
  %120 = load %"class.blink::Document"*, %"class.blink::Document"** %119, align 8
  %121 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %120, i64 0, i32 5, i32 0
  %122 = load i32, i32* %121, align 4
  %123 = icmp sgt i32 %122, 19
  br i1 %123, label %271, label %193

124:                                              ; preds = %49, %164
  %125 = phi %"struct.WTF::KeyValuePair.2045"* [ %158, %164 ], [ %50, %49 ]
  %126 = getelementptr inbounds %"struct.WTF::KeyValuePair.2045", %"struct.WTF::KeyValuePair.2045"* %125, i64 0, i32 1, i32 0, i32 0, i32 0
  %127 = load %"class.blink::PaintLayer"**, %"class.blink::PaintLayer"*** %126, align 8
  %128 = getelementptr inbounds %"struct.WTF::KeyValuePair.2045", %"struct.WTF::KeyValuePair.2045"* %125, i64 0, i32 1, i32 0, i32 0, i32 2
  %129 = load i32, i32* %128, align 4
  %130 = zext i32 %129 to i64
  %131 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %127, i64 %130
  %132 = icmp eq i32 %129, 0
  br i1 %132, label %154, label %133

133:                                              ; preds = %124
  %134 = shl nuw nsw i64 %130, 3
  %135 = add nsw i64 %134, -8
  %136 = lshr exact i64 %135, 3
  %137 = add nuw nsw i64 %136, 1
  %138 = and i64 %137, 3
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %151, label %140

140:                                              ; preds = %133, %140
  %141 = phi %"class.blink::PaintLayer"** [ %148, %140 ], [ %127, %133 ]
  %142 = phi i64 [ %149, %140 ], [ %138, %133 ]
  %143 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %141, align 8
  %144 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %143, i64 0, i32 1
  %145 = bitcast [6 x i8]* %144 to i48*
  %146 = load i48, i48* %145, align 1
  %147 = and i48 %146, -34359738369
  store i48 %147, i48* %145, align 1
  %148 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %141, i64 1
  %149 = add i64 %142, -1
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %140, !llvm.loop !4

151:                                              ; preds = %140, %133
  %152 = phi %"class.blink::PaintLayer"** [ %127, %133 ], [ %148, %140 ]
  %153 = icmp ult i64 %135, 24
  br i1 %153, label %154, label %166

154:                                              ; preds = %151, %166, %124
  %155 = getelementptr inbounds %"struct.WTF::KeyValuePair.2045", %"struct.WTF::KeyValuePair.2045"* %125, i64 1
  %156 = icmp eq %"struct.WTF::KeyValuePair.2045"* %155, %39
  br i1 %156, label %52, label %157

157:                                              ; preds = %154, %161
  %158 = phi %"struct.WTF::KeyValuePair.2045"* [ %162, %161 ], [ %155, %154 ]
  %159 = bitcast %"struct.WTF::KeyValuePair.2045"* %158 to i64*
  %160 = load i64, i64* %159, align 8
  switch i64 %160, label %164 [
    i64 -1, label %161
    i64 0, label %161
  ]

161:                                              ; preds = %157, %157
  %162 = getelementptr inbounds %"struct.WTF::KeyValuePair.2045", %"struct.WTF::KeyValuePair.2045"* %158, i64 1
  %163 = icmp eq %"struct.WTF::KeyValuePair.2045"* %162, %39
  br i1 %163, label %52, label %157

164:                                              ; preds = %157
  %165 = icmp eq %"struct.WTF::KeyValuePair.2045"* %158, %39
  br i1 %165, label %52, label %124

166:                                              ; preds = %151, %166
  %167 = phi %"class.blink::PaintLayer"** [ %191, %166 ], [ %152, %151 ]
  %168 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %167, align 8
  %169 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %168, i64 0, i32 1
  %170 = bitcast [6 x i8]* %169 to i48*
  %171 = load i48, i48* %170, align 1
  %172 = and i48 %171, -34359738369
  store i48 %172, i48* %170, align 1
  %173 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %167, i64 1
  %174 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %173, align 8
  %175 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %174, i64 0, i32 1
  %176 = bitcast [6 x i8]* %175 to i48*
  %177 = load i48, i48* %176, align 1
  %178 = and i48 %177, -34359738369
  store i48 %178, i48* %176, align 1
  %179 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %167, i64 2
  %180 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %179, align 8
  %181 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %180, i64 0, i32 1
  %182 = bitcast [6 x i8]* %181 to i48*
  %183 = load i48, i48* %182, align 1
  %184 = and i48 %183, -34359738369
  store i48 %184, i48* %182, align 1
  %185 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %167, i64 3
  %186 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %185, align 8
  %187 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %186, i64 0, i32 1
  %188 = bitcast [6 x i8]* %187 to i48*
  %189 = load i48, i48* %188, align 1
  %190 = and i48 %189, -34359738369
  store i48 %190, i48* %188, align 1
  %191 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %167, i64 4
  %192 = icmp eq %"class.blink::PaintLayer"** %191, %131
  br i1 %192, label %154, label %166

193:                                              ; preds = %115
  br i1 %107, label %194, label %201

194:                                              ; preds = %193, %194
  %195 = phi %"class.blink::LayoutObject"* [ %197, %194 ], [ %104, %193 ]
  %196 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %195, i64 0, i32 7
  %197 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %196, align 8
  %198 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %197, i64 0, i32 6, i32 0, i32 0
  %199 = load %"class.blink::Node"*, %"class.blink::Node"** %198, align 8
  %200 = icmp eq %"class.blink::Node"* %199, null
  br i1 %200, label %194, label %201

201:                                              ; preds = %194, %193
  %202 = phi %"class.blink::Node"* [ %106, %193 ], [ %199, %194 ]
  %203 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %202, i64 0, i32 3, i32 0, i32 0
  %204 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %203, align 8
  %205 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %204, i64 0, i32 2, i32 0, i32 0
  %206 = load %"class.blink::Document"*, %"class.blink::Document"** %205, align 8
  %207 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %206, i64 0, i32 113
  %208 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %207, align 8
  %209 = icmp eq %"class.blink::LayoutView"* %208, null
  br i1 %209, label %271, label %210

210:                                              ; preds = %201
  br i1 %107, label %211, label %218

211:                                              ; preds = %210, %211
  %212 = phi %"class.blink::LayoutObject"* [ %214, %211 ], [ %104, %210 ]
  %213 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %212, i64 0, i32 7
  %214 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %213, align 8
  %215 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %214, i64 0, i32 6, i32 0, i32 0
  %216 = load %"class.blink::Node"*, %"class.blink::Node"** %215, align 8
  %217 = icmp eq %"class.blink::Node"* %216, null
  br i1 %217, label %211, label %218

218:                                              ; preds = %211, %210
  %219 = phi %"class.blink::Node"* [ %106, %210 ], [ %216, %211 ]
  %220 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %219, i64 0, i32 3, i32 0, i32 0
  %221 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %220, align 8
  %222 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %221, i64 0, i32 2, i32 0, i32 0
  %223 = load %"class.blink::Document"*, %"class.blink::Document"** %222, align 8
  %224 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %223, i64 0, i32 113
  %225 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %224, align 8
  %226 = tail call %"class.blink::PaintLayerCompositor"* @_ZN5blink10LayoutView10CompositorEv(%"class.blink::LayoutView"* %225) #9
  %227 = icmp eq %"class.blink::PaintLayerCompositor"* %226, null
  br i1 %227, label %271, label %228

228:                                              ; preds = %218
  %229 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %100, align 8
  %230 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %229, i64 0, i32 2
  %231 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %230, align 8
  %232 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %231, i64 0, i32 0
  %233 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %231, i64 0, i32 0, i32 6, i32 0, i32 0
  %234 = load %"class.blink::Node"*, %"class.blink::Node"** %233, align 8
  %235 = icmp eq %"class.blink::Node"* %234, null
  br i1 %235, label %236, label %243

236:                                              ; preds = %228, %236
  %237 = phi %"class.blink::LayoutObject"* [ %239, %236 ], [ %232, %228 ]
  %238 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %237, i64 0, i32 7
  %239 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %238, align 8
  %240 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %239, i64 0, i32 6, i32 0, i32 0
  %241 = load %"class.blink::Node"*, %"class.blink::Node"** %240, align 8
  %242 = icmp eq %"class.blink::Node"* %241, null
  br i1 %242, label %236, label %243

243:                                              ; preds = %236, %228
  %244 = phi %"class.blink::Node"* [ %234, %228 ], [ %241, %236 ]
  %245 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %244, i64 0, i32 3, i32 0, i32 0
  %246 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %245, align 8
  %247 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %246, i64 0, i32 2, i32 0, i32 0
  %248 = load %"class.blink::Document"*, %"class.blink::Document"** %247, align 8
  %249 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %248, i64 0, i32 113
  %250 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %249, align 8
  %251 = icmp eq %"class.blink::LayoutView"* %250, null
  br i1 %251, label %269, label %252

252:                                              ; preds = %243
  br i1 %235, label %253, label %260

253:                                              ; preds = %252, %253
  %254 = phi %"class.blink::LayoutObject"* [ %256, %253 ], [ %232, %252 ]
  %255 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %254, i64 0, i32 7
  %256 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %255, align 8
  %257 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %256, i64 0, i32 6, i32 0, i32 0
  %258 = load %"class.blink::Node"*, %"class.blink::Node"** %257, align 8
  %259 = icmp eq %"class.blink::Node"* %258, null
  br i1 %259, label %253, label %260

260:                                              ; preds = %253, %252
  %261 = phi %"class.blink::Node"* [ %234, %252 ], [ %258, %253 ]
  %262 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %261, i64 0, i32 3, i32 0, i32 0
  %263 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %262, align 8
  %264 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %263, i64 0, i32 2, i32 0, i32 0
  %265 = load %"class.blink::Document"*, %"class.blink::Document"** %264, align 8
  %266 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %265, i64 0, i32 113
  %267 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %266, align 8
  %268 = tail call %"class.blink::PaintLayerCompositor"* @_ZN5blink10LayoutView10CompositorEv(%"class.blink::LayoutView"* %267) #9
  br label %269

269:                                              ; preds = %243, %260
  %270 = phi %"class.blink::PaintLayerCompositor"* [ %268, %260 ], [ null, %243 ]
  tail call void @_ZN5blink20PaintLayerCompositor25SetNeedsCompositingUpdateENS_21CompositingUpdateTypeE(%"class.blink::PaintLayerCompositor"* %270, i32 3) #9
  br label %271

271:                                              ; preds = %201, %218, %269, %115
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN5blink20PaintLayerCompositor25SetNeedsCompositingUpdateENS_21CompositingUpdateTypeE(%"class.blink::PaintLayerCompositor"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22PaintLayerStackingNode18RebuildZOrderListsEv(%"class.blink::PaintLayerStackingNode"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i1 (%"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*)*, align 8
  %3 = alloca i1 (%"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*)*, align 8
  %4 = alloca %"class.blink::PaintLayer"*, align 8
  %5 = getelementptr inbounds %"class.blink::PaintLayerStackingNode", %"class.blink::PaintLayerStackingNode"* %0, i64 0, i32 0
  %6 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %6, i64 0, i32 1
  %8 = bitcast [6 x i8]* %7 to i48*
  %9 = load i48, i48* %8, align 1
  %10 = and i48 %9, -34359738369
  store i48 %10, i48* %8, align 1
  %11 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %5, align 8
  %12 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %11, i64 0, i32 6
  %13 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %12, align 8
  %14 = icmp eq %"class.blink::PaintLayer"* %13, null
  br i1 %14, label %15, label %63

15:                                               ; preds = %63, %1
  %16 = getelementptr inbounds %"class.blink::PaintLayerStackingNode", %"class.blink::PaintLayerStackingNode"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::Vector.2036", %"class.WTF::Vector.2036"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::PaintLayer"**, %"class.blink::PaintLayer"*** %17, align 8
  %19 = getelementptr inbounds %"class.blink::PaintLayerStackingNode", %"class.blink::PaintLayerStackingNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %18, i64 %21
  %23 = bitcast i1 (%"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*)** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23)
  store i1 (%"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*)* @_ZN5blinkL14ZIndexLessThanEPKNS_10PaintLayerES2_, i1 (%"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*)** %3, align 8
  %24 = icmp ugt i32 %20, 128
  br i1 %24, label %25, label %33

25:                                               ; preds = %15, %30
  %26 = phi i64 [ %31, %30 ], [ %21, %15 ]
  %27 = shl i64 %26, 3
  %28 = tail call noalias i8* @_ZnwmRKSt9nothrow_t(i64 %27, %"struct.std::nothrow_t"* nonnull dereferenceable(1) @_ZSt7nothrow) #9
  %29 = icmp eq i8* %28, null
  br i1 %29, label %30, label %34

30:                                               ; preds = %25
  %31 = lshr i64 %26, 1
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %33, label %25

33:                                               ; preds = %30, %15
  call void @_ZNSt3__113__stable_sortIRPFbPKN5blink10PaintLayerES4_EPPS2_EEvT0_SA_T_NS_15iterator_traitsISA_E15difference_typeEPNSD_10value_typeEl(%"class.blink::PaintLayer"** %18, %"class.blink::PaintLayer"** %22, i1 (%"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*)** nonnull dereferenceable(8) %3, i64 %21, %"class.blink::PaintLayer"** null, i64 0) #9
  br label %36

34:                                               ; preds = %25
  %35 = bitcast i8* %28 to %"class.blink::PaintLayer"**
  call void @_ZNSt3__113__stable_sortIRPFbPKN5blink10PaintLayerES4_EPPS2_EEvT0_SA_T_NS_15iterator_traitsISA_E15difference_typeEPNSD_10value_typeEl(%"class.blink::PaintLayer"** %18, %"class.blink::PaintLayer"** %22, i1 (%"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*)** nonnull dereferenceable(8) %3, i64 %21, %"class.blink::PaintLayer"** nonnull %35, i64 %26) #9
  call void @_ZdlPv(i8* nonnull %28) #10
  br label %36

36:                                               ; preds = %33, %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23)
  %37 = getelementptr inbounds %"class.blink::PaintLayerStackingNode", %"class.blink::PaintLayerStackingNode"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %38 = load %"class.blink::PaintLayer"**, %"class.blink::PaintLayer"*** %37, align 8
  %39 = getelementptr inbounds %"class.blink::PaintLayerStackingNode", %"class.blink::PaintLayerStackingNode"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %40 = load i32, i32* %39, align 4
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %38, i64 %41
  %43 = bitcast i1 (%"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*)** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43)
  store i1 (%"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*)* @_ZN5blinkL14ZIndexLessThanEPKNS_10PaintLayerES2_, i1 (%"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*)** %2, align 8
  %44 = icmp ugt i32 %40, 128
  br i1 %44, label %45, label %53

45:                                               ; preds = %36, %50
  %46 = phi i64 [ %51, %50 ], [ %41, %36 ]
  %47 = shl i64 %46, 3
  %48 = call noalias i8* @_ZnwmRKSt9nothrow_t(i64 %47, %"struct.std::nothrow_t"* nonnull dereferenceable(1) @_ZSt7nothrow) #9
  %49 = icmp eq i8* %48, null
  br i1 %49, label %50, label %54

50:                                               ; preds = %45
  %51 = lshr i64 %46, 1
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %53, label %45

53:                                               ; preds = %50, %36
  call void @_ZNSt3__113__stable_sortIRPFbPKN5blink10PaintLayerES4_EPPS2_EEvT0_SA_T_NS_15iterator_traitsISA_E15difference_typeEPNSD_10value_typeEl(%"class.blink::PaintLayer"** %38, %"class.blink::PaintLayer"** %42, i1 (%"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*)** nonnull dereferenceable(8) %2, i64 %41, %"class.blink::PaintLayer"** null, i64 0) #9
  br label %56

54:                                               ; preds = %45
  %55 = bitcast i8* %48 to %"class.blink::PaintLayer"**
  call void @_ZNSt3__113__stable_sortIRPFbPKN5blink10PaintLayerES4_EPPS2_EEvT0_SA_T_NS_15iterator_traitsISA_E15difference_typeEPNSD_10value_typeEl(%"class.blink::PaintLayer"** %38, %"class.blink::PaintLayer"** %42, i1 (%"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*)** nonnull dereferenceable(8) %2, i64 %41, %"class.blink::PaintLayer"** nonnull %55, i64 %46) #9
  call void @_ZdlPv(i8* nonnull %48) #10
  br label %56

56:                                               ; preds = %53, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43)
  %57 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %5, align 8
  %58 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %57, i64 0, i32 1
  %59 = bitcast [6 x i8]* %58 to i48*
  %60 = load i48, i48* %59, align 1
  %61 = and i48 %60, 2
  %62 = icmp eq i48 %61, 0
  br i1 %62, label %228, label %68

63:                                               ; preds = %1, %63
  %64 = phi %"class.blink::PaintLayer"* [ %66, %63 ], [ %13, %1 ]
  tail call void @_ZN5blink22PaintLayerStackingNode13CollectLayersERNS_10PaintLayerEPNS0_13HighestLayersE(%"class.blink::PaintLayerStackingNode"* %0, %"class.blink::PaintLayer"* nonnull dereferenceable(152) %64, %"struct.blink::PaintLayerStackingNode::HighestLayers"* null)
  %65 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %64, i64 0, i32 5
  %66 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %65, align 8
  %67 = icmp eq %"class.blink::PaintLayer"* %66, null
  br i1 %67, label %15, label %63

68:                                               ; preds = %56
  %69 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %57, i64 0, i32 2
  %70 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %69, align 8
  %71 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %70, i64 0, i32 0, i32 6, i32 0, i32 0
  %72 = load %"class.blink::Node"*, %"class.blink::Node"** %71, align 8
  %73 = icmp eq %"class.blink::Node"* %72, null
  br i1 %73, label %74, label %83

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %70, i64 0, i32 0
  br label %76

76:                                               ; preds = %74, %76
  %77 = phi %"class.blink::LayoutObject"* [ %79, %76 ], [ %75, %74 ]
  %78 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %77, i64 0, i32 7
  %79 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %78, align 8
  %80 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %79, i64 0, i32 6, i32 0, i32 0
  %81 = load %"class.blink::Node"*, %"class.blink::Node"** %80, align 8
  %82 = icmp eq %"class.blink::Node"* %81, null
  br i1 %82, label %76, label %83

83:                                               ; preds = %76, %68
  %84 = phi %"class.blink::Node"* [ %72, %68 ], [ %81, %76 ]
  %85 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %84, i64 0, i32 3, i32 0, i32 0
  %86 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %85, align 8
  %87 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %86, i64 0, i32 2, i32 0, i32 0
  %88 = load %"class.blink::Document"*, %"class.blink::Document"** %87, align 8
  %89 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %88, i64 0, i32 113
  %90 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %89, align 8
  %91 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %90, i64 0, i32 0
  %92 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %90, i64 0, i32 0, i32 2, i32 0, i32 0
  %93 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %92, align 8
  %94 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %93, null
  br i1 %94, label %98, label %95

95:                                               ; preds = %83
  %96 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %93, i64 0, i32 3
  %97 = load %"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutMultiColumnFlowThread"** %96, align 8
  br label %98

98:                                               ; preds = %83, %95
  %99 = phi %"class.blink::LayoutMultiColumnFlowThread"* [ %97, %95 ], [ null, %83 ]
  %100 = icmp eq %"class.blink::LayoutMultiColumnFlowThread"* %99, null
  %101 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %99, i64 0, i32 0, i32 0
  %102 = select i1 %100, %"class.blink::LayoutBlockFlow"* %91, %"class.blink::LayoutBlockFlow"* %101
  %103 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %102, i64 0, i32 0, i32 1, i32 0
  %104 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %103, align 8
  %105 = icmp eq %"class.blink::LayoutObject"* %104, null
  br i1 %105, label %228, label %106

106:                                              ; preds = %98
  %107 = bitcast %"class.blink::PaintLayer"** %4 to i8*
  %108 = getelementptr inbounds %"class.blink::PaintLayerStackingNode", %"class.blink::PaintLayerStackingNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  br label %109

109:                                              ; preds = %106, %224
  %110 = phi %"class.blink::LayoutObject"* [ %104, %106 ], [ %226, %224 ]
  %111 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %110, i64 0, i32 4
  %112 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %111 to i96*
  %113 = load i96, i96* %112, align 4
  %114 = and i96 %113, 16777216
  %115 = icmp eq i96 %114, 0
  br i1 %115, label %116, label %224

116:                                              ; preds = %109
  %117 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %110, i64 0, i32 6, i32 0, i32 0
  %118 = load %"class.blink::Node"*, %"class.blink::Node"** %117, align 8
  %119 = icmp eq %"class.blink::Node"* %118, null
  br i1 %119, label %224, label %120

120:                                              ; preds = %116
  %121 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %118, i64 0, i32 1
  %122 = load i32, i32* %121, align 8
  %123 = and i32 %122, 13
  %124 = icmp eq i32 %123, 1
  br i1 %124, label %125, label %224

125:                                              ; preds = %120
  %126 = bitcast %"class.blink::Node"* %118 to %"class.blink::Element"*
  %127 = call zeroext i1 @_ZNK5blink7Element22HasElementFlagInternalENS_12ElementFlagsE(%"class.blink::Element"* nonnull %126, i32 16) #9
  br i1 %127, label %128, label %224

128:                                              ; preds = %125
  %129 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %110, i64 0, i32 5, i32 0
  %130 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %129, align 8
  %131 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %130, i64 0, i32 0, i32 9
  %132 = bitcast [20 x i8]* %131 to i160*
  %133 = load i160, i160* %132, align 8
  %134 = lshr i160 %133, 80
  %135 = trunc i160 %134 to i32
  %136 = and i32 %135, 7
  %137 = icmp eq i32 %136, 4
  %138 = and i160 %133, 128849018880
  %139 = icmp eq i160 %138, 42949672960
  %140 = and i1 %139, %137
  %141 = icmp eq i32 %136, 3
  %142 = or i1 %141, %140
  br i1 %142, label %143, label %202

143:                                              ; preds = %128
  %144 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %130, i64 0, i32 0, i32 3, i32 0, i32 0
  %145 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %144, align 8
  %146 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %145, i64 0, i32 3, i32 0, i32 0
  %147 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %146, align 8
  %148 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %147, i64 0, i32 39
  %149 = load i32, i32* %148, align 4
  %150 = and i32 %149, 67108864
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %202

152:                                              ; preds = %143
  %153 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %145, i64 0, i32 2, i32 0, i32 0
  %154 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %153, align 8
  %155 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %154, i64 0, i32 2, i32 0, i32 0
  %156 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %155, align 8
  %157 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %156, i64 0, i32 45
  %158 = load i32, i32* %157, align 4
  %159 = and i32 %158, 5
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %224, label %161

161:                                              ; preds = %152
  %162 = load i96, i96* %112, align 4
  %163 = and i96 %162, 1207959552
  %164 = icmp eq i96 %163, 134217728
  br i1 %164, label %224, label %165

165:                                              ; preds = %161
  %166 = bitcast %"class.blink::LayoutObject"* %110 to i1 (%"class.blink::LayoutObject"*, i32)***
  %167 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %166, align 8
  %168 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %167, i64 92
  %169 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %168, align 8
  %170 = call zeroext i1 %169(%"class.blink::LayoutObject"* nonnull %110, i32 43) #9
  br i1 %170, label %224, label %171

171:                                              ; preds = %165
  %172 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %166, align 8
  %173 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %172, i64 92
  %174 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %173, align 8
  %175 = call zeroext i1 %174(%"class.blink::LayoutObject"* nonnull %110, i32 46) #9
  br i1 %175, label %196, label %176

176:                                              ; preds = %171
  %177 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %166, align 8
  %178 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %177, i64 92
  %179 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %178, align 8
  %180 = call zeroext i1 %179(%"class.blink::LayoutObject"* nonnull %110, i32 48) #9
  br i1 %180, label %196, label %181

181:                                              ; preds = %176
  %182 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %166, align 8
  %183 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %182, i64 92
  %184 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %183, align 8
  %185 = call zeroext i1 %184(%"class.blink::LayoutObject"* nonnull %110, i32 45) #9
  br i1 %185, label %196, label %186

186:                                              ; preds = %181
  %187 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %166, align 8
  %188 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %187, i64 92
  %189 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %188, align 8
  %190 = call zeroext i1 %189(%"class.blink::LayoutObject"* nonnull %110, i32 49) #9
  br i1 %190, label %196, label %191

191:                                              ; preds = %186
  %192 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %166, align 8
  %193 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %192, i64 92
  %194 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %193, align 8
  %195 = call zeroext i1 %194(%"class.blink::LayoutObject"* nonnull %110, i32 50) #9
  br i1 %195, label %196, label %202

196:                                              ; preds = %171, %176, %181, %186, %191
  %197 = bitcast %"class.blink::LayoutObject"* %110 to i1 (%"class.blink::LayoutObject"*)***
  %198 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %197, align 8
  %199 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %198, i64 24
  %200 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %199, align 8
  %201 = call zeroext i1 %200(%"class.blink::LayoutObject"* nonnull %110) #9
  br i1 %201, label %202, label %224

202:                                              ; preds = %191, %143, %128, %196
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %107) #9
  %203 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %110, i64 0, i32 10, i32 1, i32 0, i32 0, i32 0
  %204 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %203, align 8
  %205 = icmp eq %"struct.blink::FragmentData::RareData"* %204, null
  br i1 %205, label %209, label %206

206:                                              ; preds = %202
  %207 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %204, i64 0, i32 0, i32 0, i32 0, i32 0
  %208 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %207, align 8
  br label %209

209:                                              ; preds = %202, %206
  %210 = phi %"class.blink::PaintLayer"* [ %208, %206 ], [ null, %202 ]
  store %"class.blink::PaintLayer"* %210, %"class.blink::PaintLayer"** %4, align 8
  %211 = load i32, i32* %19, align 4
  %212 = load i32, i32* %108, align 8
  %213 = icmp eq i32 %211, %212
  br i1 %213, label %222, label %214, !prof !3

214:                                              ; preds = %209
  %215 = ptrtoint %"class.blink::PaintLayer"* %210 to i64
  %216 = load %"class.blink::PaintLayer"**, %"class.blink::PaintLayer"*** %17, align 8
  %217 = zext i32 %211 to i64
  %218 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %216, i64 %217
  %219 = bitcast %"class.blink::PaintLayer"** %218 to i64*
  store i64 %215, i64* %219, align 8
  %220 = load i32, i32* %19, align 4
  %221 = add i32 %220, 1
  store i32 %221, i32* %19, align 4
  br label %223

222:                                              ; preds = %209
  call void @_ZN3WTF6VectorIPN5blink10PaintLayerELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.2036"* %16, %"class.blink::PaintLayer"** nonnull dereferenceable(8) %4) #9
  br label %223

223:                                              ; preds = %214, %222
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %107) #9
  br label %224

224:                                              ; preds = %120, %161, %152, %165, %109, %116, %223, %196, %125
  %225 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %110, i64 0, i32 9
  %226 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %225, align 8
  %227 = icmp eq %"class.blink::LayoutObject"* %226, null
  br i1 %227, label %228, label %109

228:                                              ; preds = %224, %98, %56
  %229 = getelementptr inbounds %"class.blink::PaintLayerStackingNode", %"class.blink::PaintLayerStackingNode"* %0, i64 0, i32 5
  store i8 0, i8* %229, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22PaintLayerStackingNode13CollectLayersERNS_10PaintLayerEPNS0_13HighestLayersE(%"class.blink::PaintLayerStackingNode"*, %"class.blink::PaintLayer"* dereferenceable(152), %"struct.blink::PaintLayerStackingNode::HighestLayers"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::PaintLayer"*, align 8
  %5 = alloca %"class.absl::optional.2288", align 8
  %6 = alloca %"class.blink::PaintLayer"*, align 8
  %7 = alloca %"class.WTF::Vector.2036", align 8
  %8 = alloca %"class.blink::PaintLayer"*, align 8
  %9 = alloca %"class.blink::PaintLayer"*, align 8
  %10 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %1, i64 0, i32 1
  %11 = bitcast [6 x i8]* %10 to i48*
  %12 = load i48, i48* %11, align 1
  %13 = and i48 %12, -34359738369
  store i48 %13, i48* %11, align 1
  %14 = tail call zeroext i1 @_ZNK5blink10PaintLayer12IsInTopLayerEv(%"class.blink::PaintLayer"* %1) #9
  br i1 %14, label %440, label %15

15:                                               ; preds = %3
  %16 = icmp ne %"struct.blink::PaintLayerStackingNode::HighestLayers"* %2, null
  br i1 %16, label %17, label %18

17:                                               ; preds = %15
  tail call void @_ZN5blink22PaintLayerStackingNode13HighestLayers6UpdateERKNS_10PaintLayerE(%"struct.blink::PaintLayerStackingNode::HighestLayers"* nonnull %2, %"class.blink::PaintLayer"* dereferenceable(152) %1)
  br label %18

18:                                               ; preds = %17, %15
  %19 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %1, i64 0, i32 2
  %20 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %20, i64 0, i32 0
  %22 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %20, i64 0, i32 0, i32 5, i32 0
  %23 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %23, i64 0, i32 0, i32 9
  %25 = bitcast [20 x i8]* %24 to i160*
  %26 = load i160, i160* %25, align 8
  %27 = lshr i160 %26, 80
  %28 = trunc i160 %27 to i32
  %29 = and i32 %28, 7
  %30 = icmp eq i32 %29, 4
  %31 = and i160 %26, 128849018880
  %32 = icmp eq i160 %31, 42949672960
  %33 = and i1 %32, %30
  %34 = icmp eq i32 %29, 3
  %35 = or i1 %34, %33
  br i1 %35, label %36, label %97

36:                                               ; preds = %18
  %37 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %23, i64 0, i32 0, i32 3, i32 0, i32 0
  %38 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %38, i64 0, i32 3, i32 0, i32 0
  %40 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %40, i64 0, i32 39
  %42 = load i32, i32* %41, align 4
  %43 = and i32 %42, 67108864
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %97

45:                                               ; preds = %36
  %46 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %38, i64 0, i32 2, i32 0, i32 0
  %47 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %47, i64 0, i32 2, i32 0, i32 0
  %49 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %49, i64 0, i32 45
  %51 = load i32, i32* %50, align 4
  %52 = and i32 %51, 5
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %134, label %54

54:                                               ; preds = %45
  %55 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %20, i64 0, i32 0, i32 4
  %56 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %55 to i96*
  %57 = load i96, i96* %56, align 4
  %58 = and i96 %57, 1207959552
  %59 = icmp eq i96 %58, 134217728
  br i1 %59, label %134, label %60

60:                                               ; preds = %54
  %61 = bitcast %"class.blink::LayoutBoxModelObject"* %20 to i1 (%"class.blink::LayoutObject"*, i32)***
  %62 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %61, align 8
  %63 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %62, i64 92
  %64 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %63, align 8
  %65 = tail call zeroext i1 %64(%"class.blink::LayoutObject"* %21, i32 43) #9
  br i1 %65, label %134, label %66

66:                                               ; preds = %60
  %67 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %61, align 8
  %68 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %67, i64 92
  %69 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %68, align 8
  %70 = tail call zeroext i1 %69(%"class.blink::LayoutObject"* %21, i32 46) #9
  br i1 %70, label %91, label %71

71:                                               ; preds = %66
  %72 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %61, align 8
  %73 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %72, i64 92
  %74 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %73, align 8
  %75 = tail call zeroext i1 %74(%"class.blink::LayoutObject"* %21, i32 48) #9
  br i1 %75, label %91, label %76

76:                                               ; preds = %71
  %77 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %61, align 8
  %78 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %77, i64 92
  %79 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %78, align 8
  %80 = tail call zeroext i1 %79(%"class.blink::LayoutObject"* %21, i32 45) #9
  br i1 %80, label %91, label %81

81:                                               ; preds = %76
  %82 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %61, align 8
  %83 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %82, i64 92
  %84 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %83, align 8
  %85 = tail call zeroext i1 %84(%"class.blink::LayoutObject"* %21, i32 49) #9
  br i1 %85, label %91, label %86

86:                                               ; preds = %81
  %87 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %61, align 8
  %88 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %87, i64 92
  %89 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %88, align 8
  %90 = tail call zeroext i1 %89(%"class.blink::LayoutObject"* %21, i32 50) #9
  br i1 %90, label %91, label %97

91:                                               ; preds = %66, %71, %76, %81, %86
  %92 = bitcast %"class.blink::LayoutBoxModelObject"* %20 to i1 (%"class.blink::LayoutObject"*)***
  %93 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %92, align 8
  %94 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %93, i64 24
  %95 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %94, align 8
  %96 = tail call zeroext i1 %95(%"class.blink::LayoutObject"* %21) #9
  br i1 %96, label %97, label %134

97:                                               ; preds = %86, %36, %18, %91
  %98 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %23, i64 0, i32 0, i32 3, i32 0, i32 0
  %99 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %98, align 8
  %100 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %99, i64 0, i32 3, i32 0, i32 0
  %101 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %100, align 8
  %102 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %101, i64 0, i32 39
  %103 = load i32, i32* %102, align 4
  %104 = and i32 %103, 65536
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %113

106:                                              ; preds = %97
  %107 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %23, i64 0, i32 0, i32 5, i32 0, i32 0
  %108 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %107, align 8
  %109 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %108, i64 0, i32 10
  %110 = load i32, i32* %109, align 4
  %111 = icmp sgt i32 %110, -1
  %112 = getelementptr inbounds %"class.blink::PaintLayerStackingNode", %"class.blink::PaintLayerStackingNode"* %0, i64 0, i32 2
  br i1 %111, label %113, label %115

113:                                              ; preds = %97, %106
  %114 = getelementptr inbounds %"class.blink::PaintLayerStackingNode", %"class.blink::PaintLayerStackingNode"* %0, i64 0, i32 1
  br label %115

115:                                              ; preds = %106, %113
  %116 = phi %"class.WTF::Vector.2036"* [ %114, %113 ], [ %112, %106 ]
  %117 = bitcast %"class.blink::PaintLayer"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %117) #9
  store %"class.blink::PaintLayer"* %1, %"class.blink::PaintLayer"** %4, align 8
  %118 = getelementptr inbounds %"class.WTF::Vector.2036", %"class.WTF::Vector.2036"* %116, i64 0, i32 0, i32 0, i32 2
  %119 = load i32, i32* %118, align 4
  %120 = getelementptr inbounds %"class.WTF::Vector.2036", %"class.WTF::Vector.2036"* %116, i64 0, i32 0, i32 0, i32 1
  %121 = load i32, i32* %120, align 8
  %122 = icmp eq i32 %119, %121
  br i1 %122, label %132, label %123, !prof !3

123:                                              ; preds = %115
  %124 = ptrtoint %"class.blink::PaintLayer"* %1 to i64
  %125 = getelementptr inbounds %"class.WTF::Vector.2036", %"class.WTF::Vector.2036"* %116, i64 0, i32 0, i32 0, i32 0
  %126 = load %"class.blink::PaintLayer"**, %"class.blink::PaintLayer"*** %125, align 8
  %127 = zext i32 %119 to i64
  %128 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %126, i64 %127
  %129 = bitcast %"class.blink::PaintLayer"** %128 to i64*
  store i64 %124, i64* %129, align 8
  %130 = load i32, i32* %118, align 4
  %131 = add i32 %130, 1
  store i32 %131, i32* %118, align 4
  br label %133

132:                                              ; preds = %115
  call void @_ZN3WTF6VectorIPN5blink10PaintLayerELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.2036"* %116, %"class.blink::PaintLayer"** nonnull dereferenceable(8) %4) #9
  br label %133

133:                                              ; preds = %123, %132
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %117) #9
  br label %134

134:                                              ; preds = %54, %45, %60, %133, %91
  %135 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %22, align 8
  %136 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %135, i64 0, i32 0, i32 3, i32 0, i32 0
  %137 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %136, align 8
  %138 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %137, i64 0, i32 3, i32 0, i32 0
  %139 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %138, align 8
  %140 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %139, i64 0, i32 39
  %141 = load i32, i32* %140, align 4
  %142 = and i32 %141, 67108864
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %440

144:                                              ; preds = %134
  %145 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %137, i64 0, i32 2, i32 0, i32 0
  %146 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %145, align 8
  %147 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %146, i64 0, i32 2, i32 0, i32 0
  %148 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %147, align 8
  %149 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %148, i64 0, i32 45
  %150 = load i32, i32* %149, align 4
  %151 = and i32 %150, 5
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %196, label %153

153:                                              ; preds = %144
  %154 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %20, i64 0, i32 0, i32 4
  %155 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %154 to i96*
  %156 = load i96, i96* %155, align 4
  %157 = and i96 %156, 1207959552
  %158 = icmp eq i96 %157, 134217728
  br i1 %158, label %196, label %159

159:                                              ; preds = %153
  %160 = bitcast %"class.blink::LayoutBoxModelObject"* %20 to i1 (%"class.blink::LayoutObject"*, i32)***
  %161 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %160, align 8
  %162 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %161, i64 92
  %163 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %162, align 8
  %164 = call zeroext i1 %163(%"class.blink::LayoutObject"* %21, i32 43) #9
  br i1 %164, label %196, label %165

165:                                              ; preds = %159
  %166 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %160, align 8
  %167 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %166, i64 92
  %168 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %167, align 8
  %169 = call zeroext i1 %168(%"class.blink::LayoutObject"* %21, i32 46) #9
  br i1 %169, label %190, label %170

170:                                              ; preds = %165
  %171 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %160, align 8
  %172 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %171, i64 92
  %173 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %172, align 8
  %174 = call zeroext i1 %173(%"class.blink::LayoutObject"* %21, i32 48) #9
  br i1 %174, label %190, label %175

175:                                              ; preds = %170
  %176 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %160, align 8
  %177 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %176, i64 92
  %178 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %177, align 8
  %179 = call zeroext i1 %178(%"class.blink::LayoutObject"* %21, i32 45) #9
  br i1 %179, label %190, label %180

180:                                              ; preds = %175
  %181 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %160, align 8
  %182 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %181, i64 92
  %183 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %182, align 8
  %184 = call zeroext i1 %183(%"class.blink::LayoutObject"* %21, i32 49) #9
  br i1 %184, label %190, label %185

185:                                              ; preds = %180
  %186 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %160, align 8
  %187 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %186, i64 92
  %188 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %187, align 8
  %189 = call zeroext i1 %188(%"class.blink::LayoutObject"* %21, i32 50) #9
  br i1 %189, label %190, label %440

190:                                              ; preds = %165, %170, %175, %180, %185
  %191 = bitcast %"class.blink::LayoutBoxModelObject"* %20 to i1 (%"class.blink::LayoutObject"*)***
  %192 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %191, align 8
  %193 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %192, i64 24
  %194 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %193, align 8
  %195 = call zeroext i1 %194(%"class.blink::LayoutObject"* %21) #9
  br i1 %195, label %440, label %196

196:                                              ; preds = %153, %144, %159, %190
  %197 = getelementptr inbounds %"class.absl::optional.2288", %"class.absl::optional.2288"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %197) #9
  %198 = bitcast %"class.absl::optional.2288"* %5 to i64*
  store i64 -6148914691236517206, i64* %198, align 8
  store i8 0, i8* %197, align 8
  %199 = getelementptr inbounds %"class.absl::optional.2288", %"class.absl::optional.2288"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %200 = bitcast %union.anon.2292* %199 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %200, i8 0, i64 56, i1 false) #9
  %201 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %1, i64 0, i32 14, i32 0, i32 0
  %202 = load %"class.blink::PaintLayerScrollableArea"*, %"class.blink::PaintLayerScrollableArea"** %201, align 8
  %203 = icmp eq %"class.blink::PaintLayerScrollableArea"* %202, null
  br i1 %203, label %230, label %204

204:                                              ; preds = %196
  %205 = call zeroext i1 @_ZNK5blink24PaintLayerScrollableArea26HasOverlayOverflowControlsEv(%"class.blink::PaintLayerScrollableArea"* nonnull %202) #9
  br i1 %205, label %206, label %230

206:                                              ; preds = %204
  %207 = load i8, i8* %197, align 8, !range !6
  %208 = icmp eq i8 %207, 0
  br i1 %208, label %224, label %209

209:                                              ; preds = %206
  %210 = getelementptr inbounds %"class.absl::optional.2288", %"class.absl::optional.2288"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %211 = getelementptr inbounds %"class.absl::optional.2288", %"class.absl::optional.2288"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 2
  %212 = load i32, i32* %211, align 4
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %215, label %214, !prof !3

214:                                              ; preds = %209
  store i32 0, i32* %211, align 4
  br label %215

215:                                              ; preds = %214, %209
  %216 = getelementptr inbounds %"class.WTF::Vector.2281", %"class.WTF::Vector.2281"* %210, i64 0, i32 0, i32 0, i32 0
  %217 = load i32*, i32** %216, align 8
  %218 = getelementptr inbounds %"class.absl::optional.2288", %"class.absl::optional.2288"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i64 0
  %219 = bitcast i8* %218 to i32*
  %220 = icmp eq i32* %217, %219
  br i1 %220, label %223, label %221, !prof !2

221:                                              ; preds = %215
  %222 = bitcast %"class.WTF::Vector.2281"* %210 to %"class.WTF::VectorBuffer.2282"*
  call void @_ZN3WTF12VectorBufferIN5blink22PaintLayerStackingNode13HighestLayers9LayerTypeELj3ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.2282"* %222, i32* %217) #9
  br label %223

223:                                              ; preds = %221, %215
  store i32* null, i32** %216, align 8
  store i8 0, i8* %197, align 8
  br label %224

224:                                              ; preds = %206, %223
  %225 = getelementptr inbounds %"class.absl::optional.2288", %"class.absl::optional.2288"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %226 = getelementptr inbounds %"class.absl::optional.2288", %"class.absl::optional.2288"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i64 0
  %227 = bitcast %"class.WTF::Vector.2281"* %225 to i8**
  call void @llvm.memset.p0i8.i64(i8* align 8 %200, i8 0, i64 56, i1 false) #9
  store i8* %226, i8** %227, align 8
  %228 = getelementptr inbounds %"class.absl::optional.2288", %"class.absl::optional.2288"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 1
  store i32 3, i32* %228, align 8
  %229 = getelementptr inbounds %"class.absl::optional.2288", %"class.absl::optional.2288"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 2
  store i32 0, i32* %229, align 4
  store i8 1, i8* %197, align 8
  br label %230

230:                                              ; preds = %196, %224, %204
  %231 = phi i1 [ true, %224 ], [ false, %204 ], [ false, %196 ]
  %232 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %1, i64 0, i32 6
  %233 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %232, align 8
  %234 = icmp eq %"class.blink::PaintLayer"* %233, null
  br i1 %234, label %237, label %235

235:                                              ; preds = %230
  %236 = getelementptr inbounds %"class.absl::optional.2288", %"class.absl::optional.2288"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  br label %238

237:                                              ; preds = %238, %230
  br i1 %231, label %246, label %421

238:                                              ; preds = %235, %238
  %239 = phi %"class.blink::PaintLayer"* [ %233, %235 ], [ %244, %238 ]
  %240 = load i8, i8* %197, align 8, !range !6
  %241 = icmp eq i8 %240, 0
  %242 = select i1 %241, %"struct.blink::PaintLayerStackingNode::HighestLayers"* %2, %"struct.blink::PaintLayerStackingNode::HighestLayers"* %236
  call void @_ZN5blink22PaintLayerStackingNode13CollectLayersERNS_10PaintLayerEPNS0_13HighestLayersE(%"class.blink::PaintLayerStackingNode"* %0, %"class.blink::PaintLayer"* nonnull dereferenceable(152) %239, %"struct.blink::PaintLayerStackingNode::HighestLayers"* %242)
  %243 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %239, i64 0, i32 5
  %244 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %243, align 8
  %245 = icmp eq %"class.blink::PaintLayer"* %244, null
  br i1 %245, label %237, label %238

246:                                              ; preds = %237
  %247 = bitcast %"class.blink::PaintLayer"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %247) #9
  store %"class.blink::PaintLayer"* null, %"class.blink::PaintLayer"** %6, align 8
  %248 = load i8, i8* %197, align 8, !range !6
  %249 = icmp eq i8 %248, 0
  br i1 %249, label %250, label %251, !prof !3

250:                                              ; preds = %246
  call void @llvm.trap() #9
  unreachable

251:                                              ; preds = %246
  %252 = getelementptr inbounds %"class.absl::optional.2288", %"class.absl::optional.2288"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %253 = load i32*, i32** %252, align 8
  %254 = getelementptr inbounds %"class.absl::optional.2288", %"class.absl::optional.2288"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 2
  %255 = load i32, i32* %254, align 4
  %256 = zext i32 %255 to i64
  %257 = getelementptr inbounds i32, i32* %253, i64 %256
  %258 = icmp eq i32 %255, 0
  br i1 %258, label %397, label %259

259:                                              ; preds = %251
  %260 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %20, i64 0, i32 0, i32 4
  %261 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %260 to i96*
  br label %264

262:                                              ; preds = %338
  %263 = icmp eq %"class.blink::PaintLayer"* %339, null
  br i1 %263, label %397, label %342

264:                                              ; preds = %259, %338
  %265 = phi %"class.blink::PaintLayer"* [ null, %259 ], [ %339, %338 ]
  %266 = phi i32* [ %253, %259 ], [ %340, %338 ]
  %267 = load i32, i32* %266, align 4
  switch i32 %267, label %290 [
    i32 1, label %268
    i32 0, label %272
  ]

268:                                              ; preds = %264
  %269 = load i96, i96* %261, align 4
  %270 = and i96 %269, 68719476736
  %271 = icmp eq i96 %270, 0
  br i1 %271, label %338, label %290

272:                                              ; preds = %264
  %273 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %22, align 8
  %274 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %273, i64 0, i32 0, i32 9
  %275 = bitcast [20 x i8]* %274 to i160*
  %276 = load i160, i160* %275, align 8
  %277 = lshr i160 %276, 80
  %278 = trunc i160 %277 to i32
  %279 = and i32 %278, 7
  %280 = icmp eq i32 %279, 4
  %281 = and i160 %276, 128849018880
  %282 = icmp eq i160 %281, 42949672960
  %283 = and i1 %282, %280
  %284 = icmp ne i32 %279, 3
  %285 = xor i1 %284, %283
  br i1 %285, label %290, label %286

286:                                              ; preds = %272
  %287 = load i96, i96* %261, align 4
  %288 = and i96 %287, 68719476736
  %289 = icmp eq i96 %288, 0
  br i1 %289, label %338, label %290

290:                                              ; preds = %268, %286, %272, %264
  %291 = zext i32 %267 to i64
  %292 = getelementptr inbounds %"class.absl::optional.2288", %"class.absl::optional.2288"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i64 %291
  %293 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %292, align 8
  %294 = icmp eq %"class.blink::PaintLayer"* %293, null
  br i1 %294, label %338, label %295

295:                                              ; preds = %290
  %296 = icmp eq %"class.blink::PaintLayer"* %265, null
  br i1 %296, label %337, label %297

297:                                              ; preds = %295
  %298 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %293, i64 0, i32 2
  %299 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %298, align 8
  %300 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %299, i64 0, i32 0, i32 5, i32 0
  %301 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %300, align 8
  %302 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %301, i64 0, i32 0, i32 3, i32 0, i32 0
  %303 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %302, align 8
  %304 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %303, i64 0, i32 3, i32 0, i32 0
  %305 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %304, align 8
  %306 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %305, i64 0, i32 39
  %307 = load i32, i32* %306, align 4
  %308 = and i32 %307, 65536
  %309 = icmp eq i32 %308, 0
  br i1 %309, label %310, label %315

310:                                              ; preds = %297
  %311 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %301, i64 0, i32 0, i32 5, i32 0, i32 0
  %312 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %311, align 8
  %313 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %312, i64 0, i32 10
  %314 = load i32, i32* %313, align 4
  br label %315

315:                                              ; preds = %310, %297
  %316 = phi i32 [ %314, %310 ], [ 0, %297 ]
  %317 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %265, i64 0, i32 2
  %318 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %317, align 8
  %319 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %318, i64 0, i32 0, i32 5, i32 0
  %320 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %319, align 8
  %321 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %320, i64 0, i32 0, i32 3, i32 0, i32 0
  %322 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %321, align 8
  %323 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %322, i64 0, i32 3, i32 0, i32 0
  %324 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %323, align 8
  %325 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %324, i64 0, i32 39
  %326 = load i32, i32* %325, align 4
  %327 = and i32 %326, 65536
  %328 = icmp eq i32 %327, 0
  br i1 %328, label %329, label %334

329:                                              ; preds = %315
  %330 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %320, i64 0, i32 0, i32 5, i32 0, i32 0
  %331 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %330, align 8
  %332 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %331, i64 0, i32 10
  %333 = load i32, i32* %332, align 4
  br label %334

334:                                              ; preds = %329, %315
  %335 = phi i32 [ %333, %329 ], [ 0, %315 ]
  %336 = icmp slt i32 %316, %335
  br i1 %336, label %338, label %337

337:                                              ; preds = %334, %295
  store %"class.blink::PaintLayer"* %293, %"class.blink::PaintLayer"** %6, align 8
  br label %338

338:                                              ; preds = %268, %286, %337, %334, %290
  %339 = phi %"class.blink::PaintLayer"* [ %265, %268 ], [ %265, %286 ], [ %293, %337 ], [ %265, %334 ], [ %265, %290 ]
  %340 = getelementptr inbounds i32, i32* %266, i64 1
  %341 = icmp eq i32* %340, %257
  br i1 %341, label %262, label %264

342:                                              ; preds = %262
  %343 = bitcast %"class.WTF::Vector.2036"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %343) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %343, i8 0, i64 16, i1 false) #9
  %344 = getelementptr inbounds %"class.blink::PaintLayerStackingNode", %"class.blink::PaintLayerStackingNode"* %0, i64 0, i32 3, i32 0
  %345 = call { %"struct.WTF::KeyValuePair.2045"*, i8 } @_ZN3WTF9HashTableIPKN5blink10PaintLayerENS_12KeyValuePairIS4_NS_6VectorIPS2_Lj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_S8_E6insertINS_17HashMapTranslatorISI_SD_S8_EERS4_S9_EENS_18HashTableAddResultISJ_SA_EEOT0_OT1_(%"class.WTF::HashTable.2042"* %344, %"class.blink::PaintLayer"** nonnull dereferenceable(8) %6, %"class.WTF::Vector.2036"* nonnull dereferenceable(16) %7) #9
  %346 = extractvalue { %"struct.WTF::KeyValuePair.2045"*, i8 } %345, 0
  %347 = getelementptr inbounds %"struct.WTF::KeyValuePair.2045", %"struct.WTF::KeyValuePair.2045"* %346, i64 0, i32 1
  %348 = bitcast %"class.blink::PaintLayer"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %348) #9
  store %"class.blink::PaintLayer"* %1, %"class.blink::PaintLayer"** %8, align 8
  %349 = getelementptr inbounds %"struct.WTF::KeyValuePair.2045", %"struct.WTF::KeyValuePair.2045"* %346, i64 0, i32 1, i32 0, i32 0, i32 2
  %350 = load i32, i32* %349, align 4
  %351 = getelementptr inbounds %"struct.WTF::KeyValuePair.2045", %"struct.WTF::KeyValuePair.2045"* %346, i64 0, i32 1, i32 0, i32 0, i32 1
  %352 = load i32, i32* %351, align 8
  %353 = icmp eq i32 %350, %352
  %354 = ptrtoint %"class.blink::PaintLayer"* %1 to i64
  br i1 %353, label %363, label %355, !prof !3

355:                                              ; preds = %342
  %356 = getelementptr inbounds %"class.WTF::Vector.2036", %"class.WTF::Vector.2036"* %347, i64 0, i32 0, i32 0, i32 0
  %357 = load %"class.blink::PaintLayer"**, %"class.blink::PaintLayer"*** %356, align 8
  %358 = zext i32 %350 to i64
  %359 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %357, i64 %358
  %360 = bitcast %"class.blink::PaintLayer"** %359 to i64*
  store i64 %354, i64* %360, align 8
  %361 = load i32, i32* %349, align 4
  %362 = add i32 %361, 1
  store i32 %362, i32* %349, align 4
  br label %364

363:                                              ; preds = %342
  call void @_ZN3WTF6VectorIPN5blink10PaintLayerELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.2036"* %347, %"class.blink::PaintLayer"** nonnull dereferenceable(8) %8) #9
  br label %364

364:                                              ; preds = %355, %363
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %348) #9
  %365 = getelementptr inbounds %"class.WTF::Vector.2036", %"class.WTF::Vector.2036"* %7, i64 0, i32 0, i32 0, i32 0
  %366 = load %"class.blink::PaintLayer"**, %"class.blink::PaintLayer"*** %365, align 8
  %367 = icmp eq %"class.blink::PaintLayer"** %366, null
  %368 = bitcast %"class.blink::PaintLayer"** %366 to i8*
  br i1 %367, label %375, label %369, !prof !2

369:                                              ; preds = %364
  %370 = getelementptr inbounds %"class.WTF::Vector.2036", %"class.WTF::Vector.2036"* %7, i64 0, i32 0, i32 0, i32 2
  %371 = load i32, i32* %370, align 4
  %372 = icmp eq i32 %371, 0
  br i1 %372, label %374, label %373, !prof !3

373:                                              ; preds = %369
  store i32 0, i32* %370, align 4
  br label %374

374:                                              ; preds = %373, %369
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %368) #9
  store %"class.blink::PaintLayer"** null, %"class.blink::PaintLayer"*** %365, align 8
  br label %375

375:                                              ; preds = %364, %374
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %343) #9
  %376 = getelementptr inbounds %"class.blink::PaintLayerStackingNode", %"class.blink::PaintLayerStackingNode"* %0, i64 0, i32 4
  %377 = bitcast %"class.blink::PaintLayer"** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %377) #9
  store %"class.blink::PaintLayer"* %1, %"class.blink::PaintLayer"** %9, align 8
  %378 = getelementptr inbounds %"class.blink::PaintLayerStackingNode", %"class.blink::PaintLayerStackingNode"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %379 = load i32, i32* %378, align 4
  %380 = getelementptr inbounds %"class.blink::PaintLayerStackingNode", %"class.blink::PaintLayerStackingNode"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %381 = load i32, i32* %380, align 8
  %382 = icmp eq i32 %379, %381
  br i1 %382, label %391, label %383, !prof !3

383:                                              ; preds = %375
  %384 = getelementptr inbounds %"class.WTF::Vector.2036", %"class.WTF::Vector.2036"* %376, i64 0, i32 0, i32 0, i32 0
  %385 = load %"class.blink::PaintLayer"**, %"class.blink::PaintLayer"*** %384, align 8
  %386 = zext i32 %379 to i64
  %387 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %385, i64 %386
  %388 = bitcast %"class.blink::PaintLayer"** %387 to i64*
  store i64 %354, i64* %388, align 8
  %389 = load i32, i32* %378, align 4
  %390 = add i32 %389, 1
  store i32 %390, i32* %378, align 4
  br label %392

391:                                              ; preds = %375
  call void @_ZN3WTF6VectorIPN5blink10PaintLayerELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.2036"* %376, %"class.blink::PaintLayer"** nonnull dereferenceable(8) %9) #9
  br label %392

392:                                              ; preds = %383, %391
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %377) #9
  %393 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %6, align 8
  %394 = icmp ne %"class.blink::PaintLayer"* %393, null
  %395 = zext i1 %394 to i48
  %396 = shl nuw nsw i48 %395, 35
  br label %397

397:                                              ; preds = %251, %262, %392
  %398 = phi i48 [ 0, %262 ], [ %396, %392 ], [ 0, %251 ]
  %399 = load i48, i48* %11, align 1
  %400 = and i48 %399, -34359738369
  %401 = or i48 %398, %400
  store i48 %401, i48* %11, align 1
  br i1 %16, label %402, label %420

402:                                              ; preds = %397
  %403 = load i8, i8* %197, align 8, !range !6
  %404 = icmp eq i8 %403, 0
  br i1 %404, label %405, label %406, !prof !3

405:                                              ; preds = %402
  call void @llvm.trap() #9
  unreachable

406:                                              ; preds = %402
  %407 = load i32*, i32** %252, align 8
  %408 = load i32, i32* %254, align 4
  %409 = zext i32 %408 to i64
  %410 = getelementptr inbounds i32, i32* %407, i64 %409
  %411 = icmp eq i32 %408, 0
  br i1 %411, label %420, label %412

412:                                              ; preds = %406, %412
  %413 = phi i32* [ %418, %412 ], [ %407, %406 ]
  %414 = load i32, i32* %413, align 4
  %415 = zext i32 %414 to i64
  %416 = getelementptr inbounds %"class.absl::optional.2288", %"class.absl::optional.2288"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i64 %415
  %417 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %416, align 8
  call void @_ZN5blink22PaintLayerStackingNode13HighestLayers34UpdateOrderForSubtreeHighestLayersENS1_9LayerTypeEPKNS_10PaintLayerE(%"struct.blink::PaintLayerStackingNode::HighestLayers"* nonnull %2, i32 %414, %"class.blink::PaintLayer"* %417) #9
  %418 = getelementptr inbounds i32, i32* %413, i64 1
  %419 = icmp eq i32* %418, %410
  br i1 %419, label %420, label %412

420:                                              ; preds = %412, %406, %397
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %247) #9
  br label %421

421:                                              ; preds = %420, %237
  %422 = load i8, i8* %197, align 8, !range !6
  %423 = icmp eq i8 %422, 0
  br i1 %423, label %439, label %424

424:                                              ; preds = %421
  %425 = getelementptr inbounds %"class.absl::optional.2288", %"class.absl::optional.2288"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %426 = getelementptr inbounds %"class.absl::optional.2288", %"class.absl::optional.2288"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 2
  %427 = load i32, i32* %426, align 4
  %428 = icmp eq i32 %427, 0
  br i1 %428, label %430, label %429, !prof !3

429:                                              ; preds = %424
  store i32 0, i32* %426, align 4
  br label %430

430:                                              ; preds = %429, %424
  %431 = getelementptr inbounds %"class.WTF::Vector.2281", %"class.WTF::Vector.2281"* %425, i64 0, i32 0, i32 0, i32 0
  %432 = load i32*, i32** %431, align 8
  %433 = getelementptr inbounds %"class.absl::optional.2288", %"class.absl::optional.2288"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i64 0
  %434 = bitcast i8* %433 to i32*
  %435 = icmp eq i32* %432, %434
  br i1 %435, label %438, label %436, !prof !2

436:                                              ; preds = %430
  %437 = bitcast %"class.WTF::Vector.2281"* %425 to %"class.WTF::VectorBuffer.2282"*
  call void @_ZN3WTF12VectorBufferIN5blink22PaintLayerStackingNode13HighestLayers9LayerTypeELj3ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.2282"* %437, i32* %432) #9
  br label %438

438:                                              ; preds = %436, %430
  store i32* null, i32** %431, align 8
  store i8 0, i8* %197, align 8
  br label %439

439:                                              ; preds = %421, %438
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %197) #9
  br label %440

440:                                              ; preds = %185, %134, %439, %190, %3
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal zeroext i1 @_ZN5blinkL14ZIndexLessThanEPKNS_10PaintLayerES2_(%"class.blink::PaintLayer"* nocapture readonly, %"class.blink::PaintLayer"* nocapture readonly) #3 {
  %3 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %0, i64 0, i32 2
  %4 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %4, i64 0, i32 0, i32 5, i32 0
  %6 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %6, i64 0, i32 0, i32 3, i32 0, i32 0
  %8 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %8, i64 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %10, i64 0, i32 39
  %12 = load i32, i32* %11, align 4
  %13 = and i32 %12, 65536
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %20

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %6, i64 0, i32 0, i32 5, i32 0, i32 0
  %17 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %17, i64 0, i32 10
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %2, %15
  %21 = phi i32 [ %19, %15 ], [ 0, %2 ]
  %22 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %1, i64 0, i32 2
  %23 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %23, i64 0, i32 0, i32 5, i32 0
  %25 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %25, i64 0, i32 0, i32 3, i32 0, i32 0
  %27 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %27, i64 0, i32 3, i32 0, i32 0
  %29 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %29, i64 0, i32 39
  %31 = load i32, i32* %30, align 4
  %32 = and i32 %31, 65536
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %39

34:                                               ; preds = %20
  %35 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %25, i64 0, i32 0, i32 5, i32 0, i32 0
  %36 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %36, i64 0, i32 10
  %38 = load i32, i32* %37, align 4
  br label %39

39:                                               ; preds = %20, %34
  %40 = phi i32 [ %38, %34 ], [ 0, %20 ]
  %41 = icmp slt i32 %21, %40
  ret i1 %41
}

declare zeroext i1 @_ZNK5blink10PaintLayer12IsInTopLayerEv(%"class.blink::PaintLayer"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22PaintLayerStackingNode13HighestLayers6UpdateERKNS_10PaintLayerE(%"struct.blink::PaintLayerStackingNode::HighestLayers"*, %"class.blink::PaintLayer"* dereferenceable(152)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %1, i64 0, i32 2
  %4 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %4, i64 0, i32 0
  %6 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %4, i64 0, i32 0, i32 5, i32 0
  %7 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %7, i64 0, i32 0, i32 9
  %9 = bitcast [20 x i8]* %8 to i160*
  %10 = load i160, i160* %9, align 8
  %11 = lshr i160 %10, 80
  %12 = trunc i160 %11 to i32
  %13 = and i32 %12, 7
  %14 = icmp eq i32 %13, 4
  %15 = and i160 %10, 128849018880
  %16 = icmp eq i160 %15, 42949672960
  %17 = and i1 %16, %14
  %18 = icmp eq i32 %13, 3
  %19 = or i1 %18, %17
  br i1 %19, label %20, label %81

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %7, i64 0, i32 0, i32 3, i32 0, i32 0
  %22 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %22, i64 0, i32 3, i32 0, i32 0
  %24 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %24, i64 0, i32 39
  %26 = load i32, i32* %25, align 4
  %27 = and i32 %26, 67108864
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %81

29:                                               ; preds = %20
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %22, i64 0, i32 2, i32 0, i32 0
  %31 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %31, i64 0, i32 2, i32 0, i32 0
  %33 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %33, i64 0, i32 45
  %35 = load i32, i32* %34, align 4
  %36 = and i32 %35, 5
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %109, label %38

38:                                               ; preds = %29
  %39 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %4, i64 0, i32 0, i32 4
  %40 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %39 to i96*
  %41 = load i96, i96* %40, align 4
  %42 = and i96 %41, 1207959552
  %43 = icmp eq i96 %42, 134217728
  br i1 %43, label %109, label %44

44:                                               ; preds = %38
  %45 = bitcast %"class.blink::LayoutBoxModelObject"* %4 to i1 (%"class.blink::LayoutObject"*, i32)***
  %46 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %45, align 8
  %47 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %46, i64 92
  %48 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %47, align 8
  %49 = tail call zeroext i1 %48(%"class.blink::LayoutObject"* %5, i32 43) #9
  br i1 %49, label %109, label %50

50:                                               ; preds = %44
  %51 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %45, align 8
  %52 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %51, i64 92
  %53 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %52, align 8
  %54 = tail call zeroext i1 %53(%"class.blink::LayoutObject"* %5, i32 46) #9
  br i1 %54, label %75, label %55

55:                                               ; preds = %50
  %56 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %45, align 8
  %57 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %56, i64 92
  %58 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %57, align 8
  %59 = tail call zeroext i1 %58(%"class.blink::LayoutObject"* %5, i32 48) #9
  br i1 %59, label %75, label %60

60:                                               ; preds = %55
  %61 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %45, align 8
  %62 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %61, i64 92
  %63 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %62, align 8
  %64 = tail call zeroext i1 %63(%"class.blink::LayoutObject"* %5, i32 45) #9
  br i1 %64, label %75, label %65

65:                                               ; preds = %60
  %66 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %45, align 8
  %67 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %66, i64 92
  %68 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %67, align 8
  %69 = tail call zeroext i1 %68(%"class.blink::LayoutObject"* %5, i32 49) #9
  br i1 %69, label %75, label %70

70:                                               ; preds = %65
  %71 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %45, align 8
  %72 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %71, i64 92
  %73 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %72, align 8
  %74 = tail call zeroext i1 %73(%"class.blink::LayoutObject"* %5, i32 50) #9
  br i1 %74, label %75, label %81

75:                                               ; preds = %50, %55, %60, %65, %70
  %76 = bitcast %"class.blink::LayoutBoxModelObject"* %4 to i1 (%"class.blink::LayoutObject"*)***
  %77 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %76, align 8
  %78 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %77, i64 24
  %79 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %78, align 8
  %80 = tail call zeroext i1 %79(%"class.blink::LayoutObject"* %5) #9
  br i1 %80, label %81, label %109

81:                                               ; preds = %70, %20, %2, %75
  %82 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %7, i64 0, i32 0, i32 3, i32 0, i32 0
  %83 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %82, align 8
  %84 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %83, i64 0, i32 3, i32 0, i32 0
  %85 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %84, align 8
  %86 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %85, i64 0, i32 39
  %87 = load i32, i32* %86, align 4
  %88 = and i32 %87, 65536
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %96

90:                                               ; preds = %81
  %91 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %7, i64 0, i32 0, i32 5, i32 0, i32 0
  %92 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %91, align 8
  %93 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %92, i64 0, i32 10
  %94 = load i32, i32* %93, align 4
  %95 = icmp slt i32 %94, 0
  br i1 %95, label %109, label %96

96:                                               ; preds = %81, %90
  %97 = load i160, i160* %9, align 8
  %98 = lshr i160 %97, 80
  %99 = trunc i160 %98 to i32
  %100 = and i32 %99, 7
  %101 = icmp eq i32 %100, 4
  %102 = and i160 %97, 128849018880
  %103 = icmp eq i160 %102, 42949672960
  %104 = and i1 %103, %101
  %105 = select i1 %104, i32 3, i32 %100
  switch i32 %105, label %108 [
    i32 0, label %106
    i32 1, label %107
  ]

106:                                              ; preds = %96
  tail call void @_ZN5blink22PaintLayerStackingNode13HighestLayers34UpdateOrderForSubtreeHighestLayersENS1_9LayerTypeEPKNS_10PaintLayerE(%"struct.blink::PaintLayerStackingNode::HighestLayers"* %0, i32 0, %"class.blink::PaintLayer"* %1)
  br label %109

107:                                              ; preds = %96
  tail call void @_ZN5blink22PaintLayerStackingNode13HighestLayers34UpdateOrderForSubtreeHighestLayersENS1_9LayerTypeEPKNS_10PaintLayerE(%"struct.blink::PaintLayerStackingNode::HighestLayers"* %0, i32 1, %"class.blink::PaintLayer"* %1)
  br label %109

108:                                              ; preds = %96
  tail call void @_ZN5blink22PaintLayerStackingNode13HighestLayers34UpdateOrderForSubtreeHighestLayersENS1_9LayerTypeEPKNS_10PaintLayerE(%"struct.blink::PaintLayerStackingNode::HighestLayers"* %0, i32 2, %"class.blink::PaintLayer"* %1)
  br label %109

109:                                              ; preds = %38, %29, %44, %106, %108, %107, %75, %90
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare zeroext i1 @_ZNK5blink24PaintLayerScrollableArea26HasOverlayOverflowControlsEv(%"class.blink::PaintLayerScrollableArea"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink22PaintLayerStackingNode14StyleDidChangeERNS_10PaintLayerEPKNS_13ComputedStyleE(%"class.blink::PaintLayer"* dereferenceable(152), %"class.blink::ComputedStyle"* readonly) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.blink::ComputedStyle"* %1, null
  br i1 %3, label %157, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %0, i64 0, i32 2
  %6 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %6, i64 0, i32 0
  %8 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %9, i64 0, i32 3, i32 0, i32 0
  %11 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %11, i64 0, i32 39
  %13 = load i32, i32* %12, align 4
  %14 = and i32 %13, 67108864
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %68

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %9, i64 0, i32 2, i32 0, i32 0
  %18 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %18, i64 0, i32 2, i32 0, i32 0
  %20 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %20, i64 0, i32 45
  %22 = load i32, i32* %21, align 4
  %23 = and i32 %22, 5
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %68, label %25

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %6, i64 0, i32 0, i32 4
  %27 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %26 to i96*
  %28 = load i96, i96* %27, align 4
  %29 = and i96 %28, 1207959552
  %30 = icmp eq i96 %29, 134217728
  br i1 %30, label %68, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.blink::LayoutBoxModelObject"* %6 to i1 (%"class.blink::LayoutObject"*, i32)***
  %33 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %32, align 8
  %34 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %33, i64 92
  %35 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %34, align 8
  %36 = tail call zeroext i1 %35(%"class.blink::LayoutObject"* %7, i32 43) #9
  br i1 %36, label %68, label %37

37:                                               ; preds = %31
  %38 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %32, align 8
  %39 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %38, i64 92
  %40 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %39, align 8
  %41 = tail call zeroext i1 %40(%"class.blink::LayoutObject"* %7, i32 46) #9
  br i1 %41, label %62, label %42

42:                                               ; preds = %37
  %43 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %32, align 8
  %44 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %43, i64 92
  %45 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %44, align 8
  %46 = tail call zeroext i1 %45(%"class.blink::LayoutObject"* %7, i32 48) #9
  br i1 %46, label %62, label %47

47:                                               ; preds = %42
  %48 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %32, align 8
  %49 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %48, i64 92
  %50 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %49, align 8
  %51 = tail call zeroext i1 %50(%"class.blink::LayoutObject"* %7, i32 45) #9
  br i1 %51, label %62, label %52

52:                                               ; preds = %47
  %53 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %32, align 8
  %54 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %53, i64 92
  %55 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %54, align 8
  %56 = tail call zeroext i1 %55(%"class.blink::LayoutObject"* %7, i32 49) #9
  br i1 %56, label %62, label %57

57:                                               ; preds = %52
  %58 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %32, align 8
  %59 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %58, i64 92
  %60 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %59, align 8
  %61 = tail call zeroext i1 %60(%"class.blink::LayoutObject"* %7, i32 50) #9
  br i1 %61, label %62, label %68

62:                                               ; preds = %57, %52, %47, %42, %37
  %63 = bitcast %"class.blink::LayoutBoxModelObject"* %6 to i1 (%"class.blink::LayoutObject"*)***
  %64 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %63, align 8
  %65 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %64, i64 24
  %66 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %65, align 8
  %67 = tail call zeroext i1 %66(%"class.blink::LayoutObject"* %7) #9
  br label %68

68:                                               ; preds = %4, %16, %25, %31, %57, %62
  %69 = phi i1 [ true, %4 ], [ false, %31 ], [ true, %57 ], [ %67, %62 ], [ false, %16 ], [ false, %25 ]
  %70 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %8, align 8
  %71 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %70, i64 0, i32 3, i32 0, i32 0
  %72 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %71, align 8
  %73 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %72, i64 0, i32 39
  %74 = load i32, i32* %73, align 4
  %75 = and i32 %74, 65536
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %82

77:                                               ; preds = %68
  %78 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 5, i32 0, i32 0
  %79 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %78, align 8
  %80 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %79, i64 0, i32 10
  %81 = load i32, i32* %80, align 4
  br label %82

82:                                               ; preds = %68, %77
  %83 = phi i32 [ %81, %77 ], [ 0, %68 ]
  %84 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %5, align 8
  %85 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %84, i64 0, i32 0
  %86 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 9
  %87 = bitcast [20 x i8]* %86 to i160*
  %88 = load i160, i160* %87, align 8
  %89 = lshr i160 %88, 80
  %90 = trunc i160 %89 to i32
  %91 = and i32 %90, 7
  %92 = icmp eq i32 %91, 4
  %93 = and i160 %88, 128849018880
  %94 = icmp eq i160 %93, 42949672960
  %95 = and i1 %94, %92
  %96 = icmp eq i32 %91, 3
  %97 = or i1 %96, %95
  %98 = and i32 %74, 67108864
  %99 = icmp eq i32 %98, 0
  %100 = and i1 %99, %97
  br i1 %100, label %101, label %153

101:                                              ; preds = %82
  %102 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %70, i64 0, i32 2, i32 0, i32 0
  %103 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %102, align 8
  %104 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %103, i64 0, i32 2, i32 0, i32 0
  %105 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %104, align 8
  %106 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %105, i64 0, i32 45
  %107 = load i32, i32* %106, align 4
  %108 = and i32 %107, 5
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %153, label %110

110:                                              ; preds = %101
  %111 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %84, i64 0, i32 0, i32 4
  %112 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %111 to i96*
  %113 = load i96, i96* %112, align 4
  %114 = and i96 %113, 1207959552
  %115 = icmp eq i96 %114, 134217728
  br i1 %115, label %153, label %116

116:                                              ; preds = %110
  %117 = bitcast %"class.blink::LayoutBoxModelObject"* %84 to i1 (%"class.blink::LayoutObject"*, i32)***
  %118 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %117, align 8
  %119 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %118, i64 92
  %120 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %119, align 8
  %121 = tail call zeroext i1 %120(%"class.blink::LayoutObject"* %85, i32 43) #9
  br i1 %121, label %153, label %122

122:                                              ; preds = %116
  %123 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %117, align 8
  %124 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %123, i64 92
  %125 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %124, align 8
  %126 = tail call zeroext i1 %125(%"class.blink::LayoutObject"* %85, i32 46) #9
  br i1 %126, label %147, label %127

127:                                              ; preds = %122
  %128 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %117, align 8
  %129 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %128, i64 92
  %130 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %129, align 8
  %131 = tail call zeroext i1 %130(%"class.blink::LayoutObject"* %85, i32 48) #9
  br i1 %131, label %147, label %132

132:                                              ; preds = %127
  %133 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %117, align 8
  %134 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %133, i64 92
  %135 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %134, align 8
  %136 = tail call zeroext i1 %135(%"class.blink::LayoutObject"* %85, i32 45) #9
  br i1 %136, label %147, label %137

137:                                              ; preds = %132
  %138 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %117, align 8
  %139 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %138, i64 92
  %140 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %139, align 8
  %141 = tail call zeroext i1 %140(%"class.blink::LayoutObject"* %85, i32 49) #9
  br i1 %141, label %147, label %142

142:                                              ; preds = %137
  %143 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %117, align 8
  %144 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %143, i64 92
  %145 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %144, align 8
  %146 = tail call zeroext i1 %145(%"class.blink::LayoutObject"* %85, i32 50) #9
  br i1 %146, label %147, label %153

147:                                              ; preds = %142, %137, %132, %127, %122
  %148 = bitcast %"class.blink::LayoutBoxModelObject"* %84 to i1 (%"class.blink::LayoutObject"*)***
  %149 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %148, align 8
  %150 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %149, i64 24
  %151 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %150, align 8
  %152 = tail call zeroext i1 %151(%"class.blink::LayoutObject"* %85) #9
  br label %153

153:                                              ; preds = %82, %101, %110, %116, %142, %147
  %154 = phi i1 [ true, %82 ], [ false, %116 ], [ true, %142 ], [ %152, %147 ], [ false, %101 ], [ false, %110 ]
  %155 = zext i1 %69 to i32
  %156 = zext i1 %154 to i32
  br label %157

157:                                              ; preds = %2, %153
  %158 = phi i32 [ %155, %153 ], [ 0, %2 ]
  %159 = phi i32 [ %156, %153 ], [ 0, %2 ]
  %160 = phi i32 [ %83, %153 ], [ 0, %2 ]
  %161 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %0, i64 0, i32 2
  %162 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %161, align 8
  %163 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %162, i64 0, i32 0
  %164 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %162, i64 0, i32 0, i32 5, i32 0
  %165 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %164, align 8
  %166 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %165, i64 0, i32 0, i32 3, i32 0, i32 0
  %167 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %166, align 8
  %168 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %167, i64 0, i32 3, i32 0, i32 0
  %169 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %168, align 8
  %170 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %169, i64 0, i32 39
  %171 = load i32, i32* %170, align 4
  %172 = and i32 %171, 67108864
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %227

174:                                              ; preds = %157
  %175 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %167, i64 0, i32 2, i32 0, i32 0
  %176 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %175, align 8
  %177 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %176, i64 0, i32 2, i32 0, i32 0
  %178 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %177, align 8
  %179 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %178, i64 0, i32 45
  %180 = load i32, i32* %179, align 4
  %181 = and i32 %180, 5
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %227, label %183

183:                                              ; preds = %174
  %184 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %162, i64 0, i32 0, i32 4
  %185 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %184 to i96*
  %186 = load i96, i96* %185, align 4
  %187 = and i96 %186, 1207959552
  %188 = icmp eq i96 %187, 134217728
  br i1 %188, label %227, label %189

189:                                              ; preds = %183
  %190 = bitcast %"class.blink::LayoutBoxModelObject"* %162 to i1 (%"class.blink::LayoutObject"*, i32)***
  %191 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %190, align 8
  %192 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %191, i64 92
  %193 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %192, align 8
  %194 = tail call zeroext i1 %193(%"class.blink::LayoutObject"* %163, i32 43) #9
  br i1 %194, label %227, label %195

195:                                              ; preds = %189
  %196 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %190, align 8
  %197 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %196, i64 92
  %198 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %197, align 8
  %199 = tail call zeroext i1 %198(%"class.blink::LayoutObject"* %163, i32 46) #9
  br i1 %199, label %220, label %200

200:                                              ; preds = %195
  %201 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %190, align 8
  %202 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %201, i64 92
  %203 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %202, align 8
  %204 = tail call zeroext i1 %203(%"class.blink::LayoutObject"* %163, i32 48) #9
  br i1 %204, label %220, label %205

205:                                              ; preds = %200
  %206 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %190, align 8
  %207 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %206, i64 92
  %208 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %207, align 8
  %209 = tail call zeroext i1 %208(%"class.blink::LayoutObject"* %163, i32 45) #9
  br i1 %209, label %220, label %210

210:                                              ; preds = %205
  %211 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %190, align 8
  %212 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %211, i64 92
  %213 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %212, align 8
  %214 = tail call zeroext i1 %213(%"class.blink::LayoutObject"* %163, i32 49) #9
  br i1 %214, label %220, label %215

215:                                              ; preds = %210
  %216 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %190, align 8
  %217 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %216, i64 92
  %218 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %217, align 8
  %219 = tail call zeroext i1 %218(%"class.blink::LayoutObject"* %163, i32 50) #9
  br i1 %219, label %220, label %227

220:                                              ; preds = %215, %210, %205, %200, %195
  %221 = bitcast %"class.blink::LayoutBoxModelObject"* %162 to i1 (%"class.blink::LayoutObject"*)***
  %222 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %221, align 8
  %223 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %222, i64 24
  %224 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %223, align 8
  %225 = tail call zeroext i1 %224(%"class.blink::LayoutObject"* %163) #9
  %226 = zext i1 %225 to i32
  br label %227

227:                                              ; preds = %157, %174, %183, %189, %215, %220
  %228 = phi i32 [ 1, %157 ], [ 0, %189 ], [ 1, %215 ], [ %226, %220 ], [ 0, %174 ], [ 0, %183 ]
  %229 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %161, align 8
  %230 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %229, i64 0, i32 0
  %231 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %229, i64 0, i32 0, i32 5, i32 0
  %232 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %231, align 8
  %233 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %232, i64 0, i32 0, i32 9
  %234 = bitcast [20 x i8]* %233 to i160*
  %235 = load i160, i160* %234, align 8
  %236 = lshr i160 %235, 80
  %237 = trunc i160 %236 to i32
  %238 = and i32 %237, 7
  %239 = icmp eq i32 %238, 4
  %240 = and i160 %235, 128849018880
  %241 = icmp eq i160 %240, 42949672960
  %242 = and i1 %241, %239
  %243 = icmp eq i32 %238, 3
  %244 = or i1 %243, %242
  br i1 %244, label %245, label %307

245:                                              ; preds = %227
  %246 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %232, i64 0, i32 0, i32 3, i32 0, i32 0
  %247 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %246, align 8
  %248 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %247, i64 0, i32 3, i32 0, i32 0
  %249 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %248, align 8
  %250 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %249, i64 0, i32 39
  %251 = load i32, i32* %250, align 4
  %252 = and i32 %251, 67108864
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %254, label %307

254:                                              ; preds = %245
  %255 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %247, i64 0, i32 2, i32 0, i32 0
  %256 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %255, align 8
  %257 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %256, i64 0, i32 2, i32 0, i32 0
  %258 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %257, align 8
  %259 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %258, i64 0, i32 45
  %260 = load i32, i32* %259, align 4
  %261 = and i32 %260, 5
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %307, label %263

263:                                              ; preds = %254
  %264 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %229, i64 0, i32 0, i32 4
  %265 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %264 to i96*
  %266 = load i96, i96* %265, align 4
  %267 = and i96 %266, 1207959552
  %268 = icmp eq i96 %267, 134217728
  br i1 %268, label %307, label %269

269:                                              ; preds = %263
  %270 = bitcast %"class.blink::LayoutBoxModelObject"* %229 to i1 (%"class.blink::LayoutObject"*, i32)***
  %271 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %270, align 8
  %272 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %271, i64 92
  %273 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %272, align 8
  %274 = tail call zeroext i1 %273(%"class.blink::LayoutObject"* %230, i32 43) #9
  br i1 %274, label %307, label %275

275:                                              ; preds = %269
  %276 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %270, align 8
  %277 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %276, i64 92
  %278 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %277, align 8
  %279 = tail call zeroext i1 %278(%"class.blink::LayoutObject"* %230, i32 46) #9
  br i1 %279, label %300, label %280

280:                                              ; preds = %275
  %281 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %270, align 8
  %282 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %281, i64 92
  %283 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %282, align 8
  %284 = tail call zeroext i1 %283(%"class.blink::LayoutObject"* %230, i32 48) #9
  br i1 %284, label %300, label %285

285:                                              ; preds = %280
  %286 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %270, align 8
  %287 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %286, i64 92
  %288 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %287, align 8
  %289 = tail call zeroext i1 %288(%"class.blink::LayoutObject"* %230, i32 45) #9
  br i1 %289, label %300, label %290

290:                                              ; preds = %285
  %291 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %270, align 8
  %292 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %291, i64 92
  %293 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %292, align 8
  %294 = tail call zeroext i1 %293(%"class.blink::LayoutObject"* %230, i32 49) #9
  br i1 %294, label %300, label %295

295:                                              ; preds = %290
  %296 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %270, align 8
  %297 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %296, i64 92
  %298 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %297, align 8
  %299 = tail call zeroext i1 %298(%"class.blink::LayoutObject"* %230, i32 50) #9
  br i1 %299, label %300, label %307

300:                                              ; preds = %295, %290, %285, %280, %275
  %301 = bitcast %"class.blink::LayoutBoxModelObject"* %229 to i1 (%"class.blink::LayoutObject"*)***
  %302 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %301, align 8
  %303 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %302, i64 24
  %304 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %303, align 8
  %305 = tail call zeroext i1 %304(%"class.blink::LayoutObject"* %230) #9
  %306 = zext i1 %305 to i32
  br label %307

307:                                              ; preds = %227, %245, %254, %263, %269, %295, %300
  %308 = phi i32 [ 1, %227 ], [ 1, %245 ], [ 0, %269 ], [ 1, %295 ], [ %306, %300 ], [ 0, %254 ], [ 0, %263 ]
  %309 = icmp eq i32 %158, %228
  %310 = icmp eq i32 %159, %308
  %311 = and i1 %309, %310
  br i1 %311, label %312, label %328

312:                                              ; preds = %307
  %313 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %166, align 8
  %314 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %313, i64 0, i32 3, i32 0, i32 0
  %315 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %314, align 8
  %316 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %315, i64 0, i32 39
  %317 = load i32, i32* %316, align 4
  %318 = and i32 %317, 65536
  %319 = icmp eq i32 %318, 0
  br i1 %319, label %320, label %325

320:                                              ; preds = %312
  %321 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %165, i64 0, i32 0, i32 5, i32 0, i32 0
  %322 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %321, align 8
  %323 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %322, i64 0, i32 10
  %324 = load i32, i32* %323, align 4
  br label %325

325:                                              ; preds = %312, %320
  %326 = phi i32 [ %324, %320 ], [ 0, %312 ]
  %327 = icmp eq i32 %160, %326
  br i1 %327, label %368, label %328

328:                                              ; preds = %325, %307
  tail call void @_ZN5blink10PaintLayer37SetNeedsCompositingRequirementsUpdateEv(%"class.blink::PaintLayer"* %0) #9
  tail call void @_ZN5blink10PaintLayer31DirtyStackingContextZOrderListsEv(%"class.blink::PaintLayer"* %0) #9
  %329 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %330 = load %"class.blink::PaintLayerStackingNode"*, %"class.blink::PaintLayerStackingNode"** %329, align 8
  %331 = icmp eq %"class.blink::PaintLayerStackingNode"* %330, null
  br i1 %331, label %333, label %332

332:                                              ; preds = %328
  tail call void @_ZN5blink22PaintLayerStackingNode16DirtyZOrderListsEv(%"class.blink::PaintLayerStackingNode"* nonnull %330)
  br label %333

333:                                              ; preds = %328, %332
  br i1 %310, label %368, label %334

334:                                              ; preds = %333
  %335 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %161, align 8
  %336 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %335, i64 0, i32 0, i32 6, i32 0, i32 0
  %337 = load %"class.blink::Node"*, %"class.blink::Node"** %336, align 8
  %338 = icmp eq %"class.blink::Node"* %337, null
  br i1 %338, label %339, label %348

339:                                              ; preds = %334
  %340 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %335, i64 0, i32 0
  br label %341

341:                                              ; preds = %339, %341
  %342 = phi %"class.blink::LayoutObject"* [ %344, %341 ], [ %340, %339 ]
  %343 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %342, i64 0, i32 7
  %344 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %343, align 8
  %345 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %344, i64 0, i32 6, i32 0, i32 0
  %346 = load %"class.blink::Node"*, %"class.blink::Node"** %345, align 8
  %347 = icmp eq %"class.blink::Node"* %346, null
  br i1 %347, label %341, label %348

348:                                              ; preds = %341, %334
  %349 = phi %"class.blink::Node"* [ %337, %334 ], [ %346, %341 ]
  %350 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %349, i64 0, i32 3, i32 0, i32 0
  %351 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %350, align 8
  %352 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %351, i64 0, i32 2, i32 0, i32 0
  %353 = load %"class.blink::Document"*, %"class.blink::Document"** %352, align 8
  %354 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %353, i64 0, i32 5, i32 0
  %355 = load i32, i32* %354, align 4
  %356 = icmp sgt i32 %355, 19
  br i1 %356, label %368, label %357

357:                                              ; preds = %348
  %358 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %0, i64 0, i32 1
  %359 = bitcast [6 x i8]* %358 to i48*
  %360 = load i48, i48* %359, align 1
  %361 = and i48 %360, 2
  %362 = icmp eq i48 %361, 0
  br i1 %362, label %363, label %368

363:                                              ; preds = %357
  %364 = tail call %"class.blink::PaintLayerCompositor"* @_ZNK5blink10PaintLayer10CompositorEv(%"class.blink::PaintLayer"* %0) #9
  %365 = icmp eq %"class.blink::PaintLayerCompositor"* %364, null
  br i1 %365, label %368, label %366

366:                                              ; preds = %363
  %367 = tail call %"class.blink::PaintLayerCompositor"* @_ZNK5blink10PaintLayer10CompositorEv(%"class.blink::PaintLayer"* %0) #9
  tail call void @_ZN5blink20PaintLayerCompositor25SetNeedsCompositingUpdateENS_21CompositingUpdateTypeE(%"class.blink::PaintLayerCompositor"* %367, i32 3) #9
  br label %368

368:                                              ; preds = %357, %366, %348, %333, %363, %325
  %369 = phi i1 [ false, %325 ], [ true, %363 ], [ true, %333 ], [ true, %348 ], [ true, %357 ], [ true, %366 ]
  ret i1 %369
}

declare void @_ZN5blink10PaintLayer37SetNeedsCompositingRequirementsUpdateEv(%"class.blink::PaintLayer"*) local_unnamed_addr #1

declare void @_ZN5blink10PaintLayer31DirtyStackingContextZOrderListsEv(%"class.blink::PaintLayer"*) local_unnamed_addr #1

declare %"class.blink::PaintLayerCompositor"* @_ZNK5blink10PaintLayer10CompositorEv(%"class.blink::PaintLayer"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22PaintLayerStackingNode17UpdateZOrderListsEv(%"class.blink::PaintLayerStackingNode"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::PaintLayerStackingNode", %"class.blink::PaintLayerStackingNode"* %0, i64 0, i32 5
  %3 = load i8, i8* %2, align 8, !range !6
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZN5blink22PaintLayerStackingNode18RebuildZOrderListsEv(%"class.blink::PaintLayerStackingNode"* %0)
  br label %6

6:                                                ; preds = %1, %5
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element22HasElementFlagInternalENS_12ElementFlagsE(%"class.blink::Element"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22PaintLayerStackingNode13HighestLayers34UpdateOrderForSubtreeHighestLayersENS1_9LayerTypeEPKNS_10PaintLayerE(%"struct.blink::PaintLayerStackingNode::HighestLayers"*, i32, %"class.blink::PaintLayer"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca i32, align 4
  store i32 %1, i32* %4, align 4
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds %"struct.blink::PaintLayerStackingNode::HighestLayers", %"struct.blink::PaintLayerStackingNode::HighestLayers"* %0, i64 0, i32 0, i32 0, i64 %5
  %7 = icmp eq %"class.blink::PaintLayer"* %2, null
  br i1 %7, label %109, label %8

8:                                                ; preds = %3
  %9 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %6, align 8
  %10 = icmp eq %"class.blink::PaintLayer"* %9, null
  br i1 %10, label %51, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %2, i64 0, i32 2
  %13 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %13, i64 0, i32 0, i32 5, i32 0
  %15 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %15, i64 0, i32 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %17, i64 0, i32 3, i32 0, i32 0
  %19 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %19, i64 0, i32 39
  %21 = load i32, i32* %20, align 4
  %22 = and i32 %21, 65536
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %29

24:                                               ; preds = %11
  %25 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %15, i64 0, i32 0, i32 5, i32 0, i32 0
  %26 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %26, i64 0, i32 10
  %28 = load i32, i32* %27, align 4
  br label %29

29:                                               ; preds = %24, %11
  %30 = phi i32 [ %28, %24 ], [ 0, %11 ]
  %31 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %9, i64 0, i32 2
  %32 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %32, i64 0, i32 0, i32 5, i32 0
  %34 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %34, i64 0, i32 0, i32 3, i32 0, i32 0
  %36 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %36, i64 0, i32 3, i32 0, i32 0
  %38 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %38, i64 0, i32 39
  %40 = load i32, i32* %39, align 4
  %41 = and i32 %40, 65536
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %48

43:                                               ; preds = %29
  %44 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %34, i64 0, i32 0, i32 5, i32 0, i32 0
  %45 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %45, i64 0, i32 10
  %47 = load i32, i32* %46, align 4
  br label %48

48:                                               ; preds = %43, %29
  %49 = phi i32 [ %47, %43 ], [ 0, %29 ]
  %50 = icmp slt i32 %30, %49
  br i1 %50, label %109, label %51

51:                                               ; preds = %48, %8
  store %"class.blink::PaintLayer"* %2, %"class.blink::PaintLayer"** %6, align 8
  %52 = getelementptr inbounds %"struct.blink::PaintLayerStackingNode::HighestLayers", %"struct.blink::PaintLayerStackingNode::HighestLayers"* %0, i64 0, i32 1
  %53 = getelementptr inbounds %"class.WTF::Vector.2281", %"class.WTF::Vector.2281"* %52, i64 0, i32 0, i32 0, i32 0
  %54 = load i32*, i32** %53, align 8
  %55 = getelementptr inbounds %"struct.blink::PaintLayerStackingNode::HighestLayers", %"struct.blink::PaintLayerStackingNode::HighestLayers"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %56 = load i32, i32* %55, align 4
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds i32, i32* %54, i64 %57
  %59 = icmp eq i32 %56, 0
  br i1 %59, label %67, label %60

60:                                               ; preds = %51, %64
  %61 = phi i32* [ %65, %64 ], [ %54, %51 ]
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, %1
  br i1 %63, label %67, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds i32, i32* %61, i64 1
  %66 = icmp eq i32* %65, %58
  br i1 %66, label %91, label %60

67:                                               ; preds = %60, %51
  %68 = phi i32* [ %54, %51 ], [ %61, %60 ]
  %69 = icmp eq i32* %68, %58
  br i1 %69, label %91, label %70

70:                                               ; preds = %67
  %71 = getelementptr inbounds i32, i32* %68, i64 1
  %72 = icmp eq i32* %71, %58
  br i1 %72, label %91, label %73

73:                                               ; preds = %70, %85
  %74 = phi i32 [ %86, %85 ], [ %1, %70 ]
  %75 = phi i32* [ %83, %85 ], [ %71, %70 ]
  %76 = phi i32* [ %82, %85 ], [ %68, %70 ]
  %77 = load i32, i32* %75, align 4
  %78 = icmp eq i32 %77, %74
  br i1 %78, label %81, label %79

79:                                               ; preds = %73
  store i32 %77, i32* %76, align 4
  %80 = getelementptr inbounds i32, i32* %76, i64 1
  br label %81

81:                                               ; preds = %79, %73
  %82 = phi i32* [ %76, %73 ], [ %80, %79 ]
  %83 = getelementptr inbounds i32, i32* %75, i64 1
  %84 = icmp eq i32* %83, %58
  br i1 %84, label %87, label %85

85:                                               ; preds = %81
  %86 = load i32, i32* %4, align 4
  br label %73

87:                                               ; preds = %81
  %88 = load i32*, i32** %53, align 8
  %89 = load i32, i32* %55, align 4
  %90 = zext i32 %89 to i64
  br label %91

91:                                               ; preds = %64, %87, %67, %70
  %92 = phi i64 [ %90, %87 ], [ %57, %67 ], [ %57, %70 ], [ %57, %64 ]
  %93 = phi i32 [ %89, %87 ], [ %56, %67 ], [ %56, %70 ], [ %56, %64 ]
  %94 = phi i32* [ %88, %87 ], [ %54, %67 ], [ %54, %70 ], [ %54, %64 ]
  %95 = phi i32* [ %82, %87 ], [ %58, %67 ], [ %68, %70 ], [ %58, %64 ]
  %96 = getelementptr inbounds i32, i32* %94, i64 %92
  %97 = icmp eq i32* %95, %96
  br i1 %97, label %100, label %98

98:                                               ; preds = %91
  %99 = load i32, i32* %4, align 4
  store i32 %99, i32* %95, align 4
  br label %109

100:                                              ; preds = %91
  %101 = getelementptr inbounds %"struct.blink::PaintLayerStackingNode::HighestLayers", %"struct.blink::PaintLayerStackingNode::HighestLayers"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %102 = load i32, i32* %101, align 8
  %103 = icmp eq i32 %93, %102
  br i1 %103, label %108, label %104, !prof !3

104:                                              ; preds = %100
  %105 = load i32, i32* %4, align 4
  store i32 %105, i32* %95, align 4
  %106 = load i32, i32* %55, align 4
  %107 = add i32 %106, 1
  store i32 %107, i32* %55, align 4
  br label %109

108:                                              ; preds = %100
  call void @_ZN3WTF6VectorIN5blink22PaintLayerStackingNode13HighestLayers9LayerTypeELj3ENS_18PartitionAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.2281"* %52, i32* nonnull dereferenceable(4) %4) #9
  br label %109

109:                                              ; preds = %48, %3, %108, %104, %98
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink22PaintLayerStackingNode13HighestLayers9LayerTypeELj3ENS_18PartitionAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.2281"*, i32* dereferenceable(4)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2281", %"class.WTF::Vector.2281"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2281", %"class.WTF::Vector.2281"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = icmp ugt i32* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i32, i32* %7, i64 %10
  %12 = icmp ugt i32* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIN5blink22PaintLayerStackingNode13HighestLayers9LayerTypeELj3ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2281"* %0, i32 %5) #9
  %14 = load i32*, i32** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint i32* %1 to i64
  %17 = ptrtoint i32* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 2
  tail call void @_ZN3WTF6VectorIN5blink22PaintLayerStackingNode13HighestLayers9LayerTypeELj3ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2281"* %0, i32 %5) #9
  %20 = load i32*, i32** %6, align 8
  %21 = getelementptr inbounds i32, i32* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi i32* [ %14, %13 ], [ %20, %15 ]
  %24 = phi i32* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i32, i32* %23, i64 %26
  %28 = load i32, i32* %24, align 4
  store i32 %28, i32* %27, align 4
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink22PaintLayerStackingNode13HighestLayers9LayerTypeELj3ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2281"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.2281", %"class.WTF::Vector.2281"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #9
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0), i8* %15, i8* %16) #9
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #9
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !2

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.2281", %"class.WTF::Vector.2281"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i32*, i32** %31, align 8
  %33 = icmp eq i32* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 3
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink22PaintLayerStackingNode13HighestLayers9LayerTypeEEEmm(i64 %37) #9
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([103 x i8], [103 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink22PaintLayerStackingNode13HighestLayers9LayerTypeEEEPKcv, i64 0, i64 0)) #9
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.2281"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 2
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.2281", %"class.WTF::Vector.2281"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.2281"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 3, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIN5blink22PaintLayerStackingNode13HighestLayers9LayerTypeELj3ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2281"* %0, i32 %27) #9
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink22PaintLayerStackingNode13HighestLayers9LayerTypeELj3ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2281"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 4
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.2281", %"class.WTF::Vector.2281"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i32*, i32** %5, align 8
  %7 = icmp eq i32* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.2281", %"class.WTF::Vector.2281"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to i32*
  %10 = icmp eq i32* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.2281"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.2281", %"class.WTF::Vector.2281"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 3, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.2281", %"class.WTF::Vector.2281"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = bitcast %"class.WTF::Vector.2281"* %0 to %"class.WTF::VectorBuffer.2282"*
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.2281"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.2281", %"class.WTF::Vector.2281"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 3, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !3

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast i32* %6 to i8*
  %27 = shl nuw nsw i64 %25, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %8, i8* nonnull align 4 %26, i64 %27, i1 false) #9
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIN5blink22PaintLayerStackingNode13HighestLayers9LayerTypeELj3ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.2282"* %19, i32* nonnull %6) #9
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink22PaintLayerStackingNode13HighestLayers9LayerTypeEEEmm(i64 %30) #9
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([103 x i8], [103 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink22PaintLayerStackingNode13HighestLayers9LayerTypeEEEPKcv, i64 0, i64 0)) #9
  %33 = lshr i64 %31, 2
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.2281", %"class.WTF::Vector.2281"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i32*, i32** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne i32* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !2

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.2281", %"class.WTF::Vector.2281"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast i32* %36 to i8*
  %45 = shl nuw nsw i64 %43, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %32, i8* nonnull align 4 %44, i64 %45, i1 false) #9
  %46 = load i32*, i32** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi i32* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.2281", %"class.WTF::Vector.2281"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i32*
  %51 = icmp eq i32* %48, %50
  br i1 %51, label %54, label %52, !prof !2

52:                                               ; preds = %47
  %53 = bitcast %"class.WTF::Vector.2281"* %0 to %"class.WTF::VectorBuffer.2282"*
  tail call void @_ZN3WTF12VectorBufferIN5blink22PaintLayerStackingNode13HighestLayers9LayerTypeELj3ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.2282"* %53, i32* %48) #9
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.2281"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.2281", %"class.WTF::Vector.2281"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink22PaintLayerStackingNode13HighestLayers9LayerTypeEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.4, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink22PaintLayerStackingNode13HighestLayers9LayerTypeELj3ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.2282"*, i32*) local_unnamed_addr #4 comdat align 2 {
  %3 = bitcast i32* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink10PaintLayerEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.4, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__stable_sortIRPFbPKN5blink10PaintLayerES4_EPPS2_EEvT0_SA_T_NS_15iterator_traitsISA_E15difference_typeEPNSD_10value_typeEl(%"class.blink::PaintLayer"**, %"class.blink::PaintLayer"**, i1 (%"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*)** dereferenceable(8), i64, %"class.blink::PaintLayer"**, i64) local_unnamed_addr #0 comdat {
  switch i64 %3, label %18 [
    i64 0, label %433
    i64 1, label %433
    i64 2, label %7
  ]

7:                                                ; preds = %6
  %8 = load i1 (%"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*)*, i1 (%"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*)** %2, align 8
  %9 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %1, i64 -1
  %10 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %9, align 8
  %11 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %0, align 8
  %12 = tail call zeroext i1 %8(%"class.blink::PaintLayer"* %10, %"class.blink::PaintLayer"* %11) #9
  br i1 %12, label %13, label %433

13:                                               ; preds = %7
  %14 = bitcast %"class.blink::PaintLayer"** %0 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.blink::PaintLayer"** %9 to i64*
  %17 = load i64, i64* %16, align 8
  store i64 %17, i64* %14, align 8
  store i64 %15, i64* %16, align 8
  br label %433

18:                                               ; preds = %6
  %19 = icmp slt i64 %3, 129
  br i1 %19, label %20, label %48

20:                                               ; preds = %18
  %21 = icmp eq %"class.blink::PaintLayer"** %0, %1
  br i1 %21, label %433, label %22

22:                                               ; preds = %20
  %23 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %0, i64 1
  %24 = icmp eq %"class.blink::PaintLayer"** %23, %1
  br i1 %24, label %433, label %25

25:                                               ; preds = %22, %38
  %26 = phi %"class.blink::PaintLayer"** [ %41, %38 ], [ %23, %22 ]
  %27 = bitcast %"class.blink::PaintLayer"** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = icmp eq %"class.blink::PaintLayer"** %26, %0
  br i1 %29, label %38, label %30

30:                                               ; preds = %25
  %31 = inttoptr i64 %28 to %"class.blink::PaintLayer"*
  br label %32

32:                                               ; preds = %43, %30
  %33 = phi %"class.blink::PaintLayer"** [ %26, %30 ], [ %35, %43 ]
  %34 = load i1 (%"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*)*, i1 (%"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*)** %2, align 8
  %35 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %33, i64 -1
  %36 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %35, align 8
  %37 = tail call zeroext i1 %34(%"class.blink::PaintLayer"* %31, %"class.blink::PaintLayer"* %36) #9
  br i1 %37, label %43, label %38

38:                                               ; preds = %43, %32, %25
  %39 = phi %"class.blink::PaintLayer"** [ %0, %25 ], [ %33, %32 ], [ %0, %43 ]
  %40 = bitcast %"class.blink::PaintLayer"** %39 to i64*
  store i64 %28, i64* %40, align 8
  %41 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %26, i64 1
  %42 = icmp eq %"class.blink::PaintLayer"** %41, %1
  br i1 %42, label %433, label %25

43:                                               ; preds = %32
  %44 = bitcast %"class.blink::PaintLayer"** %35 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.blink::PaintLayer"** %33 to i64*
  store i64 %45, i64* %46, align 8
  %47 = icmp eq %"class.blink::PaintLayer"** %35, %0
  br i1 %47, label %38, label %32

48:                                               ; preds = %18
  %49 = lshr i64 %3, 1
  %50 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %0, i64 %49
  %51 = icmp sgt i64 %3, %5
  br i1 %51, label %431, label %52

52:                                               ; preds = %48
  tail call void @_ZNSt3__118__stable_sort_moveIRPFbPKN5blink10PaintLayerES4_EPPS2_EEvT0_SA_T_NS_15iterator_traitsISA_E15difference_typeEPNSD_10value_typeE(%"class.blink::PaintLayer"** %0, %"class.blink::PaintLayer"** %50, i1 (%"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*)** dereferenceable(8) %2, i64 %49, %"class.blink::PaintLayer"** %4)
  %53 = sub nsw i64 %3, %49
  %54 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %4, i64 %49
  tail call void @_ZNSt3__118__stable_sort_moveIRPFbPKN5blink10PaintLayerES4_EPPS2_EEvT0_SA_T_NS_15iterator_traitsISA_E15difference_typeEPNSD_10value_typeE(%"class.blink::PaintLayer"** %50, %"class.blink::PaintLayer"** %1, i1 (%"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*)** dereferenceable(8) %2, i64 %53, %"class.blink::PaintLayer"** %54)
  %55 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %4, i64 %3
  br label %187

56:                                               ; preds = %382
  %57 = ptrtoint %"class.blink::PaintLayer"** %383 to i64
  %58 = icmp eq %"class.blink::PaintLayer"** %383, %55
  br i1 %58, label %433, label %59

59:                                               ; preds = %56
  %60 = add i64 %3, -1
  %61 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %4, i64 %60
  %62 = ptrtoint %"class.blink::PaintLayer"** %61 to i64
  %63 = sub i64 %62, %57
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = icmp ult i64 %65, 4
  br i1 %66, label %67, label %94

67:                                               ; preds = %185, %94, %59
  %68 = phi %"class.blink::PaintLayer"** [ %385, %94 ], [ %385, %59 ], [ %108, %185 ]
  %69 = phi %"class.blink::PaintLayer"** [ %383, %94 ], [ %383, %59 ], [ %109, %185 ]
  %70 = ptrtoint %"class.blink::PaintLayer"** %69 to i64
  %71 = add i64 %3, -1
  %72 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %4, i64 %71
  %73 = ptrtoint %"class.blink::PaintLayer"** %72 to i64
  %74 = sub i64 %73, %70
  %75 = lshr i64 %74, 3
  %76 = add nuw nsw i64 %75, 1
  %77 = and i64 %76, 7
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %90, label %79

79:                                               ; preds = %67, %79
  %80 = phi %"class.blink::PaintLayer"** [ %87, %79 ], [ %68, %67 ]
  %81 = phi %"class.blink::PaintLayer"** [ %86, %79 ], [ %69, %67 ]
  %82 = phi i64 [ %88, %79 ], [ %77, %67 ]
  %83 = bitcast %"class.blink::PaintLayer"** %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = bitcast %"class.blink::PaintLayer"** %80 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %81, i64 1
  %87 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %80, i64 1
  %88 = add i64 %82, -1
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %79, !llvm.loop !7

90:                                               ; preds = %79, %67
  %91 = phi %"class.blink::PaintLayer"** [ %68, %67 ], [ %87, %79 ]
  %92 = phi %"class.blink::PaintLayer"** [ %69, %67 ], [ %86, %79 ]
  %93 = icmp ult i64 %74, 56
  br i1 %93, label %433, label %387

94:                                               ; preds = %59
  %95 = add i64 %3, -1
  %96 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %4, i64 %95
  %97 = ptrtoint %"class.blink::PaintLayer"** %96 to i64
  %98 = sub i64 %97, %57
  %99 = lshr i64 %98, 3
  %100 = add nuw nsw i64 %99, 1
  %101 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %385, i64 %100
  %102 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %383, i64 %100
  %103 = icmp ult %"class.blink::PaintLayer"** %385, %102
  %104 = icmp ult %"class.blink::PaintLayer"** %383, %101
  %105 = and i1 %103, %104
  br i1 %105, label %67, label %106

106:                                              ; preds = %94
  %107 = and i64 %65, 4611686018427387900
  %108 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %385, i64 %107
  %109 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %383, i64 %107
  %110 = add nsw i64 %107, -4
  %111 = lshr exact i64 %110, 2
  %112 = add nuw nsw i64 %111, 1
  %113 = and i64 %112, 3
  %114 = icmp ult i64 %110, 12
  br i1 %114, label %166, label %115

115:                                              ; preds = %106
  %116 = sub nsw i64 %112, %113
  br label %117

117:                                              ; preds = %117, %115
  %118 = phi i64 [ 0, %115 ], [ %163, %117 ]
  %119 = phi i64 [ %116, %115 ], [ %164, %117 ]
  %120 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %385, i64 %118
  %121 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %383, i64 %118
  %122 = bitcast %"class.blink::PaintLayer"** %121 to <2 x i64>*
  %123 = load <2 x i64>, <2 x i64>* %122, align 8, !alias.scope !8
  %124 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %121, i64 2
  %125 = bitcast %"class.blink::PaintLayer"** %124 to <2 x i64>*
  %126 = load <2 x i64>, <2 x i64>* %125, align 8, !alias.scope !8
  %127 = bitcast %"class.blink::PaintLayer"** %120 to <2 x i64>*
  store <2 x i64> %123, <2 x i64>* %127, align 8, !alias.scope !11, !noalias !8
  %128 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %120, i64 2
  %129 = bitcast %"class.blink::PaintLayer"** %128 to <2 x i64>*
  store <2 x i64> %126, <2 x i64>* %129, align 8, !alias.scope !11, !noalias !8
  %130 = or i64 %118, 4
  %131 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %385, i64 %130
  %132 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %383, i64 %130
  %133 = bitcast %"class.blink::PaintLayer"** %132 to <2 x i64>*
  %134 = load <2 x i64>, <2 x i64>* %133, align 8, !alias.scope !8
  %135 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %132, i64 2
  %136 = bitcast %"class.blink::PaintLayer"** %135 to <2 x i64>*
  %137 = load <2 x i64>, <2 x i64>* %136, align 8, !alias.scope !8
  %138 = bitcast %"class.blink::PaintLayer"** %131 to <2 x i64>*
  store <2 x i64> %134, <2 x i64>* %138, align 8, !alias.scope !11, !noalias !8
  %139 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %131, i64 2
  %140 = bitcast %"class.blink::PaintLayer"** %139 to <2 x i64>*
  store <2 x i64> %137, <2 x i64>* %140, align 8, !alias.scope !11, !noalias !8
  %141 = or i64 %118, 8
  %142 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %385, i64 %141
  %143 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %383, i64 %141
  %144 = bitcast %"class.blink::PaintLayer"** %143 to <2 x i64>*
  %145 = load <2 x i64>, <2 x i64>* %144, align 8, !alias.scope !8
  %146 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %143, i64 2
  %147 = bitcast %"class.blink::PaintLayer"** %146 to <2 x i64>*
  %148 = load <2 x i64>, <2 x i64>* %147, align 8, !alias.scope !8
  %149 = bitcast %"class.blink::PaintLayer"** %142 to <2 x i64>*
  store <2 x i64> %145, <2 x i64>* %149, align 8, !alias.scope !11, !noalias !8
  %150 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %142, i64 2
  %151 = bitcast %"class.blink::PaintLayer"** %150 to <2 x i64>*
  store <2 x i64> %148, <2 x i64>* %151, align 8, !alias.scope !11, !noalias !8
  %152 = or i64 %118, 12
  %153 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %385, i64 %152
  %154 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %383, i64 %152
  %155 = bitcast %"class.blink::PaintLayer"** %154 to <2 x i64>*
  %156 = load <2 x i64>, <2 x i64>* %155, align 8, !alias.scope !8
  %157 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %154, i64 2
  %158 = bitcast %"class.blink::PaintLayer"** %157 to <2 x i64>*
  %159 = load <2 x i64>, <2 x i64>* %158, align 8, !alias.scope !8
  %160 = bitcast %"class.blink::PaintLayer"** %153 to <2 x i64>*
  store <2 x i64> %156, <2 x i64>* %160, align 8, !alias.scope !11, !noalias !8
  %161 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %153, i64 2
  %162 = bitcast %"class.blink::PaintLayer"** %161 to <2 x i64>*
  store <2 x i64> %159, <2 x i64>* %162, align 8, !alias.scope !11, !noalias !8
  %163 = add i64 %118, 16
  %164 = add i64 %119, -4
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %166, label %117, !llvm.loop !13

166:                                              ; preds = %117, %106
  %167 = phi i64 [ 0, %106 ], [ %163, %117 ]
  %168 = icmp eq i64 %113, 0
  br i1 %168, label %185, label %169

169:                                              ; preds = %166, %169
  %170 = phi i64 [ %182, %169 ], [ %167, %166 ]
  %171 = phi i64 [ %183, %169 ], [ %113, %166 ]
  %172 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %385, i64 %170
  %173 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %383, i64 %170
  %174 = bitcast %"class.blink::PaintLayer"** %173 to <2 x i64>*
  %175 = load <2 x i64>, <2 x i64>* %174, align 8, !alias.scope !8
  %176 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %173, i64 2
  %177 = bitcast %"class.blink::PaintLayer"** %176 to <2 x i64>*
  %178 = load <2 x i64>, <2 x i64>* %177, align 8, !alias.scope !8
  %179 = bitcast %"class.blink::PaintLayer"** %172 to <2 x i64>*
  store <2 x i64> %175, <2 x i64>* %179, align 8, !alias.scope !11, !noalias !8
  %180 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %172, i64 2
  %181 = bitcast %"class.blink::PaintLayer"** %180 to <2 x i64>*
  store <2 x i64> %178, <2 x i64>* %181, align 8, !alias.scope !11, !noalias !8
  %182 = add i64 %170, 4
  %183 = add i64 %171, -1
  %184 = icmp eq i64 %183, 0
  br i1 %184, label %185, label %169, !llvm.loop !15

185:                                              ; preds = %169, %166
  %186 = icmp eq i64 %65, %107
  br i1 %186, label %433, label %67

187:                                              ; preds = %52, %382
  %188 = phi %"class.blink::PaintLayer"** [ %384, %382 ], [ %4, %52 ]
  %189 = phi %"class.blink::PaintLayer"** [ %385, %382 ], [ %0, %52 ]
  %190 = phi %"class.blink::PaintLayer"** [ %383, %382 ], [ %54, %52 ]
  %191 = icmp eq %"class.blink::PaintLayer"** %190, %55
  br i1 %191, label %192, label %367

192:                                              ; preds = %187
  %193 = ptrtoint %"class.blink::PaintLayer"** %188 to i64
  %194 = icmp eq %"class.blink::PaintLayer"** %188, %54
  br i1 %194, label %433, label %195

195:                                              ; preds = %192
  %196 = add nsw i64 %49, -1
  %197 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %4, i64 %196
  %198 = ptrtoint %"class.blink::PaintLayer"** %197 to i64
  %199 = sub i64 %198, %193
  %200 = lshr i64 %199, 3
  %201 = add nuw nsw i64 %200, 1
  %202 = icmp ult i64 %201, 4
  br i1 %202, label %296, label %203

203:                                              ; preds = %195
  %204 = add nsw i64 %49, -1
  %205 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %4, i64 %204
  %206 = ptrtoint %"class.blink::PaintLayer"** %205 to i64
  %207 = sub i64 %206, %193
  %208 = lshr i64 %207, 3
  %209 = add nuw nsw i64 %208, 1
  %210 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %189, i64 %209
  %211 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %188, i64 %209
  %212 = icmp ult %"class.blink::PaintLayer"** %189, %211
  %213 = icmp ult %"class.blink::PaintLayer"** %188, %210
  %214 = and i1 %212, %213
  br i1 %214, label %296, label %215

215:                                              ; preds = %203
  %216 = and i64 %201, 4611686018427387900
  %217 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %188, i64 %216
  %218 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %189, i64 %216
  %219 = add nsw i64 %216, -4
  %220 = lshr exact i64 %219, 2
  %221 = add nuw nsw i64 %220, 1
  %222 = and i64 %221, 3
  %223 = icmp ult i64 %219, 12
  br i1 %223, label %275, label %224

224:                                              ; preds = %215
  %225 = sub nsw i64 %221, %222
  br label %226

226:                                              ; preds = %226, %224
  %227 = phi i64 [ 0, %224 ], [ %272, %226 ]
  %228 = phi i64 [ %225, %224 ], [ %273, %226 ]
  %229 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %188, i64 %227
  %230 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %189, i64 %227
  %231 = bitcast %"class.blink::PaintLayer"** %229 to <2 x i64>*
  %232 = load <2 x i64>, <2 x i64>* %231, align 8, !alias.scope !16
  %233 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %229, i64 2
  %234 = bitcast %"class.blink::PaintLayer"** %233 to <2 x i64>*
  %235 = load <2 x i64>, <2 x i64>* %234, align 8, !alias.scope !16
  %236 = bitcast %"class.blink::PaintLayer"** %230 to <2 x i64>*
  store <2 x i64> %232, <2 x i64>* %236, align 8, !alias.scope !19, !noalias !16
  %237 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %230, i64 2
  %238 = bitcast %"class.blink::PaintLayer"** %237 to <2 x i64>*
  store <2 x i64> %235, <2 x i64>* %238, align 8, !alias.scope !19, !noalias !16
  %239 = or i64 %227, 4
  %240 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %188, i64 %239
  %241 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %189, i64 %239
  %242 = bitcast %"class.blink::PaintLayer"** %240 to <2 x i64>*
  %243 = load <2 x i64>, <2 x i64>* %242, align 8, !alias.scope !16
  %244 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %240, i64 2
  %245 = bitcast %"class.blink::PaintLayer"** %244 to <2 x i64>*
  %246 = load <2 x i64>, <2 x i64>* %245, align 8, !alias.scope !16
  %247 = bitcast %"class.blink::PaintLayer"** %241 to <2 x i64>*
  store <2 x i64> %243, <2 x i64>* %247, align 8, !alias.scope !19, !noalias !16
  %248 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %241, i64 2
  %249 = bitcast %"class.blink::PaintLayer"** %248 to <2 x i64>*
  store <2 x i64> %246, <2 x i64>* %249, align 8, !alias.scope !19, !noalias !16
  %250 = or i64 %227, 8
  %251 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %188, i64 %250
  %252 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %189, i64 %250
  %253 = bitcast %"class.blink::PaintLayer"** %251 to <2 x i64>*
  %254 = load <2 x i64>, <2 x i64>* %253, align 8, !alias.scope !16
  %255 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %251, i64 2
  %256 = bitcast %"class.blink::PaintLayer"** %255 to <2 x i64>*
  %257 = load <2 x i64>, <2 x i64>* %256, align 8, !alias.scope !16
  %258 = bitcast %"class.blink::PaintLayer"** %252 to <2 x i64>*
  store <2 x i64> %254, <2 x i64>* %258, align 8, !alias.scope !19, !noalias !16
  %259 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %252, i64 2
  %260 = bitcast %"class.blink::PaintLayer"** %259 to <2 x i64>*
  store <2 x i64> %257, <2 x i64>* %260, align 8, !alias.scope !19, !noalias !16
  %261 = or i64 %227, 12
  %262 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %188, i64 %261
  %263 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %189, i64 %261
  %264 = bitcast %"class.blink::PaintLayer"** %262 to <2 x i64>*
  %265 = load <2 x i64>, <2 x i64>* %264, align 8, !alias.scope !16
  %266 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %262, i64 2
  %267 = bitcast %"class.blink::PaintLayer"** %266 to <2 x i64>*
  %268 = load <2 x i64>, <2 x i64>* %267, align 8, !alias.scope !16
  %269 = bitcast %"class.blink::PaintLayer"** %263 to <2 x i64>*
  store <2 x i64> %265, <2 x i64>* %269, align 8, !alias.scope !19, !noalias !16
  %270 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %263, i64 2
  %271 = bitcast %"class.blink::PaintLayer"** %270 to <2 x i64>*
  store <2 x i64> %268, <2 x i64>* %271, align 8, !alias.scope !19, !noalias !16
  %272 = add i64 %227, 16
  %273 = add i64 %228, -4
  %274 = icmp eq i64 %273, 0
  br i1 %274, label %275, label %226, !llvm.loop !21

275:                                              ; preds = %226, %215
  %276 = phi i64 [ 0, %215 ], [ %272, %226 ]
  %277 = icmp eq i64 %222, 0
  br i1 %277, label %294, label %278

278:                                              ; preds = %275, %278
  %279 = phi i64 [ %291, %278 ], [ %276, %275 ]
  %280 = phi i64 [ %292, %278 ], [ %222, %275 ]
  %281 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %188, i64 %279
  %282 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %189, i64 %279
  %283 = bitcast %"class.blink::PaintLayer"** %281 to <2 x i64>*
  %284 = load <2 x i64>, <2 x i64>* %283, align 8, !alias.scope !16
  %285 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %281, i64 2
  %286 = bitcast %"class.blink::PaintLayer"** %285 to <2 x i64>*
  %287 = load <2 x i64>, <2 x i64>* %286, align 8, !alias.scope !16
  %288 = bitcast %"class.blink::PaintLayer"** %282 to <2 x i64>*
  store <2 x i64> %284, <2 x i64>* %288, align 8, !alias.scope !19, !noalias !16
  %289 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %282, i64 2
  %290 = bitcast %"class.blink::PaintLayer"** %289 to <2 x i64>*
  store <2 x i64> %287, <2 x i64>* %290, align 8, !alias.scope !19, !noalias !16
  %291 = add i64 %279, 4
  %292 = add i64 %280, -1
  %293 = icmp eq i64 %292, 0
  br i1 %293, label %294, label %278, !llvm.loop !22

294:                                              ; preds = %278, %275
  %295 = icmp eq i64 %201, %216
  br i1 %295, label %433, label %296

296:                                              ; preds = %294, %203, %195
  %297 = phi %"class.blink::PaintLayer"** [ %188, %203 ], [ %188, %195 ], [ %217, %294 ]
  %298 = phi %"class.blink::PaintLayer"** [ %189, %203 ], [ %189, %195 ], [ %218, %294 ]
  %299 = ptrtoint %"class.blink::PaintLayer"** %297 to i64
  %300 = add nsw i64 %49, -1
  %301 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %4, i64 %300
  %302 = ptrtoint %"class.blink::PaintLayer"** %301 to i64
  %303 = sub i64 %302, %299
  %304 = lshr i64 %303, 3
  %305 = add nuw nsw i64 %304, 1
  %306 = and i64 %305, 7
  %307 = icmp eq i64 %306, 0
  br i1 %307, label %319, label %308

308:                                              ; preds = %296, %308
  %309 = phi %"class.blink::PaintLayer"** [ %315, %308 ], [ %297, %296 ]
  %310 = phi %"class.blink::PaintLayer"** [ %316, %308 ], [ %298, %296 ]
  %311 = phi i64 [ %317, %308 ], [ %306, %296 ]
  %312 = bitcast %"class.blink::PaintLayer"** %309 to i64*
  %313 = load i64, i64* %312, align 8
  %314 = bitcast %"class.blink::PaintLayer"** %310 to i64*
  store i64 %313, i64* %314, align 8
  %315 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %309, i64 1
  %316 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %310, i64 1
  %317 = add i64 %311, -1
  %318 = icmp eq i64 %317, 0
  br i1 %318, label %319, label %308, !llvm.loop !23

319:                                              ; preds = %308, %296
  %320 = phi %"class.blink::PaintLayer"** [ %297, %296 ], [ %315, %308 ]
  %321 = phi %"class.blink::PaintLayer"** [ %298, %296 ], [ %316, %308 ]
  %322 = icmp ult i64 %303, 56
  br i1 %322, label %433, label %323

323:                                              ; preds = %319, %323
  %324 = phi %"class.blink::PaintLayer"** [ %364, %323 ], [ %320, %319 ]
  %325 = phi %"class.blink::PaintLayer"** [ %365, %323 ], [ %321, %319 ]
  %326 = bitcast %"class.blink::PaintLayer"** %324 to i64*
  %327 = load i64, i64* %326, align 8
  %328 = bitcast %"class.blink::PaintLayer"** %325 to i64*
  store i64 %327, i64* %328, align 8
  %329 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %324, i64 1
  %330 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %325, i64 1
  %331 = bitcast %"class.blink::PaintLayer"** %329 to i64*
  %332 = load i64, i64* %331, align 8
  %333 = bitcast %"class.blink::PaintLayer"** %330 to i64*
  store i64 %332, i64* %333, align 8
  %334 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %324, i64 2
  %335 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %325, i64 2
  %336 = bitcast %"class.blink::PaintLayer"** %334 to i64*
  %337 = load i64, i64* %336, align 8
  %338 = bitcast %"class.blink::PaintLayer"** %335 to i64*
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %324, i64 3
  %340 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %325, i64 3
  %341 = bitcast %"class.blink::PaintLayer"** %339 to i64*
  %342 = load i64, i64* %341, align 8
  %343 = bitcast %"class.blink::PaintLayer"** %340 to i64*
  store i64 %342, i64* %343, align 8
  %344 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %324, i64 4
  %345 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %325, i64 4
  %346 = bitcast %"class.blink::PaintLayer"** %344 to i64*
  %347 = load i64, i64* %346, align 8
  %348 = bitcast %"class.blink::PaintLayer"** %345 to i64*
  store i64 %347, i64* %348, align 8
  %349 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %324, i64 5
  %350 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %325, i64 5
  %351 = bitcast %"class.blink::PaintLayer"** %349 to i64*
  %352 = load i64, i64* %351, align 8
  %353 = bitcast %"class.blink::PaintLayer"** %350 to i64*
  store i64 %352, i64* %353, align 8
  %354 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %324, i64 6
  %355 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %325, i64 6
  %356 = bitcast %"class.blink::PaintLayer"** %354 to i64*
  %357 = load i64, i64* %356, align 8
  %358 = bitcast %"class.blink::PaintLayer"** %355 to i64*
  store i64 %357, i64* %358, align 8
  %359 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %324, i64 7
  %360 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %325, i64 7
  %361 = bitcast %"class.blink::PaintLayer"** %359 to i64*
  %362 = load i64, i64* %361, align 8
  %363 = bitcast %"class.blink::PaintLayer"** %360 to i64*
  store i64 %362, i64* %363, align 8
  %364 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %324, i64 8
  %365 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %325, i64 8
  %366 = icmp eq %"class.blink::PaintLayer"** %364, %54
  br i1 %366, label %433, label %323, !llvm.loop !24

367:                                              ; preds = %187
  %368 = load i1 (%"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*)*, i1 (%"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*)** %2, align 8
  %369 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %190, align 8
  %370 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %188, align 8
  %371 = tail call zeroext i1 %368(%"class.blink::PaintLayer"* %369, %"class.blink::PaintLayer"* %370) #9
  br i1 %371, label %372, label %377

372:                                              ; preds = %367
  %373 = bitcast %"class.blink::PaintLayer"** %190 to i64*
  %374 = load i64, i64* %373, align 8
  %375 = bitcast %"class.blink::PaintLayer"** %189 to i64*
  store i64 %374, i64* %375, align 8
  %376 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %190, i64 1
  br label %382

377:                                              ; preds = %367
  %378 = bitcast %"class.blink::PaintLayer"** %188 to i64*
  %379 = load i64, i64* %378, align 8
  %380 = bitcast %"class.blink::PaintLayer"** %189 to i64*
  store i64 %379, i64* %380, align 8
  %381 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %188, i64 1
  br label %382

382:                                              ; preds = %377, %372
  %383 = phi %"class.blink::PaintLayer"** [ %376, %372 ], [ %190, %377 ]
  %384 = phi %"class.blink::PaintLayer"** [ %188, %372 ], [ %381, %377 ]
  %385 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %189, i64 1
  %386 = icmp eq %"class.blink::PaintLayer"** %384, %54
  br i1 %386, label %56, label %187

387:                                              ; preds = %90, %387
  %388 = phi %"class.blink::PaintLayer"** [ %429, %387 ], [ %91, %90 ]
  %389 = phi %"class.blink::PaintLayer"** [ %428, %387 ], [ %92, %90 ]
  %390 = bitcast %"class.blink::PaintLayer"** %389 to i64*
  %391 = load i64, i64* %390, align 8
  %392 = bitcast %"class.blink::PaintLayer"** %388 to i64*
  store i64 %391, i64* %392, align 8
  %393 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %389, i64 1
  %394 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %388, i64 1
  %395 = bitcast %"class.blink::PaintLayer"** %393 to i64*
  %396 = load i64, i64* %395, align 8
  %397 = bitcast %"class.blink::PaintLayer"** %394 to i64*
  store i64 %396, i64* %397, align 8
  %398 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %389, i64 2
  %399 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %388, i64 2
  %400 = bitcast %"class.blink::PaintLayer"** %398 to i64*
  %401 = load i64, i64* %400, align 8
  %402 = bitcast %"class.blink::PaintLayer"** %399 to i64*
  store i64 %401, i64* %402, align 8
  %403 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %389, i64 3
  %404 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %388, i64 3
  %405 = bitcast %"class.blink::PaintLayer"** %403 to i64*
  %406 = load i64, i64* %405, align 8
  %407 = bitcast %"class.blink::PaintLayer"** %404 to i64*
  store i64 %406, i64* %407, align 8
  %408 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %389, i64 4
  %409 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %388, i64 4
  %410 = bitcast %"class.blink::PaintLayer"** %408 to i64*
  %411 = load i64, i64* %410, align 8
  %412 = bitcast %"class.blink::PaintLayer"** %409 to i64*
  store i64 %411, i64* %412, align 8
  %413 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %389, i64 5
  %414 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %388, i64 5
  %415 = bitcast %"class.blink::PaintLayer"** %413 to i64*
  %416 = load i64, i64* %415, align 8
  %417 = bitcast %"class.blink::PaintLayer"** %414 to i64*
  store i64 %416, i64* %417, align 8
  %418 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %389, i64 6
  %419 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %388, i64 6
  %420 = bitcast %"class.blink::PaintLayer"** %418 to i64*
  %421 = load i64, i64* %420, align 8
  %422 = bitcast %"class.blink::PaintLayer"** %419 to i64*
  store i64 %421, i64* %422, align 8
  %423 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %389, i64 7
  %424 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %388, i64 7
  %425 = bitcast %"class.blink::PaintLayer"** %423 to i64*
  %426 = load i64, i64* %425, align 8
  %427 = bitcast %"class.blink::PaintLayer"** %424 to i64*
  store i64 %426, i64* %427, align 8
  %428 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %389, i64 8
  %429 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %388, i64 8
  %430 = icmp eq %"class.blink::PaintLayer"** %428, %55
  br i1 %430, label %433, label %387, !llvm.loop !25

431:                                              ; preds = %48
  tail call void @_ZNSt3__113__stable_sortIRPFbPKN5blink10PaintLayerES4_EPPS2_EEvT0_SA_T_NS_15iterator_traitsISA_E15difference_typeEPNSD_10value_typeEl(%"class.blink::PaintLayer"** %0, %"class.blink::PaintLayer"** %50, i1 (%"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*)** dereferenceable(8) %2, i64 %49, %"class.blink::PaintLayer"** %4, i64 %5)
  %432 = sub nsw i64 %3, %49
  tail call void @_ZNSt3__113__stable_sortIRPFbPKN5blink10PaintLayerES4_EPPS2_EEvT0_SA_T_NS_15iterator_traitsISA_E15difference_typeEPNSD_10value_typeEl(%"class.blink::PaintLayer"** %50, %"class.blink::PaintLayer"** %1, i1 (%"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*)** dereferenceable(8) %2, i64 %432, %"class.blink::PaintLayer"** %4, i64 %5)
  tail call void @_ZNSt3__115__inplace_mergeIRPFbPKN5blink10PaintLayerES4_EPPS2_EEvT0_SA_SA_T_NS_15iterator_traitsISA_E15difference_typeESE_PNSD_10value_typeEl(%"class.blink::PaintLayer"** %0, %"class.blink::PaintLayer"** %50, %"class.blink::PaintLayer"** %1, i1 (%"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*)** dereferenceable(8) %2, i64 %49, i64 %432, %"class.blink::PaintLayer"** %4, i64 %5)
  ret void

433:                                              ; preds = %90, %387, %319, %323, %38, %185, %294, %192, %56, %22, %20, %7, %13, %6, %6
  ret void
}

; Function Attrs: nobuiltin nofree nounwind
declare noalias i8* @_ZnwmRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* dereferenceable(1)) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__stable_sort_moveIRPFbPKN5blink10PaintLayerES4_EPPS2_EEvT0_SA_T_NS_15iterator_traitsISA_E15difference_typeEPNSD_10value_typeE(%"class.blink::PaintLayer"**, %"class.blink::PaintLayer"**, i1 (%"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*)** dereferenceable(8), i64, %"class.blink::PaintLayer"**) local_unnamed_addr #0 comdat {
  switch i64 %3, label %32 [
    i64 0, label %464
    i64 1, label %6
    i64 2, label %10
  ]

6:                                                ; preds = %5
  %7 = bitcast %"class.blink::PaintLayer"** %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.blink::PaintLayer"** %4 to i64*
  store i64 %8, i64* %9, align 8
  br label %464

10:                                               ; preds = %5
  %11 = load i1 (%"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*)*, i1 (%"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*)** %2, align 8
  %12 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %1, i64 -1
  %13 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %12, align 8
  %14 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %0, align 8
  %15 = tail call zeroext i1 %11(%"class.blink::PaintLayer"* %13, %"class.blink::PaintLayer"* %14) #9
  br i1 %15, label %16, label %24

16:                                               ; preds = %10
  %17 = bitcast %"class.blink::PaintLayer"** %12 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.blink::PaintLayer"** %4 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %4, i64 1
  %21 = bitcast %"class.blink::PaintLayer"** %0 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.blink::PaintLayer"** %20 to i64*
  store i64 %22, i64* %23, align 8
  br label %464

24:                                               ; preds = %10
  %25 = bitcast %"class.blink::PaintLayer"** %0 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.blink::PaintLayer"** %4 to i64*
  store i64 %26, i64* %27, align 8
  %28 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %4, i64 1
  %29 = bitcast %"class.blink::PaintLayer"** %12 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.blink::PaintLayer"** %28 to i64*
  store i64 %30, i64* %31, align 8
  br label %464

32:                                               ; preds = %5
  %33 = icmp slt i64 %3, 9
  br i1 %33, label %34, label %84

34:                                               ; preds = %32
  %35 = icmp eq %"class.blink::PaintLayer"** %0, %1
  br i1 %35, label %464, label %36

36:                                               ; preds = %34
  %37 = bitcast %"class.blink::PaintLayer"** %0 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.blink::PaintLayer"** %4 to i64*
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %0, i64 1
  %41 = icmp eq %"class.blink::PaintLayer"** %40, %1
  br i1 %41, label %464, label %42

42:                                               ; preds = %36
  %43 = inttoptr i64 %38 to %"class.blink::PaintLayer"*
  br label %44

44:                                               ; preds = %82, %42
  %45 = phi %"class.blink::PaintLayer"* [ %83, %82 ], [ %43, %42 ]
  %46 = phi %"class.blink::PaintLayer"** [ %80, %82 ], [ %40, %42 ]
  %47 = phi %"class.blink::PaintLayer"** [ %48, %82 ], [ %4, %42 ]
  %48 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %47, i64 1
  %49 = load i1 (%"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*)*, i1 (%"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*)** %2, align 8
  %50 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %46, align 8
  %51 = tail call zeroext i1 %49(%"class.blink::PaintLayer"* %50, %"class.blink::PaintLayer"* %45) #9
  br i1 %51, label %52, label %75

52:                                               ; preds = %44
  %53 = bitcast %"class.blink::PaintLayer"** %47 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"class.blink::PaintLayer"** %48 to i64*
  store i64 %54, i64* %55, align 8
  %56 = icmp eq %"class.blink::PaintLayer"** %47, %4
  br i1 %56, label %71, label %57

57:                                               ; preds = %52, %66
  %58 = phi %"class.blink::PaintLayer"** [ %61, %66 ], [ %47, %52 ]
  %59 = load i1 (%"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*)*, i1 (%"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*)** %2, align 8
  %60 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %46, align 8
  %61 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %58, i64 -1
  %62 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %61, align 8
  %63 = tail call zeroext i1 %59(%"class.blink::PaintLayer"* %60, %"class.blink::PaintLayer"* %62) #9
  br i1 %63, label %66, label %64

64:                                               ; preds = %57
  %65 = bitcast %"class.blink::PaintLayer"** %58 to i64*
  br label %71

66:                                               ; preds = %57
  %67 = bitcast %"class.blink::PaintLayer"** %61 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = bitcast %"class.blink::PaintLayer"** %58 to i64*
  store i64 %68, i64* %69, align 8
  %70 = icmp eq %"class.blink::PaintLayer"** %61, %4
  br i1 %70, label %71, label %57

71:                                               ; preds = %66, %64, %52
  %72 = phi i64* [ %39, %52 ], [ %65, %64 ], [ %39, %66 ]
  %73 = bitcast %"class.blink::PaintLayer"** %46 to i64*
  %74 = load i64, i64* %73, align 8
  store i64 %74, i64* %72, align 8
  br label %79

75:                                               ; preds = %44
  %76 = bitcast %"class.blink::PaintLayer"** %46 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = bitcast %"class.blink::PaintLayer"** %48 to i64*
  store i64 %77, i64* %78, align 8
  br label %79

79:                                               ; preds = %75, %71
  %80 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %46, i64 1
  %81 = icmp eq %"class.blink::PaintLayer"** %80, %1
  br i1 %81, label %464, label %82

82:                                               ; preds = %79
  %83 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %48, align 8
  br label %44

84:                                               ; preds = %32
  %85 = lshr i64 %3, 1
  %86 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %0, i64 %85
  tail call void @_ZNSt3__113__stable_sortIRPFbPKN5blink10PaintLayerES4_EPPS2_EEvT0_SA_T_NS_15iterator_traitsISA_E15difference_typeEPNSD_10value_typeEl(%"class.blink::PaintLayer"** %0, %"class.blink::PaintLayer"** %86, i1 (%"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*)** dereferenceable(8) %2, i64 %85, %"class.blink::PaintLayer"** %4, i64 %85)
  %87 = sub nsw i64 %3, %85
  %88 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %4, i64 %85
  tail call void @_ZNSt3__113__stable_sortIRPFbPKN5blink10PaintLayerES4_EPPS2_EEvT0_SA_T_NS_15iterator_traitsISA_E15difference_typeEPNSD_10value_typeEl(%"class.blink::PaintLayer"** %86, %"class.blink::PaintLayer"** %1, i1 (%"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*)** dereferenceable(8) %2, i64 %87, %"class.blink::PaintLayer"** %88, i64 %87)
  %89 = icmp eq i64 %85, 0
  br i1 %89, label %90, label %264

90:                                               ; preds = %459, %84
  %91 = phi %"class.blink::PaintLayer"** [ %86, %84 ], [ %460, %459 ]
  %92 = phi %"class.blink::PaintLayer"** [ %4, %84 ], [ %462, %459 ]
  %93 = ptrtoint %"class.blink::PaintLayer"** %91 to i64
  %94 = icmp eq %"class.blink::PaintLayer"** %91, %1
  br i1 %94, label %464, label %95

95:                                               ; preds = %90
  %96 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %1, i64 -1
  %97 = ptrtoint %"class.blink::PaintLayer"** %96 to i64
  %98 = sub i64 %97, %93
  %99 = lshr i64 %98, 3
  %100 = add nuw nsw i64 %99, 1
  %101 = icmp ult i64 %100, 4
  br i1 %101, label %194, label %102

102:                                              ; preds = %95
  %103 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %1, i64 -1
  %104 = ptrtoint %"class.blink::PaintLayer"** %103 to i64
  %105 = sub i64 %104, %93
  %106 = lshr i64 %105, 3
  %107 = add nuw nsw i64 %106, 1
  %108 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %92, i64 %107
  %109 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %91, i64 %107
  %110 = icmp ult %"class.blink::PaintLayer"** %92, %109
  %111 = icmp ult %"class.blink::PaintLayer"** %91, %108
  %112 = and i1 %110, %111
  br i1 %112, label %194, label %113

113:                                              ; preds = %102
  %114 = and i64 %100, 4611686018427387900
  %115 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %92, i64 %114
  %116 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %91, i64 %114
  %117 = add nsw i64 %114, -4
  %118 = lshr exact i64 %117, 2
  %119 = add nuw nsw i64 %118, 1
  %120 = and i64 %119, 3
  %121 = icmp ult i64 %117, 12
  br i1 %121, label %173, label %122

122:                                              ; preds = %113
  %123 = sub nsw i64 %119, %120
  br label %124

124:                                              ; preds = %124, %122
  %125 = phi i64 [ 0, %122 ], [ %170, %124 ]
  %126 = phi i64 [ %123, %122 ], [ %171, %124 ]
  %127 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %92, i64 %125
  %128 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %91, i64 %125
  %129 = bitcast %"class.blink::PaintLayer"** %128 to <2 x i64>*
  %130 = load <2 x i64>, <2 x i64>* %129, align 8, !alias.scope !26
  %131 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %128, i64 2
  %132 = bitcast %"class.blink::PaintLayer"** %131 to <2 x i64>*
  %133 = load <2 x i64>, <2 x i64>* %132, align 8, !alias.scope !26
  %134 = bitcast %"class.blink::PaintLayer"** %127 to <2 x i64>*
  store <2 x i64> %130, <2 x i64>* %134, align 8, !alias.scope !29, !noalias !26
  %135 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %127, i64 2
  %136 = bitcast %"class.blink::PaintLayer"** %135 to <2 x i64>*
  store <2 x i64> %133, <2 x i64>* %136, align 8, !alias.scope !29, !noalias !26
  %137 = or i64 %125, 4
  %138 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %92, i64 %137
  %139 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %91, i64 %137
  %140 = bitcast %"class.blink::PaintLayer"** %139 to <2 x i64>*
  %141 = load <2 x i64>, <2 x i64>* %140, align 8, !alias.scope !26
  %142 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %139, i64 2
  %143 = bitcast %"class.blink::PaintLayer"** %142 to <2 x i64>*
  %144 = load <2 x i64>, <2 x i64>* %143, align 8, !alias.scope !26
  %145 = bitcast %"class.blink::PaintLayer"** %138 to <2 x i64>*
  store <2 x i64> %141, <2 x i64>* %145, align 8, !alias.scope !29, !noalias !26
  %146 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %138, i64 2
  %147 = bitcast %"class.blink::PaintLayer"** %146 to <2 x i64>*
  store <2 x i64> %144, <2 x i64>* %147, align 8, !alias.scope !29, !noalias !26
  %148 = or i64 %125, 8
  %149 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %92, i64 %148
  %150 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %91, i64 %148
  %151 = bitcast %"class.blink::PaintLayer"** %150 to <2 x i64>*
  %152 = load <2 x i64>, <2 x i64>* %151, align 8, !alias.scope !26
  %153 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %150, i64 2
  %154 = bitcast %"class.blink::PaintLayer"** %153 to <2 x i64>*
  %155 = load <2 x i64>, <2 x i64>* %154, align 8, !alias.scope !26
  %156 = bitcast %"class.blink::PaintLayer"** %149 to <2 x i64>*
  store <2 x i64> %152, <2 x i64>* %156, align 8, !alias.scope !29, !noalias !26
  %157 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %149, i64 2
  %158 = bitcast %"class.blink::PaintLayer"** %157 to <2 x i64>*
  store <2 x i64> %155, <2 x i64>* %158, align 8, !alias.scope !29, !noalias !26
  %159 = or i64 %125, 12
  %160 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %92, i64 %159
  %161 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %91, i64 %159
  %162 = bitcast %"class.blink::PaintLayer"** %161 to <2 x i64>*
  %163 = load <2 x i64>, <2 x i64>* %162, align 8, !alias.scope !26
  %164 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %161, i64 2
  %165 = bitcast %"class.blink::PaintLayer"** %164 to <2 x i64>*
  %166 = load <2 x i64>, <2 x i64>* %165, align 8, !alias.scope !26
  %167 = bitcast %"class.blink::PaintLayer"** %160 to <2 x i64>*
  store <2 x i64> %163, <2 x i64>* %167, align 8, !alias.scope !29, !noalias !26
  %168 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %160, i64 2
  %169 = bitcast %"class.blink::PaintLayer"** %168 to <2 x i64>*
  store <2 x i64> %166, <2 x i64>* %169, align 8, !alias.scope !29, !noalias !26
  %170 = add i64 %125, 16
  %171 = add i64 %126, -4
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %173, label %124, !llvm.loop !31

173:                                              ; preds = %124, %113
  %174 = phi i64 [ 0, %113 ], [ %170, %124 ]
  %175 = icmp eq i64 %120, 0
  br i1 %175, label %192, label %176

176:                                              ; preds = %173, %176
  %177 = phi i64 [ %189, %176 ], [ %174, %173 ]
  %178 = phi i64 [ %190, %176 ], [ %120, %173 ]
  %179 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %92, i64 %177
  %180 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %91, i64 %177
  %181 = bitcast %"class.blink::PaintLayer"** %180 to <2 x i64>*
  %182 = load <2 x i64>, <2 x i64>* %181, align 8, !alias.scope !26
  %183 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %180, i64 2
  %184 = bitcast %"class.blink::PaintLayer"** %183 to <2 x i64>*
  %185 = load <2 x i64>, <2 x i64>* %184, align 8, !alias.scope !26
  %186 = bitcast %"class.blink::PaintLayer"** %179 to <2 x i64>*
  store <2 x i64> %182, <2 x i64>* %186, align 8, !alias.scope !29, !noalias !26
  %187 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %179, i64 2
  %188 = bitcast %"class.blink::PaintLayer"** %187 to <2 x i64>*
  store <2 x i64> %185, <2 x i64>* %188, align 8, !alias.scope !29, !noalias !26
  %189 = add i64 %177, 4
  %190 = add i64 %178, -1
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %192, label %176, !llvm.loop !32

192:                                              ; preds = %176, %173
  %193 = icmp eq i64 %100, %114
  br i1 %193, label %464, label %194

194:                                              ; preds = %192, %102, %95
  %195 = phi %"class.blink::PaintLayer"** [ %92, %102 ], [ %92, %95 ], [ %115, %192 ]
  %196 = phi %"class.blink::PaintLayer"** [ %91, %102 ], [ %91, %95 ], [ %116, %192 ]
  %197 = ptrtoint %"class.blink::PaintLayer"** %196 to i64
  %198 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %1, i64 -1
  %199 = ptrtoint %"class.blink::PaintLayer"** %198 to i64
  %200 = sub i64 %199, %197
  %201 = lshr i64 %200, 3
  %202 = add nuw nsw i64 %201, 1
  %203 = and i64 %202, 7
  %204 = icmp eq i64 %203, 0
  br i1 %204, label %216, label %205

205:                                              ; preds = %194, %205
  %206 = phi %"class.blink::PaintLayer"** [ %213, %205 ], [ %195, %194 ]
  %207 = phi %"class.blink::PaintLayer"** [ %212, %205 ], [ %196, %194 ]
  %208 = phi i64 [ %214, %205 ], [ %203, %194 ]
  %209 = bitcast %"class.blink::PaintLayer"** %207 to i64*
  %210 = load i64, i64* %209, align 8
  %211 = bitcast %"class.blink::PaintLayer"** %206 to i64*
  store i64 %210, i64* %211, align 8
  %212 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %207, i64 1
  %213 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %206, i64 1
  %214 = add i64 %208, -1
  %215 = icmp eq i64 %214, 0
  br i1 %215, label %216, label %205, !llvm.loop !33

216:                                              ; preds = %205, %194
  %217 = phi %"class.blink::PaintLayer"** [ %195, %194 ], [ %213, %205 ]
  %218 = phi %"class.blink::PaintLayer"** [ %196, %194 ], [ %212, %205 ]
  %219 = icmp ult i64 %200, 56
  br i1 %219, label %464, label %220

220:                                              ; preds = %216, %220
  %221 = phi %"class.blink::PaintLayer"** [ %262, %220 ], [ %217, %216 ]
  %222 = phi %"class.blink::PaintLayer"** [ %261, %220 ], [ %218, %216 ]
  %223 = bitcast %"class.blink::PaintLayer"** %222 to i64*
  %224 = load i64, i64* %223, align 8
  %225 = bitcast %"class.blink::PaintLayer"** %221 to i64*
  store i64 %224, i64* %225, align 8
  %226 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %222, i64 1
  %227 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %221, i64 1
  %228 = bitcast %"class.blink::PaintLayer"** %226 to i64*
  %229 = load i64, i64* %228, align 8
  %230 = bitcast %"class.blink::PaintLayer"** %227 to i64*
  store i64 %229, i64* %230, align 8
  %231 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %222, i64 2
  %232 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %221, i64 2
  %233 = bitcast %"class.blink::PaintLayer"** %231 to i64*
  %234 = load i64, i64* %233, align 8
  %235 = bitcast %"class.blink::PaintLayer"** %232 to i64*
  store i64 %234, i64* %235, align 8
  %236 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %222, i64 3
  %237 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %221, i64 3
  %238 = bitcast %"class.blink::PaintLayer"** %236 to i64*
  %239 = load i64, i64* %238, align 8
  %240 = bitcast %"class.blink::PaintLayer"** %237 to i64*
  store i64 %239, i64* %240, align 8
  %241 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %222, i64 4
  %242 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %221, i64 4
  %243 = bitcast %"class.blink::PaintLayer"** %241 to i64*
  %244 = load i64, i64* %243, align 8
  %245 = bitcast %"class.blink::PaintLayer"** %242 to i64*
  store i64 %244, i64* %245, align 8
  %246 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %222, i64 5
  %247 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %221, i64 5
  %248 = bitcast %"class.blink::PaintLayer"** %246 to i64*
  %249 = load i64, i64* %248, align 8
  %250 = bitcast %"class.blink::PaintLayer"** %247 to i64*
  store i64 %249, i64* %250, align 8
  %251 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %222, i64 6
  %252 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %221, i64 6
  %253 = bitcast %"class.blink::PaintLayer"** %251 to i64*
  %254 = load i64, i64* %253, align 8
  %255 = bitcast %"class.blink::PaintLayer"** %252 to i64*
  store i64 %254, i64* %255, align 8
  %256 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %222, i64 7
  %257 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %221, i64 7
  %258 = bitcast %"class.blink::PaintLayer"** %256 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = bitcast %"class.blink::PaintLayer"** %257 to i64*
  store i64 %259, i64* %260, align 8
  %261 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %222, i64 8
  %262 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %221, i64 8
  %263 = icmp eq %"class.blink::PaintLayer"** %261, %1
  br i1 %263, label %464, label %220, !llvm.loop !34

264:                                              ; preds = %84, %459
  %265 = phi %"class.blink::PaintLayer"** [ %461, %459 ], [ %0, %84 ]
  %266 = phi %"class.blink::PaintLayer"** [ %462, %459 ], [ %4, %84 ]
  %267 = phi %"class.blink::PaintLayer"** [ %460, %459 ], [ %86, %84 ]
  %268 = icmp eq %"class.blink::PaintLayer"** %267, %1
  br i1 %268, label %269, label %444

269:                                              ; preds = %264
  %270 = ptrtoint %"class.blink::PaintLayer"** %265 to i64
  %271 = icmp eq %"class.blink::PaintLayer"** %265, %86
  br i1 %271, label %464, label %272

272:                                              ; preds = %269
  %273 = add nsw i64 %85, -1
  %274 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %0, i64 %273
  %275 = ptrtoint %"class.blink::PaintLayer"** %274 to i64
  %276 = sub i64 %275, %270
  %277 = lshr i64 %276, 3
  %278 = add nuw nsw i64 %277, 1
  %279 = icmp ult i64 %278, 4
  br i1 %279, label %373, label %280

280:                                              ; preds = %272
  %281 = add nsw i64 %85, -1
  %282 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %0, i64 %281
  %283 = ptrtoint %"class.blink::PaintLayer"** %282 to i64
  %284 = sub i64 %283, %270
  %285 = lshr i64 %284, 3
  %286 = add nuw nsw i64 %285, 1
  %287 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %266, i64 %286
  %288 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %265, i64 %286
  %289 = icmp ult %"class.blink::PaintLayer"** %266, %288
  %290 = icmp ult %"class.blink::PaintLayer"** %265, %287
  %291 = and i1 %289, %290
  br i1 %291, label %373, label %292

292:                                              ; preds = %280
  %293 = and i64 %278, 4611686018427387900
  %294 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %265, i64 %293
  %295 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %266, i64 %293
  %296 = add nsw i64 %293, -4
  %297 = lshr exact i64 %296, 2
  %298 = add nuw nsw i64 %297, 1
  %299 = and i64 %298, 3
  %300 = icmp ult i64 %296, 12
  br i1 %300, label %352, label %301

301:                                              ; preds = %292
  %302 = sub nsw i64 %298, %299
  br label %303

303:                                              ; preds = %303, %301
  %304 = phi i64 [ 0, %301 ], [ %349, %303 ]
  %305 = phi i64 [ %302, %301 ], [ %350, %303 ]
  %306 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %265, i64 %304
  %307 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %266, i64 %304
  %308 = bitcast %"class.blink::PaintLayer"** %306 to <2 x i64>*
  %309 = load <2 x i64>, <2 x i64>* %308, align 8, !alias.scope !35
  %310 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %306, i64 2
  %311 = bitcast %"class.blink::PaintLayer"** %310 to <2 x i64>*
  %312 = load <2 x i64>, <2 x i64>* %311, align 8, !alias.scope !35
  %313 = bitcast %"class.blink::PaintLayer"** %307 to <2 x i64>*
  store <2 x i64> %309, <2 x i64>* %313, align 8, !alias.scope !38, !noalias !35
  %314 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %307, i64 2
  %315 = bitcast %"class.blink::PaintLayer"** %314 to <2 x i64>*
  store <2 x i64> %312, <2 x i64>* %315, align 8, !alias.scope !38, !noalias !35
  %316 = or i64 %304, 4
  %317 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %265, i64 %316
  %318 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %266, i64 %316
  %319 = bitcast %"class.blink::PaintLayer"** %317 to <2 x i64>*
  %320 = load <2 x i64>, <2 x i64>* %319, align 8, !alias.scope !35
  %321 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %317, i64 2
  %322 = bitcast %"class.blink::PaintLayer"** %321 to <2 x i64>*
  %323 = load <2 x i64>, <2 x i64>* %322, align 8, !alias.scope !35
  %324 = bitcast %"class.blink::PaintLayer"** %318 to <2 x i64>*
  store <2 x i64> %320, <2 x i64>* %324, align 8, !alias.scope !38, !noalias !35
  %325 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %318, i64 2
  %326 = bitcast %"class.blink::PaintLayer"** %325 to <2 x i64>*
  store <2 x i64> %323, <2 x i64>* %326, align 8, !alias.scope !38, !noalias !35
  %327 = or i64 %304, 8
  %328 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %265, i64 %327
  %329 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %266, i64 %327
  %330 = bitcast %"class.blink::PaintLayer"** %328 to <2 x i64>*
  %331 = load <2 x i64>, <2 x i64>* %330, align 8, !alias.scope !35
  %332 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %328, i64 2
  %333 = bitcast %"class.blink::PaintLayer"** %332 to <2 x i64>*
  %334 = load <2 x i64>, <2 x i64>* %333, align 8, !alias.scope !35
  %335 = bitcast %"class.blink::PaintLayer"** %329 to <2 x i64>*
  store <2 x i64> %331, <2 x i64>* %335, align 8, !alias.scope !38, !noalias !35
  %336 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %329, i64 2
  %337 = bitcast %"class.blink::PaintLayer"** %336 to <2 x i64>*
  store <2 x i64> %334, <2 x i64>* %337, align 8, !alias.scope !38, !noalias !35
  %338 = or i64 %304, 12
  %339 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %265, i64 %338
  %340 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %266, i64 %338
  %341 = bitcast %"class.blink::PaintLayer"** %339 to <2 x i64>*
  %342 = load <2 x i64>, <2 x i64>* %341, align 8, !alias.scope !35
  %343 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %339, i64 2
  %344 = bitcast %"class.blink::PaintLayer"** %343 to <2 x i64>*
  %345 = load <2 x i64>, <2 x i64>* %344, align 8, !alias.scope !35
  %346 = bitcast %"class.blink::PaintLayer"** %340 to <2 x i64>*
  store <2 x i64> %342, <2 x i64>* %346, align 8, !alias.scope !38, !noalias !35
  %347 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %340, i64 2
  %348 = bitcast %"class.blink::PaintLayer"** %347 to <2 x i64>*
  store <2 x i64> %345, <2 x i64>* %348, align 8, !alias.scope !38, !noalias !35
  %349 = add i64 %304, 16
  %350 = add i64 %305, -4
  %351 = icmp eq i64 %350, 0
  br i1 %351, label %352, label %303, !llvm.loop !40

352:                                              ; preds = %303, %292
  %353 = phi i64 [ 0, %292 ], [ %349, %303 ]
  %354 = icmp eq i64 %299, 0
  br i1 %354, label %371, label %355

355:                                              ; preds = %352, %355
  %356 = phi i64 [ %368, %355 ], [ %353, %352 ]
  %357 = phi i64 [ %369, %355 ], [ %299, %352 ]
  %358 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %265, i64 %356
  %359 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %266, i64 %356
  %360 = bitcast %"class.blink::PaintLayer"** %358 to <2 x i64>*
  %361 = load <2 x i64>, <2 x i64>* %360, align 8, !alias.scope !35
  %362 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %358, i64 2
  %363 = bitcast %"class.blink::PaintLayer"** %362 to <2 x i64>*
  %364 = load <2 x i64>, <2 x i64>* %363, align 8, !alias.scope !35
  %365 = bitcast %"class.blink::PaintLayer"** %359 to <2 x i64>*
  store <2 x i64> %361, <2 x i64>* %365, align 8, !alias.scope !38, !noalias !35
  %366 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %359, i64 2
  %367 = bitcast %"class.blink::PaintLayer"** %366 to <2 x i64>*
  store <2 x i64> %364, <2 x i64>* %367, align 8, !alias.scope !38, !noalias !35
  %368 = add i64 %356, 4
  %369 = add i64 %357, -1
  %370 = icmp eq i64 %369, 0
  br i1 %370, label %371, label %355, !llvm.loop !41

371:                                              ; preds = %355, %352
  %372 = icmp eq i64 %278, %293
  br i1 %372, label %464, label %373

373:                                              ; preds = %371, %280, %272
  %374 = phi %"class.blink::PaintLayer"** [ %265, %280 ], [ %265, %272 ], [ %294, %371 ]
  %375 = phi %"class.blink::PaintLayer"** [ %266, %280 ], [ %266, %272 ], [ %295, %371 ]
  %376 = ptrtoint %"class.blink::PaintLayer"** %374 to i64
  %377 = add nsw i64 %85, -1
  %378 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %0, i64 %377
  %379 = ptrtoint %"class.blink::PaintLayer"** %378 to i64
  %380 = sub i64 %379, %376
  %381 = lshr i64 %380, 3
  %382 = add nuw nsw i64 %381, 1
  %383 = and i64 %382, 7
  %384 = icmp eq i64 %383, 0
  br i1 %384, label %396, label %385

385:                                              ; preds = %373, %385
  %386 = phi %"class.blink::PaintLayer"** [ %392, %385 ], [ %374, %373 ]
  %387 = phi %"class.blink::PaintLayer"** [ %393, %385 ], [ %375, %373 ]
  %388 = phi i64 [ %394, %385 ], [ %383, %373 ]
  %389 = bitcast %"class.blink::PaintLayer"** %386 to i64*
  %390 = load i64, i64* %389, align 8
  %391 = bitcast %"class.blink::PaintLayer"** %387 to i64*
  store i64 %390, i64* %391, align 8
  %392 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %386, i64 1
  %393 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %387, i64 1
  %394 = add i64 %388, -1
  %395 = icmp eq i64 %394, 0
  br i1 %395, label %396, label %385, !llvm.loop !42

396:                                              ; preds = %385, %373
  %397 = phi %"class.blink::PaintLayer"** [ %374, %373 ], [ %392, %385 ]
  %398 = phi %"class.blink::PaintLayer"** [ %375, %373 ], [ %393, %385 ]
  %399 = icmp ult i64 %380, 56
  br i1 %399, label %464, label %400

400:                                              ; preds = %396, %400
  %401 = phi %"class.blink::PaintLayer"** [ %441, %400 ], [ %397, %396 ]
  %402 = phi %"class.blink::PaintLayer"** [ %442, %400 ], [ %398, %396 ]
  %403 = bitcast %"class.blink::PaintLayer"** %401 to i64*
  %404 = load i64, i64* %403, align 8
  %405 = bitcast %"class.blink::PaintLayer"** %402 to i64*
  store i64 %404, i64* %405, align 8
  %406 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %401, i64 1
  %407 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %402, i64 1
  %408 = bitcast %"class.blink::PaintLayer"** %406 to i64*
  %409 = load i64, i64* %408, align 8
  %410 = bitcast %"class.blink::PaintLayer"** %407 to i64*
  store i64 %409, i64* %410, align 8
  %411 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %401, i64 2
  %412 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %402, i64 2
  %413 = bitcast %"class.blink::PaintLayer"** %411 to i64*
  %414 = load i64, i64* %413, align 8
  %415 = bitcast %"class.blink::PaintLayer"** %412 to i64*
  store i64 %414, i64* %415, align 8
  %416 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %401, i64 3
  %417 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %402, i64 3
  %418 = bitcast %"class.blink::PaintLayer"** %416 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = bitcast %"class.blink::PaintLayer"** %417 to i64*
  store i64 %419, i64* %420, align 8
  %421 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %401, i64 4
  %422 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %402, i64 4
  %423 = bitcast %"class.blink::PaintLayer"** %421 to i64*
  %424 = load i64, i64* %423, align 8
  %425 = bitcast %"class.blink::PaintLayer"** %422 to i64*
  store i64 %424, i64* %425, align 8
  %426 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %401, i64 5
  %427 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %402, i64 5
  %428 = bitcast %"class.blink::PaintLayer"** %426 to i64*
  %429 = load i64, i64* %428, align 8
  %430 = bitcast %"class.blink::PaintLayer"** %427 to i64*
  store i64 %429, i64* %430, align 8
  %431 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %401, i64 6
  %432 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %402, i64 6
  %433 = bitcast %"class.blink::PaintLayer"** %431 to i64*
  %434 = load i64, i64* %433, align 8
  %435 = bitcast %"class.blink::PaintLayer"** %432 to i64*
  store i64 %434, i64* %435, align 8
  %436 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %401, i64 7
  %437 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %402, i64 7
  %438 = bitcast %"class.blink::PaintLayer"** %436 to i64*
  %439 = load i64, i64* %438, align 8
  %440 = bitcast %"class.blink::PaintLayer"** %437 to i64*
  store i64 %439, i64* %440, align 8
  %441 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %401, i64 8
  %442 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %402, i64 8
  %443 = icmp eq %"class.blink::PaintLayer"** %441, %86
  br i1 %443, label %464, label %400, !llvm.loop !43

444:                                              ; preds = %264
  %445 = load i1 (%"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*)*, i1 (%"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*)** %2, align 8
  %446 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %267, align 8
  %447 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %265, align 8
  %448 = tail call zeroext i1 %445(%"class.blink::PaintLayer"* %446, %"class.blink::PaintLayer"* %447) #9
  br i1 %448, label %449, label %454

449:                                              ; preds = %444
  %450 = bitcast %"class.blink::PaintLayer"** %267 to i64*
  %451 = load i64, i64* %450, align 8
  %452 = bitcast %"class.blink::PaintLayer"** %266 to i64*
  store i64 %451, i64* %452, align 8
  %453 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %267, i64 1
  br label %459

454:                                              ; preds = %444
  %455 = bitcast %"class.blink::PaintLayer"** %265 to i64*
  %456 = load i64, i64* %455, align 8
  %457 = bitcast %"class.blink::PaintLayer"** %266 to i64*
  store i64 %456, i64* %457, align 8
  %458 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %265, i64 1
  br label %459

459:                                              ; preds = %454, %449
  %460 = phi %"class.blink::PaintLayer"** [ %453, %449 ], [ %267, %454 ]
  %461 = phi %"class.blink::PaintLayer"** [ %265, %449 ], [ %458, %454 ]
  %462 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %266, i64 1
  %463 = icmp eq %"class.blink::PaintLayer"** %461, %86
  br i1 %463, label %90, label %264

464:                                              ; preds = %396, %400, %216, %220, %79, %371, %192, %269, %90, %36, %34, %16, %24, %5, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__115__inplace_mergeIRPFbPKN5blink10PaintLayerES4_EPPS2_EEvT0_SA_SA_T_NS_15iterator_traitsISA_E15difference_typeESE_PNSD_10value_typeEl(%"class.blink::PaintLayer"**, %"class.blink::PaintLayer"**, %"class.blink::PaintLayer"**, i1 (%"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*)** dereferenceable(8), i64, i64, %"class.blink::PaintLayer"**, i64) local_unnamed_addr #0 comdat {
  %9 = ptrtoint %"class.blink::PaintLayer"** %6 to i64
  %10 = icmp eq i64 %5, 0
  br i1 %10, label %960, label %11

11:                                               ; preds = %8, %953
  %12 = phi %"class.blink::PaintLayer"** [ %958, %953 ], [ %0, %8 ]
  %13 = phi %"class.blink::PaintLayer"** [ %957, %953 ], [ %1, %8 ]
  %14 = phi i64 [ %956, %953 ], [ %5, %8 ]
  %15 = phi i64 [ %955, %953 ], [ %4, %8 ]
  %16 = phi %"class.blink::PaintLayer"** [ %954, %953 ], [ %2, %8 ]
  %17 = bitcast %"class.blink::PaintLayer"** %13 to i8*
  %18 = icmp sgt i64 %15, %7
  %19 = icmp sgt i64 %14, %7
  %20 = and i1 %18, %19
  br i1 %20, label %21, label %23

21:                                               ; preds = %11
  %22 = icmp eq i64 %15, 0
  br i1 %22, label %960, label %597

23:                                               ; preds = %11
  %24 = ptrtoint %"class.blink::PaintLayer"** %13 to i64
  %25 = ptrtoint %"class.blink::PaintLayer"** %12 to i64
  %26 = icmp sgt i64 %15, %14
  br i1 %26, label %155, label %27

27:                                               ; preds = %23
  %28 = icmp eq %"class.blink::PaintLayer"** %12, %13
  br i1 %28, label %960, label %29

29:                                               ; preds = %27
  %30 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %13, i64 -1
  %31 = ptrtoint %"class.blink::PaintLayer"** %30 to i64
  %32 = sub i64 %31, %25
  %33 = lshr i64 %32, 3
  %34 = add nuw nsw i64 %33, 1
  %35 = icmp ult i64 %34, 4
  br i1 %35, label %36, label %63

36:                                               ; preds = %153, %63, %29
  %37 = phi %"class.blink::PaintLayer"** [ %12, %63 ], [ %12, %29 ], [ %76, %153 ]
  %38 = phi %"class.blink::PaintLayer"** [ %6, %63 ], [ %6, %29 ], [ %77, %153 ]
  %39 = ptrtoint %"class.blink::PaintLayer"** %37 to i64
  %40 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %13, i64 -1
  %41 = ptrtoint %"class.blink::PaintLayer"** %40 to i64
  %42 = sub i64 %41, %39
  %43 = lshr i64 %42, 3
  %44 = add nuw nsw i64 %43, 1
  %45 = and i64 %44, 7
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %58, label %47

47:                                               ; preds = %36, %47
  %48 = phi %"class.blink::PaintLayer"** [ %54, %47 ], [ %37, %36 ]
  %49 = phi %"class.blink::PaintLayer"** [ %55, %47 ], [ %38, %36 ]
  %50 = phi i64 [ %56, %47 ], [ %45, %36 ]
  %51 = bitcast %"class.blink::PaintLayer"** %48 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %"class.blink::PaintLayer"** %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %48, i64 1
  %55 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %49, i64 1
  %56 = add i64 %50, -1
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %58, label %47, !llvm.loop !44

58:                                               ; preds = %47, %36
  %59 = phi %"class.blink::PaintLayer"** [ undef, %36 ], [ %55, %47 ]
  %60 = phi %"class.blink::PaintLayer"** [ %37, %36 ], [ %54, %47 ]
  %61 = phi %"class.blink::PaintLayer"** [ %38, %36 ], [ %55, %47 ]
  %62 = icmp ult i64 %42, 56
  br i1 %62, label %283, label %319

63:                                               ; preds = %29
  %64 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %13, i64 -1
  %65 = ptrtoint %"class.blink::PaintLayer"** %64 to i64
  %66 = sub i64 %65, %25
  %67 = lshr i64 %66, 3
  %68 = add nuw nsw i64 %67, 1
  %69 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %6, i64 %68
  %70 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %12, i64 %68
  %71 = icmp ugt %"class.blink::PaintLayer"** %70, %6
  %72 = icmp ult %"class.blink::PaintLayer"** %12, %69
  %73 = and i1 %71, %72
  br i1 %73, label %36, label %74

74:                                               ; preds = %63
  %75 = and i64 %34, 4611686018427387900
  %76 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %12, i64 %75
  %77 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %6, i64 %75
  %78 = add nsw i64 %75, -4
  %79 = lshr exact i64 %78, 2
  %80 = add nuw nsw i64 %79, 1
  %81 = and i64 %80, 3
  %82 = icmp ult i64 %78, 12
  br i1 %82, label %134, label %83

83:                                               ; preds = %74
  %84 = sub nsw i64 %80, %81
  br label %85

85:                                               ; preds = %85, %83
  %86 = phi i64 [ 0, %83 ], [ %131, %85 ]
  %87 = phi i64 [ %84, %83 ], [ %132, %85 ]
  %88 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %12, i64 %86
  %89 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %6, i64 %86
  %90 = bitcast %"class.blink::PaintLayer"** %88 to <2 x i64>*
  %91 = load <2 x i64>, <2 x i64>* %90, align 8, !alias.scope !45
  %92 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %88, i64 2
  %93 = bitcast %"class.blink::PaintLayer"** %92 to <2 x i64>*
  %94 = load <2 x i64>, <2 x i64>* %93, align 8, !alias.scope !45
  %95 = bitcast %"class.blink::PaintLayer"** %89 to <2 x i64>*
  store <2 x i64> %91, <2 x i64>* %95, align 8, !alias.scope !48, !noalias !45
  %96 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %89, i64 2
  %97 = bitcast %"class.blink::PaintLayer"** %96 to <2 x i64>*
  store <2 x i64> %94, <2 x i64>* %97, align 8, !alias.scope !48, !noalias !45
  %98 = or i64 %86, 4
  %99 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %12, i64 %98
  %100 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %6, i64 %98
  %101 = bitcast %"class.blink::PaintLayer"** %99 to <2 x i64>*
  %102 = load <2 x i64>, <2 x i64>* %101, align 8, !alias.scope !45
  %103 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %99, i64 2
  %104 = bitcast %"class.blink::PaintLayer"** %103 to <2 x i64>*
  %105 = load <2 x i64>, <2 x i64>* %104, align 8, !alias.scope !45
  %106 = bitcast %"class.blink::PaintLayer"** %100 to <2 x i64>*
  store <2 x i64> %102, <2 x i64>* %106, align 8, !alias.scope !48, !noalias !45
  %107 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %100, i64 2
  %108 = bitcast %"class.blink::PaintLayer"** %107 to <2 x i64>*
  store <2 x i64> %105, <2 x i64>* %108, align 8, !alias.scope !48, !noalias !45
  %109 = or i64 %86, 8
  %110 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %12, i64 %109
  %111 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %6, i64 %109
  %112 = bitcast %"class.blink::PaintLayer"** %110 to <2 x i64>*
  %113 = load <2 x i64>, <2 x i64>* %112, align 8, !alias.scope !45
  %114 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %110, i64 2
  %115 = bitcast %"class.blink::PaintLayer"** %114 to <2 x i64>*
  %116 = load <2 x i64>, <2 x i64>* %115, align 8, !alias.scope !45
  %117 = bitcast %"class.blink::PaintLayer"** %111 to <2 x i64>*
  store <2 x i64> %113, <2 x i64>* %117, align 8, !alias.scope !48, !noalias !45
  %118 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %111, i64 2
  %119 = bitcast %"class.blink::PaintLayer"** %118 to <2 x i64>*
  store <2 x i64> %116, <2 x i64>* %119, align 8, !alias.scope !48, !noalias !45
  %120 = or i64 %86, 12
  %121 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %12, i64 %120
  %122 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %6, i64 %120
  %123 = bitcast %"class.blink::PaintLayer"** %121 to <2 x i64>*
  %124 = load <2 x i64>, <2 x i64>* %123, align 8, !alias.scope !45
  %125 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %121, i64 2
  %126 = bitcast %"class.blink::PaintLayer"** %125 to <2 x i64>*
  %127 = load <2 x i64>, <2 x i64>* %126, align 8, !alias.scope !45
  %128 = bitcast %"class.blink::PaintLayer"** %122 to <2 x i64>*
  store <2 x i64> %124, <2 x i64>* %128, align 8, !alias.scope !48, !noalias !45
  %129 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %122, i64 2
  %130 = bitcast %"class.blink::PaintLayer"** %129 to <2 x i64>*
  store <2 x i64> %127, <2 x i64>* %130, align 8, !alias.scope !48, !noalias !45
  %131 = add i64 %86, 16
  %132 = add i64 %87, -4
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %85, !llvm.loop !50

134:                                              ; preds = %85, %74
  %135 = phi i64 [ 0, %74 ], [ %131, %85 ]
  %136 = icmp eq i64 %81, 0
  br i1 %136, label %153, label %137

137:                                              ; preds = %134, %137
  %138 = phi i64 [ %150, %137 ], [ %135, %134 ]
  %139 = phi i64 [ %151, %137 ], [ %81, %134 ]
  %140 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %12, i64 %138
  %141 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %6, i64 %138
  %142 = bitcast %"class.blink::PaintLayer"** %140 to <2 x i64>*
  %143 = load <2 x i64>, <2 x i64>* %142, align 8, !alias.scope !45
  %144 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %140, i64 2
  %145 = bitcast %"class.blink::PaintLayer"** %144 to <2 x i64>*
  %146 = load <2 x i64>, <2 x i64>* %145, align 8, !alias.scope !45
  %147 = bitcast %"class.blink::PaintLayer"** %141 to <2 x i64>*
  store <2 x i64> %143, <2 x i64>* %147, align 8, !alias.scope !48, !noalias !45
  %148 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %141, i64 2
  %149 = bitcast %"class.blink::PaintLayer"** %148 to <2 x i64>*
  store <2 x i64> %146, <2 x i64>* %149, align 8, !alias.scope !48, !noalias !45
  %150 = add i64 %138, 4
  %151 = add i64 %139, -1
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %137, !llvm.loop !51

153:                                              ; preds = %137, %134
  %154 = icmp eq i64 %34, %75
  br i1 %154, label %283, label %36

155:                                              ; preds = %23
  %156 = icmp eq %"class.blink::PaintLayer"** %13, %16
  br i1 %156, label %960, label %157

157:                                              ; preds = %155
  %158 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %16, i64 -1
  %159 = ptrtoint %"class.blink::PaintLayer"** %158 to i64
  %160 = sub i64 %159, %24
  %161 = lshr i64 %160, 3
  %162 = add nuw nsw i64 %161, 1
  %163 = icmp ult i64 %162, 4
  br i1 %163, label %164, label %191

164:                                              ; preds = %281, %191, %157
  %165 = phi %"class.blink::PaintLayer"** [ %13, %191 ], [ %13, %157 ], [ %204, %281 ]
  %166 = phi %"class.blink::PaintLayer"** [ %6, %191 ], [ %6, %157 ], [ %205, %281 ]
  %167 = ptrtoint %"class.blink::PaintLayer"** %165 to i64
  %168 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %16, i64 -1
  %169 = ptrtoint %"class.blink::PaintLayer"** %168 to i64
  %170 = sub i64 %169, %167
  %171 = lshr i64 %170, 3
  %172 = add nuw nsw i64 %171, 1
  %173 = and i64 %172, 7
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %186, label %175

175:                                              ; preds = %164, %175
  %176 = phi %"class.blink::PaintLayer"** [ %182, %175 ], [ %165, %164 ]
  %177 = phi %"class.blink::PaintLayer"** [ %183, %175 ], [ %166, %164 ]
  %178 = phi i64 [ %184, %175 ], [ %173, %164 ]
  %179 = bitcast %"class.blink::PaintLayer"** %176 to i64*
  %180 = load i64, i64* %179, align 8
  %181 = bitcast %"class.blink::PaintLayer"** %177 to i64*
  store i64 %180, i64* %181, align 8
  %182 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %176, i64 1
  %183 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %177, i64 1
  %184 = add i64 %178, -1
  %185 = icmp eq i64 %184, 0
  br i1 %185, label %186, label %175, !llvm.loop !52

186:                                              ; preds = %175, %164
  %187 = phi %"class.blink::PaintLayer"** [ undef, %164 ], [ %183, %175 ]
  %188 = phi %"class.blink::PaintLayer"** [ %165, %164 ], [ %182, %175 ]
  %189 = phi %"class.blink::PaintLayer"** [ %166, %164 ], [ %183, %175 ]
  %190 = icmp ult i64 %170, 56
  br i1 %190, label %363, label %553

191:                                              ; preds = %157
  %192 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %16, i64 -1
  %193 = ptrtoint %"class.blink::PaintLayer"** %192 to i64
  %194 = sub i64 %193, %24
  %195 = lshr i64 %194, 3
  %196 = add nuw nsw i64 %195, 1
  %197 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %6, i64 %196
  %198 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %13, i64 %196
  %199 = icmp ugt %"class.blink::PaintLayer"** %198, %6
  %200 = icmp ult %"class.blink::PaintLayer"** %13, %197
  %201 = and i1 %199, %200
  br i1 %201, label %164, label %202

202:                                              ; preds = %191
  %203 = and i64 %162, 4611686018427387900
  %204 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %13, i64 %203
  %205 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %6, i64 %203
  %206 = add nsw i64 %203, -4
  %207 = lshr exact i64 %206, 2
  %208 = add nuw nsw i64 %207, 1
  %209 = and i64 %208, 3
  %210 = icmp ult i64 %206, 12
  br i1 %210, label %262, label %211

211:                                              ; preds = %202
  %212 = sub nsw i64 %208, %209
  br label %213

213:                                              ; preds = %213, %211
  %214 = phi i64 [ 0, %211 ], [ %259, %213 ]
  %215 = phi i64 [ %212, %211 ], [ %260, %213 ]
  %216 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %13, i64 %214
  %217 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %6, i64 %214
  %218 = bitcast %"class.blink::PaintLayer"** %216 to <2 x i64>*
  %219 = load <2 x i64>, <2 x i64>* %218, align 8, !alias.scope !53
  %220 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %216, i64 2
  %221 = bitcast %"class.blink::PaintLayer"** %220 to <2 x i64>*
  %222 = load <2 x i64>, <2 x i64>* %221, align 8, !alias.scope !53
  %223 = bitcast %"class.blink::PaintLayer"** %217 to <2 x i64>*
  store <2 x i64> %219, <2 x i64>* %223, align 8, !alias.scope !56, !noalias !53
  %224 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %217, i64 2
  %225 = bitcast %"class.blink::PaintLayer"** %224 to <2 x i64>*
  store <2 x i64> %222, <2 x i64>* %225, align 8, !alias.scope !56, !noalias !53
  %226 = or i64 %214, 4
  %227 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %13, i64 %226
  %228 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %6, i64 %226
  %229 = bitcast %"class.blink::PaintLayer"** %227 to <2 x i64>*
  %230 = load <2 x i64>, <2 x i64>* %229, align 8, !alias.scope !53
  %231 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %227, i64 2
  %232 = bitcast %"class.blink::PaintLayer"** %231 to <2 x i64>*
  %233 = load <2 x i64>, <2 x i64>* %232, align 8, !alias.scope !53
  %234 = bitcast %"class.blink::PaintLayer"** %228 to <2 x i64>*
  store <2 x i64> %230, <2 x i64>* %234, align 8, !alias.scope !56, !noalias !53
  %235 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %228, i64 2
  %236 = bitcast %"class.blink::PaintLayer"** %235 to <2 x i64>*
  store <2 x i64> %233, <2 x i64>* %236, align 8, !alias.scope !56, !noalias !53
  %237 = or i64 %214, 8
  %238 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %13, i64 %237
  %239 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %6, i64 %237
  %240 = bitcast %"class.blink::PaintLayer"** %238 to <2 x i64>*
  %241 = load <2 x i64>, <2 x i64>* %240, align 8, !alias.scope !53
  %242 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %238, i64 2
  %243 = bitcast %"class.blink::PaintLayer"** %242 to <2 x i64>*
  %244 = load <2 x i64>, <2 x i64>* %243, align 8, !alias.scope !53
  %245 = bitcast %"class.blink::PaintLayer"** %239 to <2 x i64>*
  store <2 x i64> %241, <2 x i64>* %245, align 8, !alias.scope !56, !noalias !53
  %246 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %239, i64 2
  %247 = bitcast %"class.blink::PaintLayer"** %246 to <2 x i64>*
  store <2 x i64> %244, <2 x i64>* %247, align 8, !alias.scope !56, !noalias !53
  %248 = or i64 %214, 12
  %249 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %13, i64 %248
  %250 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %6, i64 %248
  %251 = bitcast %"class.blink::PaintLayer"** %249 to <2 x i64>*
  %252 = load <2 x i64>, <2 x i64>* %251, align 8, !alias.scope !53
  %253 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %249, i64 2
  %254 = bitcast %"class.blink::PaintLayer"** %253 to <2 x i64>*
  %255 = load <2 x i64>, <2 x i64>* %254, align 8, !alias.scope !53
  %256 = bitcast %"class.blink::PaintLayer"** %250 to <2 x i64>*
  store <2 x i64> %252, <2 x i64>* %256, align 8, !alias.scope !56, !noalias !53
  %257 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %250, i64 2
  %258 = bitcast %"class.blink::PaintLayer"** %257 to <2 x i64>*
  store <2 x i64> %255, <2 x i64>* %258, align 8, !alias.scope !56, !noalias !53
  %259 = add i64 %214, 16
  %260 = add i64 %215, -4
  %261 = icmp eq i64 %260, 0
  br i1 %261, label %262, label %213, !llvm.loop !58

262:                                              ; preds = %213, %202
  %263 = phi i64 [ 0, %202 ], [ %259, %213 ]
  %264 = icmp eq i64 %209, 0
  br i1 %264, label %281, label %265

265:                                              ; preds = %262, %265
  %266 = phi i64 [ %278, %265 ], [ %263, %262 ]
  %267 = phi i64 [ %279, %265 ], [ %209, %262 ]
  %268 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %13, i64 %266
  %269 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %6, i64 %266
  %270 = bitcast %"class.blink::PaintLayer"** %268 to <2 x i64>*
  %271 = load <2 x i64>, <2 x i64>* %270, align 8, !alias.scope !53
  %272 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %268, i64 2
  %273 = bitcast %"class.blink::PaintLayer"** %272 to <2 x i64>*
  %274 = load <2 x i64>, <2 x i64>* %273, align 8, !alias.scope !53
  %275 = bitcast %"class.blink::PaintLayer"** %269 to <2 x i64>*
  store <2 x i64> %271, <2 x i64>* %275, align 8, !alias.scope !56, !noalias !53
  %276 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %269, i64 2
  %277 = bitcast %"class.blink::PaintLayer"** %276 to <2 x i64>*
  store <2 x i64> %274, <2 x i64>* %277, align 8, !alias.scope !56, !noalias !53
  %278 = add i64 %266, 4
  %279 = add i64 %267, -1
  %280 = icmp eq i64 %279, 0
  br i1 %280, label %281, label %265, !llvm.loop !59

281:                                              ; preds = %265, %262
  %282 = icmp eq i64 %162, %203
  br i1 %282, label %363, label %164

283:                                              ; preds = %58, %319, %153
  %284 = phi %"class.blink::PaintLayer"** [ %77, %153 ], [ %59, %58 ], [ %361, %319 ]
  %285 = icmp eq %"class.blink::PaintLayer"** %284, %6
  br i1 %285, label %960, label %286

286:                                              ; preds = %283, %314
  %287 = phi %"class.blink::PaintLayer"** [ %316, %314 ], [ %6, %283 ]
  %288 = phi %"class.blink::PaintLayer"** [ %317, %314 ], [ %12, %283 ]
  %289 = phi %"class.blink::PaintLayer"** [ %315, %314 ], [ %13, %283 ]
  %290 = icmp eq %"class.blink::PaintLayer"** %289, %16
  br i1 %290, label %291, label %299

291:                                              ; preds = %286
  %292 = ptrtoint %"class.blink::PaintLayer"** %284 to i64
  %293 = ptrtoint %"class.blink::PaintLayer"** %287 to i64
  %294 = sub i64 %292, %293
  %295 = icmp eq i64 %294, 0
  br i1 %295, label %960, label %296

296:                                              ; preds = %291
  %297 = bitcast %"class.blink::PaintLayer"** %288 to i8*
  %298 = bitcast %"class.blink::PaintLayer"** %287 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %297, i8* align 8 %298, i64 %294, i1 false) #9
  br label %960

299:                                              ; preds = %286
  %300 = load i1 (%"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*)*, i1 (%"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*)** %3, align 8
  %301 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %289, align 8
  %302 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %287, align 8
  %303 = tail call zeroext i1 %300(%"class.blink::PaintLayer"* %301, %"class.blink::PaintLayer"* %302) #9
  br i1 %303, label %304, label %309

304:                                              ; preds = %299
  %305 = bitcast %"class.blink::PaintLayer"** %289 to i64*
  %306 = load i64, i64* %305, align 8
  %307 = bitcast %"class.blink::PaintLayer"** %288 to i64*
  store i64 %306, i64* %307, align 8
  %308 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %289, i64 1
  br label %314

309:                                              ; preds = %299
  %310 = bitcast %"class.blink::PaintLayer"** %287 to i64*
  %311 = load i64, i64* %310, align 8
  %312 = bitcast %"class.blink::PaintLayer"** %288 to i64*
  store i64 %311, i64* %312, align 8
  %313 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %287, i64 1
  br label %314

314:                                              ; preds = %309, %304
  %315 = phi %"class.blink::PaintLayer"** [ %308, %304 ], [ %289, %309 ]
  %316 = phi %"class.blink::PaintLayer"** [ %287, %304 ], [ %313, %309 ]
  %317 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %288, i64 1
  %318 = icmp eq %"class.blink::PaintLayer"** %316, %284
  br i1 %318, label %960, label %286

319:                                              ; preds = %58, %319
  %320 = phi %"class.blink::PaintLayer"** [ %360, %319 ], [ %60, %58 ]
  %321 = phi %"class.blink::PaintLayer"** [ %361, %319 ], [ %61, %58 ]
  %322 = bitcast %"class.blink::PaintLayer"** %320 to i64*
  %323 = load i64, i64* %322, align 8
  %324 = bitcast %"class.blink::PaintLayer"** %321 to i64*
  store i64 %323, i64* %324, align 8
  %325 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %320, i64 1
  %326 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %321, i64 1
  %327 = bitcast %"class.blink::PaintLayer"** %325 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = bitcast %"class.blink::PaintLayer"** %326 to i64*
  store i64 %328, i64* %329, align 8
  %330 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %320, i64 2
  %331 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %321, i64 2
  %332 = bitcast %"class.blink::PaintLayer"** %330 to i64*
  %333 = load i64, i64* %332, align 8
  %334 = bitcast %"class.blink::PaintLayer"** %331 to i64*
  store i64 %333, i64* %334, align 8
  %335 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %320, i64 3
  %336 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %321, i64 3
  %337 = bitcast %"class.blink::PaintLayer"** %335 to i64*
  %338 = load i64, i64* %337, align 8
  %339 = bitcast %"class.blink::PaintLayer"** %336 to i64*
  store i64 %338, i64* %339, align 8
  %340 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %320, i64 4
  %341 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %321, i64 4
  %342 = bitcast %"class.blink::PaintLayer"** %340 to i64*
  %343 = load i64, i64* %342, align 8
  %344 = bitcast %"class.blink::PaintLayer"** %341 to i64*
  store i64 %343, i64* %344, align 8
  %345 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %320, i64 5
  %346 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %321, i64 5
  %347 = bitcast %"class.blink::PaintLayer"** %345 to i64*
  %348 = load i64, i64* %347, align 8
  %349 = bitcast %"class.blink::PaintLayer"** %346 to i64*
  store i64 %348, i64* %349, align 8
  %350 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %320, i64 6
  %351 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %321, i64 6
  %352 = bitcast %"class.blink::PaintLayer"** %350 to i64*
  %353 = load i64, i64* %352, align 8
  %354 = bitcast %"class.blink::PaintLayer"** %351 to i64*
  store i64 %353, i64* %354, align 8
  %355 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %320, i64 7
  %356 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %321, i64 7
  %357 = bitcast %"class.blink::PaintLayer"** %355 to i64*
  %358 = load i64, i64* %357, align 8
  %359 = bitcast %"class.blink::PaintLayer"** %356 to i64*
  store i64 %358, i64* %359, align 8
  %360 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %320, i64 8
  %361 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %321, i64 8
  %362 = icmp eq %"class.blink::PaintLayer"** %360, %13
  br i1 %362, label %283, label %319, !llvm.loop !60

363:                                              ; preds = %186, %553, %281
  %364 = phi %"class.blink::PaintLayer"** [ %205, %281 ], [ %187, %186 ], [ %595, %553 ]
  %365 = icmp eq %"class.blink::PaintLayer"** %364, %6
  br i1 %365, label %960, label %366

366:                                              ; preds = %363, %537
  %367 = phi %"class.blink::PaintLayer"** [ %551, %537 ], [ %16, %363 ]
  %368 = phi %"class.blink::PaintLayer"** [ %546, %537 ], [ %364, %363 ]
  %369 = phi %"class.blink::PaintLayer"** [ %545, %537 ], [ %13, %363 ]
  %370 = icmp eq %"class.blink::PaintLayer"** %369, %12
  br i1 %370, label %371, label %537

371:                                              ; preds = %366
  %372 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %368, i64 -1
  %373 = ptrtoint %"class.blink::PaintLayer"** %372 to i64
  %374 = sub i64 %373, %9
  %375 = lshr i64 %374, 3
  %376 = add nuw nsw i64 %375, 1
  %377 = icmp ult i64 %376, 4
  br i1 %377, label %468, label %378

378:                                              ; preds = %371
  %379 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %368, i64 -1
  %380 = ptrtoint %"class.blink::PaintLayer"** %379 to i64
  %381 = sub i64 %380, %9
  %382 = lshr i64 %381, 3
  %383 = xor i64 %382, -1
  %384 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %367, i64 %383
  %385 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %368, i64 %383
  %386 = icmp ult %"class.blink::PaintLayer"** %384, %368
  %387 = icmp ult %"class.blink::PaintLayer"** %385, %367
  %388 = and i1 %386, %387
  br i1 %388, label %468, label %389

389:                                              ; preds = %378
  %390 = and i64 %376, 4611686018427387900
  %391 = sub nsw i64 0, %390
  %392 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %368, i64 %391
  %393 = sub nsw i64 0, %390
  %394 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %367, i64 %393
  %395 = add nsw i64 %390, -4
  %396 = lshr exact i64 %395, 2
  %397 = add nuw nsw i64 %396, 1
  %398 = and i64 %397, 1
  %399 = icmp eq i64 %395, 0
  br i1 %399, label %446, label %400

400:                                              ; preds = %389
  %401 = sub nuw nsw i64 %397, %398
  %402 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %368, i64 -1
  %403 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %367, i64 -1
  %404 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %368, i64 -1
  %405 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %367, i64 -1
  br label %406

406:                                              ; preds = %406, %400
  %407 = phi i64 [ 0, %400 ], [ %441, %406 ]
  %408 = phi i64 [ %401, %400 ], [ %442, %406 ]
  %409 = sub i64 0, %407
  %410 = sub i64 0, %407
  %411 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %402, i64 %409
  %412 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %411, i64 -1
  %413 = bitcast %"class.blink::PaintLayer"** %412 to <2 x i64>*
  %414 = load <2 x i64>, <2 x i64>* %413, align 8, !alias.scope !61
  %415 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %411, i64 -2
  %416 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %415, i64 -1
  %417 = bitcast %"class.blink::PaintLayer"** %416 to <2 x i64>*
  %418 = load <2 x i64>, <2 x i64>* %417, align 8, !alias.scope !61
  %419 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %403, i64 %410
  %420 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %419, i64 -1
  %421 = bitcast %"class.blink::PaintLayer"** %420 to <2 x i64>*
  store <2 x i64> %414, <2 x i64>* %421, align 8, !alias.scope !64, !noalias !61
  %422 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %419, i64 -2
  %423 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %422, i64 -1
  %424 = bitcast %"class.blink::PaintLayer"** %423 to <2 x i64>*
  store <2 x i64> %418, <2 x i64>* %424, align 8, !alias.scope !64, !noalias !61
  %425 = sub nuw nsw i64 -4, %407
  %426 = sub nuw nsw i64 -4, %407
  %427 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %404, i64 %425
  %428 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %427, i64 -1
  %429 = bitcast %"class.blink::PaintLayer"** %428 to <2 x i64>*
  %430 = load <2 x i64>, <2 x i64>* %429, align 8, !alias.scope !61
  %431 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %427, i64 -2
  %432 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %431, i64 -1
  %433 = bitcast %"class.blink::PaintLayer"** %432 to <2 x i64>*
  %434 = load <2 x i64>, <2 x i64>* %433, align 8, !alias.scope !61
  %435 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %405, i64 %426
  %436 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %435, i64 -1
  %437 = bitcast %"class.blink::PaintLayer"** %436 to <2 x i64>*
  store <2 x i64> %430, <2 x i64>* %437, align 8, !alias.scope !64, !noalias !61
  %438 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %435, i64 -2
  %439 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %438, i64 -1
  %440 = bitcast %"class.blink::PaintLayer"** %439 to <2 x i64>*
  store <2 x i64> %434, <2 x i64>* %440, align 8, !alias.scope !64, !noalias !61
  %441 = add i64 %407, 8
  %442 = add i64 %408, -2
  %443 = icmp eq i64 %442, 0
  br i1 %443, label %444, label %406, !llvm.loop !66

444:                                              ; preds = %406
  %445 = sub nuw nsw i64 -8, %407
  br label %446

446:                                              ; preds = %444, %389
  %447 = phi i64 [ 0, %389 ], [ %445, %444 ]
  %448 = icmp eq i64 %398, 0
  br i1 %448, label %466, label %449

449:                                              ; preds = %446
  %450 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %368, i64 -1
  %451 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %367, i64 -1
  %452 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %450, i64 %447
  %453 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %452, i64 -1
  %454 = bitcast %"class.blink::PaintLayer"** %453 to <2 x i64>*
  %455 = load <2 x i64>, <2 x i64>* %454, align 8, !alias.scope !61
  %456 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %452, i64 -2
  %457 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %456, i64 -1
  %458 = bitcast %"class.blink::PaintLayer"** %457 to <2 x i64>*
  %459 = load <2 x i64>, <2 x i64>* %458, align 8, !alias.scope !61
  %460 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %451, i64 %447
  %461 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %460, i64 -1
  %462 = bitcast %"class.blink::PaintLayer"** %461 to <2 x i64>*
  store <2 x i64> %455, <2 x i64>* %462, align 8, !alias.scope !64, !noalias !61
  %463 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %460, i64 -2
  %464 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %463, i64 -1
  %465 = bitcast %"class.blink::PaintLayer"** %464 to <2 x i64>*
  store <2 x i64> %459, <2 x i64>* %465, align 8, !alias.scope !64, !noalias !61
  br label %466

466:                                              ; preds = %446, %449
  %467 = icmp eq i64 %376, %390
  br i1 %467, label %960, label %468

468:                                              ; preds = %466, %378, %371
  %469 = phi %"class.blink::PaintLayer"** [ %368, %378 ], [ %368, %371 ], [ %392, %466 ]
  %470 = phi %"class.blink::PaintLayer"** [ %367, %378 ], [ %367, %371 ], [ %394, %466 ]
  %471 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %469, i64 -1
  %472 = ptrtoint %"class.blink::PaintLayer"** %471 to i64
  %473 = sub i64 %472, %9
  %474 = lshr i64 %473, 3
  %475 = add nuw nsw i64 %474, 1
  %476 = and i64 %475, 7
  %477 = icmp eq i64 %476, 0
  br i1 %477, label %489, label %478

478:                                              ; preds = %468, %478
  %479 = phi %"class.blink::PaintLayer"** [ %482, %478 ], [ %469, %468 ]
  %480 = phi %"class.blink::PaintLayer"** [ %485, %478 ], [ %470, %468 ]
  %481 = phi i64 [ %487, %478 ], [ %476, %468 ]
  %482 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %479, i64 -1
  %483 = bitcast %"class.blink::PaintLayer"** %482 to i64*
  %484 = load i64, i64* %483, align 8
  %485 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %480, i64 -1
  %486 = bitcast %"class.blink::PaintLayer"** %485 to i64*
  store i64 %484, i64* %486, align 8
  %487 = add i64 %481, -1
  %488 = icmp eq i64 %487, 0
  br i1 %488, label %489, label %478, !llvm.loop !67

489:                                              ; preds = %478, %468
  %490 = phi %"class.blink::PaintLayer"** [ %469, %468 ], [ %482, %478 ]
  %491 = phi %"class.blink::PaintLayer"** [ %470, %468 ], [ %485, %478 ]
  %492 = icmp ult i64 %473, 56
  br i1 %492, label %960, label %493

493:                                              ; preds = %489, %493
  %494 = phi %"class.blink::PaintLayer"** [ %531, %493 ], [ %490, %489 ]
  %495 = phi %"class.blink::PaintLayer"** [ %534, %493 ], [ %491, %489 ]
  %496 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %494, i64 -1
  %497 = bitcast %"class.blink::PaintLayer"** %496 to i64*
  %498 = load i64, i64* %497, align 8
  %499 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %495, i64 -1
  %500 = bitcast %"class.blink::PaintLayer"** %499 to i64*
  store i64 %498, i64* %500, align 8
  %501 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %494, i64 -2
  %502 = bitcast %"class.blink::PaintLayer"** %501 to i64*
  %503 = load i64, i64* %502, align 8
  %504 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %495, i64 -2
  %505 = bitcast %"class.blink::PaintLayer"** %504 to i64*
  store i64 %503, i64* %505, align 8
  %506 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %494, i64 -3
  %507 = bitcast %"class.blink::PaintLayer"** %506 to i64*
  %508 = load i64, i64* %507, align 8
  %509 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %495, i64 -3
  %510 = bitcast %"class.blink::PaintLayer"** %509 to i64*
  store i64 %508, i64* %510, align 8
  %511 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %494, i64 -4
  %512 = bitcast %"class.blink::PaintLayer"** %511 to i64*
  %513 = load i64, i64* %512, align 8
  %514 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %495, i64 -4
  %515 = bitcast %"class.blink::PaintLayer"** %514 to i64*
  store i64 %513, i64* %515, align 8
  %516 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %494, i64 -5
  %517 = bitcast %"class.blink::PaintLayer"** %516 to i64*
  %518 = load i64, i64* %517, align 8
  %519 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %495, i64 -5
  %520 = bitcast %"class.blink::PaintLayer"** %519 to i64*
  store i64 %518, i64* %520, align 8
  %521 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %494, i64 -6
  %522 = bitcast %"class.blink::PaintLayer"** %521 to i64*
  %523 = load i64, i64* %522, align 8
  %524 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %495, i64 -6
  %525 = bitcast %"class.blink::PaintLayer"** %524 to i64*
  store i64 %523, i64* %525, align 8
  %526 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %494, i64 -7
  %527 = bitcast %"class.blink::PaintLayer"** %526 to i64*
  %528 = load i64, i64* %527, align 8
  %529 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %495, i64 -7
  %530 = bitcast %"class.blink::PaintLayer"** %529 to i64*
  store i64 %528, i64* %530, align 8
  %531 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %494, i64 -8
  %532 = bitcast %"class.blink::PaintLayer"** %531 to i64*
  %533 = load i64, i64* %532, align 8
  %534 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %495, i64 -8
  %535 = bitcast %"class.blink::PaintLayer"** %534 to i64*
  store i64 %533, i64* %535, align 8
  %536 = icmp eq %"class.blink::PaintLayer"** %531, %6
  br i1 %536, label %960, label %493, !llvm.loop !68

537:                                              ; preds = %366
  %538 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %369, i64 -1
  %539 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %368, i64 -1
  %540 = load i1 (%"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*)*, i1 (%"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*)** %3, align 8
  %541 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %539, align 8
  %542 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %538, align 8
  %543 = tail call zeroext i1 %540(%"class.blink::PaintLayer"* %541, %"class.blink::PaintLayer"* %542) #9
  %544 = select i1 %543, %"class.blink::PaintLayer"** %538, %"class.blink::PaintLayer"** %539
  %545 = select i1 %543, %"class.blink::PaintLayer"** %538, %"class.blink::PaintLayer"** %369
  %546 = select i1 %543, %"class.blink::PaintLayer"** %368, %"class.blink::PaintLayer"** %539
  %547 = bitcast %"class.blink::PaintLayer"** %544 to i64*
  %548 = load i64, i64* %547, align 8
  %549 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %367, i64 -1
  %550 = bitcast %"class.blink::PaintLayer"** %549 to i64*
  store i64 %548, i64* %550, align 8
  %551 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %367, i64 -1
  %552 = icmp eq %"class.blink::PaintLayer"** %546, %6
  br i1 %552, label %960, label %366

553:                                              ; preds = %186, %553
  %554 = phi %"class.blink::PaintLayer"** [ %594, %553 ], [ %188, %186 ]
  %555 = phi %"class.blink::PaintLayer"** [ %595, %553 ], [ %189, %186 ]
  %556 = bitcast %"class.blink::PaintLayer"** %554 to i64*
  %557 = load i64, i64* %556, align 8
  %558 = bitcast %"class.blink::PaintLayer"** %555 to i64*
  store i64 %557, i64* %558, align 8
  %559 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %554, i64 1
  %560 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %555, i64 1
  %561 = bitcast %"class.blink::PaintLayer"** %559 to i64*
  %562 = load i64, i64* %561, align 8
  %563 = bitcast %"class.blink::PaintLayer"** %560 to i64*
  store i64 %562, i64* %563, align 8
  %564 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %554, i64 2
  %565 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %555, i64 2
  %566 = bitcast %"class.blink::PaintLayer"** %564 to i64*
  %567 = load i64, i64* %566, align 8
  %568 = bitcast %"class.blink::PaintLayer"** %565 to i64*
  store i64 %567, i64* %568, align 8
  %569 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %554, i64 3
  %570 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %555, i64 3
  %571 = bitcast %"class.blink::PaintLayer"** %569 to i64*
  %572 = load i64, i64* %571, align 8
  %573 = bitcast %"class.blink::PaintLayer"** %570 to i64*
  store i64 %572, i64* %573, align 8
  %574 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %554, i64 4
  %575 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %555, i64 4
  %576 = bitcast %"class.blink::PaintLayer"** %574 to i64*
  %577 = load i64, i64* %576, align 8
  %578 = bitcast %"class.blink::PaintLayer"** %575 to i64*
  store i64 %577, i64* %578, align 8
  %579 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %554, i64 5
  %580 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %555, i64 5
  %581 = bitcast %"class.blink::PaintLayer"** %579 to i64*
  %582 = load i64, i64* %581, align 8
  %583 = bitcast %"class.blink::PaintLayer"** %580 to i64*
  store i64 %582, i64* %583, align 8
  %584 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %554, i64 6
  %585 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %555, i64 6
  %586 = bitcast %"class.blink::PaintLayer"** %584 to i64*
  %587 = load i64, i64* %586, align 8
  %588 = bitcast %"class.blink::PaintLayer"** %585 to i64*
  store i64 %587, i64* %588, align 8
  %589 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %554, i64 7
  %590 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %555, i64 7
  %591 = bitcast %"class.blink::PaintLayer"** %589 to i64*
  %592 = load i64, i64* %591, align 8
  %593 = bitcast %"class.blink::PaintLayer"** %590 to i64*
  store i64 %592, i64* %593, align 8
  %594 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %554, i64 8
  %595 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %555, i64 8
  %596 = icmp eq %"class.blink::PaintLayer"** %594, %16
  br i1 %596, label %363, label %553, !llvm.loop !69

597:                                              ; preds = %21, %604
  %598 = phi %"class.blink::PaintLayer"** [ %605, %604 ], [ %12, %21 ]
  %599 = phi i64 [ %606, %604 ], [ %15, %21 ]
  %600 = load i1 (%"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*)*, i1 (%"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*)** %3, align 8
  %601 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %13, align 8
  %602 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %598, align 8
  %603 = tail call zeroext i1 %600(%"class.blink::PaintLayer"* %601, %"class.blink::PaintLayer"* %602) #9
  br i1 %603, label %608, label %604

604:                                              ; preds = %597
  %605 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %598, i64 1
  %606 = add nsw i64 %599, -1
  %607 = icmp eq i64 %606, 0
  br i1 %607, label %960, label %597

608:                                              ; preds = %597
  %609 = icmp slt i64 %599, %14
  br i1 %609, label %610, label %641

610:                                              ; preds = %608
  %611 = sdiv i64 %14, 2
  %612 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %13, i64 %611
  %613 = ptrtoint %"class.blink::PaintLayer"** %13 to i64
  %614 = ptrtoint %"class.blink::PaintLayer"** %598 to i64
  %615 = sub i64 %613, %614
  %616 = icmp eq i64 %615, 0
  br i1 %616, label %636, label %617

617:                                              ; preds = %610
  %618 = ashr exact i64 %615, 3
  br label %619

619:                                              ; preds = %619, %617
  %620 = phi i64 [ %632, %619 ], [ %618, %617 ]
  %621 = phi %"class.blink::PaintLayer"** [ %631, %619 ], [ %598, %617 ]
  %622 = lshr i64 %620, 1
  %623 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %621, i64 %622
  %624 = load i1 (%"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*)*, i1 (%"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*)** %3, align 8
  %625 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %612, align 8
  %626 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %623, align 8
  %627 = tail call zeroext i1 %624(%"class.blink::PaintLayer"* %625, %"class.blink::PaintLayer"* %626) #9
  %628 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %623, i64 1
  %629 = xor i64 %622, -1
  %630 = add i64 %620, %629
  %631 = select i1 %627, %"class.blink::PaintLayer"** %621, %"class.blink::PaintLayer"** %628
  %632 = select i1 %627, i64 %622, i64 %630
  %633 = icmp eq i64 %632, 0
  br i1 %633, label %634, label %619

634:                                              ; preds = %619
  %635 = ptrtoint %"class.blink::PaintLayer"** %631 to i64
  br label %636

636:                                              ; preds = %634, %610
  %637 = phi i64 [ %635, %634 ], [ %614, %610 ]
  %638 = phi %"class.blink::PaintLayer"** [ %631, %634 ], [ %598, %610 ]
  %639 = sub i64 %637, %614
  %640 = ashr exact i64 %639, 3
  br label %679

641:                                              ; preds = %608
  %642 = icmp eq i64 %599, 1
  br i1 %642, label %643, label %648

643:                                              ; preds = %641
  %644 = bitcast %"class.blink::PaintLayer"** %598 to i64*
  %645 = load i64, i64* %644, align 8
  %646 = bitcast %"class.blink::PaintLayer"** %13 to i64*
  %647 = load i64, i64* %646, align 8
  store i64 %647, i64* %644, align 8
  store i64 %645, i64* %646, align 8
  br label %960

648:                                              ; preds = %641
  %649 = sdiv i64 %599, 2
  %650 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %598, i64 %649
  %651 = ptrtoint %"class.blink::PaintLayer"** %16 to i64
  %652 = ptrtoint %"class.blink::PaintLayer"** %13 to i64
  %653 = sub i64 %651, %652
  %654 = icmp eq i64 %653, 0
  br i1 %654, label %674, label %655

655:                                              ; preds = %648
  %656 = ashr exact i64 %653, 3
  br label %657

657:                                              ; preds = %657, %655
  %658 = phi i64 [ %670, %657 ], [ %656, %655 ]
  %659 = phi %"class.blink::PaintLayer"** [ %669, %657 ], [ %13, %655 ]
  %660 = lshr i64 %658, 1
  %661 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %659, i64 %660
  %662 = load i1 (%"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*)*, i1 (%"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*)** %3, align 8
  %663 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %661, align 8
  %664 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %650, align 8
  %665 = tail call zeroext i1 %662(%"class.blink::PaintLayer"* %663, %"class.blink::PaintLayer"* %664) #9
  %666 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %661, i64 1
  %667 = xor i64 %660, -1
  %668 = add i64 %658, %667
  %669 = select i1 %665, %"class.blink::PaintLayer"** %666, %"class.blink::PaintLayer"** %659
  %670 = select i1 %665, i64 %668, i64 %660
  %671 = icmp eq i64 %670, 0
  br i1 %671, label %672, label %657

672:                                              ; preds = %657
  %673 = ptrtoint %"class.blink::PaintLayer"** %669 to i64
  br label %674

674:                                              ; preds = %672, %648
  %675 = phi i64 [ %673, %672 ], [ %652, %648 ]
  %676 = phi %"class.blink::PaintLayer"** [ %669, %672 ], [ %13, %648 ]
  %677 = sub i64 %675, %652
  %678 = ashr exact i64 %677, 3
  br label %679

679:                                              ; preds = %674, %636
  %680 = phi %"class.blink::PaintLayer"** [ %638, %636 ], [ %650, %674 ]
  %681 = phi %"class.blink::PaintLayer"** [ %612, %636 ], [ %676, %674 ]
  %682 = phi i64 [ %640, %636 ], [ %649, %674 ]
  %683 = phi i64 [ %611, %636 ], [ %678, %674 ]
  %684 = ptrtoint %"class.blink::PaintLayer"** %680 to i64
  %685 = bitcast %"class.blink::PaintLayer"** %680 to i8*
  %686 = sub nsw i64 %599, %682
  %687 = sub nsw i64 %14, %683
  %688 = icmp eq %"class.blink::PaintLayer"** %680, %13
  br i1 %688, label %946, label %689

689:                                              ; preds = %679
  %690 = icmp eq %"class.blink::PaintLayer"** %13, %681
  br i1 %690, label %946, label %691

691:                                              ; preds = %689
  %692 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %680, i64 1
  %693 = icmp eq %"class.blink::PaintLayer"** %692, %13
  br i1 %693, label %694, label %706

694:                                              ; preds = %691
  %695 = bitcast %"class.blink::PaintLayer"** %680 to i64*
  %696 = load i64, i64* %695, align 8
  %697 = ptrtoint %"class.blink::PaintLayer"** %681 to i64
  %698 = ptrtoint %"class.blink::PaintLayer"** %13 to i64
  %699 = sub i64 %697, %698
  %700 = ashr exact i64 %699, 3
  %701 = icmp eq i64 %699, 0
  br i1 %701, label %703, label %702

702:                                              ; preds = %694
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %685, i8* align 8 %17, i64 %699, i1 false) #9
  br label %703

703:                                              ; preds = %702, %694
  %704 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %680, i64 %700
  %705 = bitcast %"class.blink::PaintLayer"** %704 to i64*
  store i64 %696, i64* %705, align 8
  br label %946

706:                                              ; preds = %691
  %707 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %13, i64 1
  %708 = icmp eq %"class.blink::PaintLayer"** %707, %681
  br i1 %708, label %709, label %724

709:                                              ; preds = %706
  %710 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %681, i64 -1
  %711 = bitcast %"class.blink::PaintLayer"** %710 to i64*
  %712 = load i64, i64* %711, align 8
  %713 = ptrtoint %"class.blink::PaintLayer"** %710 to i64
  %714 = sub i64 %713, %684
  %715 = icmp eq i64 %714, 0
  br i1 %715, label %721, label %716

716:                                              ; preds = %709
  %717 = ashr exact i64 %714, 3
  %718 = sub nsw i64 0, %717
  %719 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %681, i64 %718
  %720 = bitcast %"class.blink::PaintLayer"** %719 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %720, i8* align 8 %685, i64 %714, i1 false) #9
  br label %721

721:                                              ; preds = %716, %709
  %722 = phi %"class.blink::PaintLayer"** [ %719, %716 ], [ %681, %709 ]
  %723 = bitcast %"class.blink::PaintLayer"** %680 to i64*
  store i64 %712, i64* %723, align 8
  br label %946

724:                                              ; preds = %706
  %725 = ptrtoint %"class.blink::PaintLayer"** %13 to i64
  %726 = ptrtoint %"class.blink::PaintLayer"** %680 to i64
  %727 = sub i64 %725, %726
  %728 = ashr exact i64 %727, 3
  %729 = ptrtoint %"class.blink::PaintLayer"** %681 to i64
  %730 = sub i64 %729, %725
  %731 = ashr exact i64 %730, 3
  %732 = icmp eq i64 %728, %731
  br i1 %732, label %733, label %879

733:                                              ; preds = %724
  %734 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %13, i64 -1
  %735 = ptrtoint %"class.blink::PaintLayer"** %734 to i64
  %736 = sub i64 %735, %684
  %737 = lshr i64 %736, 3
  %738 = add nuw nsw i64 %737, 1
  %739 = icmp ult i64 %738, 4
  br i1 %739, label %824, label %740

740:                                              ; preds = %733
  %741 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %680, i64 1
  %742 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %13, i64 -1
  %743 = ptrtoint %"class.blink::PaintLayer"** %742 to i64
  %744 = sub i64 %743, %684
  %745 = lshr i64 %744, 3
  %746 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %741, i64 %745
  %747 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %13, i64 1
  %748 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %747, i64 %745
  %749 = icmp ult %"class.blink::PaintLayer"** %680, %748
  %750 = icmp ult %"class.blink::PaintLayer"** %13, %746
  %751 = and i1 %749, %750
  br i1 %751, label %824, label %752

752:                                              ; preds = %740
  %753 = and i64 %738, 4611686018427387900
  %754 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %13, i64 %753
  %755 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %680, i64 %753
  %756 = add nsw i64 %753, -4
  %757 = lshr exact i64 %756, 2
  %758 = add nuw nsw i64 %757, 1
  %759 = and i64 %758, 1
  %760 = icmp eq i64 %756, 0
  br i1 %760, label %802, label %761

761:                                              ; preds = %752
  %762 = sub nuw nsw i64 %758, %759
  br label %763

763:                                              ; preds = %763, %761
  %764 = phi i64 [ 0, %761 ], [ %799, %763 ]
  %765 = phi i64 [ %762, %761 ], [ %800, %763 ]
  %766 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %13, i64 %764
  %767 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %680, i64 %764
  %768 = bitcast %"class.blink::PaintLayer"** %767 to <2 x i64>*
  %769 = load <2 x i64>, <2 x i64>* %768, align 8, !alias.scope !70, !noalias !73
  %770 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %767, i64 2
  %771 = bitcast %"class.blink::PaintLayer"** %770 to <2 x i64>*
  %772 = load <2 x i64>, <2 x i64>* %771, align 8, !alias.scope !70, !noalias !73
  %773 = bitcast %"class.blink::PaintLayer"** %766 to <2 x i64>*
  %774 = load <2 x i64>, <2 x i64>* %773, align 8, !alias.scope !73
  %775 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %766, i64 2
  %776 = bitcast %"class.blink::PaintLayer"** %775 to <2 x i64>*
  %777 = load <2 x i64>, <2 x i64>* %776, align 8, !alias.scope !73
  %778 = bitcast %"class.blink::PaintLayer"** %767 to <2 x i64>*
  store <2 x i64> %774, <2 x i64>* %778, align 8, !alias.scope !70, !noalias !73
  %779 = bitcast %"class.blink::PaintLayer"** %770 to <2 x i64>*
  store <2 x i64> %777, <2 x i64>* %779, align 8, !alias.scope !70, !noalias !73
  %780 = bitcast %"class.blink::PaintLayer"** %766 to <2 x i64>*
  store <2 x i64> %769, <2 x i64>* %780, align 8, !alias.scope !73
  %781 = bitcast %"class.blink::PaintLayer"** %775 to <2 x i64>*
  store <2 x i64> %772, <2 x i64>* %781, align 8, !alias.scope !73
  %782 = or i64 %764, 4
  %783 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %13, i64 %782
  %784 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %680, i64 %782
  %785 = bitcast %"class.blink::PaintLayer"** %784 to <2 x i64>*
  %786 = load <2 x i64>, <2 x i64>* %785, align 8, !alias.scope !70, !noalias !73
  %787 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %784, i64 2
  %788 = bitcast %"class.blink::PaintLayer"** %787 to <2 x i64>*
  %789 = load <2 x i64>, <2 x i64>* %788, align 8, !alias.scope !70, !noalias !73
  %790 = bitcast %"class.blink::PaintLayer"** %783 to <2 x i64>*
  %791 = load <2 x i64>, <2 x i64>* %790, align 8, !alias.scope !73
  %792 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %783, i64 2
  %793 = bitcast %"class.blink::PaintLayer"** %792 to <2 x i64>*
  %794 = load <2 x i64>, <2 x i64>* %793, align 8, !alias.scope !73
  %795 = bitcast %"class.blink::PaintLayer"** %784 to <2 x i64>*
  store <2 x i64> %791, <2 x i64>* %795, align 8, !alias.scope !70, !noalias !73
  %796 = bitcast %"class.blink::PaintLayer"** %787 to <2 x i64>*
  store <2 x i64> %794, <2 x i64>* %796, align 8, !alias.scope !70, !noalias !73
  %797 = bitcast %"class.blink::PaintLayer"** %783 to <2 x i64>*
  store <2 x i64> %786, <2 x i64>* %797, align 8, !alias.scope !73
  %798 = bitcast %"class.blink::PaintLayer"** %792 to <2 x i64>*
  store <2 x i64> %789, <2 x i64>* %798, align 8, !alias.scope !73
  %799 = add i64 %764, 8
  %800 = add i64 %765, -2
  %801 = icmp eq i64 %800, 0
  br i1 %801, label %802, label %763, !llvm.loop !75

802:                                              ; preds = %763, %752
  %803 = phi i64 [ 0, %752 ], [ %799, %763 ]
  %804 = icmp eq i64 %759, 0
  br i1 %804, label %822, label %805

805:                                              ; preds = %802
  %806 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %13, i64 %803
  %807 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %680, i64 %803
  %808 = bitcast %"class.blink::PaintLayer"** %807 to <2 x i64>*
  %809 = load <2 x i64>, <2 x i64>* %808, align 8, !alias.scope !70, !noalias !73
  %810 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %807, i64 2
  %811 = bitcast %"class.blink::PaintLayer"** %810 to <2 x i64>*
  %812 = load <2 x i64>, <2 x i64>* %811, align 8, !alias.scope !70, !noalias !73
  %813 = bitcast %"class.blink::PaintLayer"** %806 to <2 x i64>*
  %814 = load <2 x i64>, <2 x i64>* %813, align 8, !alias.scope !73
  %815 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %806, i64 2
  %816 = bitcast %"class.blink::PaintLayer"** %815 to <2 x i64>*
  %817 = load <2 x i64>, <2 x i64>* %816, align 8, !alias.scope !73
  %818 = bitcast %"class.blink::PaintLayer"** %807 to <2 x i64>*
  store <2 x i64> %814, <2 x i64>* %818, align 8, !alias.scope !70, !noalias !73
  %819 = bitcast %"class.blink::PaintLayer"** %810 to <2 x i64>*
  store <2 x i64> %817, <2 x i64>* %819, align 8, !alias.scope !70, !noalias !73
  %820 = bitcast %"class.blink::PaintLayer"** %806 to <2 x i64>*
  store <2 x i64> %809, <2 x i64>* %820, align 8, !alias.scope !73
  %821 = bitcast %"class.blink::PaintLayer"** %815 to <2 x i64>*
  store <2 x i64> %812, <2 x i64>* %821, align 8, !alias.scope !73
  br label %822

822:                                              ; preds = %802, %805
  %823 = icmp eq i64 %738, %753
  br i1 %823, label %946, label %824

824:                                              ; preds = %822, %740, %733
  %825 = phi %"class.blink::PaintLayer"** [ %13, %740 ], [ %13, %733 ], [ %754, %822 ]
  %826 = phi %"class.blink::PaintLayer"** [ %680, %740 ], [ %680, %733 ], [ %755, %822 ]
  %827 = ptrtoint %"class.blink::PaintLayer"** %826 to i64
  %828 = getelementptr %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %13, i64 -1
  %829 = ptrtoint %"class.blink::PaintLayer"** %828 to i64
  %830 = sub i64 %829, %827
  %831 = lshr i64 %830, 3
  %832 = add nuw nsw i64 %831, 1
  %833 = and i64 %832, 3
  %834 = icmp eq i64 %833, 0
  br i1 %834, label %847, label %835

835:                                              ; preds = %824, %835
  %836 = phi %"class.blink::PaintLayer"** [ %844, %835 ], [ %825, %824 ]
  %837 = phi %"class.blink::PaintLayer"** [ %843, %835 ], [ %826, %824 ]
  %838 = phi i64 [ %845, %835 ], [ %833, %824 ]
  %839 = bitcast %"class.blink::PaintLayer"** %837 to i64*
  %840 = load i64, i64* %839, align 8
  %841 = bitcast %"class.blink::PaintLayer"** %836 to i64*
  %842 = load i64, i64* %841, align 8
  store i64 %842, i64* %839, align 8
  store i64 %840, i64* %841, align 8
  %843 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %837, i64 1
  %844 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %836, i64 1
  %845 = add i64 %838, -1
  %846 = icmp eq i64 %845, 0
  br i1 %846, label %847, label %835, !llvm.loop !76

847:                                              ; preds = %835, %824
  %848 = phi %"class.blink::PaintLayer"** [ %825, %824 ], [ %844, %835 ]
  %849 = phi %"class.blink::PaintLayer"** [ %826, %824 ], [ %843, %835 ]
  %850 = icmp ult i64 %830, 24
  br i1 %850, label %946, label %851

851:                                              ; preds = %847, %851
  %852 = phi %"class.blink::PaintLayer"** [ %877, %851 ], [ %848, %847 ]
  %853 = phi %"class.blink::PaintLayer"** [ %876, %851 ], [ %849, %847 ]
  %854 = bitcast %"class.blink::PaintLayer"** %853 to i64*
  %855 = load i64, i64* %854, align 8
  %856 = bitcast %"class.blink::PaintLayer"** %852 to i64*
  %857 = load i64, i64* %856, align 8
  store i64 %857, i64* %854, align 8
  store i64 %855, i64* %856, align 8
  %858 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %853, i64 1
  %859 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %852, i64 1
  %860 = bitcast %"class.blink::PaintLayer"** %858 to i64*
  %861 = load i64, i64* %860, align 8
  %862 = bitcast %"class.blink::PaintLayer"** %859 to i64*
  %863 = load i64, i64* %862, align 8
  store i64 %863, i64* %860, align 8
  store i64 %861, i64* %862, align 8
  %864 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %853, i64 2
  %865 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %852, i64 2
  %866 = bitcast %"class.blink::PaintLayer"** %864 to i64*
  %867 = load i64, i64* %866, align 8
  %868 = bitcast %"class.blink::PaintLayer"** %865 to i64*
  %869 = load i64, i64* %868, align 8
  store i64 %869, i64* %866, align 8
  store i64 %867, i64* %868, align 8
  %870 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %853, i64 3
  %871 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %852, i64 3
  %872 = bitcast %"class.blink::PaintLayer"** %870 to i64*
  %873 = load i64, i64* %872, align 8
  %874 = bitcast %"class.blink::PaintLayer"** %871 to i64*
  %875 = load i64, i64* %874, align 8
  store i64 %875, i64* %872, align 8
  store i64 %873, i64* %874, align 8
  %876 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %853, i64 4
  %877 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %852, i64 4
  %878 = icmp eq %"class.blink::PaintLayer"** %876, %13
  br i1 %878, label %946, label %851, !llvm.loop !77

879:                                              ; preds = %724, %879
  %880 = phi i64 [ %882, %879 ], [ %731, %724 ]
  %881 = phi i64 [ %880, %879 ], [ %728, %724 ]
  %882 = srem i64 %881, %880
  %883 = icmp eq i64 %882, 0
  br i1 %883, label %884, label %879

884:                                              ; preds = %879
  %885 = icmp eq i64 %880, 0
  br i1 %885, label %917, label %886

886:                                              ; preds = %884
  %887 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %680, i64 %880
  %888 = shl nsw i64 %880, 3
  %889 = add i64 %888, -8
  %890 = and i64 %889, 8
  %891 = icmp eq i64 %890, 0
  br i1 %891, label %892, label %914

892:                                              ; preds = %886
  %893 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %887, i64 -1
  %894 = bitcast %"class.blink::PaintLayer"** %893 to i64*
  %895 = load i64, i64* %894, align 8
  %896 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %893, i64 %728
  br label %897

897:                                              ; preds = %897, %892
  %898 = phi %"class.blink::PaintLayer"** [ %893, %892 ], [ %899, %897 ]
  %899 = phi %"class.blink::PaintLayer"** [ %896, %892 ], [ %910, %897 ]
  %900 = bitcast %"class.blink::PaintLayer"** %899 to i64*
  %901 = load i64, i64* %900, align 8
  %902 = bitcast %"class.blink::PaintLayer"** %898 to i64*
  store i64 %901, i64* %902, align 8
  %903 = ptrtoint %"class.blink::PaintLayer"** %899 to i64
  %904 = sub i64 %729, %903
  %905 = ashr exact i64 %904, 3
  %906 = icmp slt i64 %728, %905
  %907 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %899, i64 %728
  %908 = sub nsw i64 %728, %905
  %909 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %680, i64 %908
  %910 = select i1 %906, %"class.blink::PaintLayer"** %907, %"class.blink::PaintLayer"** %909
  %911 = icmp eq %"class.blink::PaintLayer"** %910, %893
  br i1 %911, label %912, label %897

912:                                              ; preds = %897
  %913 = bitcast %"class.blink::PaintLayer"** %899 to i64*
  store i64 %895, i64* %913, align 8
  br label %914

914:                                              ; preds = %912, %886
  %915 = phi %"class.blink::PaintLayer"** [ %893, %912 ], [ %887, %886 ]
  %916 = icmp eq i64 %889, 0
  br i1 %916, label %917, label %919

917:                                              ; preds = %914, %976, %884
  %918 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %680, i64 %731
  br label %946

919:                                              ; preds = %914, %976
  %920 = phi %"class.blink::PaintLayer"** [ %942, %976 ], [ %915, %914 ]
  %921 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %920, i64 -1
  %922 = bitcast %"class.blink::PaintLayer"** %921 to i64*
  %923 = load i64, i64* %922, align 8
  %924 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %921, i64 %728
  br label %925

925:                                              ; preds = %925, %919
  %926 = phi %"class.blink::PaintLayer"** [ %921, %919 ], [ %927, %925 ]
  %927 = phi %"class.blink::PaintLayer"** [ %924, %919 ], [ %938, %925 ]
  %928 = bitcast %"class.blink::PaintLayer"** %927 to i64*
  %929 = load i64, i64* %928, align 8
  %930 = bitcast %"class.blink::PaintLayer"** %926 to i64*
  store i64 %929, i64* %930, align 8
  %931 = ptrtoint %"class.blink::PaintLayer"** %927 to i64
  %932 = sub i64 %729, %931
  %933 = ashr exact i64 %932, 3
  %934 = icmp slt i64 %728, %933
  %935 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %927, i64 %728
  %936 = sub nsw i64 %728, %933
  %937 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %680, i64 %936
  %938 = select i1 %934, %"class.blink::PaintLayer"** %935, %"class.blink::PaintLayer"** %937
  %939 = icmp eq %"class.blink::PaintLayer"** %938, %921
  br i1 %939, label %940, label %925

940:                                              ; preds = %925
  %941 = bitcast %"class.blink::PaintLayer"** %927 to i64*
  store i64 %923, i64* %941, align 8
  %942 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %920, i64 -2
  %943 = bitcast %"class.blink::PaintLayer"** %942 to i64*
  %944 = load i64, i64* %943, align 8
  %945 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %942, i64 %728
  br label %961

946:                                              ; preds = %847, %851, %822, %679, %689, %703, %721, %917
  %947 = phi %"class.blink::PaintLayer"** [ %681, %679 ], [ %680, %689 ], [ %704, %703 ], [ %722, %721 ], [ %918, %917 ], [ %13, %822 ], [ %13, %851 ], [ %13, %847 ]
  %948 = add nsw i64 %683, %682
  %949 = add nsw i64 %687, %686
  %950 = icmp slt i64 %948, %949
  br i1 %950, label %951, label %952

951:                                              ; preds = %946
  tail call void @_ZNSt3__115__inplace_mergeIRPFbPKN5blink10PaintLayerES4_EPPS2_EEvT0_SA_SA_T_NS_15iterator_traitsISA_E15difference_typeESE_PNSD_10value_typeEl(%"class.blink::PaintLayer"** %598, %"class.blink::PaintLayer"** %680, %"class.blink::PaintLayer"** %947, i1 (%"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*)** dereferenceable(8) %3, i64 %682, i64 %683, %"class.blink::PaintLayer"** %6, i64 %7)
  br label %953

952:                                              ; preds = %946
  tail call void @_ZNSt3__115__inplace_mergeIRPFbPKN5blink10PaintLayerES4_EPPS2_EEvT0_SA_SA_T_NS_15iterator_traitsISA_E15difference_typeESE_PNSD_10value_typeEl(%"class.blink::PaintLayer"** %947, %"class.blink::PaintLayer"** %681, %"class.blink::PaintLayer"** %16, i1 (%"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*)** dereferenceable(8) %3, i64 %686, i64 %687, %"class.blink::PaintLayer"** %6, i64 %7)
  br label %953

953:                                              ; preds = %951, %952
  %954 = phi %"class.blink::PaintLayer"** [ %16, %951 ], [ %947, %952 ]
  %955 = phi i64 [ %686, %951 ], [ %682, %952 ]
  %956 = phi i64 [ %687, %951 ], [ %683, %952 ]
  %957 = phi %"class.blink::PaintLayer"** [ %681, %951 ], [ %680, %952 ]
  %958 = phi %"class.blink::PaintLayer"** [ %947, %951 ], [ %598, %952 ]
  %959 = icmp eq i64 %956, 0
  br i1 %959, label %960, label %11

960:                                              ; preds = %953, %21, %604, %314, %537, %489, %493, %466, %8, %643, %363, %296, %291, %283, %155, %27
  ret void

961:                                              ; preds = %961, %940
  %962 = phi %"class.blink::PaintLayer"** [ %942, %940 ], [ %963, %961 ]
  %963 = phi %"class.blink::PaintLayer"** [ %945, %940 ], [ %974, %961 ]
  %964 = bitcast %"class.blink::PaintLayer"** %963 to i64*
  %965 = load i64, i64* %964, align 8
  %966 = bitcast %"class.blink::PaintLayer"** %962 to i64*
  store i64 %965, i64* %966, align 8
  %967 = ptrtoint %"class.blink::PaintLayer"** %963 to i64
  %968 = sub i64 %729, %967
  %969 = ashr exact i64 %968, 3
  %970 = icmp slt i64 %728, %969
  %971 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %963, i64 %728
  %972 = sub nsw i64 %728, %969
  %973 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %680, i64 %972
  %974 = select i1 %970, %"class.blink::PaintLayer"** %971, %"class.blink::PaintLayer"** %973
  %975 = icmp eq %"class.blink::PaintLayer"** %974, %942
  br i1 %975, label %976, label %961

976:                                              ; preds = %961
  %977 = bitcast %"class.blink::PaintLayer"** %963 to i64*
  store i64 %944, i64* %977, align 8
  %978 = icmp eq %"class.blink::PaintLayer"** %942, %680
  br i1 %978, label %917, label %919
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPN5blink10PaintLayerELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.2036"*, %"class.blink::PaintLayer"** dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2036", %"class.WTF::Vector.2036"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2036", %"class.WTF::Vector.2036"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::PaintLayer"**, %"class.blink::PaintLayer"*** %6, align 8
  %8 = icmp ugt %"class.blink::PaintLayer"** %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %7, i64 %10
  %12 = icmp ugt %"class.blink::PaintLayer"** %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.2036", %"class.WTF::Vector.2036"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::PaintLayer"** %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink10PaintLayerEEEmm(i64 %26) #9
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink10PaintLayerEEEPKcv, i64 0, i64 0)) #9
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.2036"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.blink::PaintLayer"**
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.blink::PaintLayer"**, %"class.blink::PaintLayer"*** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.blink::PaintLayer"** %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.blink::PaintLayer"** %38 to i8*
  br i1 %41, label %43, label %49, !prof !2

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #9
  %47 = bitcast %"class.WTF::Vector.2036"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #9
  %51 = bitcast %"class.WTF::Vector.2036"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.blink::PaintLayer"**
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.blink::PaintLayer"** %1 to i64
  %56 = ptrtoint %"class.blink::PaintLayer"** %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.2036", %"class.WTF::Vector.2036"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !2

69:                                               ; preds = %54
  %70 = icmp eq %"class.blink::PaintLayer"** %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink10PaintLayerEEEmm(i64 %71) #9
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink10PaintLayerEEEPKcv, i64 0, i64 0)) #9
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.2036"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.blink::PaintLayer"**, %"class.blink::PaintLayer"*** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.blink::PaintLayer"** %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.blink::PaintLayer"** %78 to i8*
  br i1 %81, label %83, label %89, !prof !2

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #9
  %87 = bitcast %"class.WTF::Vector.2036"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #9
  %91 = bitcast %"class.WTF::Vector.2036"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.blink::PaintLayer"**
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.blink::PaintLayer"** [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.blink::PaintLayer"** [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.blink::PaintLayer"** [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %100, i64 %103
  %105 = bitcast %"class.blink::PaintLayer"** %101 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast %"class.blink::PaintLayer"** %104 to i64*
  store i64 %106, i64* %107, align 8
  %108 = load i32, i32* %3, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %3, align 4
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.2045"*, i8 } @_ZN3WTF9HashTableIPKN5blink10PaintLayerENS_12KeyValuePairIS4_NS_6VectorIPS2_Lj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_S8_E6insertINS_17HashMapTranslatorISI_SD_S8_EERS4_S9_EENS_18HashTableAddResultISJ_SA_EEOT0_OT1_(%"class.WTF::HashTable.2042"*, %"class.blink::PaintLayer"** dereferenceable(8), %"class.WTF::Vector.2036"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.2042", %"class.WTF::HashTable.2042"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.2045"*, %"struct.WTF::KeyValuePair.2045"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.2045"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.2045"* @_ZN3WTF9HashTableIPKN5blink10PaintLayerENS_12KeyValuePairIS4_NS_6VectorIPS2_Lj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_S8_E6ExpandEPSA_(%"class.WTF::HashTable.2042"* %0, %"struct.WTF::KeyValuePair.2045"* null)
  %9 = load %"struct.WTF::KeyValuePair.2045"*, %"struct.WTF::KeyValuePair.2045"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.2045"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.2042", %"class.WTF::HashTable.2042"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::PaintLayer"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.2045", %"struct.WTF::KeyValuePair.2045"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.2045", %"struct.WTF::KeyValuePair.2045"* %39, i64 0, i32 0
  %41 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %40, align 8
  %42 = icmp eq %"class.blink::PaintLayer"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::PaintLayer"*
  br i1 %42, label %78, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::PaintLayer"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair.2045"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair.2045"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::PaintLayer"* %59, %43
  br i1 %64, label %122, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::PaintLayer"* %59, inttoptr (i64 -1 to %"class.blink::PaintLayer"*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair.2045"* %60, %"struct.WTF::KeyValuePair.2045"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.2045", %"struct.WTF::KeyValuePair.2045"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.2045", %"struct.WTF::KeyValuePair.2045"* %72, i64 0, i32 0
  %74 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %73, align 8
  %75 = icmp eq %"class.blink::PaintLayer"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair.2045"* %67, null
  br i1 %77, label %78, label %81

78:                                               ; preds = %10, %76
  %79 = phi %"struct.WTF::KeyValuePair.2045"* [ %72, %76 ], [ %39, %10 ]
  %80 = bitcast %"struct.WTF::KeyValuePair.2045"* %79 to i64*
  br label %94

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.2045", %"struct.WTF::KeyValuePair.2045"* %67, i64 0, i32 1
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.2045", %"struct.WTF::KeyValuePair.2045"* %67, i64 0, i32 1, i32 0, i32 0, i32 1
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair.2045", %"struct.WTF::KeyValuePair.2045"* %67, i64 0, i32 1, i32 0, i32 0, i32 2
  %85 = bitcast %"class.WTF::Vector.2036"* %82 to i64*
  %86 = bitcast %"struct.WTF::KeyValuePair.2045"* %67 to i64*
  store i64 0, i64* %86, align 8
  store atomic i64 0, i64* %85 monotonic, align 8
  store i32 0, i32* %83, align 4
  store i32 0, i32* %84, align 4
  %87 = getelementptr inbounds %"class.WTF::HashTable.2042", %"class.WTF::HashTable.2042"* %0, i64 0, i32 3
  %88 = load i32, i32* %87, align 8
  %89 = add i32 %88, 2147483647
  %90 = and i32 %89, 2147483647
  %91 = and i32 %88, -2147483648
  %92 = or i32 %90, %91
  store i32 %92, i32* %87, align 8
  %93 = load i64, i64* %16, align 8
  br label %94

94:                                               ; preds = %78, %81
  %95 = phi i64* [ %80, %78 ], [ %86, %81 ]
  %96 = phi i64 [ %17, %78 ], [ %93, %81 ]
  %97 = phi %"struct.WTF::KeyValuePair.2045"* [ %79, %78 ], [ %67, %81 ]
  store i64 %96, i64* %95, align 8
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair.2045", %"struct.WTF::KeyValuePair.2045"* %97, i64 0, i32 1
  %99 = bitcast %"class.WTF::Vector.2036"* %2 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = bitcast %"class.WTF::Vector.2036"* %98 to i64*
  %102 = load i64, i64* %101, align 8
  store atomic i64 %102, i64* %99 monotonic, align 8
  store atomic i64 %100, i64* %101 monotonic, align 8
  %103 = getelementptr inbounds %"struct.WTF::KeyValuePair.2045", %"struct.WTF::KeyValuePair.2045"* %97, i64 0, i32 1, i32 0, i32 0, i32 1
  %104 = getelementptr inbounds %"class.WTF::Vector.2036", %"class.WTF::Vector.2036"* %2, i64 0, i32 0, i32 0, i32 1
  %105 = load i32, i32* %103, align 4
  %106 = load i32, i32* %104, align 4
  store i32 %106, i32* %103, align 4
  store i32 %105, i32* %104, align 4
  %107 = getelementptr inbounds %"struct.WTF::KeyValuePair.2045", %"struct.WTF::KeyValuePair.2045"* %97, i64 0, i32 1, i32 0, i32 0, i32 2
  %108 = getelementptr inbounds %"class.WTF::Vector.2036", %"class.WTF::Vector.2036"* %2, i64 0, i32 0, i32 0, i32 2
  %109 = load i32, i32* %107, align 4
  %110 = load i32, i32* %108, align 4
  store i32 %110, i32* %107, align 4
  store i32 %109, i32* %108, align 4
  %111 = getelementptr inbounds %"class.WTF::HashTable.2042", %"class.WTF::HashTable.2042"* %0, i64 0, i32 2
  %112 = load i32, i32* %111, align 4
  %113 = add i32 %112, 1
  store i32 %113, i32* %111, align 4
  %114 = getelementptr inbounds %"class.WTF::HashTable.2042", %"class.WTF::HashTable.2042"* %0, i64 0, i32 3
  %115 = load i32, i32* %114, align 8
  %116 = add i32 %115, %113
  %117 = shl i32 %116, 1
  %118 = load i32, i32* %12, align 8
  %119 = icmp ult i32 %117, %118
  br i1 %119, label %122, label %120

120:                                              ; preds = %94
  %121 = tail call %"struct.WTF::KeyValuePair.2045"* @_ZN3WTF9HashTableIPKN5blink10PaintLayerENS_12KeyValuePairIS4_NS_6VectorIPS2_Lj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_S8_E6ExpandEPSA_(%"class.WTF::HashTable.2042"* %0, %"struct.WTF::KeyValuePair.2045"* %97)
  br label %122

122:                                              ; preds = %58, %94, %120
  %123 = phi i8 [ 1, %94 ], [ 1, %120 ], [ 0, %58 ]
  %124 = phi %"struct.WTF::KeyValuePair.2045"* [ %97, %94 ], [ %121, %120 ], [ %60, %58 ]
  %125 = insertvalue { %"struct.WTF::KeyValuePair.2045"*, i8 } undef, %"struct.WTF::KeyValuePair.2045"* %124, 0
  %126 = insertvalue { %"struct.WTF::KeyValuePair.2045"*, i8 } %125, i8 %123, 1
  ret { %"struct.WTF::KeyValuePair.2045"*, i8 } %126
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2045"* @_ZN3WTF9HashTableIPKN5blink10PaintLayerENS_12KeyValuePairIS4_NS_6VectorIPS2_Lj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_S8_E6ExpandEPSA_(%"class.WTF::HashTable.2042"*, %"struct.WTF::KeyValuePair.2045"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.2042", %"class.WTF::HashTable.2042"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.2042", %"class.WTF::HashTable.2042"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #9
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* %22, i8* %23) #9
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.6, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #9
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = mul nuw nsw i64 %33, 24
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([155 x i8], [155 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN5blink10PaintLayerENS_6VectorIPS3_Lj0ENS_18PartitionAllocatorEEEEEEEPKcv, i64 0, i64 0)) #9
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.2045"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %72, label %38

38:                                               ; preds = %31
  %39 = and i64 %33, 1
  %40 = icmp eq i32 %32, 1
  br i1 %40, label %62, label %41

41:                                               ; preds = %38
  %42 = sub nsw i64 %33, %39
  br label %43

43:                                               ; preds = %43, %41
  %44 = phi i64 [ 0, %41 ], [ %59, %43 ]
  %45 = phi i64 [ %42, %41 ], [ %60, %43 ]
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair.2045", %"struct.WTF::KeyValuePair.2045"* %36, i64 %44
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.2045", %"struct.WTF::KeyValuePair.2045"* %36, i64 %44, i32 1
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair.2045", %"struct.WTF::KeyValuePair.2045"* %36, i64 %44, i32 1, i32 0, i32 0, i32 1
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.2045", %"struct.WTF::KeyValuePair.2045"* %36, i64 %44, i32 1, i32 0, i32 0, i32 2
  %50 = bitcast %"class.WTF::Vector.2036"* %47 to i64*
  %51 = bitcast %"struct.WTF::KeyValuePair.2045"* %46 to i64*
  store i64 0, i64* %51, align 8
  store atomic i64 0, i64* %50 monotonic, align 8
  store i32 0, i32* %48, align 4
  store i32 0, i32* %49, align 4
  %52 = or i64 %44, 1
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.2045", %"struct.WTF::KeyValuePair.2045"* %36, i64 %52
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.2045", %"struct.WTF::KeyValuePair.2045"* %36, i64 %52, i32 1
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.2045", %"struct.WTF::KeyValuePair.2045"* %36, i64 %52, i32 1, i32 0, i32 0, i32 1
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.2045", %"struct.WTF::KeyValuePair.2045"* %36, i64 %52, i32 1, i32 0, i32 0, i32 2
  %57 = bitcast %"class.WTF::Vector.2036"* %54 to i64*
  %58 = bitcast %"struct.WTF::KeyValuePair.2045"* %53 to i64*
  store i64 0, i64* %58, align 8
  store atomic i64 0, i64* %57 monotonic, align 8
  store i32 0, i32* %55, align 4
  store i32 0, i32* %56, align 4
  %59 = add nuw nsw i64 %44, 2
  %60 = add i64 %45, -2
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %62, label %43

62:                                               ; preds = %43, %38
  %63 = phi i64 [ 0, %38 ], [ %59, %43 ]
  %64 = icmp eq i64 %39, 0
  br i1 %64, label %72, label %65

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.2045", %"struct.WTF::KeyValuePair.2045"* %36, i64 %63
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.2045", %"struct.WTF::KeyValuePair.2045"* %36, i64 %63, i32 1
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.2045", %"struct.WTF::KeyValuePair.2045"* %36, i64 %63, i32 1, i32 0, i32 0, i32 1
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.2045", %"struct.WTF::KeyValuePair.2045"* %36, i64 %63, i32 1, i32 0, i32 0, i32 2
  %70 = bitcast %"class.WTF::Vector.2036"* %67 to i64*
  %71 = bitcast %"struct.WTF::KeyValuePair.2045"* %66 to i64*
  store i64 0, i64* %71, align 8
  store atomic i64 0, i64* %70 monotonic, align 8
  store i32 0, i32* %68, align 4
  store i32 0, i32* %69, align 4
  br label %72

72:                                               ; preds = %65, %62, %31
  %73 = call %"struct.WTF::KeyValuePair.2045"* @_ZN3WTF9HashTableIPKN5blink10PaintLayerENS_12KeyValuePairIS4_NS_6VectorIPS2_Lj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_S8_E8RehashToEPSA_jSK_(%"class.WTF::HashTable.2042"* %0, %"struct.WTF::KeyValuePair.2045"* %36, i32 %32, %"struct.WTF::KeyValuePair.2045"* %1) #9
  ret %"struct.WTF::KeyValuePair.2045"* %73
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2045"* @_ZN3WTF9HashTableIPKN5blink10PaintLayerENS_12KeyValuePairIS4_NS_6VectorIPS2_Lj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_S8_E8RehashToEPSA_jSK_(%"class.WTF::HashTable.2042"*, %"struct.WTF::KeyValuePair.2045"*, i32, %"struct.WTF::KeyValuePair.2045"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.2042", align 8
  %6 = bitcast %"class.WTF::HashTable.2042"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.WTF::HashTable.2042", %"class.WTF::HashTable.2042"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.2042", %"class.WTF::HashTable.2042"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.2042", %"class.WTF::HashTable.2042"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.2042", %"class.WTF::HashTable.2042"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.2042"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.2045"* %1, %"struct.WTF::KeyValuePair.2045"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.2042", %"class.WTF::HashTable.2042"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.2042", %"class.WTF::HashTable.2042"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.2045"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.2042"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.2042"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.2045"*, %"struct.WTF::KeyValuePair.2045"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.2045"* %22 to i64
  br label %66

24:                                               ; preds = %113
  %25 = bitcast %"class.WTF::HashTable.2042"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.2042"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %114, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.2045"* [ null, %16 ], [ %117, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %115, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.2045"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %62, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %60, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %57, %39
  %42 = phi i64 [ 0, %39 ], [ %58, %57 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.2045", %"struct.WTF::KeyValuePair.2045"* %35, i64 %42, i32 0
  %44 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %43, align 8
  %45 = icmp eq %"class.blink::PaintLayer"* %44, inttoptr (i64 -1 to %"class.blink::PaintLayer"*)
  br i1 %45, label %57, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.2045", %"struct.WTF::KeyValuePair.2045"* %35, i64 %42, i32 1, i32 0, i32 0, i32 0
  %48 = load %"class.blink::PaintLayer"**, %"class.blink::PaintLayer"*** %47, align 8
  %49 = icmp eq %"class.blink::PaintLayer"** %48, null
  %50 = bitcast %"class.blink::PaintLayer"** %48 to i8*
  br i1 %49, label %57, label %51, !prof !2

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.2045", %"struct.WTF::KeyValuePair.2045"* %35, i64 %42, i32 1, i32 0, i32 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %56, label %55, !prof !3

55:                                               ; preds = %51
  store i32 0, i32* %52, align 4
  br label %56

56:                                               ; preds = %55, %51
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %50) #9
  store %"class.blink::PaintLayer"** null, %"class.blink::PaintLayer"*** %47, align 8
  br label %57

57:                                               ; preds = %56, %46, %41
  %58 = add nuw nsw i64 %42, 1
  %59 = icmp eq i64 %58, %40
  br i1 %59, label %60, label %41

60:                                               ; preds = %57, %37
  %61 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %61) #9
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %62

62:                                               ; preds = %28, %60
  %63 = getelementptr inbounds %"class.WTF::HashTable.2042", %"class.WTF::HashTable.2042"* %0, i64 0, i32 3
  %64 = load i32, i32* %63, align 8
  %65 = and i32 %64, -2147483648
  store i32 %65, i32* %63, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #9
  ret %"struct.WTF::KeyValuePair.2045"* %33

66:                                               ; preds = %21, %113
  %67 = phi i64 [ %114, %113 ], [ %23, %21 ]
  %68 = phi i32 [ %115, %113 ], [ %13, %21 ]
  %69 = phi %"struct.WTF::KeyValuePair.2045"* [ %116, %113 ], [ %22, %21 ]
  %70 = phi %"struct.WTF::KeyValuePair.2045"* [ %117, %113 ], [ null, %21 ]
  %71 = phi i32 [ %118, %113 ], [ 0, %21 ]
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.2045", %"struct.WTF::KeyValuePair.2045"* %69, i64 %72
  %74 = bitcast %"struct.WTF::KeyValuePair.2045"* %73 to i64*
  %75 = load i64, i64* %74, align 8
  switch i64 %75, label %76 [
    i64 -1, label %113
    i64 0, label %113
  ]

76:                                               ; preds = %66
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.2045", %"struct.WTF::KeyValuePair.2045"* %73, i64 0, i32 0
  %78 = call { %"struct.WTF::KeyValuePair.2045"*, i8 } @_ZN3WTF9HashTableIPKN5blink10PaintLayerENS_12KeyValuePairIS4_NS_6VectorIPS2_Lj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_S8_E16LookupForWritingERKS4_(%"class.WTF::HashTable.2042"* nonnull %5, %"class.blink::PaintLayer"** dereferenceable(8) %77) #9
  %79 = extractvalue { %"struct.WTF::KeyValuePair.2045"*, i8 } %78, 0
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.2045", %"struct.WTF::KeyValuePair.2045"* %79, i64 0, i32 1, i32 0, i32 0, i32 0
  %81 = load %"class.blink::PaintLayer"**, %"class.blink::PaintLayer"*** %80, align 8
  %82 = icmp eq %"class.blink::PaintLayer"** %81, null
  %83 = bitcast %"class.blink::PaintLayer"** %81 to i8*
  br i1 %82, label %90, label %84, !prof !2

84:                                               ; preds = %76
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair.2045", %"struct.WTF::KeyValuePair.2045"* %79, i64 0, i32 1, i32 0, i32 0, i32 2
  %86 = load i32, i32* %85, align 4
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %89, label %88, !prof !3

88:                                               ; preds = %84
  store i32 0, i32* %85, align 4
  br label %89

89:                                               ; preds = %88, %84
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %83) #9
  store %"class.blink::PaintLayer"** null, %"class.blink::PaintLayer"*** %80, align 8
  br label %90

90:                                               ; preds = %76, %89
  %91 = load i64, i64* %74, align 8
  %92 = bitcast %"struct.WTF::KeyValuePair.2045"* %79 to i64*
  store i64 %91, i64* %92, align 8
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair.2045", %"struct.WTF::KeyValuePair.2045"* %79, i64 0, i32 1
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair.2045", %"struct.WTF::KeyValuePair.2045"* %69, i64 %72, i32 1
  %95 = getelementptr inbounds %"struct.WTF::KeyValuePair.2045", %"struct.WTF::KeyValuePair.2045"* %79, i64 0, i32 1, i32 0, i32 0, i32 1
  %96 = getelementptr inbounds %"struct.WTF::KeyValuePair.2045", %"struct.WTF::KeyValuePair.2045"* %79, i64 0, i32 1, i32 0, i32 0, i32 2
  %97 = bitcast %"class.WTF::Vector.2036"* %94 to i64*
  %98 = bitcast %"class.WTF::Vector.2036"* %93 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %98, i8 0, i64 16, i1 false) #9
  %99 = load i64, i64* %97, align 8
  %100 = bitcast %"class.WTF::Vector.2036"* %93 to i64*
  store atomic i64 0, i64* %97 monotonic, align 8
  store atomic i64 %99, i64* %100 monotonic, align 8
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair.2045", %"struct.WTF::KeyValuePair.2045"* %69, i64 %72, i32 1, i32 0, i32 0, i32 1
  %102 = load i32, i32* %95, align 4
  %103 = load i32, i32* %101, align 4
  store i32 %103, i32* %95, align 4
  store i32 %102, i32* %101, align 4
  %104 = getelementptr inbounds %"struct.WTF::KeyValuePair.2045", %"struct.WTF::KeyValuePair.2045"* %69, i64 %72, i32 1, i32 0, i32 0, i32 2
  %105 = load i32, i32* %96, align 4
  %106 = load i32, i32* %104, align 4
  store i32 %106, i32* %96, align 4
  store i32 %105, i32* %104, align 4
  %107 = load %"struct.WTF::KeyValuePair.2045"*, %"struct.WTF::KeyValuePair.2045"** %15, align 8
  %108 = getelementptr inbounds %"struct.WTF::KeyValuePair.2045", %"struct.WTF::KeyValuePair.2045"* %107, i64 %72
  %109 = icmp eq %"struct.WTF::KeyValuePair.2045"* %108, %3
  %110 = select i1 %109, %"struct.WTF::KeyValuePair.2045"* %79, %"struct.WTF::KeyValuePair.2045"* %70
  %111 = load i32, i32* %12, align 8
  %112 = ptrtoint %"struct.WTF::KeyValuePair.2045"* %107 to i64
  br label %113

113:                                              ; preds = %66, %66, %90
  %114 = phi i64 [ %67, %66 ], [ %112, %90 ], [ %67, %66 ]
  %115 = phi i32 [ %68, %66 ], [ %111, %90 ], [ %68, %66 ]
  %116 = phi %"struct.WTF::KeyValuePair.2045"* [ %69, %66 ], [ %107, %90 ], [ %69, %66 ]
  %117 = phi %"struct.WTF::KeyValuePair.2045"* [ %70, %66 ], [ %110, %90 ], [ %70, %66 ]
  %118 = add i32 %71, 1
  %119 = icmp eq i32 %118, %115
  br i1 %119, label %24, label %66
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.2045"*, i8 } @_ZN3WTF9HashTableIPKN5blink10PaintLayerENS_12KeyValuePairIS4_NS_6VectorIPS2_Lj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_S8_E16LookupForWritingERKS4_(%"class.WTF::HashTable.2042"*, %"class.blink::PaintLayer"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.2042", %"class.WTF::HashTable.2042"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.2045"*, %"struct.WTF::KeyValuePair.2045"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.2042", %"class.WTF::HashTable.2042"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::PaintLayer"** %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.2045", %"struct.WTF::KeyValuePair.2045"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair.2045"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.2045", %"struct.WTF::KeyValuePair.2045"* %32, i64 0, i32 0
  %35 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %34, align 8
  %36 = icmp eq %"class.blink::PaintLayer"* %35, null
  %37 = inttoptr i64 %10 to %"class.blink::PaintLayer"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %68
  %53 = ptrtoint %"struct.WTF::KeyValuePair.2045"* %75 to i64
  %54 = inttoptr i64 %70 to %"struct.WTF::KeyValuePair.2045"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair.2045"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair.2045"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair.2045"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %80

61:                                               ; preds = %68, %38
  %62 = phi i64 [ 0, %38 ], [ %70, %68 ]
  %63 = phi %"class.blink::PaintLayer"* [ %35, %38 ], [ %78, %68 ]
  %64 = phi i64 [ %33, %38 ], [ %76, %68 ]
  %65 = phi i64 [ %31, %38 ], [ %74, %68 ]
  %66 = phi i64 [ 0, %38 ], [ %72, %68 ]
  %67 = icmp eq %"class.blink::PaintLayer"* %63, %37
  br i1 %67, label %80, label %68

68:                                               ; preds = %61
  %69 = icmp eq %"class.blink::PaintLayer"* %63, inttoptr (i64 -1 to %"class.blink::PaintLayer"*)
  %70 = select i1 %69, i64 %64, i64 %62
  %71 = icmp eq i64 %66, 0
  %72 = select i1 %71, i64 %51, i64 %66
  %73 = add i64 %72, %65
  %74 = and i64 %73, %8
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.2045", %"struct.WTF::KeyValuePair.2045"* %4, i64 %74
  %76 = ptrtoint %"struct.WTF::KeyValuePair.2045"* %75 to i64
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.2045", %"struct.WTF::KeyValuePair.2045"* %75, i64 0, i32 0
  %78 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %77, align 8
  %79 = icmp eq %"class.blink::PaintLayer"* %78, null
  br i1 %79, label %52, label %61

80:                                               ; preds = %61, %55
  %81 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %82 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %83 = inttoptr i64 %81 to %"struct.WTF::KeyValuePair.2045"*
  %84 = insertvalue { %"struct.WTF::KeyValuePair.2045"*, i8 } undef, %"struct.WTF::KeyValuePair.2045"* %83, 0
  %85 = insertvalue { %"struct.WTF::KeyValuePair.2045"*, i8 } %84, i8 %82, 1
  ret { %"struct.WTF::KeyValuePair.2045"*, i8 } %85
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
!6 = !{i8 0, i8 2}
!7 = distinct !{!7, !5}
!8 = !{!9}
!9 = distinct !{!9, !10}
!10 = distinct !{!10, !"LVerDomain"}
!11 = !{!12}
!12 = distinct !{!12, !10}
!13 = distinct !{!13, !14}
!14 = !{!"llvm.loop.isvectorized", i32 1}
!15 = distinct !{!15, !5}
!16 = !{!17}
!17 = distinct !{!17, !18}
!18 = distinct !{!18, !"LVerDomain"}
!19 = !{!20}
!20 = distinct !{!20, !18}
!21 = distinct !{!21, !14}
!22 = distinct !{!22, !5}
!23 = distinct !{!23, !5}
!24 = distinct !{!24, !14}
!25 = distinct !{!25, !14}
!26 = !{!27}
!27 = distinct !{!27, !28}
!28 = distinct !{!28, !"LVerDomain"}
!29 = !{!30}
!30 = distinct !{!30, !28}
!31 = distinct !{!31, !14}
!32 = distinct !{!32, !5}
!33 = distinct !{!33, !5}
!34 = distinct !{!34, !14}
!35 = !{!36}
!36 = distinct !{!36, !37}
!37 = distinct !{!37, !"LVerDomain"}
!38 = !{!39}
!39 = distinct !{!39, !37}
!40 = distinct !{!40, !14}
!41 = distinct !{!41, !5}
!42 = distinct !{!42, !5}
!43 = distinct !{!43, !14}
!44 = distinct !{!44, !5}
!45 = !{!46}
!46 = distinct !{!46, !47}
!47 = distinct !{!47, !"LVerDomain"}
!48 = !{!49}
!49 = distinct !{!49, !47}
!50 = distinct !{!50, !14}
!51 = distinct !{!51, !5}
!52 = distinct !{!52, !5}
!53 = !{!54}
!54 = distinct !{!54, !55}
!55 = distinct !{!55, !"LVerDomain"}
!56 = !{!57}
!57 = distinct !{!57, !55}
!58 = distinct !{!58, !14}
!59 = distinct !{!59, !5}
!60 = distinct !{!60, !14}
!61 = !{!62}
!62 = distinct !{!62, !63}
!63 = distinct !{!63, !"LVerDomain"}
!64 = !{!65}
!65 = distinct !{!65, !63}
!66 = distinct !{!66, !14}
!67 = distinct !{!67, !5}
!68 = distinct !{!68, !14}
!69 = distinct !{!69, !14}
!70 = !{!71}
!71 = distinct !{!71, !72}
!72 = distinct !{!72, !"LVerDomain"}
!73 = !{!74}
!74 = distinct !{!74, !72}
!75 = distinct !{!75, !14}
!76 = distinct !{!76, !5}
!77 = distinct !{!77, !14}
