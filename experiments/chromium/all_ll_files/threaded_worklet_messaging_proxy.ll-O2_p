; ModuleID = '../../third_party/blink/renderer/core/workers/threaded_worklet_messaging_proxy.cc'
source_filename = "../../third_party/blink/renderer/core/workers/threaded_worklet_messaging_proxy.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::String" = type { %class.scoped_refptr.192 }
%class.scoped_refptr.192 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.193" }
%"struct.std::__1::atomic.193" = type { %"struct.std::__1::__atomic_base.194" }
%"struct.std::__1::__atomic_base.194" = type { %"struct.std::__1::__atomic_base.195" }
%"struct.std::__1::__atomic_base.195" = type { %"struct.std::__1::__cxx_atomic_impl.196" }
%"struct.std::__1::__cxx_atomic_impl.196" = type { %"struct.std::__1::__cxx_atomic_base_impl.197" }
%"struct.std::__1::__cxx_atomic_base_impl.197" = type { i32 }
%"class.blink::ThreadedWorkletMessagingProxy" = type { %"class.blink::ThreadedMessagingProxyBase", %"class.blink::WorkletGlobalScopeProxy", %"class.std::__1::unique_ptr.777" }
%"class.blink::ThreadedMessagingProxyBase" = type { i32 (...)**, %"class.blink::Member", %"class.blink::CrossThreadPersistent", %"class.std::__1::unique_ptr.180", i8, [7 x i8], %"class.base::WaitableEvent", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.blink::SelfKeepAlive" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ExecutionContext"* }
%"class.blink::CrossThreadPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::ParentExecutionContextTaskRunners"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::ParentExecutionContextTaskRunners" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.WTF::Mutex", %"class.WTF::HashMap" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.2" }
%"class.blink::MemberBase.2" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember.5"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.5" = type opaque
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.6" }
%"class.WTF::HashTable.6" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::CrossThreadPersistentNodePtr" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.136", %"class.std::__1::unique_ptr.136", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.152", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.164", %"class.std::__1::unique_ptr.170", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.176", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.36", %"class.std::__1::unique_ptr.47", %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.82", %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.96", %"class.std::__1::unique_ptr.119", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.39" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%"struct.std::__1::atomic.39" = type { %"struct.std::__1::__atomic_base.40" }
%"struct.std::__1::__atomic_base.40" = type { %"struct.std::__1::__atomic_base.41" }
%"struct.std::__1::__atomic_base.41" = type { %"struct.std::__1::__cxx_atomic_impl.42" }
%"struct.std::__1::__cxx_atomic_impl.42" = type { %"struct.std::__1::__cxx_atomic_base_impl.43" }
%"struct.std::__1::__cxx_atomic_base_impl.43" = type { i64 }
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.blink::Worklist.50"* }
%"class.blink::Worklist.50" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.39" }
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.blink::Worklist.57"* }
%"class.blink::Worklist.57" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.39" }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.blink::Worklist.64"* }
%"class.blink::Worklist.64" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.39" }
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::Worklist.71"* }
%"class.blink::Worklist.71" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.39" }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.blink::Worklist.78"* }
%"class.blink::Worklist.78" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.39" }
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.blink::Worklist.85"* }
%"class.blink::Worklist.85" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.39" }
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.blink::Worklist.92"* }
%"class.blink::Worklist.92" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.39" }
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.99", %"class.std::__1::__compressed_pair.106", %"class.std::__1::__compressed_pair.111", %"class.std::__1::__compressed_pair.113", [4 x i8] }>
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101", %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { i64 }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { float }
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.122", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.144" }
%"class.WTF::VectorBuffer.144" = type { %"class.WTF::VectorBufferBase.145" }
%"class.WTF::VectorBufferBase.145" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.158" }
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.50"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.57"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.64"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.71"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.78"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1106", i64 }
%"class.std::__1::vector.1106" = type { %"class.std::__1::__vector_base.1107" }
%"class.std::__1::__vector_base.1107" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1108" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1108" = type { %"struct.std::__1::__compressed_pair_elem.1109" }
%"struct.std::__1::__compressed_pair_elem.1109" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.170" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.176" = type { %"struct.std::__1::__atomic_base.177" }
%"struct.std::__1::__atomic_base.177" = type { %"struct.std::__1::__cxx_atomic_impl.178" }
%"struct.std::__1::__cxx_atomic_impl.178" = type { %"struct.std::__1::__cxx_atomic_base_impl.179" }
%"struct.std::__1::__cxx_atomic_base_impl.179" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::WorkerThread"* }
%"class.blink::WorkerThread" = type { %"class.base::TaskObserver", %"class.base::TimeTicks", i32, i8, i32, i32, %"class.base::TimeDelta", %class.scoped_refptr.183, %"class.base::UnguessableToken", %"class.blink::InspectorIssueStorage", i32, %"class.blink::WorkerReportingProxy"*, %class.scoped_refptr.400, %"class.std::__1::unique_ptr.406", %"class.WTF::HashMap", %"class.WTF::Mutex", i32, %"class.blink::Platform::NestedMessageLoopRunner"*, %"class.blink::CrossThreadPersistent.434", %"class.blink::CrossThreadPersistent.436", %"class.blink::CrossThreadPersistent.753", %class.scoped_refptr.755, %"class.blink::TaskHandle", %"class.WTF::HashSet.757", %"class.WTF::HashSet.761" }
%"class.base::TaskObserver" = type { i32 (...)** }
%"class.base::TimeDelta" = type { i64 }
%class.scoped_refptr.183 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque.184" }
%"class.WTF::Deque.184" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.187" }
%"class.WTF::VectorBuffer.187" = type { %"class.WTF::VectorBufferBase.188" }
%"class.WTF::VectorBufferBase.188" = type { %"class.std::__1::unique_ptr.189"*, i32, i32 }
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type { %"class.crdtp::ProtocolObject", %"class.WTF::String", %"class.std::__1::unique_ptr.198" }
%"class.crdtp::ProtocolObject" = type { %"class.crdtp::Serializable" }
%"class.crdtp::Serializable" = type { i32 (...)** }
%"class.std::__1::unique_ptr.198" = type { %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"class.blink::protocol::Audits::InspectorIssueDetails"* }
%"class.blink::protocol::Audits::InspectorIssueDetails" = type { %"class.crdtp::ProtocolObject.201", %"class.crdtp::detail::PtrMaybe", %"class.crdtp::detail::PtrMaybe.244", %"class.crdtp::detail::PtrMaybe.264", %"class.crdtp::detail::PtrMaybe.274", %"class.crdtp::detail::PtrMaybe.284", %"class.crdtp::detail::PtrMaybe.305", %"class.crdtp::detail::PtrMaybe.315", %"class.crdtp::detail::PtrMaybe.325", %"class.crdtp::detail::PtrMaybe.335", %"class.crdtp::detail::PtrMaybe.364", %"class.crdtp::detail::PtrMaybe.374", %"class.crdtp::detail::PtrMaybe.384" }
%"class.crdtp::ProtocolObject.201" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe" = type { %"class.std::__1::unique_ptr.204" }
%"class.std::__1::unique_ptr.204" = type { %"class.std::__1::__compressed_pair.205" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"class.blink::protocol::Audits::SameSiteCookieIssueDetails"* }
%"class.blink::protocol::Audits::SameSiteCookieIssueDetails" = type { %"class.crdtp::ProtocolObject.207", %"class.crdtp::detail::PtrMaybe.210", %"class.crdtp::detail::ValueMaybe", %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::PtrMaybe.231" }
%"class.crdtp::ProtocolObject.207" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.210" = type { %"class.std::__1::unique_ptr.211" }
%"class.std::__1::unique_ptr.211" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.blink::protocol::Audits::AffectedCookie"* }
%"class.blink::protocol::Audits::AffectedCookie" = type { %"class.crdtp::ProtocolObject.214", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.214" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.std::__1::vector"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.WTF::String"*, %"class.WTF::String"*, %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"class.WTF::String"* }
%"class.crdtp::detail::ValueMaybe" = type { i8, %"class.WTF::String" }
%"class.crdtp::detail::PtrMaybe.231" = type { %"class.std::__1::unique_ptr.232" }
%"class.std::__1::unique_ptr.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"class.blink::protocol::Audits::AffectedRequest"* }
%"class.blink::protocol::Audits::AffectedRequest" = type { %"class.crdtp::ProtocolObject.235", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe" }
%"class.crdtp::ProtocolObject.235" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.244" = type { %"class.std::__1::unique_ptr.245" }
%"class.std::__1::unique_ptr.245" = type { %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"class.blink::protocol::Audits::MixedContentIssueDetails"* }
%"class.blink::protocol::Audits::MixedContentIssueDetails" = type { %"class.crdtp::ProtocolObject.248", %"class.crdtp::detail::ValueMaybe", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.231", %"class.crdtp::detail::PtrMaybe.251" }
%"class.crdtp::ProtocolObject.248" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.251" = type { %"class.std::__1::unique_ptr.252" }
%"class.std::__1::unique_ptr.252" = type { %"class.std::__1::__compressed_pair.253" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"class.blink::protocol::Audits::AffectedFrame"* }
%"class.blink::protocol::Audits::AffectedFrame" = type { %"class.crdtp::ProtocolObject.255", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.255" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.264" = type { %"class.std::__1::unique_ptr.265" }
%"class.std::__1::unique_ptr.265" = type { %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"struct.std::__1::__compressed_pair_elem.267" = type { %"class.blink::protocol::Audits::BlockedByResponseIssueDetails"* }
%"class.blink::protocol::Audits::BlockedByResponseIssueDetails" = type { %"class.crdtp::ProtocolObject.268", %"class.std::__1::unique_ptr.232", %"class.crdtp::detail::PtrMaybe.251", %"class.crdtp::detail::PtrMaybe.251", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.268" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.274" = type { %"class.std::__1::unique_ptr.275" }
%"class.std::__1::unique_ptr.275" = type { %"class.std::__1::__compressed_pair.276" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"class.blink::protocol::Audits::HeavyAdIssueDetails"* }
%"class.blink::protocol::Audits::HeavyAdIssueDetails" = type { %"class.crdtp::ProtocolObject.278", %"class.WTF::String", %"class.WTF::String", %"class.std::__1::unique_ptr.252" }
%"class.crdtp::ProtocolObject.278" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.284" = type { %"class.std::__1::unique_ptr.285" }
%"class.std::__1::unique_ptr.285" = type { %"class.std::__1::__compressed_pair.286" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"struct.std::__1::__compressed_pair_elem.287" = type { %"class.blink::protocol::Audits::ContentSecurityPolicyIssueDetails"* }
%"class.blink::protocol::Audits::ContentSecurityPolicyIssueDetails" = type { %"class.crdtp::ProtocolObject.288", %"class.crdtp::detail::ValueMaybe", %"class.WTF::String", i8, %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.251", %"class.crdtp::detail::PtrMaybe.291", %"class.crdtp::detail::ValueMaybe.301" }
%"class.crdtp::ProtocolObject.288" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.291" = type { %"class.std::__1::unique_ptr.292" }
%"class.std::__1::unique_ptr.292" = type { %"class.std::__1::__compressed_pair.293" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"class.blink::protocol::Audits::SourceCodeLocation"* }
%"class.blink::protocol::Audits::SourceCodeLocation" = type { %"class.crdtp::ProtocolObject.295", %"class.crdtp::detail::ValueMaybe", %"class.WTF::String", i32, i32 }
%"class.crdtp::ProtocolObject.295" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::ValueMaybe.301" = type { i8, i32 }
%"class.crdtp::detail::PtrMaybe.305" = type { %"class.std::__1::unique_ptr.306" }
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"class.blink::protocol::Audits::SharedArrayBufferIssueDetails"* }
%"class.blink::protocol::Audits::SharedArrayBufferIssueDetails" = type { %"class.crdtp::ProtocolObject.309", %"class.std::__1::unique_ptr.292", i8, %"class.WTF::String" }
%"class.crdtp::ProtocolObject.309" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.315" = type { %"class.std::__1::unique_ptr.316" }
%"class.std::__1::unique_ptr.316" = type { %"class.std::__1::__compressed_pair.317" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.318" }
%"struct.std::__1::__compressed_pair_elem.318" = type { %"class.blink::protocol::Audits::TrustedWebActivityIssueDetails"* }
%"class.blink::protocol::Audits::TrustedWebActivityIssueDetails" = type { %"class.crdtp::ProtocolObject.319", %"class.WTF::String", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe.301", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe" }
%"class.crdtp::ProtocolObject.319" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.325" = type { %"class.std::__1::unique_ptr.326" }
%"class.std::__1::unique_ptr.326" = type { %"class.std::__1::__compressed_pair.327" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.328" }
%"struct.std::__1::__compressed_pair_elem.328" = type { %"class.blink::protocol::Audits::LowTextContrastIssueDetails"* }
%"class.blink::protocol::Audits::LowTextContrastIssueDetails" = type { %"class.crdtp::ProtocolObject.329", i32, %"class.WTF::String", double, double, double, %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.329" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.335" = type { %"class.std::__1::unique_ptr.336" }
%"class.std::__1::unique_ptr.336" = type { %"class.std::__1::__compressed_pair.337" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.338" }
%"struct.std::__1::__compressed_pair_elem.338" = type { %"class.blink::protocol::Audits::CorsIssueDetails"* }
%"class.blink::protocol::Audits::CorsIssueDetails" = type { %"class.crdtp::ProtocolObject.339", %"class.std::__1::unique_ptr.342", i8, %"class.std::__1::unique_ptr.232", %"class.crdtp::detail::PtrMaybe.291", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::PtrMaybe.351" }
%"class.crdtp::ProtocolObject.339" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.342" = type { %"class.std::__1::__compressed_pair.343" }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.344" }
%"struct.std::__1::__compressed_pair_elem.344" = type { %"class.blink::protocol::Network::CorsErrorStatus"* }
%"class.blink::protocol::Network::CorsErrorStatus" = type { %"class.crdtp::ProtocolObject.345", %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.345" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.351" = type { %"class.std::__1::unique_ptr.352" }
%"class.std::__1::unique_ptr.352" = type { %"class.std::__1::__compressed_pair.353" }
%"class.std::__1::__compressed_pair.353" = type { %"struct.std::__1::__compressed_pair_elem.354" }
%"struct.std::__1::__compressed_pair_elem.354" = type { %"class.blink::protocol::Network::ClientSecurityState"* }
%"class.blink::protocol::Network::ClientSecurityState" = type { %"class.crdtp::ProtocolObject.355", i8, %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.355" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.364" = type { %"class.std::__1::unique_ptr.365" }
%"class.std::__1::unique_ptr.365" = type { %"class.std::__1::__compressed_pair.366" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.367" }
%"struct.std::__1::__compressed_pair_elem.367" = type { %"class.blink::protocol::Audits::AttributionReportingIssueDetails"* }
%"class.blink::protocol::Audits::AttributionReportingIssueDetails" = type { %"class.crdtp::ProtocolObject.368", %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.251", %"class.crdtp::detail::PtrMaybe.231", %"class.crdtp::detail::ValueMaybe.301", %"class.crdtp::detail::ValueMaybe" }
%"class.crdtp::ProtocolObject.368" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.374" = type { %"class.std::__1::unique_ptr.375" }
%"class.std::__1::unique_ptr.375" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"class.blink::protocol::Audits::QuirksModeIssueDetails"* }
%"class.blink::protocol::Audits::QuirksModeIssueDetails" = type { %"class.crdtp::ProtocolObject.378", i8, i32, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.378" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.384" = type { %"class.std::__1::unique_ptr.385" }
%"class.std::__1::unique_ptr.385" = type { %"class.std::__1::__compressed_pair.386" }
%"class.std::__1::__compressed_pair.386" = type { %"struct.std::__1::__compressed_pair_elem.387" }
%"struct.std::__1::__compressed_pair_elem.387" = type { %"class.blink::protocol::Audits::NavigatorUserAgentIssueDetails"* }
%"class.blink::protocol::Audits::NavigatorUserAgentIssueDetails" = type { %"class.crdtp::ProtocolObject.388", %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.291" }
%"class.crdtp::ProtocolObject.388" = type { %"class.crdtp::Serializable" }
%"class.blink::WorkerReportingProxy" = type { i32 (...)** }
%class.scoped_refptr.400 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.401" }
%"struct.std::__1::atomic.401" = type { %"struct.std::__1::__atomic_base.402" }
%"struct.std::__1::__atomic_base.402" = type { %"struct.std::__1::__atomic_base.403" }
%"struct.std::__1::__atomic_base.403" = type { %"struct.std::__1::__cxx_atomic_impl.404" }
%"struct.std::__1::__cxx_atomic_impl.404" = type { %"struct.std::__1::__cxx_atomic_base_impl.405" }
%"struct.std::__1::__cxx_atomic_base_impl.405" = type { i32 }
%"class.std::__1::unique_ptr.406" = type { %"class.std::__1::__compressed_pair.407" }
%"class.std::__1::__compressed_pair.407" = type { %"struct.std::__1::__compressed_pair_elem.408" }
%"struct.std::__1::__compressed_pair_elem.408" = type { %"class.blink::scheduler::WorkerScheduler"* }
%"class.blink::scheduler::WorkerScheduler" = type { %"class.blink::FrameOrWorkerScheduler", %class.scoped_refptr.421, %class.scoped_refptr.421, %class.scoped_refptr.421, %"class.std::__1::map", i32, %"class.blink::scheduler::WorkerThreadScheduler"*, i8, i32, %"class.base::WeakPtrFactory.430" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.409", %"class.base::WeakPtrFactory" }
%"class.WTF::HashMap.409" = type { %"class.WTF::HashTable.410" }
%"class.WTF::HashTable.410" = type <{ %"struct.WTF::KeyValuePair.413"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.413" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.414 }
%class.scoped_refptr.414 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.415", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.415" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.416" }
%"struct.std::__1::atomic.416" = type { %"struct.std::__1::__atomic_base.417" }
%"struct.std::__1::__atomic_base.417" = type { %"struct.std::__1::__atomic_base.418" }
%"struct.std::__1::__atomic_base.418" = type { %"struct.std::__1::__cxx_atomic_impl.419" }
%"struct.std::__1::__cxx_atomic_impl.419" = type { %"struct.std::__1::__cxx_atomic_base_impl.420" }
%"struct.std::__1::__cxx_atomic_base_impl.420" = type { i8 }
%class.scoped_refptr.421 = type { %"class.blink::scheduler::NonMainThreadTaskQueue"* }
%"class.blink::scheduler::NonMainThreadTaskQueue" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.422", %"class.std::__1::__compressed_pair.427" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.423" }
%"struct.std::__1::__compressed_pair_elem.423" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.427" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"class.blink::scheduler::WorkerThreadScheduler" = type opaque
%"class.base::WeakPtrFactory.430" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Platform::NestedMessageLoopRunner" = type { i32 (...)** }
%"class.blink::CrossThreadPersistent.434" = type { %"class.blink::PersistentBase.435" }
%"class.blink::PersistentBase.435" = type { %"class.blink::ConsoleMessageStorage"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::CrossThreadPersistent.436" = type { %"class.blink::PersistentBase.437" }
%"class.blink::PersistentBase.437" = type { %"class.blink::WorkerOrWorkletGlobalScope"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::WorkerOrWorkletGlobalScope" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::ExecutionContext.base", i8, %"class.WTF::String", %"class.base::UnguessableToken", %"class.blink::CrossThreadPersistent.714", %"class.std::__1::unique_ptr.726", %"class.blink::Member.732", %"class.blink::HeapHashSet.734", %class.scoped_refptr.741, %"class.blink::Member.743", %"class.blink::Member.745", i32, %"class.WTF::Vector.554", %"class.blink::WorkerReportingProxy"*, %"class.std::__1::bitset", %"class.blink::Deprecation", %"class.blink::Member.749" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.453" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.444" }
%"class.WTF::Vector.444" = type { %"class.WTF::VectorBuffer.445" }
%"class.WTF::VectorBuffer.445" = type { %"class.WTF::VectorBufferBase.446", [32 x i8] }
%"class.WTF::VectorBufferBase.446" = type { %"struct.std::__1::pair.447"*, i32, i32 }
%"struct.std::__1::pair.447" = type { %"class.WTF::AtomicString", %"class.blink::Member.448" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::Member.448" = type { %"class.blink::MemberBase.449" }
%"class.blink::MemberBase.449" = type { %"class.blink::HeapVector.450"* }
%"class.blink::HeapVector.450" = type opaque
%"class.std::__1::unique_ptr.453" = type { %"class.std::__1::__compressed_pair.454" }
%"class.std::__1::__compressed_pair.454" = type { %"struct.std::__1::__compressed_pair_elem.455" }
%"struct.std::__1::__compressed_pair_elem.455" = type { %"class.WTF::Vector.456"* }
%"class.WTF::Vector.456" = type opaque
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.527", i32, i8, [3 x i8], %"class.blink::HeapVector.529", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.537", %"class.blink::Member.539", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.548", %"class.blink::Member.678", %"class.blink::Member.702", i8 }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.462" }
%"class.WTF::HashMap.462" = type { %"class.WTF::HashTable.463" }
%"class.WTF::HashTable.463" = type <{ %"struct.WTF::KeyValuePair.465"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.465" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.466" }
%"class.blink::Supplementable.466" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.467" }
%"class.blink::HeapHashMap.467" = type { %"class.WTF::HashMap.470" }
%"class.WTF::HashMap.470" = type { %"class.WTF::HashTable.471" }
%"class.WTF::HashTable.471" = type <{ %"struct.WTF::KeyValuePair.473"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.473" = type { i8*, %"class.blink::Member.2617" }
%"class.blink::Member.2617" = type { %"class.blink::MemberBase.2618" }
%"class.blink::MemberBase.2618" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2619" }
%"class.blink::Member.2619" = type { %"class.blink::MemberBase.2620" }
%"class.blink::MemberBase.2620" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.474, %"class.std::__1::unique_ptr.476", %"class.std::__1::unique_ptr.476", %"class.std::__1::unique_ptr.509", %"class.std::__1::unique_ptr.509", %"class.blink::Member", i32, [4 x i8], %"class.WTF::HashSet.523", i32, i32 }
%class.scoped_refptr.474 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.475 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.475 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.476" = type { %"class.std::__1::__compressed_pair.477" }
%"class.std::__1::__compressed_pair.477" = type { %"struct.std::__1::__compressed_pair_elem.478" }
%"struct.std::__1::__compressed_pair_elem.478" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map.485", %"class.std::__1::map.496", %"class.std::__1::map.505"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.479" }
%"class.std::__1::__compressed_pair.479" = type { %"struct.std::__1::__compressed_pair_elem.480" }
%"struct.std::__1::__compressed_pair_elem.480" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.481 }
%union.anon.481 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map.485" = type { %"class.std::__1::__tree.486" }
%"class.std::__1::__tree.486" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.487", %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.487" = type { %"struct.std::__1::__compressed_pair_elem.423" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"class.std::__1::map.496" = type { %"class.std::__1::__tree.497" }
%"class.std::__1::__tree.497" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.498", %"class.std::__1::__compressed_pair.502" }
%"class.std::__1::__compressed_pair.498" = type { %"struct.std::__1::__compressed_pair_elem.423" }
%"class.std::__1::__compressed_pair.502" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"class.std::__1::map.505" = type opaque
%"class.std::__1::unique_ptr.509" = type { %"class.std::__1::__compressed_pair.510" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.511" }
%"struct.std::__1::__compressed_pair_elem.511" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type { %"struct.std::__1::array", %"class.base::flat_map" }
%"struct.std::__1::array" = type { [14 x %"class.blink::PolicyValue"] }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.512" }
%"class.std::__1::vector.512" = type { %"class.std::__1::__vector_base.513" }
%"class.std::__1::__vector_base.513" = type { %"struct.std::__1::pair.514"*, %"struct.std::__1::pair.514"*, %"class.std::__1::__compressed_pair.515" }
%"struct.std::__1::pair.514" = type { i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.516" }
%"struct.std::__1::__compressed_pair_elem.516" = type { %"struct.std::__1::pair.514"* }
%"class.WTF::HashSet.523" = type { %"class.WTF::HashTable.524" }
%"class.WTF::HashTable.524" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.527" = type { %"class.blink::MemberBase.528" }
%"class.blink::MemberBase.528" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.529" = type { %"class.WTF::Vector.532" }
%"class.WTF::Vector.532" = type { %"class.WTF::VectorBuffer.533" }
%"class.WTF::VectorBuffer.533" = type { %"class.WTF::VectorBufferBase.534" }
%"class.WTF::VectorBufferBase.534" = type { %"class.blink::Member.535"*, i32, i32 }
%"class.blink::Member.535" = type opaque
%"class.blink::Member.537" = type { %"class.blink::MemberBase.538" }
%"class.blink::MemberBase.538" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.539" = type { %"class.blink::MemberBase.540" }
%"class.blink::MemberBase.540" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.541", i32, i32 }
%"class.blink::HeapHashMap.541" = type { %"class.WTF::HashMap.544" }
%"class.WTF::HashMap.544" = type { %"class.WTF::HashTable.545" }
%"class.WTF::HashTable.545" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type opaque
%"class.std::__1::unique_ptr.548" = type { %"class.std::__1::__compressed_pair.549" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.550" }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.551" }
%"class.std::__1::unique_ptr.551" = type { %"class.std::__1::__compressed_pair.552" }
%"class.std::__1::__compressed_pair.552" = type { %"struct.std::__1::__compressed_pair_elem.553" }
%"struct.std::__1::__compressed_pair_elem.553" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.554" }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.669" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.598", i32 }>
%"class.std::__1::unique_ptr.598" = type { %"class.std::__1::__compressed_pair.599" }
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.600" }
%"struct.std::__1::__compressed_pair_elem.600" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback", %"class.absl::optional.603", %"class.absl::optional.608", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.622", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.644", %"class.std::__1::map.655", i64, %"class.base::OnceCallback.615", %"class.base::OnceCallback.664", i8, %class.scoped_refptr.613, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.665" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.601 }
%class.scoped_refptr.601 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.602", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.602" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.603" = type { %"class.absl::optional_internal::optional_data.604" }
%"class.absl::optional_internal::optional_data.604" = type { %"class.absl::optional_internal::optional_data_base.605" }
%"class.absl::optional_internal::optional_data_base.605" = type { %"class.absl::optional_internal::optional_data_dtor_base.606" }
%"class.absl::optional_internal::optional_data_dtor_base.606" = type { i8, %union.anon.607 }
%union.anon.607 = type { %"class.base::TimeDelta" }
%"class.absl::optional.608" = type { %"class.absl::optional_internal::optional_data.609" }
%"class.absl::optional_internal::optional_data.609" = type { %"class.absl::optional_internal::optional_data_base.610" }
%"class.absl::optional_internal::optional_data_base.610" = type { %"class.absl::optional_internal::optional_data_dtor_base.611" }
%"class.absl::optional_internal::optional_data_dtor_base.611" = type { i8, %union.anon.612 }
%union.anon.612 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback.615" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.613, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.614" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.614" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.620 }
%class.scoped_refptr.620 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1105", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.613, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.193", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1105" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.621 }
%class.scoped_refptr.621 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.622" = type { %"class.std::__1::__compressed_pair.623" }
%"class.std::__1::__compressed_pair.623" = type { %"struct.std::__1::__compressed_pair_elem.624" }
%"struct.std::__1::__compressed_pair_elem.624" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.625", %class.scoped_refptr.626 }
%"class.base::RepeatingCallback.625" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.626 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.627", [4 x i8] }>
%"class.base::RefCountedThreadSafe.627" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.631", %"class.std::__1::unique_ptr.637", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.643" }
%"class.std::__1::unique_ptr.631" = type { %"class.std::__1::__compressed_pair.632" }
%"class.std::__1::__compressed_pair.632" = type { %"struct.std::__1::__compressed_pair_elem.633" }
%"struct.std::__1::__compressed_pair_elem.633" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.637" = type { %"class.std::__1::__compressed_pair.638" }
%"class.std::__1::__compressed_pair.638" = type { %"struct.std::__1::__compressed_pair_elem.639" }
%"struct.std::__1::__compressed_pair_elem.639" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.643" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.644" = type { %"class.std::__1::__tree.645" }
%"class.std::__1::__tree.645" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.646", %"class.std::__1::__compressed_pair.650" }
%"class.std::__1::__compressed_pair.646" = type { %"struct.std::__1::__compressed_pair_elem.423" }
%"class.std::__1::__compressed_pair.650" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"class.std::__1::map.655" = type { %"class.std::__1::__tree.656" }
%"class.std::__1::__tree.656" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.657", %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.657" = type { %"struct.std::__1::__compressed_pair_elem.423" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"class.base::OnceCallback.615" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.664" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.613 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback.615" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.665" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.669" = type { %"class.std::__1::__compressed_pair.670" }
%"class.std::__1::__compressed_pair.670" = type { %"struct.std::__1::__compressed_pair_elem.671" }
%"struct.std::__1::__compressed_pair_elem.671" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.678" = type { %"class.blink::MemberBase.679" }
%"class.blink::MemberBase.679" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type { %"class.WTF::HashSet.682", %"class.WTF::HashSet.682", %"class.WTF::HashSet.682", %"class.WTF::HashMap.686", %"class.std::__1::unique_ptr.691", %"class.blink::Member", %"class.WTF::HashMap.697" }
%"class.WTF::HashSet.682" = type { %"class.WTF::HashTable.683" }
%"class.WTF::HashTable.683" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.686" = type { %"class.WTF::HashTable.687" }
%"class.WTF::HashTable.687" = type <{ %"struct.WTF::KeyValuePair.690"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.690" = type opaque
%"class.std::__1::unique_ptr.691" = type { %"class.std::__1::__compressed_pair.692" }
%"class.std::__1::__compressed_pair.692" = type { %"struct.std::__1::__compressed_pair_elem.693" }
%"struct.std::__1::__compressed_pair_elem.693" = type { %"class.blink::TrialTokenValidator"* }
%"class.blink::TrialTokenValidator" = type { i32 (...)** }
%"class.WTF::HashMap.697" = type { %"class.WTF::HashTable.698" }
%"class.WTF::HashTable.698" = type <{ %"struct.WTF::KeyValuePair.701"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.701" = type { %"class.WTF::String", %"struct.blink::OriginTrialResult" }
%"struct.blink::OriginTrialResult" = type { %"class.WTF::String", i32, %"class.WTF::Vector.2722" }
%"class.WTF::Vector.2722" = type { %"class.WTF::VectorBuffer.2723" }
%"class.WTF::VectorBuffer.2723" = type { %"class.WTF::VectorBufferBase.2724" }
%"class.WTF::VectorBufferBase.2724" = type { %"struct.blink::OriginTrialTokenResult"*, i32, i32 }
%"struct.blink::OriginTrialTokenResult" = type { %"class.WTF::String", i32, %"class.absl::optional.2725" }
%"class.absl::optional.2725" = type { %"class.absl::optional_internal::optional_data.2726" }
%"class.absl::optional_internal::optional_data.2726" = type { %"class.absl::optional_internal::optional_data_base.2727" }
%"class.absl::optional_internal::optional_data_base.2727" = type { %"class.absl::optional_internal::optional_data_dtor_base.2728" }
%"class.absl::optional_internal::optional_data_dtor_base.2728" = type { i8, %union.anon.2729 }
%union.anon.2729 = type { %"class.blink::TrialToken" }
%"class.blink::TrialToken" = type { %"class.url::Origin", i8, %"class.std::__1::basic_string", %"class.base::Time", %"class.std::__1::basic_string", i8, i32 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.955" }
%"class.base::time_internal::TimeBase.955" = type { i64 }
%"class.blink::Member.702" = type { %"class.blink::MemberBase.703" }
%"class.blink::MemberBase.703" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.539", i8, [7 x i8], %"class.WTF::Vector.554", %"class.blink::HeapVector.706", i8, [7 x i8], %"class.WTF::HashSet.523", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.blink::HeapVector.706" = type { %"class.WTF::Vector.709" }
%"class.WTF::Vector.709" = type { %"class.WTF::VectorBuffer.710" }
%"class.WTF::VectorBuffer.710" = type { %"class.WTF::VectorBufferBase.711" }
%"class.WTF::VectorBufferBase.711" = type { %"class.blink::Member.712"*, i32, i32 }
%"class.blink::Member.712" = type opaque
%"class.blink::CrossThreadPersistent.714" = type { %"class.blink::PersistentBase.715" }
%"class.blink::PersistentBase.715" = type { %"class.blink::WorkerClients"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::WorkerClients" = type { %"class.blink::Supplementable.718" }
%"class.blink::Supplementable.718" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.719" }
%"class.blink::HeapHashMap.719" = type { %"class.WTF::HashMap.722" }
%"class.WTF::HashMap.722" = type { %"class.WTF::HashTable.723" }
%"class.WTF::HashTable.723" = type <{ %"struct.WTF::KeyValuePair.725"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.725" = type { i8*, %"class.blink::Member.2732" }
%"class.blink::Member.2732" = type { %"class.blink::MemberBase.2733" }
%"class.blink::MemberBase.2733" = type { %"class.blink::Supplement.2734"* }
%"class.blink::Supplement.2734" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2735" }
%"class.blink::Member.2735" = type { %"class.blink::MemberBase.2736" }
%"class.blink::MemberBase.2736" = type { %"class.blink::WorkerClients"* }
%"class.std::__1::unique_ptr.726" = type { %"class.std::__1::__compressed_pair.727" }
%"class.std::__1::__compressed_pair.727" = type { %"struct.std::__1::__compressed_pair_elem.728" }
%"struct.std::__1::__compressed_pair_elem.728" = type { %"class.blink::WebContentSettingsClient"* }
%"class.blink::WebContentSettingsClient" = type { i32 (...)** }
%"class.blink::Member.732" = type { %"class.blink::MemberBase.733" }
%"class.blink::MemberBase.733" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type { i32 (...)**, %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.787", %"class.blink::Member.789", %"class.blink::Member.791", %class.scoped_refptr.400, %class.scoped_refptr.400, %"class.blink::Member.795", %"class.blink::Member.797", %"class.blink::Member.803", %"class.blink::Member.807", %"class.blink::Member.858", %"class.blink::HeapHashMap.860", %"class.blink::HeapHashSet.867", %"class.blink::HeapHashSet.867", %"class.blink::HeapHashMap.1053", %"class.blink::HeapVector.1060", %"class.blink::Member.1068", %"class.blink::HeapTaskRunnerTimer", %"class.blink::TaskHandle", %"class.blink::HeapHashMap.1071", %"class.WTF::Vector.1078", %"class.blink::HeapHashSet.1084", %"class.blink::HeapHashSet.1084", %"class.std::__1::unique_ptr.1090", %"class.base::WeakPtr", %"class.blink::TaskHandle", i32, %"class.blink::HeapMojoRemote", %"class.blink::Member.1102", i8, i8, %"class.base::WeakPtrFactory.1104" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.787" = type { %"class.blink::MemberBase.788" }
%"class.blink::MemberBase.788" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.blink::DetachableResourceFetcherProperties" = type opaque
%"class.blink::Member.789" = type { %"class.blink::MemberBase.790" }
%"class.blink::MemberBase.790" = type { %"class.blink::ResourceLoadObserver"* }
%"class.blink::ResourceLoadObserver" = type opaque
%"class.blink::Member.791" = type { %"class.blink::MemberBase.792" }
%"class.blink::MemberBase.792" = type { %"class.blink::FetchContext"* }
%"class.blink::FetchContext" = type { i32 (...)** }
%"class.blink::Member.795" = type { %"class.blink::MemberBase.796" }
%"class.blink::MemberBase.796" = type { %"class.blink::DetachableUseCounter"* }
%"class.blink::DetachableUseCounter" = type opaque
%"class.blink::Member.797" = type { %"class.blink::MemberBase.798" }
%"class.blink::MemberBase.798" = type { %"class.blink::DetachableConsoleLogger"* }
%"class.blink::DetachableConsoleLogger" = type { %"class.blink::ConsoleLogger", %"class.blink::Member.801" }
%"class.blink::Member.801" = type { %"class.blink::MemberBase.802" }
%"class.blink::MemberBase.802" = type { %"class.blink::ConsoleLogger"* }
%"class.blink::Member.803" = type { %"class.blink::MemberBase.804" }
%"class.blink::MemberBase.804" = type { %"class.blink::ResourceFetcher::LoaderFactory"* }
%"class.blink::ResourceFetcher::LoaderFactory" = type { i32 (...)** }
%"class.blink::Member.807" = type { %"class.blink::MemberBase.808" }
%"class.blink::MemberBase.808" = type { %"class.blink::ResourceLoadScheduler"* }
%"class.blink::ResourceLoadScheduler" = type <{ %"class.blink::FrameOrWorkerScheduler::Observer", %"class.blink::Member.811", i8, [3 x i8], i32, i64, i64, i64, i64, %"class.WTF::HashMap.813", %"class.WTF::HashSet.818", i8, [3 x i8], i32, %"class.blink::HeapHashMap.822", %"class.std::__1::map.829", %"class.std::__1::map.840", %"class.std::__1::unique_ptr.849", %"class.blink::Member.797", %"class.base::Clock"*, i32, i8, [3 x i8], i32, [4 x i8], %"class.blink::Member.855", %"class.mojo::InlinedStructPtr.857", [4 x i8] }>
%"class.blink::FrameOrWorkerScheduler::Observer" = type { i32 (...)** }
%"class.blink::Member.811" = type { %"class.blink::MemberBase.812" }
%"class.blink::MemberBase.812" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.WTF::HashMap.813" = type { %"class.WTF::HashTable.814" }
%"class.WTF::HashTable.814" = type <{ %"struct.WTF::KeyValuePair.817"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.817" = type <{ i64, i32, [4 x i8] }>
%"class.WTF::HashSet.818" = type { %"class.WTF::HashTable.819" }
%"class.WTF::HashTable.819" = type <{ i64*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.822" = type { %"class.WTF::HashMap.825" }
%"class.WTF::HashMap.825" = type { %"class.WTF::HashTable.826" }
%"class.WTF::HashTable.826" = type <{ %"struct.WTF::KeyValuePair.828"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.828" = type opaque
%"class.std::__1::map.829" = type { %"class.std::__1::__tree.830" }
%"class.std::__1::__tree.830" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.831", %"class.std::__1::__compressed_pair.835" }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.423" }
%"class.std::__1::__compressed_pair.835" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"class.std::__1::map.840" = type { %"class.std::__1::__tree.841" }
%"class.std::__1::__tree.841" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.842", %"class.std::__1::__compressed_pair.846" }
%"class.std::__1::__compressed_pair.842" = type { %"struct.std::__1::__compressed_pair_elem.423" }
%"class.std::__1::__compressed_pair.846" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"class.std::__1::unique_ptr.849" = type { %"class.std::__1::__compressed_pair.850" }
%"class.std::__1::__compressed_pair.850" = type { %"struct.std::__1::__compressed_pair_elem.851" }
%"struct.std::__1::__compressed_pair_elem.851" = type { %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* }
%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle" = type { %"class.base::WeakPtr", %"class.blink::FrameOrWorkerScheduler::Observer"* }
%"class.base::Clock" = type opaque
%"class.blink::Member.855" = type { %"class.blink::MemberBase.856" }
%"class.blink::MemberBase.856" = type { %"class.blink::LoadingBehaviorObserver"* }
%"class.blink::LoadingBehaviorObserver" = type opaque
%"class.mojo::InlinedStructPtr.857" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.858" = type { %"class.blink::MemberBase.859" }
%"class.blink::MemberBase.859" = type { %"class.blink::BackForwardCacheLoaderHelper"* }
%"class.blink::BackForwardCacheLoaderHelper" = type opaque
%"class.blink::HeapHashMap.860" = type { %"class.WTF::HashMap.863" }
%"class.WTF::HashMap.863" = type { %"class.WTF::HashTable.864" }
%"class.WTF::HashTable.864" = type <{ %"struct.WTF::KeyValuePair.866"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.866" = type opaque
%"class.blink::HeapHashSet.867" = type { %"class.WTF::HashSet.870" }
%"class.WTF::HashSet.870" = type { %"class.WTF::HashTable.871" }
%"class.WTF::HashTable.871" = type <{ %"class.blink::WeakMember.873"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.873" = type { %"class.blink::MemberBase.874" }
%"class.blink::MemberBase.874" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional.877", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.903", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet.996", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.1028", %"class.blink::ResourceResponse", %class.scoped_refptr.1030, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional.877" = type { %"class.absl::optional_internal::optional_data.878" }
%"class.absl::optional_internal::optional_data.878" = type { %"class.absl::optional_internal::optional_data_base.879" }
%"class.absl::optional_internal::optional_data_base.879" = type { %"class.absl::optional_internal::optional_data_dtor_base.880" }
%"class.absl::optional_internal::optional_data_dtor_base.880" = type { i8, %union.anon.881 }
%union.anon.881 = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.888", i8, %"class.absl::optional.893", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.882" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.882" = type { %"class.std::__1::__compressed_pair.883" }
%"class.std::__1::__compressed_pair.883" = type { %"struct.std::__1::__compressed_pair_elem.884" }
%"struct.std::__1::__compressed_pair_elem.884" = type { %"class.blink::KURL"* }
%"class.absl::optional.888" = type { %"class.absl::optional_internal::optional_data.889" }
%"class.absl::optional_internal::optional_data.889" = type { %"class.absl::optional_internal::optional_data_base.890" }
%"class.absl::optional_internal::optional_data_base.890" = type { %"class.absl::optional_internal::optional_data_dtor_base.891" }
%"class.absl::optional_internal::optional_data_dtor_base.891" = type { i8, [7 x i8], %union.anon.892 }
%union.anon.892 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.absl::optional.893" = type { %"class.absl::optional_internal::optional_data.894" }
%"class.absl::optional_internal::optional_data.894" = type { %"class.absl::optional_internal::optional_data_base.895" }
%"class.absl::optional_internal::optional_data_base.895" = type { %"class.absl::optional_internal::optional_data_dtor_base.896" }
%"class.absl::optional_internal::optional_data_dtor_base.896" = type { i8, %union.anon.897 }
%union.anon.897 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector.898", %"class.WTF::Vector.578" }
%"class.WTF::Vector.898" = type { %"class.WTF::VectorBuffer.899" }
%"class.WTF::VectorBuffer.899" = type { %"class.WTF::VectorBufferBase.900" }
%"class.WTF::VectorBufferBase.900" = type { i32*, i32, i32 }
%"class.WTF::Vector.578" = type { %"class.WTF::VectorBuffer.579" }
%"class.WTF::VectorBuffer.579" = type { %"class.WTF::VectorBufferBase.580" }
%"class.WTF::VectorBufferBase.580" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.903" = type { %"class.WTF::VectorBuffer.904" }
%"class.WTF::VectorBuffer.904" = type { %"class.WTF::VectorBufferBase.905" }
%"class.WTF::VectorBufferBase.905" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.992" }
%"class.WTF::HashMap.992" = type { %"class.WTF::HashTable.993" }
%"class.WTF::HashTable.993" = type <{ %"struct.WTF::KeyValuePair.995"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.995" = type <{ %"class.blink::WeakMember.2688", i32, [4 x i8] }>
%"class.blink::WeakMember.2688" = type { %"class.blink::MemberBase.2689" }
%"class.blink::MemberBase.2689" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.2690", [7 x i8], %"class.blink::Member.1066", i8, [7 x i8] }>
%"class.blink::ThreadState::PrefinalizerRegistration.2690" = type { i8 }
%"class.blink::Member.1066" = type { %"class.blink::MemberBase.874" }
%"class.blink::HeapHashSet.996" = type { %"class.WTF::HashSet.999" }
%"class.WTF::HashSet.999" = type { %"class.WTF::HashTable.1000" }
%"class.WTF::HashTable.1000" = type <{ %"class.blink::WeakMember.1002"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1002" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias", %"class.WTF::String", %"class.WTF::HashSet.1003", i8, i8, %class.scoped_refptr.1008, %class.scoped_refptr.1024, %class.scoped_refptr.1026 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.base::StrongAlias" = type { i8 }
%"class.WTF::HashSet.1003" = type { %"class.WTF::HashTable.1004" }
%"class.WTF::HashTable.1004" = type <{ %"struct.std::__1::pair.1007"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair.1007" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%class.scoped_refptr.1008 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.1009", i32, i32, %"class.blink::Persistent.1011" }
%"class.WTF::RefCounted.1009" = type { %"class.base::RefCounted.1010" }
%"class.base::RefCounted.1010" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1011" = type { %"class.blink::PersistentBase.1012" }
%"class.blink::PersistentBase.1012" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.1015" }
%"class.blink::HeapHashMap.1015" = type { %"class.WTF::HashMap.1018" }
%"class.WTF::HashMap.1018" = type { %"class.WTF::HashTable.1019" }
%"class.WTF::HashTable.1019" = type <{ %"struct.WTF::KeyValuePair.1021"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1021" = type { %"class.blink::WeakMember.1022", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.1022" = type { %"class.blink::MemberBase.1023" }
%"class.blink::MemberBase.1023" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%class.scoped_refptr.1024 = type { %"class.base::RefCountedData.1025"* }
%"class.base::RefCountedData.1025" = type opaque
%class.scoped_refptr.1026 = type { %"class.base::RefCountedData.1027"* }
%"class.base::RefCountedData.1027" = type opaque
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.475, %class.scoped_refptr.475, %class.scoped_refptr.475, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.911, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.923", %"class.absl::optional.928", %"class.absl::optional.938", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.943", %"class.absl::optional.938", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.938", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.943", %"class.absl::optional.948", i8, %class.scoped_refptr.953 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.906" }
%"class.WTF::HashMap.906" = type { %"class.WTF::HashTable.907" }
%"class.WTF::HashTable.907" = type <{ %"struct.WTF::KeyValuePair.910"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.910" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%class.scoped_refptr.911 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.912", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector", %class.scoped_refptr.921, i8, %"class.url::Origin" }
%"class.base::RefCounted.912" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebString" = type { %class.scoped_refptr.192 }
%"class.blink::WebVector" = type { %"class.std::__1::vector.913" }
%"class.std::__1::vector.913" = type { %"class.std::__1::__vector_base.914" }
%"class.std::__1::__vector_base.914" = type { %"class.std::__1::unique_ptr.915"*, %"class.std::__1::unique_ptr.915"*, %"class.std::__1::__compressed_pair.916" }
%"class.std::__1::unique_ptr.915" = type { %"class.std::__1::__compressed_pair.2603" }
%"class.std::__1::__compressed_pair.2603" = type { %"struct.std::__1::__compressed_pair_elem.2604" }
%"struct.std::__1::__compressed_pair_elem.2604" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.916" = type { %"struct.std::__1::__compressed_pair_elem.917" }
%"struct.std::__1::__compressed_pair_elem.917" = type { %"class.std::__1::unique_ptr.915"* }
%class.scoped_refptr.921 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.922", [4 x i8] }>
%"class.base::RefCountedThreadSafe.922" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional.923" = type { %"class.absl::optional_internal::optional_data.924" }
%"class.absl::optional_internal::optional_data.924" = type { %"class.absl::optional_internal::optional_data_base.925" }
%"class.absl::optional_internal::optional_data_base.925" = type { %"class.absl::optional_internal::optional_data_dtor_base.926" }
%"class.absl::optional_internal::optional_data_dtor_base.926" = type { i8, %union.anon.927 }
%union.anon.927 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.928" = type { %"class.absl::optional_internal::optional_data.929" }
%"class.absl::optional_internal::optional_data.929" = type { %"class.absl::optional_internal::optional_data_base.930" }
%"class.absl::optional_internal::optional_data_base.930" = type { %"class.absl::optional_internal::optional_data_dtor_base.931" }
%"class.absl::optional_internal::optional_data_dtor_base.931" = type { i8, %union.anon.932 }
%union.anon.932 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.933", %"class.WTF::Vector.578", %"class.WTF::String" }
%"class.WTF::Vector.933" = type { %"class.WTF::VectorBuffer.934" }
%"class.WTF::VectorBuffer.934" = type { %"class.WTF::VectorBufferBase.935" }
%"class.WTF::VectorBufferBase.935" = type { %class.scoped_refptr.475*, i32, i32 }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.603", %"class.absl::optional.603" }
%"class.absl::optional.938" = type { %"class.absl::optional_internal::optional_data.939" }
%"class.absl::optional_internal::optional_data.939" = type { %"class.absl::optional_internal::optional_data_base.940" }
%"class.absl::optional_internal::optional_data_base.940" = type { %"class.absl::optional_internal::optional_data_dtor_base.941" }
%"class.absl::optional_internal::optional_data_dtor_base.941" = type { i8, %union.anon.942 }
%union.anon.942 = type { %"class.WTF::String" }
%"class.absl::optional.943" = type { %"class.absl::optional_internal::optional_data.944" }
%"class.absl::optional_internal::optional_data.944" = type { %"class.absl::optional_internal::optional_data_base.945" }
%"class.absl::optional_internal::optional_data_base.945" = type { %"class.absl::optional_internal::optional_data_dtor_base.946" }
%"class.absl::optional_internal::optional_data_dtor_base.946" = type { i8, %union.anon.947 }
%union.anon.947 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.948" = type { %"class.absl::optional_internal::optional_data.949" }
%"class.absl::optional_internal::optional_data.949" = type { %"class.absl::optional_internal::optional_data_base.950" }
%"class.absl::optional_internal::optional_data_base.950" = type { %"class.absl::optional_internal::optional_data_dtor_base.951" }
%"class.absl::optional_internal::optional_data_dtor_base.951" = type { i8, %union.anon.952 }
%union.anon.952 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%class.scoped_refptr.953 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.2608", %"class.base::internal::flat_tree.2609" }
%"class.base::RefCountedThreadSafe.2608" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree.2609" = type { %"class.std::__1::vector.2610" }
%"class.std::__1::vector.2610" = type { %"class.std::__1::__vector_base.2611" }
%"class.std::__1::__vector_base.2611" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2612" }
%"class.std::__1::__compressed_pair.2612" = type { %"struct.std::__1::__compressed_pair_elem.2613" }
%"struct.std::__1::__compressed_pair_elem.2613" = type { i32* }
%"class.blink::Member.1028" = type { %"class.blink::MemberBase.1029" }
%"class.blink::MemberBase.1029" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.956", %class.scoped_refptr.971, %class.scoped_refptr.972, %"struct.blink::CacheControlHeader", %"class.absl::optional.603", %"class.absl::optional.973", %"class.absl::optional.973", %"class.absl::optional.973", i64, %"class.blink::KURL", %"class.WTF::Vector.978", %"class.WTF::String", %"class.WTF::Vector.578", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.943", %"class.WTF::Vector.578", %"class.blink::KURL", %"class.absl::optional.983" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array.954", i8 }
%"struct.std::__1::array.954" = type { [16 x i8] }
%"class.absl::optional.956" = type { %"class.absl::optional_internal::optional_data.957" }
%"class.absl::optional_internal::optional_data.957" = type { %"class.absl::optional_internal::optional_data_base.958" }
%"class.absl::optional_internal::optional_data_base.958" = type { %"class.absl::optional_internal::optional_data_dtor_base.959" }
%"class.absl::optional_internal::optional_data_dtor_base.959" = type { i8, %union.anon.960 }
%union.anon.960 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.578", %"class.WTF::String", i64, i64, %"class.WTF::Vector.961", %"class.WTF::Vector.966" }
%"class.WTF::Vector.961" = type { %"class.WTF::VectorBuffer.962" }
%"class.WTF::VectorBuffer.962" = type { %"class.WTF::VectorBufferBase.963" }
%"class.WTF::VectorBufferBase.963" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::Vector.966" = type { %"class.WTF::VectorBuffer.967" }
%"class.WTF::VectorBuffer.967" = type { %"class.WTF::VectorBufferBase.968" }
%"class.WTF::VectorBufferBase.968" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.971 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.972 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"class.absl::optional.973" = type { %"class.absl::optional_internal::optional_data.974" }
%"class.absl::optional_internal::optional_data.974" = type { %"class.absl::optional_internal::optional_data_base.975" }
%"class.absl::optional_internal::optional_data_base.975" = type { %"class.absl::optional_internal::optional_data_dtor_base.976" }
%"class.absl::optional_internal::optional_data_dtor_base.976" = type { i8, %union.anon.977 }
%union.anon.977 = type { %"class.base::Time" }
%"class.WTF::Vector.978" = type { %"class.WTF::VectorBuffer.979" }
%"class.WTF::VectorBuffer.979" = type { %"class.WTF::VectorBufferBase.980" }
%"class.WTF::VectorBufferBase.980" = type { %"class.blink::KURL"*, i32, i32 }
%"class.absl::optional.983" = type { %"class.absl::optional_internal::optional_data.984" }
%"class.absl::optional_internal::optional_data.984" = type { %"class.absl::optional_internal::optional_data_base.985" }
%"class.absl::optional_internal::optional_data_base.985" = type { %"class.absl::optional_internal::optional_data_dtor_base.986" }
%"class.absl::optional_internal::optional_data_dtor_base.986" = type { i8, %union.anon.987 }
%union.anon.987 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.1030 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.1031", i64, %"class.WTF::Vector.1033", %"class.WTF::Vector.1038" }
%"class.WTF::RefCounted.1031" = type { %"class.base::RefCounted.1032" }
%"class.base::RefCounted.1032" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1033" = type { %"class.WTF::VectorBuffer.1034" }
%"class.WTF::VectorBuffer.1034" = type { %"class.WTF::VectorBufferBase.1035" }
%"class.WTF::VectorBufferBase.1035" = type { i8*, i32, i32 }
%"class.WTF::Vector.1038" = type { %"class.WTF::VectorBuffer.1039" }
%"class.WTF::VectorBuffer.1039" = type { %"class.WTF::VectorBufferBase.1040" }
%"class.WTF::VectorBufferBase.1040" = type { %"class.std::__1::unique_ptr.1041"*, i32, i32 }
%"class.std::__1::unique_ptr.1041" = type opaque
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree.1044" }
%"class.std::__1::__tree.1044" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1045", %"class.std::__1::__compressed_pair.1049" }
%"class.std::__1::__compressed_pair.1045" = type { %"struct.std::__1::__compressed_pair_elem.423" }
%"class.std::__1::__compressed_pair.1049" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"class.blink::HeapHashMap.1053" = type { %"class.WTF::HashMap.1056" }
%"class.WTF::HashMap.1056" = type { %"class.WTF::HashTable.1057" }
%"class.WTF::HashTable.1057" = type <{ %"struct.WTF::KeyValuePair.1059"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1059" = type opaque
%"class.blink::HeapVector.1060" = type { %"class.WTF::Vector.1063" }
%"class.WTF::Vector.1063" = type { %"class.WTF::VectorBuffer.1064" }
%"class.WTF::VectorBuffer.1064" = type { %"class.WTF::VectorBufferBase.1065" }
%"class.WTF::VectorBufferBase.1065" = type { %"class.blink::Member.1066"*, i32, i32 }
%"class.blink::Member.1068" = type { %"class.blink::MemberBase.1069" }
%"class.blink::MemberBase.1069" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.740", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.400, %"class.base::WeakPtrFactory.1070" }
%"class.base::WeakPtrFactory.1070" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.740" = type { %"class.blink::MemberBase.733" }
%"class.blink::HeapHashMap.1071" = type { %"class.WTF::HashMap.1074" }
%"class.WTF::HashMap.1074" = type { %"class.WTF::HashTable.1075" }
%"class.WTF::HashTable.1075" = type <{ %"struct.WTF::KeyValuePair.1077"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1077" = type opaque
%"class.WTF::Vector.1078" = type { %"class.WTF::VectorBuffer.1079" }
%"class.WTF::VectorBuffer.1079" = type { %"class.WTF::VectorBufferBase.1080" }
%"class.WTF::VectorBufferBase.1080" = type { %class.scoped_refptr.1081*, i32, i32 }
%class.scoped_refptr.1081 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::HeapHashSet.1084" = type { %"class.WTF::HashSet.1087" }
%"class.WTF::HashSet.1087" = type { %"class.WTF::HashTable.1088" }
%"class.WTF::HashTable.1088" = type <{ %"class.blink::Member.1028"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1090" = type { %"class.std::__1::__compressed_pair.1091" }
%"class.std::__1::__compressed_pair.1091" = type { %"struct.std::__1::__compressed_pair_elem.1092" }
%"struct.std::__1::__compressed_pair_elem.1092" = type { %"class.WTF::HashSet.1093"* }
%"class.WTF::HashSet.1093" = type { %"class.WTF::HashTable.1094" }
%"class.WTF::HashTable.1094" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.775 }
%class.scoped_refptr.775 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.1100" }
%"class.blink::Member.1100" = type { %"class.blink::MemberBase.1101" }
%"class.blink::MemberBase.1101" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.1102" = type { %"class.blink::MemberBase.1103" }
%"class.blink::MemberBase.1103" = type { %"class.blink::SubresourceWebBundleList"* }
%"class.blink::SubresourceWebBundleList" = type opaque
%"class.base::WeakPtrFactory.1104" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.734" = type { %"class.WTF::HashSet.737" }
%"class.WTF::HashSet.737" = type { %"class.WTF::HashTable.738" }
%"class.WTF::HashTable.738" = type <{ %"class.blink::WeakMember.740"*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.741 = type { %"class.blink::WebWorkerFetchContext"* }
%"class.blink::WebWorkerFetchContext" = type <{ i32 (...)**, %"class.base::RefCounted.742", [4 x i8] }>
%"class.base::RefCounted.742" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.743" = type { %"class.blink::MemberBase.744" }
%"class.blink::MemberBase.744" = type { %"class.blink::SubresourceFilter"* }
%"class.blink::SubresourceFilter" = type opaque
%"class.blink::Member.745" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::WorkerOrWorkletScriptController"* }
%"class.blink::WorkerOrWorkletScriptController" = type opaque
%"class.WTF::Vector.554" = type { %"class.WTF::VectorBuffer.555" }
%"class.WTF::VectorBuffer.555" = type { %"class.WTF::VectorBufferBase.556" }
%"class.WTF::VectorBufferBase.556" = type { %"class.mojo::StructPtr.557"*, i32, i32 }
%"class.mojo::StructPtr.557" = type { %"class.std::__1::unique_ptr.558" }
%"class.std::__1::unique_ptr.558" = type { %"class.std::__1::__compressed_pair.559" }
%"class.std::__1::__compressed_pair.559" = type { %"struct.std::__1::__compressed_pair_elem.560" }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.561", %"class.WTF::HashMap.568", %"class.WTF::HashMap.573", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.578", i32, %"class.mojo::StructPtr.583", %"class.WTF::Vector.578" }
%"class.mojo::StructPtr.561" = type { %"class.std::__1::unique_ptr.562" }
%"class.std::__1::unique_ptr.562" = type { %"class.std::__1::__compressed_pair.563" }
%"class.std::__1::__compressed_pair.563" = type { %"struct.std::__1::__compressed_pair_elem.564" }
%"struct.std::__1::__compressed_pair_elem.564" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.568" = type { %"class.WTF::HashTable.569" }
%"class.WTF::HashTable.569" = type <{ %"struct.WTF::KeyValuePair.572"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.572" = type { i32, %"class.WTF::String" }
%"class.WTF::HashMap.573" = type { %"class.WTF::HashTable.574" }
%"class.WTF::HashTable.574" = type <{ %"struct.WTF::KeyValuePair.577"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.577" = type { i32, %"class.mojo::StructPtr.2738" }
%"class.mojo::StructPtr.2738" = type { %"class.std::__1::unique_ptr.2739" }
%"class.std::__1::unique_ptr.2739" = type { %"class.std::__1::__compressed_pair.2740" }
%"class.std::__1::__compressed_pair.2740" = type { %"struct.std::__1::__compressed_pair_elem.2741" }
%"struct.std::__1::__compressed_pair_elem.2741" = type { %"class.network::mojom::blink::CSPSourceList"* }
%"class.network::mojom::blink::CSPSourceList" = type <{ %"class.WTF::Vector.2742", %"class.WTF::Vector.578", %"class.WTF::Vector.2747", i8, i8, i8, i8, i8, i8, i8, i8, i8, [7 x i8] }>
%"class.WTF::Vector.2742" = type { %"class.WTF::VectorBuffer.2743" }
%"class.WTF::VectorBuffer.2743" = type { %"class.WTF::VectorBufferBase.2744" }
%"class.WTF::VectorBufferBase.2744" = type { %"class.mojo::StructPtr.561"*, i32, i32 }
%"class.WTF::Vector.2747" = type { %"class.WTF::VectorBuffer.2748" }
%"class.WTF::VectorBuffer.2748" = type { %"class.WTF::VectorBufferBase.2749" }
%"class.WTF::VectorBufferBase.2749" = type { %"class.mojo::StructPtr.2750"*, i32, i32 }
%"class.mojo::StructPtr.2750" = type { %"class.std::__1::unique_ptr.2751" }
%"class.std::__1::unique_ptr.2751" = type { %"class.std::__1::__compressed_pair.2752" }
%"class.std::__1::__compressed_pair.2752" = type { %"struct.std::__1::__compressed_pair_elem.2753" }
%"struct.std::__1::__compressed_pair_elem.2753" = type { %"class.network::mojom::blink::CSPHashSource"* }
%"class.network::mojom::blink::CSPHashSource" = type { i32, %"class.WTF::Vector.2699" }
%"class.WTF::Vector.2699" = type { %"class.WTF::VectorBuffer.2700" }
%"class.WTF::VectorBuffer.2700" = type { %"class.WTF::VectorBufferBase.2693" }
%"class.WTF::VectorBufferBase.2693" = type { i8*, i32, i32 }
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.583" = type { %"class.std::__1::unique_ptr.584" }
%"class.std::__1::unique_ptr.584" = type { %"class.std::__1::__compressed_pair.585" }
%"class.std::__1::__compressed_pair.585" = type { %"struct.std::__1::__compressed_pair_elem.586" }
%"struct.std::__1::__compressed_pair_elem.586" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.578", i8, i8, [6 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.747", i32, [4 x i8] }>
%"class.std::__1::bitset.747" = type { %"class.std::__1::__bitset.748" }
%"class.std::__1::__bitset.748" = type { [25 x i64] }
%"class.blink::Member.749" = type { %"class.blink::MemberBase.750" }
%"class.blink::MemberBase.750" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type { %"class.blink::V8PerContextData::Data", %"class.blink::NameClient" }
%"class.blink::V8PerContextData::Data" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::CrossThreadPersistent.753" = type { %"class.blink::PersistentBase.754" }
%"class.blink::PersistentBase.754" = type { %"class.blink::WorkerInspectorController"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::WorkerInspectorController" = type opaque
%class.scoped_refptr.755 = type { %"class.blink::WorkerThread::RefCountedWaitableEvent"* }
%"class.blink::WorkerThread::RefCountedWaitableEvent" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.756 }
%class.scoped_refptr.756 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::HashSet.757" = type { %"class.WTF::HashTable.758" }
%"class.WTF::HashTable.758" = type <{ %"class.blink::WorkerThread"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashSet.761" = type { %"class.WTF::HashTable.762" }
%"class.WTF::HashTable.762" = type <{ %"class.std::__1::unique_ptr.765"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.765" = type opaque
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.769, i8, [7 x i8] }>
%class.scoped_refptr.769 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.770", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.770" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.771" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.776" }
%"class.blink::PersistentBase.776" = type { %"class.blink::ThreadedMessagingProxyBase"*, %"class.blink::PersistentNodePtr" }
%"class.blink::WorkletGlobalScopeProxy" = type { %"class.blink::GarbageCollectedMixin" }
%"class.std::__1::unique_ptr.777" = type { %"class.std::__1::__compressed_pair.778" }
%"class.std::__1::__compressed_pair.778" = type { %"struct.std::__1::__compressed_pair_elem.779" }
%"struct.std::__1::__compressed_pair_elem.779" = type { %"class.blink::ThreadedWorkletObjectProxy"* }
%"class.blink::ThreadedWorkletObjectProxy" = type { %"class.blink::ThreadedObjectProxyBase", %"class.blink::CrossThreadWeakPersistent" }
%"class.blink::ThreadedObjectProxyBase" = type { %"class.blink::WorkerReportingProxy", %"class.blink::CrossThreadPersistent" }
%"class.blink::CrossThreadWeakPersistent" = type { %"class.blink::PersistentBase.780" }
%"class.blink::PersistentBase.780" = type { %"class.blink::ThreadedWorkletMessagingProxy"*, %"class.blink::CrossThreadPersistentNodePtr.781" }
%"class.blink::CrossThreadPersistentNodePtr.781" = type { %"struct.std::__1::atomic" }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.527", i32, i8, [3 x i8], %"class.blink::HeapVector.529", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.537", %"class.blink::Member.539", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.548", %"class.blink::Member.678", %"class.blink::Member.702", i8, [7 x i8] }>
%"class.blink::WorkletModuleResponsesMap" = type { i8, [7 x i8], %"class.WTF::HashMap.1115", %"class.WTF::Mutex" }
%"class.WTF::HashMap.1115" = type { %"class.WTF::HashTable.1116" }
%"class.WTF::HashTable.1116" = type <{ %"struct.WTF::KeyValuePair.1119"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1119" = type opaque
%"class.absl::optional.1120" = type { %"class.absl::optional_internal::optional_data.1121" }
%"class.absl::optional_internal::optional_data.1121" = type { %"class.absl::optional_internal::optional_data_base.1122" }
%"class.absl::optional_internal::optional_data_base.1122" = type { %"class.absl::optional_internal::optional_data_dtor_base.1123" }
%"class.absl::optional_internal::optional_data_dtor_base.1123" = type { i8, %union.anon.1124 }
%union.anon.1124 = type { %"struct.blink::WorkerBackingThreadStartupData" }
%"struct.blink::WorkerBackingThreadStartupData" = type { i32, i32 }
%"class.absl::optional.2500" = type { %"class.absl::optional_internal::optional_data.2501" }
%"class.absl::optional_internal::optional_data.2501" = type { %"class.absl::optional_internal::optional_data_base.2502" }
%"class.absl::optional_internal::optional_data_base.2502" = type { %"class.absl::optional_internal::optional_data_dtor_base.2503" }
%"class.absl::optional_internal::optional_data_dtor_base.2503" = type { i8, [7 x i8], %union.anon.2504 }
%union.anon.2504 = type { %"struct.blink::UserAgentMetadata" }
%"struct.blink::UserAgentMetadata" = type <{ %"class.std::__1::vector.2450", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [7 x i8] }>
%"class.std::__1::vector.2450" = type { %"class.std::__1::__vector_base.2451" }
%"class.std::__1::__vector_base.2451" = type { %"struct.blink::UserAgentBrandVersion"*, %"struct.blink::UserAgentBrandVersion"*, %"class.std::__1::__compressed_pair.2452" }
%"struct.blink::UserAgentBrandVersion" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.2452" = type { %"struct.std::__1::__compressed_pair_elem.2453" }
%"struct.std::__1::__compressed_pair_elem.2453" = type { %"struct.blink::UserAgentBrandVersion"* }
%"class.std::__1::unique_ptr.2468" = type { %"class.std::__1::__compressed_pair.2469" }
%"class.std::__1::__compressed_pair.2469" = type { %"struct.std::__1::__compressed_pair_elem.2470" }
%"struct.std::__1::__compressed_pair_elem.2470" = type { %"class.blink::WorkerSettings"* }
%"class.blink::WorkerSettings" = type { i8, i8, i8, i8, %"class.blink::GenericFontFamilySettings" }
%"class.blink::GenericFontFamilySettings" = type { %"class.WTF::HashMap.2471", %"class.WTF::HashMap.2471", %"class.WTF::HashMap.2471", %"class.WTF::HashMap.2471", %"class.WTF::HashMap.2471", %"class.WTF::HashMap.2471", %"class.WTF::HashMap.2471", %"class.std::__1::unique_ptr.2476" }
%"class.WTF::HashMap.2471" = type { %"class.WTF::HashTable.2472" }
%"class.WTF::HashTable.2472" = type <{ %"struct.WTF::KeyValuePair.2475"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2475" = type { i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.2476" = type { %"class.std::__1::__compressed_pair.2477" }
%"class.std::__1::__compressed_pair.2477" = type { %"struct.std::__1::__compressed_pair_elem.2478" }
%"struct.std::__1::__compressed_pair_elem.2478" = type { %"class.WTF::Vector.2479"* }
%"class.WTF::Vector.2479" = type { %"class.WTF::VectorBuffer.2762" }
%"class.WTF::VectorBuffer.2762" = type { %"class.WTF::VectorBufferBase.2763" }
%"class.WTF::VectorBufferBase.2763" = type { %"struct.std::__1::pair.2764"*, i32, i32 }
%"struct.std::__1::pair.2764" = type { i32, %"class.WTF::String" }
%"class.mojo::NullRemote" = type { i8 }
%"struct.blink::BeginFrameProviderParams" = type { %"class.viz::FrameSinkId", %"class.viz::FrameSinkId" }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.blink::MultiToken.2494" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.absl::optional.2511" = type { %"class.absl::optional_internal::optional_data.2512" }
%"class.absl::optional_internal::optional_data.2512" = type { %"class.absl::optional_internal::optional_data_base.2513" }
%"class.absl::optional_internal::optional_data_base.2513" = type { %"class.absl::optional_internal::optional_data_dtor_base.2514" }
%"class.absl::optional_internal::optional_data_dtor_base.2514" = type { i8, %union.anon.2515 }
%union.anon.2515 = type { %"class.util::TokenType.2516" }
%"class.util::TokenType.2516" = type { %"class.base::StrongAlias.2517" }
%"class.base::StrongAlias.2517" = type { %"class.base::UnguessableToken" }
%"class.blink::LocalDOMWindow" = type { %"class.blink::DOMWindow", %"class.blink::ExecutionContext.base", %"class.blink::Supplementable.1238", %"class.blink::ThreadState::PrefinalizerRegistration.1246", %"class.blink::Member.1247", %"class.blink::Member.1249", %"class.blink::Member.1251", i8, %"class.blink::Member.1253", %"class.blink::Member.1255", %"class.blink::Member.1257", %"class.blink::Member.1257", %"class.blink::Member.1257", %"class.blink::Member.1257", %"class.blink::Member.1257", %"class.blink::Member.1257", %"class.blink::Member.1259", %"class.blink::Member.1261", %"class.blink::Member.1263", %"class.blink::Member.749", %"class.blink::Member.1265", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.578", %"class.blink::Member.1267", %class.scoped_refptr.1269, %"class.blink::HeapHashSet.1332", %"class.blink::Member.1339", %"class.blink::HeapHashMap.1352", %"class.std::__1::unique_ptr.1359", %"class.blink::Member.1365", %"class.blink::Member.1392", %"class.blink::Member.1402", %"class.blink::Member.1409", %"class.WTF::Vector.1412", %"class.util::TokenType", %"class.WTF::HashSet.1417", %"class.WTF::Deque.1421" }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.1125", %"class.blink::Member.1127", %"class.blink::Member.1129", %"class.blink::Member.1131", i8, %"class.WTF::Vector.1133" }
%"class.blink::Member.1125" = type { %"class.blink::MemberBase.1126" }
%"class.blink::MemberBase.1126" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.1526", %"class.blink::Member.1528", %"class.blink::Member.1530", i8, i32, i8, i32, %"class.blink::Member.1532", %"class.blink::Member.1127", %"class.blink::FrameLifecycle", %"class.blink::Member.1125", %"class.blink::Member.1125", %"class.blink::Member.1125", %"class.blink::Member.1125", %"class.blink::Member.1125", %"class.blink::Member.1125", %"class.blink::Member.1369", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map.1536", %"class.blink::Member.1546", i8, %"class.base::UnguessableToken", %"class.absl::optional.1548", %"class.absl::optional.943", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.1125", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1526" = type { %"class.blink::MemberBase.1527" }
%"class.blink::MemberBase.1527" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.1528" = type { %"class.blink::MemberBase.1529" }
%"class.blink::MemberBase.1529" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.1530" = type { %"class.blink::MemberBase.1531" }
%"class.blink::MemberBase.1531" = type { %"class.blink::DOMWindow"* }
%"class.blink::Member.1532" = type { %"class.blink::MemberBase.1533" }
%"class.blink::MemberBase.1533" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type { i32 (...)** }
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.1560", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.1568", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.1576", %"class.blink::FrameLoader", %"class.blink::Member.1593", %"class.blink::Member.1443", %"class.blink::Member.1595", %"class.blink::Member.1597", %"class.blink::Member.1599", %"class.blink::Member.1601", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.1603", %class.scoped_refptr.183, %"class.blink::Member.1605", %"class.blink::Member.1607", %"class.blink::Member.1609", %"class.blink::Member.1611", %"class.blink::Member.1613", %"class.blink::Member.1615", %"class.blink::Member.1617", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote.1619", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.1622", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.1638", %"class.std::__1::unique_ptr.1639", %"class.absl::optional.943", i32, [4 x i8], %"class.std::__1::unique_ptr.1645", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.1653", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.1658", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.1663", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.1666", %"class.blink::Member.1668", %"class.blink::Member.1670", %"class.blink::Member.1672", %"class.mojo::StructPtr.1675", %"class.blink::Member.1683", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.1685", i8, [7 x i8] }>
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.1560" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1561" }
%"class.blink::HeapHashMap.1561" = type { %"class.WTF::HashMap.1564" }
%"class.WTF::HashMap.1564" = type { %"class.WTF::HashTable.1565" }
%"class.WTF::HashTable.1565" = type <{ %"struct.WTF::KeyValuePair.1567"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1567" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1568" = type { %"class.std::__1::__compressed_pair.1569" }
%"class.std::__1::__compressed_pair.1569" = type { %"struct.std::__1::__compressed_pair_elem.1570" }
%"struct.std::__1::__compressed_pair_elem.1570" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.1574" }
%"class.blink::Member.1574" = type { %"class.blink::MemberBase.1575" }
%"class.blink::MemberBase.1575" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.2629", i64, %"class.std::__1::map.2630", i8*, i64, %"class.base::WeakPtrFactory.2639" }
%"class.base::RepeatingCallback.2629" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.2630" = type { %"class.std::__1::__tree.2631" }
%"class.std::__1::__tree.2631" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2632", %"class.std::__1::__compressed_pair.2636" }
%"class.std::__1::__compressed_pair.2632" = type { %"struct.std::__1::__compressed_pair_elem.423" }
%"class.std::__1::__compressed_pair.2636" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"class.base::WeakPtrFactory.2639" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.1576" = type { %"class.WTF::HashSet.1579" }
%"class.WTF::HashSet.1579" = type { %"class.WTF::HashTable.1580" }
%"class.WTF::HashTable.1580" = type <{ %"class.blink::WeakMember.1582"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1582" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.1369", %"class.blink::Member.1583", %"class.blink::Member.1585", %"class.std::__1::unique_ptr.1587", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.1093" }
%"class.blink::Member.1583" = type { %"class.blink::MemberBase.1584" }
%"class.blink::MemberBase.1584" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.1585" = type { %"class.blink::MemberBase.1586" }
%"class.blink::MemberBase.1586" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type { %"class.blink::UseCounter", %"class.blink::WebNavigationBodyLoader::Client", %"class.WTF::Vector.978", %"class.blink::Member.1068", %"class.std::__1::unique_ptr.1978", %"class.std::__1::unique_ptr.548", %"class.blink::KURL", %"class.WTF::AtomicString", %"struct.blink::Referrer", %class.scoped_refptr.2132, %"class.WTF::AtomicString", i32, %"class.absl::optional.2031", %class.scoped_refptr.475, %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1996", i8, %"class.absl::optional.2003", [4 x i8], %"struct.blink::FramePolicy", %"class.blink::Member.1369", %"class.blink::Member.2133", %"class.blink::Member.2144", %"class.blink::Member.743", %"class.blink::KURL", %"struct.blink::Referrer", %"class.blink::ResourceResponse", i32, i8, i8, i8, i8, %"class.mojo::Remote.2146", %class.scoped_refptr.474, i32, i32, %"class.blink::DocumentLoadTiming", %"class.base::TimeTicks", %"class.blink::Member.2159", %"class.std::__1::unique_ptr.2008", %"struct.blink::DocumentPolicy::ParsedDocumentPolicy", i8, %"class.WTF::Vector.2161", %"class.blink::ClientHintsPreferences", %"struct.blink::DocumentLoader::InitialScrollState", i32, i32, i8, i8, %class.scoped_refptr.1030, %"class.base::UnguessableToken", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, %class.scoped_refptr.1081, i8, %"class.blink::WebScopedVirtualTimePauser", %"class.blink::Member.2166", %"class.blink::Member.2181", %"class.blink::KURL", %"class.blink::KURL", i64, %"class.blink::UseCounterImpl", %"class.blink::Dactyloscoper", %"class.base::TickClock"*, %"class.WTF::Vector.2194", %"class.WTF::Vector.578", i8, i8, i8, %"class.blink::WebVector.2121", %"class.blink::WebVector.2121", %"class.mojo::Remote.2199" }
%"class.blink::WebNavigationBodyLoader::Client" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1978" = type { %"class.std::__1::__compressed_pair.1979" }
%"class.std::__1::__compressed_pair.1979" = type { %"struct.std::__1::__compressed_pair_elem.1980" }
%"struct.std::__1::__compressed_pair_elem.1980" = type { %"struct.blink::WebNavigationParams"* }
%"struct.blink::WebNavigationParams" = type { %"class.blink::WebURL", %"class.blink::WebString", %"class.blink::WebString", i32, %"class.blink::WebHTTPBody", %"class.blink::WebString", i32, %"class.blink::WebSecurityOrigin", %"class.blink::WebURL", %"class.blink::WebURL", i32, %"class.blink::WebVector.1982", %"class.blink::WebURLResponse", %"class.std::__1::unique_ptr.1996", i8, i32, %"class.blink::WebHistoryItem", i8, %"class.absl::optional.2003", %"class.blink::WebSecurityOrigin", i32, %"class.base::UnguessableToken", %"struct.blink::WebNavigationTimings", i8, i8, i8, i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.2008", %"class.base::UnguessableToken", %"class.blink::WebVector.2014", %"class.base::TickClock"*, %"class.blink::WebVector.2023", %"class.absl::optional.2031", %"class.blink::WebURL", %"class.blink::WebURL", i64, %"class.absl::optional.2036", %"class.blink::WebVector.1627", i8, %"class.blink::WebVector.2055", i8, %"class.std::__1::unique_ptr.2063", %"class.blink::WebVector.2121", %"class.blink::WebVector.2121" }
%"class.blink::WebHTTPBody" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.blink::WebVector.1982" = type { %"class.std::__1::vector.1983" }
%"class.std::__1::vector.1983" = type { %"class.std::__1::__vector_base.1984" }
%"class.std::__1::__vector_base.1984" = type { %"struct.blink::WebNavigationParams::RedirectInfo"*, %"struct.blink::WebNavigationParams::RedirectInfo"*, %"class.std::__1::__compressed_pair.1991" }
%"struct.blink::WebNavigationParams::RedirectInfo" = type { %"class.blink::WebURL", %"class.blink::WebString", %"class.blink::WebString", i32, %"class.blink::WebURLResponse" }
%"class.std::__1::__compressed_pair.1991" = type { %"struct.std::__1::__compressed_pair_elem.1992" }
%"struct.std::__1::__compressed_pair_elem.1992" = type { %"struct.blink::WebNavigationParams::RedirectInfo"* }
%"class.blink::WebURLResponse" = type { %"class.std::__1::unique_ptr.1985", %"class.blink::ResourceResponse"* }
%"class.std::__1::unique_ptr.1985" = type { %"class.std::__1::__compressed_pair.1986" }
%"class.std::__1::__compressed_pair.1986" = type { %"struct.std::__1::__compressed_pair_elem.1987" }
%"struct.std::__1::__compressed_pair_elem.1987" = type { %"class.blink::ResourceResponse"* }
%"class.blink::WebHistoryItem" = type { %"class.blink::WebPrivatePtr.2002", %"class.blink::WebString" }
%"class.blink::WebPrivatePtr.2002" = type { i8* }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr.1981" }
%"class.blink::WebPrivatePtr.1981" = type { i8* }
%"struct.blink::WebNavigationTimings" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.blink::WebVector.2014" = type { %"class.std::__1::vector.2015" }
%"class.std::__1::vector.2015" = type { %"class.std::__1::__vector_base.2016" }
%"class.std::__1::__vector_base.2016" = type { %"class.std::__1::unique_ptr.2017"*, %"class.std::__1::unique_ptr.2017"*, %"class.std::__1::__compressed_pair.2018" }
%"class.std::__1::unique_ptr.2017" = type opaque
%"class.std::__1::__compressed_pair.2018" = type { %"struct.std::__1::__compressed_pair_elem.2019" }
%"struct.std::__1::__compressed_pair_elem.2019" = type { %"class.std::__1::unique_ptr.2017"* }
%"class.blink::WebVector.2023" = type { %"class.std::__1::vector.2024" }
%"class.std::__1::vector.2024" = type { %"class.std::__1::__vector_base.2025" }
%"class.std::__1::__vector_base.2025" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2026" }
%"class.std::__1::__compressed_pair.2026" = type { %"struct.std::__1::__compressed_pair_elem.2027" }
%"struct.std::__1::__compressed_pair_elem.2027" = type { i32* }
%"class.blink::WebURL" = type <{ %"class.blink::WebString", %"struct.url::Parsed", i8, [7 x i8] }>
%"class.absl::optional.2036" = type { %"class.absl::optional_internal::optional_data.2037" }
%"class.absl::optional_internal::optional_data.2037" = type { %"class.absl::optional_internal::optional_data_base.2038" }
%"class.absl::optional_internal::optional_data_base.2038" = type { %"class.absl::optional_internal::optional_data_dtor_base.2039" }
%"class.absl::optional_internal::optional_data_dtor_base.2039" = type { i8, [7 x i8], %union.anon.2040 }
%union.anon.2040 = type { %"struct.blink::FramePolicy" }
%"class.blink::WebVector.1627" = type { %"class.std::__1::vector.1628" }
%"class.std::__1::vector.1628" = type { %"class.std::__1::__vector_base.1629" }
%"class.std::__1::__vector_base.1629" = type { %"class.blink::WebString"*, %"class.blink::WebString"*, %"class.std::__1::__compressed_pair.1630" }
%"class.std::__1::__compressed_pair.1630" = type { %"struct.std::__1::__compressed_pair_elem.1631" }
%"struct.std::__1::__compressed_pair_elem.1631" = type { %"class.blink::WebString"* }
%"class.blink::WebVector.2055" = type { %"class.std::__1::vector.2056" }
%"class.std::__1::vector.2056" = type { %"class.std::__1::__vector_base.2057" }
%"class.std::__1::__vector_base.2057" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2058" }
%"class.std::__1::__compressed_pair.2058" = type { %"struct.std::__1::__compressed_pair_elem.2059" }
%"struct.std::__1::__compressed_pair_elem.2059" = type { i32* }
%"class.std::__1::unique_ptr.2063" = type { %"class.std::__1::__compressed_pair.2064" }
%"class.std::__1::__compressed_pair.2064" = type { %"struct.std::__1::__compressed_pair_elem.2065" }
%"struct.std::__1::__compressed_pair_elem.2065" = type { %"struct.blink::WebPolicyContainer"* }
%"struct.blink::WebPolicyContainer" = type { %"struct.blink::WebPolicyContainerPolicies", %"class.blink::CrossVariantMojoAssociatedRemote" }
%"struct.blink::WebPolicyContainerPolicies" = type { i32, i32, %"class.blink::WebVector.2066" }
%"class.blink::WebVector.2066" = type { %"class.std::__1::vector.2067" }
%"class.std::__1::vector.2067" = type { %"class.std::__1::__vector_base.2068" }
%"class.std::__1::__vector_base.2068" = type { %"struct.blink::WebContentSecurityPolicy"*, %"struct.blink::WebContentSecurityPolicy"*, %"class.std::__1::__compressed_pair.2113" }
%"struct.blink::WebContentSecurityPolicy" = type { %"struct.blink::WebCSPSource", %"class.blink::WebVector.2069", %"class.blink::WebVector.2077", i8, i8, i8, i32, %"struct.blink::WebContentSecurityPolicyHeader", i8, %"class.blink::WebVector.1627", i32, [4 x i8], %"class.absl::optional.2108", %"class.blink::WebVector.1627" }
%"struct.blink::WebCSPSource" = type <{ %"class.blink::WebString", %"class.blink::WebString", i32, [4 x i8], %"class.blink::WebString", i8, i8, [6 x i8] }>
%"class.blink::WebVector.2069" = type { %"class.std::__1::vector.2070" }
%"class.std::__1::vector.2070" = type { %"class.std::__1::__vector_base.2071" }
%"class.std::__1::__vector_base.2071" = type { %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"class.std::__1::__compressed_pair.2072" }
%"struct.blink::WebContentSecurityPolicyRawDirective" = type { i32, %"class.blink::WebString" }
%"class.std::__1::__compressed_pair.2072" = type { %"struct.std::__1::__compressed_pair_elem.2073" }
%"struct.std::__1::__compressed_pair_elem.2073" = type { %"struct.blink::WebContentSecurityPolicyRawDirective"* }
%"class.blink::WebVector.2077" = type { %"class.std::__1::vector.2078" }
%"class.std::__1::vector.2078" = type { %"class.std::__1::__vector_base.2079" }
%"class.std::__1::__vector_base.2079" = type { %"struct.blink::WebContentSecurityPolicyDirective"*, %"struct.blink::WebContentSecurityPolicyDirective"*, %"class.std::__1::__compressed_pair.2103" }
%"struct.blink::WebContentSecurityPolicyDirective" = type { i32, [4 x i8], %"struct.blink::WebCSPSourceList" }
%"struct.blink::WebCSPSourceList" = type <{ %"class.blink::WebVector.2080", %"class.blink::WebVector.1627", %"class.blink::WebVector.2088", i8, i8, i8, i8, i8, i8, i8, i8, i8, [7 x i8] }>
%"class.blink::WebVector.2080" = type { %"class.std::__1::vector.2081" }
%"class.std::__1::vector.2081" = type { %"class.std::__1::__vector_base.2082" }
%"class.std::__1::__vector_base.2082" = type { %"struct.blink::WebCSPSource"*, %"struct.blink::WebCSPSource"*, %"class.std::__1::__compressed_pair.2083" }
%"class.std::__1::__compressed_pair.2083" = type { %"struct.std::__1::__compressed_pair_elem.2084" }
%"struct.std::__1::__compressed_pair_elem.2084" = type { %"struct.blink::WebCSPSource"* }
%"class.blink::WebVector.2088" = type { %"class.std::__1::vector.2089" }
%"class.std::__1::vector.2089" = type { %"class.std::__1::__vector_base.2090" }
%"class.std::__1::__vector_base.2090" = type { %"struct.blink::WebCSPHashSource"*, %"struct.blink::WebCSPHashSource"*, %"class.std::__1::__compressed_pair.2098" }
%"struct.blink::WebCSPHashSource" = type { i32, %"class.blink::WebVector.2091" }
%"class.blink::WebVector.2091" = type { %"class.std::__1::vector.2092" }
%"class.std::__1::vector.2092" = type { %"class.std::__1::__vector_base.2093" }
%"class.std::__1::__vector_base.2093" = type { i8*, i8*, %"class.std::__1::__compressed_pair.2094" }
%"class.std::__1::__compressed_pair.2094" = type { %"struct.std::__1::__compressed_pair_elem.1273" }
%"struct.std::__1::__compressed_pair_elem.1273" = type { i8* }
%"class.std::__1::__compressed_pair.2098" = type { %"struct.std::__1::__compressed_pair_elem.2099" }
%"struct.std::__1::__compressed_pair_elem.2099" = type { %"struct.blink::WebCSPHashSource"* }
%"class.std::__1::__compressed_pair.2103" = type { %"struct.std::__1::__compressed_pair_elem.2104" }
%"struct.std::__1::__compressed_pair_elem.2104" = type { %"struct.blink::WebContentSecurityPolicyDirective"* }
%"struct.blink::WebContentSecurityPolicyHeader" = type { %"class.blink::WebString", i32, i32 }
%"class.absl::optional.2108" = type { %"class.absl::optional_internal::optional_data.2109" }
%"class.absl::optional_internal::optional_data.2109" = type { %"class.absl::optional_internal::optional_data_base.2110" }
%"class.absl::optional_internal::optional_data_base.2110" = type { %"class.absl::optional_internal::optional_data_dtor_base.2111" }
%"class.absl::optional_internal::optional_data_dtor_base.2111" = type { i8, [7 x i8], %union.anon.2112 }
%union.anon.2112 = type { %"struct.blink::WebCSPTrustedTypes" }
%"struct.blink::WebCSPTrustedTypes" = type <{ %"class.blink::WebVector.1627", i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.2113" = type { %"struct.std::__1::__compressed_pair_elem.2114" }
%"struct.std::__1::__compressed_pair_elem.2114" = type { %"struct.blink::WebContentSecurityPolicy"* }
%"class.blink::CrossVariantMojoAssociatedRemote" = type { i32, %"class.mojo::ScopedInterfaceEndpointHandle" }
%class.scoped_refptr.2132 = type { %"class.blink::EncodedFormData"* }
%"class.blink::EncodedFormData" = type opaque
%"class.absl::optional.2031" = type { %"class.absl::optional_internal::optional_data.2032" }
%"class.absl::optional_internal::optional_data.2032" = type { %"class.absl::optional_internal::optional_data_base.2033" }
%"class.absl::optional_internal::optional_data_base.2033" = type { %"class.absl::optional_internal::optional_data_dtor_base.2034" }
%"class.absl::optional_internal::optional_data_dtor_base.2034" = type { i8, %union.anon.2035 }
%union.anon.2035 = type { %"struct.blink::WebOriginPolicy" }
%"struct.blink::WebOriginPolicy" = type { %"class.blink::WebVector.1627", %"class.blink::WebString", %"class.blink::WebVector.1627", %"class.blink::WebVector.1627" }
%"class.std::__1::unique_ptr.1996" = type { %"class.std::__1::__compressed_pair.1997" }
%"class.std::__1::__compressed_pair.1997" = type { %"struct.std::__1::__compressed_pair_elem.1998" }
%"struct.std::__1::__compressed_pair_elem.1998" = type { %"class.blink::WebNavigationBodyLoader"* }
%"class.blink::WebNavigationBodyLoader" = type { i32 (...)** }
%"class.absl::optional.2003" = type { %"class.absl::optional_internal::optional_data.2004" }
%"class.absl::optional_internal::optional_data.2004" = type { %"class.absl::optional_internal::optional_data_base.2005" }
%"class.absl::optional_internal::optional_data_base.2005" = type { %"class.absl::optional_internal::optional_data_dtor_base.2006" }
%"class.absl::optional_internal::optional_data_dtor_base.2006" = type { i8, %union.anon.2007 }
%union.anon.2007 = type { i32 }
%"struct.blink::FramePolicy" = type <{ i32, [4 x i8], %"class.std::__1::vector.2041", %"class.base::flat_map.1536", i8, [7 x i8] }>
%"class.std::__1::vector.2041" = type { %"class.std::__1::__vector_base.2042" }
%"class.std::__1::__vector_base.2042" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"class.std::__1::__compressed_pair.2050" }
%"struct.blink::ParsedPermissionsPolicyDeclaration" = type <{ i32, [4 x i8], %"class.std::__1::vector.2043", i8, i8, [6 x i8] }>
%"class.std::__1::vector.2043" = type { %"class.std::__1::__vector_base.2044" }
%"class.std::__1::__vector_base.2044" = type { %"class.url::Origin"*, %"class.url::Origin"*, %"class.std::__1::__compressed_pair.2045" }
%"class.std::__1::__compressed_pair.2045" = type { %"struct.std::__1::__compressed_pair_elem.2046" }
%"struct.std::__1::__compressed_pair_elem.2046" = type { %"class.url::Origin"* }
%"class.std::__1::__compressed_pair.2050" = type { %"struct.std::__1::__compressed_pair_elem.2051" }
%"struct.std::__1::__compressed_pair_elem.2051" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"* }
%"class.blink::Member.2133" = type { %"class.blink::MemberBase.2134" }
%"class.blink::MemberBase.2134" = type { %"class.blink::HistoryItem"* }
%"class.blink::HistoryItem" = type { %"class.WTF::String", %"struct.blink::Referrer", %"class.WTF::Vector.578", %"class.blink::Member.2137", %"class.absl::optional.2139", i64, i64, i32, %class.scoped_refptr.1269, %class.scoped_refptr.2132, %"class.WTF::AtomicString", %"class.WTF::String", %"class.WTF::String", %class.scoped_refptr.1269 }
%"class.blink::Member.2137" = type { %"class.blink::MemberBase.2138" }
%"class.blink::MemberBase.2138" = type { %"class.blink::DocumentState"* }
%"class.blink::DocumentState" = type opaque
%"class.absl::optional.2139" = type { %"class.absl::optional_internal::optional_data.2140" }
%"class.absl::optional_internal::optional_data.2140" = type { %"class.absl::optional_internal::optional_data_base.2141" }
%"class.absl::optional_internal::optional_data_base.2141" = type { %"class.absl::optional_internal::optional_data_dtor_base.2142" }
%"class.absl::optional_internal::optional_data_dtor_base.2142" = type { i8, %union.anon.2143 }
%union.anon.2143 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"class.blink::FloatSize" = type { float, float }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.gfx::PointF" = type { float, float }
%"class.blink::Member.2144" = type { %"class.blink::MemberBase.2145" }
%"class.blink::MemberBase.2145" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"struct.blink::Referrer" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.mojo::Remote.2146" = type { %"class.mojo::internal::InterfacePtrState.2147" }
%"class.mojo::internal::InterfacePtrState.2147" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2148" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.1137, %"class.std::__1::unique_ptr.598", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.613, i32 }>
%class.scoped_refptr.1137 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.613, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.1196", %"class.absl::optional.1201", %"class.absl::optional.1154", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.1221", i8, [7 x i8], %class.scoped_refptr.613, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.627" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback.615", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.613, %"class.std::__1::unique_ptr.1138", %"class.absl::optional.1148", %"struct.std::__1::atomic.176", i8, i8, i8, i8, i32, i32, %"class.absl::optional.1154", %"class.std::__1::unique_ptr.1159", i8, i64, %class.scoped_refptr.1193, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.1194", %"class.base::WeakPtrFactory.1195" }
%"class.std::__1::unique_ptr.1138" = type { %"class.std::__1::__compressed_pair.1139" }
%"class.std::__1::__compressed_pair.1139" = type { %"struct.std::__1::__compressed_pair_elem.1140" }
%"struct.std::__1::__compressed_pair_elem.1140" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.613, i8, %"class.mojo::ScopedHandleBase.1141", %class.scoped_refptr.1142, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.1143", i8*, %"class.base::WeakPtrFactory.1144" }
%"class.mojo::ScopedHandleBase.1141" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.1142 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback.1143" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.1144" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.1148" = type { %"class.absl::optional_internal::optional_data.1149" }
%"class.absl::optional_internal::optional_data.1149" = type { %"class.absl::optional_internal::optional_data_base.1150" }
%"class.absl::optional_internal::optional_data_base.1150" = type { %"class.absl::optional_internal::optional_data_dtor_base.1151" }
%"class.absl::optional_internal::optional_data_dtor_base.1151" = type { i8, %union.anon.1152 }
%union.anon.1152 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.1153", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.1153" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.1159" = type { %"class.std::__1::__compressed_pair.1160" }
%"class.std::__1::__compressed_pair.1160" = type { %"struct.std::__1::__compressed_pair_elem.1161" }
%"struct.std::__1::__compressed_pair_elem.1161" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.1162", i8, i64, %class.scoped_refptr.1163, %class.scoped_refptr.1188 }
%"class.base::RepeatingCallback.1162" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1163 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.1164", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.1166", %"class.std::__1::map.1177", i8, [7 x i8] }>
%"class.base::RefCounted.1164" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.1165 }
%class.scoped_refptr.1165 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.1166" = type { %"class.std::__1::__tree.1167" }
%"class.std::__1::__tree.1167" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1168", %"class.std::__1::__compressed_pair.1172" }
%"class.std::__1::__compressed_pair.1168" = type { %"struct.std::__1::__compressed_pair_elem.423" }
%"class.std::__1::__compressed_pair.1172" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"class.std::__1::map.1177" = type { %"class.std::__1::__tree.1178" }
%"class.std::__1::__tree.1178" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1179", %"class.std::__1::__compressed_pair.1183" }
%"class.std::__1::__compressed_pair.1179" = type { %"struct.std::__1::__compressed_pair_elem.423" }
%"class.std::__1::__compressed_pair.1183" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%class.scoped_refptr.1188 = type { %"class.base::RefCountedData.1189"* }
%"class.base::RefCountedData.1189" = type opaque
%class.scoped_refptr.1193 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr.1194" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.1195" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.1196" = type { %"class.absl::optional_internal::optional_data.1197" }
%"class.absl::optional_internal::optional_data.1197" = type { %"class.absl::optional_internal::optional_data_base.1198" }
%"class.absl::optional_internal::optional_data_base.1198" = type { %"class.absl::optional_internal::optional_data_dtor_base.1199" }
%"class.absl::optional_internal::optional_data_dtor_base.1199" = type { i8, %union.anon.1200 }
%union.anon.1200 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.1201" = type { %"class.absl::optional_internal::optional_data.1202" }
%"class.absl::optional_internal::optional_data.1202" = type { %"class.absl::optional_internal::optional_data_base.1203" }
%"class.absl::optional_internal::optional_data_base.1203" = type { %"class.absl::optional_internal::optional_data_dtor_base.1204" }
%"class.absl::optional_internal::optional_data_dtor_base.1204" = type { i8, [7 x i8], %union.anon.1205 }
%union.anon.1205 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.1154" = type { %"class.absl::optional_internal::optional_data.1155" }
%"class.absl::optional_internal::optional_data.1155" = type { %"class.absl::optional_internal::optional_data_base.1156" }
%"class.absl::optional_internal::optional_data_base.1156" = type { %"class.absl::optional_internal::optional_data_dtor_base.1157" }
%"class.absl::optional_internal::optional_data_dtor_base.1157" = type { i8, %union.anon.1158 }
%union.anon.1158 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.1206 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.1206 = type { %"class.std::__1::map.1209" }
%"class.std::__1::map.1209" = type { %"class.std::__1::__tree.1210" }
%"class.std::__1::__tree.1210" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1211", %"class.std::__1::__compressed_pair.1215" }
%"class.std::__1::__compressed_pair.1211" = type { %"struct.std::__1::__compressed_pair_elem.423" }
%"class.std::__1::__compressed_pair.1215" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.1220"*, i64 }
%"class.std::__1::unique_ptr.1220" = type opaque
%"class.std::__1::map.1221" = type { %"class.std::__1::__tree.1222" }
%"class.std::__1::__tree.1222" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1223", %"class.std::__1::__compressed_pair.1227" }
%"class.std::__1::__compressed_pair.1223" = type { %"struct.std::__1::__compressed_pair_elem.423" }
%"class.std::__1::__compressed_pair.1227" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"class.std::__1::unique_ptr.2148" = type { %"class.std::__1::__compressed_pair.2149" }
%"class.std::__1::__compressed_pair.2149" = type { %"struct.std::__1::__compressed_pair_elem.2150" }
%"struct.std::__1::__compressed_pair_elem.2150" = type { %"class.blink::mojom::blink::ContentSecurityNotifierProxy"* }
%"class.blink::mojom::blink::ContentSecurityNotifierProxy" = type { %"class.blink::mojom::blink::ContentSecurityNotifier", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ContentSecurityNotifier" = type { i32 (...)** }
%"class.blink::DocumentLoadTiming" = type { %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.absl::optional.603", %"class.absl::optional.603", %"class.absl::optional.603", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.WTF::Vector.2154", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i16, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i8, i8, %"class.base::Clock"*, %"class.base::TickClock"*, %"class.blink::Member.1585" }
%"class.WTF::Vector.2154" = type { %"class.WTF::VectorBuffer.2155" }
%"class.WTF::VectorBuffer.2155" = type { %"class.WTF::VectorBufferBase.2156" }
%"class.WTF::VectorBufferBase.2156" = type { %"class.base::TimeTicks"*, i32, i32 }
%"class.blink::Member.2159" = type { %"class.blink::MemberBase.2160" }
%"class.blink::MemberBase.2160" = type { %"class.blink::ApplicationCacheHostForFrame"* }
%"class.blink::ApplicationCacheHostForFrame" = type opaque
%"class.std::__1::unique_ptr.2008" = type { %"class.std::__1::__compressed_pair.2009" }
%"class.std::__1::__compressed_pair.2009" = type { %"struct.std::__1::__compressed_pair_elem.2010" }
%"struct.std::__1::__compressed_pair_elem.2010" = type { %"class.blink::WebServiceWorkerNetworkProvider"* }
%"class.blink::WebServiceWorkerNetworkProvider" = type { i32 (...)** }
%"struct.blink::DocumentPolicy::ParsedDocumentPolicy" = type { %"class.base::flat_map.1536", %"class.base::flat_map" }
%"class.WTF::Vector.2161" = type { %"class.WTF::VectorBuffer.2162" }
%"class.WTF::VectorBuffer.2162" = type { %"class.WTF::VectorBufferBase.2163" }
%"class.WTF::VectorBufferBase.2163" = type { %"struct.blink::PolicyParserMessageBuffer::Message"*, i32, i32 }
%"struct.blink::PolicyParserMessageBuffer::Message" = type { i32, %"class.WTF::String" }
%"struct.blink::DocumentLoader::InitialScrollState" = type { i8, i8 }
%"class.blink::Member.2166" = type { %"class.blink::MemberBase.2167" }
%"class.blink::MemberBase.2167" = type { %"class.blink::SourceKeyedCachedMetadataHandler"* }
%"class.blink::SourceKeyedCachedMetadataHandler" = type { %"class.blink::CachedMetadataHandler", %"class.WTF::HashMap.2170", %"class.std::__1::unique_ptr.2175", %"class.WTF::TextEncoding" }
%"class.blink::CachedMetadataHandler" = type { i32 (...)** }
%"class.WTF::HashMap.2170" = type { %"class.WTF::HashTable.2171" }
%"class.WTF::HashTable.2171" = type <{ %"struct.WTF::KeyValuePair.2174"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2174" = type { %"class.WTF::Vector.2691", %class.scoped_refptr.2696 }
%"class.WTF::Vector.2691" = type { %"class.WTF::VectorBuffer.2692" }
%"class.WTF::VectorBuffer.2692" = type { %"class.WTF::VectorBufferBase.2693", [32 x i8] }
%class.scoped_refptr.2696 = type { %"class.blink::CachedMetadata"* }
%"class.blink::CachedMetadata" = type { %"class.WTF::RefCounted.2697", %"class.WTF::Vector.2699", %"class.mojo_base::BigBuffer" }
%"class.WTF::RefCounted.2697" = type { %"class.base::RefCounted.2698" }
%"class.base::RefCounted.2698" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo_base::BigBuffer" = type { i32, %"class.std::__1::unique_ptr.2703", i64, %"class.absl::optional.2708" }
%"class.std::__1::unique_ptr.2703" = type { %"class.std::__1::__compressed_pair.2704" }
%"class.std::__1::__compressed_pair.2704" = type { %"struct.std::__1::__compressed_pair_elem.1273" }
%"class.absl::optional.2708" = type { %"class.absl::optional_internal::optional_data.2709" }
%"class.absl::optional_internal::optional_data.2709" = type { %"class.absl::optional_internal::optional_data_base.2710" }
%"class.absl::optional_internal::optional_data_base.2710" = type { %"class.absl::optional_internal::optional_data_dtor_base.2711" }
%"class.absl::optional_internal::optional_data_dtor_base.2711" = type { i8, %union.anon.2712 }
%union.anon.2712 = type { %"class.mojo_base::internal::BigBufferSharedMemoryRegion" }
%"class.mojo_base::internal::BigBufferSharedMemoryRegion" = type { i64, %"class.mojo::ScopedHandleBase.2713", %"class.std::__1::unique_ptr.2714" }
%"class.mojo::ScopedHandleBase.2713" = type { %"class.mojo::SharedBufferHandle" }
%"class.mojo::SharedBufferHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.2714" = type { %"class.std::__1::__compressed_pair.2715" }
%"class.std::__1::__compressed_pair.2715" = type { %"struct.std::__1::__compressed_pair_elem.2716" }
%"struct.std::__1::__compressed_pair_elem.2716" = type { i8* }
%"class.std::__1::unique_ptr.2175" = type { %"class.std::__1::__compressed_pair.2176" }
%"class.std::__1::__compressed_pair.2176" = type { %"struct.std::__1::__compressed_pair_elem.2177" }
%"struct.std::__1::__compressed_pair_elem.2177" = type { %"class.blink::CachedMetadataSender"* }
%"class.blink::CachedMetadataSender" = type { i32 (...)** }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Member.2181" = type { %"class.blink::MemberBase.2182" }
%"class.blink::MemberBase.2182" = type { %"class.blink::PrefetchedSignedExchangeManager"* }
%"class.blink::PrefetchedSignedExchangeManager" = type opaque
%"class.blink::UseCounterImpl" = type { i32, i32, i32, %"class.blink::UseCounterFeatureTracker", %"class.blink::HeapHashSet.2187" }
%"class.blink::UseCounterFeatureTracker" = type { %"class.std::__1::bitset", %"class.std::__1::bitset.2183", %"class.std::__1::bitset.2183", %"class.std::__1::bitset.2185" }
%"class.std::__1::bitset.2183" = type { %"class.std::__1::__bitset.2184" }
%"class.std::__1::__bitset.2184" = type { [11 x i64] }
%"class.std::__1::bitset.2185" = type { %"class.std::__1::__bitset.2186" }
%"class.std::__1::__bitset.2186" = type { [2 x i64] }
%"class.blink::HeapHashSet.2187" = type { %"class.WTF::HashSet.2190" }
%"class.WTF::HashSet.2190" = type { %"class.WTF::HashTable.2191" }
%"class.WTF::HashTable.2191" = type <{ %"class.blink::Member.2193"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2193" = type opaque
%"class.blink::Dactyloscoper" = type { i8 }
%"class.WTF::Vector.2194" = type { %"class.WTF::VectorBuffer.2195" }
%"class.WTF::VectorBuffer.2195" = type { %"class.WTF::VectorBufferBase.2196" }
%"class.WTF::VectorBufferBase.2196" = type { i32*, i32, i32 }
%"class.blink::WebVector.2121" = type { %"class.std::__1::vector.2122" }
%"class.std::__1::vector.2122" = type { %"class.std::__1::__vector_base.2123" }
%"class.std::__1::__vector_base.2123" = type { %"class.blink::WebHistoryItem"*, %"class.blink::WebHistoryItem"*, %"class.std::__1::__compressed_pair.2124" }
%"class.std::__1::__compressed_pair.2124" = type { %"struct.std::__1::__compressed_pair_elem.2125" }
%"struct.std::__1::__compressed_pair_elem.2125" = type { %"class.blink::WebHistoryItem"* }
%"class.mojo::Remote.2199" = type { %"class.mojo::internal::InterfacePtrState.2200" }
%"class.mojo::internal::InterfacePtrState.2200" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2201" }
%"class.std::__1::unique_ptr.2201" = type { %"class.std::__1::__compressed_pair.2202" }
%"class.std::__1::__compressed_pair.2202" = type { %"struct.std::__1::__compressed_pair_elem.2203" }
%"struct.std::__1::__compressed_pair_elem.2203" = type { %"class.blink::mojom::CodeCacheHostProxy"* }
%"class.blink::mojom::CodeCacheHostProxy" = type { %"class.blink::mojom::CodeCacheHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::CodeCacheHost" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1587" = type { %"class.std::__1::__compressed_pair.1588" }
%"class.std::__1::__compressed_pair.1588" = type { %"struct.std::__1::__compressed_pair_elem.1589" }
%"struct.std::__1::__compressed_pair_elem.1589" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::Member.1593" = type { %"class.blink::MemberBase.1594" }
%"class.blink::MemberBase.1594" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1692", %"class.blink::Member.1369", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1697", i8, i32, %"class.blink::Color", %"class.absl::optional.1699", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1704", %"class.blink::Member.1706", %"class.blink::Member.1706", %"class.std::__1::unique_ptr.1709", i32, [4 x i8], %"class.WTF::HashSet.1712", %"class.blink::Member.1719", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1721", %"class.blink::HeapHashSet.1728", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1736", i8, %"class.blink::Member.1742", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1754", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1768", i8, %"class.std::__1::unique_ptr.1774", %"class.std::__1::unique_ptr.1891", %"class.WTF::Vector.1897", i32, %class.scoped_refptr.1902, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1903", %"class.blink::Member.1905", %"class.blink::Member.1907", %"class.blink::HeapHashSet.1909", %"class.blink::HeapHashSet.1916", %"class.std::__1::unique_ptr.1923", %"class.std::__1::unique_ptr.1929", %"class.WTF::Vector.1935" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.1692" = type { %"class.WTF::HashTable.1693" }
%"class.WTF::HashTable.1693" = type <{ %class.scoped_refptr.1696*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1696 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1697" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1698", { i64, i64 } }
%"class.blink::WeakMember.1698" = type { %"class.blink::MemberBase.1594" }
%"class.blink::Color" = type { i32 }
%"class.absl::optional.1699" = type { %"class.absl::optional_internal::optional_data.1700" }
%"class.absl::optional_internal::optional_data.1700" = type { %"class.absl::optional_internal::optional_data_base.1701" }
%"class.absl::optional_internal::optional_data_base.1701" = type { %"class.absl::optional_internal::optional_data_dtor_base.1702" }
%"class.absl::optional_internal::optional_data_dtor_base.1702" = type { i8, %union.anon.1703 }
%union.anon.1703 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1704" = type { %"class.blink::MemberBase.1705" }
%"class.blink::MemberBase.1705" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1706" = type { %"class.blink::MemberBase.1707" }
%"class.blink::MemberBase.1707" = type { %"class.blink::HeapHashSet.1708"* }
%"class.blink::HeapHashSet.1708" = type opaque
%"class.std::__1::unique_ptr.1709" = type { %"class.std::__1::__compressed_pair.1710" }
%"class.std::__1::__compressed_pair.1710" = type { %"struct.std::__1::__compressed_pair_elem.1711" }
%"struct.std::__1::__compressed_pair_elem.1711" = type { %"class.WTF::HashSet.1712"* }
%"class.WTF::HashSet.1712" = type { %"class.WTF::HashTable.1713" }
%"class.WTF::HashTable.1713" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.1719" = type { %"class.blink::MemberBase.1720" }
%"class.blink::MemberBase.1720" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1721" = type { %"class.WTF::HashSet.1724" }
%"class.WTF::HashSet.1724" = type { %"class.WTF::HashTable.1725" }
%"class.WTF::HashTable.1725" = type <{ %"class.blink::Member.1727"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1727" = type opaque
%"class.blink::HeapHashSet.1728" = type { %"class.WTF::HashSet.1731" }
%"class.WTF::HashSet.1731" = type { %"class.WTF::HashTable.1732" }
%"class.WTF::HashTable.1732" = type <{ %"class.blink::Member.1734"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1734" = type { %"class.blink::MemberBase.1735" }
%"class.blink::MemberBase.1735" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1963", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1974", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.1443" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::Member.1963" = type { %"class.blink::MemberBase.1964" }
%"class.blink::MemberBase.1964" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.1965", %"class.blink::Member.1966", %"class.blink::Member.1968", %"class.blink::Member.1970", %"class.blink::Member.1972", %"class.WTF::Vector.1935", i16, %class.scoped_refptr.400 }
%"class.blink::ThreadState::PrefinalizerRegistration.1965" = type { i8 }
%"class.blink::Member.1966" = type { %"class.blink::MemberBase.1967" }
%"class.blink::MemberBase.1967" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.1968" = type { %"class.blink::MemberBase.1969" }
%"class.blink::MemberBase.1969" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.1970" = type { %"class.blink::MemberBase.1971" }
%"class.blink::MemberBase.1971" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.1972" = type { %"class.blink::MemberBase.1973" }
%"class.blink::MemberBase.1973" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type opaque
%"class.blink::HeapTaskRunnerTimer.1974" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1975", { i64, i64 } }
%"class.blink::WeakMember.1975" = type { %"class.blink::MemberBase.1735" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1736" = type { %"class.std::__1::__compressed_pair.1737" }
%"class.std::__1::__compressed_pair.1737" = type { %"struct.std::__1::__compressed_pair_elem.1738" }
%"struct.std::__1::__compressed_pair_elem.1738" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1742" = type { %"class.blink::MemberBase.1743" }
%"class.blink::MemberBase.1743" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1746", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1746" = type { %"class.WTF::HashTable.1747" }
%"class.WTF::HashTable.1747" = type <{ %"struct.WTF::KeyValuePair.1749"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1749" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1750", i32, i32 }
%"class.WTF::Vector.1750" = type { %"class.WTF::VectorBuffer.1751" }
%"class.WTF::VectorBuffer.1751" = type { %"class.WTF::VectorBufferBase.1752" }
%"class.WTF::VectorBufferBase.1752" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1754" = type { %"class.WTF::LinkedHashSet.1757" }
%"class.WTF::LinkedHashSet.1757" = type { %"class.WTF::HashMap.1758", %"class.WTF::VectorBackedLinkedList.1762" }
%"class.WTF::HashMap.1758" = type { %"class.WTF::HashTable.1759" }
%"class.WTF::HashTable.1759" = type <{ %"struct.WTF::KeyValuePair.1761"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1761" = type opaque
%"class.WTF::VectorBackedLinkedList.1762" = type { %"class.WTF::Vector.1763", i32, i32 }
%"class.WTF::Vector.1763" = type { %"class.WTF::VectorBuffer.1764" }
%"class.WTF::VectorBuffer.1764" = type { %"class.WTF::VectorBufferBase.1765" }
%"class.WTF::VectorBufferBase.1765" = type { %"class.WTF::VectorBackedLinkedListNode.1766"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1766" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1768" = type { %"class.std::__1::__compressed_pair.1769" }
%"class.std::__1::__compressed_pair.1769" = type { %"struct.std::__1::__compressed_pair_elem.1770" }
%"struct.std::__1::__compressed_pair_elem.1770" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1774" = type { %"class.std::__1::__compressed_pair.1775" }
%"class.std::__1::__compressed_pair.1775" = type { %"struct.std::__1::__compressed_pair_elem.1776" }
%"struct.std::__1::__compressed_pair_elem.1776" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1777, %class.scoped_refptr.1777, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1868", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1873", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1777 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1778", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1785" }
%"class.WTF::RefCounted.1778" = type { %"class.base::RefCounted.1779" }
%"class.base::RefCounted.1779" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1780", i32, [4 x i8] }>
%"class.WTF::Vector.1780" = type { %"class.WTF::VectorBuffer.1781" }
%"class.WTF::VectorBuffer.1781" = type { %"class.WTF::VectorBufferBase.1782" }
%"class.WTF::VectorBufferBase.1782" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1785" = type { %"class.WTF::VectorBuffer.1786" }
%"class.WTF::VectorBuffer.1786" = type { %"class.WTF::VectorBufferBase.1787" }
%"class.WTF::VectorBufferBase.1787" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1791", %"class.std::__1::unique_ptr.1840", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1788, %class.scoped_refptr.1789, %class.scoped_refptr.1790 }
%class.scoped_refptr.1788 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1804", i8, i8, %class.scoped_refptr.1788, i32, i32 }
%"class.WTF::RefCounted.1804" = type { %"class.base::RefCounted.1805" }
%"class.base::RefCounted.1805" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1789 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1958" }
%"class.blink::PaintPropertyNode.1958" = type { %"class.WTF::RefCounted.1959", i8, i8, %class.scoped_refptr.1789, i32, i32 }
%"class.WTF::RefCounted.1959" = type { %"class.base::RefCounted.1960" }
%"class.base::RefCounted.1960" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1790 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1955" }
%"class.blink::PaintPropertyNode.1955" = type { %"class.WTF::RefCounted.1956", i8, i8, %class.scoped_refptr.1790, i32, i32 }
%"class.WTF::RefCounted.1956" = type { %"class.base::RefCounted.1957" }
%"class.base::RefCounted.1957" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1791" = type { %"class.std::__1::__compressed_pair.1792" }
%"class.std::__1::__compressed_pair.1792" = type { %"struct.std::__1::__compressed_pair_elem.1793" }
%"struct.std::__1::__compressed_pair_elem.1793" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1794", %"class.WTF::Vector.1799", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1794" = type { %"class.WTF::VectorBuffer.1795" }
%"class.WTF::VectorBuffer.1795" = type { %"class.WTF::VectorBufferBase.1796" }
%"class.WTF::VectorBufferBase.1796" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1799" = type { %"class.WTF::VectorBuffer.1800" }
%"class.WTF::VectorBuffer.1800" = type { %"class.WTF::VectorBufferBase.1801" }
%"class.WTF::VectorBufferBase.1801" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1819" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1812, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1813", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1806" }
%"class.std::__1::unique_ptr.1806" = type { %"class.std::__1::__compressed_pair.1807" }
%"class.std::__1::__compressed_pair.1807" = type { %"struct.std::__1::__compressed_pair_elem.1808" }
%"struct.std::__1::__compressed_pair_elem.1808" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1812 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1940", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1940" = type { %"class.WTF::RefCounted.1941", i8, i8, %class.scoped_refptr.1812, i32, i32 }
%"class.WTF::RefCounted.1941" = type { %"class.base::RefCounted.1942" }
%"class.base::RefCounted.1942" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1943" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1943" = type { %"class.absl::optional_internal::optional_data.1944" }
%"class.absl::optional_internal::optional_data.1944" = type { %"class.absl::optional_internal::optional_data_base.1945" }
%"class.absl::optional_internal::optional_data_base.1945" = type { %"class.absl::optional_internal::optional_data_dtor_base.1946" }
%"class.absl::optional_internal::optional_data_dtor_base.1946" = type { i8, %union.anon.1947 }
%union.anon.1947 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1948", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1948" = type { %"class.std::__1::__vector_base.1949" }
%"class.std::__1::__vector_base.1949" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1950" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1950" = type { %"struct.std::__1::__compressed_pair_elem.1951" }
%"struct.std::__1::__compressed_pair_elem.1951" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1813" = type { %"class.std::__1::__compressed_pair.1814" }
%"class.std::__1::__compressed_pair.1814" = type { %"struct.std::__1::__compressed_pair_elem.1815" }
%"struct.std::__1::__compressed_pair_elem.1815" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1819" = type { %"class.std::__1::__compressed_pair.1820" }
%"class.std::__1::__compressed_pair.1820" = type { %"struct.std::__1::__compressed_pair_elem.1821" }
%"struct.std::__1::__compressed_pair_elem.1821" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1822", %"class.std::__1::unique_ptr.1828", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1822" = type { %"class.std::__1::__compressed_pair.1823" }
%"class.std::__1::__compressed_pair.1823" = type { %"struct.std::__1::__compressed_pair_elem.1824" }
%"struct.std::__1::__compressed_pair_elem.1824" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1828" = type { %"class.std::__1::__compressed_pair.1829" }
%"class.std::__1::__compressed_pair.1829" = type { %"struct.std::__1::__compressed_pair_elem.1830" }
%"struct.std::__1::__compressed_pair_elem.1830" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1840" = type { %"class.std::__1::__compressed_pair.1841" }
%"class.std::__1::__compressed_pair.1841" = type { %"struct.std::__1::__compressed_pair_elem.1842" }
%"struct.std::__1::__compressed_pair_elem.1842" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1843", %"class.absl::optional.1843" }
%"class.absl::optional.1843" = type { %"class.absl::optional_internal::optional_data.1844" }
%"class.absl::optional_internal::optional_data.1844" = type { %"class.absl::optional_internal::optional_data_base.1845" }
%"class.absl::optional_internal::optional_data_base.1845" = type { %"class.absl::optional_internal::optional_data_dtor_base.1846" }
%"class.absl::optional_internal::optional_data_dtor_base.1846" = type { i8, [3 x i8], %union.anon.1847 }
%union.anon.1847 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1785"*, %"class.absl::optional.1853", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1853" = type { %"class.absl::optional_internal::optional_data.1854" }
%"class.absl::optional_internal::optional_data.1854" = type { %"class.absl::optional_internal::optional_data_base.1855" }
%"class.absl::optional_internal::optional_data_base.1855" = type { %"class.absl::optional_internal::optional_data_dtor_base.1856" }
%"class.absl::optional_internal::optional_data_dtor_base.1856" = type { i8, %union.anon.1857 }
%union.anon.1857 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1858", %"class.WTF::Vector.1863" }
%"class.WTF::Vector.1858" = type { %"class.WTF::VectorBuffer.1859" }
%"class.WTF::VectorBuffer.1859" = type { %"class.WTF::VectorBufferBase.1860", [128 x i8] }
%"class.WTF::VectorBufferBase.1860" = type { i32*, i32, i32 }
%"class.WTF::Vector.1863" = type { %"class.WTF::VectorBuffer.1864" }
%"class.WTF::VectorBuffer.1864" = type { %"class.WTF::VectorBufferBase.1865", [128 x i8] }
%"class.WTF::VectorBufferBase.1865" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1868" = type { %"class.WTF::VectorBuffer.1869" }
%"class.WTF::VectorBuffer.1869" = type { %"class.WTF::VectorBufferBase.1870" }
%"class.WTF::VectorBufferBase.1870" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1873" = type { %"class.WTF::HashTable.1874" }
%"class.WTF::HashTable.1874" = type <{ %"struct.WTF::KeyValuePair.1877"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1877" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1878", %"class.WTF::Vector.1883" }
%"class.WTF::HashMap.1878" = type { %"class.WTF::HashTable.1879" }
%"class.WTF::HashTable.1879" = type <{ %"struct.WTF::KeyValuePair.1882"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1882" = type opaque
%"class.WTF::Vector.1883" = type { %"class.WTF::VectorBuffer.1884" }
%"class.WTF::VectorBuffer.1884" = type { %"class.WTF::VectorBufferBase.1885" }
%"class.WTF::VectorBufferBase.1885" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1891" = type { %"class.std::__1::__compressed_pair.1892" }
%"class.std::__1::__compressed_pair.1892" = type { %"struct.std::__1::__compressed_pair_elem.1893" }
%"struct.std::__1::__compressed_pair_elem.1893" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1897" = type { %"class.WTF::VectorBuffer.1898" }
%"class.WTF::VectorBuffer.1898" = type { %"class.WTF::VectorBufferBase.1899" }
%"class.WTF::VectorBufferBase.1899" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1902 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1903" = type { %"class.blink::MemberBase.1904" }
%"class.blink::MemberBase.1904" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1905" = type { %"class.blink::MemberBase.1906" }
%"class.blink::MemberBase.1906" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1907" = type { %"class.blink::MemberBase.1908" }
%"class.blink::MemberBase.1908" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1909" = type { %"class.WTF::HashSet.1912" }
%"class.WTF::HashSet.1912" = type { %"class.WTF::HashTable.1913" }
%"class.WTF::HashTable.1913" = type <{ %"class.blink::WeakMember.1915"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1915" = type opaque
%"class.blink::HeapHashSet.1916" = type { %"class.WTF::HashSet.1919" }
%"class.WTF::HashSet.1919" = type { %"class.WTF::HashTable.1920" }
%"class.WTF::HashTable.1920" = type <{ %"class.blink::WeakMember.1922"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1922" = type opaque
%"class.std::__1::unique_ptr.1923" = type { %"class.std::__1::__compressed_pair.1924" }
%"class.std::__1::__compressed_pair.1924" = type { %"struct.std::__1::__compressed_pair_elem.1925" }
%"struct.std::__1::__compressed_pair_elem.1925" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1929" = type { %"class.std::__1::__compressed_pair.1930" }
%"class.std::__1::__compressed_pair.1930" = type { %"struct.std::__1::__compressed_pair_elem.1931" }
%"struct.std::__1::__compressed_pair_elem.1931" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.973", i32, i32, i32, i8, [3 x i8] }>
%"class.WTF::Vector.1935" = type { %"class.WTF::VectorBuffer.1936" }
%"class.WTF::VectorBuffer.1936" = type { %"class.WTF::VectorBufferBase.1937" }
%"class.WTF::VectorBufferBase.1937" = type { %"class.base::OnceCallback.615"*, i32, i32 }
%"class.blink::Member.1443" = type { %"class.blink::MemberBase.1444" }
%"class.blink::MemberBase.1444" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.1448" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.1373", %"class.blink::Member.1373" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.1373", %"class.blink::Member.1375", %"class.blink::Member.1373", %"class.blink::Member.1373", %"class.blink::Member.1377" }
%"class.blink::Member.1375" = type { %"class.blink::MemberBase.1376" }
%"class.blink::MemberBase.1376" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1426", %"class.blink::Member.1249", %"class.blink::Member.1375", %"class.blink::Member.1428", %"class.blink::Member.1428", %"class.blink::Member.1470", %"class.blink::Member.1472", %"class.blink::Member.1474", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.1479", %"class.blink::HeapVector.1481" }
%"class.blink::Member.1426" = type { %"class.blink::MemberBase.1427" }
%"class.blink::MemberBase.1427" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.1428" = type { %"class.blink::MemberBase.1429" }
%"class.blink::MemberBase.1429" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.1432" }
%"class.blink::HeapHashMap.1432" = type { %"class.WTF::HashMap.1435" }
%"class.WTF::HashMap.1435" = type { %"class.WTF::HashTable.1436" }
%"class.WTF::HashTable.1436" = type <{ %"struct.WTF::KeyValuePair.1438"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1438" = type { %"class.WTF::AtomicString", %"class.blink::Member.1439" }
%"class.blink::Member.1439" = type { %"class.blink::MemberBase.1440" }
%"class.blink::MemberBase.1440" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.1443", i32, %"class.blink::HeapVector.1463" }
%"class.blink::HeapVector.1463" = type { %"class.WTF::Vector.1466" }
%"class.WTF::Vector.1466" = type { %"class.WTF::VectorBuffer.1467" }
%"class.WTF::VectorBuffer.1467" = type { %"class.WTF::VectorBufferBase.1468" }
%"class.WTF::VectorBufferBase.1468" = type { %"class.blink::Member.1443"*, i32, i32 }
%"class.blink::Member.1470" = type { %"class.blink::MemberBase.1471" }
%"class.blink::MemberBase.1471" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.1472" = type { %"class.blink::MemberBase.1473" }
%"class.blink::MemberBase.1473" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.1474" = type { %"class.blink::MemberBase.1475" }
%"class.blink::MemberBase.1475" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.1476" }
%"class.blink::Member.1476" = type { %"class.blink::MemberBase.1477" }
%"class.blink::MemberBase.1477" = type { %"class.blink::HeapHashMap.1478"* }
%"class.blink::HeapHashMap.1478" = type opaque
%"class.blink::Member.1479" = type { %"class.blink::MemberBase.1480" }
%"class.blink::MemberBase.1480" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.1481" = type { %"class.WTF::Vector.1484" }
%"class.WTF::Vector.1484" = type { %"class.WTF::VectorBuffer.1485" }
%"class.WTF::VectorBuffer.1485" = type { %"class.WTF::VectorBufferBase.1486" }
%"class.WTF::VectorBufferBase.1486" = type { %"class.blink::Member.1487"*, i32, i32 }
%"class.blink::Member.1487" = type { %"class.blink::MemberBase.1488" }
%"class.blink::MemberBase.1488" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.1489", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.1491, %"class.WTF::Vector.1492", %"class.WTF::Vector.1492", %"class.blink::Member.1373", %"class.blink::Member.1497", %"class.blink::HeapHashSet.1501", %"class.blink::Member.1249", %"class.WTF::HashSet.1508", %"class.WTF::TextPosition", %"class.blink::Member.1512", %"class.blink::HeapVector.1514", %"class.blink::Member.1521" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.1489" = type { %"class.blink::MemberBase.1490" }
%"class.blink::MemberBase.1490" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.1491 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.1492" = type { %"class.WTF::VectorBuffer.1493" }
%"class.WTF::VectorBuffer.1493" = type { %"class.WTF::VectorBufferBase.1494" }
%"class.WTF::VectorBufferBase.1494" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.1497" = type { %"class.blink::MemberBase.1498" }
%"class.blink::MemberBase.1498" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.1499" }
%"class.blink::Member.1499" = type { %"class.blink::MemberBase.1500" }
%"class.blink::MemberBase.1500" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.1501" = type { %"class.WTF::HashSet.1504" }
%"class.WTF::HashSet.1504" = type { %"class.WTF::HashTable.1505" }
%"class.WTF::HashTable.1505" = type <{ %"class.blink::WeakMember.1507"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1507" = type { %"class.blink::MemberBase.1376" }
%"class.WTF::HashSet.1508" = type { %"class.WTF::HashTable.1509" }
%"class.WTF::HashTable.1509" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1512" = type { %"class.blink::MemberBase.1513" }
%"class.blink::MemberBase.1513" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.1514" = type { %"class.WTF::Vector.1517" }
%"class.WTF::Vector.1517" = type { %"class.WTF::VectorBuffer.1518" }
%"class.WTF::VectorBuffer.1518" = type { %"class.WTF::VectorBufferBase.1519" }
%"class.WTF::VectorBufferBase.1519" = type { %"class.blink::Member.1497"*, i32, i32 }
%"class.blink::Member.1521" = type { %"class.blink::MemberBase.1522" }
%"class.blink::MemberBase.1522" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::Member.1377" = type { %"class.blink::MemberBase.1378" }
%"class.blink::MemberBase.1378" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.1373" = type { %"class.blink::MemberBase.1374" }
%"class.blink::MemberBase.1374" = type { %"class.blink::Node"* }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.1445 }
%class.scoped_refptr.1445 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.1446", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.1446" = type { %"class.base::RefCounted.1447" }
%"class.base::RefCounted.1447" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.1448" = type { %"class.blink::MemberBase.1449" }
%"class.blink::MemberBase.1449" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.1452", %"class.blink::Member.1454", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.1452" = type { %"class.WTF::SingleThreadedBitField.1453" }
%"class.WTF::SingleThreadedBitField.1453" = type { i32 }
%"class.blink::Member.1454" = type { %"class.blink::MemberBase.1455" }
%"class.blink::MemberBase.1455" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.1456 }
%class.scoped_refptr.1456 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.1457", %"class.WTF::AtomicString", %"class.WTF::Vector.1459" }
%"class.WTF::RefCounted.1457" = type { %"class.base::RefCounted.1458" }
%"class.base::RefCounted.1458" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1459" = type { %"class.WTF::VectorBuffer.1460" }
%"class.WTF::VectorBuffer.1460" = type { %"class.WTF::VectorBufferBase.963", [32 x i8] }
%"class.blink::Member.1595" = type { %"class.blink::MemberBase.1596" }
%"class.blink::MemberBase.1596" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.1597" = type { %"class.blink::MemberBase.1598" }
%"class.blink::MemberBase.1598" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.1599" = type { %"class.blink::MemberBase.1600" }
%"class.blink::MemberBase.1600" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.1601" = type { %"class.blink::MemberBase.1602" }
%"class.blink::MemberBase.1602" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.1603" = type { %"class.blink::MemberBase.1604" }
%"class.blink::MemberBase.1604" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type opaque
%"class.blink::Member.1605" = type { %"class.blink::MemberBase.1606" }
%"class.blink::MemberBase.1606" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.1607" = type { %"class.blink::MemberBase.1608" }
%"class.blink::MemberBase.1608" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.1609" = type { %"class.blink::MemberBase.1610" }
%"class.blink::MemberBase.1610" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.1611" = type { %"class.blink::MemberBase.1612" }
%"class.blink::MemberBase.1612" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.1613" = type { %"class.blink::MemberBase.1614" }
%"class.blink::MemberBase.1614" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.1615" = type { %"class.blink::MemberBase.1616" }
%"class.blink::MemberBase.1616" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.1617" = type { %"class.blink::MemberBase.1618" }
%"class.blink::MemberBase.1618" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote.1619" = type { %"class.blink::Member.1620" }
%"class.blink::Member.1620" = type { %"class.blink::MemberBase.1621" }
%"class.blink::MemberBase.1621" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.2642" }
%"class.mojo::Remote.2642" = type { %"class.mojo::internal::InterfacePtrState.2643" }
%"class.mojo::internal::InterfacePtrState.2643" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2644" }
%"class.std::__1::unique_ptr.2644" = type { %"class.std::__1::__compressed_pair.2645" }
%"class.std::__1::__compressed_pair.2645" = type { %"struct.std::__1::__compressed_pair_elem.2646" }
%"struct.std::__1::__compressed_pair_elem.2646" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1622" = type { %"class.std::__1::__compressed_pair.1623" }
%"class.std::__1::__compressed_pair.1623" = type { %"struct.std::__1::__compressed_pair_elem.1624" }
%"struct.std::__1::__compressed_pair_elem.1624" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type { i32 (...)**, %class.scoped_refptr.1625, %"class.blink::WebVector.1627", %"class.base::WaitableEvent"* }
%class.scoped_refptr.1625 = type { %"class.network::SharedURLLoaderFactory"* }
%"class.network::SharedURLLoaderFactory" = type <{ %"class.network::mojom::URLLoaderFactory", %"class.base::RefCounted.1626", [4 x i8] }>
%"class.network::mojom::URLLoaderFactory" = type { i32 (...)** }
%"class.base::RefCounted.1626" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.1638" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.1639" = type { %"class.std::__1::__compressed_pair.1640" }
%"class.std::__1::__compressed_pair.1640" = type { %"struct.std::__1::__compressed_pair_elem.1641" }
%"struct.std::__1::__compressed_pair_elem.1641" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.std::__1::unique_ptr.1645" = type { %"class.std::__1::__compressed_pair.1646" }
%"class.std::__1::__compressed_pair.1646" = type { %"struct.std::__1::__compressed_pair_elem.1647" }
%"struct.std::__1::__compressed_pair_elem.1647" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.1651" }
%"class.blink::Member.1651" = type { %"class.blink::MemberBase.1652" }
%"class.blink::MemberBase.1652" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2652" }
%"class.mojo::AssociatedRemote.2652" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2653" }
%"class.mojo::internal::AssociatedInterfacePtrState.2653" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2654" }
%"class.std::__1::unique_ptr.2654" = type { %"class.std::__1::__compressed_pair.2655" }
%"class.std::__1::__compressed_pair.2655" = type { %"struct.std::__1::__compressed_pair_elem.2656" }
%"struct.std::__1::__compressed_pair_elem.2656" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.1653" = type { %"class.blink::Member.1654" }
%"class.blink::Member.1654" = type { %"class.blink::MemberBase.1655" }
%"class.blink::MemberBase.1655" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2662" }
%"class.mojo::AssociatedRemote.2662" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2663" }
%"class.mojo::internal::AssociatedInterfacePtrState.2663" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2664" }
%"class.std::__1::unique_ptr.2664" = type { %"class.std::__1::__compressed_pair.2665" }
%"class.std::__1::__compressed_pair.2665" = type { %"struct.std::__1::__compressed_pair_elem.2666" }
%"struct.std::__1::__compressed_pair_elem.2666" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.1656" }
%"class.blink::Member.1656" = type { %"class.blink::MemberBase.1657" }
%"class.blink::MemberBase.1657" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2672", %"class.blink::Member.1369", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2672" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.2673" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.598" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.2673" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.1658" = type { %"class.blink::Member.1659" }
%"class.blink::Member.1659" = type { %"class.blink::MemberBase.1660" }
%"class.blink::MemberBase.1660" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2676", %"class.blink::Member.1369", %"class.mojo::AssociatedReceiver.2677" }
%"class.blink::ThreadState::PrefinalizerRegistration.2676" = type { i8 }
%"class.mojo::AssociatedReceiver.2677" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.2678" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.2678" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.1661" }
%"class.blink::Member.1661" = type { %"class.blink::MemberBase.1662" }
%"class.blink::MemberBase.1662" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2681", %"class.blink::Member.1369", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2681" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.1137, %"class.std::__1::unique_ptr.598", %"class.base::WeakPtrFactory.2682" }
%"class.base::WeakPtrFactory.2682" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.1663" = type { %"class.blink::Member.1664" }
%"class.blink::Member.1664" = type { %"class.blink::MemberBase.1665" }
%"class.blink::MemberBase.1665" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2685", %"class.blink::Member.1369", %"class.mojo::AssociatedReceiver.2686" }
%"class.blink::ThreadState::PrefinalizerRegistration.2685" = type { i8 }
%"class.mojo::AssociatedReceiver.2686" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.2687" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.2687" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1666" = type { %"class.blink::MemberBase.1667" }
%"class.blink::MemberBase.1667" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.1668" = type { %"class.blink::MemberBase.1669" }
%"class.blink::MemberBase.1669" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.1670" = type { %"class.blink::MemberBase.1671" }
%"class.blink::MemberBase.1671" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.1672" = type { %"class.blink::MemberBase.1673" }
%"class.blink::MemberBase.1673" = type { %"class.blink::HeapHashMap.1674"* }
%"class.blink::HeapHashMap.1674" = type opaque
%"class.mojo::StructPtr.1675" = type { %"class.std::__1::unique_ptr.1676" }
%"class.std::__1::unique_ptr.1676" = type { %"class.std::__1::__compressed_pair.1677" }
%"class.std::__1::__compressed_pair.1677" = type { %"struct.std::__1::__compressed_pair_elem.1678" }
%"struct.std::__1::__compressed_pair_elem.1678" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.1679", %"class.mojo::InlinedStructPtr.857" }
%"class.mojo::InlinedStructPtr.1679" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.blink::Member.1683" = type { %"class.blink::MemberBase.1684" }
%"class.blink::MemberBase.1684" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.1685" = type { %"class.absl::optional_internal::optional_data.1686" }
%"class.absl::optional_internal::optional_data.1686" = type { %"class.absl::optional_internal::optional_data_base.1687" }
%"class.absl::optional_internal::optional_data_base.1687" = type { %"class.absl::optional_internal::optional_data_dtor_base.1688" }
%"class.absl::optional_internal::optional_data_dtor_base.1688" = type { i8, %union.anon.1689 }
%union.anon.1689 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.1125", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map.1536" = type { %"class.base::internal::flat_tree.1537" }
%"class.base::internal::flat_tree.1537" = type { %"class.std::__1::vector.1538" }
%"class.std::__1::vector.1538" = type { %"class.std::__1::__vector_base.1539" }
%"class.std::__1::__vector_base.1539" = type { %"struct.std::__1::pair.1540"*, %"struct.std::__1::pair.1540"*, %"class.std::__1::__compressed_pair.1541" }
%"struct.std::__1::pair.1540" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.std::__1::__compressed_pair.1541" = type { %"struct.std::__1::__compressed_pair_elem.1542" }
%"struct.std::__1::__compressed_pair_elem.1542" = type { %"struct.std::__1::pair.1540"* }
%"class.blink::Member.1546" = type { %"class.blink::MemberBase.1547" }
%"class.blink::MemberBase.1547" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.1548" = type { %"class.absl::optional_internal::optional_data.1549" }
%"class.absl::optional_internal::optional_data.1549" = type { %"class.absl::optional_internal::optional_data_base.1550" }
%"class.absl::optional_internal::optional_data_base.1550" = type { %"class.absl::optional_internal::optional_data_dtor_base.1551" }
%"class.absl::optional_internal::optional_data_dtor_base.1551" = type { i8, %union.anon.1552 }
%union.anon.1552 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.1553" }
%"class.blink::HeapHashSet.1553" = type { %"class.WTF::HashSet.1556" }
%"class.WTF::HashSet.1556" = type { %"class.WTF::HashTable.1557" }
%"class.WTF::HashTable.1557" = type <{ %"class.blink::WeakMember.1559"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1559" = type opaque
%"class.blink::Member.1127" = type { %"class.blink::MemberBase.1128" }
%"class.blink::MemberBase.1128" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::Member.1129" = type { %"class.blink::MemberBase.1130" }
%"class.blink::MemberBase.1130" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.1131" = type { %"class.blink::MemberBase.1132" }
%"class.blink::MemberBase.1132" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.1133" = type { %"class.WTF::VectorBuffer.1134" }
%"class.WTF::VectorBuffer.1134" = type { %"class.WTF::VectorBufferBase.1135" }
%"class.WTF::VectorBufferBase.1135" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1230" }
%"class.std::__1::unique_ptr.1230" = type { %"class.std::__1::__compressed_pair.1231" }
%"class.std::__1::__compressed_pair.1231" = type { %"struct.std::__1::__compressed_pair_elem.1232" }
%"struct.std::__1::__compressed_pair_elem.1232" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Supplementable.1238" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1239" }
%"class.blink::HeapHashMap.1239" = type { %"class.WTF::HashMap.1242" }
%"class.WTF::HashMap.1242" = type { %"class.WTF::HashTable.1243" }
%"class.WTF::HashTable.1243" = type <{ %"struct.WTF::KeyValuePair.1245"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1245" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration.1246" = type { i8 }
%"class.blink::Member.1247" = type { %"class.blink::MemberBase.1248" }
%"class.blink::MemberBase.1248" = type { %"class.blink::ScriptController"* }
%"class.blink::ScriptController" = type opaque
%"class.blink::Member.1249" = type { %"class.blink::MemberBase.1250" }
%"class.blink::MemberBase.1250" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.2207", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.1935", %"class.WTF::Vector.1935", i8, i32, %"class.blink::Member.1396", %"class.blink::Member", %"class.blink::Member.732", %"class.blink::Member.2144", %"class.blink::Member.2215", %"class.blink::Member.2217", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.2219", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.2225", %"class.blink::Member.2227", %"class.blink::Member.1487", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.2229", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.2234", %"class.blink::HeapVector.1463", %"class.blink::Member.1443", %"class.blink::Member.1388", %"class.blink::Member.1443", %"class.blink::Member.1443", %"class.blink::Member.1443", %"class.blink::UserActionElementSet", %"class.blink::Member.2243", double, double, i64, i64, %"class.blink::HeapHashSet.2245", %"class.blink::HeapHashSet.2252", i16, i8, %"class.blink::Member.2259", %"class.blink::Member.2261", %"class.blink::Member.2263", %"class.blink::Member.2265", %"class.blink::TextLinkColors", %"class.blink::Member.2267", i8, [7 x i8], %"class.blink::HeapHashMap.2269", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.1443", %"class.WTF::Vector.2276", %"class.blink::Member.2281", %"class.blink::Member.2283", i8, %"class.blink::Member.1443", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.2285", %"class.blink::HeapVector.2287", %"class.std::__1::unique_ptr.2295", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.2301", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.2314", %"class.WTF::Vector.2316", i8, i8, %"class.std::__1::unique_ptr.2321", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.1463", %"class.blink::HeapVector.2327", i32, i8, %"class.blink::HeapTaskRunnerTimer.2234", %"class.blink::HeapTaskRunnerTimer.2234", %"class.blink::DocumentTiming", %"class.blink::Member.2335", i8, i32, %"class.blink::Member.2337", %"class.blink::Member.2339", %"class.blink::Member.2341", %"class.blink::HeapTaskRunnerTimer.2234", %"class.blink::Member.2343", %"class.WTF::HashMap.2345", %"class.blink::Member.2350", %"class.blink::Member.2352", %"class.blink::Member.2354", %"class.blink::Member.2356", %"class.blink::Member.1249", %"class.blink::Member.1249", %"class.blink::HeapTaskRunnerTimer.2234", %"class.blink::HeapHashSet.2358", i8, i32, %"class.blink::Member.2365", %"class.blink::Member.2367", i32, %"class.blink::Member.2369", %"class.blink::Member.2371", %"class.blink::Member.2373", %"class.std::__1::unique_ptr.2375", i64, %"class.std::__1::unique_ptr.2381", i32, i32, %"class.blink::Member.2387", %"class.blink::Member.2389", %"class.blink::Member.2391", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.2393", %"class.WTF::Vector.1412", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.2395", %"class.blink::Member.2402", %"class.std::__1::unique_ptr.2404", %"class.blink::Member.2410", i8, i8, %"class.WTF::String", %"class.blink::Member.2412", i8, [7 x i8], %"class.blink::HeapHashMap.2414", %"class.blink::HeapObserverSet.2421", %"class.blink::Member.2429", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.2431", i32, i8, i8, %"class.blink::WeakMember.2433", %"class.blink::Member.2434" }
%"class.blink::Supplementable.2207" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2208" }
%"class.blink::HeapHashMap.2208" = type { %"class.WTF::HashMap.2211" }
%"class.WTF::HashMap.2211" = type { %"class.WTF::HashTable.2212" }
%"class.WTF::HashTable.2212" = type <{ %"struct.WTF::KeyValuePair.2214"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2214" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::Member.2215" = type { %"class.blink::MemberBase.2216" }
%"class.blink::MemberBase.2216" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.2217" = type { %"class.blink::MemberBase.2218" }
%"class.blink::MemberBase.2218" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.2219" = type { %"class.std::__1::__compressed_pair.2220" }
%"class.std::__1::__compressed_pair.2220" = type { %"struct.std::__1::__compressed_pair_elem.2221" }
%"struct.std::__1::__compressed_pair_elem.2221" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.2225" = type { %"class.blink::MemberBase.2226" }
%"class.blink::MemberBase.2226" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.2227" = type { %"class.blink::MemberBase.2228" }
%"class.blink::MemberBase.2228" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.WTF::Vector.2229" = type { %"class.WTF::VectorBuffer.2230" }
%"class.WTF::VectorBuffer.2230" = type { %"class.WTF::VectorBufferBase.2231" }
%"class.WTF::VectorBufferBase.2231" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.1008 }
%"class.blink::Member.1388" = type { %"class.blink::MemberBase.1389" }
%"class.blink::MemberBase.1389" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.1249", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.1373", %"class.blink::Member.1373", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.2236" }
%"class.blink::HeapHashMap.2236" = type { %"class.WTF::HashMap.2239" }
%"class.WTF::HashMap.2239" = type { %"class.WTF::HashTable.2240" }
%"class.WTF::HashTable.2240" = type <{ %"struct.WTF::KeyValuePair.2242"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2242" = type opaque
%"class.blink::Member.2243" = type { %"class.blink::MemberBase.2244" }
%"class.blink::MemberBase.2244" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.2245" = type { %"class.WTF::HashSet.2248" }
%"class.WTF::HashSet.2248" = type { %"class.WTF::HashTable.2249" }
%"class.WTF::HashTable.2249" = type <{ %"class.blink::WeakMember.2251"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2251" = type opaque
%"class.blink::HeapHashSet.2252" = type { %"class.WTF::HashSet.2255" }
%"class.WTF::HashSet.2255" = type { %"class.WTF::HashTable.2256" }
%"class.WTF::HashTable.2256" = type <{ %"class.blink::WeakMember.2258"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2258" = type opaque
%"class.blink::Member.2259" = type { %"class.blink::MemberBase.2260" }
%"class.blink::MemberBase.2260" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.2261" = type { %"class.blink::MemberBase.2262" }
%"class.blink::MemberBase.2262" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.2263" = type { %"class.blink::MemberBase.2264" }
%"class.blink::MemberBase.2264" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.1375", %"class.blink::HeapVector.1481" }
%"class.blink::Member.2265" = type { %"class.blink::MemberBase.2266" }
%"class.blink::MemberBase.2266" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.2267" = type { %"class.blink::MemberBase.2268" }
%"class.blink::MemberBase.2268" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.2269" = type { %"class.WTF::HashMap.2272" }
%"class.WTF::HashMap.2272" = type { %"class.WTF::HashTable.2273" }
%"class.WTF::HashTable.2273" = type <{ %"struct.WTF::KeyValuePair.2275"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2275" = type opaque
%"class.WTF::Vector.2276" = type { %"class.WTF::VectorBuffer.2277" }
%"class.WTF::VectorBuffer.2277" = type { %"class.WTF::VectorBufferBase.2278" }
%"class.WTF::VectorBufferBase.2278" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.2281" = type { %"class.blink::MemberBase.2282" }
%"class.blink::MemberBase.2282" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.2283" = type { %"class.blink::MemberBase.2284" }
%"class.blink::MemberBase.2284" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.2285" = type { %"class.blink::MemberBase.2286" }
%"class.blink::MemberBase.2286" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.2287" = type { %"class.WTF::Vector.2290" }
%"class.WTF::Vector.2290" = type { %"class.WTF::VectorBuffer.2291" }
%"class.WTF::VectorBuffer.2291" = type { %"class.WTF::VectorBufferBase.2292" }
%"class.WTF::VectorBufferBase.2292" = type { %"class.blink::Member.2293"*, i32, i32 }
%"class.blink::Member.2293" = type opaque
%"class.std::__1::unique_ptr.2295" = type { %"class.std::__1::__compressed_pair.2296" }
%"class.std::__1::__compressed_pair.2296" = type { %"struct.std::__1::__compressed_pair_elem.2297" }
%"struct.std::__1::__compressed_pair_elem.2297" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.2301" = type { %"class.WTF::HashSet.2304" }
%"class.WTF::HashSet.2304" = type { %"class.WTF::HashTable.2305" }
%"class.WTF::HashTable.2305" = type <{ %"class.blink::WeakMember.2307"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2307" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.2308", i32, [4 x i8] }>
%"class.WTF::Vector.2308" = type { %"class.WTF::VectorBuffer.2309" }
%"class.WTF::VectorBuffer.2309" = type { %"class.WTF::VectorBufferBase.2310" }
%"class.WTF::VectorBufferBase.2310" = type { %"struct.std::__1::pair.2311"*, i32, i32 }
%"struct.std::__1::pair.2311" = type opaque
%"class.blink::Member.2314" = type { %"class.blink::MemberBase.2315" }
%"class.blink::MemberBase.2315" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.2316" = type { %"class.WTF::VectorBuffer.2317" }
%"class.WTF::VectorBuffer.2317" = type { %"class.WTF::VectorBufferBase.2318" }
%"class.WTF::VectorBufferBase.2318" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.2321" = type { %"class.std::__1::__compressed_pair.2322" }
%"class.std::__1::__compressed_pair.2322" = type { %"struct.std::__1::__compressed_pair_elem.2323" }
%"struct.std::__1::__compressed_pair_elem.2323" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.2327" = type { %"class.WTF::Vector.2330" }
%"class.WTF::Vector.2330" = type { %"class.WTF::VectorBuffer.2331" }
%"class.WTF::VectorBuffer.2331" = type { %"class.WTF::VectorBufferBase.2332" }
%"class.WTF::VectorBufferBase.2332" = type { %"class.blink::Member.2333"*, i32, i32 }
%"class.blink::Member.2333" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.1249" }
%"class.blink::Member.2335" = type { %"class.blink::MemberBase.2336" }
%"class.blink::MemberBase.2336" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.2337" = type { %"class.blink::MemberBase.2338" }
%"class.blink::MemberBase.2338" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.2339" = type { %"class.blink::MemberBase.2340" }
%"class.blink::MemberBase.2340" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.2341" = type { %"class.blink::MemberBase.2342" }
%"class.blink::MemberBase.2342" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.2343" = type { %"class.blink::MemberBase.2344" }
%"class.blink::MemberBase.2344" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.2345" = type { %"class.WTF::HashTable.2346" }
%"class.WTF::HashTable.2346" = type <{ %"struct.WTF::KeyValuePair.2349"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2349" = type opaque
%"class.blink::Member.2350" = type { %"class.blink::MemberBase.2351" }
%"class.blink::MemberBase.2351" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.2352" = type { %"class.blink::MemberBase.2353" }
%"class.blink::MemberBase.2353" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.2354" = type { %"class.blink::MemberBase.2355" }
%"class.blink::MemberBase.2355" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.2356" = type { %"class.blink::MemberBase.2357" }
%"class.blink::MemberBase.2357" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer.2234" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2235", { i64, i64 } }
%"class.blink::WeakMember.2235" = type { %"class.blink::MemberBase.1250" }
%"class.blink::HeapHashSet.2358" = type { %"class.WTF::HashSet.2361" }
%"class.WTF::HashSet.2361" = type { %"class.WTF::HashTable.2362" }
%"class.WTF::HashTable.2362" = type <{ %"class.blink::Member.2364"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2364" = type opaque
%"class.blink::Member.2365" = type { %"class.blink::MemberBase.2366" }
%"class.blink::MemberBase.2366" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.2367" = type { %"class.blink::MemberBase.2368" }
%"class.blink::MemberBase.2368" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.2369" = type { %"class.blink::MemberBase.2370" }
%"class.blink::MemberBase.2370" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.2371" = type { %"class.blink::MemberBase.2372" }
%"class.blink::MemberBase.2372" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.2373" = type { %"class.blink::MemberBase.2374" }
%"class.blink::MemberBase.2374" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.2375" = type { %"class.std::__1::__compressed_pair.2376" }
%"class.std::__1::__compressed_pair.2376" = type { %"struct.std::__1::__compressed_pair_elem.2377" }
%"struct.std::__1::__compressed_pair_elem.2377" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2381" = type { %"class.std::__1::__compressed_pair.2382" }
%"class.std::__1::__compressed_pair.2382" = type { %"struct.std::__1::__compressed_pair_elem.2383" }
%"struct.std::__1::__compressed_pair_elem.2383" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.2387" = type { %"class.blink::MemberBase.2388" }
%"class.blink::MemberBase.2388" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.2389" = type { %"class.blink::MemberBase.2390" }
%"class.blink::MemberBase.2390" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.2391" = type { %"class.blink::MemberBase.2392" }
%"class.blink::MemberBase.2392" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.2393" = type { %"class.blink::MemberBase.2394" }
%"class.blink::MemberBase.2394" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.blink::HeapHashMap.2395" = type { %"class.WTF::HashMap.2398" }
%"class.WTF::HashMap.2398" = type { %"class.WTF::HashTable.2399" }
%"class.WTF::HashTable.2399" = type <{ %"struct.WTF::KeyValuePair.2401"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2401" = type opaque
%"class.blink::Member.2402" = type { %"class.blink::MemberBase.2403" }
%"class.blink::MemberBase.2403" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.2404" = type { %"class.std::__1::__compressed_pair.2405" }
%"class.std::__1::__compressed_pair.2405" = type { %"struct.std::__1::__compressed_pair_elem.2406" }
%"struct.std::__1::__compressed_pair_elem.2406" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.2410" = type { %"class.blink::MemberBase.2411" }
%"class.blink::MemberBase.2411" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.2412" = type { %"class.blink::MemberBase.2413" }
%"class.blink::MemberBase.2413" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.2414" = type { %"class.WTF::HashMap.2417" }
%"class.WTF::HashMap.2417" = type { %"class.WTF::HashTable.2418" }
%"class.WTF::HashTable.2418" = type <{ %"struct.WTF::KeyValuePair.2420"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2420" = type opaque
%"class.blink::HeapObserverSet.2421" = type { i32, [4 x i8], %"class.blink::HeapHashSet.2422" }
%"class.blink::HeapHashSet.2422" = type { %"class.WTF::HashSet.2425" }
%"class.WTF::HashSet.2425" = type { %"class.WTF::HashTable.2426" }
%"class.WTF::HashTable.2426" = type <{ %"class.blink::WeakMember.2428"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2428" = type opaque
%"class.blink::Member.2429" = type { %"class.blink::MemberBase.2430" }
%"class.blink::MemberBase.2430" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.2431" = type { %"class.blink::MemberBase.2432" }
%"class.blink::MemberBase.2432" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.1249", %"class.blink::HeapHashSet.2438", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.2445", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.2438" = type { %"class.WTF::HashSet.2441" }
%"class.WTF::HashSet.2441" = type { %"class.WTF::HashTable.2442" }
%"class.WTF::HashTable.2442" = type <{ %"class.blink::Member.2444"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2444" = type opaque
%"class.blink::HeapTaskRunnerTimer.2445" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2446", { i64, i64 } }
%"class.blink::WeakMember.2446" = type { %"class.blink::MemberBase.2432" }
%"class.blink::WeakMember.2433" = type { %"class.blink::MemberBase.1374" }
%"class.blink::Member.2434" = type { %"class.blink::MemberBase.2435" }
%"class.blink::MemberBase.2435" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.1251" = type { %"class.blink::MemberBase.1252" }
%"class.blink::MemberBase.1252" = type { %"class.blink::DOMVisualViewport"* }
%"class.blink::DOMVisualViewport" = type opaque
%"class.blink::Member.1253" = type { %"class.blink::MemberBase.1254" }
%"class.blink::MemberBase.1254" = type { %"class.blink::Screen"* }
%"class.blink::Screen" = type opaque
%"class.blink::Member.1255" = type { %"class.blink::MemberBase.1256" }
%"class.blink::MemberBase.1256" = type { %"class.blink::History"* }
%"class.blink::History" = type opaque
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::BarProp"* }
%"class.blink::BarProp" = type opaque
%"class.blink::Member.1259" = type { %"class.blink::MemberBase.1260" }
%"class.blink::MemberBase.1260" = type { %"class.blink::Navigator"* }
%"class.blink::Navigator" = type opaque
%"class.blink::Member.1261" = type { %"class.blink::MemberBase.1262" }
%"class.blink::MemberBase.1262" = type { %"class.blink::StyleMedia"* }
%"class.blink::StyleMedia" = type opaque
%"class.blink::Member.1263" = type { %"class.blink::MemberBase.1264" }
%"class.blink::MemberBase.1264" = type { %"class.blink::CustomElementRegistry"* }
%"class.blink::CustomElementRegistry" = type opaque
%"class.blink::Member.1265" = type { %"class.blink::MemberBase.1266" }
%"class.blink::MemberBase.1266" = type { %"class.blink::External"* }
%"class.blink::External" = type opaque
%"class.blink::Member.1267" = type { %"class.blink::MemberBase.1268" }
%"class.blink::MemberBase.1268" = type { %"class.blink::ApplicationCache"* }
%"class.blink::ApplicationCache" = type opaque
%class.scoped_refptr.1269 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.1271", i64, %"class.WTF::Vector.1275", %"class.WTF::Vector.1280", %"class.WTF::Vector.1286", %"class.WTF::Vector.1304", %class.scoped_refptr.474, %"class.WTF::HashMap.1310", %"class.WTF::Vector.1315", %"class.WTF::Vector.1275", %"class.WTF::Vector.1321", %"class.WTF::HashMap.1327", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.1270" }
%"class.base::RefCountedThreadSafe.1270" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1271" = type { %"class.std::__1::__compressed_pair.1272" }
%"class.std::__1::__compressed_pair.1272" = type { %"struct.std::__1::__compressed_pair_elem.1273" }
%"class.WTF::Vector.1280" = type { %"class.WTF::VectorBuffer.1281" }
%"class.WTF::VectorBuffer.1281" = type { %"class.WTF::VectorBufferBase.1282", [8 x i8] }
%"class.WTF::VectorBufferBase.1282" = type { %class.scoped_refptr.1283*, i32, i32 }
%class.scoped_refptr.1283 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.1286" = type { %"class.WTF::VectorBuffer.1287" }
%"class.WTF::VectorBuffer.1287" = type { %"class.WTF::VectorBufferBase.1288" }
%"class.WTF::VectorBufferBase.1288" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.1290", %"class.std::__1::unique_ptr.1296" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.1289 }
%class.scoped_refptr.1289 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.1290" = type { %"class.std::__1::__compressed_pair.1291" }
%"class.std::__1::__compressed_pair.1291" = type { %"struct.std::__1::__compressed_pair_elem.1292" }
%"struct.std::__1::__compressed_pair_elem.1292" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1296" = type { %"class.std::__1::__compressed_pair.1297" }
%"class.std::__1::__compressed_pair.1297" = type { %"struct.std::__1::__compressed_pair_elem.1298" }
%"struct.std::__1::__compressed_pair_elem.1298" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.1304" = type { %"class.WTF::VectorBuffer.1305" }
%"class.WTF::VectorBuffer.1305" = type { %"class.WTF::VectorBufferBase.1306" }
%"class.WTF::VectorBufferBase.1306" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.1307", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.1307" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.1310" = type { %"class.WTF::HashTable.1311" }
%"class.WTF::HashTable.1311" = type <{ %"struct.WTF::KeyValuePair.1314"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1314" = type opaque
%"class.WTF::Vector.1315" = type { %"class.WTF::VectorBuffer.1316" }
%"class.WTF::VectorBuffer.1316" = type { %"class.WTF::VectorBufferBase.1317" }
%"class.WTF::VectorBufferBase.1317" = type { %"class.mojo::ScopedHandleBase.1318"*, i32, i32 }
%"class.mojo::ScopedHandleBase.1318" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.1275" = type { %"class.WTF::VectorBuffer.1276" }
%"class.WTF::VectorBuffer.1276" = type { %"class.WTF::VectorBufferBase.1277", [16 x i8] }
%"class.WTF::VectorBufferBase.1277" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.1321" = type { %"class.WTF::VectorBuffer.1322" }
%"class.WTF::VectorBuffer.1322" = type { %"class.WTF::VectorBufferBase.1323" }
%"class.WTF::VectorBufferBase.1323" = type { %"class.mojo::PendingRemote.1324"*, i32, i32 }
%"class.mojo::PendingRemote.1324" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.WTF::HashMap.1327" = type { %"class.WTF::HashTable.1328" }
%"class.WTF::HashTable.1328" = type <{ %"struct.WTF::KeyValuePair.1331"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1331" = type { i8**, %"class.std::__1::unique_ptr.2621" }
%"class.std::__1::unique_ptr.2621" = type { %"class.std::__1::__compressed_pair.2622" }
%"class.std::__1::__compressed_pair.2622" = type { %"struct.std::__1::__compressed_pair_elem.2623" }
%"struct.std::__1::__compressed_pair_elem.2623" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::HeapHashSet.1332" = type { %"class.WTF::HashSet.1335" }
%"class.WTF::HashSet.1335" = type { %"class.WTF::HashTable.1336" }
%"class.WTF::HashTable.1336" = type <{ %"class.blink::WeakMember.1338"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1338" = type opaque
%"class.blink::Member.1339" = type { %"class.blink::MemberBase.1340" }
%"class.blink::MemberBase.1340" = type { %"class.blink::Event"* }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.1346", %"class.blink::Member.1346", %"class.blink::Member.1348", %"class.blink::Member.1350", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.1341" }
%"class.absl::optional.1341" = type { %"class.absl::optional_internal::optional_data.1342" }
%"class.absl::optional_internal::optional_data.1342" = type { %"class.absl::optional_internal::optional_data_base.1343" }
%"class.absl::optional_internal::optional_data_base.1343" = type { %"class.absl::optional_internal::optional_data_dtor_base.1344" }
%"class.absl::optional_internal::optional_data_dtor_base.1344" = type { i8, %union.anon.1345 }
%union.anon.1345 = type { i64 }
%"class.blink::Member.1346" = type { %"class.blink::MemberBase.1347" }
%"class.blink::MemberBase.1347" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.1348" = type { %"class.blink::MemberBase.1349" }
%"class.blink::MemberBase.1349" = type { %"class.blink::Event"* }
%"class.blink::Member.1350" = type { %"class.blink::MemberBase.1351" }
%"class.blink::MemberBase.1351" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::HeapHashMap.1352" = type { %"class.WTF::HashMap.1355" }
%"class.WTF::HashMap.1355" = type { %"class.WTF::HashTable.1356" }
%"class.WTF::HashTable.1356" = type <{ %"struct.WTF::KeyValuePair.1358"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1358" = type opaque
%"class.std::__1::unique_ptr.1359" = type { %"class.std::__1::__compressed_pair.1360" }
%"class.std::__1::__compressed_pair.1360" = type { %"struct.std::__1::__compressed_pair_elem.1361" }
%"struct.std::__1::__compressed_pair_elem.1361" = type { %"class.blink::FrameOrWorkerScheduler"* }
%"class.blink::Member.1365" = type { %"class.blink::MemberBase.1366" }
%"class.blink::MemberBase.1366" = type { %"class.blink::InputMethodController"* }
%"class.blink::InputMethodController" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.1369", %"class.blink::CachedTextInputInfo", %"class.blink::Member.1388", %"class.blink::Member.1390", i8, i32 }
%"class.blink::CachedTextInputInfo" = type { %"class.blink::Member.1371", %"class.blink::LayoutObject"*, %"class.blink::HeapHashMap.1381", %"class.WTF::String", %"class.blink::CachedTextInputInfo::CachedPlainTextRange", %"class.blink::CachedTextInputInfo::CachedPlainTextRange" }
%"class.blink::Member.1371" = type { %"class.blink::MemberBase.1372" }
%"class.blink::MemberBase.1372" = type { %"class.blink::ContainerNode"* }
%"class.blink::HeapHashMap.1381" = type { %"class.WTF::HashMap.1384" }
%"class.WTF::HashMap.1384" = type { %"class.WTF::HashTable.1385" }
%"class.WTF::HashTable.1385" = type <{ %"struct.WTF::KeyValuePair.1387"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1387" = type opaque
%"class.blink::CachedTextInputInfo::CachedPlainTextRange" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i32 }
%"class.blink::PositionTemplate" = type { %"class.blink::Member.1373", i32, i32 }
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::EditContext"* }
%"class.blink::EditContext" = type opaque
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::SpellChecker"* }
%"class.blink::SpellChecker" = type { %"class.blink::Member.1396", %"class.blink::Member.1398", %"class.blink::Member.1400" }
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::SpellCheckRequester"* }
%"class.blink::SpellCheckRequester" = type opaque
%"class.blink::Member.1400" = type { %"class.blink::MemberBase.1401" }
%"class.blink::MemberBase.1401" = type { %"class.blink::IdleSpellCheckController"* }
%"class.blink::IdleSpellCheckController" = type opaque
%"class.blink::Member.1402" = type { %"class.blink::MemberBase.1403" }
%"class.blink::MemberBase.1403" = type { %"class.blink::TextSuggestionController"* }
%"class.blink::TextSuggestionController" = type { i32 (...)**, i8, %"class.blink::Member.1396", %"class.blink::HeapMojoRemote.1406" }
%"class.blink::HeapMojoRemote.1406" = type { %"class.blink::Member.1407" }
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::HeapHashMap.1411"* }
%"class.blink::HeapHashMap.1411" = type opaque
%"class.WTF::Vector.1412" = type { %"class.WTF::VectorBuffer.1413" }
%"class.WTF::VectorBuffer.1413" = type { %"class.WTF::VectorBufferBase.1414" }
%"class.WTF::VectorBufferBase.1414" = type { i8*, i32, i32 }
%"class.util::TokenType" = type { %"class.base::StrongAlias.1136" }
%"class.base::StrongAlias.1136" = type { %"class.base::UnguessableToken" }
%"class.WTF::HashSet.1417" = type { %"class.WTF::HashTable.1418" }
%"class.WTF::HashTable.1418" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Deque.1421" = type { %"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.1424" }
%"class.WTF::VectorBuffer.1424" = type { %"class.WTF::VectorBufferBase.1425" }
%"class.WTF::VectorBufferBase.1425" = type { i64*, i32, i32 }
%"class.blink::LocalFrameClient" = type { %"class.blink::FrameClient" }
%"class.blink::Settings" = type <{ %"class.blink::SettingsDelegate"*, %"class.blink::GenericFontFamilySettings", double, i32, [4 x i8], double, i32, i32, i32, i32, i32, [4 x i8], %"class.WTF::String", %"class.WTF::String", double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.WTF::String", i32, i32, i32, [4 x i8], %"class.WTF::String", i32, i32, double, i32, i32, i32, i32, i32, %"class.blink::IntSize", [4 x i8], %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], double, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, i32, i32, [4 x i8], %"class.WTF::String", [14 x i8], [2 x i8] }>
%"class.blink::SettingsDelegate" = type { i32 (...)**, %"class.std::__1::unique_ptr.2505" }
%"class.std::__1::unique_ptr.2505" = type { %"class.std::__1::__compressed_pair.2506" }
%"class.std::__1::__compressed_pair.2506" = type { %"struct.std::__1::__compressed_pair_elem.2507" }
%"struct.std::__1::__compressed_pair_elem.2507" = type { %"class.blink::Settings"* }
%"struct.blink::GlobalScopeCreationParams" = type <{ %"class.blink::KURL", i32, [4 x i8], %"class.WTF::String", %"class.WTF::String", %"struct.blink::UserAgentMetadata", %class.scoped_refptr.741, %"class.WTF::Vector.554", i32, [4 x i8], %"class.std::__1::unique_ptr.2457", %class.scoped_refptr.475, i8, [3 x i8], i32, %"class.blink::CrossThreadPersistent.714", %"class.std::__1::unique_ptr.726", %"class.absl::optional.2463", %"class.base::UnguessableToken", %"class.std::__1::unique_ptr.2468", i32, [4 x i8], %"class.blink::CrossThreadPersistent.2486", %"class.mojo::PendingRemote.2488", %"struct.blink::BeginFrameProviderParams", %"class.std::__1::unique_ptr.476", %"class.base::UnguessableToken", i64, %"class.absl::optional.2489", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.2457" = type { %"class.std::__1::__compressed_pair.2458" }
%"class.std::__1::__compressed_pair.2458" = type { %"struct.std::__1::__compressed_pair_elem.2459" }
%"struct.std::__1::__compressed_pair_elem.2459" = type { %"class.WTF::Vector.578"* }
%"class.absl::optional.2463" = type { %"class.absl::optional_internal::optional_data.2464" }
%"class.absl::optional_internal::optional_data.2464" = type { %"class.absl::optional_internal::optional_data_base.2465" }
%"class.absl::optional_internal::optional_data_base.2465" = type { %"class.absl::optional_internal::optional_data_dtor_base.2466" }
%"class.absl::optional_internal::optional_data_dtor_base.2466" = type { i8, %union.anon.2467 }
%union.anon.2467 = type { i32 }
%"class.blink::CrossThreadPersistent.2486" = type { %"class.blink::PersistentBase.2487" }
%"class.blink::PersistentBase.2487" = type { %"class.blink::WorkletModuleResponsesMap"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.mojo::PendingRemote.2488" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.absl::optional.2489" = type { %"class.absl::optional_internal::optional_data.2490" }
%"class.absl::optional_internal::optional_data.2490" = type { %"class.absl::optional_internal::optional_data_base.2491" }
%"class.absl::optional_internal::optional_data_base.2491" = type { %"class.absl::optional_internal::optional_data_dtor_base.2492" }
%"class.absl::optional_internal::optional_data_dtor_base.2492" = type { i8, [7 x i8], %union.anon.2493 }
%union.anon.2493 = type { %"class.blink::MultiToken.2494" }
%"class.blink::FetchClientSettingsObjectSnapshot" = type { %"class.blink::FetchClientSettingsObject", %"class.blink::KURL", %"class.blink::KURL", %class.scoped_refptr.475, i32, %"class.WTF::String", i32, i32, i32, i32, %"class.WTF::HashSet.523" }
%"class.blink::FetchClientSettingsObject" = type { i32 (...)** }
%"class.blink::WorkerResourceTimingNotifier" = type { i32 (...)** }
%"class.blink::WorkletPendingTasks" = type { i32 (...)**, i32, %"class.blink::Member.2524", %"class.blink::Member.2590" }
%"class.blink::Member.2524" = type { %"class.blink::MemberBase.2525" }
%"class.blink::MemberBase.2525" = type { %"class.blink::ScriptPromiseResolver"* }
%"class.blink::ScriptPromiseResolver" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::ThreadState::PrefinalizerRegistration.2528", i32, %"class.blink::Member.2529", %"class.blink::TaskHandle", %"class.blink::ScriptPromise::InternalResolver", %"class.blink::TraceWrapperV8Reference.2584", %"class.blink::SelfKeepAlive.2587" }
%"class.blink::ThreadState::PrefinalizerRegistration.2528" = type { i8 }
%"class.blink::Member.2529" = type { %"class.blink::MemberBase.2530" }
%"class.blink::MemberBase.2530" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.2533, %"class.blink::Member.2534", %"class.blink::SelfKeepAlive.2579", %"class.util::TokenType.2582" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr.2533 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.2534" = type { %"class.blink::MemberBase.2535" }
%"class.blink::MemberBase.2535" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type { %"class.v8::Isolate"*, %"class.blink::HeapHashMap.2538", %"class.blink::HeapHashMap.2547", %"class.std::__1::unique_ptr.2557", %"class.blink::ScopedPersistent", %"class.blink::ScopedPersistent.2569", %"class.blink::V8DOMActivityLogger"*, %"class.blink::HeapHashMap.2572" }
%"class.blink::HeapHashMap.2538" = type { %"class.WTF::HashMap.2541" }
%"class.WTF::HashMap.2541" = type { %"class.WTF::HashTable.2542" }
%"class.WTF::HashTable.2542" = type <{ %"struct.WTF::KeyValuePair.2544"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2544" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference" }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Template" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::HeapHashMap.2547" = type { %"class.WTF::HashMap.2550" }
%"class.WTF::HashMap.2550" = type { %"class.WTF::HashTable.2551" }
%"class.WTF::HashTable.2551" = type <{ %"struct.WTF::KeyValuePair.2553"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2553" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference.2554" }
%"class.blink::TraceWrapperV8Reference.2554" = type { %"class.v8::TracedReference.2555" }
%"class.v8::TracedReference.2555" = type { %"class.v8::BasicTracedReference.2556" }
%"class.v8::BasicTracedReference.2556" = type { %"class.v8::TracedReferenceBase" }
%"class.std::__1::unique_ptr.2557" = type { %"class.std::__1::__compressed_pair.2558" }
%"class.std::__1::__compressed_pair.2558" = type { %"struct.std::__1::__compressed_pair_elem.2559" }
%"struct.std::__1::__compressed_pair_elem.2559" = type { %"class.gin::ContextHolder"* }
%"class.gin::ContextHolder" = type { %"class.v8::Isolate"*, %"class.v8::Global", %"class.std::__1::unique_ptr.2560" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.std::__1::unique_ptr.2560" = type { %"class.std::__1::__compressed_pair.2561" }
%"class.std::__1::__compressed_pair.2561" = type { %"struct.std::__1::__compressed_pair_elem.2562" }
%"struct.std::__1::__compressed_pair_elem.2562" = type { %"class.gin::PerContextData"* }
%"class.gin::PerContextData" = type opaque
%"class.blink::ScopedPersistent.2569" = type { %"class.v8::Persistent.2570" }
%"class.v8::Persistent.2570" = type { %"class.v8::PersistentBase.2571" }
%"class.v8::PersistentBase.2571" = type { %"class.v8::Private"* }
%"class.v8::Private" = type { i8 }
%"class.blink::V8DOMActivityLogger" = type opaque
%"class.blink::HeapHashMap.2572" = type { %"class.WTF::HashMap.2575" }
%"class.WTF::HashMap.2575" = type { %"class.WTF::HashTable.2576" }
%"class.WTF::HashTable.2576" = type <{ %"struct.WTF::KeyValuePair.2578"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2578" = type opaque
%"class.blink::SelfKeepAlive.2579" = type { %"class.blink::Persistent.2580" }
%"class.blink::Persistent.2580" = type { %"class.blink::PersistentBase.2581" }
%"class.blink::PersistentBase.2581" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType.2582" = type { %"class.base::StrongAlias.2583" }
%"class.base::StrongAlias.2583" = type { %"class.base::UnguessableToken" }
%"class.blink::ScriptPromise::InternalResolver" = type { %"class.blink::Member.2529", %"class.blink::ScriptValue" }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.2584", %class.scoped_refptr.1008 }
%"class.blink::TraceWrapperV8Reference.2584" = type { %"class.v8::TracedReference.2585" }
%"class.v8::TracedReference.2585" = type { %"class.v8::BasicTracedReference.2586" }
%"class.v8::BasicTracedReference.2586" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::SelfKeepAlive.2587" = type { %"class.blink::Persistent.2588" }
%"class.blink::Persistent.2588" = type { %"class.blink::PersistentBase.2589" }
%"class.blink::PersistentBase.2589" = type { %"class.blink::ScriptPromiseResolver"*, %"class.blink::PersistentNodePtr" }
%"class.blink::Member.2590" = type { %"class.blink::MemberBase.2591" }
%"class.blink::MemberBase.2591" = type { %"class.blink::Worklet"* }
%"class.blink::Worklet" = type opaque
%"class.WTF::CrossThreadOnceFunction" = type { %"class.base::OnceCallback.615" }
%"class.WTF::CrossThreadUnretainedWrapper" = type { %"class.blink::ThreadedWorkletObjectProxy"* }
%"class.std::__1::unique_ptr.2592" = type { %"class.std::__1::__compressed_pair.2593" }
%"class.std::__1::__compressed_pair.2593" = type { %"struct.std::__1::__compressed_pair_elem.2594" }
%"struct.std::__1::__compressed_pair_elem.2594" = type { %"struct.blink::CrossThreadFetchClientSettingsObjectData"* }
%"struct.blink::CrossThreadFetchClientSettingsObjectData" = type { %"class.blink::KURL", %"class.blink::KURL", %class.scoped_refptr.475, i32, %"class.WTF::String", i32, i32, i32, i32, %"class.WTF::HashSet.523" }
%"class.blink::CrossThreadPersistent.2598" = type { %"class.blink::PersistentBase.2599" }
%"class.blink::PersistentBase.2599" = type { %"class.blink::WorkerResourceTimingNotifier"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::CrossThreadPersistent.2600" = type { %"class.blink::PersistentBase.2601" }
%"class.blink::PersistentBase.2601" = type { %"class.blink::WorkletPendingTasks"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.WTF::CrossThreadUnretainedWrapper.2602" = type { %"class.blink::WorkerThread"* }
%"class.blink::CrossThreadPersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.2767", %"class.std::__1::__tuple_leaf.2768", %"class.std::__1::__tuple_leaf.2769", %"class.std::__1::__tuple_leaf.2770", %"class.std::__1::__tuple_leaf.2771", %"class.std::__1::__tuple_leaf.2772", %"class.std::__1::__tuple_leaf.2773" }
%"class.std::__1::__tuple_leaf" = type { %"class.WTF::CrossThreadUnretainedWrapper" }
%"class.std::__1::__tuple_leaf.2767" = type { %"class.blink::KURL" }
%"class.std::__1::__tuple_leaf.2768" = type { i32 }
%"class.std::__1::__tuple_leaf.2769" = type { %"class.std::__1::unique_ptr.2592" }
%"class.std::__1::__tuple_leaf.2770" = type { %"class.blink::CrossThreadPersistent.2598" }
%"class.std::__1::__tuple_leaf.2771" = type { %class.scoped_refptr.400 }
%"class.std::__1::__tuple_leaf.2772" = type { %"class.blink::CrossThreadPersistent.2600" }
%"class.std::__1::__tuple_leaf.2773" = type { %"class.WTF::CrossThreadUnretainedWrapper.2602" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZNSt3__111make_uniqueIN5blink25GlobalScopeCreationParamsEJRKNS1_4KURLENS1_5mojom10ScriptTypeERKN3WTF6StringES9_N4absl8optionalINS1_17UserAgentMetadataEEE13scoped_refptrINS1_21WebWorkerFetchContextEENS8_6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS8_18PartitionAllocatorEEENSN_14ReferrerPolicyEPKNS1_14SecurityOriginEbNS1_10HttpsStateERPNS1_13WorkerClientsENS_10unique_ptrINS1_24WebContentSettingsClientENS_14default_deleteIS12_EEEENSN_14IPAddressSpaceEPNSJ_IS9_Lj0ESR_EEN4base16UnguessableTokenENS11_INS1_14WorkerSettingsENS13_IS1B_EEEENS6_14V8CacheOptionsERPNS1_25WorkletModuleResponsesMapENSK_10NullRemoteENS1_24BeginFrameProviderParamsEDnRKS1A_RKlNS1_10MultiTokenIN4util9TokenTypeINS1_25LocalFrameTokenTypeMarkerEEENS1Q_INS1_30DedicatedWorkerTokenTypeMarkerEEEJNS1Q_INS1_28ServiceWorkerTokenTypeMarkerEEENS1Q_INS1_27SharedWorkerTokenTypeMarkerEEENS1Q_INS1_31AnimationWorkletTokenTypeMarkerEEENS1Q_INS1_27AudioWorkletTokenTypeMarkerEEENS1Q_INS1_28LayoutWorkletTokenTypeMarkerEEENS1Q_INS1_27PaintWorkletTokenTypeMarkerEEEEEEbbEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZN3WTF19CrossThreadBindOnceIMN5blink26ThreadedWorkletObjectProxyEFvRKNS1_4KURLEN7network5mojom15CredentialsModeENSt3__110unique_ptrINS1_40CrossThreadFetchClientSettingsObjectDataENS9_14default_deleteISB_EEEEPNS1_28WorkerResourceTimingNotifierE13scoped_refptrIN4base22SingleThreadTaskRunnerEEPNS1_19WorkletPendingTasksEPNS1_12WorkerThreadEEJNS_28CrossThreadUnretainedWrapperIS2_EES5_RS8_SE_NS1_21CrossThreadPersistentISF_EESK_NSU_ISL_EENSR_ISN_EEEEEDaOT_DpOT0_ = comdat any

$_ZNK5blink33FetchClientSettingsObjectSnapshot8CopyDataEv = comdat any

$_ZN5blink29ThreadedWorkletMessagingProxyD2Ev = comdat any

$_ZN5blink29ThreadedWorkletMessagingProxyD0Ev = comdat any

$_ZThn104_N5blink29ThreadedWorkletMessagingProxyD1Ev = comdat any

$_ZThn104_N5blink29ThreadedWorkletMessagingProxyD0Ev = comdat any

$_ZN5blink17UserAgentMetadataD2Ev = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink26ThreadedWorkletObjectProxyEFvRKNS3_4KURLEN7network5mojom15CredentialsModeENSt3__110unique_ptrINS3_40CrossThreadFetchClientSettingsObjectDataENSB_14default_deleteISD_EEEEPNS3_28WorkerResourceTimingNotifierE13scoped_refptrINS_22SingleThreadTaskRunnerEEPNS3_19WorkletPendingTasksEPNS3_12WorkerThreadEEJN3WTF28CrossThreadUnretainedWrapperIS4_EES5_SA_SG_NS3_21CrossThreadPersistentISH_EESL_NSV_ISM_EENST_ISO_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink26ThreadedWorkletObjectProxyEFvRKNS2_4KURLEN7network5mojom15CredentialsModeENSt3__110unique_ptrINS2_40CrossThreadFetchClientSettingsObjectDataENSA_14default_deleteISC_EEEEPNS2_28WorkerResourceTimingNotifierE13scoped_refptrINS_22SingleThreadTaskRunnerEEPNS2_19WorkletPendingTasksEPNS2_12WorkerThreadEEJN3WTF28CrossThreadUnretainedWrapperIS3_EES4_S9_SF_NS2_21CrossThreadPersistentISG_EESK_NSU_ISL_EENSS_ISN_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1ELm2ELm3ELm4ELm5ELm6ELm7EEEEJN3WTF28CrossThreadUnretainedWrapperIN5blink26ThreadedWorkletObjectProxyEEENS5_4KURLEN7network5mojom15CredentialsModeENS_10unique_ptrINS5_40CrossThreadFetchClientSettingsObjectDataENS_14default_deleteISD_EEEENS5_21CrossThreadPersistentINS5_28WorkerResourceTimingNotifierEEE13scoped_refptrIN4base22SingleThreadTaskRunnerEENSH_INS5_19WorkletPendingTasksEEENS4_INS5_12WorkerThreadEEEEED2Ev = comdat any

$_ZN5blink14PersistentBaseINS_28WorkerResourceTimingNotifierELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_ = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_28WorkerResourceTimingNotifierELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink10TraceTraitINS_28WorkerResourceTimingNotifierEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink14PersistentBaseINS_19WorkletPendingTasksELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_ = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_19WorkletPendingTasksELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink10TraceTraitINS_19WorkletPendingTasksEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZNSt3__111make_uniqueIN5blink40CrossThreadFetchClientSettingsObjectDataEJNS1_4KURLES3_13scoped_refptrINS1_14SecurityOriginEERKN7network5mojom14ReferrerPolicyEN3WTF6StringERKNS1_10HttpsStateERKNS1_16AllowedByNosniff13MimeTypeCheckERKNS8_14IPAddressSpaceERKNS1_5mojom21InsecureRequestPolicyERKNSC_7HashSetIjNSC_13AlreadyHashedENSC_10HashTraitsIjEENSC_18PartitionAllocatorEEEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE8RehashToEPjjS7_ = comdat any

$_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS2_S4_S5_EERKjSB_EENS_18HashTableAddResultIS6_jEEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE6ExpandEPj = comdat any

$_ZN5blink14SecurityOriginD2Ev = comdat any

$_ZN4mojo11CloneTraitsIN3WTF6VectorINS_9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKSA_ = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEmm = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZNK7network5mojom5blink21ContentSecurityPolicy5CloneIN4mojo9StructPtrIS2_EEEES6_v = comdat any

$_ZN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEC2IJNS0_INS3_9CSPSourceEEEN3WTF7HashMapINS2_16CSPDirectiveNameENS9_6StringENS9_7IntHashISB_EENS9_10HashTraitsISB_EENSF_ISC_EENS9_18PartitionAllocatorEEENSA_ISB_NS0_INS3_13CSPSourceListEEESE_SG_NSF_ISL_EESI_EEbbbNS2_15WebSandboxFlagsENS_16InlinedStructPtrINS3_27ContentSecurityPolicyHeaderEEEbNS9_6VectorISC_Lj0ESI_EENS2_25CSPRequireTrustedTypesForENS0_INS3_15CSPTrustedTypesEEEST_EEEN4base10in_place_tEDpOT_ = comdat any

$_ZNSt3__14swapIN7network5mojom5blink27ContentSecurityPolicyHeaderEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS6_EE5valueEvE4typeERS6_S9_ = comdat any

$_ZNK7network5mojom5blink9CSPSource5CloneIN4mojo9StructPtrIS2_EEEES6_v = comdat any

$_ZN4mojo11CloneTraitsIN3WTF7HashMapIN7network5mojom16CSPDirectiveNameENS1_6StringENS1_7IntHashIS5_EENS1_10HashTraitsIS5_EENS9_IS6_EENS1_18PartitionAllocatorEEELb0EE5CloneERKSD_ = comdat any

$_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EES3_S5_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_ = comdat any

$_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_ = comdat any

$_ZN4mojo11CloneTraitsIN3WTF7HashMapIN7network5mojom16CSPDirectiveNameENS_9StructPtrINS4_5blink13CSPSourceListEEENS1_7IntHashIS5_EENS1_10HashTraitsIS5_EENSC_IS9_EENS1_18PartitionAllocatorEEELb0EE5CloneERKSG_ = comdat any

$_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISI_SD_SJ_EES3_S9_EENS_18HashTableAddResultISK_SA_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6ExpandEPSA_ = comdat any

$_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE8RehashToEPSA_jSL_ = comdat any

$_ZNK7network5mojom5blink13CSPSourceList5CloneIN4mojo9StructPtrIS2_EEEES6_v = comdat any

$_ZN4mojo9StructPtrIN7network5mojom5blink13CSPSourceListEEC2IJN3WTF6VectorINS0_INS3_9CSPSourceEEELj0ENS7_18PartitionAllocatorEEENS8_INS7_6StringELj0ESB_EENS8_INS0_INS3_13CSPHashSourceEEELj0ESB_EEbbbbbbbbbEEEN4base10in_place_tEDpOT_ = comdat any

$_ZN4mojo11CloneTraitsIN3WTF6VectorINS_9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKSA_ = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEmm = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZN4mojo11CloneTraitsIN3WTF6VectorINS_9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKSA_ = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEmm = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZNK7network5mojom5blink13CSPHashSource5CloneIN4mojo9StructPtrIS2_EEEES6_v = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIhEEvOT_ = comdat any

$_ZN4mojo11CloneTraitsIN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKS5_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_ = comdat any

$_ZNK7network5mojom5blink15CSPTrustedTypes5CloneIN4mojo9StructPtrIS2_EEEES6_v = comdat any

$_ZN4mojo9StructPtrIN7network5mojom5blink15CSPTrustedTypesEEC2IJN3WTF6VectorINS7_6StringELj0ENS7_18PartitionAllocatorEEEbbEEEN4base10in_place_tEDpOT_ = comdat any

$_ZN5blink25GenericFontFamilySettingsD2Ev = comdat any

@_ZTVN5blink29ThreadedWorkletMessagingProxyE = hidden unnamed_addr constant { [10 x i8*], [8 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::ThreadedWorkletMessagingProxy"*)* @_ZN5blink29ThreadedWorkletMessagingProxyD2Ev to i8*), i8* bitcast (void (%"class.blink::ThreadedWorkletMessagingProxy"*)* @_ZN5blink29ThreadedWorkletMessagingProxyD0Ev to i8*), i8* bitcast (void (%"class.blink::ThreadedWorkletMessagingProxy"*, %"class.blink::Visitor"*)* @_ZNK5blink29ThreadedWorkletMessagingProxy5TraceEPNS_7VisitorE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.blink::ThreadedWorkletMessagingProxy"*, %"class.blink::KURL"*, i32, %"class.blink::FetchClientSettingsObjectSnapshot"*, %"class.blink::WorkerResourceTimingNotifier"*, %"class.base::SingleThreadTaskRunner"*, %"class.blink::WorkletPendingTasks"*)* @_ZN5blink29ThreadedWorkletMessagingProxy20FetchAndInvokeScriptERKNS_4KURLEN7network5mojom15CredentialsModeERKNS_33FetchClientSettingsObjectSnapshotERNS_28WorkerResourceTimingNotifierE13scoped_refptrIN4base22SingleThreadTaskRunnerEEPNS_19WorkletPendingTasksE to i8*), i8* bitcast (void (%"class.blink::ThreadedWorkletMessagingProxy"*)* @_ZN5blink29ThreadedWorkletMessagingProxy22WorkletObjectDestroyedEv to i8*), i8* bitcast (void (%"class.blink::ThreadedWorkletMessagingProxy"*)* @_ZN5blink29ThreadedWorkletMessagingProxy27TerminateWorkletGlobalScopeEv to i8*), i8* bitcast (%"class.blink::ThreadedWorkletObjectProxy"* (%"class.blink::ThreadedWorkletMessagingProxy"*, %"class.blink::ThreadedWorkletMessagingProxy"*, %"class.blink::ParentExecutionContextTaskRunners"*)* @_ZN5blink29ThreadedWorkletMessagingProxy17CreateObjectProxyEPS0_PNS_33ParentExecutionContextTaskRunnersE to i8*)], [8 x i8*] [i8* inttoptr (i64 -104 to i8*), i8* null, i8* bitcast (void (%"class.blink::ThreadedWorkletMessagingProxy"*, %"class.blink::Visitor"*)* @_ZThn104_NK5blink29ThreadedWorkletMessagingProxy5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::ThreadedWorkletMessagingProxy"*)* @_ZThn104_N5blink29ThreadedWorkletMessagingProxyD1Ev to i8*), i8* bitcast (void (%"class.blink::ThreadedWorkletMessagingProxy"*)* @_ZThn104_N5blink29ThreadedWorkletMessagingProxyD0Ev to i8*), i8* bitcast (void (%"class.blink::ThreadedWorkletMessagingProxy"*, %"class.blink::KURL"*, i32, %"class.blink::FetchClientSettingsObjectSnapshot"*, %"class.blink::WorkerResourceTimingNotifier"*, %"class.base::SingleThreadTaskRunner"*, %"class.blink::WorkletPendingTasks"*)* @_ZThn104_N5blink29ThreadedWorkletMessagingProxy20FetchAndInvokeScriptERKNS_4KURLEN7network5mojom15CredentialsModeERKNS_33FetchClientSettingsObjectSnapshotERNS_28WorkerResourceTimingNotifierE13scoped_refptrIN4base22SingleThreadTaskRunnerEEPNS_19WorkletPendingTasksE to i8*), i8* bitcast (void (%"class.blink::ThreadedWorkletMessagingProxy"*)* @_ZThn104_N5blink29ThreadedWorkletMessagingProxy22WorkletObjectDestroyedEv to i8*), i8* bitcast (void (%"class.blink::ThreadedWorkletMessagingProxy"*)* @_ZThn104_N5blink29ThreadedWorkletMessagingProxy27TerminateWorkletGlobalScopeEv to i8*)] }, align 8
@_ZN3WTF14g_empty_stringE = external local_unnamed_addr constant %"class.WTF::String"*, align 8
@_ZN3ukmL16kInvalidSourceIdE = internal constant i64 0, align 8
@.str = private unnamed_addr constant [21 x i8] c"FetchAndInvokeScript\00", align 1
@.str.1 = private unnamed_addr constant [82 x i8] c"../../third_party/blink/renderer/core/workers/threaded_worklet_messaging_proxy.cc\00", align 1
@.str.2 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.3 = private unnamed_addr constant [39 x i8] c"!static_cast<int>( new_capacity >> 31)\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv = private unnamed_addr constant [60 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned int]\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.7 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.8 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEPKcv = private unnamed_addr constant [109 x i8] c"const char *WTF::GetStringWithTypeName() [T = mojo::StructPtr<network::mojom::blink::ContentSecurityPolicy>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN7network5mojom16CSPDirectiveNameENS_6StringEEEEEPKcv = private unnamed_addr constant [112 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<network::mojom::CSPDirectiveName, WTF::String>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN7network5mojom16CSPDirectiveNameEN4mojo9StructPtrINS3_5blink13CSPSourceListEEEEEEEPKcv = private unnamed_addr constant [155 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<network::mojom::CSPDirectiveName, mojo::StructPtr<network::mojom::blink::CSPSourceList> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEPKcv = private unnamed_addr constant [97 x i8] c"const char *WTF::GetStringWithTypeName() [T = mojo::StructPtr<network::mojom::blink::CSPSource>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEPKcv = private unnamed_addr constant [101 x i8] c"const char *WTF::GetStringWithTypeName() [T = mojo::StructPtr<network::mojom::blink::CSPHashSource>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29ThreadedWorkletMessagingProxyC2EPNS_16ExecutionContextE(%"class.blink::ThreadedWorkletMessagingProxy"*, %"class.blink::ExecutionContext"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ThreadedWorkletMessagingProxy", %"class.blink::ThreadedWorkletMessagingProxy"* %0, i64 0, i32 0
  tail call void @_ZN5blink26ThreadedMessagingProxyBaseC2EPNS_16ExecutionContextE(%"class.blink::ThreadedMessagingProxyBase"* %3, %"class.blink::ExecutionContext"* %1) #12
  %4 = getelementptr inbounds %"class.blink::ThreadedWorkletMessagingProxy", %"class.blink::ThreadedWorkletMessagingProxy"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::ThreadedWorkletMessagingProxy", %"class.blink::ThreadedWorkletMessagingProxy"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*], [8 x i8*] }, { [10 x i8*], [8 x i8*] }* @_ZTVN5blink29ThreadedWorkletMessagingProxyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*], [8 x i8*] }, { [10 x i8*], [8 x i8*] }* @_ZTVN5blink29ThreadedWorkletMessagingProxyE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ThreadedWorkletMessagingProxy", %"class.blink::ThreadedWorkletMessagingProxy"* %0, i64 0, i32 2
  %7 = bitcast %"class.std::__1::unique_ptr.777"* %6 to i64*
  store i64 0, i64* %7, align 8
  ret void
}

declare void @_ZN5blink26ThreadedMessagingProxyBaseC2EPNS_16ExecutionContextE(%"class.blink::ThreadedMessagingProxyBase"*, %"class.blink::ExecutionContext"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29ThreadedWorkletMessagingProxy10InitializeEPNS_13WorkerClientsEPNS_25WorkletModuleResponsesMapERKN4absl8optionalINS_30WorkerBackingThreadStartupDataEEE(%"class.blink::ThreadedWorkletMessagingProxy"*, %"class.blink::WorkerClients"*, %"class.blink::WorkletModuleResponsesMap"*, %"class.absl::optional.1120"* dereferenceable(12)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::WorkerClients"*, align 8
  %6 = alloca %"class.blink::WorkletModuleResponsesMap"*, align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca i32, align 4
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.absl::optional.2500", align 8
  %11 = alloca %class.scoped_refptr.741, align 8
  %12 = alloca %"class.WTF::Vector.554", align 8
  %13 = alloca i32, align 4
  %14 = alloca %"class.blink::SecurityOrigin"*, align 8
  %15 = alloca i8, align 1
  %16 = alloca i32, align 4
  %17 = alloca %"class.std::__1::unique_ptr.726", align 8
  %18 = alloca i32, align 4
  %19 = alloca %"class.WTF::Vector.578"*, align 8
  %20 = alloca %"class.base::UnguessableToken", align 8
  %21 = alloca %"class.std::__1::unique_ptr.2468", align 8
  %22 = alloca i32, align 4
  %23 = alloca %"class.mojo::NullRemote", align 1
  %24 = alloca %"struct.blink::BeginFrameProviderParams", align 4
  %25 = alloca i8*, align 8
  %26 = alloca %"class.blink::MultiToken.2494", align 8
  %27 = alloca i8, align 1
  %28 = alloca i8, align 1
  %29 = alloca %"class.absl::optional.2511", align 8
  store %"class.blink::WorkerClients"* %1, %"class.blink::WorkerClients"** %5, align 8
  store %"class.blink::WorkletModuleResponsesMap"* %2, %"class.blink::WorkletModuleResponsesMap"** %6, align 8
  %30 = getelementptr inbounds %"class.blink::ThreadedWorkletMessagingProxy", %"class.blink::ThreadedWorkletMessagingProxy"* %0, i64 0, i32 0
  %31 = getelementptr inbounds %"class.blink::ThreadedWorkletMessagingProxy", %"class.blink::ThreadedWorkletMessagingProxy"* %0, i64 0, i32 0, i32 4
  %32 = load i8, i8* %31, align 8, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %301

34:                                               ; preds = %4
  %35 = tail call %"class.blink::ParentExecutionContextTaskRunners"* @_ZNK5blink26ThreadedMessagingProxyBase36GetParentExecutionContextTaskRunnersEv(%"class.blink::ThreadedMessagingProxyBase"* %30) #12
  %36 = bitcast %"class.blink::ThreadedWorkletMessagingProxy"* %0 to %"class.blink::ThreadedWorkletObjectProxy"* (%"class.blink::ThreadedWorkletMessagingProxy"*, %"class.blink::ThreadedWorkletMessagingProxy"*, %"class.blink::ParentExecutionContextTaskRunners"*)***
  %37 = load %"class.blink::ThreadedWorkletObjectProxy"* (%"class.blink::ThreadedWorkletMessagingProxy"*, %"class.blink::ThreadedWorkletMessagingProxy"*, %"class.blink::ParentExecutionContextTaskRunners"*)**, %"class.blink::ThreadedWorkletObjectProxy"* (%"class.blink::ThreadedWorkletMessagingProxy"*, %"class.blink::ThreadedWorkletMessagingProxy"*, %"class.blink::ParentExecutionContextTaskRunners"*)*** %36, align 8
  %38 = getelementptr inbounds %"class.blink::ThreadedWorkletObjectProxy"* (%"class.blink::ThreadedWorkletMessagingProxy"*, %"class.blink::ThreadedWorkletMessagingProxy"*, %"class.blink::ParentExecutionContextTaskRunners"*)*, %"class.blink::ThreadedWorkletObjectProxy"* (%"class.blink::ThreadedWorkletMessagingProxy"*, %"class.blink::ThreadedWorkletMessagingProxy"*, %"class.blink::ParentExecutionContextTaskRunners"*)** %37, i64 7
  %39 = load %"class.blink::ThreadedWorkletObjectProxy"* (%"class.blink::ThreadedWorkletMessagingProxy"*, %"class.blink::ThreadedWorkletMessagingProxy"*, %"class.blink::ParentExecutionContextTaskRunners"*)*, %"class.blink::ThreadedWorkletObjectProxy"* (%"class.blink::ThreadedWorkletMessagingProxy"*, %"class.blink::ThreadedWorkletMessagingProxy"*, %"class.blink::ParentExecutionContextTaskRunners"*)** %38, align 8
  %40 = tail call %"class.blink::ThreadedWorkletObjectProxy"* %39(%"class.blink::ThreadedWorkletMessagingProxy"* %0, %"class.blink::ThreadedWorkletMessagingProxy"* %0, %"class.blink::ParentExecutionContextTaskRunners"* %35) #12
  %41 = ptrtoint %"class.blink::ThreadedWorkletObjectProxy"* %40 to i64
  %42 = getelementptr inbounds %"class.blink::ThreadedWorkletMessagingProxy", %"class.blink::ThreadedWorkletMessagingProxy"* %0, i64 0, i32 2
  %43 = getelementptr inbounds %"class.std::__1::unique_ptr.777", %"class.std::__1::unique_ptr.777"* %42, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.blink::ThreadedWorkletObjectProxy"*, %"class.blink::ThreadedWorkletObjectProxy"** %43, align 8
  %45 = bitcast %"class.std::__1::unique_ptr.777"* %42 to i64*
  store i64 %41, i64* %45, align 8
  %46 = icmp eq %"class.blink::ThreadedWorkletObjectProxy"* %44, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %34
  %48 = bitcast %"class.blink::ThreadedWorkletObjectProxy"* %44 to void (%"class.blink::ThreadedWorkletObjectProxy"*)***
  %49 = load void (%"class.blink::ThreadedWorkletObjectProxy"*)**, void (%"class.blink::ThreadedWorkletObjectProxy"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.blink::ThreadedWorkletObjectProxy"*)*, void (%"class.blink::ThreadedWorkletObjectProxy"*)** %49, i64 1
  %51 = load void (%"class.blink::ThreadedWorkletObjectProxy"*)*, void (%"class.blink::ThreadedWorkletObjectProxy"*)** %50, align 8
  tail call void %51(%"class.blink::ThreadedWorkletObjectProxy"* nonnull %44) #12
  br label %52

52:                                               ; preds = %47, %34
  %53 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #12
  %54 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %54, align 8
  %55 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %56 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %55, i64 0, i32 0, i32 0
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  store %"class.WTF::StringImpl"* %57, %"class.WTF::StringImpl"** %54, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %76, label %59

59:                                               ; preds = %52
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %76

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = zext i32 %66 to i33
  %68 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %67, i33 1) #12
  %69 = extractvalue { i33, i1 } %68, 1
  %70 = extractvalue { i33, i1 } %68, 0
  %71 = icmp slt i33 %70, 0
  %72 = or i1 %69, %71
  br i1 %72, label %73, label %74, !prof !3

73:                                               ; preds = %64
  tail call void @llvm.trap() #12
  unreachable

74:                                               ; preds = %64
  %75 = trunc i33 %70 to i32
  store i32 %75, i32* %65, align 4
  br label %76

76:                                               ; preds = %52, %59, %74
  %77 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink26ThreadedMessagingProxyBase19GetExecutionContextEv(%"class.blink::ThreadedMessagingProxyBase"* %30) #12
  %78 = icmp eq %"class.blink::ExecutionContext"* %77, null
  %79 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %77, i64 -1, i32 8
  %80 = bitcast i32* %79 to %"class.blink::LocalDOMWindow"*
  %81 = select i1 %78, %"class.blink::LocalDOMWindow"* null, %"class.blink::LocalDOMWindow"* %80
  %82 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %81, i64 0, i32 1
  %83 = bitcast %"class.blink::ExecutionContext.base"* %82 to %"class.blink::ExecutionContext"*
  %84 = tail call %"class.blink::ContentSecurityPolicy"* @_ZNK5blink16ExecutionContext24GetContentSecurityPolicyEv(%"class.blink::ExecutionContext"* %83) #12
  %85 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink14LocalDOMWindow3UrlEv(%"class.blink::LocalDOMWindow"* %81) #12
  %86 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %86) #12
  store i32 1, i32* %8, align 4
  %87 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87) #12
  %88 = tail call %"class.WTF::StringImpl"* @_ZNK5blink14LocalDOMWindow9UserAgentEv(%"class.blink::LocalDOMWindow"* %81) #12
  %89 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %88, %"class.WTF::StringImpl"** %89, align 8
  %90 = getelementptr inbounds %"class.absl::optional.2500", %"class.absl::optional.2500"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %90) #12
  %91 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %81, i64 0, i32 0, i32 1, i32 0, i32 0
  %92 = bitcast %"class.blink::Frame"** %91 to %"class.blink::LocalFrame"**
  %93 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %92, align 8
  %94 = tail call %"class.blink::LocalFrameClient"* @_ZNK5blink10LocalFrame6ClientEv(%"class.blink::LocalFrame"* %93) #12
  %95 = bitcast %"class.blink::LocalFrameClient"* %94 to void (%"class.absl::optional.2500"*, %"class.blink::LocalFrameClient"*)***
  %96 = load void (%"class.absl::optional.2500"*, %"class.blink::LocalFrameClient"*)**, void (%"class.absl::optional.2500"*, %"class.blink::LocalFrameClient"*)*** %95, align 8
  %97 = getelementptr inbounds void (%"class.absl::optional.2500"*, %"class.blink::LocalFrameClient"*)*, void (%"class.absl::optional.2500"*, %"class.blink::LocalFrameClient"*)** %96, i64 41
  %98 = load void (%"class.absl::optional.2500"*, %"class.blink::LocalFrameClient"*)*, void (%"class.absl::optional.2500"*, %"class.blink::LocalFrameClient"*)** %97, align 8
  call void %98(%"class.absl::optional.2500"* nonnull sret %10, %"class.blink::LocalFrameClient"* %94) #12
  %99 = bitcast %class.scoped_refptr.741* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %99) #12
  %100 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %92, align 8
  %101 = call %"class.blink::LocalFrameClient"* @_ZNK5blink10LocalFrame6ClientEv(%"class.blink::LocalFrame"* %100) #12
  %102 = bitcast %"class.blink::LocalFrameClient"* %101 to %"class.blink::WebWorkerFetchContext"* (%"class.blink::LocalFrameClient"*)***
  %103 = load %"class.blink::WebWorkerFetchContext"* (%"class.blink::LocalFrameClient"*)**, %"class.blink::WebWorkerFetchContext"* (%"class.blink::LocalFrameClient"*)*** %102, align 8
  %104 = getelementptr inbounds %"class.blink::WebWorkerFetchContext"* (%"class.blink::LocalFrameClient"*)*, %"class.blink::WebWorkerFetchContext"* (%"class.blink::LocalFrameClient"*)** %103, i64 88
  %105 = load %"class.blink::WebWorkerFetchContext"* (%"class.blink::LocalFrameClient"*)*, %"class.blink::WebWorkerFetchContext"* (%"class.blink::LocalFrameClient"*)** %104, align 8
  %106 = call %"class.blink::WebWorkerFetchContext"* %105(%"class.blink::LocalFrameClient"* %101) #12
  %107 = getelementptr inbounds %class.scoped_refptr.741, %class.scoped_refptr.741* %11, i64 0, i32 0
  store %"class.blink::WebWorkerFetchContext"* %106, %"class.blink::WebWorkerFetchContext"** %107, align 8
  %108 = bitcast %"class.WTF::Vector.554"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %108) #12
  %109 = call dereferenceable(16) %"class.WTF::Vector.554"* @_ZNK5blink21ContentSecurityPolicy17GetParsedPoliciesEv(%"class.blink::ContentSecurityPolicy"* %84) #12
  call void @_ZN4mojo11CloneTraitsIN3WTF6VectorINS_9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKSA_(%"class.WTF::Vector.554"* nonnull sret %12, %"class.WTF::Vector.554"* dereferenceable(16) %109) #12
  %110 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %110) #12
  %111 = call i32 @_ZNK5blink16ExecutionContext17GetReferrerPolicyEv(%"class.blink::ExecutionContext"* %83) #12
  store i32 %111, i32* %13, align 4
  %112 = bitcast %"class.blink::SecurityOrigin"** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %112) #12
  %113 = call %"class.blink::SecurityOrigin"* @_ZNK5blink16ExecutionContext17GetSecurityOriginEv(%"class.blink::ExecutionContext"* %83) #12
  store %"class.blink::SecurityOrigin"* %113, %"class.blink::SecurityOrigin"** %14, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %15) #12
  %114 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %81, i64 0, i32 1, i32 6, i32 11
  %115 = load i32, i32* %114, align 8
  %116 = icmp eq i32 %115, 1
  %117 = zext i1 %116 to i8
  store i8 %117, i8* %15, align 1
  %118 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %118) #12
  %119 = call i32 @_ZNK5blink14LocalDOMWindow13GetHttpsStateEv(%"class.blink::LocalDOMWindow"* %81) #12
  store i32 %119, i32* %16, align 4
  %120 = bitcast %"class.std::__1::unique_ptr.726"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %120) #12
  %121 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %92, align 8
  %122 = call %"class.blink::LocalFrameClient"* @_ZNK5blink10LocalFrame6ClientEv(%"class.blink::LocalFrame"* %121) #12
  %123 = bitcast %"class.blink::LocalFrameClient"* %122 to %"class.blink::WebContentSettingsClient"* (%"class.blink::LocalFrameClient"*)***
  %124 = load %"class.blink::WebContentSettingsClient"* (%"class.blink::LocalFrameClient"*)**, %"class.blink::WebContentSettingsClient"* (%"class.blink::LocalFrameClient"*)*** %123, align 8
  %125 = getelementptr inbounds %"class.blink::WebContentSettingsClient"* (%"class.blink::LocalFrameClient"*)*, %"class.blink::WebContentSettingsClient"* (%"class.blink::LocalFrameClient"*)** %124, i64 90
  %126 = load %"class.blink::WebContentSettingsClient"* (%"class.blink::LocalFrameClient"*)*, %"class.blink::WebContentSettingsClient"* (%"class.blink::LocalFrameClient"*)** %125, align 8
  %127 = call %"class.blink::WebContentSettingsClient"* %126(%"class.blink::LocalFrameClient"* %122) #12
  %128 = getelementptr inbounds %"class.std::__1::unique_ptr.726", %"class.std::__1::unique_ptr.726"* %17, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::WebContentSettingsClient"* %127, %"class.blink::WebContentSettingsClient"** %128, align 8
  %129 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %129) #12
  %130 = call i32 @_ZNK5blink16ExecutionContext12AddressSpaceEv(%"class.blink::ExecutionContext"* %83) #12
  store i32 %130, i32* %18, align 4
  %131 = bitcast %"class.WTF::Vector.578"** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %131) #12
  %132 = icmp eq %"class.blink::LocalDOMWindow"* %81, null
  %133 = select i1 %132, %"class.blink::ExecutionContext"* null, %"class.blink::ExecutionContext"* %83
  %134 = call %"class.WTF::Vector.578"* @_ZN5blink18OriginTrialContext9GetTokensEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* %133) #12
  store %"class.WTF::Vector.578"* %134, %"class.WTF::Vector.578"** %19, align 8
  %135 = bitcast %"class.base::UnguessableToken"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %135) #12
  %136 = call { i64, i64 } @_ZN4base16UnguessableToken6CreateEv() #12
  %137 = getelementptr inbounds %"class.base::UnguessableToken", %"class.base::UnguessableToken"* %20, i64 0, i32 0, i32 0
  %138 = extractvalue { i64, i64 } %136, 0
  store i64 %138, i64* %137, align 8
  %139 = getelementptr inbounds %"class.base::UnguessableToken", %"class.base::UnguessableToken"* %20, i64 0, i32 0, i32 1
  %140 = extractvalue { i64, i64 } %136, 1
  store i64 %140, i64* %139, align 8
  %141 = bitcast %"class.std::__1::unique_ptr.2468"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %141) #12
  %142 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %92, align 8
  %143 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %142, i64 0, i32 0
  %144 = call %"class.blink::Settings"* @_ZNK5blink5Frame11GetSettingsEv(%"class.blink::Frame"* %143) #12
  %145 = call noalias i8* @malloc(i64 184) #12
  %146 = bitcast i8* %145 to %"class.blink::WorkerSettings"*
  call void @_ZN5blink14WorkerSettingsC1EPNS_8SettingsE(%"class.blink::WorkerSettings"* %146, %"class.blink::Settings"* %144) #12
  %147 = getelementptr inbounds %"class.std::__1::unique_ptr.2468", %"class.std::__1::unique_ptr.2468"* %21, i64 0, i32 0, i32 0, i32 0
  %148 = bitcast %"class.std::__1::unique_ptr.2468"* %21 to i8**
  store i8* %145, i8** %148, align 8
  %149 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %149) #12
  store i32 0, i32* %22, align 4
  %150 = getelementptr inbounds %"class.mojo::NullRemote", %"class.mojo::NullRemote"* %23, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %150) #12
  %151 = bitcast %"struct.blink::BeginFrameProviderParams"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %151) #12
  %152 = bitcast i8** %25 to i8*
  %153 = bitcast %"struct.blink::BeginFrameProviderParams"* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %153, i8 0, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %152) #12
  store i8* null, i8** %25, align 8
  %154 = call dereferenceable(16) %"class.base::UnguessableToken"* @_ZNK5blink16ExecutionContext17GetAgentClusterIDEv(%"class.blink::ExecutionContext"* %83) #12
  %155 = bitcast %"class.blink::MultiToken.2494"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %155) #12
  %156 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %81, i64 0, i32 35
  %157 = bitcast %"class.util::TokenType"* %156 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %155, i8* align 8 %157, i64 16, i1 false) #12
  %158 = getelementptr inbounds %"class.blink::MultiToken.2494", %"class.blink::MultiToken.2494"* %26, i64 0, i32 1
  store i32 0, i32* %158, align 8, !alias.scope !4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %27) #12
  %159 = call zeroext i1 @_ZNK5blink14LocalDOMWindow29CrossOriginIsolatedCapabilityEv(%"class.blink::LocalDOMWindow"* %81) #12
  %160 = zext i1 %159 to i8
  store i8 %160, i8* %27, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %28) #12
  %161 = call zeroext i1 @_ZNK5blink14LocalDOMWindow22DirectSocketCapabilityEv(%"class.blink::LocalDOMWindow"* %81) #12
  %162 = zext i1 %161 to i8
  store i8 %162, i8* %28, align 1
  %163 = call %"struct.blink::GlobalScopeCreationParams"* @_ZNSt3__111make_uniqueIN5blink25GlobalScopeCreationParamsEJRKNS1_4KURLENS1_5mojom10ScriptTypeERKN3WTF6StringES9_N4absl8optionalINS1_17UserAgentMetadataEEE13scoped_refptrINS1_21WebWorkerFetchContextEENS8_6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS8_18PartitionAllocatorEEENSN_14ReferrerPolicyEPKNS1_14SecurityOriginEbNS1_10HttpsStateERPNS1_13WorkerClientsENS_10unique_ptrINS1_24WebContentSettingsClientENS_14default_deleteIS12_EEEENSN_14IPAddressSpaceEPNSJ_IS9_Lj0ESR_EEN4base16UnguessableTokenENS11_INS1_14WorkerSettingsENS13_IS1B_EEEENS6_14V8CacheOptionsERPNS1_25WorkletModuleResponsesMapENSK_10NullRemoteENS1_24BeginFrameProviderParamsEDnRKS1A_RKlNS1_10MultiTokenIN4util9TokenTypeINS1_25LocalFrameTokenTypeMarkerEEENS1Q_INS1_30DedicatedWorkerTokenTypeMarkerEEEJNS1Q_INS1_28ServiceWorkerTokenTypeMarkerEEENS1Q_INS1_27SharedWorkerTokenTypeMarkerEEENS1Q_INS1_31AnimationWorkletTokenTypeMarkerEEENS1Q_INS1_27AudioWorkletTokenTypeMarkerEEENS1Q_INS1_28LayoutWorkletTokenTypeMarkerEEENS1Q_INS1_27PaintWorkletTokenTypeMarkerEEEEEEbbEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::KURL"* dereferenceable(112) %85, i32* nonnull dereferenceable(4) %8, %"class.WTF::String"* nonnull dereferenceable(8) %7, %"class.WTF::String"* nonnull dereferenceable(8) %9, %"class.absl::optional.2500"* nonnull dereferenceable(160) %10, %class.scoped_refptr.741* nonnull dereferenceable(8) %11, %"class.WTF::Vector.554"* nonnull dereferenceable(16) %12, i32* nonnull dereferenceable(4) %13, %"class.blink::SecurityOrigin"** nonnull dereferenceable(8) %14, i8* nonnull dereferenceable(1) %15, i32* nonnull dereferenceable(4) %16, %"class.blink::WorkerClients"** nonnull dereferenceable(8) %5, %"class.std::__1::unique_ptr.726"* nonnull dereferenceable(8) %17, i32* nonnull dereferenceable(4) %18, %"class.WTF::Vector.578"** nonnull dereferenceable(8) %19, %"class.base::UnguessableToken"* nonnull dereferenceable(16) %20, %"class.std::__1::unique_ptr.2468"* nonnull dereferenceable(8) %21, i32* nonnull dereferenceable(4) %22, %"class.blink::WorkletModuleResponsesMap"** nonnull dereferenceable(8) %6, %"class.mojo::NullRemote"* nonnull dereferenceable(1) %23, %"struct.blink::BeginFrameProviderParams"* nonnull dereferenceable(16) %24, i8** nonnull dereferenceable(8) %25, %"class.base::UnguessableToken"* dereferenceable(16) %154, i64* nonnull dereferenceable(8) @_ZN3ukmL16kInvalidSourceIdE, %"class.blink::MultiToken.2494"* nonnull dereferenceable(24) %26, i8* nonnull dereferenceable(1) %27, i8* nonnull dereferenceable(1) %28)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %28) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %27) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %155) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %152) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %151) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %150) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %149) #12
  %164 = load %"class.blink::WorkerSettings"*, %"class.blink::WorkerSettings"** %147, align 8
  store %"class.blink::WorkerSettings"* null, %"class.blink::WorkerSettings"** %147, align 8
  %165 = icmp eq %"class.blink::WorkerSettings"* %164, null
  br i1 %165, label %169, label %166

166:                                              ; preds = %76
  %167 = getelementptr inbounds %"class.blink::WorkerSettings", %"class.blink::WorkerSettings"* %164, i64 0, i32 4
  call void @_ZN5blink25GenericFontFamilySettingsD2Ev(%"class.blink::GenericFontFamilySettings"* %167) #12
  %168 = getelementptr inbounds %"class.blink::WorkerSettings", %"class.blink::WorkerSettings"* %164, i64 0, i32 0
  call void @free(i8* %168) #12
  br label %169

169:                                              ; preds = %76, %166
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %141) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %135) #12
  %170 = icmp eq %"class.WTF::Vector.578"* %134, null
  br i1 %170, label %211, label %171

171:                                              ; preds = %169
  %172 = getelementptr inbounds %"class.WTF::Vector.578", %"class.WTF::Vector.578"* %134, i64 0, i32 0, i32 0, i32 0
  %173 = load %"class.WTF::String"*, %"class.WTF::String"** %172, align 8
  %174 = icmp eq %"class.WTF::String"* %173, null
  br i1 %174, label %209, label %175, !prof !7

175:                                              ; preds = %171
  %176 = bitcast %"class.WTF::String"* %173 to i8*
  %177 = getelementptr inbounds %"class.WTF::Vector.578", %"class.WTF::Vector.578"* %134, i64 0, i32 0, i32 0, i32 2
  %178 = load i32, i32* %177, align 4
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %207, label %180, !prof !3

180:                                              ; preds = %175
  %181 = zext i32 %178 to i64
  %182 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %173, i64 %181
  br label %183

183:                                              ; preds = %201, %180
  %184 = phi %"class.WTF::String"* [ %202, %201 ], [ %173, %180 ]
  %185 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %184, i64 0, i32 0, i32 0
  %186 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %185, align 8
  %187 = icmp eq %"class.WTF::StringImpl"* %186, null
  br i1 %187, label %201, label %188

188:                                              ; preds = %183
  %189 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %186, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %190 = load atomic i32, i32* %189 monotonic, align 4
  %191 = and i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %186, i64 0, i32 0
  %194 = load i32, i32* %193, align 4
  br i1 %192, label %195, label %197

195:                                              ; preds = %188
  %196 = add i32 %194, -1
  store i32 %196, i32* %193, align 4
  br label %197

197:                                              ; preds = %195, %188
  %198 = phi i32 [ %196, %195 ], [ %194, %188 ]
  %199 = icmp eq i32 %198, 0
  br i1 %199, label %200, label %201

200:                                              ; preds = %197
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %186) #12
  br label %201

201:                                              ; preds = %200, %197, %183
  %202 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %184, i64 1
  %203 = icmp eq %"class.WTF::String"* %202, %182
  br i1 %203, label %204, label %183

204:                                              ; preds = %201
  store i32 0, i32* %177, align 4
  %205 = bitcast %"class.WTF::Vector.578"* %134 to i8**
  %206 = load i8*, i8** %205, align 8
  br label %207

207:                                              ; preds = %204, %175
  %208 = phi i8* [ %206, %204 ], [ %176, %175 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %208) #12
  store %"class.WTF::String"* null, %"class.WTF::String"** %172, align 8
  br label %209

209:                                              ; preds = %207, %171
  %210 = bitcast %"class.WTF::Vector.578"* %134 to i8*
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %210) #12
  br label %211

211:                                              ; preds = %169, %209
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %131) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %129) #12
  %212 = load %"class.blink::WebContentSettingsClient"*, %"class.blink::WebContentSettingsClient"** %128, align 8
  store %"class.blink::WebContentSettingsClient"* null, %"class.blink::WebContentSettingsClient"** %128, align 8
  %213 = icmp eq %"class.blink::WebContentSettingsClient"* %212, null
  br i1 %213, label %219, label %214

214:                                              ; preds = %211
  %215 = bitcast %"class.blink::WebContentSettingsClient"* %212 to void (%"class.blink::WebContentSettingsClient"*)***
  %216 = load void (%"class.blink::WebContentSettingsClient"*)**, void (%"class.blink::WebContentSettingsClient"*)*** %215, align 8
  %217 = getelementptr inbounds void (%"class.blink::WebContentSettingsClient"*)*, void (%"class.blink::WebContentSettingsClient"*)** %216, i64 17
  %218 = load void (%"class.blink::WebContentSettingsClient"*)*, void (%"class.blink::WebContentSettingsClient"*)** %217, align 8
  call void %218(%"class.blink::WebContentSettingsClient"* nonnull %212) #12
  br label %219

219:                                              ; preds = %211, %214
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %120) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %118) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %112) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %110) #12
  %220 = getelementptr inbounds %"class.WTF::Vector.554", %"class.WTF::Vector.554"* %12, i64 0, i32 0, i32 0, i32 0
  %221 = load %"class.mojo::StructPtr.557"*, %"class.mojo::StructPtr.557"** %220, align 8
  %222 = icmp eq %"class.mojo::StructPtr.557"* %221, null
  br i1 %222, label %246, label %223, !prof !7

223:                                              ; preds = %219
  %224 = bitcast %"class.mojo::StructPtr.557"* %221 to i8*
  %225 = getelementptr inbounds %"class.WTF::Vector.554", %"class.WTF::Vector.554"* %12, i64 0, i32 0, i32 0, i32 2
  %226 = load i32, i32* %225, align 4
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %244, label %228, !prof !3

228:                                              ; preds = %223
  %229 = zext i32 %226 to i64
  %230 = getelementptr inbounds %"class.mojo::StructPtr.557", %"class.mojo::StructPtr.557"* %221, i64 %229
  br label %231

231:                                              ; preds = %238, %228
  %232 = phi %"class.mojo::StructPtr.557"* [ %239, %238 ], [ %221, %228 ]
  %233 = getelementptr inbounds %"class.mojo::StructPtr.557", %"class.mojo::StructPtr.557"* %232, i64 0, i32 0, i32 0, i32 0, i32 0
  %234 = load %"class.network::mojom::blink::ContentSecurityPolicy"*, %"class.network::mojom::blink::ContentSecurityPolicy"** %233, align 8
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %233, align 8
  %235 = icmp eq %"class.network::mojom::blink::ContentSecurityPolicy"* %234, null
  br i1 %235, label %238, label %236

236:                                              ; preds = %231
  call void @_ZN7network5mojom5blink21ContentSecurityPolicyD1Ev(%"class.network::mojom::blink::ContentSecurityPolicy"* nonnull %234) #12
  %237 = bitcast %"class.network::mojom::blink::ContentSecurityPolicy"* %234 to i8*
  call void @_ZdlPv(i8* %237) #13
  br label %238

238:                                              ; preds = %236, %231
  %239 = getelementptr inbounds %"class.mojo::StructPtr.557", %"class.mojo::StructPtr.557"* %232, i64 1
  %240 = icmp eq %"class.mojo::StructPtr.557"* %239, %230
  br i1 %240, label %241, label %231

241:                                              ; preds = %238
  store i32 0, i32* %225, align 4
  %242 = bitcast %"class.WTF::Vector.554"* %12 to i8**
  %243 = load i8*, i8** %242, align 8
  br label %244

244:                                              ; preds = %241, %223
  %245 = phi i8* [ %243, %241 ], [ %224, %223 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %245) #12
  store %"class.mojo::StructPtr.557"* null, %"class.mojo::StructPtr.557"** %220, align 8
  br label %246

246:                                              ; preds = %219, %244
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %108) #12
  %247 = load %"class.blink::WebWorkerFetchContext"*, %"class.blink::WebWorkerFetchContext"** %107, align 8
  %248 = icmp eq %"class.blink::WebWorkerFetchContext"* %247, null
  br i1 %248, label %262, label %249

249:                                              ; preds = %246
  %250 = getelementptr inbounds %"class.blink::WebWorkerFetchContext", %"class.blink::WebWorkerFetchContext"* %247, i64 0, i32 1
  %251 = getelementptr inbounds %"class.base::RefCounted.742", %"class.base::RefCounted.742"* %250, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %251) #12
  %252 = getelementptr inbounds %"class.base::RefCounted.742", %"class.base::RefCounted.742"* %250, i64 0, i32 0, i32 0
  %253 = load i32, i32* %252, align 4
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %255, label %262

255:                                              ; preds = %249
  %256 = getelementptr inbounds %"class.base::RefCounted.742", %"class.base::RefCounted.742"* %250, i64 -2
  %257 = bitcast %"class.base::RefCounted.742"* %256 to %"class.blink::WebWorkerFetchContext"*
  %258 = bitcast %"class.base::RefCounted.742"* %256 to void (%"class.blink::WebWorkerFetchContext"*)***
  %259 = load void (%"class.blink::WebWorkerFetchContext"*)**, void (%"class.blink::WebWorkerFetchContext"*)*** %258, align 8
  %260 = getelementptr inbounds void (%"class.blink::WebWorkerFetchContext"*)*, void (%"class.blink::WebWorkerFetchContext"*)** %259, i64 1
  %261 = load void (%"class.blink::WebWorkerFetchContext"*)*, void (%"class.blink::WebWorkerFetchContext"*)** %260, align 8
  call void %261(%"class.blink::WebWorkerFetchContext"* nonnull %257) #12
  br label %262

262:                                              ; preds = %246, %249, %255
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #12
  %263 = load i8, i8* %90, align 8, !range !2
  %264 = icmp eq i8 %263, 0
  br i1 %264, label %267, label %265

265:                                              ; preds = %262
  %266 = getelementptr inbounds %"class.absl::optional.2500", %"class.absl::optional.2500"* %10, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN5blink17UserAgentMetadataD2Ev(%"struct.blink::UserAgentMetadata"* %266) #12
  store i8 0, i8* %90, align 8
  br label %267

267:                                              ; preds = %262, %265
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %90) #12
  %268 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %269 = icmp eq %"class.WTF::StringImpl"* %268, null
  br i1 %269, label %283, label %270

270:                                              ; preds = %267
  %271 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %268, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %272 = load atomic i32, i32* %271 monotonic, align 4
  %273 = and i32 %272, 2
  %274 = icmp eq i32 %273, 0
  %275 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %268, i64 0, i32 0
  %276 = load i32, i32* %275, align 4
  br i1 %274, label %277, label %279

277:                                              ; preds = %270
  %278 = add i32 %276, -1
  store i32 %278, i32* %275, align 4
  br label %279

279:                                              ; preds = %277, %270
  %280 = phi i32 [ %278, %277 ], [ %276, %270 ]
  %281 = icmp eq i32 %280, 0
  br i1 %281, label %282, label %283

282:                                              ; preds = %279
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %268) #12
  br label %283

283:                                              ; preds = %282, %279, %267
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %86) #12
  %284 = getelementptr inbounds %"class.absl::optional.2511", %"class.absl::optional.2511"* %29, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %284) #12
  store i8 0, i8* %284, align 8
  call void @_ZN5blink26ThreadedMessagingProxyBase22InitializeWorkerThreadENSt3__110unique_ptrINS_25GlobalScopeCreationParamsENS1_14default_deleteIS3_EEEERKN4absl8optionalINS_30WorkerBackingThreadStartupDataEEERKNS8_IKN4util9TokenTypeINS_30DedicatedWorkerTokenTypeMarkerEEEEE(%"class.blink::ThreadedMessagingProxyBase"* %30, %"struct.blink::GlobalScopeCreationParams"* %163, %"class.absl::optional.1120"* dereferenceable(12) %3, %"class.absl::optional.2511"* nonnull dereferenceable(24) %29) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %284) #12
  %285 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %286 = icmp eq %"class.WTF::StringImpl"* %285, null
  br i1 %286, label %300, label %287

287:                                              ; preds = %283
  %288 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %285, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %289 = load atomic i32, i32* %288 monotonic, align 4
  %290 = and i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %285, i64 0, i32 0
  %293 = load i32, i32* %292, align 4
  br i1 %291, label %294, label %296

294:                                              ; preds = %287
  %295 = add i32 %293, -1
  store i32 %295, i32* %292, align 4
  br label %296

296:                                              ; preds = %294, %287
  %297 = phi i32 [ %295, %294 ], [ %293, %287 ]
  %298 = icmp eq i32 %297, 0
  br i1 %298, label %299, label %300

299:                                              ; preds = %296
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %285) #12
  br label %300

300:                                              ; preds = %283, %296, %299
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #12
  br label %301

301:                                              ; preds = %4, %300
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.blink::ParentExecutionContextTaskRunners"* @_ZNK5blink26ThreadedMessagingProxyBase36GetParentExecutionContextTaskRunnersEv(%"class.blink::ThreadedMessagingProxyBase"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.blink::ExecutionContext"* @_ZNK5blink26ThreadedMessagingProxyBase19GetExecutionContextEv(%"class.blink::ThreadedMessagingProxyBase"*) local_unnamed_addr #1

declare %"class.blink::ContentSecurityPolicy"* @_ZNK5blink16ExecutionContext24GetContentSecurityPolicyEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::GlobalScopeCreationParams"* @_ZNSt3__111make_uniqueIN5blink25GlobalScopeCreationParamsEJRKNS1_4KURLENS1_5mojom10ScriptTypeERKN3WTF6StringES9_N4absl8optionalINS1_17UserAgentMetadataEEE13scoped_refptrINS1_21WebWorkerFetchContextEENS8_6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS8_18PartitionAllocatorEEENSN_14ReferrerPolicyEPKNS1_14SecurityOriginEbNS1_10HttpsStateERPNS1_13WorkerClientsENS_10unique_ptrINS1_24WebContentSettingsClientENS_14default_deleteIS12_EEEENSN_14IPAddressSpaceEPNSJ_IS9_Lj0ESR_EEN4base16UnguessableTokenENS11_INS1_14WorkerSettingsENS13_IS1B_EEEENS6_14V8CacheOptionsERPNS1_25WorkletModuleResponsesMapENSK_10NullRemoteENS1_24BeginFrameProviderParamsEDnRKS1A_RKlNS1_10MultiTokenIN4util9TokenTypeINS1_25LocalFrameTokenTypeMarkerEEENS1Q_INS1_30DedicatedWorkerTokenTypeMarkerEEEJNS1Q_INS1_28ServiceWorkerTokenTypeMarkerEEENS1Q_INS1_27SharedWorkerTokenTypeMarkerEEENS1Q_INS1_31AnimationWorkletTokenTypeMarkerEEENS1Q_INS1_27AudioWorkletTokenTypeMarkerEEENS1Q_INS1_28LayoutWorkletTokenTypeMarkerEEENS1Q_INS1_27PaintWorkletTokenTypeMarkerEEEEEEbbEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::KURL"* dereferenceable(112), i32* dereferenceable(4), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.absl::optional.2500"* dereferenceable(160), %class.scoped_refptr.741* dereferenceable(8), %"class.WTF::Vector.554"* dereferenceable(16), i32* dereferenceable(4), %"class.blink::SecurityOrigin"** dereferenceable(8), i8* dereferenceable(1), i32* dereferenceable(4), %"class.blink::WorkerClients"** dereferenceable(8), %"class.std::__1::unique_ptr.726"* dereferenceable(8), i32* dereferenceable(4), %"class.WTF::Vector.578"** dereferenceable(8), %"class.base::UnguessableToken"* dereferenceable(16), %"class.std::__1::unique_ptr.2468"* dereferenceable(8), i32* dereferenceable(4), %"class.blink::WorkletModuleResponsesMap"** dereferenceable(8), %"class.mojo::NullRemote"* dereferenceable(1), %"struct.blink::BeginFrameProviderParams"* dereferenceable(16), i8** dereferenceable(8), %"class.base::UnguessableToken"* dereferenceable(16), i64* dereferenceable(8), %"class.blink::MultiToken.2494"* dereferenceable(24), i8* dereferenceable(1), i8* dereferenceable(1)) local_unnamed_addr #3 comdat {
  %28 = alloca %"class.WTF::Vector.554", align 8
  %29 = alloca i64, align 8
  %30 = bitcast i64* %29 to %"class.mojo::PendingRemote.2488"*
  %31 = alloca <4 x i32>, align 16
  %32 = bitcast <4 x i32>* %31 to %"struct.blink::BeginFrameProviderParams"*
  %33 = alloca %"class.base::UnguessableToken", align 8
  %34 = alloca %"class.absl::optional.2489", align 8
  %35 = tail call noalias i8* @malloc(i64 520) #12
  %36 = bitcast i8* %35 to %"struct.blink::GlobalScopeCreationParams"*
  %37 = load i32, i32* %1, align 4
  %38 = getelementptr inbounds %class.scoped_refptr.741, %class.scoped_refptr.741* %5, i64 0, i32 0
  %39 = bitcast %class.scoped_refptr.741* %5 to i64*
  %40 = load i64, i64* %39, align 8
  store %"class.blink::WebWorkerFetchContext"* null, %"class.blink::WebWorkerFetchContext"** %38, align 8
  %41 = getelementptr inbounds %"class.WTF::Vector.554", %"class.WTF::Vector.554"* %28, i64 0, i32 0, i32 0, i32 1
  %42 = getelementptr inbounds %"class.WTF::Vector.554", %"class.WTF::Vector.554"* %28, i64 0, i32 0, i32 0, i32 2
  %43 = bitcast %"class.WTF::Vector.554"* %6 to i64*
  %44 = bitcast %"class.WTF::Vector.554"* %28 to i64*
  store i64 0, i64* %44, align 8
  %45 = load i64, i64* %43, align 8
  %46 = bitcast %"class.WTF::Vector.554"* %28 to i64*
  store atomic i64 0, i64* %43 monotonic, align 8
  store atomic i64 %45, i64* %46 monotonic, align 8
  %47 = getelementptr inbounds %"class.WTF::Vector.554", %"class.WTF::Vector.554"* %6, i64 0, i32 0, i32 0, i32 1
  %48 = load i32, i32* %47, align 4
  store i32 %48, i32* %41, align 8
  store i32 0, i32* %47, align 4
  %49 = getelementptr inbounds %"class.WTF::Vector.554", %"class.WTF::Vector.554"* %6, i64 0, i32 0, i32 0, i32 2
  %50 = load i32, i32* %49, align 4
  store i32 %50, i32* %42, align 4
  store i32 0, i32* %49, align 4
  %51 = load i32, i32* %7, align 4
  %52 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %8, align 8
  %53 = load i8, i8* %9, align 1, !range !2
  %54 = icmp ne i8 %53, 0
  %55 = load i32, i32* %10, align 4
  %56 = load %"class.blink::WorkerClients"*, %"class.blink::WorkerClients"** %11, align 8
  %57 = getelementptr inbounds %"class.std::__1::unique_ptr.726", %"class.std::__1::unique_ptr.726"* %12, i64 0, i32 0, i32 0, i32 0
  %58 = bitcast %"class.std::__1::unique_ptr.726"* %12 to i64*
  %59 = load i64, i64* %58, align 8
  store %"class.blink::WebContentSettingsClient"* null, %"class.blink::WebContentSettingsClient"** %57, align 8
  %60 = load i32, i32* %13, align 4
  %61 = load %"class.WTF::Vector.578"*, %"class.WTF::Vector.578"** %14, align 8
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr.2468", %"class.std::__1::unique_ptr.2468"* %16, i64 0, i32 0, i32 0, i32 0
  %63 = bitcast %"class.std::__1::unique_ptr.2468"* %16 to i64*
  %64 = load i64, i64* %63, align 8
  store %"class.blink::WorkerSettings"* null, %"class.blink::WorkerSettings"** %62, align 8
  %65 = load i32, i32* %17, align 4
  %66 = load %"class.blink::WorkletModuleResponsesMap"*, %"class.blink::WorkletModuleResponsesMap"** %18, align 8
  store i64 0, i64* %29, align 8, !alias.scope !8
  %67 = bitcast i64* %29 to %"struct.mojo::internal::PendingRemoteState"*
  call void @_ZN4mojo8internal18PendingRemoteStateC1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %67) #12
  %68 = bitcast %"struct.blink::BeginFrameProviderParams"* %20 to <4 x i32>*
  %69 = load <4 x i32>, <4 x i32>* %68, align 4
  store <4 x i32> %69, <4 x i32>* %31, align 16
  %70 = bitcast %"class.base::UnguessableToken"* %33 to i8*
  %71 = bitcast %"class.base::UnguessableToken"* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %70, i8* align 8 %71, i64 16, i1 false)
  %72 = load i64, i64* %23, align 8
  %73 = getelementptr inbounds %"class.absl::optional.2489", %"class.absl::optional.2489"* %34, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %73) #12
  store i8 1, i8* %73, align 8
  %74 = getelementptr inbounds %"class.absl::optional.2489", %"class.absl::optional.2489"* %34, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %75 = bitcast %"class.blink::MultiToken.2494"* %74 to i8*
  %76 = bitcast %"class.blink::MultiToken.2494"* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %75, i8* align 8 %76, i64 24, i1 false) #12
  %77 = load i8, i8* %25, align 1, !range !2
  %78 = icmp ne i8 %77, 0
  %79 = load i8, i8* %26, align 1, !range !2
  %80 = icmp ne i8 %79, 0
  %81 = zext i32 %60 to i64
  %82 = shl nuw i64 %81, 32
  %83 = or i64 %82, 1
  call void @_ZN5blink25GlobalScopeCreationParamsC1ERKNS_4KURLENS_5mojom10ScriptTypeERKN3WTF6StringES9_RKN4absl8optionalINS_17UserAgentMetadataEEE13scoped_refptrINS_21WebWorkerFetchContextEENS6_6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS6_18PartitionAllocatorEEENSN_14ReferrerPolicyEPKNS_14SecurityOriginEbNS_10HttpsStateEPNS_13WorkerClientsENSt3__110unique_ptrINS_24WebContentSettingsClientENS10_14default_deleteIS12_EEEENSB_INSN_14IPAddressSpaceEEEPKNSJ_IS7_Lj0ESR_EERKN4base16UnguessableTokenENS11_INS_14WorkerSettingsENS13_IS1F_EEEENS4_14V8CacheOptionsEPNS_25WorkletModuleResponsesMapENSK_13PendingRemoteINS4_5blink22BrowserInterfaceBrokerEEENS_24BeginFrameProviderParamsEPKNS_17PermissionsPolicyES1C_lRKNSB_INS_10MultiTokenIN4util9TokenTypeINS_25LocalFrameTokenTypeMarkerEEENS1V_INS_30DedicatedWorkerTokenTypeMarkerEEEJNS1V_INS_28ServiceWorkerTokenTypeMarkerEEENS1V_INS_27SharedWorkerTokenTypeMarkerEEENS1V_INS_31AnimationWorkletTokenTypeMarkerEEENS1V_INS_27AudioWorkletTokenTypeMarkerEEENS1V_INS_28LayoutWorkletTokenTypeMarkerEEENS1V_INS_27PaintWorkletTokenTypeMarkerEEEEEEEEbb(%"struct.blink::GlobalScopeCreationParams"* %36, %"class.blink::KURL"* dereferenceable(112) %0, i32 %37, %"class.WTF::String"* dereferenceable(8) %2, %"class.WTF::String"* dereferenceable(8) %3, %"class.absl::optional.2500"* dereferenceable(160) %4, i64 %40, %"class.WTF::Vector.554"* nonnull %28, i32 %51, %"class.blink::SecurityOrigin"* %52, i1 zeroext %54, i32 %55, %"class.blink::WorkerClients"* %56, i64 %59, i64 %83, %"class.WTF::Vector.578"* %61, %"class.base::UnguessableToken"* dereferenceable(16) %15, i64 %64, i32 %65, %"class.blink::WorkletModuleResponsesMap"* %66, %"class.mojo::PendingRemote.2488"* nonnull %30, %"struct.blink::BeginFrameProviderParams"* nonnull %32, %"class.blink::PermissionsPolicy"* null, %"class.base::UnguessableToken"* nonnull byval(%"class.base::UnguessableToken") align 8 %33, i64 %72, %"class.absl::optional.2489"* nonnull dereferenceable(32) %34, i1 zeroext %78, i1 zeroext %80) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %73) #12
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %67) #12
  %84 = getelementptr inbounds %"class.WTF::Vector.554", %"class.WTF::Vector.554"* %28, i64 0, i32 0, i32 0, i32 0
  %85 = load %"class.mojo::StructPtr.557"*, %"class.mojo::StructPtr.557"** %84, align 8
  %86 = icmp eq %"class.mojo::StructPtr.557"* %85, null
  br i1 %86, label %109, label %87, !prof !7

87:                                               ; preds = %27
  %88 = bitcast %"class.mojo::StructPtr.557"* %85 to i8*
  %89 = load i32, i32* %42, align 4
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %107, label %91, !prof !3

91:                                               ; preds = %87
  %92 = zext i32 %89 to i64
  %93 = getelementptr inbounds %"class.mojo::StructPtr.557", %"class.mojo::StructPtr.557"* %85, i64 %92
  br label %94

94:                                               ; preds = %101, %91
  %95 = phi %"class.mojo::StructPtr.557"* [ %102, %101 ], [ %85, %91 ]
  %96 = getelementptr inbounds %"class.mojo::StructPtr.557", %"class.mojo::StructPtr.557"* %95, i64 0, i32 0, i32 0, i32 0, i32 0
  %97 = load %"class.network::mojom::blink::ContentSecurityPolicy"*, %"class.network::mojom::blink::ContentSecurityPolicy"** %96, align 8
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %96, align 8
  %98 = icmp eq %"class.network::mojom::blink::ContentSecurityPolicy"* %97, null
  br i1 %98, label %101, label %99

99:                                               ; preds = %94
  call void @_ZN7network5mojom5blink21ContentSecurityPolicyD1Ev(%"class.network::mojom::blink::ContentSecurityPolicy"* nonnull %97) #12
  %100 = bitcast %"class.network::mojom::blink::ContentSecurityPolicy"* %97 to i8*
  call void @_ZdlPv(i8* %100) #13
  br label %101

101:                                              ; preds = %99, %94
  %102 = getelementptr inbounds %"class.mojo::StructPtr.557", %"class.mojo::StructPtr.557"* %95, i64 1
  %103 = icmp eq %"class.mojo::StructPtr.557"* %102, %93
  br i1 %103, label %104, label %94

104:                                              ; preds = %101
  store i32 0, i32* %42, align 4
  %105 = bitcast %"class.WTF::Vector.554"* %28 to i8**
  %106 = load i8*, i8** %105, align 8
  br label %107

107:                                              ; preds = %104, %87
  %108 = phi i8* [ %106, %104 ], [ %88, %87 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %108) #12
  store %"class.mojo::StructPtr.557"* null, %"class.mojo::StructPtr.557"** %84, align 8
  br label %109

109:                                              ; preds = %27, %107
  ret %"struct.blink::GlobalScopeCreationParams"* %36
}

declare dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink14LocalDOMWindow3UrlEv(%"class.blink::LocalDOMWindow"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink14LocalDOMWindow9UserAgentEv(%"class.blink::LocalDOMWindow"*) unnamed_addr #1

declare %"class.blink::LocalFrameClient"* @_ZNK5blink10LocalFrame6ClientEv(%"class.blink::LocalFrame"*) local_unnamed_addr #1

declare dereferenceable(16) %"class.WTF::Vector.554"* @_ZNK5blink21ContentSecurityPolicy17GetParsedPoliciesEv(%"class.blink::ContentSecurityPolicy"*) local_unnamed_addr #1

declare i32 @_ZNK5blink16ExecutionContext17GetReferrerPolicyEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #1

declare %"class.blink::SecurityOrigin"* @_ZNK5blink16ExecutionContext17GetSecurityOriginEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #1

declare i32 @_ZNK5blink14LocalDOMWindow13GetHttpsStateEv(%"class.blink::LocalDOMWindow"*) unnamed_addr #1

declare i32 @_ZNK5blink16ExecutionContext12AddressSpaceEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #1

declare %"class.WTF::Vector.578"* @_ZN5blink18OriginTrialContext9GetTokensEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #1

declare { i64, i64 } @_ZN4base16UnguessableToken6CreateEv() local_unnamed_addr #1

declare %"class.blink::Settings"* @_ZNK5blink5Frame11GetSettingsEv(%"class.blink::Frame"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare dereferenceable(16) %"class.base::UnguessableToken"* @_ZNK5blink16ExecutionContext17GetAgentClusterIDEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink14LocalDOMWindow29CrossOriginIsolatedCapabilityEv(%"class.blink::LocalDOMWindow"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink14LocalDOMWindow22DirectSocketCapabilityEv(%"class.blink::LocalDOMWindow"*) unnamed_addr #1

declare void @_ZN5blink26ThreadedMessagingProxyBase22InitializeWorkerThreadENSt3__110unique_ptrINS_25GlobalScopeCreationParamsENS1_14default_deleteIS3_EEEERKN4absl8optionalINS_30WorkerBackingThreadStartupDataEEERKNS8_IKN4util9TokenTypeINS_30DedicatedWorkerTokenTypeMarkerEEEEE(%"class.blink::ThreadedMessagingProxyBase"*, %"struct.blink::GlobalScopeCreationParams"*, %"class.absl::optional.1120"* dereferenceable(12), %"class.absl::optional.2511"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink29ThreadedWorkletMessagingProxy5TraceEPNS_7VisitorE(%"class.blink::ThreadedWorkletMessagingProxy"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ThreadedWorkletMessagingProxy", %"class.blink::ThreadedWorkletMessagingProxy"* %0, i64 0, i32 0
  tail call void @_ZNK5blink26ThreadedMessagingProxyBase5TraceEPNS_7VisitorE(%"class.blink::ThreadedMessagingProxyBase"* %3, %"class.blink::Visitor"* %1) #12
  ret void
}

declare void @_ZNK5blink26ThreadedMessagingProxyBase5TraceEPNS_7VisitorE(%"class.blink::ThreadedMessagingProxyBase"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_NK5blink29ThreadedWorkletMessagingProxy5TraceEPNS_7VisitorE(%"class.blink::ThreadedWorkletMessagingProxy"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ThreadedWorkletMessagingProxy", %"class.blink::ThreadedWorkletMessagingProxy"* %0, i64 -1, i32 0, i32 2
  %4 = bitcast %"class.blink::CrossThreadPersistent"* %3 to %"class.blink::ThreadedMessagingProxyBase"*
  tail call void @_ZNK5blink26ThreadedMessagingProxyBase5TraceEPNS_7VisitorE(%"class.blink::ThreadedMessagingProxyBase"* %4, %"class.blink::Visitor"* %1) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29ThreadedWorkletMessagingProxy20FetchAndInvokeScriptERKNS_4KURLEN7network5mojom15CredentialsModeERKNS_33FetchClientSettingsObjectSnapshotERNS_28WorkerResourceTimingNotifierE13scoped_refptrIN4base22SingleThreadTaskRunnerEEPNS_19WorkletPendingTasksE(%"class.blink::ThreadedWorkletMessagingProxy"*, %"class.blink::KURL"* dereferenceable(112), i32, %"class.blink::FetchClientSettingsObjectSnapshot"* dereferenceable(296), %"class.blink::WorkerResourceTimingNotifier"* dereferenceable(8), %"class.base::SingleThreadTaskRunner"*, %"class.blink::WorkletPendingTasks"*) unnamed_addr #0 align 2 {
  %8 = alloca %"class.base::OnceCallback.615", align 8
  %9 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %10 = alloca %class.scoped_refptr.400, align 8
  %11 = alloca i32, align 4
  %12 = alloca %"class.base::Location", align 8
  %13 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %14 = alloca <2 x i64>, align 16
  %15 = bitcast <2 x i64>* %14 to { i64, i64 }*
  %16 = alloca %"class.WTF::CrossThreadUnretainedWrapper", align 8
  %17 = alloca %"class.std::__1::unique_ptr.2592", align 8
  %18 = alloca %"class.blink::CrossThreadPersistent.2598", align 8
  %19 = alloca %"class.blink::CrossThreadPersistent.2600", align 8
  %20 = alloca %"class.WTF::CrossThreadUnretainedWrapper.2602", align 8
  %21 = getelementptr inbounds %class.scoped_refptr.400, %class.scoped_refptr.400* %10, i64 0, i32 0
  store %"class.base::SingleThreadTaskRunner"* %5, %"class.base::SingleThreadTaskRunner"** %21, align 8
  store i32 %2, i32* %11, align 4
  %22 = getelementptr inbounds %"class.blink::ThreadedWorkletMessagingProxy", %"class.blink::ThreadedWorkletMessagingProxy"* %0, i64 0, i32 0
  %23 = tail call %"class.blink::WorkerThread"* @_ZNK5blink26ThreadedMessagingProxyBase15GetWorkerThreadEv(%"class.blink::ThreadedMessagingProxyBase"* %22) #12
  %24 = tail call %"class.base::SingleThreadTaskRunner"* @_ZN5blink12WorkerThread13GetTaskRunnerENS_8TaskTypeE(%"class.blink::WorkerThread"* %23, i8 zeroext 24) #12
  %25 = bitcast %"class.base::Location"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %25) #12
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %12, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1, i64 0, i64 0), i32 102) #12
  %26 = bitcast <2 x i64>* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #12
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::ThreadedWorkletObjectProxy"*, %"class.blink::KURL"*, i32, %"struct.blink::CrossThreadFetchClientSettingsObjectData"*, %"class.blink::WorkerResourceTimingNotifier"*, %"class.base::SingleThreadTaskRunner"*, %"class.blink::WorkletPendingTasks"*, %"class.blink::WorkerThread"*)* @_ZN5blink26ThreadedWorkletObjectProxy20FetchAndInvokeScriptERKNS_4KURLEN7network5mojom15CredentialsModeENSt3__110unique_ptrINS_40CrossThreadFetchClientSettingsObjectDataENS7_14default_deleteIS9_EEEEPNS_28WorkerResourceTimingNotifierE13scoped_refptrIN4base22SingleThreadTaskRunnerEEPNS_19WorkletPendingTasksEPNS_12WorkerThreadE to i64), i64 0>, <2 x i64>* %14, align 16
  %27 = bitcast %"class.WTF::CrossThreadUnretainedWrapper"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #12
  %28 = getelementptr inbounds %"class.blink::ThreadedWorkletMessagingProxy", %"class.blink::ThreadedWorkletMessagingProxy"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %29 = bitcast %"class.blink::ThreadedWorkletObjectProxy"** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.WTF::CrossThreadUnretainedWrapper"* %16 to i64*
  store i64 %30, i64* %31, align 8
  %32 = bitcast %"class.std::__1::unique_ptr.2592"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #12
  %33 = call %"struct.blink::CrossThreadFetchClientSettingsObjectData"* @_ZNK5blink33FetchClientSettingsObjectSnapshot8CopyDataEv(%"class.blink::FetchClientSettingsObjectSnapshot"* %3)
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr.2592", %"class.std::__1::unique_ptr.2592"* %17, i64 0, i32 0, i32 0, i32 0
  store %"struct.blink::CrossThreadFetchClientSettingsObjectData"* %33, %"struct.blink::CrossThreadFetchClientSettingsObjectData"** %34, align 8
  %35 = bitcast %"class.blink::CrossThreadPersistent.2598"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #12
  %36 = getelementptr inbounds %"class.blink::CrossThreadPersistent.2598", %"class.blink::CrossThreadPersistent.2598"* %18, i64 0, i32 0
  %37 = getelementptr inbounds %"class.blink::CrossThreadPersistent.2598", %"class.blink::CrossThreadPersistent.2598"* %18, i64 0, i32 0, i32 0
  store %"class.blink::WorkerResourceTimingNotifier"* %4, %"class.blink::WorkerResourceTimingNotifier"** %37, align 8, !alias.scope !11
  %38 = getelementptr inbounds %"class.blink::CrossThreadPersistent.2598", %"class.blink::CrossThreadPersistent.2598"* %18, i64 0, i32 0, i32 1
  %39 = getelementptr inbounds %"class.blink::CrossThreadPersistentNodePtr", %"class.blink::CrossThreadPersistentNodePtr"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %39, align 8, !alias.scope !11
  %40 = ptrtoint %"class.blink::WorkerResourceTimingNotifier"* %4 to i64
  switch i64 %40, label %41 [
    i64 0, label %60
    i64 -1, label %60
  ]

41:                                               ; preds = %7
  %42 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #12, !noalias !11
  %43 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %42, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %43) #12, !noalias !11
  %44 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #12, !noalias !11
  %45 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %44, i64 0, i32 0, i32 0
  %46 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %45, align 8, !noalias !11
  %47 = icmp eq %"class.blink::PersistentNode"* %46, null
  br i1 %47, label %48, label %51, !prof !3

48:                                               ; preds = %41
  %49 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %44, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %49) #12
  %50 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %45, align 8
  br label %51

51:                                               ; preds = %48, %41
  %52 = phi %"class.blink::PersistentNode"* [ %50, %48 ], [ %46, %41 ]
  %53 = bitcast %"class.blink::PersistentNode"* %52 to i64*
  %54 = load i64, i64* %53, align 8, !noalias !11
  %55 = bitcast %"class.blink::CrossThreadPersistentRegion"* %44 to i64*
  store i64 %54, i64* %55, align 8, !noalias !11
  %56 = bitcast %"class.blink::PersistentNode"* %52 to %"class.blink::PersistentBase.2599"**
  store %"class.blink::PersistentBase.2599"* %36, %"class.blink::PersistentBase.2599"** %56, align 8, !noalias !11
  %57 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %52, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_28WorkerResourceTimingNotifierELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %57, align 8
  %58 = ptrtoint %"class.blink::PersistentNode"* %52 to i64
  %59 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %38 to i64*
  store atomic i64 %58, i64* %59 release, align 8, !alias.scope !11
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %43) #12
  br label %60

60:                                               ; preds = %7, %7, %51
  %61 = bitcast %"class.blink::CrossThreadPersistent.2600"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %61) #12
  %62 = getelementptr inbounds %"class.blink::CrossThreadPersistent.2600", %"class.blink::CrossThreadPersistent.2600"* %19, i64 0, i32 0
  %63 = getelementptr inbounds %"class.blink::CrossThreadPersistent.2600", %"class.blink::CrossThreadPersistent.2600"* %19, i64 0, i32 0, i32 0
  store %"class.blink::WorkletPendingTasks"* %6, %"class.blink::WorkletPendingTasks"** %63, align 8, !alias.scope !14
  %64 = getelementptr inbounds %"class.blink::CrossThreadPersistent.2600", %"class.blink::CrossThreadPersistent.2600"* %19, i64 0, i32 0, i32 1
  %65 = getelementptr inbounds %"class.blink::CrossThreadPersistentNodePtr", %"class.blink::CrossThreadPersistentNodePtr"* %64, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %65, align 8, !alias.scope !14
  %66 = ptrtoint %"class.blink::WorkletPendingTasks"* %6 to i64
  switch i64 %66, label %67 [
    i64 0, label %86
    i64 -1, label %86
  ]

67:                                               ; preds = %60
  %68 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #12, !noalias !14
  %69 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %68, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %69) #12, !noalias !14
  %70 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #12, !noalias !14
  %71 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %70, i64 0, i32 0, i32 0
  %72 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %71, align 8, !noalias !14
  %73 = icmp eq %"class.blink::PersistentNode"* %72, null
  br i1 %73, label %74, label %77, !prof !3

74:                                               ; preds = %67
  %75 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %70, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %75) #12
  %76 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %71, align 8
  br label %77

77:                                               ; preds = %74, %67
  %78 = phi %"class.blink::PersistentNode"* [ %76, %74 ], [ %72, %67 ]
  %79 = bitcast %"class.blink::PersistentNode"* %78 to i64*
  %80 = load i64, i64* %79, align 8, !noalias !14
  %81 = bitcast %"class.blink::CrossThreadPersistentRegion"* %70 to i64*
  store i64 %80, i64* %81, align 8, !noalias !14
  %82 = bitcast %"class.blink::PersistentNode"* %78 to %"class.blink::PersistentBase.2601"**
  store %"class.blink::PersistentBase.2601"* %62, %"class.blink::PersistentBase.2601"** %82, align 8, !noalias !14
  %83 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %78, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_19WorkletPendingTasksELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %83, align 8
  %84 = ptrtoint %"class.blink::PersistentNode"* %78 to i64
  %85 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %64 to i64*
  store atomic i64 %84, i64* %85 release, align 8, !alias.scope !14
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %69) #12
  br label %86

86:                                               ; preds = %60, %60, %77
  %87 = bitcast %"class.WTF::CrossThreadUnretainedWrapper.2602"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87) #12
  %88 = call %"class.blink::WorkerThread"* @_ZNK5blink26ThreadedMessagingProxyBase15GetWorkerThreadEv(%"class.blink::ThreadedMessagingProxyBase"* %22) #12
  %89 = getelementptr inbounds %"class.WTF::CrossThreadUnretainedWrapper.2602", %"class.WTF::CrossThreadUnretainedWrapper.2602"* %20, i64 0, i32 0
  store %"class.blink::WorkerThread"* %88, %"class.blink::WorkerThread"** %89, align 8
  call void @_ZN3WTF19CrossThreadBindOnceIMN5blink26ThreadedWorkletObjectProxyEFvRKNS1_4KURLEN7network5mojom15CredentialsModeENSt3__110unique_ptrINS1_40CrossThreadFetchClientSettingsObjectDataENS9_14default_deleteISB_EEEEPNS1_28WorkerResourceTimingNotifierE13scoped_refptrIN4base22SingleThreadTaskRunnerEEPNS1_19WorkletPendingTasksEPNS1_12WorkerThreadEEJNS_28CrossThreadUnretainedWrapperIS2_EES5_RS8_SE_NS1_21CrossThreadPersistentISF_EESK_NSU_ISL_EENSR_ISN_EEEEEDaOT_DpOT0_(%"class.WTF::CrossThreadOnceFunction"* nonnull sret %13, { i64, i64 }* nonnull dereferenceable(16) %15, %"class.WTF::CrossThreadUnretainedWrapper"* nonnull dereferenceable(8) %16, %"class.blink::KURL"* dereferenceable(112) %1, i32* nonnull dereferenceable(4) %11, %"class.std::__1::unique_ptr.2592"* nonnull dereferenceable(8) %17, %"class.blink::CrossThreadPersistent.2598"* nonnull dereferenceable(16) %18, %class.scoped_refptr.400* nonnull dereferenceable(8) %10, %"class.blink::CrossThreadPersistent.2600"* nonnull dereferenceable(16) %19, %"class.WTF::CrossThreadUnretainedWrapper.2602"* nonnull dereferenceable(8) %20)
  %90 = bitcast %"class.base::OnceCallback.615"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %90)
  %91 = bitcast %"class.WTF::CrossThreadOnceFunction"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91)
  %92 = bitcast %"class.base::SingleThreadTaskRunner"* %24 to %"class.base::TaskRunner"*
  %93 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.WTF::CrossThreadOnceFunction"* %13 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %93, align 8
  %96 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %97 = bitcast %"class.base::OnceCallback.615"* %8 to i64*
  store i64 %95, i64* %97, align 8, !alias.scope !17
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %96, align 8, !noalias !17
  %98 = bitcast %"class.base::SingleThreadTaskRunner"* %24 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.615"*, i64)***
  %99 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.615"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.615"*, i64)*** %98, align 8
  %100 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.615"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.615"*, i64)** %99, align 8
  %101 = call zeroext i1 %100(%"class.base::TaskRunner"* %92, %"class.base::Location"* nonnull dereferenceable(32) %12, %"class.base::OnceCallback.615"* nonnull %8, i64 0) #12
  %102 = getelementptr inbounds %"class.base::OnceCallback.615", %"class.base::OnceCallback.615"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %102) #12
  %103 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %9, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %103) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %90)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91)
  %104 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %13, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %104) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #12
  %105 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %64 to i64*
  %106 = load atomic i64, i64* %105 acquire, align 8
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %122, label %108

108:                                              ; preds = %86
  %109 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #12
  %110 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %109, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %110) #12
  %111 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #12
  %112 = load atomic i64, i64* %105 monotonic, align 8
  %113 = inttoptr i64 %112 to %"class.blink::PersistentNode"*
  %114 = icmp eq i64 %112, 0
  br i1 %114, label %121, label %115

115:                                              ; preds = %108
  %116 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %111, i64 0, i32 0, i32 0
  %117 = bitcast %"class.blink::CrossThreadPersistentRegion"* %111 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = inttoptr i64 %112 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %113, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %120, align 8
  store %"class.blink::PersistentNode"* %113, %"class.blink::PersistentNode"** %116, align 8
  br label %121

121:                                              ; preds = %115, %108
  store atomic i64 0, i64* %105 release, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %110) #12
  br label %122

122:                                              ; preds = %86, %121
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %61) #12
  %123 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %38 to i64*
  %124 = load atomic i64, i64* %123 acquire, align 8
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %140, label %126

126:                                              ; preds = %122
  %127 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #12
  %128 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %127, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %128) #12
  %129 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #12
  %130 = load atomic i64, i64* %123 monotonic, align 8
  %131 = inttoptr i64 %130 to %"class.blink::PersistentNode"*
  %132 = icmp eq i64 %130, 0
  br i1 %132, label %139, label %133

133:                                              ; preds = %126
  %134 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %129, i64 0, i32 0, i32 0
  %135 = bitcast %"class.blink::CrossThreadPersistentRegion"* %129 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = inttoptr i64 %130 to i64*
  store i64 %136, i64* %137, align 8
  %138 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %131, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %138, align 8
  store %"class.blink::PersistentNode"* %131, %"class.blink::PersistentNode"** %134, align 8
  br label %139

139:                                              ; preds = %133, %126
  store atomic i64 0, i64* %123 release, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %128) #12
  br label %140

140:                                              ; preds = %122, %139
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #12
  %141 = load %"struct.blink::CrossThreadFetchClientSettingsObjectData"*, %"struct.blink::CrossThreadFetchClientSettingsObjectData"** %34, align 8
  store %"struct.blink::CrossThreadFetchClientSettingsObjectData"* null, %"struct.blink::CrossThreadFetchClientSettingsObjectData"** %34, align 8
  %142 = icmp eq %"struct.blink::CrossThreadFetchClientSettingsObjectData"* %141, null
  br i1 %142, label %181, label %143

143:                                              ; preds = %140
  %144 = getelementptr inbounds %"struct.blink::CrossThreadFetchClientSettingsObjectData", %"struct.blink::CrossThreadFetchClientSettingsObjectData"* %141, i64 0, i32 9, i32 0, i32 0
  %145 = load i32*, i32** %144, align 8
  %146 = icmp eq i32* %145, null
  br i1 %146, label %149, label %147, !prof !7

147:                                              ; preds = %143
  %148 = bitcast i32* %145 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %148) #12
  store i32* null, i32** %144, align 8
  br label %149

149:                                              ; preds = %147, %143
  %150 = getelementptr inbounds %"struct.blink::CrossThreadFetchClientSettingsObjectData", %"struct.blink::CrossThreadFetchClientSettingsObjectData"* %141, i64 0, i32 4, i32 0, i32 0
  %151 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %150, align 8
  %152 = icmp eq %"class.WTF::StringImpl"* %151, null
  br i1 %152, label %166, label %153

153:                                              ; preds = %149
  %154 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %155 = load atomic i32, i32* %154 monotonic, align 4
  %156 = and i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 0, i32 0
  %159 = load i32, i32* %158, align 4
  br i1 %157, label %160, label %162

160:                                              ; preds = %153
  %161 = add i32 %159, -1
  store i32 %161, i32* %158, align 4
  br label %162

162:                                              ; preds = %160, %153
  %163 = phi i32 [ %161, %160 ], [ %159, %153 ]
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %165, label %166

165:                                              ; preds = %162
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %151) #12
  br label %166

166:                                              ; preds = %165, %162, %149
  %167 = getelementptr inbounds %"struct.blink::CrossThreadFetchClientSettingsObjectData", %"struct.blink::CrossThreadFetchClientSettingsObjectData"* %141, i64 0, i32 2, i32 0
  %168 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %167, align 8
  %169 = icmp eq %"class.blink::SecurityOrigin"* %168, null
  br i1 %169, label %177, label %170

170:                                              ; preds = %166
  %171 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %168, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %171) #12
  %172 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %168, i64 0, i32 0, i32 0, i32 0, i32 0
  %173 = load i32, i32* %172, align 4
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %177

175:                                              ; preds = %170
  call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %168) #12
  %176 = bitcast %"class.blink::SecurityOrigin"* %168 to i8*
  call void @free(i8* %176) #12
  br label %177

177:                                              ; preds = %166, %170, %175
  %178 = getelementptr inbounds %"struct.blink::CrossThreadFetchClientSettingsObjectData", %"struct.blink::CrossThreadFetchClientSettingsObjectData"* %141, i64 0, i32 1
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %178) #12
  %179 = getelementptr inbounds %"struct.blink::CrossThreadFetchClientSettingsObjectData", %"struct.blink::CrossThreadFetchClientSettingsObjectData"* %141, i64 0, i32 0
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %179) #12
  %180 = getelementptr inbounds %"struct.blink::CrossThreadFetchClientSettingsObjectData", %"struct.blink::CrossThreadFetchClientSettingsObjectData"* %141, i64 0, i32 0, i32 0
  call void @free(i8* %180) #12
  br label %181

181:                                              ; preds = %140, %177
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %25) #12
  %182 = icmp eq %"class.base::SingleThreadTaskRunner"* %24, null
  br i1 %182, label %191, label %183

183:                                              ; preds = %181
  %184 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %24, i64 0, i32 0, i32 0, i32 1
  %185 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %184, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %186 = atomicrmw sub i32* %185, i32 1 acq_rel
  %187 = icmp eq i32 %186, 1
  br i1 %187, label %188, label %191

188:                                              ; preds = %183
  %189 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %184, i64 -2
  %190 = bitcast %"class.base::RefCountedThreadSafe"* %189 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %190) #12
  br label %191

191:                                              ; preds = %181, %183, %188
  %192 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %21, align 8
  %193 = icmp eq %"class.base::SingleThreadTaskRunner"* %192, null
  br i1 %193, label %202, label %194

194:                                              ; preds = %191
  %195 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %192, i64 0, i32 0, i32 0, i32 1
  %196 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %195, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %197 = atomicrmw sub i32* %196, i32 1 acq_rel
  %198 = icmp eq i32 %197, 1
  br i1 %198, label %199, label %202

199:                                              ; preds = %194
  %200 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %195, i64 -2
  %201 = bitcast %"class.base::RefCountedThreadSafe"* %200 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %201) #12
  br label %202

202:                                              ; preds = %191, %194, %199
  ret void
}

declare %"class.blink::WorkerThread"* @_ZNK5blink26ThreadedMessagingProxyBase15GetWorkerThreadEv(%"class.blink::ThreadedMessagingProxyBase"*) local_unnamed_addr #1

declare %"class.base::SingleThreadTaskRunner"* @_ZN5blink12WorkerThread13GetTaskRunnerENS_8TaskTypeE(%"class.blink::WorkerThread"*, i8 zeroext) local_unnamed_addr #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF19CrossThreadBindOnceIMN5blink26ThreadedWorkletObjectProxyEFvRKNS1_4KURLEN7network5mojom15CredentialsModeENSt3__110unique_ptrINS1_40CrossThreadFetchClientSettingsObjectDataENS9_14default_deleteISB_EEEEPNS1_28WorkerResourceTimingNotifierE13scoped_refptrIN4base22SingleThreadTaskRunnerEEPNS1_19WorkletPendingTasksEPNS1_12WorkerThreadEEJNS_28CrossThreadUnretainedWrapperIS2_EES5_RS8_SE_NS1_21CrossThreadPersistentISF_EESK_NSU_ISL_EENSR_ISN_EEEEEDaOT_DpOT0_(%"class.WTF::CrossThreadOnceFunction"* noalias sret, { i64, i64 }* dereferenceable(16), %"class.WTF::CrossThreadUnretainedWrapper"* dereferenceable(8), %"class.blink::KURL"* dereferenceable(112), i32* dereferenceable(4), %"class.std::__1::unique_ptr.2592"* dereferenceable(8), %"class.blink::CrossThreadPersistent.2598"* dereferenceable(16), %class.scoped_refptr.400* dereferenceable(8), %"class.blink::CrossThreadPersistent.2600"* dereferenceable(16), %"class.WTF::CrossThreadUnretainedWrapper.2602"* dereferenceable(8)) local_unnamed_addr #0 comdat {
  %11 = alloca %"class.base::OnceCallback.615", align 8
  %12 = alloca %"class.base::OnceCallback.615", align 8
  %13 = alloca %"class.blink::KURL", align 8
  %14 = alloca %"class.blink::CrossThreadPersistent.2598", align 8
  %15 = alloca %"class.blink::CrossThreadPersistent.2600", align 8
  %16 = bitcast %"class.WTF::CrossThreadUnretainedWrapper"* %2 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %13, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %18) #12
  call void @_ZNK5blink4KURL4CopyEv(%"class.blink::KURL"* nonnull sret %13, %"class.blink::KURL"* %3) #12
  %19 = load i32, i32* %4, align 4
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr.2592", %"class.std::__1::unique_ptr.2592"* %5, i64 0, i32 0, i32 0, i32 0
  %21 = bitcast %"class.std::__1::unique_ptr.2592"* %5 to i64*
  %22 = load i64, i64* %21, align 8
  store %"struct.blink::CrossThreadFetchClientSettingsObjectData"* null, %"struct.blink::CrossThreadFetchClientSettingsObjectData"** %20, align 8
  %23 = bitcast %"class.blink::CrossThreadPersistent.2598"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #12
  %24 = getelementptr inbounds %"class.blink::CrossThreadPersistent.2598", %"class.blink::CrossThreadPersistent.2598"* %14, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 16, i1 false) #12, !alias.scope !20
  %25 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #12, !noalias !20
  %26 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %25, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %26) #12, !noalias !20
  %27 = getelementptr inbounds %"class.blink::CrossThreadPersistent.2598", %"class.blink::CrossThreadPersistent.2598"* %6, i64 0, i32 0, i32 0
  %28 = load %"class.blink::WorkerResourceTimingNotifier"*, %"class.blink::WorkerResourceTimingNotifier"** %27, align 8, !noalias !20
  call void @_ZN5blink14PersistentBaseINS_28WorkerResourceTimingNotifierELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase.2599"* nonnull %24, %"class.blink::WorkerResourceTimingNotifier"* %28) #12
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %26) #12
  %29 = getelementptr inbounds %class.scoped_refptr.400, %class.scoped_refptr.400* %7, i64 0, i32 0
  %30 = bitcast %class.scoped_refptr.400* %7 to i64*
  %31 = load i64, i64* %30, align 8
  store %"class.base::SingleThreadTaskRunner"* null, %"class.base::SingleThreadTaskRunner"** %29, align 8
  %32 = bitcast %"class.blink::CrossThreadPersistent.2600"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #12
  %33 = getelementptr inbounds %"class.blink::CrossThreadPersistent.2600", %"class.blink::CrossThreadPersistent.2600"* %15, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 0, i64 16, i1 false) #12, !alias.scope !23
  %34 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #12, !noalias !23
  %35 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %34, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %35) #12, !noalias !23
  %36 = getelementptr inbounds %"class.blink::CrossThreadPersistent.2600", %"class.blink::CrossThreadPersistent.2600"* %8, i64 0, i32 0, i32 0
  %37 = load %"class.blink::WorkletPendingTasks"*, %"class.blink::WorkletPendingTasks"** %36, align 8, !noalias !23
  call void @_ZN5blink14PersistentBaseINS_19WorkletPendingTasksELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase.2601"* nonnull %33, %"class.blink::WorkletPendingTasks"* %37) #12
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %35) #12
  %38 = bitcast %"class.WTF::CrossThreadUnretainedWrapper.2602"* %9 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = call i8* @_Znwm(i64 232) #13, !noalias !26
  %41 = bitcast i8* %40 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %41, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink26ThreadedWorkletObjectProxyEFvRKNS3_4KURLEN7network5mojom15CredentialsModeENSt3__110unique_ptrINS3_40CrossThreadFetchClientSettingsObjectDataENSB_14default_deleteISD_EEEEPNS3_28WorkerResourceTimingNotifierE13scoped_refptrINS_22SingleThreadTaskRunnerEEPNS3_19WorkletPendingTasksEPNS3_12WorkerThreadEEJN3WTF28CrossThreadUnretainedWrapperIS4_EES5_SA_SG_NS3_21CrossThreadPersistentISH_EESL_NSV_ISM_EENST_ISO_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink26ThreadedWorkletObjectProxyEFvRKNS2_4KURLEN7network5mojom15CredentialsModeENSt3__110unique_ptrINS2_40CrossThreadFetchClientSettingsObjectDataENSA_14default_deleteISC_EEEEPNS2_28WorkerResourceTimingNotifierE13scoped_refptrINS_22SingleThreadTaskRunnerEEPNS2_19WorkletPendingTasksEPNS2_12WorkerThreadEEJN3WTF28CrossThreadUnretainedWrapperIS3_EES4_S9_SF_NS2_21CrossThreadPersistentISG_EESK_NSU_ISL_EENSS_ISN_EEEE7DestroyEPKNS0_13BindStateBaseE) #12
  %42 = bitcast { i64, i64 }* %1 to <2 x i64>*
  %43 = load <2 x i64>, <2 x i64>* %42, align 8
  %44 = getelementptr inbounds i8, i8* %40, i64 32
  %45 = bitcast i8* %44 to <2 x i64>*
  store <2 x i64> %43, <2 x i64>* %45, align 8
  %46 = getelementptr inbounds i8, i8* %40, i64 48
  %47 = bitcast i8* %46 to i64*
  store i64 %17, i64* %47, align 8
  %48 = getelementptr inbounds i8, i8* %40, i64 56
  %49 = bitcast i8* %48 to %"class.blink::KURL"*
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %49, %"class.blink::KURL"* nonnull dereferenceable(112) %13) #12
  %50 = getelementptr inbounds i8, i8* %40, i64 168
  %51 = bitcast i8* %50 to i32*
  store i32 %19, i32* %51, align 4
  %52 = getelementptr inbounds i8, i8* %40, i64 176
  %53 = bitcast i8* %52 to i64*
  store i64 %22, i64* %53, align 8
  %54 = getelementptr inbounds i8, i8* %40, i64 184
  %55 = bitcast i8* %54 to %"class.blink::PersistentBase.2599"*
  call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 16, i1 false) #12
  %56 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #12
  %57 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %56, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %57) #12
  %58 = getelementptr inbounds %"class.blink::CrossThreadPersistent.2598", %"class.blink::CrossThreadPersistent.2598"* %14, i64 0, i32 0, i32 0
  %59 = load %"class.blink::WorkerResourceTimingNotifier"*, %"class.blink::WorkerResourceTimingNotifier"** %58, align 8
  call void @_ZN5blink14PersistentBaseINS_28WorkerResourceTimingNotifierELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase.2599"* %55, %"class.blink::WorkerResourceTimingNotifier"* %59) #12
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %57) #12
  %60 = getelementptr inbounds i8, i8* %40, i64 200
  %61 = bitcast i8* %60 to i64*
  store i64 %31, i64* %61, align 8
  %62 = getelementptr inbounds i8, i8* %40, i64 208
  %63 = bitcast i8* %62 to %"class.blink::PersistentBase.2601"*
  call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 16, i1 false) #12
  %64 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #12
  %65 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %64, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %65) #12
  %66 = getelementptr inbounds %"class.blink::CrossThreadPersistent.2600", %"class.blink::CrossThreadPersistent.2600"* %15, i64 0, i32 0, i32 0
  %67 = load %"class.blink::WorkletPendingTasks"*, %"class.blink::WorkletPendingTasks"** %66, align 8
  call void @_ZN5blink14PersistentBaseINS_19WorkletPendingTasksELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase.2601"* %63, %"class.blink::WorkletPendingTasks"* %67) #12
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %65) #12
  %68 = getelementptr inbounds i8, i8* %40, i64 224
  %69 = bitcast i8* %68 to i64*
  store i64 %39, i64* %69, align 8
  %70 = bitcast %"class.base::OnceCallback.615"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70)
  %71 = getelementptr inbounds %"class.base::OnceCallback.615", %"class.base::OnceCallback.615"* %12, i64 0, i32 0, i32 0, i32 0
  %72 = ptrtoint i8* %40 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %71, align 8, !noalias !31
  %73 = getelementptr inbounds %"class.base::OnceCallback.615", %"class.base::OnceCallback.615"* %11, i64 0, i32 0, i32 0, i32 0
  %74 = bitcast %"class.WTF::CrossThreadOnceFunction"* %0 to i64*
  store i64 %72, i64* %74, align 8, !alias.scope !31
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %73, align 8, !noalias !31
  %75 = getelementptr inbounds %"class.base::OnceCallback.615", %"class.base::OnceCallback.615"* %11, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %75) #12, !noalias !31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70)
  %76 = getelementptr inbounds %"class.base::OnceCallback.615", %"class.base::OnceCallback.615"* %12, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %76) #12
  %77 = getelementptr inbounds %"class.blink::CrossThreadPersistent.2600", %"class.blink::CrossThreadPersistent.2600"* %15, i64 0, i32 0, i32 1
  %78 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %77 to i64*
  %79 = load atomic i64, i64* %78 acquire, align 8
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %95, label %81

81:                                               ; preds = %10
  %82 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #12
  %83 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %82, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %83) #12
  %84 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #12
  %85 = load atomic i64, i64* %78 monotonic, align 8
  %86 = inttoptr i64 %85 to %"class.blink::PersistentNode"*
  %87 = icmp eq i64 %85, 0
  br i1 %87, label %94, label %88

88:                                               ; preds = %81
  %89 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %84, i64 0, i32 0, i32 0
  %90 = bitcast %"class.blink::CrossThreadPersistentRegion"* %84 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = inttoptr i64 %85 to i64*
  store i64 %91, i64* %92, align 8
  %93 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %86, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %93, align 8
  store %"class.blink::PersistentNode"* %86, %"class.blink::PersistentNode"** %89, align 8
  br label %94

94:                                               ; preds = %88, %81
  store atomic i64 0, i64* %78 release, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %83) #12
  br label %95

95:                                               ; preds = %94, %10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #12
  %96 = getelementptr inbounds %"class.blink::CrossThreadPersistent.2598", %"class.blink::CrossThreadPersistent.2598"* %14, i64 0, i32 0, i32 1
  %97 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %96 to i64*
  %98 = load atomic i64, i64* %97 acquire, align 8
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %114, label %100

100:                                              ; preds = %95
  %101 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #12
  %102 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %101, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %102) #12
  %103 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #12
  %104 = load atomic i64, i64* %97 monotonic, align 8
  %105 = inttoptr i64 %104 to %"class.blink::PersistentNode"*
  %106 = icmp eq i64 %104, 0
  br i1 %106, label %113, label %107

107:                                              ; preds = %100
  %108 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %103, i64 0, i32 0, i32 0
  %109 = bitcast %"class.blink::CrossThreadPersistentRegion"* %103 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = inttoptr i64 %104 to i64*
  store i64 %110, i64* %111, align 8
  %112 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %105, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %112, align 8
  store %"class.blink::PersistentNode"* %105, %"class.blink::PersistentNode"** %108, align 8
  br label %113

113:                                              ; preds = %107, %100
  store atomic i64 0, i64* %97 release, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %102) #12
  br label %114

114:                                              ; preds = %113, %95
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #12
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %13) #12
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %18) #12
  ret void
}

declare void @_ZN5blink26ThreadedWorkletObjectProxy20FetchAndInvokeScriptERKNS_4KURLEN7network5mojom15CredentialsModeENSt3__110unique_ptrINS_40CrossThreadFetchClientSettingsObjectDataENS7_14default_deleteIS9_EEEEPNS_28WorkerResourceTimingNotifierE13scoped_refptrIN4base22SingleThreadTaskRunnerEEPNS_19WorkletPendingTasksEPNS_12WorkerThreadE(%"class.blink::ThreadedWorkletObjectProxy"*, %"class.blink::KURL"* dereferenceable(112), i32, %"struct.blink::CrossThreadFetchClientSettingsObjectData"*, %"class.blink::WorkerResourceTimingNotifier"*, %"class.base::SingleThreadTaskRunner"*, %"class.blink::WorkletPendingTasks"*, %"class.blink::WorkerThread"*) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::CrossThreadFetchClientSettingsObjectData"* @_ZNK5blink33FetchClientSettingsObjectSnapshot8CopyDataEv(%"class.blink::FetchClientSettingsObjectSnapshot"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.blink::KURL", align 8
  %3 = alloca %"class.blink::KURL", align 8
  %4 = alloca %class.scoped_refptr.474, align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.blink::FetchClientSettingsObjectSnapshot", %"class.blink::FetchClientSettingsObjectSnapshot"* %0, i64 0, i32 1
  call void @_ZNK5blink4KURL4CopyEv(%"class.blink::KURL"* nonnull sret %2, %"class.blink::KURL"* %7) #12
  %8 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %8) #12
  %9 = getelementptr inbounds %"class.blink::FetchClientSettingsObjectSnapshot", %"class.blink::FetchClientSettingsObjectSnapshot"* %0, i64 0, i32 2
  call void @_ZNK5blink4KURL4CopyEv(%"class.blink::KURL"* nonnull sret %3, %"class.blink::KURL"* %9) #12
  %10 = bitcast %class.scoped_refptr.474* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #12
  %11 = getelementptr inbounds %"class.blink::FetchClientSettingsObjectSnapshot", %"class.blink::FetchClientSettingsObjectSnapshot"* %0, i64 0, i32 3, i32 0
  %12 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %11, align 8
  %13 = call %"class.blink::SecurityOrigin"* @_ZNK5blink14SecurityOrigin12IsolatedCopyEv(%"class.blink::SecurityOrigin"* %12) #12
  %14 = getelementptr inbounds %class.scoped_refptr.474, %class.scoped_refptr.474* %4, i64 0, i32 0
  store %"class.blink::SecurityOrigin"* %13, %"class.blink::SecurityOrigin"** %14, align 8
  %15 = getelementptr inbounds %"class.blink::FetchClientSettingsObjectSnapshot", %"class.blink::FetchClientSettingsObjectSnapshot"* %0, i64 0, i32 4
  %16 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  %17 = getelementptr inbounds %"class.blink::FetchClientSettingsObjectSnapshot", %"class.blink::FetchClientSettingsObjectSnapshot"* %0, i64 0, i32 5
  %18 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"* %17) #12
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %18, %"class.WTF::StringImpl"** %19, align 8
  %20 = getelementptr inbounds %"class.blink::FetchClientSettingsObjectSnapshot", %"class.blink::FetchClientSettingsObjectSnapshot"* %0, i64 0, i32 6
  %21 = getelementptr inbounds %"class.blink::FetchClientSettingsObjectSnapshot", %"class.blink::FetchClientSettingsObjectSnapshot"* %0, i64 0, i32 7
  %22 = getelementptr inbounds %"class.blink::FetchClientSettingsObjectSnapshot", %"class.blink::FetchClientSettingsObjectSnapshot"* %0, i64 0, i32 8
  %23 = getelementptr inbounds %"class.blink::FetchClientSettingsObjectSnapshot", %"class.blink::FetchClientSettingsObjectSnapshot"* %0, i64 0, i32 9
  %24 = getelementptr inbounds %"class.blink::FetchClientSettingsObjectSnapshot", %"class.blink::FetchClientSettingsObjectSnapshot"* %0, i64 0, i32 10
  %25 = call %"struct.blink::CrossThreadFetchClientSettingsObjectData"* @_ZNSt3__111make_uniqueIN5blink40CrossThreadFetchClientSettingsObjectDataEJNS1_4KURLES3_13scoped_refptrINS1_14SecurityOriginEERKN7network5mojom14ReferrerPolicyEN3WTF6StringERKNS1_10HttpsStateERKNS1_16AllowedByNosniff13MimeTypeCheckERKNS8_14IPAddressSpaceERKNS1_5mojom21InsecureRequestPolicyERKNSC_7HashSetIjNSC_13AlreadyHashedENSC_10HashTraitsIjEENSC_18PartitionAllocatorEEEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::KURL"* nonnull dereferenceable(112) %2, %"class.blink::KURL"* nonnull dereferenceable(112) %3, %class.scoped_refptr.474* nonnull dereferenceable(8) %4, i32* dereferenceable(4) %15, %"class.WTF::String"* nonnull dereferenceable(8) %5, i32* dereferenceable(4) %20, i32* dereferenceable(4) %21, i32* dereferenceable(4) %22, i32* dereferenceable(4) %23, %"class.WTF::HashSet.523"* dereferenceable(24) %24)
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %41, label %28

28:                                               ; preds = %1
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br i1 %32, label %35, label %37

35:                                               ; preds = %28
  %36 = add i32 %34, -1
  store i32 %36, i32* %33, align 4
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %36, %35 ], [ %34, %28 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #12
  br label %41

41:                                               ; preds = %1, %37, %40
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  %42 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %14, align 8
  %43 = icmp eq %"class.blink::SecurityOrigin"* %42, null
  br i1 %43, label %51, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %42, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %45) #12
  %46 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %42, i64 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %44
  call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %42) #12
  %50 = bitcast %"class.blink::SecurityOrigin"* %42 to i8*
  call void @free(i8* %50) #12
  br label %51

51:                                               ; preds = %41, %44, %49
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #12
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %8) #12
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %6) #12
  ret %"struct.blink::CrossThreadFetchClientSettingsObjectData"* %25
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N5blink29ThreadedWorkletMessagingProxy20FetchAndInvokeScriptERKNS_4KURLEN7network5mojom15CredentialsModeERKNS_33FetchClientSettingsObjectSnapshotERNS_28WorkerResourceTimingNotifierE13scoped_refptrIN4base22SingleThreadTaskRunnerEEPNS_19WorkletPendingTasksE(%"class.blink::ThreadedWorkletMessagingProxy"*, %"class.blink::KURL"* dereferenceable(112), i32, %"class.blink::FetchClientSettingsObjectSnapshot"* dereferenceable(296), %"class.blink::WorkerResourceTimingNotifier"* dereferenceable(8), %"class.base::SingleThreadTaskRunner"*, %"class.blink::WorkletPendingTasks"*) unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %"class.blink::ThreadedWorkletMessagingProxy", %"class.blink::ThreadedWorkletMessagingProxy"* %0, i64 -1, i32 0, i32 2
  %9 = bitcast %"class.blink::CrossThreadPersistent"* %8 to %"class.blink::ThreadedWorkletMessagingProxy"*
  tail call void @_ZN5blink29ThreadedWorkletMessagingProxy20FetchAndInvokeScriptERKNS_4KURLEN7network5mojom15CredentialsModeERKNS_33FetchClientSettingsObjectSnapshotERNS_28WorkerResourceTimingNotifierE13scoped_refptrIN4base22SingleThreadTaskRunnerEEPNS_19WorkletPendingTasksE(%"class.blink::ThreadedWorkletMessagingProxy"* %9, %"class.blink::KURL"* dereferenceable(112) %1, i32 %2, %"class.blink::FetchClientSettingsObjectSnapshot"* dereferenceable(296) %3, %"class.blink::WorkerResourceTimingNotifier"* dereferenceable(8) %4, %"class.base::SingleThreadTaskRunner"* %5, %"class.blink::WorkletPendingTasks"* %6)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29ThreadedWorkletMessagingProxy22WorkletObjectDestroyedEv(%"class.blink::ThreadedWorkletMessagingProxy"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ThreadedWorkletMessagingProxy", %"class.blink::ThreadedWorkletMessagingProxy"* %0, i64 0, i32 0
  tail call void @_ZN5blink26ThreadedMessagingProxyBase21ParentObjectDestroyedEv(%"class.blink::ThreadedMessagingProxyBase"* %2) #12
  ret void
}

declare void @_ZN5blink26ThreadedMessagingProxyBase21ParentObjectDestroyedEv(%"class.blink::ThreadedMessagingProxyBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N5blink29ThreadedWorkletMessagingProxy22WorkletObjectDestroyedEv(%"class.blink::ThreadedWorkletMessagingProxy"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ThreadedWorkletMessagingProxy", %"class.blink::ThreadedWorkletMessagingProxy"* %0, i64 -1, i32 0, i32 2
  %3 = bitcast %"class.blink::CrossThreadPersistent"* %2 to %"class.blink::ThreadedMessagingProxyBase"*
  tail call void @_ZN5blink26ThreadedMessagingProxyBase21ParentObjectDestroyedEv(%"class.blink::ThreadedMessagingProxyBase"* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29ThreadedWorkletMessagingProxy27TerminateWorkletGlobalScopeEv(%"class.blink::ThreadedWorkletMessagingProxy"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ThreadedWorkletMessagingProxy", %"class.blink::ThreadedWorkletMessagingProxy"* %0, i64 0, i32 0
  tail call void @_ZN5blink26ThreadedMessagingProxyBase20TerminateGlobalScopeEv(%"class.blink::ThreadedMessagingProxyBase"* %2) #12
  ret void
}

declare void @_ZN5blink26ThreadedMessagingProxyBase20TerminateGlobalScopeEv(%"class.blink::ThreadedMessagingProxyBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N5blink29ThreadedWorkletMessagingProxy27TerminateWorkletGlobalScopeEv(%"class.blink::ThreadedWorkletMessagingProxy"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ThreadedWorkletMessagingProxy", %"class.blink::ThreadedWorkletMessagingProxy"* %0, i64 -1, i32 0, i32 2
  %3 = bitcast %"class.blink::CrossThreadPersistent"* %2 to %"class.blink::ThreadedMessagingProxyBase"*
  tail call void @_ZN5blink26ThreadedMessagingProxyBase20TerminateGlobalScopeEv(%"class.blink::ThreadedMessagingProxyBase"* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ThreadedWorkletObjectProxy"* @_ZN5blink29ThreadedWorkletMessagingProxy17CreateObjectProxyEPS0_PNS_33ParentExecutionContextTaskRunnersE(%"class.blink::ThreadedWorkletMessagingProxy"* nocapture readnone, %"class.blink::ThreadedWorkletMessagingProxy"*, %"class.blink::ParentExecutionContextTaskRunners"*) unnamed_addr #0 align 2 {
  %4 = tail call %"class.blink::ThreadedWorkletObjectProxy"* @_ZN5blink26ThreadedWorkletObjectProxy6CreateEPNS_29ThreadedWorkletMessagingProxyEPNS_33ParentExecutionContextTaskRunnersE(%"class.blink::ThreadedWorkletMessagingProxy"* %1, %"class.blink::ParentExecutionContextTaskRunners"* %2) #12
  ret %"class.blink::ThreadedWorkletObjectProxy"* %4
}

declare %"class.blink::ThreadedWorkletObjectProxy"* @_ZN5blink26ThreadedWorkletObjectProxy6CreateEPNS_29ThreadedWorkletMessagingProxyEPNS_33ParentExecutionContextTaskRunnersE(%"class.blink::ThreadedWorkletMessagingProxy"*, %"class.blink::ParentExecutionContextTaskRunners"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(40) %"class.blink::ThreadedWorkletObjectProxy"* @_ZN5blink29ThreadedWorkletMessagingProxy18WorkletObjectProxyEv(%"class.blink::ThreadedWorkletMessagingProxy"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::ThreadedWorkletMessagingProxy", %"class.blink::ThreadedWorkletMessagingProxy"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.blink::ThreadedWorkletObjectProxy"*, %"class.blink::ThreadedWorkletObjectProxy"** %2, align 8
  ret %"class.blink::ThreadedWorkletObjectProxy"* %3
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink29ThreadedWorkletMessagingProxyD2Ev(%"class.blink::ThreadedWorkletMessagingProxy"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ThreadedWorkletMessagingProxy", %"class.blink::ThreadedWorkletMessagingProxy"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*], [8 x i8*] }, { [10 x i8*], [8 x i8*] }* @_ZTVN5blink29ThreadedWorkletMessagingProxyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::ThreadedWorkletMessagingProxy", %"class.blink::ThreadedWorkletMessagingProxy"* %0, i64 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*], [8 x i8*] }, { [10 x i8*], [8 x i8*] }* @_ZTVN5blink29ThreadedWorkletMessagingProxyE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::ThreadedWorkletMessagingProxy", %"class.blink::ThreadedWorkletMessagingProxy"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %5 = load %"class.blink::ThreadedWorkletObjectProxy"*, %"class.blink::ThreadedWorkletObjectProxy"** %4, align 8
  store %"class.blink::ThreadedWorkletObjectProxy"* null, %"class.blink::ThreadedWorkletObjectProxy"** %4, align 8
  %6 = icmp eq %"class.blink::ThreadedWorkletObjectProxy"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.blink::ThreadedWorkletObjectProxy"* %5 to void (%"class.blink::ThreadedWorkletObjectProxy"*)***
  %9 = load void (%"class.blink::ThreadedWorkletObjectProxy"*)**, void (%"class.blink::ThreadedWorkletObjectProxy"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::ThreadedWorkletObjectProxy"*)*, void (%"class.blink::ThreadedWorkletObjectProxy"*)** %9, i64 1
  %11 = load void (%"class.blink::ThreadedWorkletObjectProxy"*)*, void (%"class.blink::ThreadedWorkletObjectProxy"*)** %10, align 8
  tail call void %11(%"class.blink::ThreadedWorkletObjectProxy"* nonnull %5) #12
  br label %12

12:                                               ; preds = %1, %7
  %13 = getelementptr inbounds %"class.blink::ThreadedWorkletMessagingProxy", %"class.blink::ThreadedWorkletMessagingProxy"* %0, i64 0, i32 0
  tail call void @_ZN5blink26ThreadedMessagingProxyBaseD2Ev(%"class.blink::ThreadedMessagingProxyBase"* %13) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink29ThreadedWorkletMessagingProxyD0Ev(%"class.blink::ThreadedWorkletMessagingProxy"*) unnamed_addr #3 comdat align 2 {
  tail call void @llvm.trap() #14
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn104_N5blink29ThreadedWorkletMessagingProxyD1Ev(%"class.blink::ThreadedWorkletMessagingProxy"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ThreadedWorkletMessagingProxy", %"class.blink::ThreadedWorkletMessagingProxy"* %0, i64 -1, i32 0, i32 2
  %3 = bitcast %"class.blink::CrossThreadPersistent"* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*], [8 x i8*] }, { [10 x i8*], [8 x i8*] }* @_ZTVN5blink29ThreadedWorkletMessagingProxyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %2, i64 6, i32 0, i32 1
  %5 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*], [8 x i8*] }, { [10 x i8*], [8 x i8*] }* @_ZTVN5blink29ThreadedWorkletMessagingProxyE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %2, i64 7
  %7 = bitcast %"class.blink::CrossThreadPersistent"* %6 to %"class.blink::ThreadedWorkletObjectProxy"**
  %8 = load %"class.blink::ThreadedWorkletObjectProxy"*, %"class.blink::ThreadedWorkletObjectProxy"** %7, align 8
  store %"class.blink::ThreadedWorkletObjectProxy"* null, %"class.blink::ThreadedWorkletObjectProxy"** %7, align 8
  %9 = icmp eq %"class.blink::ThreadedWorkletObjectProxy"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.blink::ThreadedWorkletObjectProxy"* %8 to void (%"class.blink::ThreadedWorkletObjectProxy"*)***
  %12 = load void (%"class.blink::ThreadedWorkletObjectProxy"*)**, void (%"class.blink::ThreadedWorkletObjectProxy"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.blink::ThreadedWorkletObjectProxy"*)*, void (%"class.blink::ThreadedWorkletObjectProxy"*)** %12, i64 1
  %14 = load void (%"class.blink::ThreadedWorkletObjectProxy"*)*, void (%"class.blink::ThreadedWorkletObjectProxy"*)** %13, align 8
  tail call void %14(%"class.blink::ThreadedWorkletObjectProxy"* nonnull %8) #12
  br label %15

15:                                               ; preds = %1, %10
  %16 = bitcast %"class.blink::CrossThreadPersistent"* %2 to %"class.blink::ThreadedMessagingProxyBase"*
  tail call void @_ZN5blink26ThreadedMessagingProxyBaseD2Ev(%"class.blink::ThreadedMessagingProxyBase"* %16) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn104_N5blink29ThreadedWorkletMessagingProxyD0Ev(%"class.blink::ThreadedWorkletMessagingProxy"*) unnamed_addr #3 comdat align 2 {
  tail call void @llvm.trap() #14
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind
declare void @_ZN7network5mojom5blink21ContentSecurityPolicyD1Ev(%"class.network::mojom::blink::ContentSecurityPolicy"*) unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17UserAgentMetadataD2Ev(%"struct.blink::UserAgentMetadata"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 5
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #13
  br label %10

10:                                               ; preds = %1, %7
  %11 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 4
  %12 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  tail call void @_ZdlPv(i8* %18) #13
  br label %19

19:                                               ; preds = %10, %16
  %20 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 3
  %21 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  tail call void @_ZdlPv(i8* %27) #13
  br label %28

28:                                               ; preds = %19, %25
  %29 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 2
  %30 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  tail call void @_ZdlPv(i8* %36) #13
  br label %37

37:                                               ; preds = %28, %34
  %38 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 1
  %39 = bitcast %"class.std::__1::basic_string"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  tail call void @_ZdlPv(i8* %45) #13
  br label %46

46:                                               ; preds = %37, %43
  %47 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 0, i32 0, i32 0
  %48 = load %"struct.blink::UserAgentBrandVersion"*, %"struct.blink::UserAgentBrandVersion"** %47, align 8
  %49 = icmp eq %"struct.blink::UserAgentBrandVersion"* %48, null
  br i1 %49, label %81, label %50

50:                                               ; preds = %46
  %51 = bitcast %"struct.blink::UserAgentBrandVersion"* %48 to i8*
  %52 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 0, i32 0, i32 1
  %53 = load %"struct.blink::UserAgentBrandVersion"*, %"struct.blink::UserAgentBrandVersion"** %52, align 8
  %54 = icmp eq %"struct.blink::UserAgentBrandVersion"* %53, %48
  br i1 %54, label %79, label %55

55:                                               ; preds = %50, %74
  %56 = phi %"struct.blink::UserAgentBrandVersion"* [ %57, %74 ], [ %53, %50 ]
  %57 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %56, i64 -1
  %58 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %56, i64 -1, i32 1
  %59 = bitcast %"class.std::__1::basic_string"* %58 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  %61 = load i8, i8* %60, align 1
  %62 = icmp slt i8 %61, 0
  br i1 %62, label %63, label %66

63:                                               ; preds = %55
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i8*, i8** %64, align 8
  tail call void @_ZdlPv(i8* %65) #13
  br label %66

66:                                               ; preds = %63, %55
  %67 = bitcast %"struct.blink::UserAgentBrandVersion"* %57 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  %69 = load i8, i8* %68, align 1
  %70 = icmp slt i8 %69, 0
  br i1 %70, label %71, label %74

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load i8*, i8** %72, align 8
  tail call void @_ZdlPv(i8* %73) #13
  br label %74

74:                                               ; preds = %71, %66
  %75 = icmp eq %"struct.blink::UserAgentBrandVersion"* %57, %48
  br i1 %75, label %76, label %55

76:                                               ; preds = %74
  %77 = bitcast %"struct.blink::UserAgentMetadata"* %0 to i8**
  %78 = load i8*, i8** %77, align 8
  br label %79

79:                                               ; preds = %76, %50
  %80 = phi i8* [ %78, %76 ], [ %51, %50 ]
  store %"struct.blink::UserAgentBrandVersion"* %48, %"struct.blink::UserAgentBrandVersion"** %52, align 8
  tail call void @_ZdlPv(i8* %80) #13
  br label %81

81:                                               ; preds = %46, %79
  ret void
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink26ThreadedWorkletObjectProxyEFvRKNS3_4KURLEN7network5mojom15CredentialsModeENSt3__110unique_ptrINS3_40CrossThreadFetchClientSettingsObjectDataENSB_14default_deleteISD_EEEEPNS3_28WorkerResourceTimingNotifierE13scoped_refptrINS_22SingleThreadTaskRunnerEEPNS3_19WorkletPendingTasksEPNS3_12WorkerThreadEEJN3WTF28CrossThreadUnretainedWrapperIS4_EES5_SA_SG_NS3_21CrossThreadPersistentISH_EESL_NSV_ISM_EENST_ISO_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to %"class.blink::KURL"*
  %8 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 15
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to i32*
  %10 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 22
  %11 = bitcast void (%"class.base::internal::BindStateBase"*)** %10 to %"class.blink::WorkerThread"**
  %12 = load %"class.blink::WorkerThread"*, %"class.blink::WorkerThread"** %11, align 8
  %13 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %16 = bitcast void ()** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds i8, i8* %5, i64 %17
  %19 = bitcast i8* %18 to %"class.blink::ThreadedWorkletObjectProxy"*
  %20 = and i64 %14, 1
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %29, label %22

22:                                               ; preds = %1
  %23 = bitcast i8* %18 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = add i64 %14, -1
  %26 = getelementptr i8, i8* %24, i64 %25
  %27 = bitcast i8* %26 to void (%"class.blink::ThreadedWorkletObjectProxy"*, %"class.blink::KURL"*, i32, %"struct.blink::CrossThreadFetchClientSettingsObjectData"*, %"class.blink::WorkerResourceTimingNotifier"*, %"class.base::SingleThreadTaskRunner"*, %"class.blink::WorkletPendingTasks"*, %"class.blink::WorkerThread"*)**
  %28 = load void (%"class.blink::ThreadedWorkletObjectProxy"*, %"class.blink::KURL"*, i32, %"struct.blink::CrossThreadFetchClientSettingsObjectData"*, %"class.blink::WorkerResourceTimingNotifier"*, %"class.base::SingleThreadTaskRunner"*, %"class.blink::WorkletPendingTasks"*, %"class.blink::WorkerThread"*)*, void (%"class.blink::ThreadedWorkletObjectProxy"*, %"class.blink::KURL"*, i32, %"struct.blink::CrossThreadFetchClientSettingsObjectData"*, %"class.blink::WorkerResourceTimingNotifier"*, %"class.base::SingleThreadTaskRunner"*, %"class.blink::WorkletPendingTasks"*, %"class.blink::WorkerThread"*)** %27, align 8
  br label %31

29:                                               ; preds = %1
  %30 = inttoptr i64 %14 to void (%"class.blink::ThreadedWorkletObjectProxy"*, %"class.blink::KURL"*, i32, %"struct.blink::CrossThreadFetchClientSettingsObjectData"*, %"class.blink::WorkerResourceTimingNotifier"*, %"class.base::SingleThreadTaskRunner"*, %"class.blink::WorkletPendingTasks"*, %"class.blink::WorkerThread"*)*
  br label %31

31:                                               ; preds = %22, %29
  %32 = phi void (%"class.blink::ThreadedWorkletObjectProxy"*, %"class.blink::KURL"*, i32, %"struct.blink::CrossThreadFetchClientSettingsObjectData"*, %"class.blink::WorkerResourceTimingNotifier"*, %"class.base::SingleThreadTaskRunner"*, %"class.blink::WorkletPendingTasks"*, %"class.blink::WorkerThread"*)* [ %28, %22 ], [ %30, %29 ]
  %33 = load i32, i32* %9, align 4
  %34 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 16
  %35 = bitcast void (%"class.base::internal::BindStateBase"*)** %34 to %"struct.blink::CrossThreadFetchClientSettingsObjectData"**
  %36 = load %"struct.blink::CrossThreadFetchClientSettingsObjectData"*, %"struct.blink::CrossThreadFetchClientSettingsObjectData"** %35, align 8
  store %"struct.blink::CrossThreadFetchClientSettingsObjectData"* null, %"struct.blink::CrossThreadFetchClientSettingsObjectData"** %35, align 8
  %37 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 17
  %38 = bitcast void (%"class.base::internal::BindStateBase"*)** %37 to %"class.blink::WorkerResourceTimingNotifier"**
  %39 = load %"class.blink::WorkerResourceTimingNotifier"*, %"class.blink::WorkerResourceTimingNotifier"** %38, align 8
  %40 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 19
  %41 = bitcast void (%"class.base::internal::BindStateBase"*)** %40 to %"class.base::SingleThreadTaskRunner"**
  %42 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %41, align 8
  store %"class.base::SingleThreadTaskRunner"* null, %"class.base::SingleThreadTaskRunner"** %41, align 8
  %43 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 20
  %44 = bitcast void (%"class.base::internal::BindStateBase"*)** %43 to %"class.blink::WorkletPendingTasks"**
  %45 = load %"class.blink::WorkletPendingTasks"*, %"class.blink::WorkletPendingTasks"** %44, align 8
  tail call void %32(%"class.blink::ThreadedWorkletObjectProxy"* %19, %"class.blink::KURL"* dereferenceable(112) %7, i32 %33, %"struct.blink::CrossThreadFetchClientSettingsObjectData"* %36, %"class.blink::WorkerResourceTimingNotifier"* %39, %"class.base::SingleThreadTaskRunner"* %42, %"class.blink::WorkletPendingTasks"* %45, %"class.blink::WorkerThread"* %12) #12
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink26ThreadedWorkletObjectProxyEFvRKNS2_4KURLEN7network5mojom15CredentialsModeENSt3__110unique_ptrINS2_40CrossThreadFetchClientSettingsObjectDataENSA_14default_deleteISC_EEEEPNS2_28WorkerResourceTimingNotifierE13scoped_refptrINS_22SingleThreadTaskRunnerEEPNS2_19WorkletPendingTasksEPNS2_12WorkerThreadEEJN3WTF28CrossThreadUnretainedWrapperIS3_EES4_S9_SF_NS2_21CrossThreadPersistentISG_EESK_NSU_ISL_EENSS_ISN_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"struct.std::__1::__tuple_impl"*
  tail call void @_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1ELm2ELm3ELm4ELm5ELm6ELm7EEEEJN3WTF28CrossThreadUnretainedWrapperIN5blink26ThreadedWorkletObjectProxyEEENS5_4KURLEN7network5mojom15CredentialsModeENS_10unique_ptrINS5_40CrossThreadFetchClientSettingsObjectDataENS_14default_deleteISD_EEEENS5_21CrossThreadPersistentINS5_28WorkerResourceTimingNotifierEEE13scoped_refptrIN4base22SingleThreadTaskRunnerEENSH_INS5_19WorkletPendingTasksEEENS4_INS5_12WorkerThreadEEEEED2Ev(%"struct.std::__1::__tuple_impl"* %5) #12
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #13
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1ELm2ELm3ELm4ELm5ELm6ELm7EEEEJN3WTF28CrossThreadUnretainedWrapperIN5blink26ThreadedWorkletObjectProxyEEENS5_4KURLEN7network5mojom15CredentialsModeENS_10unique_ptrINS5_40CrossThreadFetchClientSettingsObjectDataENS_14default_deleteISD_EEEENS5_21CrossThreadPersistentINS5_28WorkerResourceTimingNotifierEEE13scoped_refptrIN4base22SingleThreadTaskRunnerEENSH_INS5_19WorkletPendingTasksEEENS4_INS5_12WorkerThreadEEEEED2Ev(%"struct.std::__1::__tuple_impl"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %3 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %2 to i64*
  %4 = load atomic i64, i64* %3 acquire, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %20, label %6

6:                                                ; preds = %1
  %7 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #12
  %8 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %7, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %8) #12
  %9 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #12
  %10 = load atomic i64, i64* %3 monotonic, align 8
  %11 = inttoptr i64 %10 to %"class.blink::PersistentNode"*
  %12 = icmp eq i64 %10, 0
  br i1 %12, label %19, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %9, i64 0, i32 0, i32 0
  %15 = bitcast %"class.blink::CrossThreadPersistentRegion"* %9 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = inttoptr i64 %10 to i64*
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %11, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %18, align 8
  store %"class.blink::PersistentNode"* %11, %"class.blink::PersistentNode"** %14, align 8
  br label %19

19:                                               ; preds = %13, %6
  store atomic i64 0, i64* %3 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %8) #12
  br label %20

20:                                               ; preds = %1, %19
  %21 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 5, i32 0, i32 0
  %22 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %21, align 8
  %23 = icmp eq %"class.base::SingleThreadTaskRunner"* %22, null
  br i1 %23, label %32, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %22, i64 0, i32 0, i32 0, i32 1
  %26 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw sub i32* %26, i32 1 acq_rel
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %29, label %32

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %25, i64 -2
  %31 = bitcast %"class.base::RefCountedThreadSafe"* %30 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %31) #12
  br label %32

32:                                               ; preds = %20, %24, %29
  %33 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %34 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %33 to i64*
  %35 = load atomic i64, i64* %34 acquire, align 8
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %51, label %37

37:                                               ; preds = %32
  %38 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #12
  %39 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %38, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %39) #12
  %40 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #12
  %41 = load atomic i64, i64* %34 monotonic, align 8
  %42 = inttoptr i64 %41 to %"class.blink::PersistentNode"*
  %43 = icmp eq i64 %41, 0
  br i1 %43, label %50, label %44

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %40, i64 0, i32 0, i32 0
  %46 = bitcast %"class.blink::CrossThreadPersistentRegion"* %40 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = inttoptr i64 %41 to i64*
  store i64 %47, i64* %48, align 8
  %49 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %42, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %49, align 8
  store %"class.blink::PersistentNode"* %42, %"class.blink::PersistentNode"** %45, align 8
  br label %50

50:                                               ; preds = %44, %37
  store atomic i64 0, i64* %34 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %39) #12
  br label %51

51:                                               ; preds = %32, %50
  %52 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %53 = load %"struct.blink::CrossThreadFetchClientSettingsObjectData"*, %"struct.blink::CrossThreadFetchClientSettingsObjectData"** %52, align 8
  store %"struct.blink::CrossThreadFetchClientSettingsObjectData"* null, %"struct.blink::CrossThreadFetchClientSettingsObjectData"** %52, align 8
  %54 = icmp eq %"struct.blink::CrossThreadFetchClientSettingsObjectData"* %53, null
  br i1 %54, label %93, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"struct.blink::CrossThreadFetchClientSettingsObjectData", %"struct.blink::CrossThreadFetchClientSettingsObjectData"* %53, i64 0, i32 9, i32 0, i32 0
  %57 = load i32*, i32** %56, align 8
  %58 = icmp eq i32* %57, null
  br i1 %58, label %61, label %59, !prof !7

59:                                               ; preds = %55
  %60 = bitcast i32* %57 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %60) #12
  store i32* null, i32** %56, align 8
  br label %61

61:                                               ; preds = %59, %55
  %62 = getelementptr inbounds %"struct.blink::CrossThreadFetchClientSettingsObjectData", %"struct.blink::CrossThreadFetchClientSettingsObjectData"* %53, i64 0, i32 4, i32 0, i32 0
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %64, label %78, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  br i1 %69, label %72, label %74

72:                                               ; preds = %65
  %73 = add i32 %71, -1
  store i32 %73, i32* %70, align 4
  br label %74

74:                                               ; preds = %72, %65
  %75 = phi i32 [ %73, %72 ], [ %71, %65 ]
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %78

77:                                               ; preds = %74
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %63) #12
  br label %78

78:                                               ; preds = %77, %74, %61
  %79 = getelementptr inbounds %"struct.blink::CrossThreadFetchClientSettingsObjectData", %"struct.blink::CrossThreadFetchClientSettingsObjectData"* %53, i64 0, i32 2, i32 0
  %80 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %79, align 8
  %81 = icmp eq %"class.blink::SecurityOrigin"* %80, null
  br i1 %81, label %89, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %80, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %83) #12
  %84 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %80, i64 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %89

87:                                               ; preds = %82
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %80) #12
  %88 = bitcast %"class.blink::SecurityOrigin"* %80 to i8*
  tail call void @free(i8* %88) #12
  br label %89

89:                                               ; preds = %78, %82, %87
  %90 = getelementptr inbounds %"struct.blink::CrossThreadFetchClientSettingsObjectData", %"struct.blink::CrossThreadFetchClientSettingsObjectData"* %53, i64 0, i32 1
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %90) #12
  %91 = getelementptr inbounds %"struct.blink::CrossThreadFetchClientSettingsObjectData", %"struct.blink::CrossThreadFetchClientSettingsObjectData"* %53, i64 0, i32 0
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %91) #12
  %92 = getelementptr inbounds %"struct.blink::CrossThreadFetchClientSettingsObjectData", %"struct.blink::CrossThreadFetchClientSettingsObjectData"* %53, i64 0, i32 0, i32 0
  tail call void @free(i8* %92) #12
  br label %93

93:                                               ; preds = %51, %89
  %94 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 1, i32 0, i32 0
  %95 = bitcast i8* %94 to %"class.blink::KURL"*
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %95) #12
  ret void
}

declare void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #1

declare dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() local_unnamed_addr #1

declare void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_28WorkerResourceTimingNotifierELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase.2599"*, %"class.blink::WorkerResourceTimingNotifier"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PersistentBase.2599", %"class.blink::PersistentBase.2599"* %0, i64 0, i32 0
  store %"class.blink::WorkerResourceTimingNotifier"* %1, %"class.blink::WorkerResourceTimingNotifier"** %3, align 8
  %4 = ptrtoint %"class.blink::WorkerResourceTimingNotifier"* %1 to i64
  switch i64 %4, label %5 [
    i64 0, label %29
    i64 -1, label %29
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::PersistentBase.2599", %"class.blink::PersistentBase.2599"* %0, i64 0, i32 1
  %7 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %6 to i64*
  %8 = load atomic i64, i64* %7 acquire, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %46

10:                                               ; preds = %5
  %11 = bitcast %"class.blink::PersistentBase.2599"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  switch i64 %12, label %13 [
    i64 0, label %46
    i64 -1, label %46
  ]

13:                                               ; preds = %10
  %14 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #12
  %15 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %14, i64 0, i32 0, i32 0
  %16 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %15, align 8
  %17 = icmp eq %"class.blink::PersistentNode"* %16, null
  br i1 %17, label %18, label %21, !prof !3

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %14, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %19) #12
  %20 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %15, align 8
  br label %21

21:                                               ; preds = %18, %13
  %22 = phi %"class.blink::PersistentNode"* [ %20, %18 ], [ %16, %13 ]
  %23 = bitcast %"class.blink::PersistentNode"* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::CrossThreadPersistentRegion"* %14 to i64*
  store i64 %24, i64* %25, align 8
  %26 = bitcast %"class.blink::PersistentNode"* %22 to %"class.blink::PersistentBase.2599"**
  store %"class.blink::PersistentBase.2599"* %0, %"class.blink::PersistentBase.2599"** %26, align 8
  %27 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %22, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_28WorkerResourceTimingNotifierELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %27, align 8
  %28 = ptrtoint %"class.blink::PersistentNode"* %22 to i64
  store atomic i64 %28, i64* %7 release, align 8
  br label %46

29:                                               ; preds = %2, %2
  %30 = getelementptr inbounds %"class.blink::PersistentBase.2599", %"class.blink::PersistentBase.2599"* %0, i64 0, i32 1
  %31 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %30 to i64*
  %32 = load atomic i64, i64* %31 acquire, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %46, label %34

34:                                               ; preds = %29
  %35 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #12
  %36 = load atomic i64, i64* %31 monotonic, align 8
  %37 = inttoptr i64 %36 to %"class.blink::PersistentNode"*
  %38 = icmp eq i64 %36, 0
  br i1 %38, label %45, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %35, i64 0, i32 0, i32 0
  %41 = bitcast %"class.blink::CrossThreadPersistentRegion"* %35 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = inttoptr i64 %36 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %37, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %44, align 8
  store %"class.blink::PersistentNode"* %37, %"class.blink::PersistentNode"** %40, align 8
  br label %45

45:                                               ; preds = %39, %34
  store atomic i64 0, i64* %31 release, align 8
  br label %46

46:                                               ; preds = %5, %45, %29, %21, %10, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_28WorkerResourceTimingNotifierELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::WorkerResourceTimingNotifier"**
  %5 = load %"class.blink::WorkerResourceTimingNotifier"*, %"class.blink::WorkerResourceTimingNotifier"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #12
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #12
  %7 = icmp eq %"class.blink::WorkerResourceTimingNotifier"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::WorkerResourceTimingNotifier"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_28WorkerResourceTimingNotifierEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #12
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #12
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_28WorkerResourceTimingNotifierEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::WorkerResourceTimingNotifier"*
  %4 = bitcast i8* %1 to void (%"class.blink::WorkerResourceTimingNotifier"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::WorkerResourceTimingNotifier"*, %"class.blink::Visitor"*)**, void (%"class.blink::WorkerResourceTimingNotifier"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::WorkerResourceTimingNotifier"*, %"class.blink::Visitor"*)*, void (%"class.blink::WorkerResourceTimingNotifier"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::WorkerResourceTimingNotifier"*, %"class.blink::Visitor"*)*, void (%"class.blink::WorkerResourceTimingNotifier"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::WorkerResourceTimingNotifier"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

declare dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() local_unnamed_addr #1

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #1

declare void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_19WorkletPendingTasksELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase.2601"*, %"class.blink::WorkletPendingTasks"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PersistentBase.2601", %"class.blink::PersistentBase.2601"* %0, i64 0, i32 0
  store %"class.blink::WorkletPendingTasks"* %1, %"class.blink::WorkletPendingTasks"** %3, align 8
  %4 = ptrtoint %"class.blink::WorkletPendingTasks"* %1 to i64
  switch i64 %4, label %5 [
    i64 0, label %29
    i64 -1, label %29
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::PersistentBase.2601", %"class.blink::PersistentBase.2601"* %0, i64 0, i32 1
  %7 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %6 to i64*
  %8 = load atomic i64, i64* %7 acquire, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %46

10:                                               ; preds = %5
  %11 = bitcast %"class.blink::PersistentBase.2601"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  switch i64 %12, label %13 [
    i64 0, label %46
    i64 -1, label %46
  ]

13:                                               ; preds = %10
  %14 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #12
  %15 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %14, i64 0, i32 0, i32 0
  %16 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %15, align 8
  %17 = icmp eq %"class.blink::PersistentNode"* %16, null
  br i1 %17, label %18, label %21, !prof !3

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %14, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %19) #12
  %20 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %15, align 8
  br label %21

21:                                               ; preds = %18, %13
  %22 = phi %"class.blink::PersistentNode"* [ %20, %18 ], [ %16, %13 ]
  %23 = bitcast %"class.blink::PersistentNode"* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::CrossThreadPersistentRegion"* %14 to i64*
  store i64 %24, i64* %25, align 8
  %26 = bitcast %"class.blink::PersistentNode"* %22 to %"class.blink::PersistentBase.2601"**
  store %"class.blink::PersistentBase.2601"* %0, %"class.blink::PersistentBase.2601"** %26, align 8
  %27 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %22, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_19WorkletPendingTasksELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %27, align 8
  %28 = ptrtoint %"class.blink::PersistentNode"* %22 to i64
  store atomic i64 %28, i64* %7 release, align 8
  br label %46

29:                                               ; preds = %2, %2
  %30 = getelementptr inbounds %"class.blink::PersistentBase.2601", %"class.blink::PersistentBase.2601"* %0, i64 0, i32 1
  %31 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %30 to i64*
  %32 = load atomic i64, i64* %31 acquire, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %46, label %34

34:                                               ; preds = %29
  %35 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #12
  %36 = load atomic i64, i64* %31 monotonic, align 8
  %37 = inttoptr i64 %36 to %"class.blink::PersistentNode"*
  %38 = icmp eq i64 %36, 0
  br i1 %38, label %45, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %35, i64 0, i32 0, i32 0
  %41 = bitcast %"class.blink::CrossThreadPersistentRegion"* %35 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = inttoptr i64 %36 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %37, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %44, align 8
  store %"class.blink::PersistentNode"* %37, %"class.blink::PersistentNode"** %40, align 8
  br label %45

45:                                               ; preds = %39, %34
  store atomic i64 0, i64* %31 release, align 8
  br label %46

46:                                               ; preds = %5, %45, %29, %21, %10, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_19WorkletPendingTasksELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::WorkletPendingTasks"**
  %5 = load %"class.blink::WorkletPendingTasks"*, %"class.blink::WorkletPendingTasks"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #12
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #12
  %7 = icmp eq %"class.blink::WorkletPendingTasks"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::WorkletPendingTasks"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_19WorkletPendingTasksEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #12
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_19WorkletPendingTasksEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::WorkletPendingTasks"*
  tail call void @_ZNK5blink19WorkletPendingTasks5TraceEPNS_7VisitorE(%"class.blink::WorkletPendingTasks"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

declare void @_ZNK5blink19WorkletPendingTasks5TraceEPNS_7VisitorE(%"class.blink::WorkletPendingTasks"*, %"class.blink::Visitor"*) unnamed_addr #1

declare void @_ZNK5blink4KURL4CopyEv(%"class.blink::KURL"* sret, %"class.blink::KURL"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::CrossThreadFetchClientSettingsObjectData"* @_ZNSt3__111make_uniqueIN5blink40CrossThreadFetchClientSettingsObjectDataEJNS1_4KURLES3_13scoped_refptrINS1_14SecurityOriginEERKN7network5mojom14ReferrerPolicyEN3WTF6StringERKNS1_10HttpsStateERKNS1_16AllowedByNosniff13MimeTypeCheckERKNS8_14IPAddressSpaceERKNS1_5mojom21InsecureRequestPolicyERKNSC_7HashSetIjNSC_13AlreadyHashedENSC_10HashTraitsIjEENSC_18PartitionAllocatorEEEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::KURL"* dereferenceable(112), %"class.blink::KURL"* dereferenceable(112), %class.scoped_refptr.474* dereferenceable(8), i32* dereferenceable(4), %"class.WTF::String"* dereferenceable(8), i32* dereferenceable(4), i32* dereferenceable(4), i32* dereferenceable(4), i32* dereferenceable(4), %"class.WTF::HashSet.523"* dereferenceable(24)) local_unnamed_addr #3 comdat {
  %11 = alloca %"class.blink::KURL", align 8
  %12 = alloca %"class.blink::KURL", align 8
  %13 = alloca %"class.WTF::HashSet.523", align 8
  %14 = tail call noalias i8* @malloc(i64 288) #12
  %15 = bitcast i8* %14 to %"struct.blink::CrossThreadFetchClientSettingsObjectData"*
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %11, %"class.blink::KURL"* dereferenceable(112) %0) #12
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %12, %"class.blink::KURL"* dereferenceable(112) %1) #12
  %16 = getelementptr inbounds %class.scoped_refptr.474, %class.scoped_refptr.474* %2, i64 0, i32 0
  %17 = bitcast %class.scoped_refptr.474* %2 to i64*
  %18 = load i64, i64* %17, align 8
  store %"class.blink::SecurityOrigin"* null, %"class.blink::SecurityOrigin"** %16, align 8
  %19 = load i32, i32* %3, align 4
  %20 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %21 = bitcast %"class.WTF::String"* %4 to i64*
  %22 = load i64, i64* %21, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %20, align 8
  %23 = load i32, i32* %5, align 4
  %24 = load i32, i32* %6, align 4
  %25 = load i32, i32* %7, align 4
  %26 = load i32, i32* %8, align 4
  %27 = getelementptr inbounds %"class.WTF::HashSet.523", %"class.WTF::HashSet.523"* %13, i64 0, i32 0
  %28 = getelementptr inbounds %"class.WTF::HashSet.523", %"class.WTF::HashSet.523"* %9, i64 0, i32 0, i32 2
  %29 = bitcast %"class.WTF::HashSet.523"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 0, i64 20, i1 false) #12
  %30 = load i32, i32* %28, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %69, label %32

32:                                               ; preds = %10
  call void @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.524"* nonnull %27, i32 %30) #12
  %33 = load i32, i32* %28, align 4
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::HashSet.523", %"class.WTF::HashSet.523"* %9, i64 0, i32 0, i32 0
  %36 = load i32*, i32** %35, align 8
  %37 = getelementptr inbounds %"class.WTF::HashSet.523", %"class.WTF::HashSet.523"* %9, i64 0, i32 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i32, i32* %36, i64 %39
  br i1 %34, label %69, label %41

41:                                               ; preds = %32
  %42 = icmp eq i32 %38, 0
  br i1 %42, label %51, label %43

43:                                               ; preds = %41, %48
  %44 = phi i32* [ %49, %48 ], [ %36, %41 ]
  %45 = load i32, i32* %44, align 4
  %46 = add i32 %45, 1
  %47 = icmp ult i32 %46, 2
  br i1 %47, label %48, label %51

48:                                               ; preds = %43
  %49 = getelementptr inbounds i32, i32* %44, i64 1
  %50 = icmp eq i32* %49, %40
  br i1 %50, label %69, label %43

51:                                               ; preds = %43, %41
  %52 = phi i32* [ %36, %41 ], [ %44, %43 ]
  %53 = icmp eq i32* %52, %40
  br i1 %53, label %69, label %54

54:                                               ; preds = %51, %67
  %55 = phi i32* [ %60, %67 ], [ %52, %51 ]
  %56 = call { i32*, i8 } @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS2_S4_S5_EERKjSB_EENS_18HashTableAddResultIS6_jEEOT0_OT1_(%"class.WTF::HashTable.524"* nonnull %27, i32* dereferenceable(4) %55, i32* dereferenceable(4) %55) #12
  %57 = getelementptr inbounds i32, i32* %55, i64 1
  %58 = icmp eq i32* %57, %40
  br i1 %58, label %69, label %59

59:                                               ; preds = %54, %64
  %60 = phi i32* [ %65, %64 ], [ %57, %54 ]
  %61 = load i32, i32* %60, align 4
  %62 = add i32 %61, 1
  %63 = icmp ult i32 %62, 2
  br i1 %63, label %64, label %67

64:                                               ; preds = %59
  %65 = getelementptr inbounds i32, i32* %60, i64 1
  %66 = icmp eq i32* %65, %40
  br i1 %66, label %69, label %59

67:                                               ; preds = %59
  %68 = icmp eq i32* %60, %40
  br i1 %68, label %69, label %54

69:                                               ; preds = %48, %67, %54, %64, %51, %32, %10
  %70 = bitcast i8* %14 to %"class.blink::KURL"*
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %70, %"class.blink::KURL"* nonnull dereferenceable(112) %11) #12
  %71 = getelementptr inbounds i8, i8* %14, i64 112
  %72 = bitcast i8* %71 to %"class.blink::KURL"*
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %72, %"class.blink::KURL"* nonnull dereferenceable(112) %12) #12
  %73 = getelementptr inbounds i8, i8* %14, i64 224
  %74 = bitcast i8* %73 to i64*
  store i64 %18, i64* %74, align 8
  %75 = getelementptr inbounds i8, i8* %14, i64 232
  %76 = bitcast i8* %75 to i32*
  store i32 %19, i32* %76, align 8
  %77 = getelementptr inbounds i8, i8* %14, i64 240
  %78 = bitcast i8* %77 to i64*
  store i64 %22, i64* %78, align 8
  %79 = getelementptr inbounds i8, i8* %14, i64 248
  %80 = bitcast i8* %79 to i32*
  store i32 %23, i32* %80, align 8
  %81 = getelementptr inbounds i8, i8* %14, i64 252
  %82 = bitcast i8* %81 to i32*
  store i32 %24, i32* %82, align 4
  %83 = getelementptr inbounds i8, i8* %14, i64 256
  %84 = bitcast i8* %83 to i32*
  store i32 %25, i32* %84, align 8
  %85 = getelementptr inbounds i8, i8* %14, i64 260
  %86 = bitcast i8* %85 to i32*
  store i32 %26, i32* %86, align 4
  %87 = getelementptr inbounds i8, i8* %14, i64 264
  %88 = getelementptr inbounds i8, i8* %14, i64 272
  %89 = bitcast i8* %88 to i32*
  %90 = getelementptr inbounds i8, i8* %14, i64 276
  %91 = bitcast i8* %90 to i32*
  %92 = getelementptr inbounds i8, i8* %14, i64 280
  %93 = bitcast i8* %92 to i32*
  %94 = bitcast %"class.WTF::HashSet.523"* %13 to i64*
  %95 = bitcast i8* %87 to i64*
  store i64 0, i64* %95, align 8
  %96 = load i64, i64* %94, align 8
  %97 = bitcast i8* %87 to i64*
  store atomic i64 0, i64* %94 monotonic, align 8
  store atomic i64 %96, i64* %97 monotonic, align 8
  %98 = getelementptr inbounds %"class.WTF::HashSet.523", %"class.WTF::HashSet.523"* %13, i64 0, i32 0, i32 1
  %99 = load i32, i32* %98, align 8
  store i32 %99, i32* %89, align 4
  store i32 0, i32* %98, align 8
  %100 = getelementptr inbounds %"class.WTF::HashSet.523", %"class.WTF::HashSet.523"* %13, i64 0, i32 0, i32 2
  %101 = load i32, i32* %100, align 4
  store i32 %101, i32* %91, align 4
  store i32 0, i32* %100, align 4
  %102 = getelementptr inbounds %"class.WTF::HashSet.523", %"class.WTF::HashSet.523"* %13, i64 0, i32 0, i32 3
  %103 = load i32, i32* %102, align 8
  %104 = and i32 %103, 2147483647
  store i32 %104, i32* %93, align 8
  %105 = and i32 %103, -2147483648
  store i32 %105, i32* %102, align 8
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %12) #12
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %11) #12
  ret %"struct.blink::CrossThreadFetchClientSettingsObjectData"* %15
}

declare %"class.blink::SecurityOrigin"* @_ZNK5blink14SecurityOrigin12IsolatedCopyEv(%"class.blink::SecurityOrigin"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.524"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %2, %5
  %6 = phi i32 [ %9, %5 ], [ %1, %2 ]
  %7 = phi i32 [ %8, %5 ], [ %1, %2 ]
  %8 = or i32 %7, %6
  %9 = lshr i32 %6, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %5

11:                                               ; preds = %5
  %12 = shl i32 %8, 1
  %13 = add i32 %12, 2
  %14 = icmp ugt i32 %13, 8
  %15 = select i1 %14, i32 %13, i32 8
  br label %16

16:                                               ; preds = %11, %2
  %17 = phi i32 [ 8, %2 ], [ %15, %11 ]
  %18 = getelementptr inbounds %"class.WTF::HashTable.524", %"class.WTF::HashTable.524"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp ugt i32 %17, %19
  br i1 %20, label %21, label %32

21:                                               ; preds = %16
  %22 = icmp slt i32 %17, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %21
  %24 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i64 0, i64 0)) #12
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #12
  br label %26

26:                                               ; preds = %21, %23
  %27 = zext i32 %17 to i64
  %28 = shl nuw nsw i64 %27, 2
  %29 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv, i64 0, i64 0)) #12
  call void @llvm.memset.p0i8.i64(i8* align 1 %29, i8 0, i64 %28, i1 false) #12
  %30 = bitcast i8* %29 to i32*
  %31 = call i32* @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE8RehashToEPjjS7_(%"class.WTF::HashTable.524"* %0, i32* %30, i32 %17, i32* null) #12
  br label %32

32:                                               ; preds = %26, %16
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE8RehashToEPjjS7_(%"class.WTF::HashTable.524"*, i32*, i32, i32*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i32* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.524", %"class.WTF::HashTable.524"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.524", %"class.WTF::HashTable.524"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.524"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load i32*, i32** %9, align 8
  %17 = ptrtoint i32* %16 to i64
  br label %31

18:                                               ; preds = %99
  %19 = bitcast %"class.WTF::HashTable.524"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %100, %18 ]
  %23 = phi i32* [ null, %10 ], [ %103, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #12
  br label %27

27:                                               ; preds = %20, %25
  %28 = getelementptr inbounds %"class.WTF::HashTable.524", %"class.WTF::HashTable.524"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, -2147483648
  store i32 %30, i32* %28, align 8
  ret i32* %23

31:                                               ; preds = %13, %99
  %32 = phi i64 [ %17, %13 ], [ %100, %99 ]
  %33 = phi i32 [ %7, %13 ], [ %101, %99 ]
  %34 = phi i32* [ %16, %13 ], [ %102, %99 ]
  %35 = phi i32* [ null, %13 ], [ %103, %99 ]
  %36 = phi i32 [ 0, %13 ], [ %104, %99 ]
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds i32, i32* %34, i64 %37
  %39 = load i32, i32* %38, align 4
  %40 = add i32 %39, 1
  %41 = icmp ult i32 %40, 2
  br i1 %41, label %99, label %42

42:                                               ; preds = %31
  %43 = and i32 %39, %14
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds i32, i32* %1, i64 %44
  %46 = ptrtoint i32* %45 to i64
  %47 = load i32, i32* %45, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %66, label %49

49:                                               ; preds = %42
  %50 = xor i32 %39, -1
  %51 = lshr i32 %39, 23
  %52 = add i32 %51, %50
  %53 = shl i32 %52, 12
  %54 = xor i32 %53, %52
  %55 = lshr i32 %54, 7
  %56 = xor i32 %55, %54
  %57 = shl i32 %56, 2
  %58 = xor i32 %57, %56
  %59 = lshr i32 %58, 20
  %60 = xor i32 %59, %58
  %61 = or i32 %60, 1
  %62 = zext i32 %61 to i64
  br label %72

63:                                               ; preds = %79
  %64 = ptrtoint i32* %86 to i64
  %65 = inttoptr i64 %81 to i32*
  br label %66

66:                                               ; preds = %63, %42
  %67 = phi i64 [ %64, %63 ], [ %46, %42 ]
  %68 = phi i32* [ %65, %63 ], [ null, %42 ]
  %69 = icmp eq i32* %68, null
  %70 = ptrtoint i32* %68 to i64
  %71 = select i1 %69, i64 %67, i64 %70
  br label %90

72:                                               ; preds = %79, %49
  %73 = phi i64 [ 0, %49 ], [ %81, %79 ]
  %74 = phi i32 [ %47, %49 ], [ %88, %79 ]
  %75 = phi i64 [ %46, %49 ], [ %87, %79 ]
  %76 = phi i64 [ %44, %49 ], [ %85, %79 ]
  %77 = phi i64 [ 0, %49 ], [ %83, %79 ]
  %78 = icmp eq i32 %74, %39
  br i1 %78, label %90, label %79

79:                                               ; preds = %72
  %80 = icmp eq i32 %74, -1
  %81 = select i1 %80, i64 %75, i64 %73
  %82 = icmp eq i64 %77, 0
  %83 = select i1 %82, i64 %62, i64 %77
  %84 = add i64 %83, %76
  %85 = and i64 %84, %15
  %86 = getelementptr inbounds i32, i32* %1, i64 %85
  %87 = ptrtoint i32* %86 to i64
  %88 = load i32, i32* %86, align 4
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %63, label %72

90:                                               ; preds = %72, %66
  %91 = phi i64 [ %71, %66 ], [ %75, %72 ]
  %92 = inttoptr i64 %91 to i32*
  store i32 %39, i32* %92, align 4
  %93 = load i32*, i32** %9, align 8
  %94 = getelementptr inbounds i32, i32* %93, i64 %37
  %95 = icmp eq i32* %94, %3
  %96 = select i1 %95, i32* %92, i32* %35
  %97 = load i32, i32* %6, align 8
  %98 = ptrtoint i32* %93 to i64
  br label %99

99:                                               ; preds = %31, %90
  %100 = phi i64 [ %32, %31 ], [ %98, %90 ]
  %101 = phi i32 [ %33, %31 ], [ %97, %90 ]
  %102 = phi i32* [ %34, %31 ], [ %93, %90 ]
  %103 = phi i32* [ %35, %31 ], [ %96, %90 ]
  %104 = add i32 %36, 1
  %105 = icmp eq i32 %104, %101
  br i1 %105, label %18, label %31
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i32*, i8 } @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS2_S4_S5_EERKjSB_EENS_18HashTableAddResultIS6_jEEOT0_OT1_(%"class.WTF::HashTable.524"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.524", %"class.WTF::HashTable.524"* %0, i64 0, i32 0
  %5 = load i32*, i32** %4, align 8
  %6 = icmp eq i32* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call i32* @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE6ExpandEPj(%"class.WTF::HashTable.524"* %0, i32* null)
  %9 = load i32*, i32** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi i32* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.524", %"class.WTF::HashTable.524"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = and i32 %16, %14
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds i32, i32* %11, i64 %18
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %62, label %22

22:                                               ; preds = %10
  %23 = xor i32 %16, -1
  %24 = lshr i32 %16, 23
  %25 = add i32 %24, %23
  %26 = shl i32 %25, 12
  %27 = xor i32 %26, %25
  %28 = lshr i32 %27, 7
  %29 = xor i32 %28, %27
  %30 = shl i32 %29, 2
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 20
  %33 = xor i32 %32, %31
  %34 = or i32 %33, 1
  %35 = zext i32 %34 to i64
  br label %36

36:                                               ; preds = %22, %43
  %37 = phi i32 [ %20, %22 ], [ %51, %43 ]
  %38 = phi i32* [ %19, %22 ], [ %50, %43 ]
  %39 = phi i32* [ null, %22 ], [ %45, %43 ]
  %40 = phi i64 [ %18, %22 ], [ %49, %43 ]
  %41 = phi i64 [ 0, %22 ], [ %47, %43 ]
  %42 = icmp eq i32 %37, %16
  br i1 %42, label %76, label %43

43:                                               ; preds = %36
  %44 = icmp eq i32 %37, -1
  %45 = select i1 %44, i32* %38, i32* %39
  %46 = icmp eq i64 %41, 0
  %47 = select i1 %46, i64 %35, i64 %41
  %48 = add i64 %47, %40
  %49 = and i64 %48, %15
  %50 = getelementptr inbounds i32, i32* %11, i64 %49
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %36

53:                                               ; preds = %43
  %54 = icmp eq i32* %45, null
  br i1 %54, label %62, label %55

55:                                               ; preds = %53
  store i32 0, i32* %45, align 4
  %56 = getelementptr inbounds %"class.WTF::HashTable.524", %"class.WTF::HashTable.524"* %0, i64 0, i32 3
  %57 = load i32, i32* %56, align 8
  %58 = add i32 %57, 2147483647
  %59 = and i32 %58, 2147483647
  %60 = and i32 %57, -2147483648
  %61 = or i32 %59, %60
  store i32 %61, i32* %56, align 8
  br label %62

62:                                               ; preds = %10, %53, %55
  %63 = phi i32* [ %45, %55 ], [ %50, %53 ], [ %19, %10 ]
  %64 = load i32, i32* %2, align 4
  store i32 %64, i32* %63, align 4
  %65 = getelementptr inbounds %"class.WTF::HashTable.524", %"class.WTF::HashTable.524"* %0, i64 0, i32 2
  %66 = load i32, i32* %65, align 4
  %67 = add i32 %66, 1
  store i32 %67, i32* %65, align 4
  %68 = getelementptr inbounds %"class.WTF::HashTable.524", %"class.WTF::HashTable.524"* %0, i64 0, i32 3
  %69 = load i32, i32* %68, align 8
  %70 = add i32 %69, %67
  %71 = shl i32 %70, 1
  %72 = load i32, i32* %12, align 8
  %73 = icmp ult i32 %71, %72
  br i1 %73, label %76, label %74

74:                                               ; preds = %62
  %75 = tail call i32* @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE6ExpandEPj(%"class.WTF::HashTable.524"* %0, i32* %63)
  br label %76

76:                                               ; preds = %36, %62, %74
  %77 = phi i8 [ 1, %62 ], [ 1, %74 ], [ 0, %36 ]
  %78 = phi i32* [ %63, %62 ], [ %75, %74 ], [ %38, %36 ]
  %79 = insertvalue { i32*, i8 } undef, i32* %78, 0
  %80 = insertvalue { i32*, i8 } %79, i8 %77, 1
  ret { i32*, i8 } %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE6ExpandEPj(%"class.WTF::HashTable.524"*, i32*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.524", %"class.WTF::HashTable.524"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.524", %"class.WTF::HashTable.524"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #12
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i8* %22, i8* %23) #12
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #12
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #12
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 2
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv, i64 0, i64 0)) #12
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #12
  %36 = bitcast i8* %35 to i32*
  %37 = call i32* @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE8RehashToEPjjS7_(%"class.WTF::HashTable.524"* %0, i32* %36, i32 %32, i32* %1) #12
  ret i32* %37
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 13, i32 0
  %3 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %2, align 8
  %4 = icmp eq %"class.blink::SecurityOrigin"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #12
  %7 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %3) #12
  %11 = bitcast %"class.blink::SecurityOrigin"* %3 to i8*
  tail call void @free(i8* %11) #12
  br label %12

12:                                               ; preds = %5, %10, %1
  %13 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 3, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #12
  br label %29

29:                                               ; preds = %12, %25, %28
  %30 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 2, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #12
  br label %46

46:                                               ; preds = %29, %42, %45
  %47 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 1, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #12
  br label %63

63:                                               ; preds = %46, %59, %62
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN5blink26ThreadedMessagingProxyBaseD2Ev(%"class.blink::ThreadedMessagingProxyBase"*) unnamed_addr #7

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo11CloneTraitsIN3WTF6VectorINS_9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKSA_(%"class.WTF::Vector.554"* noalias sret, %"class.WTF::Vector.554"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.mojo::StructPtr.557", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.554", %"class.WTF::Vector.554"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.WTF::Vector.554", %"class.WTF::Vector.554"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::Vector.554", %"class.WTF::Vector.554"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.WTF::Vector.554"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #12
  %8 = getelementptr inbounds %"class.WTF::Vector.554", %"class.WTF::Vector.554"* %1, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %57, label %11, !prof !3

11:                                               ; preds = %2
  %12 = zext i32 %9 to i64
  %13 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEmm(i64 %12) #12
  %14 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %13, i8* getelementptr inbounds ([109 x i8], [109 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEPKcv, i64 0, i64 0)) #12
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast %"class.WTF::Vector.554"* %0 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = lshr i64 %13, 3
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %5, align 8
  %19 = load i32, i32* %8, align 4
  %20 = getelementptr inbounds %"class.WTF::Vector.554", %"class.WTF::Vector.554"* %1, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.mojo::StructPtr.557"*, %"class.mojo::StructPtr.557"** %20, align 8
  %22 = zext i32 %19 to i64
  %23 = getelementptr inbounds %"class.mojo::StructPtr.557", %"class.mojo::StructPtr.557"* %21, i64 %22
  %24 = icmp eq i32 %19, 0
  br i1 %24, label %57, label %25

25:                                               ; preds = %11
  %26 = bitcast %"class.mojo::StructPtr.557"* %3 to i8*
  %27 = bitcast %"class.mojo::StructPtr.557"* %3 to i64*
  %28 = getelementptr inbounds %"class.mojo::StructPtr.557", %"class.mojo::StructPtr.557"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %29

29:                                               ; preds = %25, %54
  %30 = phi %"class.mojo::StructPtr.557"* [ %21, %25 ], [ %55, %54 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #12
  %31 = getelementptr inbounds %"class.mojo::StructPtr.557", %"class.mojo::StructPtr.557"* %30, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load %"class.network::mojom::blink::ContentSecurityPolicy"*, %"class.network::mojom::blink::ContentSecurityPolicy"** %31, align 8, !noalias !34
  %33 = icmp eq %"class.network::mojom::blink::ContentSecurityPolicy"* %32, null
  br i1 %33, label %34, label %35

34:                                               ; preds = %29
  store i64 0, i64* %27, align 8, !alias.scope !34
  br label %36

35:                                               ; preds = %29
  call void @_ZNK7network5mojom5blink21ContentSecurityPolicy5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.557"* nonnull sret %3, %"class.network::mojom::blink::ContentSecurityPolicy"* nonnull %32) #12
  br label %36

36:                                               ; preds = %34, %35
  %37 = load i32, i32* %6, align 4
  %38 = load i32, i32* %5, align 8
  %39 = icmp eq i32 %37, %38
  br i1 %39, label %49, label %40, !prof !3

40:                                               ; preds = %36
  %41 = load %"class.mojo::StructPtr.557"*, %"class.mojo::StructPtr.557"** %4, align 8
  %42 = zext i32 %37 to i64
  %43 = getelementptr inbounds %"class.mojo::StructPtr.557", %"class.mojo::StructPtr.557"* %41, i64 %42
  %44 = bitcast %"class.mojo::StructPtr.557"* %43 to i64*
  %45 = getelementptr inbounds %"class.mojo::StructPtr.557", %"class.mojo::StructPtr.557"* %43, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %45, align 8
  %46 = load i64, i64* %27, align 8
  store i64 %46, i64* %44, align 8
  %47 = load i32, i32* %6, align 4
  %48 = add i32 %47, 1
  store i32 %48, i32* %6, align 4
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %28, align 8
  br label %54

49:                                               ; preds = %36
  call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.554"* %0, %"class.mojo::StructPtr.557"* nonnull dereferenceable(8) %3) #12
  %50 = load %"class.network::mojom::blink::ContentSecurityPolicy"*, %"class.network::mojom::blink::ContentSecurityPolicy"** %28, align 8
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %28, align 8
  %51 = icmp eq %"class.network::mojom::blink::ContentSecurityPolicy"* %50, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %49
  %53 = bitcast %"class.network::mojom::blink::ContentSecurityPolicy"* %50 to i8*
  call void @_ZN7network5mojom5blink21ContentSecurityPolicyD1Ev(%"class.network::mojom::blink::ContentSecurityPolicy"* nonnull %50) #12
  call void @_ZdlPv(i8* %53) #13
  br label %54

54:                                               ; preds = %40, %49, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #12
  %55 = getelementptr inbounds %"class.mojo::StructPtr.557", %"class.mojo::StructPtr.557"* %30, i64 1
  %56 = icmp eq %"class.mojo::StructPtr.557"* %55, %23
  br i1 %56, label %57, label %29

57:                                               ; preds = %54, %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.554"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %72

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.554", %"class.WTF::Vector.554"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.mojo::StructPtr.557"*, %"class.mojo::StructPtr.557"** %5, align 8
  %7 = bitcast %"class.mojo::StructPtr.557"* %6 to i8*
  %8 = getelementptr inbounds %"class.WTF::Vector.554", %"class.WTF::Vector.554"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.557", %"class.mojo::StructPtr.557"* %6, i64 %10
  %12 = bitcast %"class.WTF::Vector.554"* %0 to i64*
  store atomic i64 0, i64* %12 monotonic, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector.554", %"class.WTF::Vector.554"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %13, align 8
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %71, label %15

15:                                               ; preds = %4
  %16 = shl nuw nsw i64 %10, 3
  %17 = add nsw i64 %16, -8
  %18 = lshr exact i64 %17, 3
  %19 = add nuw nsw i64 %18, 1
  %20 = and i64 %19, 3
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %35, label %22

22:                                               ; preds = %15, %22
  %23 = phi %"class.mojo::StructPtr.557"* [ %32, %22 ], [ %6, %15 ]
  %24 = phi %"class.mojo::StructPtr.557"* [ %31, %22 ], [ null, %15 ]
  %25 = phi i64 [ %33, %22 ], [ %20, %15 ]
  %26 = bitcast %"class.mojo::StructPtr.557"* %24 to i64*
  %27 = getelementptr inbounds %"class.mojo::StructPtr.557", %"class.mojo::StructPtr.557"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %27, align 8
  %28 = bitcast %"class.mojo::StructPtr.557"* %23 to i64*
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %26, align 8
  %30 = getelementptr inbounds %"class.mojo::StructPtr.557", %"class.mojo::StructPtr.557"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %30, align 8
  %31 = getelementptr inbounds %"class.mojo::StructPtr.557", %"class.mojo::StructPtr.557"* %24, i64 1
  %32 = getelementptr inbounds %"class.mojo::StructPtr.557", %"class.mojo::StructPtr.557"* %23, i64 1
  %33 = add i64 %25, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %22, !llvm.loop !41

35:                                               ; preds = %22, %15
  %36 = phi %"class.mojo::StructPtr.557"* [ %6, %15 ], [ %32, %22 ]
  %37 = phi %"class.mojo::StructPtr.557"* [ null, %15 ], [ %31, %22 ]
  %38 = icmp ult i64 %17, 24
  br i1 %38, label %71, label %39

39:                                               ; preds = %35, %39
  %40 = phi %"class.mojo::StructPtr.557"* [ %69, %39 ], [ %36, %35 ]
  %41 = phi %"class.mojo::StructPtr.557"* [ %68, %39 ], [ %37, %35 ]
  %42 = bitcast %"class.mojo::StructPtr.557"* %41 to i64*
  %43 = getelementptr inbounds %"class.mojo::StructPtr.557", %"class.mojo::StructPtr.557"* %41, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %43, align 8
  %44 = bitcast %"class.mojo::StructPtr.557"* %40 to i64*
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %42, align 8
  %46 = getelementptr inbounds %"class.mojo::StructPtr.557", %"class.mojo::StructPtr.557"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %46, align 8
  %47 = getelementptr inbounds %"class.mojo::StructPtr.557", %"class.mojo::StructPtr.557"* %41, i64 1
  %48 = getelementptr inbounds %"class.mojo::StructPtr.557", %"class.mojo::StructPtr.557"* %40, i64 1
  %49 = bitcast %"class.mojo::StructPtr.557"* %47 to i64*
  %50 = getelementptr inbounds %"class.mojo::StructPtr.557", %"class.mojo::StructPtr.557"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %50, align 8
  %51 = bitcast %"class.mojo::StructPtr.557"* %48 to i64*
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %49, align 8
  %53 = getelementptr inbounds %"class.mojo::StructPtr.557", %"class.mojo::StructPtr.557"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %53, align 8
  %54 = getelementptr inbounds %"class.mojo::StructPtr.557", %"class.mojo::StructPtr.557"* %41, i64 2
  %55 = getelementptr inbounds %"class.mojo::StructPtr.557", %"class.mojo::StructPtr.557"* %40, i64 2
  %56 = bitcast %"class.mojo::StructPtr.557"* %54 to i64*
  %57 = getelementptr inbounds %"class.mojo::StructPtr.557", %"class.mojo::StructPtr.557"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %57, align 8
  %58 = bitcast %"class.mojo::StructPtr.557"* %55 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %56, align 8
  %60 = getelementptr inbounds %"class.mojo::StructPtr.557", %"class.mojo::StructPtr.557"* %55, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %60, align 8
  %61 = getelementptr inbounds %"class.mojo::StructPtr.557", %"class.mojo::StructPtr.557"* %41, i64 3
  %62 = getelementptr inbounds %"class.mojo::StructPtr.557", %"class.mojo::StructPtr.557"* %40, i64 3
  %63 = bitcast %"class.mojo::StructPtr.557"* %61 to i64*
  %64 = getelementptr inbounds %"class.mojo::StructPtr.557", %"class.mojo::StructPtr.557"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %64, align 8
  %65 = bitcast %"class.mojo::StructPtr.557"* %62 to i64*
  %66 = load i64, i64* %65, align 8
  store i64 %66, i64* %63, align 8
  %67 = getelementptr inbounds %"class.mojo::StructPtr.557", %"class.mojo::StructPtr.557"* %62, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %67, align 8
  %68 = getelementptr inbounds %"class.mojo::StructPtr.557", %"class.mojo::StructPtr.557"* %41, i64 4
  %69 = getelementptr inbounds %"class.mojo::StructPtr.557", %"class.mojo::StructPtr.557"* %40, i64 4
  %70 = icmp eq %"class.mojo::StructPtr.557"* %69, %11
  br i1 %70, label %71, label %39

71:                                               ; preds = %35, %39, %4
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #12
  br label %152

72:                                               ; preds = %2
  %73 = zext i32 %1 to i64
  %74 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEmm(i64 %73) #12
  %75 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %74, i8* getelementptr inbounds ([109 x i8], [109 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEPKcv, i64 0, i64 0)) #12
  %76 = lshr i64 %74, 3
  %77 = ptrtoint i8* %75 to i64
  %78 = getelementptr inbounds %"class.WTF::Vector.554", %"class.WTF::Vector.554"* %0, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.mojo::StructPtr.557"*, %"class.mojo::StructPtr.557"** %78, align 8
  %80 = getelementptr inbounds %"class.WTF::Vector.554", %"class.WTF::Vector.554"* %0, i64 0, i32 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"class.mojo::StructPtr.557", %"class.mojo::StructPtr.557"* %79, i64 %82
  %84 = icmp eq i32 %81, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %72
  %86 = bitcast %"class.mojo::StructPtr.557"* %79 to i8*
  br label %147

87:                                               ; preds = %72
  %88 = bitcast i8* %75 to %"class.mojo::StructPtr.557"*
  %89 = shl nuw nsw i64 %82, 3
  %90 = add nsw i64 %89, -8
  %91 = lshr exact i64 %90, 3
  %92 = add nuw nsw i64 %91, 1
  %93 = and i64 %92, 3
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %108, label %95

95:                                               ; preds = %87, %95
  %96 = phi %"class.mojo::StructPtr.557"* [ %105, %95 ], [ %79, %87 ]
  %97 = phi %"class.mojo::StructPtr.557"* [ %104, %95 ], [ %88, %87 ]
  %98 = phi i64 [ %106, %95 ], [ %93, %87 ]
  %99 = bitcast %"class.mojo::StructPtr.557"* %97 to i64*
  %100 = getelementptr inbounds %"class.mojo::StructPtr.557", %"class.mojo::StructPtr.557"* %97, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %100, align 8
  %101 = bitcast %"class.mojo::StructPtr.557"* %96 to i64*
  %102 = load i64, i64* %101, align 8
  store i64 %102, i64* %99, align 8
  %103 = getelementptr inbounds %"class.mojo::StructPtr.557", %"class.mojo::StructPtr.557"* %96, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %103, align 8
  %104 = getelementptr inbounds %"class.mojo::StructPtr.557", %"class.mojo::StructPtr.557"* %97, i64 1
  %105 = getelementptr inbounds %"class.mojo::StructPtr.557", %"class.mojo::StructPtr.557"* %96, i64 1
  %106 = add i64 %98, -1
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %95, !llvm.loop !43

108:                                              ; preds = %95, %87
  %109 = phi %"class.mojo::StructPtr.557"* [ %79, %87 ], [ %105, %95 ]
  %110 = phi %"class.mojo::StructPtr.557"* [ %88, %87 ], [ %104, %95 ]
  %111 = icmp ult i64 %90, 24
  br i1 %111, label %144, label %112

112:                                              ; preds = %108, %112
  %113 = phi %"class.mojo::StructPtr.557"* [ %142, %112 ], [ %109, %108 ]
  %114 = phi %"class.mojo::StructPtr.557"* [ %141, %112 ], [ %110, %108 ]
  %115 = bitcast %"class.mojo::StructPtr.557"* %114 to i64*
  %116 = getelementptr inbounds %"class.mojo::StructPtr.557", %"class.mojo::StructPtr.557"* %114, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %116, align 8
  %117 = bitcast %"class.mojo::StructPtr.557"* %113 to i64*
  %118 = load i64, i64* %117, align 8
  store i64 %118, i64* %115, align 8
  %119 = getelementptr inbounds %"class.mojo::StructPtr.557", %"class.mojo::StructPtr.557"* %113, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %119, align 8
  %120 = getelementptr inbounds %"class.mojo::StructPtr.557", %"class.mojo::StructPtr.557"* %114, i64 1
  %121 = getelementptr inbounds %"class.mojo::StructPtr.557", %"class.mojo::StructPtr.557"* %113, i64 1
  %122 = bitcast %"class.mojo::StructPtr.557"* %120 to i64*
  %123 = getelementptr inbounds %"class.mojo::StructPtr.557", %"class.mojo::StructPtr.557"* %120, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %123, align 8
  %124 = bitcast %"class.mojo::StructPtr.557"* %121 to i64*
  %125 = load i64, i64* %124, align 8
  store i64 %125, i64* %122, align 8
  %126 = getelementptr inbounds %"class.mojo::StructPtr.557", %"class.mojo::StructPtr.557"* %121, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %126, align 8
  %127 = getelementptr inbounds %"class.mojo::StructPtr.557", %"class.mojo::StructPtr.557"* %114, i64 2
  %128 = getelementptr inbounds %"class.mojo::StructPtr.557", %"class.mojo::StructPtr.557"* %113, i64 2
  %129 = bitcast %"class.mojo::StructPtr.557"* %127 to i64*
  %130 = getelementptr inbounds %"class.mojo::StructPtr.557", %"class.mojo::StructPtr.557"* %127, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %130, align 8
  %131 = bitcast %"class.mojo::StructPtr.557"* %128 to i64*
  %132 = load i64, i64* %131, align 8
  store i64 %132, i64* %129, align 8
  %133 = getelementptr inbounds %"class.mojo::StructPtr.557", %"class.mojo::StructPtr.557"* %128, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %133, align 8
  %134 = getelementptr inbounds %"class.mojo::StructPtr.557", %"class.mojo::StructPtr.557"* %114, i64 3
  %135 = getelementptr inbounds %"class.mojo::StructPtr.557", %"class.mojo::StructPtr.557"* %113, i64 3
  %136 = bitcast %"class.mojo::StructPtr.557"* %134 to i64*
  %137 = getelementptr inbounds %"class.mojo::StructPtr.557", %"class.mojo::StructPtr.557"* %134, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %137, align 8
  %138 = bitcast %"class.mojo::StructPtr.557"* %135 to i64*
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %136, align 8
  %140 = getelementptr inbounds %"class.mojo::StructPtr.557", %"class.mojo::StructPtr.557"* %135, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %140, align 8
  %141 = getelementptr inbounds %"class.mojo::StructPtr.557", %"class.mojo::StructPtr.557"* %114, i64 4
  %142 = getelementptr inbounds %"class.mojo::StructPtr.557", %"class.mojo::StructPtr.557"* %113, i64 4
  %143 = icmp eq %"class.mojo::StructPtr.557"* %142, %83
  br i1 %143, label %144, label %112

144:                                              ; preds = %112, %108
  %145 = bitcast %"class.WTF::Vector.554"* %0 to i8**
  %146 = load i8*, i8** %145, align 8
  br label %147

147:                                              ; preds = %85, %144
  %148 = phi i8* [ %146, %144 ], [ %86, %85 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %148) #12
  %149 = bitcast %"class.WTF::Vector.554"* %0 to i64*
  store atomic i64 %77, i64* %149 monotonic, align 8
  %150 = trunc i64 %76 to i32
  %151 = getelementptr inbounds %"class.WTF::Vector.554", %"class.WTF::Vector.554"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %150, i32* %151, align 8
  br label %152

152:                                              ; preds = %147, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.8, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.554"*, %"class.mojo::StructPtr.557"* dereferenceable(8)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.554", %"class.WTF::Vector.554"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.554", %"class.WTF::Vector.554"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.mojo::StructPtr.557"*, %"class.mojo::StructPtr.557"** %6, align 8
  %8 = icmp ugt %"class.mojo::StructPtr.557"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.557", %"class.mojo::StructPtr.557"* %7, i64 %10
  %12 = icmp ugt %"class.mojo::StructPtr.557"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.554", %"class.WTF::Vector.554"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !7

24:                                               ; preds = %13
  %25 = icmp eq %"class.mojo::StructPtr.557"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEmm(i64 %27) #12
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([109 x i8], [109 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEPKcv, i64 0, i64 0)) #12
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.554"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %28, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.mojo::StructPtr.557"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.554"* %0, i32 %22) #12
  %36 = load %"class.mojo::StructPtr.557"*, %"class.mojo::StructPtr.557"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.mojo::StructPtr.557"* %1 to i64
  %39 = ptrtoint %"class.mojo::StructPtr.557"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 3
  %42 = getelementptr inbounds %"class.WTF::Vector.554", %"class.WTF::Vector.554"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !7

52:                                               ; preds = %37
  %53 = icmp eq %"class.mojo::StructPtr.557"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEmm(i64 %55) #12
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([109 x i8], [109 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEPKcv, i64 0, i64 0)) #12
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.554"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = lshr i64 %56, 3
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.mojo::StructPtr.557"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.554"* %0, i32 %50) #12
  %64 = load %"class.mojo::StructPtr.557"*, %"class.mojo::StructPtr.557"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.mojo::StructPtr.557"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.mojo::StructPtr.557", %"class.mojo::StructPtr.557"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.mojo::StructPtr.557"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.mojo::StructPtr.557"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.mojo::StructPtr.557", %"class.mojo::StructPtr.557"* %69, i64 %72
  %74 = bitcast %"class.mojo::StructPtr.557"* %73 to i64*
  %75 = getelementptr inbounds %"class.mojo::StructPtr.557", %"class.mojo::StructPtr.557"* %73, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %75, align 8
  %76 = bitcast %"class.mojo::StructPtr.557"* %70 to i64*
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %74, align 8
  store i64 0, i64* %76, align 8
  %78 = load i32, i32* %3, align 4
  %79 = add i32 %78, 1
  store i32 %79, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK7network5mojom5blink21ContentSecurityPolicy5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.557"* noalias sret, %"class.network::mojom::blink::ContentSecurityPolicy"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.mojo::StructPtr.561", align 8
  %5 = alloca %"class.WTF::HashMap.568", align 8
  %6 = alloca %"class.WTF::HashMap.573", align 8
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca i32, align 4
  %11 = alloca %"class.mojo::InlinedStructPtr", align 8
  %12 = alloca i8, align 1
  %13 = alloca %"class.WTF::Vector.578", align 8
  %14 = alloca i32, align 4
  %15 = alloca %"class.mojo::StructPtr.583", align 8
  %16 = alloca %"class.WTF::Vector.578", align 8
  %17 = bitcast %"class.mojo::StructPtr.561"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  %18 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load %"class.network::mojom::blink::CSPSource"*, %"class.network::mojom::blink::CSPSource"** %18, align 8, !noalias !44
  %20 = icmp eq %"class.network::mojom::blink::CSPSource"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = bitcast %"class.mojo::StructPtr.561"* %4 to i64*
  store i64 0, i64* %22, align 8, !alias.scope !44
  br label %24

23:                                               ; preds = %2
  call void @_ZNK7network5mojom5blink9CSPSource5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.561"* nonnull sret %4, %"class.network::mojom::blink::CSPSource"* nonnull %19) #12
  br label %24

24:                                               ; preds = %21, %23
  %25 = bitcast %"class.WTF::HashMap.568"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #12
  %26 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 1
  call void @_ZN4mojo11CloneTraitsIN3WTF7HashMapIN7network5mojom16CSPDirectiveNameENS1_6StringENS1_7IntHashIS5_EENS1_10HashTraitsIS5_EENS9_IS6_EENS1_18PartitionAllocatorEEELb0EE5CloneERKSD_(%"class.WTF::HashMap.568"* nonnull sret %5, %"class.WTF::HashMap.568"* dereferenceable(24) %26) #12
  %27 = bitcast %"class.WTF::HashMap.573"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #12
  %28 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 2
  call void @_ZN4mojo11CloneTraitsIN3WTF7HashMapIN7network5mojom16CSPDirectiveNameENS_9StructPtrINS4_5blink13CSPSourceListEEENS1_7IntHashIS5_EENS1_10HashTraitsIS5_EENSC_IS9_EENS1_18PartitionAllocatorEEELb0EE5CloneERKSG_(%"class.WTF::HashMap.573"* nonnull sret %6, %"class.WTF::HashMap.573"* dereferenceable(24) %28) #12
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #12
  %29 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 3
  %30 = load i8, i8* %29, align 1, !range !2
  store i8 %30, i8* %7, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #12
  %31 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 4
  %32 = load i8, i8* %31, align 1, !range !2
  store i8 %32, i8* %8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #12
  %33 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 5
  %34 = load i8, i8* %33, align 1, !range !2
  store i8 %34, i8* %9, align 1
  %35 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %35) #12
  %36 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 6
  %37 = load i32, i32* %36, align 4
  store i32 %37, i32* %10, align 4
  %38 = bitcast %"class.mojo::InlinedStructPtr"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #12
  %39 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 7, i32 1
  %40 = load i32, i32* %39, align 8, !noalias !51
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %24
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 0, i64 24, i1 false) #12, !alias.scope !51
  %43 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %11, i64 0, i32 0
  call void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderC1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull %43) #12
  %44 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %11, i64 0, i32 1
  store i32 0, i32* %44, align 8, !alias.scope !51
  br label %91

45:                                               ; preds = %24
  %46 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #12, !noalias !58
  %47 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8, !noalias !58
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %67, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %67

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = zext i32 %57 to i33
  %59 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %58, i33 1) #12
  %60 = extractvalue { i33, i1 } %59, 1
  %61 = extractvalue { i33, i1 } %59, 0
  %62 = icmp slt i33 %61, 0
  %63 = or i1 %60, %62
  br i1 %63, label %64, label %65, !prof !3

64:                                               ; preds = %55
  call void @llvm.trap() #12
  unreachable

65:                                               ; preds = %55
  %66 = trunc i33 %61 to i32
  store i32 %66, i32* %56, align 4
  br label %67

67:                                               ; preds = %65, %50, %45
  %68 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %48, %"class.WTF::StringImpl"** %68, align 8, !noalias !58
  %69 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 7, i32 0, i32 1
  %70 = load i32, i32* %69, align 4, !noalias !58
  %71 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 7, i32 0, i32 2
  %72 = load i32, i32* %71, align 4, !noalias !58
  %73 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %11, i64 0, i32 0
  call void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderC1ERKN3WTF6StringENS0_25ContentSecurityPolicyTypeENS0_27ContentSecurityPolicySourceE(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull %73, %"class.WTF::String"* nonnull dereferenceable(8) %3, i32 %70, i32 %72) #12
  %74 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %11, i64 0, i32 1
  store i32 1, i32* %74, align 8, !alias.scope !61
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8, !noalias !58
  %76 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %76, label %90, label %77

77:                                               ; preds = %67
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  br i1 %81, label %84, label %86

84:                                               ; preds = %77
  %85 = add i32 %83, -1
  store i32 %85, i32* %82, align 4
  br label %86

86:                                               ; preds = %84, %77
  %87 = phi i32 [ %85, %84 ], [ %83, %77 ]
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %86
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %75) #12
  br label %90

90:                                               ; preds = %67, %86, %89
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #12, !noalias !58
  br label %91

91:                                               ; preds = %42, %90
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #12
  %92 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 8
  %93 = load i8, i8* %92, align 1, !range !2
  store i8 %93, i8* %12, align 1
  %94 = bitcast %"class.WTF::Vector.578"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %94) #12
  %95 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 9
  call void @_ZN4mojo11CloneTraitsIN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKS5_(%"class.WTF::Vector.578"* nonnull sret %13, %"class.WTF::Vector.578"* dereferenceable(16) %95) #12
  %96 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %96) #12
  %97 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 10
  %98 = load i32, i32* %97, align 4
  store i32 %98, i32* %14, align 4
  %99 = bitcast %"class.mojo::StructPtr.583"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %99) #12
  %100 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %101 = load %"class.network::mojom::blink::CSPTrustedTypes"*, %"class.network::mojom::blink::CSPTrustedTypes"** %100, align 8, !noalias !64
  %102 = icmp eq %"class.network::mojom::blink::CSPTrustedTypes"* %101, null
  br i1 %102, label %103, label %105

103:                                              ; preds = %91
  %104 = bitcast %"class.mojo::StructPtr.583"* %15 to i64*
  store i64 0, i64* %104, align 8, !alias.scope !64
  br label %106

105:                                              ; preds = %91
  call void @_ZNK7network5mojom5blink15CSPTrustedTypes5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.583"* nonnull sret %15, %"class.network::mojom::blink::CSPTrustedTypes"* nonnull %101) #12
  br label %106

106:                                              ; preds = %103, %105
  %107 = bitcast %"class.WTF::Vector.578"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %107) #12
  %108 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 12
  call void @_ZN4mojo11CloneTraitsIN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKS5_(%"class.WTF::Vector.578"* nonnull sret %16, %"class.WTF::Vector.578"* dereferenceable(16) %108) #12
  call void @_ZN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEC2IJNS0_INS3_9CSPSourceEEEN3WTF7HashMapINS2_16CSPDirectiveNameENS9_6StringENS9_7IntHashISB_EENS9_10HashTraitsISB_EENSF_ISC_EENS9_18PartitionAllocatorEEENSA_ISB_NS0_INS3_13CSPSourceListEEESE_SG_NSF_ISL_EESI_EEbbbNS2_15WebSandboxFlagsENS_16InlinedStructPtrINS3_27ContentSecurityPolicyHeaderEEEbNS9_6VectorISC_Lj0ESI_EENS2_25CSPRequireTrustedTypesForENS0_INS3_15CSPTrustedTypesEEEST_EEEN4base10in_place_tEDpOT_(%"class.mojo::StructPtr.557"* %0, %"class.mojo::StructPtr.561"* nonnull dereferenceable(8) %4, %"class.WTF::HashMap.568"* nonnull dereferenceable(24) %5, %"class.WTF::HashMap.573"* nonnull dereferenceable(24) %6, i8* nonnull dereferenceable(1) %7, i8* nonnull dereferenceable(1) %8, i8* nonnull dereferenceable(1) %9, i32* nonnull dereferenceable(4) %10, %"class.mojo::InlinedStructPtr"* nonnull dereferenceable(24) %11, i8* nonnull dereferenceable(1) %12, %"class.WTF::Vector.578"* nonnull dereferenceable(16) %13, i32* nonnull dereferenceable(4) %14, %"class.mojo::StructPtr.583"* nonnull dereferenceable(8) %15, %"class.WTF::Vector.578"* nonnull dereferenceable(16) %16) #12
  %109 = getelementptr inbounds %"class.WTF::Vector.578", %"class.WTF::Vector.578"* %16, i64 0, i32 0, i32 0, i32 0
  %110 = load %"class.WTF::String"*, %"class.WTF::String"** %109, align 8
  %111 = icmp eq %"class.WTF::String"* %110, null
  br i1 %111, label %146, label %112, !prof !7

112:                                              ; preds = %106
  %113 = bitcast %"class.WTF::String"* %110 to i8*
  %114 = getelementptr inbounds %"class.WTF::Vector.578", %"class.WTF::Vector.578"* %16, i64 0, i32 0, i32 0, i32 2
  %115 = load i32, i32* %114, align 4
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %144, label %117, !prof !3

117:                                              ; preds = %112
  %118 = zext i32 %115 to i64
  %119 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %110, i64 %118
  br label %120

120:                                              ; preds = %138, %117
  %121 = phi %"class.WTF::String"* [ %139, %138 ], [ %110, %117 ]
  %122 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %121, i64 0, i32 0, i32 0
  %123 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %122, align 8
  %124 = icmp eq %"class.WTF::StringImpl"* %123, null
  br i1 %124, label %138, label %125

125:                                              ; preds = %120
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load atomic i32, i32* %126 monotonic, align 4
  %128 = and i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 0
  %131 = load i32, i32* %130, align 4
  br i1 %129, label %132, label %134

132:                                              ; preds = %125
  %133 = add i32 %131, -1
  store i32 %133, i32* %130, align 4
  br label %134

134:                                              ; preds = %132, %125
  %135 = phi i32 [ %133, %132 ], [ %131, %125 ]
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %138

137:                                              ; preds = %134
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %123) #12
  br label %138

138:                                              ; preds = %137, %134, %120
  %139 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %121, i64 1
  %140 = icmp eq %"class.WTF::String"* %139, %119
  br i1 %140, label %141, label %120

141:                                              ; preds = %138
  store i32 0, i32* %114, align 4
  %142 = bitcast %"class.WTF::Vector.578"* %16 to i8**
  %143 = load i8*, i8** %142, align 8
  br label %144

144:                                              ; preds = %141, %112
  %145 = phi i8* [ %143, %141 ], [ %113, %112 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %145) #12
  store %"class.WTF::String"* null, %"class.WTF::String"** %109, align 8
  br label %146

146:                                              ; preds = %106, %144
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %107) #12
  %147 = getelementptr inbounds %"class.mojo::StructPtr.583", %"class.mojo::StructPtr.583"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %148 = load %"class.network::mojom::blink::CSPTrustedTypes"*, %"class.network::mojom::blink::CSPTrustedTypes"** %147, align 8
  store %"class.network::mojom::blink::CSPTrustedTypes"* null, %"class.network::mojom::blink::CSPTrustedTypes"** %147, align 8
  %149 = icmp eq %"class.network::mojom::blink::CSPTrustedTypes"* %148, null
  br i1 %149, label %152, label %150

150:                                              ; preds = %146
  call void @_ZN7network5mojom5blink15CSPTrustedTypesD1Ev(%"class.network::mojom::blink::CSPTrustedTypes"* nonnull %148) #12
  %151 = bitcast %"class.network::mojom::blink::CSPTrustedTypes"* %148 to i8*
  call void @_ZdlPv(i8* %151) #13
  br label %152

152:                                              ; preds = %146, %150
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %96) #12
  %153 = getelementptr inbounds %"class.WTF::Vector.578", %"class.WTF::Vector.578"* %13, i64 0, i32 0, i32 0, i32 0
  %154 = load %"class.WTF::String"*, %"class.WTF::String"** %153, align 8
  %155 = icmp eq %"class.WTF::String"* %154, null
  br i1 %155, label %190, label %156, !prof !7

156:                                              ; preds = %152
  %157 = bitcast %"class.WTF::String"* %154 to i8*
  %158 = getelementptr inbounds %"class.WTF::Vector.578", %"class.WTF::Vector.578"* %13, i64 0, i32 0, i32 0, i32 2
  %159 = load i32, i32* %158, align 4
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %188, label %161, !prof !3

161:                                              ; preds = %156
  %162 = zext i32 %159 to i64
  %163 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %154, i64 %162
  br label %164

164:                                              ; preds = %182, %161
  %165 = phi %"class.WTF::String"* [ %183, %182 ], [ %154, %161 ]
  %166 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %165, i64 0, i32 0, i32 0
  %167 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %166, align 8
  %168 = icmp eq %"class.WTF::StringImpl"* %167, null
  br i1 %168, label %182, label %169

169:                                              ; preds = %164
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = load atomic i32, i32* %170 monotonic, align 4
  %172 = and i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 0
  %175 = load i32, i32* %174, align 4
  br i1 %173, label %176, label %178

176:                                              ; preds = %169
  %177 = add i32 %175, -1
  store i32 %177, i32* %174, align 4
  br label %178

178:                                              ; preds = %176, %169
  %179 = phi i32 [ %177, %176 ], [ %175, %169 ]
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %182

181:                                              ; preds = %178
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %167) #12
  br label %182

182:                                              ; preds = %181, %178, %164
  %183 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %165, i64 1
  %184 = icmp eq %"class.WTF::String"* %183, %163
  br i1 %184, label %185, label %164

185:                                              ; preds = %182
  store i32 0, i32* %158, align 4
  %186 = bitcast %"class.WTF::Vector.578"* %13 to i8**
  %187 = load i8*, i8** %186, align 8
  br label %188

188:                                              ; preds = %185, %156
  %189 = phi i8* [ %187, %185 ], [ %157, %156 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %189) #12
  store %"class.WTF::String"* null, %"class.WTF::String"** %153, align 8
  br label %190

190:                                              ; preds = %152, %188
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %94) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #12
  %191 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %11, i64 0, i32 0
  call void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderD1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull %191) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %35) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #12
  %192 = getelementptr inbounds %"class.WTF::HashMap.573", %"class.WTF::HashMap.573"* %6, i64 0, i32 0, i32 0
  %193 = load %"struct.WTF::KeyValuePair.577"*, %"struct.WTF::KeyValuePair.577"** %192, align 8
  %194 = icmp eq %"struct.WTF::KeyValuePair.577"* %193, null
  br i1 %194, label %217, label %195, !prof !7

195:                                              ; preds = %190
  %196 = getelementptr inbounds %"class.WTF::HashMap.573", %"class.WTF::HashMap.573"* %6, i64 0, i32 0, i32 1
  %197 = load i32, i32* %196, align 8
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %215, label %199

199:                                              ; preds = %195
  %200 = zext i32 %197 to i64
  br label %201

201:                                              ; preds = %212, %199
  %202 = phi i64 [ 0, %199 ], [ %213, %212 ]
  %203 = getelementptr inbounds %"struct.WTF::KeyValuePair.577", %"struct.WTF::KeyValuePair.577"* %193, i64 %202, i32 0
  %204 = load i32, i32* %203, align 4
  %205 = icmp eq i32 %204, -1000001
  br i1 %205, label %212, label %206

206:                                              ; preds = %201
  %207 = getelementptr inbounds %"struct.WTF::KeyValuePair.577", %"struct.WTF::KeyValuePair.577"* %193, i64 %202, i32 1, i32 0, i32 0, i32 0, i32 0
  %208 = load %"class.network::mojom::blink::CSPSourceList"*, %"class.network::mojom::blink::CSPSourceList"** %207, align 8
  store %"class.network::mojom::blink::CSPSourceList"* null, %"class.network::mojom::blink::CSPSourceList"** %207, align 8
  %209 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %208, null
  br i1 %209, label %212, label %210

210:                                              ; preds = %206
  call void @_ZN7network5mojom5blink13CSPSourceListD1Ev(%"class.network::mojom::blink::CSPSourceList"* nonnull %208) #12
  %211 = bitcast %"class.network::mojom::blink::CSPSourceList"* %208 to i8*
  call void @_ZdlPv(i8* %211) #13
  br label %212

212:                                              ; preds = %210, %206, %201
  %213 = add nuw nsw i64 %202, 1
  %214 = icmp eq i64 %213, %200
  br i1 %214, label %215, label %201

215:                                              ; preds = %212, %195
  %216 = bitcast %"struct.WTF::KeyValuePair.577"* %193 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %216) #12
  store %"struct.WTF::KeyValuePair.577"* null, %"struct.WTF::KeyValuePair.577"** %192, align 8
  br label %217

217:                                              ; preds = %190, %215
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #12
  %218 = getelementptr inbounds %"class.WTF::HashMap.568", %"class.WTF::HashMap.568"* %5, i64 0, i32 0, i32 0
  %219 = load %"struct.WTF::KeyValuePair.572"*, %"struct.WTF::KeyValuePair.572"** %218, align 8
  %220 = icmp eq %"struct.WTF::KeyValuePair.572"* %219, null
  br i1 %220, label %254, label %221, !prof !7

221:                                              ; preds = %217
  %222 = getelementptr inbounds %"class.WTF::HashMap.568", %"class.WTF::HashMap.568"* %5, i64 0, i32 0, i32 1
  %223 = load i32, i32* %222, align 8
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %252, label %225

225:                                              ; preds = %221
  %226 = zext i32 %223 to i64
  br label %227

227:                                              ; preds = %249, %225
  %228 = phi i64 [ 0, %225 ], [ %250, %249 ]
  %229 = getelementptr inbounds %"struct.WTF::KeyValuePair.572", %"struct.WTF::KeyValuePair.572"* %219, i64 %228, i32 0
  %230 = load i32, i32* %229, align 4
  %231 = icmp eq i32 %230, -1000001
  br i1 %231, label %249, label %232

232:                                              ; preds = %227
  %233 = getelementptr inbounds %"struct.WTF::KeyValuePair.572", %"struct.WTF::KeyValuePair.572"* %219, i64 %228, i32 1, i32 0, i32 0
  %234 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %233, align 8
  %235 = icmp eq %"class.WTF::StringImpl"* %234, null
  br i1 %235, label %249, label %236

236:                                              ; preds = %232
  %237 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %234, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %238 = load atomic i32, i32* %237 monotonic, align 4
  %239 = and i32 %238, 2
  %240 = icmp eq i32 %239, 0
  %241 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %234, i64 0, i32 0
  %242 = load i32, i32* %241, align 4
  br i1 %240, label %243, label %245

243:                                              ; preds = %236
  %244 = add i32 %242, -1
  store i32 %244, i32* %241, align 4
  br label %245

245:                                              ; preds = %243, %236
  %246 = phi i32 [ %244, %243 ], [ %242, %236 ]
  %247 = icmp eq i32 %246, 0
  br i1 %247, label %248, label %249

248:                                              ; preds = %245
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %234) #12
  br label %249

249:                                              ; preds = %248, %245, %232, %227
  %250 = add nuw nsw i64 %228, 1
  %251 = icmp eq i64 %250, %226
  br i1 %251, label %252, label %227

252:                                              ; preds = %249, %221
  %253 = bitcast %"struct.WTF::KeyValuePair.572"* %219 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %253) #12
  store %"struct.WTF::KeyValuePair.572"* null, %"struct.WTF::KeyValuePair.572"** %218, align 8
  br label %254

254:                                              ; preds = %217, %252
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #12
  %255 = getelementptr inbounds %"class.mojo::StructPtr.561", %"class.mojo::StructPtr.561"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %256 = load %"class.network::mojom::blink::CSPSource"*, %"class.network::mojom::blink::CSPSource"** %255, align 8
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %255, align 8
  %257 = icmp eq %"class.network::mojom::blink::CSPSource"* %256, null
  br i1 %257, label %260, label %258

258:                                              ; preds = %254
  call void @_ZN7network5mojom5blink9CSPSourceD1Ev(%"class.network::mojom::blink::CSPSource"* nonnull %256) #12
  %259 = bitcast %"class.network::mojom::blink::CSPSource"* %256 to i8*
  call void @_ZdlPv(i8* %259) #13
  br label %260

260:                                              ; preds = %254, %258
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEC2IJNS0_INS3_9CSPSourceEEEN3WTF7HashMapINS2_16CSPDirectiveNameENS9_6StringENS9_7IntHashISB_EENS9_10HashTraitsISB_EENSF_ISC_EENS9_18PartitionAllocatorEEENSA_ISB_NS0_INS3_13CSPSourceListEEESE_SG_NSF_ISL_EESI_EEbbbNS2_15WebSandboxFlagsENS_16InlinedStructPtrINS3_27ContentSecurityPolicyHeaderEEEbNS9_6VectorISC_Lj0ESI_EENS2_25CSPRequireTrustedTypesForENS0_INS3_15CSPTrustedTypesEEEST_EEEN4base10in_place_tEDpOT_(%"class.mojo::StructPtr.557"*, %"class.mojo::StructPtr.561"* dereferenceable(8), %"class.WTF::HashMap.568"* dereferenceable(24), %"class.WTF::HashMap.573"* dereferenceable(24), i8* dereferenceable(1), i8* dereferenceable(1), i8* dereferenceable(1), i32* dereferenceable(4), %"class.mojo::InlinedStructPtr"* dereferenceable(24), i8* dereferenceable(1), %"class.WTF::Vector.578"* dereferenceable(16), i32* dereferenceable(4), %"class.mojo::StructPtr.583"* dereferenceable(8), %"class.WTF::Vector.578"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %15 = alloca %"class.mojo::StructPtr.561", align 8
  %16 = alloca %"class.WTF::HashMap.573", align 8
  %17 = alloca %"class.mojo::InlinedStructPtr", align 8
  %18 = alloca %"class.WTF::Vector.578", align 8
  %19 = alloca %"class.mojo::StructPtr.583", align 8
  %20 = alloca %"class.WTF::Vector.578", align 8
  %21 = tail call i8* @_Znwm(i64 144) #13
  %22 = bitcast i8* %21 to %"class.network::mojom::blink::ContentSecurityPolicy"*
  %23 = bitcast %"class.mojo::StructPtr.561"* %15 to i64*
  %24 = getelementptr inbounds %"class.mojo::StructPtr.561", %"class.mojo::StructPtr.561"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = bitcast %"class.mojo::StructPtr.561"* %1 to i64*
  %26 = load i64, i64* %25, align 8
  store i64 %26, i64* %23, align 8
  store i64 0, i64* %25, align 8
  %27 = getelementptr inbounds %"class.WTF::HashMap.573", %"class.WTF::HashMap.573"* %16, i64 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.WTF::HashMap.573", %"class.WTF::HashMap.573"* %16, i64 0, i32 0, i32 2
  %29 = getelementptr inbounds %"class.WTF::HashMap.573", %"class.WTF::HashMap.573"* %16, i64 0, i32 0, i32 3
  %30 = bitcast %"class.WTF::HashMap.573"* %3 to i64*
  %31 = bitcast %"class.WTF::HashMap.573"* %16 to i64*
  store i64 0, i64* %31, align 8
  %32 = load i64, i64* %30, align 8
  %33 = bitcast %"class.WTF::HashMap.573"* %16 to i64*
  store atomic i64 0, i64* %30 monotonic, align 8
  store atomic i64 %32, i64* %33 monotonic, align 8
  %34 = getelementptr inbounds %"class.WTF::HashMap.573", %"class.WTF::HashMap.573"* %3, i64 0, i32 0, i32 1
  %35 = load i32, i32* %34, align 4
  store i32 %35, i32* %27, align 8
  store i32 0, i32* %34, align 4
  %36 = getelementptr inbounds %"class.WTF::HashMap.573", %"class.WTF::HashMap.573"* %3, i64 0, i32 0, i32 2
  %37 = load i32, i32* %36, align 4
  store i32 %37, i32* %28, align 4
  store i32 0, i32* %36, align 4
  %38 = getelementptr inbounds %"class.WTF::HashMap.573", %"class.WTF::HashMap.573"* %3, i64 0, i32 0, i32 3
  %39 = load i32, i32* %38, align 8
  %40 = and i32 %39, 2147483647
  store i32 %40, i32* %29, align 8
  %41 = and i32 %39, -2147483648
  store i32 %41, i32* %38, align 8
  %42 = load i8, i8* %4, align 1, !range !2
  %43 = icmp ne i8 %42, 0
  %44 = load i8, i8* %5, align 1, !range !2
  %45 = icmp ne i8 %44, 0
  %46 = load i8, i8* %6, align 1, !range !2
  %47 = icmp ne i8 %46, 0
  %48 = load i32, i32* %7, align 4
  %49 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %17, i64 0, i32 0
  call void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderC1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull %49) #12
  %50 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %17, i64 0, i32 1
  store i32 0, i32* %50, align 8
  call void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderD1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull %49) #12
  call void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderC1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull %49) #12
  %51 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %8, i64 0, i32 0
  call void @_ZNSt3__14swapIN7network5mojom5blink27ContentSecurityPolicyHeaderEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS6_EE5valueEvE4typeERS6_S9_(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull dereferenceable(16) %49, %"class.network::mojom::blink::ContentSecurityPolicyHeader"* dereferenceable(16) %51) #12
  %52 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %8, i64 0, i32 1
  %53 = load i32, i32* %50, align 8
  %54 = load i32, i32* %52, align 4
  store i32 %54, i32* %50, align 8
  store i32 %53, i32* %52, align 4
  %55 = load i8, i8* %9, align 1, !range !2
  %56 = icmp ne i8 %55, 0
  %57 = getelementptr inbounds %"class.WTF::Vector.578", %"class.WTF::Vector.578"* %18, i64 0, i32 0, i32 0, i32 1
  %58 = getelementptr inbounds %"class.WTF::Vector.578", %"class.WTF::Vector.578"* %18, i64 0, i32 0, i32 0, i32 2
  %59 = bitcast %"class.WTF::Vector.578"* %10 to i64*
  %60 = bitcast %"class.WTF::Vector.578"* %18 to i64*
  store i64 0, i64* %60, align 8
  %61 = load i64, i64* %59, align 8
  %62 = bitcast %"class.WTF::Vector.578"* %18 to i64*
  store atomic i64 0, i64* %59 monotonic, align 8
  store atomic i64 %61, i64* %62 monotonic, align 8
  %63 = getelementptr inbounds %"class.WTF::Vector.578", %"class.WTF::Vector.578"* %10, i64 0, i32 0, i32 0, i32 1
  %64 = load i32, i32* %63, align 4
  store i32 %64, i32* %57, align 8
  store i32 0, i32* %63, align 4
  %65 = getelementptr inbounds %"class.WTF::Vector.578", %"class.WTF::Vector.578"* %10, i64 0, i32 0, i32 0, i32 2
  %66 = load i32, i32* %65, align 4
  store i32 %66, i32* %58, align 4
  store i32 0, i32* %65, align 4
  %67 = load i32, i32* %11, align 4
  %68 = bitcast %"class.mojo::StructPtr.583"* %19 to i64*
  %69 = getelementptr inbounds %"class.mojo::StructPtr.583", %"class.mojo::StructPtr.583"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %70 = bitcast %"class.mojo::StructPtr.583"* %12 to i64*
  %71 = load i64, i64* %70, align 8
  store i64 %71, i64* %68, align 8
  store i64 0, i64* %70, align 8
  %72 = getelementptr inbounds %"class.WTF::Vector.578", %"class.WTF::Vector.578"* %20, i64 0, i32 0, i32 0, i32 1
  %73 = getelementptr inbounds %"class.WTF::Vector.578", %"class.WTF::Vector.578"* %20, i64 0, i32 0, i32 0, i32 2
  %74 = bitcast %"class.WTF::Vector.578"* %13 to i64*
  %75 = bitcast %"class.WTF::Vector.578"* %20 to i64*
  store i64 0, i64* %75, align 8
  %76 = load i64, i64* %74, align 8
  %77 = bitcast %"class.WTF::Vector.578"* %20 to i64*
  store atomic i64 0, i64* %74 monotonic, align 8
  store atomic i64 %76, i64* %77 monotonic, align 8
  %78 = getelementptr inbounds %"class.WTF::Vector.578", %"class.WTF::Vector.578"* %13, i64 0, i32 0, i32 0, i32 1
  %79 = load i32, i32* %78, align 4
  store i32 %79, i32* %72, align 8
  store i32 0, i32* %78, align 4
  %80 = getelementptr inbounds %"class.WTF::Vector.578", %"class.WTF::Vector.578"* %13, i64 0, i32 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  store i32 %81, i32* %73, align 4
  store i32 0, i32* %80, align 4
  call void @_ZN7network5mojom5blink21ContentSecurityPolicyC1EN4mojo9StructPtrINS1_9CSPSourceEEERKN3WTF7HashMapINS0_16CSPDirectiveNameENS7_6StringENS7_7IntHashIS9_EENS7_10HashTraitsIS9_EENSD_ISA_EENS7_18PartitionAllocatorEEENS8_IS9_NS4_INS1_13CSPSourceListEEESC_SE_NSD_ISL_EESG_EEbbbNS0_15WebSandboxFlagsENS3_16InlinedStructPtrINS1_27ContentSecurityPolicyHeaderEEEbNS7_6VectorISA_Lj0ESG_EENS0_25CSPRequireTrustedTypesForENS4_INS1_15CSPTrustedTypesEEEST_(%"class.network::mojom::blink::ContentSecurityPolicy"* nonnull %22, %"class.mojo::StructPtr.561"* nonnull %15, %"class.WTF::HashMap.568"* dereferenceable(24) %2, %"class.WTF::HashMap.573"* nonnull %16, i1 zeroext %43, i1 zeroext %45, i1 zeroext %47, i32 %48, %"class.mojo::InlinedStructPtr"* nonnull %17, i1 zeroext %56, %"class.WTF::Vector.578"* nonnull %18, i32 %67, %"class.mojo::StructPtr.583"* nonnull %19, %"class.WTF::Vector.578"* nonnull %20) #12
  %82 = ptrtoint i8* %21 to i64
  %83 = bitcast %"class.mojo::StructPtr.557"* %0 to i64*
  store i64 %82, i64* %83, align 8
  %84 = getelementptr inbounds %"class.WTF::Vector.578", %"class.WTF::Vector.578"* %20, i64 0, i32 0, i32 0, i32 0
  %85 = load %"class.WTF::String"*, %"class.WTF::String"** %84, align 8
  %86 = icmp eq %"class.WTF::String"* %85, null
  br i1 %86, label %120, label %87, !prof !7

87:                                               ; preds = %14
  %88 = bitcast %"class.WTF::String"* %85 to i8*
  %89 = load i32, i32* %73, align 4
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %118, label %91, !prof !3

91:                                               ; preds = %87
  %92 = zext i32 %89 to i64
  %93 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %85, i64 %92
  br label %94

94:                                               ; preds = %112, %91
  %95 = phi %"class.WTF::String"* [ %113, %112 ], [ %85, %91 ]
  %96 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %95, i64 0, i32 0, i32 0
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %96, align 8
  %98 = icmp eq %"class.WTF::StringImpl"* %97, null
  br i1 %98, label %112, label %99

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 0
  %105 = load i32, i32* %104, align 4
  br i1 %103, label %106, label %108

106:                                              ; preds = %99
  %107 = add i32 %105, -1
  store i32 %107, i32* %104, align 4
  br label %108

108:                                              ; preds = %106, %99
  %109 = phi i32 [ %107, %106 ], [ %105, %99 ]
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %97) #12
  br label %112

112:                                              ; preds = %111, %108, %94
  %113 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %95, i64 1
  %114 = icmp eq %"class.WTF::String"* %113, %93
  br i1 %114, label %115, label %94

115:                                              ; preds = %112
  store i32 0, i32* %73, align 4
  %116 = bitcast %"class.WTF::Vector.578"* %20 to i8**
  %117 = load i8*, i8** %116, align 8
  br label %118

118:                                              ; preds = %115, %87
  %119 = phi i8* [ %117, %115 ], [ %88, %87 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %119) #12
  store %"class.WTF::String"* null, %"class.WTF::String"** %84, align 8
  br label %120

120:                                              ; preds = %14, %118
  %121 = load %"class.network::mojom::blink::CSPTrustedTypes"*, %"class.network::mojom::blink::CSPTrustedTypes"** %69, align 8
  store %"class.network::mojom::blink::CSPTrustedTypes"* null, %"class.network::mojom::blink::CSPTrustedTypes"** %69, align 8
  %122 = icmp eq %"class.network::mojom::blink::CSPTrustedTypes"* %121, null
  br i1 %122, label %125, label %123

123:                                              ; preds = %120
  call void @_ZN7network5mojom5blink15CSPTrustedTypesD1Ev(%"class.network::mojom::blink::CSPTrustedTypes"* nonnull %121) #12
  %124 = bitcast %"class.network::mojom::blink::CSPTrustedTypes"* %121 to i8*
  call void @_ZdlPv(i8* %124) #13
  br label %125

125:                                              ; preds = %120, %123
  %126 = getelementptr inbounds %"class.WTF::Vector.578", %"class.WTF::Vector.578"* %18, i64 0, i32 0, i32 0, i32 0
  %127 = load %"class.WTF::String"*, %"class.WTF::String"** %126, align 8
  %128 = icmp eq %"class.WTF::String"* %127, null
  br i1 %128, label %162, label %129, !prof !7

129:                                              ; preds = %125
  %130 = bitcast %"class.WTF::String"* %127 to i8*
  %131 = load i32, i32* %58, align 4
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %160, label %133, !prof !3

133:                                              ; preds = %129
  %134 = zext i32 %131 to i64
  %135 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %127, i64 %134
  br label %136

136:                                              ; preds = %154, %133
  %137 = phi %"class.WTF::String"* [ %155, %154 ], [ %127, %133 ]
  %138 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %137, i64 0, i32 0, i32 0
  %139 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %138, align 8
  %140 = icmp eq %"class.WTF::StringImpl"* %139, null
  br i1 %140, label %154, label %141

141:                                              ; preds = %136
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load atomic i32, i32* %142 monotonic, align 4
  %144 = and i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 0
  %147 = load i32, i32* %146, align 4
  br i1 %145, label %148, label %150

148:                                              ; preds = %141
  %149 = add i32 %147, -1
  store i32 %149, i32* %146, align 4
  br label %150

150:                                              ; preds = %148, %141
  %151 = phi i32 [ %149, %148 ], [ %147, %141 ]
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %150
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %139) #12
  br label %154

154:                                              ; preds = %153, %150, %136
  %155 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %137, i64 1
  %156 = icmp eq %"class.WTF::String"* %155, %135
  br i1 %156, label %157, label %136

157:                                              ; preds = %154
  store i32 0, i32* %58, align 4
  %158 = bitcast %"class.WTF::Vector.578"* %18 to i8**
  %159 = load i8*, i8** %158, align 8
  br label %160

160:                                              ; preds = %157, %129
  %161 = phi i8* [ %159, %157 ], [ %130, %129 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %161) #12
  store %"class.WTF::String"* null, %"class.WTF::String"** %126, align 8
  br label %162

162:                                              ; preds = %125, %160
  call void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderD1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull %49) #12
  %163 = getelementptr inbounds %"class.WTF::HashMap.573", %"class.WTF::HashMap.573"* %16, i64 0, i32 0, i32 0
  %164 = load %"struct.WTF::KeyValuePair.577"*, %"struct.WTF::KeyValuePair.577"** %163, align 8
  %165 = icmp eq %"struct.WTF::KeyValuePair.577"* %164, null
  br i1 %165, label %187, label %166, !prof !7

166:                                              ; preds = %162
  %167 = load i32, i32* %27, align 8
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %185, label %169

169:                                              ; preds = %166
  %170 = zext i32 %167 to i64
  br label %171

171:                                              ; preds = %182, %169
  %172 = phi i64 [ 0, %169 ], [ %183, %182 ]
  %173 = getelementptr inbounds %"struct.WTF::KeyValuePair.577", %"struct.WTF::KeyValuePair.577"* %164, i64 %172, i32 0
  %174 = load i32, i32* %173, align 4
  %175 = icmp eq i32 %174, -1000001
  br i1 %175, label %182, label %176

176:                                              ; preds = %171
  %177 = getelementptr inbounds %"struct.WTF::KeyValuePair.577", %"struct.WTF::KeyValuePair.577"* %164, i64 %172, i32 1, i32 0, i32 0, i32 0, i32 0
  %178 = load %"class.network::mojom::blink::CSPSourceList"*, %"class.network::mojom::blink::CSPSourceList"** %177, align 8
  store %"class.network::mojom::blink::CSPSourceList"* null, %"class.network::mojom::blink::CSPSourceList"** %177, align 8
  %179 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %178, null
  br i1 %179, label %182, label %180

180:                                              ; preds = %176
  call void @_ZN7network5mojom5blink13CSPSourceListD1Ev(%"class.network::mojom::blink::CSPSourceList"* nonnull %178) #12
  %181 = bitcast %"class.network::mojom::blink::CSPSourceList"* %178 to i8*
  call void @_ZdlPv(i8* %181) #13
  br label %182

182:                                              ; preds = %180, %176, %171
  %183 = add nuw nsw i64 %172, 1
  %184 = icmp eq i64 %183, %170
  br i1 %184, label %185, label %171

185:                                              ; preds = %182, %166
  %186 = bitcast %"struct.WTF::KeyValuePair.577"* %164 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %186) #12
  store %"struct.WTF::KeyValuePair.577"* null, %"struct.WTF::KeyValuePair.577"** %163, align 8
  br label %187

187:                                              ; preds = %162, %185
  %188 = load %"class.network::mojom::blink::CSPSource"*, %"class.network::mojom::blink::CSPSource"** %24, align 8
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %24, align 8
  %189 = icmp eq %"class.network::mojom::blink::CSPSource"* %188, null
  br i1 %189, label %192, label %190

190:                                              ; preds = %187
  call void @_ZN7network5mojom5blink9CSPSourceD1Ev(%"class.network::mojom::blink::CSPSource"* nonnull %188) #12
  %191 = bitcast %"class.network::mojom::blink::CSPSource"* %188 to i8*
  call void @_ZdlPv(i8* %191) #13
  br label %192

192:                                              ; preds = %187, %190
  ret void
}

declare void @_ZN7network5mojom5blink21ContentSecurityPolicyC1EN4mojo9StructPtrINS1_9CSPSourceEEERKN3WTF7HashMapINS0_16CSPDirectiveNameENS7_6StringENS7_7IntHashIS9_EENS7_10HashTraitsIS9_EENSD_ISA_EENS7_18PartitionAllocatorEEENS8_IS9_NS4_INS1_13CSPSourceListEEESC_SE_NSD_ISL_EESG_EEbbbNS0_15WebSandboxFlagsENS3_16InlinedStructPtrINS1_27ContentSecurityPolicyHeaderEEEbNS7_6VectorISA_Lj0ESG_EENS0_25CSPRequireTrustedTypesForENS4_INS1_15CSPTrustedTypesEEEST_(%"class.network::mojom::blink::ContentSecurityPolicy"*, %"class.mojo::StructPtr.561"*, %"class.WTF::HashMap.568"* dereferenceable(24), %"class.WTF::HashMap.573"*, i1 zeroext, i1 zeroext, i1 zeroext, i32, %"class.mojo::InlinedStructPtr"*, i1 zeroext, %"class.WTF::Vector.578"*, i32, %"class.mojo::StructPtr.583"*, %"class.WTF::Vector.578"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7network5mojom5blink9CSPSourceD1Ev(%"class.network::mojom::blink::CSPSource"*) unnamed_addr #7

declare void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderC1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderD1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"*) unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14swapIN7network5mojom5blink27ContentSecurityPolicyHeaderEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS6_EE5valueEvE4typeERS6_S9_(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* dereferenceable(16), %"class.network::mojom::blink::ContentSecurityPolicyHeader"* dereferenceable(16)) local_unnamed_addr #3 comdat {
  %3 = alloca %"class.network::mojom::blink::ContentSecurityPolicyHeader", align 8
  %4 = bitcast %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #12
  %5 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicyHeader", %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %3, i64 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicyHeader", %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %3, i64 0, i32 1
  %7 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicyHeader", %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicyHeader", %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %3, i64 0, i32 1
  %9 = bitcast i32* %8 to i64*
  store i64 -6148914691236517206, i64* %9, align 8
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %5, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #12
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !3

26:                                               ; preds = %17
  tail call void @llvm.trap() #12
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %2, %12, %27
  %30 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicyHeader", %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %0, i64 0, i32 1
  %31 = bitcast i32* %30 to i64*
  %32 = bitcast i32* %6 to i64*
  %33 = load i64, i64* %31, align 8
  store i64 %33, i64* %32, align 8
  %34 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicyHeader", %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %1, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %54, label %37

37:                                               ; preds = %29
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %54

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i33
  %46 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %45, i33 1) #12
  %47 = extractvalue { i33, i1 } %46, 1
  %48 = extractvalue { i33, i1 } %46, 0
  %49 = icmp slt i33 %48, 0
  %50 = or i1 %47, %49
  br i1 %50, label %51, label %52, !prof !3

51:                                               ; preds = %42
  tail call void @llvm.trap() #12
  unreachable

52:                                               ; preds = %42
  %53 = trunc i33 %48 to i32
  store i32 %53, i32* %43, align 4
  br label %54

54:                                               ; preds = %52, %37, %29
  %55 = ptrtoint %"class.WTF::StringImpl"* %35 to i64
  %56 = bitcast %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %0 to i64*
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  store i64 %55, i64* %56, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %66, label %68

66:                                               ; preds = %59
  %67 = add i32 %65, -1
  store i32 %67, i32* %64, align 4
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi i32 [ %67, %66 ], [ %65, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %57) #12
  br label %72

72:                                               ; preds = %54, %68, %71
  %73 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicyHeader", %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %1, i64 0, i32 1
  %74 = bitcast i32* %73 to i64*
  %75 = load i64, i64* %74, align 8
  store i64 %75, i64* %31, align 8
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %95, label %78

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %95

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = zext i32 %85 to i33
  %87 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %86, i33 1) #12
  %88 = extractvalue { i33, i1 } %87, 1
  %89 = extractvalue { i33, i1 } %87, 0
  %90 = icmp slt i33 %89, 0
  %91 = or i1 %88, %90
  br i1 %91, label %92, label %93, !prof !3

92:                                               ; preds = %83
  tail call void @llvm.trap() #12
  unreachable

93:                                               ; preds = %83
  %94 = trunc i33 %89 to i32
  store i32 %94, i32* %84, align 4
  br label %95

95:                                               ; preds = %93, %78, %72
  %96 = ptrtoint %"class.WTF::StringImpl"* %76 to i64
  %97 = bitcast %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %1 to i64*
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  store i64 %96, i64* %97, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #12
  br label %113

113:                                              ; preds = %95, %109, %112
  %114 = load i64, i64* %32, align 8
  store i64 %114, i64* %74, align 8
  call void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderD1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN7network5mojom5blink15CSPTrustedTypesD1Ev(%"class.network::mojom::blink::CSPTrustedTypes"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK7network5mojom5blink9CSPSource5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.561"* noalias sret, %"class.network::mojom::blink::CSPSource"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.network::mojom::blink::CSPSource", %"class.network::mojom::blink::CSPSource"* %1, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %27

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i33
  %19 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %18, i33 1) #12
  %20 = extractvalue { i33, i1 } %19, 1
  %21 = extractvalue { i33, i1 } %19, 0
  %22 = icmp slt i33 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %25, !prof !3

24:                                               ; preds = %15
  tail call void @llvm.trap() #12
  unreachable

25:                                               ; preds = %15
  %26 = trunc i33 %21 to i32
  store i32 %26, i32* %16, align 4
  br label %27

27:                                               ; preds = %2, %10, %25
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %28, align 8
  %29 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #12
  %30 = getelementptr inbounds %"class.network::mojom::blink::CSPSource", %"class.network::mojom::blink::CSPSource"* %1, i64 0, i32 1, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %50, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %50

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = zext i32 %40 to i33
  %42 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %41, i33 1) #12
  %43 = extractvalue { i33, i1 } %42, 1
  %44 = extractvalue { i33, i1 } %42, 0
  %45 = icmp slt i33 %44, 0
  %46 = or i1 %43, %45
  br i1 %46, label %47, label %48, !prof !3

47:                                               ; preds = %38
  tail call void @llvm.trap() #12
  unreachable

48:                                               ; preds = %38
  %49 = trunc i33 %44 to i32
  store i32 %49, i32* %39, align 4
  br label %50

50:                                               ; preds = %27, %33, %48
  %51 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %31, %"class.WTF::StringImpl"** %51, align 8
  %52 = getelementptr inbounds %"class.network::mojom::blink::CSPSource", %"class.network::mojom::blink::CSPSource"* %1, i64 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #12
  %55 = getelementptr inbounds %"class.network::mojom::blink::CSPSource", %"class.network::mojom::blink::CSPSource"* %1, i64 0, i32 4, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %75, label %58

58:                                               ; preds = %50
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %75

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = zext i32 %65 to i33
  %67 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %66, i33 1) #12
  %68 = extractvalue { i33, i1 } %67, 1
  %69 = extractvalue { i33, i1 } %67, 0
  %70 = icmp slt i33 %69, 0
  %71 = or i1 %68, %70
  br i1 %71, label %72, label %73, !prof !3

72:                                               ; preds = %63
  tail call void @llvm.trap() #12
  unreachable

73:                                               ; preds = %63
  %74 = trunc i33 %69 to i32
  store i32 %74, i32* %64, align 4
  br label %75

75:                                               ; preds = %50, %58, %73
  %76 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %56, %"class.WTF::StringImpl"** %76, align 8
  %77 = getelementptr inbounds %"class.network::mojom::blink::CSPSource", %"class.network::mojom::blink::CSPSource"* %1, i64 0, i32 5
  %78 = load i8, i8* %77, align 1, !range !2
  %79 = icmp ne i8 %78, 0
  %80 = getelementptr inbounds %"class.network::mojom::blink::CSPSource", %"class.network::mojom::blink::CSPSource"* %1, i64 0, i32 6
  %81 = load i8, i8* %80, align 1, !range !2
  %82 = icmp ne i8 %81, 0
  %83 = tail call i8* @_Znwm(i64 40) #13, !noalias !71
  %84 = bitcast i8* %83 to %"class.network::mojom::blink::CSPSource"*
  call void @_ZN7network5mojom5blink9CSPSourceC1ERKN3WTF6StringES6_iS6_bb(%"class.network::mojom::blink::CSPSource"* nonnull %84, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.WTF::String"* nonnull dereferenceable(8) %4, i32 %53, %"class.WTF::String"* nonnull dereferenceable(8) %5, i1 zeroext %79, i1 zeroext %82) #12, !noalias !71
  %85 = ptrtoint i8* %83 to i64
  %86 = bitcast %"class.mojo::StructPtr.561"* %0 to i64*
  store i64 %85, i64* %86, align 8, !alias.scope !71
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %102, label %89

89:                                               ; preds = %75
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  br i1 %93, label %96, label %98

96:                                               ; preds = %89
  %97 = add i32 %95, -1
  store i32 %97, i32* %94, align 4
  br label %98

98:                                               ; preds = %96, %89
  %99 = phi i32 [ %97, %96 ], [ %95, %89 ]
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %98
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %87) #12
  br label %102

102:                                              ; preds = %75, %98, %101
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #12
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %102
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #12
  br label %118

118:                                              ; preds = %102, %114, %117
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #12
  %119 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %120 = icmp eq %"class.WTF::StringImpl"* %119, null
  br i1 %120, label %134, label %121

121:                                              ; preds = %118
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load atomic i32, i32* %122 monotonic, align 4
  %124 = and i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 0
  %127 = load i32, i32* %126, align 4
  br i1 %125, label %128, label %130

128:                                              ; preds = %121
  %129 = add i32 %127, -1
  store i32 %129, i32* %126, align 4
  br label %130

130:                                              ; preds = %128, %121
  %131 = phi i32 [ %129, %128 ], [ %127, %121 ]
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %134

133:                                              ; preds = %130
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %119) #12
  br label %134

134:                                              ; preds = %118, %130, %133
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  ret void
}

declare void @_ZN7network5mojom5blink9CSPSourceC1ERKN3WTF6StringES6_iS6_bb(%"class.network::mojom::blink::CSPSource"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), i32, %"class.WTF::String"* dereferenceable(8), i1 zeroext, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo11CloneTraitsIN3WTF7HashMapIN7network5mojom16CSPDirectiveNameENS1_6StringENS1_7IntHashIS5_EENS1_10HashTraitsIS5_EENS9_IS6_EENS1_18PartitionAllocatorEEELb0EE5CloneERKSD_(%"class.WTF::HashMap.568"* noalias sret, %"class.WTF::HashMap.568"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.WTF::String", align 8
  %5 = bitcast %"class.WTF::HashMap.568"* %0 to i8*
  %6 = bitcast %"class.WTF::HashMap.568"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 -86, i64 24, i1 false)
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 20, i1 false) #12
  %7 = getelementptr inbounds %"class.WTF::HashMap.568", %"class.WTF::HashMap.568"* %1, i64 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::HashMap.568", %"class.WTF::HashMap.568"* %1, i64 0, i32 0, i32 0
  %11 = load %"struct.WTF::KeyValuePair.572"*, %"struct.WTF::KeyValuePair.572"** %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashMap.568", %"class.WTF::HashMap.568"* %1, i64 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair.572", %"struct.WTF::KeyValuePair.572"* %11, i64 %14
  br i1 %9, label %33, label %16

16:                                               ; preds = %2
  %17 = icmp eq i32 %13, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %16, %22
  %19 = phi %"struct.WTF::KeyValuePair.572"* [ %23, %22 ], [ %11, %16 ]
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair.572", %"struct.WTF::KeyValuePair.572"* %19, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  switch i32 %21, label %25 [
    i32 -1000001, label %22
    i32 0, label %22
  ]

22:                                               ; preds = %18, %18
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.572", %"struct.WTF::KeyValuePair.572"* %19, i64 1
  %24 = icmp eq %"struct.WTF::KeyValuePair.572"* %23, %15
  br i1 %24, label %33, label %18

25:                                               ; preds = %18, %16
  %26 = phi %"struct.WTF::KeyValuePair.572"* [ %11, %16 ], [ %19, %18 ]
  %27 = icmp eq %"struct.WTF::KeyValuePair.572"* %26, %15
  br i1 %27, label %33, label %28

28:                                               ; preds = %25
  %29 = bitcast i32* %3 to i8*
  %30 = bitcast %"class.WTF::String"* %4 to i8*
  %31 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.WTF::HashMap.568", %"class.WTF::HashMap.568"* %0, i64 0, i32 0
  br label %34

33:                                               ; preds = %22, %75, %85, %82, %2, %25
  ret void

34:                                               ; preds = %28, %85
  %35 = phi %"struct.WTF::KeyValuePair.572"* [ %26, %28 ], [ %79, %85 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %29) #12
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair.572", %"struct.WTF::KeyValuePair.572"* %35, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  store i32 %37, i32* %3, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #12
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair.572", %"struct.WTF::KeyValuePair.572"* %35, i64 0, i32 1, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %58, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %58

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i33
  %50 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %49, i33 1) #12
  %51 = extractvalue { i33, i1 } %50, 1
  %52 = extractvalue { i33, i1 } %50, 0
  %53 = icmp slt i33 %52, 0
  %54 = or i1 %51, %53
  br i1 %54, label %55, label %56, !prof !3

55:                                               ; preds = %46
  call void @llvm.trap() #12
  unreachable

56:                                               ; preds = %46
  %57 = trunc i33 %52 to i32
  store i32 %57, i32* %47, align 4
  br label %58

58:                                               ; preds = %34, %41, %56
  store %"class.WTF::StringImpl"* %39, %"class.WTF::StringImpl"** %31, align 8
  %59 = call { %"struct.WTF::KeyValuePair.572"*, i8 } @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EES3_S5_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.569"* %32, i32* nonnull dereferenceable(4) %3, %"class.WTF::String"* nonnull dereferenceable(8) %4) #12
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %75, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %71

69:                                               ; preds = %62
  %70 = add i32 %68, -1
  store i32 %70, i32* %67, align 4
  br label %71

71:                                               ; preds = %69, %62
  %72 = phi i32 [ %70, %69 ], [ %68, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #12
  br label %75

75:                                               ; preds = %58, %71, %74
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29) #12
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair.572", %"struct.WTF::KeyValuePair.572"* %35, i64 1
  %77 = icmp eq %"struct.WTF::KeyValuePair.572"* %76, %15
  br i1 %77, label %33, label %78

78:                                               ; preds = %75, %82
  %79 = phi %"struct.WTF::KeyValuePair.572"* [ %83, %82 ], [ %76, %75 ]
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.572", %"struct.WTF::KeyValuePair.572"* %79, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  switch i32 %81, label %85 [
    i32 -1000001, label %82
    i32 0, label %82
  ]

82:                                               ; preds = %78, %78
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.572", %"struct.WTF::KeyValuePair.572"* %79, i64 1
  %84 = icmp eq %"struct.WTF::KeyValuePair.572"* %83, %15
  br i1 %84, label %33, label %78

85:                                               ; preds = %78
  %86 = icmp eq %"struct.WTF::KeyValuePair.572"* %79, %15
  br i1 %86, label %33, label %34
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.572"*, i8 } @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EES3_S5_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.569"*, i32* dereferenceable(4), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.569", %"class.WTF::HashTable.569"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.572"*, %"struct.WTF::KeyValuePair.572"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.572"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.572"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.569"* %0, %"struct.WTF::KeyValuePair.572"* null)
  %9 = load %"struct.WTF::KeyValuePair.572"*, %"struct.WTF::KeyValuePair.572"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.572"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.569", %"class.WTF::HashTable.569"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.572", %"struct.WTF::KeyValuePair.572"* %11, i64 %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.572", %"struct.WTF::KeyValuePair.572"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %81, label %36

36:                                               ; preds = %10
  %37 = xor i32 %29, -1
  %38 = lshr i32 %27, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %36, %57
  %51 = phi i32 [ %34, %36 ], [ %66, %57 ]
  %52 = phi %"struct.WTF::KeyValuePair.572"* [ %32, %36 ], [ %64, %57 ]
  %53 = phi %"struct.WTF::KeyValuePair.572"* [ null, %36 ], [ %59, %57 ]
  %54 = phi i64 [ %31, %36 ], [ %63, %57 ]
  %55 = phi i64 [ 0, %36 ], [ %61, %57 ]
  %56 = icmp eq i32 %51, %16
  br i1 %56, label %118, label %57

57:                                               ; preds = %50
  %58 = icmp eq i32 %51, -1000001
  %59 = select i1 %58, %"struct.WTF::KeyValuePair.572"* %52, %"struct.WTF::KeyValuePair.572"* %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %49, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.572", %"struct.WTF::KeyValuePair.572"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.572", %"struct.WTF::KeyValuePair.572"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %50

68:                                               ; preds = %57
  %69 = icmp eq %"struct.WTF::KeyValuePair.572"* %59, null
  br i1 %69, label %81, label %70

70:                                               ; preds = %68
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.572", %"struct.WTF::KeyValuePair.572"* %59, i64 0, i32 0
  store i32 0, i32* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.572", %"struct.WTF::KeyValuePair.572"* %59, i64 0, i32 1
  %73 = bitcast %"class.WTF::String"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = getelementptr inbounds %"class.WTF::HashTable.569", %"class.WTF::HashTable.569"* %0, i64 0, i32 3
  %75 = load i32, i32* %74, align 8
  %76 = add i32 %75, 2147483647
  %77 = and i32 %76, 2147483647
  %78 = and i32 %75, -2147483648
  %79 = or i32 %77, %78
  store i32 %79, i32* %74, align 8
  %80 = load i32, i32* %1, align 4
  br label %81

81:                                               ; preds = %10, %68, %70
  %82 = phi i32 [ %80, %70 ], [ %16, %68 ], [ %16, %10 ]
  %83 = phi %"struct.WTF::KeyValuePair.572"* [ %59, %70 ], [ %64, %68 ], [ %32, %10 ]
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair.572", %"struct.WTF::KeyValuePair.572"* %83, i64 0, i32 0
  store i32 %82, i32* %84, align 8
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair.572", %"struct.WTF::KeyValuePair.572"* %83, i64 0, i32 1
  %86 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %87 = bitcast %"class.WTF::String"* %2 to i64*
  %88 = load i64, i64* %87, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %86, align 8
  %89 = bitcast %"class.WTF::String"* %85 to i64*
  %90 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %85, i64 0, i32 0, i32 0
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %90, align 8
  store i64 %88, i64* %89, align 8
  %92 = icmp eq %"class.WTF::StringImpl"* %91, null
  br i1 %92, label %106, label %93

93:                                               ; preds = %81
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  br i1 %97, label %100, label %102

100:                                              ; preds = %93
  %101 = add i32 %99, -1
  store i32 %101, i32* %98, align 4
  br label %102

102:                                              ; preds = %100, %93
  %103 = phi i32 [ %101, %100 ], [ %99, %93 ]
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %102
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %91) #12
  br label %106

106:                                              ; preds = %81, %102, %105
  %107 = getelementptr inbounds %"class.WTF::HashTable.569", %"class.WTF::HashTable.569"* %0, i64 0, i32 2
  %108 = load i32, i32* %107, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %107, align 4
  %110 = getelementptr inbounds %"class.WTF::HashTable.569", %"class.WTF::HashTable.569"* %0, i64 0, i32 3
  %111 = load i32, i32* %110, align 8
  %112 = add i32 %111, %109
  %113 = shl i32 %112, 1
  %114 = load i32, i32* %12, align 8
  %115 = icmp ult i32 %113, %114
  br i1 %115, label %118, label %116

116:                                              ; preds = %106
  %117 = tail call %"struct.WTF::KeyValuePair.572"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.569"* %0, %"struct.WTF::KeyValuePair.572"* %83)
  br label %118

118:                                              ; preds = %50, %106, %116
  %119 = phi i8 [ 1, %106 ], [ 1, %116 ], [ 0, %50 ]
  %120 = phi %"struct.WTF::KeyValuePair.572"* [ %83, %106 ], [ %117, %116 ], [ %52, %50 ]
  %121 = insertvalue { %"struct.WTF::KeyValuePair.572"*, i8 } undef, %"struct.WTF::KeyValuePair.572"* %120, 0
  %122 = insertvalue { %"struct.WTF::KeyValuePair.572"*, i8 } %121, i8 %119, 1
  ret { %"struct.WTF::KeyValuePair.572"*, i8 } %122
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.572"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.569"*, %"struct.WTF::KeyValuePair.572"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.569", %"class.WTF::HashTable.569"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.569", %"class.WTF::HashTable.569"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #12
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i8* %22, i8* %23) #12
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #12
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #12
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([112 x i8], [112 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN7network5mojom16CSPDirectiveNameENS_6StringEEEEEPKcv, i64 0, i64 0)) #12
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.572"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %77, label %38

38:                                               ; preds = %31
  %39 = add nsw i64 %33, -1
  %40 = and i64 %33, 3
  %41 = icmp ult i64 %39, 3
  br i1 %41, label %65, label %42

42:                                               ; preds = %38
  %43 = sub nsw i64 %33, %40
  br label %44

44:                                               ; preds = %44, %42
  %45 = phi i64 [ 0, %42 ], [ %62, %44 ]
  %46 = phi i64 [ %43, %42 ], [ %63, %44 ]
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.572", %"struct.WTF::KeyValuePair.572"* %36, i64 %45, i32 0
  store i32 0, i32* %47, align 8
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair.572", %"struct.WTF::KeyValuePair.572"* %36, i64 %45, i32 1
  %49 = bitcast %"class.WTF::String"* %48 to i64*
  store i64 0, i64* %49, align 8
  %50 = or i64 %45, 1
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.572", %"struct.WTF::KeyValuePair.572"* %36, i64 %50, i32 0
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.572", %"struct.WTF::KeyValuePair.572"* %36, i64 %50, i32 1
  %53 = bitcast %"class.WTF::String"* %52 to i64*
  store i64 0, i64* %53, align 8
  %54 = or i64 %45, 2
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.572", %"struct.WTF::KeyValuePair.572"* %36, i64 %54, i32 0
  store i32 0, i32* %55, align 8
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.572", %"struct.WTF::KeyValuePair.572"* %36, i64 %54, i32 1
  %57 = bitcast %"class.WTF::String"* %56 to i64*
  store i64 0, i64* %57, align 8
  %58 = or i64 %45, 3
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.572", %"struct.WTF::KeyValuePair.572"* %36, i64 %58, i32 0
  store i32 0, i32* %59, align 8
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair.572", %"struct.WTF::KeyValuePair.572"* %36, i64 %58, i32 1
  %61 = bitcast %"class.WTF::String"* %60 to i64*
  store i64 0, i64* %61, align 8
  %62 = add nuw nsw i64 %45, 4
  %63 = add i64 %46, -4
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %44

65:                                               ; preds = %44, %38
  %66 = phi i64 [ 0, %38 ], [ %62, %44 ]
  %67 = icmp eq i64 %40, 0
  br i1 %67, label %77, label %68

68:                                               ; preds = %65, %68
  %69 = phi i64 [ %74, %68 ], [ %66, %65 ]
  %70 = phi i64 [ %75, %68 ], [ %40, %65 ]
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.572", %"struct.WTF::KeyValuePair.572"* %36, i64 %69, i32 0
  store i32 0, i32* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.572", %"struct.WTF::KeyValuePair.572"* %36, i64 %69, i32 1
  %73 = bitcast %"class.WTF::String"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = add nuw nsw i64 %69, 1
  %75 = add i64 %70, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %68, !llvm.loop !74

77:                                               ; preds = %65, %68, %31
  %78 = call %"struct.WTF::KeyValuePair.572"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.569"* %0, %"struct.WTF::KeyValuePair.572"* %36, i32 %32, %"struct.WTF::KeyValuePair.572"* %1) #12
  ret %"struct.WTF::KeyValuePair.572"* %78
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.572"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.569"*, %"struct.WTF::KeyValuePair.572"*, i32, %"struct.WTF::KeyValuePair.572"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair.572"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.569", %"class.WTF::HashTable.569"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.569", %"class.WTF::HashTable.569"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.569"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"struct.WTF::KeyValuePair.572"*, %"struct.WTF::KeyValuePair.572"** %9, align 8
  %17 = ptrtoint %"struct.WTF::KeyValuePair.572"* %16 to i64
  br label %62

18:                                               ; preds = %168
  %19 = bitcast %"class.WTF::HashTable.569"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %169, %18 ]
  %23 = phi %"struct.WTF::KeyValuePair.572"* [ null, %10 ], [ %172, %18 ]
  %24 = phi i32 [ 0, %10 ], [ %170, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %25 = inttoptr i64 %22 to %"struct.WTF::KeyValuePair.572"*
  %26 = icmp eq i64 %22, 0
  br i1 %26, label %58, label %27

27:                                               ; preds = %20
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %56, label %29

29:                                               ; preds = %27
  %30 = zext i32 %24 to i64
  br label %31

31:                                               ; preds = %53, %29
  %32 = phi i64 [ 0, %29 ], [ %54, %53 ]
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.572", %"struct.WTF::KeyValuePair.572"* %25, i64 %32, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, -1000001
  br i1 %35, label %53, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.572", %"struct.WTF::KeyValuePair.572"* %25, i64 %32, i32 1, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #12
  br label %53

53:                                               ; preds = %52, %49, %36, %31
  %54 = add nuw nsw i64 %32, 1
  %55 = icmp eq i64 %54, %30
  br i1 %55, label %56, label %31

56:                                               ; preds = %53, %27
  %57 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %57) #12
  br label %58

58:                                               ; preds = %20, %56
  %59 = getelementptr inbounds %"class.WTF::HashTable.569", %"class.WTF::HashTable.569"* %0, i64 0, i32 3
  %60 = load i32, i32* %59, align 8
  %61 = and i32 %60, -2147483648
  store i32 %61, i32* %59, align 8
  ret %"struct.WTF::KeyValuePair.572"* %23

62:                                               ; preds = %13, %168
  %63 = phi i64 [ %17, %13 ], [ %169, %168 ]
  %64 = phi i32 [ %7, %13 ], [ %170, %168 ]
  %65 = phi %"struct.WTF::KeyValuePair.572"* [ %16, %13 ], [ %171, %168 ]
  %66 = phi %"struct.WTF::KeyValuePair.572"* [ null, %13 ], [ %172, %168 ]
  %67 = phi i32 [ 0, %13 ], [ %173, %168 ]
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.572", %"struct.WTF::KeyValuePair.572"* %65, i64 %68, i32 0
  %70 = load i32, i32* %69, align 4
  switch i32 %70, label %71 [
    i32 -1000001, label %168
    i32 0, label %168
  ]

71:                                               ; preds = %62
  %72 = shl i32 %70, 15
  %73 = xor i32 %72, -1
  %74 = add i32 %70, %73
  %75 = lshr i32 %74, 10
  %76 = xor i32 %75, %74
  %77 = mul i32 %76, 9
  %78 = lshr i32 %77, 6
  %79 = xor i32 %78, %77
  %80 = shl i32 %79, 11
  %81 = xor i32 %80, -1
  %82 = add i32 %79, %81
  %83 = lshr i32 %82, 16
  %84 = xor i32 %83, %82
  %85 = and i32 %84, %14
  %86 = zext i32 %85 to i64
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair.572", %"struct.WTF::KeyValuePair.572"* %1, i64 %86
  %88 = ptrtoint %"struct.WTF::KeyValuePair.572"* %87 to i64
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair.572", %"struct.WTF::KeyValuePair.572"* %87, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %109, label %92

92:                                               ; preds = %71
  %93 = xor i32 %84, -1
  %94 = lshr i32 %82, 23
  %95 = add i32 %94, %93
  %96 = shl i32 %95, 12
  %97 = xor i32 %96, %95
  %98 = lshr i32 %97, 7
  %99 = xor i32 %98, %97
  %100 = shl i32 %99, 2
  %101 = xor i32 %100, %99
  %102 = lshr i32 %101, 20
  %103 = xor i32 %102, %101
  %104 = or i32 %103, 1
  %105 = zext i32 %104 to i64
  br label %115

106:                                              ; preds = %122
  %107 = ptrtoint %"struct.WTF::KeyValuePair.572"* %129 to i64
  %108 = inttoptr i64 %124 to %"struct.WTF::KeyValuePair.572"*
  br label %109

109:                                              ; preds = %106, %71
  %110 = phi i64 [ %107, %106 ], [ %88, %71 ]
  %111 = phi %"struct.WTF::KeyValuePair.572"* [ %108, %106 ], [ null, %71 ]
  %112 = icmp eq %"struct.WTF::KeyValuePair.572"* %111, null
  %113 = ptrtoint %"struct.WTF::KeyValuePair.572"* %111 to i64
  %114 = select i1 %112, i64 %110, i64 %113
  br label %134

115:                                              ; preds = %122, %92
  %116 = phi i64 [ 0, %92 ], [ %124, %122 ]
  %117 = phi i32 [ %90, %92 ], [ %132, %122 ]
  %118 = phi i64 [ %88, %92 ], [ %130, %122 ]
  %119 = phi i64 [ %86, %92 ], [ %128, %122 ]
  %120 = phi i64 [ 0, %92 ], [ %126, %122 ]
  %121 = icmp eq i32 %117, %70
  br i1 %121, label %134, label %122

122:                                              ; preds = %115
  %123 = icmp eq i32 %117, -1000001
  %124 = select i1 %123, i64 %118, i64 %116
  %125 = icmp eq i64 %120, 0
  %126 = select i1 %125, i64 %105, i64 %120
  %127 = add i64 %126, %119
  %128 = and i64 %127, %15
  %129 = getelementptr inbounds %"struct.WTF::KeyValuePair.572", %"struct.WTF::KeyValuePair.572"* %1, i64 %128
  %130 = ptrtoint %"struct.WTF::KeyValuePair.572"* %129 to i64
  %131 = getelementptr inbounds %"struct.WTF::KeyValuePair.572", %"struct.WTF::KeyValuePair.572"* %129, i64 0, i32 0
  %132 = load i32, i32* %131, align 4
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %106, label %115

134:                                              ; preds = %115, %109
  %135 = phi i64 [ %114, %109 ], [ %118, %115 ]
  %136 = inttoptr i64 %135 to %"struct.WTF::KeyValuePair.572"*
  %137 = getelementptr inbounds %"struct.WTF::KeyValuePair.572", %"struct.WTF::KeyValuePair.572"* %136, i64 0, i32 1, i32 0, i32 0
  %138 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %137, align 8
  %139 = icmp eq %"class.WTF::StringImpl"* %138, null
  br i1 %139, label %153, label %140

140:                                              ; preds = %134
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = load atomic i32, i32* %141 monotonic, align 4
  %143 = and i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 0
  %146 = load i32, i32* %145, align 4
  br i1 %144, label %147, label %149

147:                                              ; preds = %140
  %148 = add i32 %146, -1
  store i32 %148, i32* %145, align 4
  br label %149

149:                                              ; preds = %147, %140
  %150 = phi i32 [ %148, %147 ], [ %146, %140 ]
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %153

152:                                              ; preds = %149
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %138) #12
  br label %153

153:                                              ; preds = %134, %149, %152
  %154 = getelementptr inbounds %"struct.WTF::KeyValuePair.572", %"struct.WTF::KeyValuePair.572"* %136, i64 0, i32 0
  %155 = load i32, i32* %69, align 8
  store i32 %155, i32* %154, align 8
  %156 = getelementptr inbounds %"struct.WTF::KeyValuePair.572", %"struct.WTF::KeyValuePair.572"* %136, i64 0, i32 1
  %157 = getelementptr inbounds %"struct.WTF::KeyValuePair.572", %"struct.WTF::KeyValuePair.572"* %65, i64 %68, i32 1
  %158 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %157, i64 0, i32 0, i32 0
  %159 = bitcast %"class.WTF::String"* %157 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = bitcast %"class.WTF::String"* %156 to i64*
  store i64 %160, i64* %161, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %158, align 8
  %162 = load %"struct.WTF::KeyValuePair.572"*, %"struct.WTF::KeyValuePair.572"** %9, align 8
  %163 = getelementptr inbounds %"struct.WTF::KeyValuePair.572", %"struct.WTF::KeyValuePair.572"* %162, i64 %68
  %164 = icmp eq %"struct.WTF::KeyValuePair.572"* %163, %3
  %165 = select i1 %164, %"struct.WTF::KeyValuePair.572"* %136, %"struct.WTF::KeyValuePair.572"* %66
  %166 = load i32, i32* %6, align 8
  %167 = ptrtoint %"struct.WTF::KeyValuePair.572"* %162 to i64
  br label %168

168:                                              ; preds = %62, %62, %153
  %169 = phi i64 [ %63, %62 ], [ %167, %153 ], [ %63, %62 ]
  %170 = phi i32 [ %64, %62 ], [ %166, %153 ], [ %64, %62 ]
  %171 = phi %"struct.WTF::KeyValuePair.572"* [ %65, %62 ], [ %162, %153 ], [ %65, %62 ]
  %172 = phi %"struct.WTF::KeyValuePair.572"* [ %66, %62 ], [ %165, %153 ], [ %66, %62 ]
  %173 = add i32 %67, 1
  %174 = icmp eq i32 %173, %170
  br i1 %174, label %18, label %62
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo11CloneTraitsIN3WTF7HashMapIN7network5mojom16CSPDirectiveNameENS_9StructPtrINS4_5blink13CSPSourceListEEENS1_7IntHashIS5_EENS1_10HashTraitsIS5_EENSC_IS9_EENS1_18PartitionAllocatorEEELb0EE5CloneERKSG_(%"class.WTF::HashMap.573"* noalias sret, %"class.WTF::HashMap.573"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.mojo::StructPtr.2738", align 8
  %5 = bitcast %"class.WTF::HashMap.573"* %0 to i8*
  %6 = bitcast %"class.WTF::HashMap.573"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 -86, i64 24, i1 false)
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 20, i1 false) #12
  %7 = getelementptr inbounds %"class.WTF::HashMap.573", %"class.WTF::HashMap.573"* %1, i64 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::HashMap.573", %"class.WTF::HashMap.573"* %1, i64 0, i32 0, i32 0
  %11 = load %"struct.WTF::KeyValuePair.577"*, %"struct.WTF::KeyValuePair.577"** %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashMap.573", %"class.WTF::HashMap.573"* %1, i64 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair.577", %"struct.WTF::KeyValuePair.577"* %11, i64 %14
  br i1 %9, label %34, label %16

16:                                               ; preds = %2
  %17 = icmp eq i32 %13, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %16, %22
  %19 = phi %"struct.WTF::KeyValuePair.577"* [ %23, %22 ], [ %11, %16 ]
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair.577", %"struct.WTF::KeyValuePair.577"* %19, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  switch i32 %21, label %25 [
    i32 -1000001, label %22
    i32 0, label %22
  ]

22:                                               ; preds = %18, %18
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.577", %"struct.WTF::KeyValuePair.577"* %19, i64 1
  %24 = icmp eq %"struct.WTF::KeyValuePair.577"* %23, %15
  br i1 %24, label %34, label %18

25:                                               ; preds = %18, %16
  %26 = phi %"struct.WTF::KeyValuePair.577"* [ %11, %16 ], [ %19, %18 ]
  %27 = icmp eq %"struct.WTF::KeyValuePair.577"* %26, %15
  br i1 %27, label %34, label %28

28:                                               ; preds = %25
  %29 = bitcast i32* %3 to i8*
  %30 = bitcast %"class.mojo::StructPtr.2738"* %4 to i8*
  %31 = bitcast %"class.mojo::StructPtr.2738"* %4 to i64*
  %32 = getelementptr inbounds %"class.WTF::HashMap.573", %"class.WTF::HashMap.573"* %0, i64 0, i32 0
  %33 = getelementptr inbounds %"class.mojo::StructPtr.2738", %"class.mojo::StructPtr.2738"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %35

34:                                               ; preds = %22, %50, %60, %57, %2, %25
  ret void

35:                                               ; preds = %28, %60
  %36 = phi %"struct.WTF::KeyValuePair.577"* [ %26, %28 ], [ %54, %60 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %29) #12
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.577", %"struct.WTF::KeyValuePair.577"* %36, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  store i32 %38, i32* %3, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #12
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.577", %"struct.WTF::KeyValuePair.577"* %36, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %40 = load %"class.network::mojom::blink::CSPSourceList"*, %"class.network::mojom::blink::CSPSourceList"** %39, align 8, !noalias !75
  %41 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %40, null
  br i1 %41, label %42, label %43

42:                                               ; preds = %35
  store i64 0, i64* %31, align 8, !alias.scope !75
  br label %44

43:                                               ; preds = %35
  call void @_ZNK7network5mojom5blink13CSPSourceList5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.2738"* nonnull sret %4, %"class.network::mojom::blink::CSPSourceList"* nonnull %40) #12
  br label %44

44:                                               ; preds = %42, %43
  %45 = call { %"struct.WTF::KeyValuePair.577"*, i8 } @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISI_SD_SJ_EES3_S9_EENS_18HashTableAddResultISK_SA_EEOT0_OT1_(%"class.WTF::HashTable.574"* %32, i32* nonnull dereferenceable(4) %3, %"class.mojo::StructPtr.2738"* nonnull dereferenceable(8) %4) #12
  %46 = load %"class.network::mojom::blink::CSPSourceList"*, %"class.network::mojom::blink::CSPSourceList"** %33, align 8
  store %"class.network::mojom::blink::CSPSourceList"* null, %"class.network::mojom::blink::CSPSourceList"** %33, align 8
  %47 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  call void @_ZN7network5mojom5blink13CSPSourceListD1Ev(%"class.network::mojom::blink::CSPSourceList"* nonnull %46) #12
  %49 = bitcast %"class.network::mojom::blink::CSPSourceList"* %46 to i8*
  call void @_ZdlPv(i8* %49) #13
  br label %50

50:                                               ; preds = %44, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29) #12
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.577", %"struct.WTF::KeyValuePair.577"* %36, i64 1
  %52 = icmp eq %"struct.WTF::KeyValuePair.577"* %51, %15
  br i1 %52, label %34, label %53

53:                                               ; preds = %50, %57
  %54 = phi %"struct.WTF::KeyValuePair.577"* [ %58, %57 ], [ %51, %50 ]
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.577", %"struct.WTF::KeyValuePair.577"* %54, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  switch i32 %56, label %60 [
    i32 -1000001, label %57
    i32 0, label %57
  ]

57:                                               ; preds = %53, %53
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.577", %"struct.WTF::KeyValuePair.577"* %54, i64 1
  %59 = icmp eq %"struct.WTF::KeyValuePair.577"* %58, %15
  br i1 %59, label %34, label %53

60:                                               ; preds = %53
  %61 = icmp eq %"struct.WTF::KeyValuePair.577"* %54, %15
  br i1 %61, label %34, label %35
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.577"*, i8 } @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISI_SD_SJ_EES3_S9_EENS_18HashTableAddResultISK_SA_EEOT0_OT1_(%"class.WTF::HashTable.574"*, i32* dereferenceable(4), %"class.mojo::StructPtr.2738"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.574", %"class.WTF::HashTable.574"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.577"*, %"struct.WTF::KeyValuePair.577"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.577"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.577"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable.574"* %0, %"struct.WTF::KeyValuePair.577"* null)
  %9 = load %"struct.WTF::KeyValuePair.577"*, %"struct.WTF::KeyValuePair.577"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.577"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.574", %"class.WTF::HashTable.574"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.577", %"struct.WTF::KeyValuePair.577"* %11, i64 %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.577", %"struct.WTF::KeyValuePair.577"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %81, label %36

36:                                               ; preds = %10
  %37 = xor i32 %29, -1
  %38 = lshr i32 %27, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %36, %57
  %51 = phi i32 [ %34, %36 ], [ %66, %57 ]
  %52 = phi %"struct.WTF::KeyValuePair.577"* [ %32, %36 ], [ %64, %57 ]
  %53 = phi %"struct.WTF::KeyValuePair.577"* [ null, %36 ], [ %59, %57 ]
  %54 = phi i64 [ %31, %36 ], [ %63, %57 ]
  %55 = phi i64 [ 0, %36 ], [ %61, %57 ]
  %56 = icmp eq i32 %51, %16
  br i1 %56, label %111, label %57

57:                                               ; preds = %50
  %58 = icmp eq i32 %51, -1000001
  %59 = select i1 %58, %"struct.WTF::KeyValuePair.577"* %52, %"struct.WTF::KeyValuePair.577"* %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %49, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.577", %"struct.WTF::KeyValuePair.577"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.577", %"struct.WTF::KeyValuePair.577"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %50

68:                                               ; preds = %57
  %69 = icmp eq %"struct.WTF::KeyValuePair.577"* %59, null
  br i1 %69, label %81, label %70

70:                                               ; preds = %68
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.577", %"struct.WTF::KeyValuePair.577"* %59, i64 0, i32 0
  store i32 0, i32* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.577", %"struct.WTF::KeyValuePair.577"* %59, i64 0, i32 1
  %73 = bitcast %"class.mojo::StructPtr.2738"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = getelementptr inbounds %"class.WTF::HashTable.574", %"class.WTF::HashTable.574"* %0, i64 0, i32 3
  %75 = load i32, i32* %74, align 8
  %76 = add i32 %75, 2147483647
  %77 = and i32 %76, 2147483647
  %78 = and i32 %75, -2147483648
  %79 = or i32 %77, %78
  store i32 %79, i32* %74, align 8
  %80 = load i32, i32* %1, align 4
  br label %81

81:                                               ; preds = %10, %68, %70
  %82 = phi i32 [ %80, %70 ], [ %16, %68 ], [ %16, %10 ]
  %83 = phi %"struct.WTF::KeyValuePair.577"* [ %59, %70 ], [ %64, %68 ], [ %32, %10 ]
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair.577", %"struct.WTF::KeyValuePair.577"* %83, i64 0, i32 0
  store i32 %82, i32* %84, align 8
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair.577", %"struct.WTF::KeyValuePair.577"* %83, i64 0, i32 1
  %86 = getelementptr inbounds %"class.mojo::StructPtr.2738", %"class.mojo::StructPtr.2738"* %85, i64 0, i32 0, i32 0, i32 0, i32 0
  %87 = load %"class.network::mojom::blink::CSPSourceList"*, %"class.network::mojom::blink::CSPSourceList"** %86, align 8
  store %"class.network::mojom::blink::CSPSourceList"* null, %"class.network::mojom::blink::CSPSourceList"** %86, align 8
  %88 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %87, null
  br i1 %88, label %89, label %91

89:                                               ; preds = %81
  %90 = bitcast %"class.mojo::StructPtr.2738"* %85 to i64*
  br label %95

91:                                               ; preds = %81
  tail call void @_ZN7network5mojom5blink13CSPSourceListD1Ev(%"class.network::mojom::blink::CSPSourceList"* nonnull %87) #12
  %92 = bitcast %"class.network::mojom::blink::CSPSourceList"* %87 to i8*
  tail call void @_ZdlPv(i8* %92) #13
  %93 = bitcast %"class.mojo::StructPtr.2738"* %85 to i64*
  %94 = load i64, i64* %93, align 8
  br label %95

95:                                               ; preds = %89, %91
  %96 = phi i64* [ %90, %89 ], [ %93, %91 ]
  %97 = phi i64 [ 0, %89 ], [ %94, %91 ]
  %98 = bitcast %"class.mojo::StructPtr.2738"* %2 to i64*
  %99 = load i64, i64* %98, align 8
  store i64 %99, i64* %96, align 8
  store i64 %97, i64* %98, align 8
  %100 = getelementptr inbounds %"class.WTF::HashTable.574", %"class.WTF::HashTable.574"* %0, i64 0, i32 2
  %101 = load i32, i32* %100, align 4
  %102 = add i32 %101, 1
  store i32 %102, i32* %100, align 4
  %103 = getelementptr inbounds %"class.WTF::HashTable.574", %"class.WTF::HashTable.574"* %0, i64 0, i32 3
  %104 = load i32, i32* %103, align 8
  %105 = add i32 %104, %102
  %106 = shl i32 %105, 1
  %107 = load i32, i32* %12, align 8
  %108 = icmp ult i32 %106, %107
  br i1 %108, label %111, label %109

109:                                              ; preds = %95
  %110 = tail call %"struct.WTF::KeyValuePair.577"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable.574"* %0, %"struct.WTF::KeyValuePair.577"* %83)
  br label %111

111:                                              ; preds = %50, %95, %109
  %112 = phi i8 [ 1, %95 ], [ 1, %109 ], [ 0, %50 ]
  %113 = phi %"struct.WTF::KeyValuePair.577"* [ %83, %95 ], [ %110, %109 ], [ %52, %50 ]
  %114 = insertvalue { %"struct.WTF::KeyValuePair.577"*, i8 } undef, %"struct.WTF::KeyValuePair.577"* %113, 0
  %115 = insertvalue { %"struct.WTF::KeyValuePair.577"*, i8 } %114, i8 %112, 1
  ret { %"struct.WTF::KeyValuePair.577"*, i8 } %115
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.577"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable.574"*, %"struct.WTF::KeyValuePair.577"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.574", %"class.WTF::HashTable.574"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.574", %"class.WTF::HashTable.574"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #12
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i8* %22, i8* %23) #12
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #12
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #12
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([155 x i8], [155 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN7network5mojom16CSPDirectiveNameEN4mojo9StructPtrINS3_5blink13CSPSourceListEEEEEEEPKcv, i64 0, i64 0)) #12
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.577"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %77, label %38

38:                                               ; preds = %31
  %39 = add nsw i64 %33, -1
  %40 = and i64 %33, 3
  %41 = icmp ult i64 %39, 3
  br i1 %41, label %65, label %42

42:                                               ; preds = %38
  %43 = sub nsw i64 %33, %40
  br label %44

44:                                               ; preds = %44, %42
  %45 = phi i64 [ 0, %42 ], [ %62, %44 ]
  %46 = phi i64 [ %43, %42 ], [ %63, %44 ]
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.577", %"struct.WTF::KeyValuePair.577"* %36, i64 %45, i32 0
  store i32 0, i32* %47, align 8
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair.577", %"struct.WTF::KeyValuePair.577"* %36, i64 %45, i32 1
  %49 = bitcast %"class.mojo::StructPtr.2738"* %48 to i64*
  store i64 0, i64* %49, align 8
  %50 = or i64 %45, 1
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.577", %"struct.WTF::KeyValuePair.577"* %36, i64 %50, i32 0
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.577", %"struct.WTF::KeyValuePair.577"* %36, i64 %50, i32 1
  %53 = bitcast %"class.mojo::StructPtr.2738"* %52 to i64*
  store i64 0, i64* %53, align 8
  %54 = or i64 %45, 2
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.577", %"struct.WTF::KeyValuePair.577"* %36, i64 %54, i32 0
  store i32 0, i32* %55, align 8
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.577", %"struct.WTF::KeyValuePair.577"* %36, i64 %54, i32 1
  %57 = bitcast %"class.mojo::StructPtr.2738"* %56 to i64*
  store i64 0, i64* %57, align 8
  %58 = or i64 %45, 3
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.577", %"struct.WTF::KeyValuePair.577"* %36, i64 %58, i32 0
  store i32 0, i32* %59, align 8
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair.577", %"struct.WTF::KeyValuePair.577"* %36, i64 %58, i32 1
  %61 = bitcast %"class.mojo::StructPtr.2738"* %60 to i64*
  store i64 0, i64* %61, align 8
  %62 = add nuw nsw i64 %45, 4
  %63 = add i64 %46, -4
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %44

65:                                               ; preds = %44, %38
  %66 = phi i64 [ 0, %38 ], [ %62, %44 ]
  %67 = icmp eq i64 %40, 0
  br i1 %67, label %77, label %68

68:                                               ; preds = %65, %68
  %69 = phi i64 [ %74, %68 ], [ %66, %65 ]
  %70 = phi i64 [ %75, %68 ], [ %40, %65 ]
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.577", %"struct.WTF::KeyValuePair.577"* %36, i64 %69, i32 0
  store i32 0, i32* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.577", %"struct.WTF::KeyValuePair.577"* %36, i64 %69, i32 1
  %73 = bitcast %"class.mojo::StructPtr.2738"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = add nuw nsw i64 %69, 1
  %75 = add i64 %70, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %68, !llvm.loop !82

77:                                               ; preds = %65, %68, %31
  %78 = call %"struct.WTF::KeyValuePair.577"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE8RehashToEPSA_jSL_(%"class.WTF::HashTable.574"* %0, %"struct.WTF::KeyValuePair.577"* %36, i32 %32, %"struct.WTF::KeyValuePair.577"* %1) #12
  ret %"struct.WTF::KeyValuePair.577"* %78
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.577"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE8RehashToEPSA_jSL_(%"class.WTF::HashTable.574"*, %"struct.WTF::KeyValuePair.577"*, i32, %"struct.WTF::KeyValuePair.577"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair.577"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.574", %"class.WTF::HashTable.574"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.574", %"class.WTF::HashTable.574"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.574"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"struct.WTF::KeyValuePair.577"*, %"struct.WTF::KeyValuePair.577"** %9, align 8
  %17 = ptrtoint %"struct.WTF::KeyValuePair.577"* %16 to i64
  br label %51

18:                                               ; preds = %146
  %19 = bitcast %"class.WTF::HashTable.574"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %147, %18 ]
  %23 = phi %"struct.WTF::KeyValuePair.577"* [ null, %10 ], [ %150, %18 ]
  %24 = phi i32 [ 0, %10 ], [ %148, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %25 = inttoptr i64 %22 to %"struct.WTF::KeyValuePair.577"*
  %26 = icmp eq i64 %22, 0
  br i1 %26, label %47, label %27

27:                                               ; preds = %20
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %45, label %29

29:                                               ; preds = %27
  %30 = zext i32 %24 to i64
  br label %31

31:                                               ; preds = %42, %29
  %32 = phi i64 [ 0, %29 ], [ %43, %42 ]
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.577", %"struct.WTF::KeyValuePair.577"* %25, i64 %32, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, -1000001
  br i1 %35, label %42, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.577", %"struct.WTF::KeyValuePair.577"* %25, i64 %32, i32 1, i32 0, i32 0, i32 0, i32 0
  %38 = load %"class.network::mojom::blink::CSPSourceList"*, %"class.network::mojom::blink::CSPSourceList"** %37, align 8
  store %"class.network::mojom::blink::CSPSourceList"* null, %"class.network::mojom::blink::CSPSourceList"** %37, align 8
  %39 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %38, null
  br i1 %39, label %42, label %40

40:                                               ; preds = %36
  tail call void @_ZN7network5mojom5blink13CSPSourceListD1Ev(%"class.network::mojom::blink::CSPSourceList"* nonnull %38) #12
  %41 = bitcast %"class.network::mojom::blink::CSPSourceList"* %38 to i8*
  tail call void @_ZdlPv(i8* %41) #13
  br label %42

42:                                               ; preds = %40, %36, %31
  %43 = add nuw nsw i64 %32, 1
  %44 = icmp eq i64 %43, %30
  br i1 %44, label %45, label %31

45:                                               ; preds = %42, %27
  %46 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %46) #12
  br label %47

47:                                               ; preds = %20, %45
  %48 = getelementptr inbounds %"class.WTF::HashTable.574", %"class.WTF::HashTable.574"* %0, i64 0, i32 3
  %49 = load i32, i32* %48, align 8
  %50 = and i32 %49, -2147483648
  store i32 %50, i32* %48, align 8
  ret %"struct.WTF::KeyValuePair.577"* %23

51:                                               ; preds = %13, %146
  %52 = phi i64 [ %17, %13 ], [ %147, %146 ]
  %53 = phi i32 [ %7, %13 ], [ %148, %146 ]
  %54 = phi %"struct.WTF::KeyValuePair.577"* [ %16, %13 ], [ %149, %146 ]
  %55 = phi %"struct.WTF::KeyValuePair.577"* [ null, %13 ], [ %150, %146 ]
  %56 = phi i32 [ 0, %13 ], [ %151, %146 ]
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.577", %"struct.WTF::KeyValuePair.577"* %54, i64 %57, i32 0
  %59 = load i32, i32* %58, align 4
  switch i32 %59, label %60 [
    i32 -1000001, label %146
    i32 0, label %146
  ]

60:                                               ; preds = %51
  %61 = shl i32 %59, 15
  %62 = xor i32 %61, -1
  %63 = add i32 %59, %62
  %64 = lshr i32 %63, 10
  %65 = xor i32 %64, %63
  %66 = mul i32 %65, 9
  %67 = lshr i32 %66, 6
  %68 = xor i32 %67, %66
  %69 = shl i32 %68, 11
  %70 = xor i32 %69, -1
  %71 = add i32 %68, %70
  %72 = lshr i32 %71, 16
  %73 = xor i32 %72, %71
  %74 = and i32 %73, %14
  %75 = zext i32 %74 to i64
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair.577", %"struct.WTF::KeyValuePair.577"* %1, i64 %75
  %77 = ptrtoint %"struct.WTF::KeyValuePair.577"* %76 to i64
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.577", %"struct.WTF::KeyValuePair.577"* %76, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %98, label %81

81:                                               ; preds = %60
  %82 = xor i32 %73, -1
  %83 = lshr i32 %71, 23
  %84 = add i32 %83, %82
  %85 = shl i32 %84, 12
  %86 = xor i32 %85, %84
  %87 = lshr i32 %86, 7
  %88 = xor i32 %87, %86
  %89 = shl i32 %88, 2
  %90 = xor i32 %89, %88
  %91 = lshr i32 %90, 20
  %92 = xor i32 %91, %90
  %93 = or i32 %92, 1
  %94 = zext i32 %93 to i64
  br label %104

95:                                               ; preds = %111
  %96 = ptrtoint %"struct.WTF::KeyValuePair.577"* %118 to i64
  %97 = inttoptr i64 %113 to %"struct.WTF::KeyValuePair.577"*
  br label %98

98:                                               ; preds = %95, %60
  %99 = phi i64 [ %96, %95 ], [ %77, %60 ]
  %100 = phi %"struct.WTF::KeyValuePair.577"* [ %97, %95 ], [ null, %60 ]
  %101 = icmp eq %"struct.WTF::KeyValuePair.577"* %100, null
  %102 = ptrtoint %"struct.WTF::KeyValuePair.577"* %100 to i64
  %103 = select i1 %101, i64 %99, i64 %102
  br label %123

104:                                              ; preds = %111, %81
  %105 = phi i64 [ 0, %81 ], [ %113, %111 ]
  %106 = phi i32 [ %79, %81 ], [ %121, %111 ]
  %107 = phi i64 [ %77, %81 ], [ %119, %111 ]
  %108 = phi i64 [ %75, %81 ], [ %117, %111 ]
  %109 = phi i64 [ 0, %81 ], [ %115, %111 ]
  %110 = icmp eq i32 %106, %59
  br i1 %110, label %123, label %111

111:                                              ; preds = %104
  %112 = icmp eq i32 %106, -1000001
  %113 = select i1 %112, i64 %107, i64 %105
  %114 = icmp eq i64 %109, 0
  %115 = select i1 %114, i64 %94, i64 %109
  %116 = add i64 %115, %108
  %117 = and i64 %116, %15
  %118 = getelementptr inbounds %"struct.WTF::KeyValuePair.577", %"struct.WTF::KeyValuePair.577"* %1, i64 %117
  %119 = ptrtoint %"struct.WTF::KeyValuePair.577"* %118 to i64
  %120 = getelementptr inbounds %"struct.WTF::KeyValuePair.577", %"struct.WTF::KeyValuePair.577"* %118, i64 0, i32 0
  %121 = load i32, i32* %120, align 4
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %95, label %104

123:                                              ; preds = %104, %98
  %124 = phi i64 [ %103, %98 ], [ %107, %104 ]
  %125 = inttoptr i64 %124 to %"struct.WTF::KeyValuePair.577"*
  %126 = getelementptr inbounds %"struct.WTF::KeyValuePair.577", %"struct.WTF::KeyValuePair.577"* %125, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %127 = load %"class.network::mojom::blink::CSPSourceList"*, %"class.network::mojom::blink::CSPSourceList"** %126, align 8
  store %"class.network::mojom::blink::CSPSourceList"* null, %"class.network::mojom::blink::CSPSourceList"** %126, align 8
  %128 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %127, null
  br i1 %128, label %131, label %129

129:                                              ; preds = %123
  tail call void @_ZN7network5mojom5blink13CSPSourceListD1Ev(%"class.network::mojom::blink::CSPSourceList"* nonnull %127) #12
  %130 = bitcast %"class.network::mojom::blink::CSPSourceList"* %127 to i8*
  tail call void @_ZdlPv(i8* %130) #13
  br label %131

131:                                              ; preds = %123, %129
  %132 = getelementptr inbounds %"struct.WTF::KeyValuePair.577", %"struct.WTF::KeyValuePair.577"* %125, i64 0, i32 0
  %133 = load i32, i32* %58, align 8
  store i32 %133, i32* %132, align 8
  %134 = getelementptr inbounds %"struct.WTF::KeyValuePair.577", %"struct.WTF::KeyValuePair.577"* %125, i64 0, i32 1
  %135 = getelementptr inbounds %"struct.WTF::KeyValuePair.577", %"struct.WTF::KeyValuePair.577"* %54, i64 %57, i32 1
  %136 = bitcast %"class.mojo::StructPtr.2738"* %134 to i64*
  %137 = getelementptr inbounds %"class.mojo::StructPtr.2738", %"class.mojo::StructPtr.2738"* %134, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSourceList"* null, %"class.network::mojom::blink::CSPSourceList"** %137, align 8
  %138 = bitcast %"class.mojo::StructPtr.2738"* %135 to i64*
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %136, align 8
  store i64 0, i64* %138, align 8
  %140 = load %"struct.WTF::KeyValuePair.577"*, %"struct.WTF::KeyValuePair.577"** %9, align 8
  %141 = getelementptr inbounds %"struct.WTF::KeyValuePair.577", %"struct.WTF::KeyValuePair.577"* %140, i64 %57
  %142 = icmp eq %"struct.WTF::KeyValuePair.577"* %141, %3
  %143 = select i1 %142, %"struct.WTF::KeyValuePair.577"* %125, %"struct.WTF::KeyValuePair.577"* %55
  %144 = load i32, i32* %6, align 8
  %145 = ptrtoint %"struct.WTF::KeyValuePair.577"* %140 to i64
  br label %146

146:                                              ; preds = %51, %51, %131
  %147 = phi i64 [ %52, %51 ], [ %145, %131 ], [ %52, %51 ]
  %148 = phi i32 [ %53, %51 ], [ %144, %131 ], [ %53, %51 ]
  %149 = phi %"struct.WTF::KeyValuePair.577"* [ %54, %51 ], [ %140, %131 ], [ %54, %51 ]
  %150 = phi %"struct.WTF::KeyValuePair.577"* [ %55, %51 ], [ %143, %131 ], [ %55, %51 ]
  %151 = add i32 %56, 1
  %152 = icmp eq i32 %151, %148
  br i1 %152, label %18, label %51
}

; Function Attrs: nounwind
declare void @_ZN7network5mojom5blink13CSPSourceListD1Ev(%"class.network::mojom::blink::CSPSourceList"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK7network5mojom5blink13CSPSourceList5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.2738"* noalias sret, %"class.network::mojom::blink::CSPSourceList"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::Vector.2742", align 8
  %4 = alloca %"class.WTF::Vector.578", align 8
  %5 = alloca %"class.WTF::Vector.2747", align 8
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  %14 = alloca i8, align 1
  %15 = bitcast %"class.WTF::Vector.2742"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #12
  %16 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %1, i64 0, i32 0
  call void @_ZN4mojo11CloneTraitsIN3WTF6VectorINS_9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKSA_(%"class.WTF::Vector.2742"* nonnull sret %3, %"class.WTF::Vector.2742"* dereferenceable(16) %16) #12
  %17 = bitcast %"class.WTF::Vector.578"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #12
  %18 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %1, i64 0, i32 1
  call void @_ZN4mojo11CloneTraitsIN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKS5_(%"class.WTF::Vector.578"* nonnull sret %4, %"class.WTF::Vector.578"* dereferenceable(16) %18) #12
  %19 = bitcast %"class.WTF::Vector.2747"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #12
  %20 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %1, i64 0, i32 2
  call void @_ZN4mojo11CloneTraitsIN3WTF6VectorINS_9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKSA_(%"class.WTF::Vector.2747"* nonnull sret %5, %"class.WTF::Vector.2747"* dereferenceable(16) %20) #12
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #12
  %21 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %1, i64 0, i32 3
  %22 = load i8, i8* %21, align 1, !range !2
  store i8 %22, i8* %6, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #12
  %23 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %1, i64 0, i32 4
  %24 = load i8, i8* %23, align 1, !range !2
  store i8 %24, i8* %7, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #12
  %25 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %1, i64 0, i32 5
  %26 = load i8, i8* %25, align 1, !range !2
  store i8 %26, i8* %8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #12
  %27 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %1, i64 0, i32 6
  %28 = load i8, i8* %27, align 1, !range !2
  store i8 %28, i8* %9, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #12
  %29 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %1, i64 0, i32 7
  %30 = load i8, i8* %29, align 1, !range !2
  store i8 %30, i8* %10, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #12
  %31 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %1, i64 0, i32 8
  %32 = load i8, i8* %31, align 1, !range !2
  store i8 %32, i8* %11, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #12
  %33 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %1, i64 0, i32 9
  %34 = load i8, i8* %33, align 1, !range !2
  store i8 %34, i8* %12, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %13) #12
  %35 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %1, i64 0, i32 10
  %36 = load i8, i8* %35, align 1, !range !2
  store i8 %36, i8* %13, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %14) #12
  %37 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %1, i64 0, i32 11
  %38 = load i8, i8* %37, align 1, !range !2
  store i8 %38, i8* %14, align 1
  call void @_ZN4mojo9StructPtrIN7network5mojom5blink13CSPSourceListEEC2IJN3WTF6VectorINS0_INS3_9CSPSourceEEELj0ENS7_18PartitionAllocatorEEENS8_INS7_6StringELj0ESB_EENS8_INS0_INS3_13CSPHashSourceEEELj0ESB_EEbbbbbbbbbEEEN4base10in_place_tEDpOT_(%"class.mojo::StructPtr.2738"* %0, %"class.WTF::Vector.2742"* nonnull dereferenceable(16) %3, %"class.WTF::Vector.578"* nonnull dereferenceable(16) %4, %"class.WTF::Vector.2747"* nonnull dereferenceable(16) %5, i8* nonnull dereferenceable(1) %6, i8* nonnull dereferenceable(1) %7, i8* nonnull dereferenceable(1) %8, i8* nonnull dereferenceable(1) %9, i8* nonnull dereferenceable(1) %10, i8* nonnull dereferenceable(1) %11, i8* nonnull dereferenceable(1) %12, i8* nonnull dereferenceable(1) %13, i8* nonnull dereferenceable(1) %14) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #12
  %39 = getelementptr inbounds %"class.WTF::Vector.2747", %"class.WTF::Vector.2747"* %5, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.mojo::StructPtr.2750"*, %"class.mojo::StructPtr.2750"** %39, align 8
  %41 = icmp eq %"class.mojo::StructPtr.2750"* %40, null
  br i1 %41, label %65, label %42, !prof !7

42:                                               ; preds = %2
  %43 = bitcast %"class.mojo::StructPtr.2750"* %40 to i8*
  %44 = getelementptr inbounds %"class.WTF::Vector.2747", %"class.WTF::Vector.2747"* %5, i64 0, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %63, label %47, !prof !3

47:                                               ; preds = %42
  %48 = zext i32 %45 to i64
  %49 = getelementptr inbounds %"class.mojo::StructPtr.2750", %"class.mojo::StructPtr.2750"* %40, i64 %48
  br label %50

50:                                               ; preds = %57, %47
  %51 = phi %"class.mojo::StructPtr.2750"* [ %58, %57 ], [ %40, %47 ]
  %52 = getelementptr inbounds %"class.mojo::StructPtr.2750", %"class.mojo::StructPtr.2750"* %51, i64 0, i32 0, i32 0, i32 0, i32 0
  %53 = load %"class.network::mojom::blink::CSPHashSource"*, %"class.network::mojom::blink::CSPHashSource"** %52, align 8
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %52, align 8
  %54 = icmp eq %"class.network::mojom::blink::CSPHashSource"* %53, null
  br i1 %54, label %57, label %55

55:                                               ; preds = %50
  call void @_ZN7network5mojom5blink13CSPHashSourceD1Ev(%"class.network::mojom::blink::CSPHashSource"* nonnull %53) #12
  %56 = bitcast %"class.network::mojom::blink::CSPHashSource"* %53 to i8*
  call void @_ZdlPv(i8* %56) #13
  br label %57

57:                                               ; preds = %55, %50
  %58 = getelementptr inbounds %"class.mojo::StructPtr.2750", %"class.mojo::StructPtr.2750"* %51, i64 1
  %59 = icmp eq %"class.mojo::StructPtr.2750"* %58, %49
  br i1 %59, label %60, label %50

60:                                               ; preds = %57
  store i32 0, i32* %44, align 4
  %61 = bitcast %"class.WTF::Vector.2747"* %5 to i8**
  %62 = load i8*, i8** %61, align 8
  br label %63

63:                                               ; preds = %60, %42
  %64 = phi i8* [ %62, %60 ], [ %43, %42 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %64) #12
  store %"class.mojo::StructPtr.2750"* null, %"class.mojo::StructPtr.2750"** %39, align 8
  br label %65

65:                                               ; preds = %2, %63
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #12
  %66 = getelementptr inbounds %"class.WTF::Vector.578", %"class.WTF::Vector.578"* %4, i64 0, i32 0, i32 0, i32 0
  %67 = load %"class.WTF::String"*, %"class.WTF::String"** %66, align 8
  %68 = icmp eq %"class.WTF::String"* %67, null
  br i1 %68, label %103, label %69, !prof !7

69:                                               ; preds = %65
  %70 = bitcast %"class.WTF::String"* %67 to i8*
  %71 = getelementptr inbounds %"class.WTF::Vector.578", %"class.WTF::Vector.578"* %4, i64 0, i32 0, i32 0, i32 2
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %101, label %74, !prof !3

74:                                               ; preds = %69
  %75 = zext i32 %72 to i64
  %76 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %67, i64 %75
  br label %77

77:                                               ; preds = %95, %74
  %78 = phi %"class.WTF::String"* [ %96, %95 ], [ %67, %74 ]
  %79 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 0, i32 0, i32 0
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %79, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %95, label %82

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %88 = load i32, i32* %87, align 4
  br i1 %86, label %89, label %91

89:                                               ; preds = %82
  %90 = add i32 %88, -1
  store i32 %90, i32* %87, align 4
  br label %91

91:                                               ; preds = %89, %82
  %92 = phi i32 [ %90, %89 ], [ %88, %82 ]
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %95

94:                                               ; preds = %91
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %80) #12
  br label %95

95:                                               ; preds = %94, %91, %77
  %96 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 1
  %97 = icmp eq %"class.WTF::String"* %96, %76
  br i1 %97, label %98, label %77

98:                                               ; preds = %95
  store i32 0, i32* %71, align 4
  %99 = bitcast %"class.WTF::Vector.578"* %4 to i8**
  %100 = load i8*, i8** %99, align 8
  br label %101

101:                                              ; preds = %98, %69
  %102 = phi i8* [ %100, %98 ], [ %70, %69 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %102) #12
  store %"class.WTF::String"* null, %"class.WTF::String"** %66, align 8
  br label %103

103:                                              ; preds = %65, %101
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #12
  %104 = getelementptr inbounds %"class.WTF::Vector.2742", %"class.WTF::Vector.2742"* %3, i64 0, i32 0, i32 0, i32 0
  %105 = load %"class.mojo::StructPtr.561"*, %"class.mojo::StructPtr.561"** %104, align 8
  %106 = icmp eq %"class.mojo::StructPtr.561"* %105, null
  br i1 %106, label %130, label %107, !prof !7

107:                                              ; preds = %103
  %108 = bitcast %"class.mojo::StructPtr.561"* %105 to i8*
  %109 = getelementptr inbounds %"class.WTF::Vector.2742", %"class.WTF::Vector.2742"* %3, i64 0, i32 0, i32 0, i32 2
  %110 = load i32, i32* %109, align 4
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %128, label %112, !prof !3

112:                                              ; preds = %107
  %113 = zext i32 %110 to i64
  %114 = getelementptr inbounds %"class.mojo::StructPtr.561", %"class.mojo::StructPtr.561"* %105, i64 %113
  br label %115

115:                                              ; preds = %122, %112
  %116 = phi %"class.mojo::StructPtr.561"* [ %123, %122 ], [ %105, %112 ]
  %117 = getelementptr inbounds %"class.mojo::StructPtr.561", %"class.mojo::StructPtr.561"* %116, i64 0, i32 0, i32 0, i32 0, i32 0
  %118 = load %"class.network::mojom::blink::CSPSource"*, %"class.network::mojom::blink::CSPSource"** %117, align 8
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %117, align 8
  %119 = icmp eq %"class.network::mojom::blink::CSPSource"* %118, null
  br i1 %119, label %122, label %120

120:                                              ; preds = %115
  call void @_ZN7network5mojom5blink9CSPSourceD1Ev(%"class.network::mojom::blink::CSPSource"* nonnull %118) #12
  %121 = bitcast %"class.network::mojom::blink::CSPSource"* %118 to i8*
  call void @_ZdlPv(i8* %121) #13
  br label %122

122:                                              ; preds = %120, %115
  %123 = getelementptr inbounds %"class.mojo::StructPtr.561", %"class.mojo::StructPtr.561"* %116, i64 1
  %124 = icmp eq %"class.mojo::StructPtr.561"* %123, %114
  br i1 %124, label %125, label %115

125:                                              ; preds = %122
  store i32 0, i32* %109, align 4
  %126 = bitcast %"class.WTF::Vector.2742"* %3 to i8**
  %127 = load i8*, i8** %126, align 8
  br label %128

128:                                              ; preds = %125, %107
  %129 = phi i8* [ %127, %125 ], [ %108, %107 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %129) #12
  store %"class.mojo::StructPtr.561"* null, %"class.mojo::StructPtr.561"** %104, align 8
  br label %130

130:                                              ; preds = %103, %128
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo9StructPtrIN7network5mojom5blink13CSPSourceListEEC2IJN3WTF6VectorINS0_INS3_9CSPSourceEEELj0ENS7_18PartitionAllocatorEEENS8_INS7_6StringELj0ESB_EENS8_INS0_INS3_13CSPHashSourceEEELj0ESB_EEbbbbbbbbbEEEN4base10in_place_tEDpOT_(%"class.mojo::StructPtr.2738"*, %"class.WTF::Vector.2742"* dereferenceable(16), %"class.WTF::Vector.578"* dereferenceable(16), %"class.WTF::Vector.2747"* dereferenceable(16), i8* dereferenceable(1), i8* dereferenceable(1), i8* dereferenceable(1), i8* dereferenceable(1), i8* dereferenceable(1), i8* dereferenceable(1), i8* dereferenceable(1), i8* dereferenceable(1), i8* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %14 = alloca %"class.WTF::Vector.2742", align 8
  %15 = alloca %"class.WTF::Vector.578", align 8
  %16 = alloca %"class.WTF::Vector.2747", align 8
  %17 = tail call i8* @_Znwm(i64 64) #13
  %18 = bitcast i8* %17 to %"class.network::mojom::blink::CSPSourceList"*
  %19 = getelementptr inbounds %"class.WTF::Vector.2742", %"class.WTF::Vector.2742"* %14, i64 0, i32 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.WTF::Vector.2742", %"class.WTF::Vector.2742"* %14, i64 0, i32 0, i32 0, i32 2
  %21 = bitcast %"class.WTF::Vector.2742"* %1 to i64*
  %22 = bitcast %"class.WTF::Vector.2742"* %14 to i64*
  store i64 0, i64* %22, align 8
  %23 = load i64, i64* %21, align 8
  %24 = bitcast %"class.WTF::Vector.2742"* %14 to i64*
  store atomic i64 0, i64* %21 monotonic, align 8
  store atomic i64 %23, i64* %24 monotonic, align 8
  %25 = getelementptr inbounds %"class.WTF::Vector.2742", %"class.WTF::Vector.2742"* %1, i64 0, i32 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 4
  store i32 %26, i32* %19, align 8
  store i32 0, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::Vector.2742", %"class.WTF::Vector.2742"* %1, i64 0, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  store i32 %28, i32* %20, align 4
  store i32 0, i32* %27, align 4
  %29 = getelementptr inbounds %"class.WTF::Vector.578", %"class.WTF::Vector.578"* %15, i64 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::Vector.578", %"class.WTF::Vector.578"* %15, i64 0, i32 0, i32 0, i32 2
  %31 = bitcast %"class.WTF::Vector.578"* %2 to i64*
  %32 = bitcast %"class.WTF::Vector.578"* %15 to i64*
  store i64 0, i64* %32, align 8
  %33 = load i64, i64* %31, align 8
  %34 = bitcast %"class.WTF::Vector.578"* %15 to i64*
  store atomic i64 0, i64* %31 monotonic, align 8
  store atomic i64 %33, i64* %34 monotonic, align 8
  %35 = getelementptr inbounds %"class.WTF::Vector.578", %"class.WTF::Vector.578"* %2, i64 0, i32 0, i32 0, i32 1
  %36 = load i32, i32* %35, align 4
  store i32 %36, i32* %29, align 8
  store i32 0, i32* %35, align 4
  %37 = getelementptr inbounds %"class.WTF::Vector.578", %"class.WTF::Vector.578"* %2, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  store i32 %38, i32* %30, align 4
  store i32 0, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::Vector.2747", %"class.WTF::Vector.2747"* %16, i64 0, i32 0, i32 0, i32 1
  %40 = getelementptr inbounds %"class.WTF::Vector.2747", %"class.WTF::Vector.2747"* %16, i64 0, i32 0, i32 0, i32 2
  %41 = bitcast %"class.WTF::Vector.2747"* %3 to i64*
  %42 = bitcast %"class.WTF::Vector.2747"* %16 to i64*
  store i64 0, i64* %42, align 8
  %43 = load i64, i64* %41, align 8
  %44 = bitcast %"class.WTF::Vector.2747"* %16 to i64*
  store atomic i64 0, i64* %41 monotonic, align 8
  store atomic i64 %43, i64* %44 monotonic, align 8
  %45 = getelementptr inbounds %"class.WTF::Vector.2747", %"class.WTF::Vector.2747"* %3, i64 0, i32 0, i32 0, i32 1
  %46 = load i32, i32* %45, align 4
  store i32 %46, i32* %39, align 8
  store i32 0, i32* %45, align 4
  %47 = getelementptr inbounds %"class.WTF::Vector.2747", %"class.WTF::Vector.2747"* %3, i64 0, i32 0, i32 0, i32 2
  %48 = load i32, i32* %47, align 4
  store i32 %48, i32* %40, align 4
  store i32 0, i32* %47, align 4
  %49 = load i8, i8* %4, align 1, !range !2
  %50 = icmp ne i8 %49, 0
  %51 = load i8, i8* %5, align 1, !range !2
  %52 = icmp ne i8 %51, 0
  %53 = load i8, i8* %6, align 1, !range !2
  %54 = icmp ne i8 %53, 0
  %55 = load i8, i8* %7, align 1, !range !2
  %56 = icmp ne i8 %55, 0
  %57 = load i8, i8* %8, align 1, !range !2
  %58 = icmp ne i8 %57, 0
  %59 = load i8, i8* %9, align 1, !range !2
  %60 = icmp ne i8 %59, 0
  %61 = load i8, i8* %10, align 1, !range !2
  %62 = icmp ne i8 %61, 0
  %63 = load i8, i8* %11, align 1, !range !2
  %64 = icmp ne i8 %63, 0
  %65 = load i8, i8* %12, align 1, !range !2
  %66 = icmp ne i8 %65, 0
  call void @_ZN7network5mojom5blink13CSPSourceListC1EN3WTF6VectorIN4mojo9StructPtrINS1_9CSPSourceEEELj0ENS3_18PartitionAllocatorEEENS4_INS3_6StringELj0ES9_EENS4_INS6_INS1_13CSPHashSourceEEELj0ES9_EEbbbbbbbbb(%"class.network::mojom::blink::CSPSourceList"* nonnull %18, %"class.WTF::Vector.2742"* nonnull %14, %"class.WTF::Vector.578"* nonnull %15, %"class.WTF::Vector.2747"* nonnull %16, i1 zeroext %50, i1 zeroext %52, i1 zeroext %54, i1 zeroext %56, i1 zeroext %58, i1 zeroext %60, i1 zeroext %62, i1 zeroext %64, i1 zeroext %66) #12
  %67 = ptrtoint i8* %17 to i64
  %68 = bitcast %"class.mojo::StructPtr.2738"* %0 to i64*
  store i64 %67, i64* %68, align 8
  %69 = getelementptr inbounds %"class.WTF::Vector.2747", %"class.WTF::Vector.2747"* %16, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.mojo::StructPtr.2750"*, %"class.mojo::StructPtr.2750"** %69, align 8
  %71 = icmp eq %"class.mojo::StructPtr.2750"* %70, null
  br i1 %71, label %94, label %72, !prof !7

72:                                               ; preds = %13
  %73 = bitcast %"class.mojo::StructPtr.2750"* %70 to i8*
  %74 = load i32, i32* %40, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %92, label %76, !prof !3

76:                                               ; preds = %72
  %77 = zext i32 %74 to i64
  %78 = getelementptr inbounds %"class.mojo::StructPtr.2750", %"class.mojo::StructPtr.2750"* %70, i64 %77
  br label %79

79:                                               ; preds = %86, %76
  %80 = phi %"class.mojo::StructPtr.2750"* [ %87, %86 ], [ %70, %76 ]
  %81 = getelementptr inbounds %"class.mojo::StructPtr.2750", %"class.mojo::StructPtr.2750"* %80, i64 0, i32 0, i32 0, i32 0, i32 0
  %82 = load %"class.network::mojom::blink::CSPHashSource"*, %"class.network::mojom::blink::CSPHashSource"** %81, align 8
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %81, align 8
  %83 = icmp eq %"class.network::mojom::blink::CSPHashSource"* %82, null
  br i1 %83, label %86, label %84

84:                                               ; preds = %79
  call void @_ZN7network5mojom5blink13CSPHashSourceD1Ev(%"class.network::mojom::blink::CSPHashSource"* nonnull %82) #12
  %85 = bitcast %"class.network::mojom::blink::CSPHashSource"* %82 to i8*
  call void @_ZdlPv(i8* %85) #13
  br label %86

86:                                               ; preds = %84, %79
  %87 = getelementptr inbounds %"class.mojo::StructPtr.2750", %"class.mojo::StructPtr.2750"* %80, i64 1
  %88 = icmp eq %"class.mojo::StructPtr.2750"* %87, %78
  br i1 %88, label %89, label %79

89:                                               ; preds = %86
  store i32 0, i32* %40, align 4
  %90 = bitcast %"class.WTF::Vector.2747"* %16 to i8**
  %91 = load i8*, i8** %90, align 8
  br label %92

92:                                               ; preds = %89, %72
  %93 = phi i8* [ %91, %89 ], [ %73, %72 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %93) #12
  store %"class.mojo::StructPtr.2750"* null, %"class.mojo::StructPtr.2750"** %69, align 8
  br label %94

94:                                               ; preds = %13, %92
  %95 = getelementptr inbounds %"class.WTF::Vector.578", %"class.WTF::Vector.578"* %15, i64 0, i32 0, i32 0, i32 0
  %96 = load %"class.WTF::String"*, %"class.WTF::String"** %95, align 8
  %97 = icmp eq %"class.WTF::String"* %96, null
  br i1 %97, label %131, label %98, !prof !7

98:                                               ; preds = %94
  %99 = bitcast %"class.WTF::String"* %96 to i8*
  %100 = load i32, i32* %30, align 4
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %129, label %102, !prof !3

102:                                              ; preds = %98
  %103 = zext i32 %100 to i64
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %96, i64 %103
  br label %105

105:                                              ; preds = %123, %102
  %106 = phi %"class.WTF::String"* [ %124, %123 ], [ %96, %102 ]
  %107 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %106, i64 0, i32 0, i32 0
  %108 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %107, align 8
  %109 = icmp eq %"class.WTF::StringImpl"* %108, null
  br i1 %109, label %123, label %110

110:                                              ; preds = %105
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load atomic i32, i32* %111 monotonic, align 4
  %113 = and i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 0
  %116 = load i32, i32* %115, align 4
  br i1 %114, label %117, label %119

117:                                              ; preds = %110
  %118 = add i32 %116, -1
  store i32 %118, i32* %115, align 4
  br label %119

119:                                              ; preds = %117, %110
  %120 = phi i32 [ %118, %117 ], [ %116, %110 ]
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %123

122:                                              ; preds = %119
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %108) #12
  br label %123

123:                                              ; preds = %122, %119, %105
  %124 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %106, i64 1
  %125 = icmp eq %"class.WTF::String"* %124, %104
  br i1 %125, label %126, label %105

126:                                              ; preds = %123
  store i32 0, i32* %30, align 4
  %127 = bitcast %"class.WTF::Vector.578"* %15 to i8**
  %128 = load i8*, i8** %127, align 8
  br label %129

129:                                              ; preds = %126, %98
  %130 = phi i8* [ %128, %126 ], [ %99, %98 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %130) #12
  store %"class.WTF::String"* null, %"class.WTF::String"** %95, align 8
  br label %131

131:                                              ; preds = %94, %129
  %132 = getelementptr inbounds %"class.WTF::Vector.2742", %"class.WTF::Vector.2742"* %14, i64 0, i32 0, i32 0, i32 0
  %133 = load %"class.mojo::StructPtr.561"*, %"class.mojo::StructPtr.561"** %132, align 8
  %134 = icmp eq %"class.mojo::StructPtr.561"* %133, null
  br i1 %134, label %157, label %135, !prof !7

135:                                              ; preds = %131
  %136 = bitcast %"class.mojo::StructPtr.561"* %133 to i8*
  %137 = load i32, i32* %20, align 4
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %155, label %139, !prof !3

139:                                              ; preds = %135
  %140 = zext i32 %137 to i64
  %141 = getelementptr inbounds %"class.mojo::StructPtr.561", %"class.mojo::StructPtr.561"* %133, i64 %140
  br label %142

142:                                              ; preds = %149, %139
  %143 = phi %"class.mojo::StructPtr.561"* [ %150, %149 ], [ %133, %139 ]
  %144 = getelementptr inbounds %"class.mojo::StructPtr.561", %"class.mojo::StructPtr.561"* %143, i64 0, i32 0, i32 0, i32 0, i32 0
  %145 = load %"class.network::mojom::blink::CSPSource"*, %"class.network::mojom::blink::CSPSource"** %144, align 8
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %144, align 8
  %146 = icmp eq %"class.network::mojom::blink::CSPSource"* %145, null
  br i1 %146, label %149, label %147

147:                                              ; preds = %142
  call void @_ZN7network5mojom5blink9CSPSourceD1Ev(%"class.network::mojom::blink::CSPSource"* nonnull %145) #12
  %148 = bitcast %"class.network::mojom::blink::CSPSource"* %145 to i8*
  call void @_ZdlPv(i8* %148) #13
  br label %149

149:                                              ; preds = %147, %142
  %150 = getelementptr inbounds %"class.mojo::StructPtr.561", %"class.mojo::StructPtr.561"* %143, i64 1
  %151 = icmp eq %"class.mojo::StructPtr.561"* %150, %141
  br i1 %151, label %152, label %142

152:                                              ; preds = %149
  store i32 0, i32* %20, align 4
  %153 = bitcast %"class.WTF::Vector.2742"* %14 to i8**
  %154 = load i8*, i8** %153, align 8
  br label %155

155:                                              ; preds = %152, %135
  %156 = phi i8* [ %154, %152 ], [ %136, %135 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %156) #12
  store %"class.mojo::StructPtr.561"* null, %"class.mojo::StructPtr.561"** %132, align 8
  br label %157

157:                                              ; preds = %131, %155
  ret void
}

declare void @_ZN7network5mojom5blink13CSPSourceListC1EN3WTF6VectorIN4mojo9StructPtrINS1_9CSPSourceEEELj0ENS3_18PartitionAllocatorEEENS4_INS3_6StringELj0ES9_EENS4_INS6_INS1_13CSPHashSourceEEELj0ES9_EEbbbbbbbbb(%"class.network::mojom::blink::CSPSourceList"*, %"class.WTF::Vector.2742"*, %"class.WTF::Vector.578"*, %"class.WTF::Vector.2747"*, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo11CloneTraitsIN3WTF6VectorINS_9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKSA_(%"class.WTF::Vector.2742"* noalias sret, %"class.WTF::Vector.2742"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.mojo::StructPtr.561", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.2742", %"class.WTF::Vector.2742"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.WTF::Vector.2742", %"class.WTF::Vector.2742"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2742", %"class.WTF::Vector.2742"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.WTF::Vector.2742"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #12
  %8 = getelementptr inbounds %"class.WTF::Vector.2742", %"class.WTF::Vector.2742"* %1, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %57, label %11, !prof !3

11:                                               ; preds = %2
  %12 = zext i32 %9 to i64
  %13 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEmm(i64 %12) #12
  %14 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %13, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEPKcv, i64 0, i64 0)) #12
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast %"class.WTF::Vector.2742"* %0 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = lshr i64 %13, 3
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %5, align 8
  %19 = load i32, i32* %8, align 4
  %20 = getelementptr inbounds %"class.WTF::Vector.2742", %"class.WTF::Vector.2742"* %1, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.mojo::StructPtr.561"*, %"class.mojo::StructPtr.561"** %20, align 8
  %22 = zext i32 %19 to i64
  %23 = getelementptr inbounds %"class.mojo::StructPtr.561", %"class.mojo::StructPtr.561"* %21, i64 %22
  %24 = icmp eq i32 %19, 0
  br i1 %24, label %57, label %25

25:                                               ; preds = %11
  %26 = bitcast %"class.mojo::StructPtr.561"* %3 to i8*
  %27 = bitcast %"class.mojo::StructPtr.561"* %3 to i64*
  %28 = getelementptr inbounds %"class.mojo::StructPtr.561", %"class.mojo::StructPtr.561"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %29

29:                                               ; preds = %25, %54
  %30 = phi %"class.mojo::StructPtr.561"* [ %21, %25 ], [ %55, %54 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #12
  %31 = getelementptr inbounds %"class.mojo::StructPtr.561", %"class.mojo::StructPtr.561"* %30, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load %"class.network::mojom::blink::CSPSource"*, %"class.network::mojom::blink::CSPSource"** %31, align 8, !noalias !83
  %33 = icmp eq %"class.network::mojom::blink::CSPSource"* %32, null
  br i1 %33, label %34, label %35

34:                                               ; preds = %29
  store i64 0, i64* %27, align 8, !alias.scope !83
  br label %36

35:                                               ; preds = %29
  call void @_ZNK7network5mojom5blink9CSPSource5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.561"* nonnull sret %3, %"class.network::mojom::blink::CSPSource"* nonnull %32) #12
  br label %36

36:                                               ; preds = %34, %35
  %37 = load i32, i32* %6, align 4
  %38 = load i32, i32* %5, align 8
  %39 = icmp eq i32 %37, %38
  br i1 %39, label %49, label %40, !prof !3

40:                                               ; preds = %36
  %41 = load %"class.mojo::StructPtr.561"*, %"class.mojo::StructPtr.561"** %4, align 8
  %42 = zext i32 %37 to i64
  %43 = getelementptr inbounds %"class.mojo::StructPtr.561", %"class.mojo::StructPtr.561"* %41, i64 %42
  %44 = bitcast %"class.mojo::StructPtr.561"* %43 to i64*
  %45 = getelementptr inbounds %"class.mojo::StructPtr.561", %"class.mojo::StructPtr.561"* %43, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %45, align 8
  %46 = load i64, i64* %27, align 8
  store i64 %46, i64* %44, align 8
  %47 = load i32, i32* %6, align 4
  %48 = add i32 %47, 1
  store i32 %48, i32* %6, align 4
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %28, align 8
  br label %54

49:                                               ; preds = %36
  call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.2742"* %0, %"class.mojo::StructPtr.561"* nonnull dereferenceable(8) %3) #12
  %50 = load %"class.network::mojom::blink::CSPSource"*, %"class.network::mojom::blink::CSPSource"** %28, align 8
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %28, align 8
  %51 = icmp eq %"class.network::mojom::blink::CSPSource"* %50, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %49
  %53 = bitcast %"class.network::mojom::blink::CSPSource"* %50 to i8*
  call void @_ZN7network5mojom5blink9CSPSourceD1Ev(%"class.network::mojom::blink::CSPSource"* nonnull %50) #12
  call void @_ZdlPv(i8* %53) #13
  br label %54

54:                                               ; preds = %40, %49, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #12
  %55 = getelementptr inbounds %"class.mojo::StructPtr.561", %"class.mojo::StructPtr.561"* %30, i64 1
  %56 = icmp eq %"class.mojo::StructPtr.561"* %55, %23
  br i1 %56, label %57, label %29

57:                                               ; preds = %54, %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2742"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %72

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.2742", %"class.WTF::Vector.2742"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.mojo::StructPtr.561"*, %"class.mojo::StructPtr.561"** %5, align 8
  %7 = bitcast %"class.mojo::StructPtr.561"* %6 to i8*
  %8 = getelementptr inbounds %"class.WTF::Vector.2742", %"class.WTF::Vector.2742"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.561", %"class.mojo::StructPtr.561"* %6, i64 %10
  %12 = bitcast %"class.WTF::Vector.2742"* %0 to i64*
  store atomic i64 0, i64* %12 monotonic, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector.2742", %"class.WTF::Vector.2742"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %13, align 8
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %71, label %15

15:                                               ; preds = %4
  %16 = shl nuw nsw i64 %10, 3
  %17 = add nsw i64 %16, -8
  %18 = lshr exact i64 %17, 3
  %19 = add nuw nsw i64 %18, 1
  %20 = and i64 %19, 3
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %35, label %22

22:                                               ; preds = %15, %22
  %23 = phi %"class.mojo::StructPtr.561"* [ %32, %22 ], [ %6, %15 ]
  %24 = phi %"class.mojo::StructPtr.561"* [ %31, %22 ], [ null, %15 ]
  %25 = phi i64 [ %33, %22 ], [ %20, %15 ]
  %26 = bitcast %"class.mojo::StructPtr.561"* %24 to i64*
  %27 = getelementptr inbounds %"class.mojo::StructPtr.561", %"class.mojo::StructPtr.561"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %27, align 8
  %28 = bitcast %"class.mojo::StructPtr.561"* %23 to i64*
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %26, align 8
  %30 = getelementptr inbounds %"class.mojo::StructPtr.561", %"class.mojo::StructPtr.561"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %30, align 8
  %31 = getelementptr inbounds %"class.mojo::StructPtr.561", %"class.mojo::StructPtr.561"* %24, i64 1
  %32 = getelementptr inbounds %"class.mojo::StructPtr.561", %"class.mojo::StructPtr.561"* %23, i64 1
  %33 = add i64 %25, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %22, !llvm.loop !90

35:                                               ; preds = %22, %15
  %36 = phi %"class.mojo::StructPtr.561"* [ %6, %15 ], [ %32, %22 ]
  %37 = phi %"class.mojo::StructPtr.561"* [ null, %15 ], [ %31, %22 ]
  %38 = icmp ult i64 %17, 24
  br i1 %38, label %71, label %39

39:                                               ; preds = %35, %39
  %40 = phi %"class.mojo::StructPtr.561"* [ %69, %39 ], [ %36, %35 ]
  %41 = phi %"class.mojo::StructPtr.561"* [ %68, %39 ], [ %37, %35 ]
  %42 = bitcast %"class.mojo::StructPtr.561"* %41 to i64*
  %43 = getelementptr inbounds %"class.mojo::StructPtr.561", %"class.mojo::StructPtr.561"* %41, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %43, align 8
  %44 = bitcast %"class.mojo::StructPtr.561"* %40 to i64*
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %42, align 8
  %46 = getelementptr inbounds %"class.mojo::StructPtr.561", %"class.mojo::StructPtr.561"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %46, align 8
  %47 = getelementptr inbounds %"class.mojo::StructPtr.561", %"class.mojo::StructPtr.561"* %41, i64 1
  %48 = getelementptr inbounds %"class.mojo::StructPtr.561", %"class.mojo::StructPtr.561"* %40, i64 1
  %49 = bitcast %"class.mojo::StructPtr.561"* %47 to i64*
  %50 = getelementptr inbounds %"class.mojo::StructPtr.561", %"class.mojo::StructPtr.561"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %50, align 8
  %51 = bitcast %"class.mojo::StructPtr.561"* %48 to i64*
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %49, align 8
  %53 = getelementptr inbounds %"class.mojo::StructPtr.561", %"class.mojo::StructPtr.561"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %53, align 8
  %54 = getelementptr inbounds %"class.mojo::StructPtr.561", %"class.mojo::StructPtr.561"* %41, i64 2
  %55 = getelementptr inbounds %"class.mojo::StructPtr.561", %"class.mojo::StructPtr.561"* %40, i64 2
  %56 = bitcast %"class.mojo::StructPtr.561"* %54 to i64*
  %57 = getelementptr inbounds %"class.mojo::StructPtr.561", %"class.mojo::StructPtr.561"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %57, align 8
  %58 = bitcast %"class.mojo::StructPtr.561"* %55 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %56, align 8
  %60 = getelementptr inbounds %"class.mojo::StructPtr.561", %"class.mojo::StructPtr.561"* %55, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %60, align 8
  %61 = getelementptr inbounds %"class.mojo::StructPtr.561", %"class.mojo::StructPtr.561"* %41, i64 3
  %62 = getelementptr inbounds %"class.mojo::StructPtr.561", %"class.mojo::StructPtr.561"* %40, i64 3
  %63 = bitcast %"class.mojo::StructPtr.561"* %61 to i64*
  %64 = getelementptr inbounds %"class.mojo::StructPtr.561", %"class.mojo::StructPtr.561"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %64, align 8
  %65 = bitcast %"class.mojo::StructPtr.561"* %62 to i64*
  %66 = load i64, i64* %65, align 8
  store i64 %66, i64* %63, align 8
  %67 = getelementptr inbounds %"class.mojo::StructPtr.561", %"class.mojo::StructPtr.561"* %62, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %67, align 8
  %68 = getelementptr inbounds %"class.mojo::StructPtr.561", %"class.mojo::StructPtr.561"* %41, i64 4
  %69 = getelementptr inbounds %"class.mojo::StructPtr.561", %"class.mojo::StructPtr.561"* %40, i64 4
  %70 = icmp eq %"class.mojo::StructPtr.561"* %69, %11
  br i1 %70, label %71, label %39

71:                                               ; preds = %35, %39, %4
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #12
  br label %152

72:                                               ; preds = %2
  %73 = zext i32 %1 to i64
  %74 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEmm(i64 %73) #12
  %75 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %74, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEPKcv, i64 0, i64 0)) #12
  %76 = lshr i64 %74, 3
  %77 = ptrtoint i8* %75 to i64
  %78 = getelementptr inbounds %"class.WTF::Vector.2742", %"class.WTF::Vector.2742"* %0, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.mojo::StructPtr.561"*, %"class.mojo::StructPtr.561"** %78, align 8
  %80 = getelementptr inbounds %"class.WTF::Vector.2742", %"class.WTF::Vector.2742"* %0, i64 0, i32 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"class.mojo::StructPtr.561", %"class.mojo::StructPtr.561"* %79, i64 %82
  %84 = icmp eq i32 %81, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %72
  %86 = bitcast %"class.mojo::StructPtr.561"* %79 to i8*
  br label %147

87:                                               ; preds = %72
  %88 = bitcast i8* %75 to %"class.mojo::StructPtr.561"*
  %89 = shl nuw nsw i64 %82, 3
  %90 = add nsw i64 %89, -8
  %91 = lshr exact i64 %90, 3
  %92 = add nuw nsw i64 %91, 1
  %93 = and i64 %92, 3
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %108, label %95

95:                                               ; preds = %87, %95
  %96 = phi %"class.mojo::StructPtr.561"* [ %105, %95 ], [ %79, %87 ]
  %97 = phi %"class.mojo::StructPtr.561"* [ %104, %95 ], [ %88, %87 ]
  %98 = phi i64 [ %106, %95 ], [ %93, %87 ]
  %99 = bitcast %"class.mojo::StructPtr.561"* %97 to i64*
  %100 = getelementptr inbounds %"class.mojo::StructPtr.561", %"class.mojo::StructPtr.561"* %97, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %100, align 8
  %101 = bitcast %"class.mojo::StructPtr.561"* %96 to i64*
  %102 = load i64, i64* %101, align 8
  store i64 %102, i64* %99, align 8
  %103 = getelementptr inbounds %"class.mojo::StructPtr.561", %"class.mojo::StructPtr.561"* %96, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %103, align 8
  %104 = getelementptr inbounds %"class.mojo::StructPtr.561", %"class.mojo::StructPtr.561"* %97, i64 1
  %105 = getelementptr inbounds %"class.mojo::StructPtr.561", %"class.mojo::StructPtr.561"* %96, i64 1
  %106 = add i64 %98, -1
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %95, !llvm.loop !91

108:                                              ; preds = %95, %87
  %109 = phi %"class.mojo::StructPtr.561"* [ %79, %87 ], [ %105, %95 ]
  %110 = phi %"class.mojo::StructPtr.561"* [ %88, %87 ], [ %104, %95 ]
  %111 = icmp ult i64 %90, 24
  br i1 %111, label %144, label %112

112:                                              ; preds = %108, %112
  %113 = phi %"class.mojo::StructPtr.561"* [ %142, %112 ], [ %109, %108 ]
  %114 = phi %"class.mojo::StructPtr.561"* [ %141, %112 ], [ %110, %108 ]
  %115 = bitcast %"class.mojo::StructPtr.561"* %114 to i64*
  %116 = getelementptr inbounds %"class.mojo::StructPtr.561", %"class.mojo::StructPtr.561"* %114, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %116, align 8
  %117 = bitcast %"class.mojo::StructPtr.561"* %113 to i64*
  %118 = load i64, i64* %117, align 8
  store i64 %118, i64* %115, align 8
  %119 = getelementptr inbounds %"class.mojo::StructPtr.561", %"class.mojo::StructPtr.561"* %113, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %119, align 8
  %120 = getelementptr inbounds %"class.mojo::StructPtr.561", %"class.mojo::StructPtr.561"* %114, i64 1
  %121 = getelementptr inbounds %"class.mojo::StructPtr.561", %"class.mojo::StructPtr.561"* %113, i64 1
  %122 = bitcast %"class.mojo::StructPtr.561"* %120 to i64*
  %123 = getelementptr inbounds %"class.mojo::StructPtr.561", %"class.mojo::StructPtr.561"* %120, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %123, align 8
  %124 = bitcast %"class.mojo::StructPtr.561"* %121 to i64*
  %125 = load i64, i64* %124, align 8
  store i64 %125, i64* %122, align 8
  %126 = getelementptr inbounds %"class.mojo::StructPtr.561", %"class.mojo::StructPtr.561"* %121, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %126, align 8
  %127 = getelementptr inbounds %"class.mojo::StructPtr.561", %"class.mojo::StructPtr.561"* %114, i64 2
  %128 = getelementptr inbounds %"class.mojo::StructPtr.561", %"class.mojo::StructPtr.561"* %113, i64 2
  %129 = bitcast %"class.mojo::StructPtr.561"* %127 to i64*
  %130 = getelementptr inbounds %"class.mojo::StructPtr.561", %"class.mojo::StructPtr.561"* %127, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %130, align 8
  %131 = bitcast %"class.mojo::StructPtr.561"* %128 to i64*
  %132 = load i64, i64* %131, align 8
  store i64 %132, i64* %129, align 8
  %133 = getelementptr inbounds %"class.mojo::StructPtr.561", %"class.mojo::StructPtr.561"* %128, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %133, align 8
  %134 = getelementptr inbounds %"class.mojo::StructPtr.561", %"class.mojo::StructPtr.561"* %114, i64 3
  %135 = getelementptr inbounds %"class.mojo::StructPtr.561", %"class.mojo::StructPtr.561"* %113, i64 3
  %136 = bitcast %"class.mojo::StructPtr.561"* %134 to i64*
  %137 = getelementptr inbounds %"class.mojo::StructPtr.561", %"class.mojo::StructPtr.561"* %134, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %137, align 8
  %138 = bitcast %"class.mojo::StructPtr.561"* %135 to i64*
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %136, align 8
  %140 = getelementptr inbounds %"class.mojo::StructPtr.561", %"class.mojo::StructPtr.561"* %135, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %140, align 8
  %141 = getelementptr inbounds %"class.mojo::StructPtr.561", %"class.mojo::StructPtr.561"* %114, i64 4
  %142 = getelementptr inbounds %"class.mojo::StructPtr.561", %"class.mojo::StructPtr.561"* %113, i64 4
  %143 = icmp eq %"class.mojo::StructPtr.561"* %142, %83
  br i1 %143, label %144, label %112

144:                                              ; preds = %112, %108
  %145 = bitcast %"class.WTF::Vector.2742"* %0 to i8**
  %146 = load i8*, i8** %145, align 8
  br label %147

147:                                              ; preds = %85, %144
  %148 = phi i8* [ %146, %144 ], [ %86, %85 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %148) #12
  %149 = bitcast %"class.WTF::Vector.2742"* %0 to i64*
  store atomic i64 %77, i64* %149 monotonic, align 8
  %150 = trunc i64 %76 to i32
  %151 = getelementptr inbounds %"class.WTF::Vector.2742", %"class.WTF::Vector.2742"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %150, i32* %151, align 8
  br label %152

152:                                              ; preds = %147, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.8, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.2742"*, %"class.mojo::StructPtr.561"* dereferenceable(8)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2742", %"class.WTF::Vector.2742"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2742", %"class.WTF::Vector.2742"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.mojo::StructPtr.561"*, %"class.mojo::StructPtr.561"** %6, align 8
  %8 = icmp ugt %"class.mojo::StructPtr.561"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.561", %"class.mojo::StructPtr.561"* %7, i64 %10
  %12 = icmp ugt %"class.mojo::StructPtr.561"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.2742", %"class.WTF::Vector.2742"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !7

24:                                               ; preds = %13
  %25 = icmp eq %"class.mojo::StructPtr.561"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEmm(i64 %27) #12
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEPKcv, i64 0, i64 0)) #12
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.2742"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %28, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.mojo::StructPtr.561"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2742"* %0, i32 %22) #12
  %36 = load %"class.mojo::StructPtr.561"*, %"class.mojo::StructPtr.561"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.mojo::StructPtr.561"* %1 to i64
  %39 = ptrtoint %"class.mojo::StructPtr.561"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 3
  %42 = getelementptr inbounds %"class.WTF::Vector.2742", %"class.WTF::Vector.2742"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !7

52:                                               ; preds = %37
  %53 = icmp eq %"class.mojo::StructPtr.561"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEmm(i64 %55) #12
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEPKcv, i64 0, i64 0)) #12
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.2742"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = lshr i64 %56, 3
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.mojo::StructPtr.561"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2742"* %0, i32 %50) #12
  %64 = load %"class.mojo::StructPtr.561"*, %"class.mojo::StructPtr.561"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.mojo::StructPtr.561"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.mojo::StructPtr.561", %"class.mojo::StructPtr.561"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.mojo::StructPtr.561"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.mojo::StructPtr.561"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.mojo::StructPtr.561", %"class.mojo::StructPtr.561"* %69, i64 %72
  %74 = bitcast %"class.mojo::StructPtr.561"* %73 to i64*
  %75 = getelementptr inbounds %"class.mojo::StructPtr.561", %"class.mojo::StructPtr.561"* %73, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %75, align 8
  %76 = bitcast %"class.mojo::StructPtr.561"* %70 to i64*
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %74, align 8
  store i64 0, i64* %76, align 8
  %78 = load i32, i32* %3, align 4
  %79 = add i32 %78, 1
  store i32 %79, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo11CloneTraitsIN3WTF6VectorINS_9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKSA_(%"class.WTF::Vector.2747"* noalias sret, %"class.WTF::Vector.2747"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.mojo::StructPtr.2750", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.2747", %"class.WTF::Vector.2747"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.WTF::Vector.2747", %"class.WTF::Vector.2747"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2747", %"class.WTF::Vector.2747"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.WTF::Vector.2747"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #12
  %8 = getelementptr inbounds %"class.WTF::Vector.2747", %"class.WTF::Vector.2747"* %1, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %57, label %11, !prof !3

11:                                               ; preds = %2
  %12 = zext i32 %9 to i64
  %13 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEmm(i64 %12) #12
  %14 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %13, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEPKcv, i64 0, i64 0)) #12
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast %"class.WTF::Vector.2747"* %0 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = lshr i64 %13, 3
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %5, align 8
  %19 = load i32, i32* %8, align 4
  %20 = getelementptr inbounds %"class.WTF::Vector.2747", %"class.WTF::Vector.2747"* %1, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.mojo::StructPtr.2750"*, %"class.mojo::StructPtr.2750"** %20, align 8
  %22 = zext i32 %19 to i64
  %23 = getelementptr inbounds %"class.mojo::StructPtr.2750", %"class.mojo::StructPtr.2750"* %21, i64 %22
  %24 = icmp eq i32 %19, 0
  br i1 %24, label %57, label %25

25:                                               ; preds = %11
  %26 = bitcast %"class.mojo::StructPtr.2750"* %3 to i8*
  %27 = bitcast %"class.mojo::StructPtr.2750"* %3 to i64*
  %28 = getelementptr inbounds %"class.mojo::StructPtr.2750", %"class.mojo::StructPtr.2750"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %29

29:                                               ; preds = %25, %54
  %30 = phi %"class.mojo::StructPtr.2750"* [ %21, %25 ], [ %55, %54 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #12
  %31 = getelementptr inbounds %"class.mojo::StructPtr.2750", %"class.mojo::StructPtr.2750"* %30, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load %"class.network::mojom::blink::CSPHashSource"*, %"class.network::mojom::blink::CSPHashSource"** %31, align 8, !noalias !92
  %33 = icmp eq %"class.network::mojom::blink::CSPHashSource"* %32, null
  br i1 %33, label %34, label %35

34:                                               ; preds = %29
  store i64 0, i64* %27, align 8, !alias.scope !92
  br label %36

35:                                               ; preds = %29
  call void @_ZNK7network5mojom5blink13CSPHashSource5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.2750"* nonnull sret %3, %"class.network::mojom::blink::CSPHashSource"* nonnull %32) #12
  br label %36

36:                                               ; preds = %34, %35
  %37 = load i32, i32* %6, align 4
  %38 = load i32, i32* %5, align 8
  %39 = icmp eq i32 %37, %38
  br i1 %39, label %49, label %40, !prof !3

40:                                               ; preds = %36
  %41 = load %"class.mojo::StructPtr.2750"*, %"class.mojo::StructPtr.2750"** %4, align 8
  %42 = zext i32 %37 to i64
  %43 = getelementptr inbounds %"class.mojo::StructPtr.2750", %"class.mojo::StructPtr.2750"* %41, i64 %42
  %44 = bitcast %"class.mojo::StructPtr.2750"* %43 to i64*
  %45 = getelementptr inbounds %"class.mojo::StructPtr.2750", %"class.mojo::StructPtr.2750"* %43, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %45, align 8
  %46 = load i64, i64* %27, align 8
  store i64 %46, i64* %44, align 8
  %47 = load i32, i32* %6, align 4
  %48 = add i32 %47, 1
  store i32 %48, i32* %6, align 4
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %28, align 8
  br label %54

49:                                               ; preds = %36
  call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.2747"* %0, %"class.mojo::StructPtr.2750"* nonnull dereferenceable(8) %3) #12
  %50 = load %"class.network::mojom::blink::CSPHashSource"*, %"class.network::mojom::blink::CSPHashSource"** %28, align 8
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %28, align 8
  %51 = icmp eq %"class.network::mojom::blink::CSPHashSource"* %50, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %49
  %53 = bitcast %"class.network::mojom::blink::CSPHashSource"* %50 to i8*
  call void @_ZN7network5mojom5blink13CSPHashSourceD1Ev(%"class.network::mojom::blink::CSPHashSource"* nonnull %50) #12
  call void @_ZdlPv(i8* %53) #13
  br label %54

54:                                               ; preds = %40, %49, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #12
  %55 = getelementptr inbounds %"class.mojo::StructPtr.2750", %"class.mojo::StructPtr.2750"* %30, i64 1
  %56 = icmp eq %"class.mojo::StructPtr.2750"* %55, %23
  br i1 %56, label %57, label %29

57:                                               ; preds = %54, %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2747"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %72

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.2747", %"class.WTF::Vector.2747"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.mojo::StructPtr.2750"*, %"class.mojo::StructPtr.2750"** %5, align 8
  %7 = bitcast %"class.mojo::StructPtr.2750"* %6 to i8*
  %8 = getelementptr inbounds %"class.WTF::Vector.2747", %"class.WTF::Vector.2747"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.2750", %"class.mojo::StructPtr.2750"* %6, i64 %10
  %12 = bitcast %"class.WTF::Vector.2747"* %0 to i64*
  store atomic i64 0, i64* %12 monotonic, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector.2747", %"class.WTF::Vector.2747"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %13, align 8
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %71, label %15

15:                                               ; preds = %4
  %16 = shl nuw nsw i64 %10, 3
  %17 = add nsw i64 %16, -8
  %18 = lshr exact i64 %17, 3
  %19 = add nuw nsw i64 %18, 1
  %20 = and i64 %19, 3
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %35, label %22

22:                                               ; preds = %15, %22
  %23 = phi %"class.mojo::StructPtr.2750"* [ %32, %22 ], [ %6, %15 ]
  %24 = phi %"class.mojo::StructPtr.2750"* [ %31, %22 ], [ null, %15 ]
  %25 = phi i64 [ %33, %22 ], [ %20, %15 ]
  %26 = bitcast %"class.mojo::StructPtr.2750"* %24 to i64*
  %27 = getelementptr inbounds %"class.mojo::StructPtr.2750", %"class.mojo::StructPtr.2750"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %27, align 8
  %28 = bitcast %"class.mojo::StructPtr.2750"* %23 to i64*
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %26, align 8
  %30 = getelementptr inbounds %"class.mojo::StructPtr.2750", %"class.mojo::StructPtr.2750"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %30, align 8
  %31 = getelementptr inbounds %"class.mojo::StructPtr.2750", %"class.mojo::StructPtr.2750"* %24, i64 1
  %32 = getelementptr inbounds %"class.mojo::StructPtr.2750", %"class.mojo::StructPtr.2750"* %23, i64 1
  %33 = add i64 %25, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %22, !llvm.loop !99

35:                                               ; preds = %22, %15
  %36 = phi %"class.mojo::StructPtr.2750"* [ %6, %15 ], [ %32, %22 ]
  %37 = phi %"class.mojo::StructPtr.2750"* [ null, %15 ], [ %31, %22 ]
  %38 = icmp ult i64 %17, 24
  br i1 %38, label %71, label %39

39:                                               ; preds = %35, %39
  %40 = phi %"class.mojo::StructPtr.2750"* [ %69, %39 ], [ %36, %35 ]
  %41 = phi %"class.mojo::StructPtr.2750"* [ %68, %39 ], [ %37, %35 ]
  %42 = bitcast %"class.mojo::StructPtr.2750"* %41 to i64*
  %43 = getelementptr inbounds %"class.mojo::StructPtr.2750", %"class.mojo::StructPtr.2750"* %41, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %43, align 8
  %44 = bitcast %"class.mojo::StructPtr.2750"* %40 to i64*
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %42, align 8
  %46 = getelementptr inbounds %"class.mojo::StructPtr.2750", %"class.mojo::StructPtr.2750"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %46, align 8
  %47 = getelementptr inbounds %"class.mojo::StructPtr.2750", %"class.mojo::StructPtr.2750"* %41, i64 1
  %48 = getelementptr inbounds %"class.mojo::StructPtr.2750", %"class.mojo::StructPtr.2750"* %40, i64 1
  %49 = bitcast %"class.mojo::StructPtr.2750"* %47 to i64*
  %50 = getelementptr inbounds %"class.mojo::StructPtr.2750", %"class.mojo::StructPtr.2750"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %50, align 8
  %51 = bitcast %"class.mojo::StructPtr.2750"* %48 to i64*
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %49, align 8
  %53 = getelementptr inbounds %"class.mojo::StructPtr.2750", %"class.mojo::StructPtr.2750"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %53, align 8
  %54 = getelementptr inbounds %"class.mojo::StructPtr.2750", %"class.mojo::StructPtr.2750"* %41, i64 2
  %55 = getelementptr inbounds %"class.mojo::StructPtr.2750", %"class.mojo::StructPtr.2750"* %40, i64 2
  %56 = bitcast %"class.mojo::StructPtr.2750"* %54 to i64*
  %57 = getelementptr inbounds %"class.mojo::StructPtr.2750", %"class.mojo::StructPtr.2750"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %57, align 8
  %58 = bitcast %"class.mojo::StructPtr.2750"* %55 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %56, align 8
  %60 = getelementptr inbounds %"class.mojo::StructPtr.2750", %"class.mojo::StructPtr.2750"* %55, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %60, align 8
  %61 = getelementptr inbounds %"class.mojo::StructPtr.2750", %"class.mojo::StructPtr.2750"* %41, i64 3
  %62 = getelementptr inbounds %"class.mojo::StructPtr.2750", %"class.mojo::StructPtr.2750"* %40, i64 3
  %63 = bitcast %"class.mojo::StructPtr.2750"* %61 to i64*
  %64 = getelementptr inbounds %"class.mojo::StructPtr.2750", %"class.mojo::StructPtr.2750"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %64, align 8
  %65 = bitcast %"class.mojo::StructPtr.2750"* %62 to i64*
  %66 = load i64, i64* %65, align 8
  store i64 %66, i64* %63, align 8
  %67 = getelementptr inbounds %"class.mojo::StructPtr.2750", %"class.mojo::StructPtr.2750"* %62, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %67, align 8
  %68 = getelementptr inbounds %"class.mojo::StructPtr.2750", %"class.mojo::StructPtr.2750"* %41, i64 4
  %69 = getelementptr inbounds %"class.mojo::StructPtr.2750", %"class.mojo::StructPtr.2750"* %40, i64 4
  %70 = icmp eq %"class.mojo::StructPtr.2750"* %69, %11
  br i1 %70, label %71, label %39

71:                                               ; preds = %35, %39, %4
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #12
  br label %152

72:                                               ; preds = %2
  %73 = zext i32 %1 to i64
  %74 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEmm(i64 %73) #12
  %75 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %74, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEPKcv, i64 0, i64 0)) #12
  %76 = lshr i64 %74, 3
  %77 = ptrtoint i8* %75 to i64
  %78 = getelementptr inbounds %"class.WTF::Vector.2747", %"class.WTF::Vector.2747"* %0, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.mojo::StructPtr.2750"*, %"class.mojo::StructPtr.2750"** %78, align 8
  %80 = getelementptr inbounds %"class.WTF::Vector.2747", %"class.WTF::Vector.2747"* %0, i64 0, i32 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"class.mojo::StructPtr.2750", %"class.mojo::StructPtr.2750"* %79, i64 %82
  %84 = icmp eq i32 %81, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %72
  %86 = bitcast %"class.mojo::StructPtr.2750"* %79 to i8*
  br label %147

87:                                               ; preds = %72
  %88 = bitcast i8* %75 to %"class.mojo::StructPtr.2750"*
  %89 = shl nuw nsw i64 %82, 3
  %90 = add nsw i64 %89, -8
  %91 = lshr exact i64 %90, 3
  %92 = add nuw nsw i64 %91, 1
  %93 = and i64 %92, 3
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %108, label %95

95:                                               ; preds = %87, %95
  %96 = phi %"class.mojo::StructPtr.2750"* [ %105, %95 ], [ %79, %87 ]
  %97 = phi %"class.mojo::StructPtr.2750"* [ %104, %95 ], [ %88, %87 ]
  %98 = phi i64 [ %106, %95 ], [ %93, %87 ]
  %99 = bitcast %"class.mojo::StructPtr.2750"* %97 to i64*
  %100 = getelementptr inbounds %"class.mojo::StructPtr.2750", %"class.mojo::StructPtr.2750"* %97, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %100, align 8
  %101 = bitcast %"class.mojo::StructPtr.2750"* %96 to i64*
  %102 = load i64, i64* %101, align 8
  store i64 %102, i64* %99, align 8
  %103 = getelementptr inbounds %"class.mojo::StructPtr.2750", %"class.mojo::StructPtr.2750"* %96, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %103, align 8
  %104 = getelementptr inbounds %"class.mojo::StructPtr.2750", %"class.mojo::StructPtr.2750"* %97, i64 1
  %105 = getelementptr inbounds %"class.mojo::StructPtr.2750", %"class.mojo::StructPtr.2750"* %96, i64 1
  %106 = add i64 %98, -1
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %95, !llvm.loop !100

108:                                              ; preds = %95, %87
  %109 = phi %"class.mojo::StructPtr.2750"* [ %79, %87 ], [ %105, %95 ]
  %110 = phi %"class.mojo::StructPtr.2750"* [ %88, %87 ], [ %104, %95 ]
  %111 = icmp ult i64 %90, 24
  br i1 %111, label %144, label %112

112:                                              ; preds = %108, %112
  %113 = phi %"class.mojo::StructPtr.2750"* [ %142, %112 ], [ %109, %108 ]
  %114 = phi %"class.mojo::StructPtr.2750"* [ %141, %112 ], [ %110, %108 ]
  %115 = bitcast %"class.mojo::StructPtr.2750"* %114 to i64*
  %116 = getelementptr inbounds %"class.mojo::StructPtr.2750", %"class.mojo::StructPtr.2750"* %114, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %116, align 8
  %117 = bitcast %"class.mojo::StructPtr.2750"* %113 to i64*
  %118 = load i64, i64* %117, align 8
  store i64 %118, i64* %115, align 8
  %119 = getelementptr inbounds %"class.mojo::StructPtr.2750", %"class.mojo::StructPtr.2750"* %113, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %119, align 8
  %120 = getelementptr inbounds %"class.mojo::StructPtr.2750", %"class.mojo::StructPtr.2750"* %114, i64 1
  %121 = getelementptr inbounds %"class.mojo::StructPtr.2750", %"class.mojo::StructPtr.2750"* %113, i64 1
  %122 = bitcast %"class.mojo::StructPtr.2750"* %120 to i64*
  %123 = getelementptr inbounds %"class.mojo::StructPtr.2750", %"class.mojo::StructPtr.2750"* %120, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %123, align 8
  %124 = bitcast %"class.mojo::StructPtr.2750"* %121 to i64*
  %125 = load i64, i64* %124, align 8
  store i64 %125, i64* %122, align 8
  %126 = getelementptr inbounds %"class.mojo::StructPtr.2750", %"class.mojo::StructPtr.2750"* %121, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %126, align 8
  %127 = getelementptr inbounds %"class.mojo::StructPtr.2750", %"class.mojo::StructPtr.2750"* %114, i64 2
  %128 = getelementptr inbounds %"class.mojo::StructPtr.2750", %"class.mojo::StructPtr.2750"* %113, i64 2
  %129 = bitcast %"class.mojo::StructPtr.2750"* %127 to i64*
  %130 = getelementptr inbounds %"class.mojo::StructPtr.2750", %"class.mojo::StructPtr.2750"* %127, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %130, align 8
  %131 = bitcast %"class.mojo::StructPtr.2750"* %128 to i64*
  %132 = load i64, i64* %131, align 8
  store i64 %132, i64* %129, align 8
  %133 = getelementptr inbounds %"class.mojo::StructPtr.2750", %"class.mojo::StructPtr.2750"* %128, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %133, align 8
  %134 = getelementptr inbounds %"class.mojo::StructPtr.2750", %"class.mojo::StructPtr.2750"* %114, i64 3
  %135 = getelementptr inbounds %"class.mojo::StructPtr.2750", %"class.mojo::StructPtr.2750"* %113, i64 3
  %136 = bitcast %"class.mojo::StructPtr.2750"* %134 to i64*
  %137 = getelementptr inbounds %"class.mojo::StructPtr.2750", %"class.mojo::StructPtr.2750"* %134, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %137, align 8
  %138 = bitcast %"class.mojo::StructPtr.2750"* %135 to i64*
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %136, align 8
  %140 = getelementptr inbounds %"class.mojo::StructPtr.2750", %"class.mojo::StructPtr.2750"* %135, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %140, align 8
  %141 = getelementptr inbounds %"class.mojo::StructPtr.2750", %"class.mojo::StructPtr.2750"* %114, i64 4
  %142 = getelementptr inbounds %"class.mojo::StructPtr.2750", %"class.mojo::StructPtr.2750"* %113, i64 4
  %143 = icmp eq %"class.mojo::StructPtr.2750"* %142, %83
  br i1 %143, label %144, label %112

144:                                              ; preds = %112, %108
  %145 = bitcast %"class.WTF::Vector.2747"* %0 to i8**
  %146 = load i8*, i8** %145, align 8
  br label %147

147:                                              ; preds = %85, %144
  %148 = phi i8* [ %146, %144 ], [ %86, %85 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %148) #12
  %149 = bitcast %"class.WTF::Vector.2747"* %0 to i64*
  store atomic i64 %77, i64* %149 monotonic, align 8
  %150 = trunc i64 %76 to i32
  %151 = getelementptr inbounds %"class.WTF::Vector.2747", %"class.WTF::Vector.2747"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %150, i32* %151, align 8
  br label %152

152:                                              ; preds = %147, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.8, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

; Function Attrs: nounwind
declare void @_ZN7network5mojom5blink13CSPHashSourceD1Ev(%"class.network::mojom::blink::CSPHashSource"*) unnamed_addr #7

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.2747"*, %"class.mojo::StructPtr.2750"* dereferenceable(8)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2747", %"class.WTF::Vector.2747"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2747", %"class.WTF::Vector.2747"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.mojo::StructPtr.2750"*, %"class.mojo::StructPtr.2750"** %6, align 8
  %8 = icmp ugt %"class.mojo::StructPtr.2750"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.2750", %"class.mojo::StructPtr.2750"* %7, i64 %10
  %12 = icmp ugt %"class.mojo::StructPtr.2750"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.2747", %"class.WTF::Vector.2747"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !7

24:                                               ; preds = %13
  %25 = icmp eq %"class.mojo::StructPtr.2750"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEmm(i64 %27) #12
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEPKcv, i64 0, i64 0)) #12
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.2747"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %28, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.mojo::StructPtr.2750"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2747"* %0, i32 %22) #12
  %36 = load %"class.mojo::StructPtr.2750"*, %"class.mojo::StructPtr.2750"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.mojo::StructPtr.2750"* %1 to i64
  %39 = ptrtoint %"class.mojo::StructPtr.2750"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 3
  %42 = getelementptr inbounds %"class.WTF::Vector.2747", %"class.WTF::Vector.2747"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !7

52:                                               ; preds = %37
  %53 = icmp eq %"class.mojo::StructPtr.2750"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEmm(i64 %55) #12
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEPKcv, i64 0, i64 0)) #12
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.2747"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = lshr i64 %56, 3
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.mojo::StructPtr.2750"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2747"* %0, i32 %50) #12
  %64 = load %"class.mojo::StructPtr.2750"*, %"class.mojo::StructPtr.2750"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.mojo::StructPtr.2750"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.mojo::StructPtr.2750", %"class.mojo::StructPtr.2750"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.mojo::StructPtr.2750"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.mojo::StructPtr.2750"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.mojo::StructPtr.2750", %"class.mojo::StructPtr.2750"* %69, i64 %72
  %74 = bitcast %"class.mojo::StructPtr.2750"* %73 to i64*
  %75 = getelementptr inbounds %"class.mojo::StructPtr.2750", %"class.mojo::StructPtr.2750"* %73, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %75, align 8
  %76 = bitcast %"class.mojo::StructPtr.2750"* %70 to i64*
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %74, align 8
  store i64 0, i64* %76, align 8
  %78 = load i32, i32* %3, align 4
  %79 = add i32 %78, 1
  store i32 %79, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK7network5mojom5blink13CSPHashSource5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.2750"* noalias sret, %"class.network::mojom::blink::CSPHashSource"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::Vector.2699", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.WTF::Vector.2699", align 8
  %6 = getelementptr inbounds %"class.network::mojom::blink::CSPHashSource", %"class.network::mojom::blink::CSPHashSource"* %1, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = bitcast %"class.WTF::Vector.2699"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #12
  %9 = getelementptr inbounds %"class.WTF::Vector.2699", %"class.WTF::Vector.2699"* %5, i64 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.WTF::Vector.2699", %"class.WTF::Vector.2699"* %5, i64 0, i32 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::Vector.2699", %"class.WTF::Vector.2699"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 16, i1 false) #12, !alias.scope !101
  %12 = getelementptr inbounds %"class.network::mojom::blink::CSPHashSource", %"class.network::mojom::blink::CSPHashSource"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4, !noalias !101
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %28, label %15, !prof !3

15:                                               ; preds = %2
  %16 = zext i32 %13 to i64
  %17 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %16) #12
  %18 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %17, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #12
  %19 = ptrtoint i8* %18 to i64
  %20 = bitcast %"class.WTF::Vector.2699"* %5 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = load i32, i32* %12, align 4, !noalias !101
  %22 = trunc i64 %17 to i32
  store i32 %22, i32* %10, align 8
  %23 = getelementptr inbounds %"class.network::mojom::blink::CSPHashSource", %"class.network::mojom::blink::CSPHashSource"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8, !noalias !101
  %25 = zext i32 %21 to i64
  %26 = getelementptr inbounds i8, i8* %24, i64 %25
  %27 = icmp eq i32 %21, 0
  br i1 %27, label %28, label %32

28:                                               ; preds = %2, %15
  %29 = phi i32 [ %22, %15 ], [ 0, %2 ]
  %30 = phi i64 [ %19, %15 ], [ 0, %2 ]
  %31 = bitcast %"class.WTF::Vector.2699"* %5 to i64*
  br label %56

32:                                               ; preds = %15, %48
  %33 = phi i32 [ %50, %48 ], [ %22, %15 ]
  %34 = phi i32 [ %49, %48 ], [ 0, %15 ]
  %35 = phi i8* [ %46, %48 ], [ %24, %15 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #12, !noalias !101
  %36 = load i8, i8* %35, align 1
  store i8 %36, i8* %4, align 1, !noalias !101
  %37 = icmp eq i32 %34, %33
  br i1 %37, label %44, label %38, !prof !3

38:                                               ; preds = %32
  %39 = load i8*, i8** %9, align 8, !alias.scope !101
  %40 = zext i32 %34 to i64
  %41 = getelementptr inbounds i8, i8* %39, i64 %40
  store i8 %36, i8* %41, align 1
  %42 = load i32, i32* %11, align 4, !alias.scope !101
  %43 = add i32 %42, 1
  store i32 %43, i32* %11, align 4, !alias.scope !101
  br label %45

44:                                               ; preds = %32
  call void @_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIhEEvOT_(%"class.WTF::Vector.2699"* nonnull %5, i8* nonnull dereferenceable(1) %4) #12
  br label %45

45:                                               ; preds = %44, %38
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #12, !noalias !101
  %46 = getelementptr inbounds i8, i8* %35, i64 1
  %47 = icmp eq i8* %46, %26
  br i1 %47, label %51, label %48

48:                                               ; preds = %45
  %49 = load i32, i32* %11, align 4, !alias.scope !101
  %50 = load i32, i32* %10, align 8, !alias.scope !101
  br label %32

51:                                               ; preds = %45
  %52 = bitcast %"class.WTF::Vector.2699"* %5 to i64*
  %53 = load i64, i64* %52, align 8, !noalias !106
  %54 = load i32, i32* %10, align 8, !noalias !106
  %55 = load i32, i32* %11, align 4, !noalias !106
  br label %56

56:                                               ; preds = %28, %51
  %57 = phi i64* [ %31, %28 ], [ %52, %51 ]
  %58 = phi i32 [ 0, %28 ], [ %55, %51 ]
  %59 = phi i32 [ %29, %28 ], [ %54, %51 ]
  %60 = phi i64 [ %30, %28 ], [ %53, %51 ]
  %61 = bitcast %"class.WTF::Vector.2699"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %61) #12, !noalias !106
  %62 = call i8* @_Znwm(i64 24) #13, !noalias !106
  %63 = bitcast i8* %62 to %"class.network::mojom::blink::CSPHashSource"*
  %64 = getelementptr inbounds %"class.WTF::Vector.2699", %"class.WTF::Vector.2699"* %3, i64 0, i32 0, i32 0, i32 1
  %65 = getelementptr inbounds %"class.WTF::Vector.2699", %"class.WTF::Vector.2699"* %3, i64 0, i32 0, i32 0, i32 2
  %66 = bitcast %"class.WTF::Vector.2699"* %3 to i64*
  store i64 0, i64* %66, align 8, !noalias !106
  store atomic i64 0, i64* %57 monotonic, align 8, !noalias !106
  store atomic i64 %60, i64* %66 monotonic, align 8, !noalias !106
  store i32 %59, i32* %64, align 8, !noalias !106
  store i32 0, i32* %10, align 8, !noalias !106
  store i32 %58, i32* %65, align 4, !noalias !106
  store i32 0, i32* %11, align 4, !noalias !106
  call void @_ZN7network5mojom5blink13CSPHashSourceC1ENS0_16CSPHashAlgorithmEN3WTF6VectorIhLj0ENS4_18PartitionAllocatorEEE(%"class.network::mojom::blink::CSPHashSource"* nonnull %63, i32 %7, %"class.WTF::Vector.2699"* nonnull %3) #12, !noalias !106
  %67 = ptrtoint i8* %62 to i64
  %68 = bitcast %"class.mojo::StructPtr.2750"* %0 to i64*
  store i64 %67, i64* %68, align 8, !alias.scope !106
  %69 = getelementptr inbounds %"class.WTF::Vector.2699", %"class.WTF::Vector.2699"* %3, i64 0, i32 0, i32 0, i32 0
  %70 = load i8*, i8** %69, align 8, !noalias !106
  %71 = icmp eq i8* %70, null
  br i1 %71, label %77, label %72, !prof !7

72:                                               ; preds = %56
  %73 = load i32, i32* %65, align 4, !noalias !106
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %76, label %75, !prof !3

75:                                               ; preds = %72
  store i32 0, i32* %65, align 4, !noalias !106
  br label %76

76:                                               ; preds = %75, %72
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %70) #12, !noalias !106
  store i8* null, i8** %69, align 8, !noalias !106
  br label %77

77:                                               ; preds = %56, %76
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %61) #12, !noalias !106
  %78 = load i8*, i8** %9, align 8
  %79 = icmp eq i8* %78, null
  br i1 %79, label %85, label %80, !prof !7

80:                                               ; preds = %77
  %81 = load i32, i32* %11, align 4
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %84, label %83, !prof !3

83:                                               ; preds = %80
  store i32 0, i32* %11, align 4
  br label %84

84:                                               ; preds = %83, %80
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %78) #12
  store i8* null, i8** %9, align 8
  br label %85

85:                                               ; preds = %77, %84
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #12
  ret void
}

declare void @_ZN7network5mojom5blink13CSPHashSourceC1ENS0_16CSPHashAlgorithmEN3WTF6VectorIhLj0ENS4_18PartitionAllocatorEEE(%"class.network::mojom::blink::CSPHashSource"*, i32, %"class.WTF::Vector.2699"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.8, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #12
  ret i64 %20
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIhEEvOT_(%"class.WTF::Vector.2699"*, i8* dereferenceable(1)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2699", %"class.WTF::Vector.2699"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2699", %"class.WTF::Vector.2699"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8, i8* %7, i64 %10
  %12 = icmp ugt i8* %11, %1
  br i1 %12, label %46, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.2699", %"class.WTF::Vector.2699"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %83, !prof !7

24:                                               ; preds = %13
  %25 = icmp eq i8* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %26) #12
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #12
  %29 = ptrtoint i8* %28 to i64
  br i1 %25, label %30, label %33

30:                                               ; preds = %24
  %31 = bitcast %"class.WTF::Vector.2699"* %0 to i64*
  store atomic i64 %29, i64* %31 monotonic, align 8
  %32 = trunc i64 %27 to i32
  store i32 %32, i32* %14, align 8
  br label %83

33:                                               ; preds = %24
  %34 = load i8*, i8** %6, align 8
  %35 = icmp ne i8* %28, null
  %36 = icmp ne i8* %34, null
  %37 = and i1 %35, %36
  br i1 %37, label %38, label %42, !prof !7

38:                                               ; preds = %33
  %39 = load i32, i32* %3, align 4
  %40 = zext i32 %39 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %28, i8* nonnull align 1 %34, i64 %40, i1 false) #12
  %41 = load i8*, i8** %6, align 8
  br label %42

42:                                               ; preds = %38, %33
  %43 = phi i8* [ %34, %33 ], [ %41, %38 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %43) #12
  %44 = bitcast %"class.WTF::Vector.2699"* %0 to i64*
  store atomic i64 %29, i64* %44 monotonic, align 8
  %45 = trunc i64 %27 to i32
  store i32 %45, i32* %14, align 8
  br label %83

46:                                               ; preds = %9
  %47 = ptrtoint i8* %1 to i64
  %48 = ptrtoint i8* %7 to i64
  %49 = sub i64 %47, %48
  %50 = getelementptr inbounds %"class.WTF::Vector.2699", %"class.WTF::Vector.2699"* %0, i64 0, i32 0, i32 0, i32 1
  %51 = load i32, i32* %50, align 8
  %52 = lshr i32 %51, 2
  %53 = add i32 %51, 1
  %54 = add i32 %53, %52
  %55 = icmp ugt i32 %54, 4
  %56 = select i1 %55, i32 %54, i32 4
  %57 = icmp ugt i32 %56, %5
  %58 = select i1 %57, i32 %56, i32 %5
  %59 = icmp ult i32 %51, %58
  br i1 %59, label %60, label %80, !prof !7

60:                                               ; preds = %46
  %61 = icmp eq i8* %7, null
  %62 = zext i32 %58 to i64
  %63 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %62) #12
  %64 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %63, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #12
  %65 = ptrtoint i8* %64 to i64
  br i1 %61, label %77, label %66

66:                                               ; preds = %60
  %67 = load i8*, i8** %6, align 8
  %68 = icmp ne i8* %64, null
  %69 = icmp ne i8* %67, null
  %70 = and i1 %68, %69
  br i1 %70, label %71, label %75, !prof !7

71:                                               ; preds = %66
  %72 = load i32, i32* %3, align 4
  %73 = zext i32 %72 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %64, i8* nonnull align 1 %67, i64 %73, i1 false) #12
  %74 = load i8*, i8** %6, align 8
  br label %75

75:                                               ; preds = %71, %66
  %76 = phi i8* [ %67, %66 ], [ %74, %71 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %76) #12
  br label %77

77:                                               ; preds = %60, %75
  %78 = bitcast %"class.WTF::Vector.2699"* %0 to i64*
  store atomic i64 %65, i64* %78 monotonic, align 8
  %79 = trunc i64 %63 to i32
  store i32 %79, i32* %50, align 8
  br label %80

80:                                               ; preds = %77, %46
  %81 = phi i8* [ %7, %46 ], [ %64, %77 ]
  %82 = getelementptr inbounds i8, i8* %81, i64 %49
  br label %83

83:                                               ; preds = %42, %30, %13, %80
  %84 = phi i8* [ %81, %80 ], [ %7, %13 ], [ %28, %30 ], [ %28, %42 ]
  %85 = phi i8* [ %82, %80 ], [ %1, %13 ], [ %1, %30 ], [ %1, %42 ]
  %86 = load i32, i32* %3, align 4
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds i8, i8* %84, i64 %87
  %89 = load i8, i8* %85, align 1
  store i8 %89, i8* %88, align 1
  %90 = load i32, i32* %3, align 4
  %91 = add i32 %90, 1
  store i32 %91, i32* %3, align 4
  ret void
}

declare void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderC1ERKN3WTF6StringENS0_25ContentSecurityPolicyTypeENS0_27ContentSecurityPolicySourceE(%"class.network::mojom::blink::ContentSecurityPolicyHeader"*, %"class.WTF::String"* dereferenceable(8), i32, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo11CloneTraitsIN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKS5_(%"class.WTF::Vector.578"* noalias sret, %"class.WTF::Vector.578"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.578", %"class.WTF::Vector.578"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.WTF::Vector.578", %"class.WTF::Vector.578"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::Vector.578", %"class.WTF::Vector.578"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.WTF::Vector.578"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #12
  %8 = getelementptr inbounds %"class.WTF::Vector.578", %"class.WTF::Vector.578"* %1, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %81, label %11, !prof !3

11:                                               ; preds = %2
  %12 = zext i32 %9 to i64
  %13 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %12) #12
  %14 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %13, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #12
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast %"class.WTF::Vector.578"* %0 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = lshr i64 %13, 3
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %5, align 8
  %19 = load i32, i32* %8, align 4
  %20 = getelementptr inbounds %"class.WTF::Vector.578", %"class.WTF::Vector.578"* %1, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::String"*, %"class.WTF::String"** %20, align 8
  %22 = zext i32 %19 to i64
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 %22
  %24 = icmp eq i32 %19, 0
  br i1 %24, label %81, label %25

25:                                               ; preds = %11
  %26 = bitcast %"class.WTF::String"* %3 to i8*
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  br label %28

28:                                               ; preds = %25, %78
  %29 = phi %"class.WTF::String"* [ %21, %25 ], [ %79, %78 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #12
  %30 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %29, i64 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %50, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %50

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = zext i32 %40 to i33
  %42 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %41, i33 1) #12
  %43 = extractvalue { i33, i1 } %42, 1
  %44 = extractvalue { i33, i1 } %42, 0
  %45 = icmp slt i33 %44, 0
  %46 = or i1 %43, %45
  br i1 %46, label %47, label %48, !prof !3

47:                                               ; preds = %38
  call void @llvm.trap() #12
  unreachable

48:                                               ; preds = %38
  %49 = trunc i33 %44 to i32
  store i32 %49, i32* %39, align 4
  br label %50

50:                                               ; preds = %28, %33, %48
  store %"class.WTF::StringImpl"* %31, %"class.WTF::StringImpl"** %27, align 8
  %51 = load i32, i32* %6, align 4
  %52 = load i32, i32* %5, align 8
  %53 = icmp eq i32 %51, %52
  br i1 %53, label %62, label %54, !prof !3

54:                                               ; preds = %50
  %55 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %56 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  %57 = zext i32 %51 to i64
  %58 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %56, i64 %57
  %59 = bitcast %"class.WTF::String"* %58 to i64*
  store i64 %55, i64* %59, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %27, align 8
  %60 = load i32, i32* %6, align 4
  %61 = add i32 %60, 1
  store i32 %61, i32* %6, align 4
  br label %78

62:                                               ; preds = %50
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.578"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %3) #12
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %64, label %78, label %65

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  br i1 %69, label %72, label %74

72:                                               ; preds = %65
  %73 = add i32 %71, -1
  store i32 %73, i32* %70, align 4
  br label %74

74:                                               ; preds = %72, %65
  %75 = phi i32 [ %73, %72 ], [ %71, %65 ]
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %78

77:                                               ; preds = %74
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %63) #12
  br label %78

78:                                               ; preds = %54, %62, %74, %77
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #12
  %79 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %29, i64 1
  %80 = icmp eq %"class.WTF::String"* %79, %23
  br i1 %80, label %81, label %28

81:                                               ; preds = %78, %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.8, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.578"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.578", %"class.WTF::Vector.578"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.578", %"class.WTF::Vector.578"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %8 = icmp ugt %"class.WTF::String"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::String"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.578", %"class.WTF::Vector.578"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !7

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::String"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %26) #12
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #12
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.578"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.WTF::String"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.WTF::String"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !7

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #12
  %47 = bitcast %"class.WTF::Vector.578"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #12
  %51 = bitcast %"class.WTF::Vector.578"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.WTF::String"* %1 to i64
  %56 = ptrtoint %"class.WTF::String"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.578", %"class.WTF::Vector.578"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !7

69:                                               ; preds = %54
  %70 = icmp eq %"class.WTF::String"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %71) #12
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #12
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.578"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.WTF::String"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.WTF::String"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !7

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #12
  %87 = bitcast %"class.WTF::Vector.578"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #12
  %91 = bitcast %"class.WTF::Vector.578"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.WTF::String"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.WTF::String"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.WTF::String"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.WTF::String"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 %103
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %101, i64 0, i32 0, i32 0
  %106 = bitcast %"class.WTF::String"* %101 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.WTF::String"* %104 to i64*
  store i64 %107, i64* %108, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %105, align 8
  %109 = load i32, i32* %3, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK7network5mojom5blink15CSPTrustedTypes5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.583"* noalias sret, %"class.network::mojom::blink::CSPTrustedTypes"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::Vector.578", align 8
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  %6 = bitcast %"class.WTF::Vector.578"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.network::mojom::blink::CSPTrustedTypes", %"class.network::mojom::blink::CSPTrustedTypes"* %1, i64 0, i32 0
  call void @_ZN4mojo11CloneTraitsIN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKS5_(%"class.WTF::Vector.578"* nonnull sret %3, %"class.WTF::Vector.578"* dereferenceable(16) %7) #12
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #12
  %8 = getelementptr inbounds %"class.network::mojom::blink::CSPTrustedTypes", %"class.network::mojom::blink::CSPTrustedTypes"* %1, i64 0, i32 1
  %9 = load i8, i8* %8, align 1, !range !2
  store i8 %9, i8* %4, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #12
  %10 = getelementptr inbounds %"class.network::mojom::blink::CSPTrustedTypes", %"class.network::mojom::blink::CSPTrustedTypes"* %1, i64 0, i32 2
  %11 = load i8, i8* %10, align 1, !range !2
  store i8 %11, i8* %5, align 1
  call void @_ZN4mojo9StructPtrIN7network5mojom5blink15CSPTrustedTypesEEC2IJN3WTF6VectorINS7_6StringELj0ENS7_18PartitionAllocatorEEEbbEEEN4base10in_place_tEDpOT_(%"class.mojo::StructPtr.583"* %0, %"class.WTF::Vector.578"* nonnull dereferenceable(16) %3, i8* nonnull dereferenceable(1) %4, i8* nonnull dereferenceable(1) %5) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #12
  %12 = getelementptr inbounds %"class.WTF::Vector.578", %"class.WTF::Vector.578"* %3, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.WTF::String"*, %"class.WTF::String"** %12, align 8
  %14 = icmp eq %"class.WTF::String"* %13, null
  br i1 %14, label %49, label %15, !prof !7

15:                                               ; preds = %2
  %16 = bitcast %"class.WTF::String"* %13 to i8*
  %17 = getelementptr inbounds %"class.WTF::Vector.578", %"class.WTF::Vector.578"* %3, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %47, label %20, !prof !3

20:                                               ; preds = %15
  %21 = zext i32 %18 to i64
  %22 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 %21
  br label %23

23:                                               ; preds = %41, %20
  %24 = phi %"class.WTF::String"* [ %42, %41 ], [ %13, %20 ]
  %25 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %41, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br i1 %32, label %35, label %37

35:                                               ; preds = %28
  %36 = add i32 %34, -1
  store i32 %36, i32* %33, align 4
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %36, %35 ], [ %34, %28 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #12
  br label %41

41:                                               ; preds = %40, %37, %23
  %42 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 1
  %43 = icmp eq %"class.WTF::String"* %42, %22
  br i1 %43, label %44, label %23

44:                                               ; preds = %41
  store i32 0, i32* %17, align 4
  %45 = bitcast %"class.WTF::Vector.578"* %3 to i8**
  %46 = load i8*, i8** %45, align 8
  br label %47

47:                                               ; preds = %44, %15
  %48 = phi i8* [ %46, %44 ], [ %16, %15 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %48) #12
  store %"class.WTF::String"* null, %"class.WTF::String"** %12, align 8
  br label %49

49:                                               ; preds = %2, %47
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo9StructPtrIN7network5mojom5blink15CSPTrustedTypesEEC2IJN3WTF6VectorINS7_6StringELj0ENS7_18PartitionAllocatorEEEbbEEEN4base10in_place_tEDpOT_(%"class.mojo::StructPtr.583"*, %"class.WTF::Vector.578"* dereferenceable(16), i8* dereferenceable(1), i8* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::Vector.578", align 8
  %6 = tail call i8* @_Znwm(i64 24) #13
  %7 = bitcast i8* %6 to %"class.network::mojom::blink::CSPTrustedTypes"*
  %8 = getelementptr inbounds %"class.WTF::Vector.578", %"class.WTF::Vector.578"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::Vector.578", %"class.WTF::Vector.578"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = bitcast %"class.WTF::Vector.578"* %1 to i64*
  %11 = bitcast %"class.WTF::Vector.578"* %5 to i64*
  store i64 0, i64* %11, align 8
  %12 = load i64, i64* %10, align 8
  %13 = bitcast %"class.WTF::Vector.578"* %5 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector.578", %"class.WTF::Vector.578"* %1, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 4
  store i32 %15, i32* %8, align 8
  store i32 0, i32* %14, align 4
  %16 = getelementptr inbounds %"class.WTF::Vector.578", %"class.WTF::Vector.578"* %1, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  store i32 %17, i32* %9, align 4
  store i32 0, i32* %16, align 4
  %18 = load i8, i8* %2, align 1, !range !2
  %19 = icmp ne i8 %18, 0
  %20 = load i8, i8* %3, align 1, !range !2
  %21 = icmp ne i8 %20, 0
  call void @_ZN7network5mojom5blink15CSPTrustedTypesC1EN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEEbb(%"class.network::mojom::blink::CSPTrustedTypes"* nonnull %7, %"class.WTF::Vector.578"* nonnull %5, i1 zeroext %19, i1 zeroext %21) #12
  %22 = ptrtoint i8* %6 to i64
  %23 = bitcast %"class.mojo::StructPtr.583"* %0 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.WTF::Vector.578", %"class.WTF::Vector.578"* %5, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::String"*, %"class.WTF::String"** %24, align 8
  %26 = icmp eq %"class.WTF::String"* %25, null
  br i1 %26, label %60, label %27, !prof !7

27:                                               ; preds = %4
  %28 = bitcast %"class.WTF::String"* %25 to i8*
  %29 = load i32, i32* %9, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %58, label %31, !prof !3

31:                                               ; preds = %27
  %32 = zext i32 %29 to i64
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %25, i64 %32
  br label %34

34:                                               ; preds = %52, %31
  %35 = phi %"class.WTF::String"* [ %53, %52 ], [ %25, %31 ]
  %36 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #12
  br label %52

52:                                               ; preds = %51, %48, %34
  %53 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 1
  %54 = icmp eq %"class.WTF::String"* %53, %33
  br i1 %54, label %55, label %34

55:                                               ; preds = %52
  store i32 0, i32* %9, align 4
  %56 = bitcast %"class.WTF::Vector.578"* %5 to i8**
  %57 = load i8*, i8** %56, align 8
  br label %58

58:                                               ; preds = %55, %27
  %59 = phi i8* [ %57, %55 ], [ %28, %27 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %59) #12
  store %"class.WTF::String"* null, %"class.WTF::String"** %24, align 8
  br label %60

60:                                               ; preds = %4, %58
  ret void
}

declare void @_ZN7network5mojom5blink15CSPTrustedTypesC1EN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEEbb(%"class.network::mojom::blink::CSPTrustedTypes"*, %"class.WTF::Vector.578"*, i1 zeroext, i1 zeroext) unnamed_addr #1

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) local_unnamed_addr #1

declare void @_ZN5blink14WorkerSettingsC1EPNS_8SettingsE(%"class.blink::WorkerSettings"*, %"class.blink::Settings"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25GenericFontFamilySettingsD2Ev(%"class.blink::GenericFontFamilySettings"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::GenericFontFamilySettings", %"class.blink::GenericFontFamilySettings"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %3 = load %"class.WTF::Vector.2479"*, %"class.WTF::Vector.2479"** %2, align 8
  store %"class.WTF::Vector.2479"* null, %"class.WTF::Vector.2479"** %2, align 8
  %4 = icmp eq %"class.WTF::Vector.2479"* %3, null
  br i1 %4, label %56, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::Vector.2479", %"class.WTF::Vector.2479"* %3, i64 -1, i32 0, i32 0, i32 1
  %7 = bitcast i32* %6 to i8*
  %8 = bitcast i32* %6 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.WTF::Vector.2479", %"class.WTF::Vector.2479"* %3, i64 %9
  br label %13

13:                                               ; preds = %53, %11
  %14 = phi %"class.WTF::Vector.2479"* [ %15, %53 ], [ %12, %11 ]
  %15 = getelementptr inbounds %"class.WTF::Vector.2479", %"class.WTF::Vector.2479"* %14, i64 -1
  %16 = getelementptr inbounds %"class.WTF::Vector.2479", %"class.WTF::Vector.2479"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %"struct.std::__1::pair.2764"*, %"struct.std::__1::pair.2764"** %16, align 8
  %18 = icmp eq %"struct.std::__1::pair.2764"* %17, null
  br i1 %18, label %53, label %19, !prof !7

19:                                               ; preds = %13
  %20 = bitcast %"struct.std::__1::pair.2764"* %17 to i8*
  %21 = getelementptr inbounds %"class.WTF::Vector.2479", %"class.WTF::Vector.2479"* %14, i64 -1, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %51, label %24, !prof !3

24:                                               ; preds = %19
  %25 = zext i32 %22 to i64
  %26 = getelementptr inbounds %"struct.std::__1::pair.2764", %"struct.std::__1::pair.2764"* %17, i64 %25
  br label %27

27:                                               ; preds = %45, %24
  %28 = phi %"struct.std::__1::pair.2764"* [ %46, %45 ], [ %17, %24 ]
  %29 = getelementptr inbounds %"struct.std::__1::pair.2764", %"struct.std::__1::pair.2764"* %28, i64 0, i32 1, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %41

39:                                               ; preds = %32
  %40 = add i32 %38, -1
  store i32 %40, i32* %37, align 4
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi i32 [ %40, %39 ], [ %38, %32 ]
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #12
  br label %45

45:                                               ; preds = %44, %41, %27
  %46 = getelementptr inbounds %"struct.std::__1::pair.2764", %"struct.std::__1::pair.2764"* %28, i64 1
  %47 = icmp eq %"struct.std::__1::pair.2764"* %46, %26
  br i1 %47, label %48, label %27

48:                                               ; preds = %45
  store i32 0, i32* %21, align 4
  %49 = bitcast %"class.WTF::Vector.2479"* %15 to i8**
  %50 = load i8*, i8** %49, align 8
  br label %51

51:                                               ; preds = %48, %19
  %52 = phi i8* [ %50, %48 ], [ %20, %19 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %52) #12
  store %"struct.std::__1::pair.2764"* null, %"struct.std::__1::pair.2764"** %16, align 8
  br label %53

53:                                               ; preds = %51, %13
  %54 = icmp eq %"class.WTF::Vector.2479"* %15, %3
  br i1 %54, label %55, label %13

55:                                               ; preds = %53, %5
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %7) #12
  br label %56

56:                                               ; preds = %1, %55
  %57 = getelementptr inbounds %"class.blink::GenericFontFamilySettings", %"class.blink::GenericFontFamilySettings"* %0, i64 0, i32 6, i32 0, i32 0
  %58 = load %"struct.WTF::KeyValuePair.2475"*, %"struct.WTF::KeyValuePair.2475"** %57, align 8
  %59 = icmp eq %"struct.WTF::KeyValuePair.2475"* %58, null
  br i1 %59, label %93, label %60, !prof !7

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.blink::GenericFontFamilySettings", %"class.blink::GenericFontFamilySettings"* %0, i64 0, i32 6, i32 0, i32 1
  %62 = load i32, i32* %61, align 8
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %91, label %64

64:                                               ; preds = %60
  %65 = zext i32 %62 to i64
  br label %66

66:                                               ; preds = %88, %64
  %67 = phi i64 [ 0, %64 ], [ %89, %88 ]
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.2475", %"struct.WTF::KeyValuePair.2475"* %58, i64 %67, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %69, -3
  br i1 %70, label %88, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.2475", %"struct.WTF::KeyValuePair.2475"* %58, i64 %67, i32 1, i32 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #12
  br label %88

88:                                               ; preds = %87, %84, %71, %66
  %89 = add nuw nsw i64 %67, 1
  %90 = icmp eq i64 %89, %65
  br i1 %90, label %91, label %66

91:                                               ; preds = %88, %60
  %92 = bitcast %"struct.WTF::KeyValuePair.2475"* %58 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %92) #12
  store %"struct.WTF::KeyValuePair.2475"* null, %"struct.WTF::KeyValuePair.2475"** %57, align 8
  br label %93

93:                                               ; preds = %56, %91
  %94 = getelementptr inbounds %"class.blink::GenericFontFamilySettings", %"class.blink::GenericFontFamilySettings"* %0, i64 0, i32 5, i32 0, i32 0
  %95 = load %"struct.WTF::KeyValuePair.2475"*, %"struct.WTF::KeyValuePair.2475"** %94, align 8
  %96 = icmp eq %"struct.WTF::KeyValuePair.2475"* %95, null
  br i1 %96, label %130, label %97, !prof !7

97:                                               ; preds = %93
  %98 = getelementptr inbounds %"class.blink::GenericFontFamilySettings", %"class.blink::GenericFontFamilySettings"* %0, i64 0, i32 5, i32 0, i32 1
  %99 = load i32, i32* %98, align 8
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %128, label %101

101:                                              ; preds = %97
  %102 = zext i32 %99 to i64
  br label %103

103:                                              ; preds = %125, %101
  %104 = phi i64 [ 0, %101 ], [ %126, %125 ]
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair.2475", %"struct.WTF::KeyValuePair.2475"* %95, i64 %104, i32 0
  %106 = load i32, i32* %105, align 4
  %107 = icmp eq i32 %106, -3
  br i1 %107, label %125, label %108

108:                                              ; preds = %103
  %109 = getelementptr inbounds %"struct.WTF::KeyValuePair.2475", %"struct.WTF::KeyValuePair.2475"* %95, i64 %104, i32 1, i32 0, i32 0, i32 0
  %110 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %109, align 8
  %111 = icmp eq %"class.WTF::StringImpl"* %110, null
  br i1 %111, label %125, label %112

112:                                              ; preds = %108
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load atomic i32, i32* %113 monotonic, align 4
  %115 = and i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 0
  %118 = load i32, i32* %117, align 4
  br i1 %116, label %119, label %121

119:                                              ; preds = %112
  %120 = add i32 %118, -1
  store i32 %120, i32* %117, align 4
  br label %121

121:                                              ; preds = %119, %112
  %122 = phi i32 [ %120, %119 ], [ %118, %112 ]
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %125

124:                                              ; preds = %121
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %110) #12
  br label %125

125:                                              ; preds = %124, %121, %108, %103
  %126 = add nuw nsw i64 %104, 1
  %127 = icmp eq i64 %126, %102
  br i1 %127, label %128, label %103

128:                                              ; preds = %125, %97
  %129 = bitcast %"struct.WTF::KeyValuePair.2475"* %95 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %129) #12
  store %"struct.WTF::KeyValuePair.2475"* null, %"struct.WTF::KeyValuePair.2475"** %94, align 8
  br label %130

130:                                              ; preds = %93, %128
  %131 = getelementptr inbounds %"class.blink::GenericFontFamilySettings", %"class.blink::GenericFontFamilySettings"* %0, i64 0, i32 4, i32 0, i32 0
  %132 = load %"struct.WTF::KeyValuePair.2475"*, %"struct.WTF::KeyValuePair.2475"** %131, align 8
  %133 = icmp eq %"struct.WTF::KeyValuePair.2475"* %132, null
  br i1 %133, label %167, label %134, !prof !7

134:                                              ; preds = %130
  %135 = getelementptr inbounds %"class.blink::GenericFontFamilySettings", %"class.blink::GenericFontFamilySettings"* %0, i64 0, i32 4, i32 0, i32 1
  %136 = load i32, i32* %135, align 8
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %165, label %138

138:                                              ; preds = %134
  %139 = zext i32 %136 to i64
  br label %140

140:                                              ; preds = %162, %138
  %141 = phi i64 [ 0, %138 ], [ %163, %162 ]
  %142 = getelementptr inbounds %"struct.WTF::KeyValuePair.2475", %"struct.WTF::KeyValuePair.2475"* %132, i64 %141, i32 0
  %143 = load i32, i32* %142, align 4
  %144 = icmp eq i32 %143, -3
  br i1 %144, label %162, label %145

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"struct.WTF::KeyValuePair.2475", %"struct.WTF::KeyValuePair.2475"* %132, i64 %141, i32 1, i32 0, i32 0, i32 0
  %147 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %146, align 8
  %148 = icmp eq %"class.WTF::StringImpl"* %147, null
  br i1 %148, label %162, label %149

149:                                              ; preds = %145
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %147, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %151 = load atomic i32, i32* %150 monotonic, align 4
  %152 = and i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %147, i64 0, i32 0
  %155 = load i32, i32* %154, align 4
  br i1 %153, label %156, label %158

156:                                              ; preds = %149
  %157 = add i32 %155, -1
  store i32 %157, i32* %154, align 4
  br label %158

158:                                              ; preds = %156, %149
  %159 = phi i32 [ %157, %156 ], [ %155, %149 ]
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %162

161:                                              ; preds = %158
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %147) #12
  br label %162

162:                                              ; preds = %161, %158, %145, %140
  %163 = add nuw nsw i64 %141, 1
  %164 = icmp eq i64 %163, %139
  br i1 %164, label %165, label %140

165:                                              ; preds = %162, %134
  %166 = bitcast %"struct.WTF::KeyValuePair.2475"* %132 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %166) #12
  store %"struct.WTF::KeyValuePair.2475"* null, %"struct.WTF::KeyValuePair.2475"** %131, align 8
  br label %167

167:                                              ; preds = %130, %165
  %168 = getelementptr inbounds %"class.blink::GenericFontFamilySettings", %"class.blink::GenericFontFamilySettings"* %0, i64 0, i32 3, i32 0, i32 0
  %169 = load %"struct.WTF::KeyValuePair.2475"*, %"struct.WTF::KeyValuePair.2475"** %168, align 8
  %170 = icmp eq %"struct.WTF::KeyValuePair.2475"* %169, null
  br i1 %170, label %204, label %171, !prof !7

171:                                              ; preds = %167
  %172 = getelementptr inbounds %"class.blink::GenericFontFamilySettings", %"class.blink::GenericFontFamilySettings"* %0, i64 0, i32 3, i32 0, i32 1
  %173 = load i32, i32* %172, align 8
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %202, label %175

175:                                              ; preds = %171
  %176 = zext i32 %173 to i64
  br label %177

177:                                              ; preds = %199, %175
  %178 = phi i64 [ 0, %175 ], [ %200, %199 ]
  %179 = getelementptr inbounds %"struct.WTF::KeyValuePair.2475", %"struct.WTF::KeyValuePair.2475"* %169, i64 %178, i32 0
  %180 = load i32, i32* %179, align 4
  %181 = icmp eq i32 %180, -3
  br i1 %181, label %199, label %182

182:                                              ; preds = %177
  %183 = getelementptr inbounds %"struct.WTF::KeyValuePair.2475", %"struct.WTF::KeyValuePair.2475"* %169, i64 %178, i32 1, i32 0, i32 0, i32 0
  %184 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %183, align 8
  %185 = icmp eq %"class.WTF::StringImpl"* %184, null
  br i1 %185, label %199, label %186

186:                                              ; preds = %182
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %184, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %188 = load atomic i32, i32* %187 monotonic, align 4
  %189 = and i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %184, i64 0, i32 0
  %192 = load i32, i32* %191, align 4
  br i1 %190, label %193, label %195

193:                                              ; preds = %186
  %194 = add i32 %192, -1
  store i32 %194, i32* %191, align 4
  br label %195

195:                                              ; preds = %193, %186
  %196 = phi i32 [ %194, %193 ], [ %192, %186 ]
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %198, label %199

198:                                              ; preds = %195
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %184) #12
  br label %199

199:                                              ; preds = %198, %195, %182, %177
  %200 = add nuw nsw i64 %178, 1
  %201 = icmp eq i64 %200, %176
  br i1 %201, label %202, label %177

202:                                              ; preds = %199, %171
  %203 = bitcast %"struct.WTF::KeyValuePair.2475"* %169 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %203) #12
  store %"struct.WTF::KeyValuePair.2475"* null, %"struct.WTF::KeyValuePair.2475"** %168, align 8
  br label %204

204:                                              ; preds = %167, %202
  %205 = getelementptr inbounds %"class.blink::GenericFontFamilySettings", %"class.blink::GenericFontFamilySettings"* %0, i64 0, i32 2, i32 0, i32 0
  %206 = load %"struct.WTF::KeyValuePair.2475"*, %"struct.WTF::KeyValuePair.2475"** %205, align 8
  %207 = icmp eq %"struct.WTF::KeyValuePair.2475"* %206, null
  br i1 %207, label %241, label %208, !prof !7

208:                                              ; preds = %204
  %209 = getelementptr inbounds %"class.blink::GenericFontFamilySettings", %"class.blink::GenericFontFamilySettings"* %0, i64 0, i32 2, i32 0, i32 1
  %210 = load i32, i32* %209, align 8
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %239, label %212

212:                                              ; preds = %208
  %213 = zext i32 %210 to i64
  br label %214

214:                                              ; preds = %236, %212
  %215 = phi i64 [ 0, %212 ], [ %237, %236 ]
  %216 = getelementptr inbounds %"struct.WTF::KeyValuePair.2475", %"struct.WTF::KeyValuePair.2475"* %206, i64 %215, i32 0
  %217 = load i32, i32* %216, align 4
  %218 = icmp eq i32 %217, -3
  br i1 %218, label %236, label %219

219:                                              ; preds = %214
  %220 = getelementptr inbounds %"struct.WTF::KeyValuePair.2475", %"struct.WTF::KeyValuePair.2475"* %206, i64 %215, i32 1, i32 0, i32 0, i32 0
  %221 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %220, align 8
  %222 = icmp eq %"class.WTF::StringImpl"* %221, null
  br i1 %222, label %236, label %223

223:                                              ; preds = %219
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %225 = load atomic i32, i32* %224 monotonic, align 4
  %226 = and i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 0
  %229 = load i32, i32* %228, align 4
  br i1 %227, label %230, label %232

230:                                              ; preds = %223
  %231 = add i32 %229, -1
  store i32 %231, i32* %228, align 4
  br label %232

232:                                              ; preds = %230, %223
  %233 = phi i32 [ %231, %230 ], [ %229, %223 ]
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %235, label %236

235:                                              ; preds = %232
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %221) #12
  br label %236

236:                                              ; preds = %235, %232, %219, %214
  %237 = add nuw nsw i64 %215, 1
  %238 = icmp eq i64 %237, %213
  br i1 %238, label %239, label %214

239:                                              ; preds = %236, %208
  %240 = bitcast %"struct.WTF::KeyValuePair.2475"* %206 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %240) #12
  store %"struct.WTF::KeyValuePair.2475"* null, %"struct.WTF::KeyValuePair.2475"** %205, align 8
  br label %241

241:                                              ; preds = %204, %239
  %242 = getelementptr inbounds %"class.blink::GenericFontFamilySettings", %"class.blink::GenericFontFamilySettings"* %0, i64 0, i32 1, i32 0, i32 0
  %243 = load %"struct.WTF::KeyValuePair.2475"*, %"struct.WTF::KeyValuePair.2475"** %242, align 8
  %244 = icmp eq %"struct.WTF::KeyValuePair.2475"* %243, null
  br i1 %244, label %278, label %245, !prof !7

245:                                              ; preds = %241
  %246 = getelementptr inbounds %"class.blink::GenericFontFamilySettings", %"class.blink::GenericFontFamilySettings"* %0, i64 0, i32 1, i32 0, i32 1
  %247 = load i32, i32* %246, align 8
  %248 = icmp eq i32 %247, 0
  br i1 %248, label %276, label %249

249:                                              ; preds = %245
  %250 = zext i32 %247 to i64
  br label %251

251:                                              ; preds = %273, %249
  %252 = phi i64 [ 0, %249 ], [ %274, %273 ]
  %253 = getelementptr inbounds %"struct.WTF::KeyValuePair.2475", %"struct.WTF::KeyValuePair.2475"* %243, i64 %252, i32 0
  %254 = load i32, i32* %253, align 4
  %255 = icmp eq i32 %254, -3
  br i1 %255, label %273, label %256

256:                                              ; preds = %251
  %257 = getelementptr inbounds %"struct.WTF::KeyValuePair.2475", %"struct.WTF::KeyValuePair.2475"* %243, i64 %252, i32 1, i32 0, i32 0, i32 0
  %258 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %257, align 8
  %259 = icmp eq %"class.WTF::StringImpl"* %258, null
  br i1 %259, label %273, label %260

260:                                              ; preds = %256
  %261 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %258, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %262 = load atomic i32, i32* %261 monotonic, align 4
  %263 = and i32 %262, 2
  %264 = icmp eq i32 %263, 0
  %265 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %258, i64 0, i32 0
  %266 = load i32, i32* %265, align 4
  br i1 %264, label %267, label %269

267:                                              ; preds = %260
  %268 = add i32 %266, -1
  store i32 %268, i32* %265, align 4
  br label %269

269:                                              ; preds = %267, %260
  %270 = phi i32 [ %268, %267 ], [ %266, %260 ]
  %271 = icmp eq i32 %270, 0
  br i1 %271, label %272, label %273

272:                                              ; preds = %269
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %258) #12
  br label %273

273:                                              ; preds = %272, %269, %256, %251
  %274 = add nuw nsw i64 %252, 1
  %275 = icmp eq i64 %274, %250
  br i1 %275, label %276, label %251

276:                                              ; preds = %273, %245
  %277 = bitcast %"struct.WTF::KeyValuePair.2475"* %243 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %277) #12
  store %"struct.WTF::KeyValuePair.2475"* null, %"struct.WTF::KeyValuePair.2475"** %242, align 8
  br label %278

278:                                              ; preds = %241, %276
  %279 = getelementptr inbounds %"class.blink::GenericFontFamilySettings", %"class.blink::GenericFontFamilySettings"* %0, i64 0, i32 0, i32 0, i32 0
  %280 = load %"struct.WTF::KeyValuePair.2475"*, %"struct.WTF::KeyValuePair.2475"** %279, align 8
  %281 = icmp eq %"struct.WTF::KeyValuePair.2475"* %280, null
  br i1 %281, label %315, label %282, !prof !7

282:                                              ; preds = %278
  %283 = getelementptr inbounds %"class.blink::GenericFontFamilySettings", %"class.blink::GenericFontFamilySettings"* %0, i64 0, i32 0, i32 0, i32 1
  %284 = load i32, i32* %283, align 8
  %285 = icmp eq i32 %284, 0
  br i1 %285, label %313, label %286

286:                                              ; preds = %282
  %287 = zext i32 %284 to i64
  br label %288

288:                                              ; preds = %310, %286
  %289 = phi i64 [ 0, %286 ], [ %311, %310 ]
  %290 = getelementptr inbounds %"struct.WTF::KeyValuePair.2475", %"struct.WTF::KeyValuePair.2475"* %280, i64 %289, i32 0
  %291 = load i32, i32* %290, align 4
  %292 = icmp eq i32 %291, -3
  br i1 %292, label %310, label %293

293:                                              ; preds = %288
  %294 = getelementptr inbounds %"struct.WTF::KeyValuePair.2475", %"struct.WTF::KeyValuePair.2475"* %280, i64 %289, i32 1, i32 0, i32 0, i32 0
  %295 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %294, align 8
  %296 = icmp eq %"class.WTF::StringImpl"* %295, null
  br i1 %296, label %310, label %297

297:                                              ; preds = %293
  %298 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %295, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %299 = load atomic i32, i32* %298 monotonic, align 4
  %300 = and i32 %299, 2
  %301 = icmp eq i32 %300, 0
  %302 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %295, i64 0, i32 0
  %303 = load i32, i32* %302, align 4
  br i1 %301, label %304, label %306

304:                                              ; preds = %297
  %305 = add i32 %303, -1
  store i32 %305, i32* %302, align 4
  br label %306

306:                                              ; preds = %304, %297
  %307 = phi i32 [ %305, %304 ], [ %303, %297 ]
  %308 = icmp eq i32 %307, 0
  br i1 %308, label %309, label %310

309:                                              ; preds = %306
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %295) #12
  br label %310

310:                                              ; preds = %309, %306, %293, %288
  %311 = add nuw nsw i64 %289, 1
  %312 = icmp eq i64 %311, %287
  br i1 %312, label %313, label %288

313:                                              ; preds = %310, %282
  %314 = bitcast %"struct.WTF::KeyValuePair.2475"* %280 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %314) #12
  store %"struct.WTF::KeyValuePair.2475"* null, %"struct.WTF::KeyValuePair.2475"** %279, align 8
  br label %315

315:                                              ; preds = %278, %313
  ret void
}

declare void @_ZN5blink25GlobalScopeCreationParamsC1ERKNS_4KURLENS_5mojom10ScriptTypeERKN3WTF6StringES9_RKN4absl8optionalINS_17UserAgentMetadataEEE13scoped_refptrINS_21WebWorkerFetchContextEENS6_6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS6_18PartitionAllocatorEEENSN_14ReferrerPolicyEPKNS_14SecurityOriginEbNS_10HttpsStateEPNS_13WorkerClientsENSt3__110unique_ptrINS_24WebContentSettingsClientENS10_14default_deleteIS12_EEEENSB_INSN_14IPAddressSpaceEEEPKNSJ_IS7_Lj0ESR_EERKN4base16UnguessableTokenENS11_INS_14WorkerSettingsENS13_IS1F_EEEENS4_14V8CacheOptionsEPNS_25WorkletModuleResponsesMapENSK_13PendingRemoteINS4_5blink22BrowserInterfaceBrokerEEENS_24BeginFrameProviderParamsEPKNS_17PermissionsPolicyES1C_lRKNSB_INS_10MultiTokenIN4util9TokenTypeINS_25LocalFrameTokenTypeMarkerEEENS1V_INS_30DedicatedWorkerTokenTypeMarkerEEEJNS1V_INS_28ServiceWorkerTokenTypeMarkerEEENS1V_INS_27SharedWorkerTokenTypeMarkerEEENS1V_INS_31AnimationWorkletTokenTypeMarkerEEENS1V_INS_27AudioWorkletTokenTypeMarkerEEENS1V_INS_28LayoutWorkletTokenTypeMarkerEEENS1V_INS_27PaintWorkletTokenTypeMarkerEEEEEEEEbb(%"struct.blink::GlobalScopeCreationParams"*, %"class.blink::KURL"* dereferenceable(112), i32, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.absl::optional.2500"* dereferenceable(160), i64, %"class.WTF::Vector.554"*, i32, %"class.blink::SecurityOrigin"*, i1 zeroext, i32, %"class.blink::WorkerClients"*, i64, i64, %"class.WTF::Vector.578"*, %"class.base::UnguessableToken"* dereferenceable(16), i64, i32, %"class.blink::WorkletModuleResponsesMap"*, %"class.mojo::PendingRemote.2488"*, %"struct.blink::BeginFrameProviderParams"*, %"class.blink::PermissionsPolicy"*, %"class.base::UnguessableToken"* byval(%"class.base::UnguessableToken") align 8, i64, %"class.absl::optional.2489"* dereferenceable(32), i1 zeroext, i1 zeroext) unnamed_addr #1

declare void @_ZN4mojo8internal18PendingRemoteStateC1Ev(%"struct.mojo::internal::PendingRemoteState"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"*) unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNK5blink14LocalDOMWindow24GetExecutionContextTokenEv: argument 0"}
!6 = distinct !{!6, !"_ZNK5blink14LocalDOMWindow24GetExecutionContextTokenEv"}
!7 = !{!"branch_weights", i32 2000, i32 1}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK4mojo10NullRemotecvNS_13PendingRemoteIT_EEIN5blink5mojom5blink22BrowserInterfaceBrokerEEEv: argument 0"}
!10 = distinct !{!10, !"_ZNK4mojo10NullRemotecvNS_13PendingRemoteIT_EEIN5blink5mojom5blink22BrowserInterfaceBrokerEEEv"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN5blink33WrapCrossThreadPersistentInternalINS_28WorkerResourceTimingNotifierEEENS_21CrossThreadPersistentIT_EEPS3_: argument 0"}
!13 = distinct !{!13, !"_ZN5blink33WrapCrossThreadPersistentInternalINS_28WorkerResourceTimingNotifierEEENS_21CrossThreadPersistentIT_EEPS3_"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN5blink33WrapCrossThreadPersistentInternalINS_19WorkletPendingTasksEEENS_21CrossThreadPersistentIT_EEPS3_: argument 0"}
!16 = distinct !{!16, !"_ZN5blink33WrapCrossThreadPersistentInternalINS_19WorkletPendingTasksEEENS_21CrossThreadPersistentIT_EEPS3_"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE: argument 0"}
!19 = distinct !{!19, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN3WTF28CrossThreadCopierPassThroughIN5blink21CrossThreadPersistentINS1_28WorkerResourceTimingNotifierEEEE4CopyERKS4_: argument 0"}
!22 = distinct !{!22, !"_ZN3WTF28CrossThreadCopierPassThroughIN5blink21CrossThreadPersistentINS1_28WorkerResourceTimingNotifierEEEE4CopyERKS4_"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZN3WTF28CrossThreadCopierPassThroughIN5blink21CrossThreadPersistentINS1_19WorkletPendingTasksEEEE4CopyERKS4_: argument 0"}
!25 = distinct !{!25, !"_ZN3WTF28CrossThreadCopierPassThroughIN5blink21CrossThreadPersistentINS1_19WorkletPendingTasksEEEE4CopyERKS4_"}
!26 = !{!27, !29}
!27 = distinct !{!27, !28, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink26ThreadedWorkletObjectProxyEFvRKNS3_4KURLEN7network5mojom15CredentialsModeENSt3__110unique_ptrINS3_40CrossThreadFetchClientSettingsObjectDataENSB_14default_deleteISD_EEEEPNS3_28WorkerResourceTimingNotifierE13scoped_refptrINS_22SingleThreadTaskRunnerEEPNS3_19WorkletPendingTasksEPNS3_12WorkerThreadEEJN3WTF28CrossThreadUnretainedWrapperIS4_EES5_SA_SG_NS3_21CrossThreadPersistentISH_EESL_NSV_ISM_EENST_ISO_EEEEEDcOT0_DpOT1_: argument 0"}
!28 = distinct !{!28, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink26ThreadedWorkletObjectProxyEFvRKNS3_4KURLEN7network5mojom15CredentialsModeENSt3__110unique_ptrINS3_40CrossThreadFetchClientSettingsObjectDataENSB_14default_deleteISD_EEEEPNS3_28WorkerResourceTimingNotifierE13scoped_refptrINS_22SingleThreadTaskRunnerEEPNS3_19WorkletPendingTasksEPNS3_12WorkerThreadEEJN3WTF28CrossThreadUnretainedWrapperIS4_EES5_SA_SG_NS3_21CrossThreadPersistentISH_EESL_NSV_ISM_EENST_ISO_EEEEEDcOT0_DpOT1_"}
!29 = distinct !{!29, !30, !"_ZN4base8BindOnceIMN5blink26ThreadedWorkletObjectProxyEFvRKNS1_4KURLEN7network5mojom15CredentialsModeENSt3__110unique_ptrINS1_40CrossThreadFetchClientSettingsObjectDataENS9_14default_deleteISB_EEEEPNS1_28WorkerResourceTimingNotifierE13scoped_refptrINS_22SingleThreadTaskRunnerEEPNS1_19WorkletPendingTasksEPNS1_12WorkerThreadEEJN3WTF28CrossThreadUnretainedWrapperIS2_EES3_S8_SE_NS1_21CrossThreadPersistentISF_EESJ_NST_ISK_EENSR_ISM_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS10_DpOS11_: argument 0"}
!30 = distinct !{!30, !"_ZN4base8BindOnceIMN5blink26ThreadedWorkletObjectProxyEFvRKNS1_4KURLEN7network5mojom15CredentialsModeENSt3__110unique_ptrINS1_40CrossThreadFetchClientSettingsObjectDataENS9_14default_deleteISB_EEEEPNS1_28WorkerResourceTimingNotifierE13scoped_refptrINS_22SingleThreadTaskRunnerEEPNS1_19WorkletPendingTasksEPNS1_12WorkerThreadEEJN3WTF28CrossThreadUnretainedWrapperIS2_EES3_S8_SE_NS1_21CrossThreadPersistentISF_EESJ_NST_ISK_EENSR_ISM_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS10_DpOS11_"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE: argument 0"}
!33 = distinct !{!33, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE"}
!34 = !{!35, !37, !39}
!35 = distinct !{!35, !36, !"_ZNK4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEE5CloneEv: argument 0"}
!36 = distinct !{!36, !"_ZNK4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEE5CloneEv"}
!37 = distinct !{!37, !38, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELb1EE5CloneERKS6_: argument 0"}
!38 = distinct !{!38, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELb1EE5CloneERKS6_"}
!39 = distinct !{!39, !40, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEET_RKS7_: argument 0"}
!40 = distinct !{!40, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEET_RKS7_"}
!41 = distinct !{!41, !42}
!42 = !{!"llvm.loop.unroll.disable"}
!43 = distinct !{!43, !42}
!44 = !{!45, !47, !49}
!45 = distinct !{!45, !46, !"_ZNK4mojo9StructPtrIN7network5mojom5blink9CSPSourceEE5CloneEv: argument 0"}
!46 = distinct !{!46, !"_ZNK4mojo9StructPtrIN7network5mojom5blink9CSPSourceEE5CloneEv"}
!47 = distinct !{!47, !48, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink9CSPSourceEEELb1EE5CloneERKS6_: argument 0"}
!48 = distinct !{!48, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink9CSPSourceEEELb1EE5CloneERKS6_"}
!49 = distinct !{!49, !50, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink9CSPSourceEEEEET_RKS7_: argument 0"}
!50 = distinct !{!50, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink9CSPSourceEEEEET_RKS7_"}
!51 = !{!52, !54, !56}
!52 = distinct !{!52, !53, !"_ZNK4mojo16InlinedStructPtrIN7network5mojom5blink27ContentSecurityPolicyHeaderEE5CloneEv: argument 0"}
!53 = distinct !{!53, !"_ZNK4mojo16InlinedStructPtrIN7network5mojom5blink27ContentSecurityPolicyHeaderEE5CloneEv"}
!54 = distinct !{!54, !55, !"_ZN4mojo11CloneTraitsINS_16InlinedStructPtrIN7network5mojom5blink27ContentSecurityPolicyHeaderEEELb1EE5CloneERKS6_: argument 0"}
!55 = distinct !{!55, !"_ZN4mojo11CloneTraitsINS_16InlinedStructPtrIN7network5mojom5blink27ContentSecurityPolicyHeaderEEELb1EE5CloneERKS6_"}
!56 = distinct !{!56, !57, !"_ZN4mojo5CloneINS_16InlinedStructPtrIN7network5mojom5blink27ContentSecurityPolicyHeaderEEEEET_RKS7_: argument 0"}
!57 = distinct !{!57, !"_ZN4mojo5CloneINS_16InlinedStructPtrIN7network5mojom5blink27ContentSecurityPolicyHeaderEEEEET_RKS7_"}
!58 = !{!59}
!59 = distinct !{!59, !60, !"_ZNK7network5mojom5blink27ContentSecurityPolicyHeader5CloneIN4mojo16InlinedStructPtrIS2_EEEES6_v: argument 0"}
!60 = distinct !{!60, !"_ZNK7network5mojom5blink27ContentSecurityPolicyHeader5CloneIN4mojo16InlinedStructPtrIS2_EEEES6_v"}
!61 = !{!62, !59}
!62 = distinct !{!62, !63, !"_ZN7network5mojom5blink27ContentSecurityPolicyHeader3NewIJN3WTF6StringENS0_25ContentSecurityPolicyTypeENS0_27ContentSecurityPolicySourceEEEEN4mojo16InlinedStructPtrIS2_EEDpOT_: argument 0"}
!63 = distinct !{!63, !"_ZN7network5mojom5blink27ContentSecurityPolicyHeader3NewIJN3WTF6StringENS0_25ContentSecurityPolicyTypeENS0_27ContentSecurityPolicySourceEEEEN4mojo16InlinedStructPtrIS2_EEDpOT_"}
!64 = !{!65, !67, !69}
!65 = distinct !{!65, !66, !"_ZNK4mojo9StructPtrIN7network5mojom5blink15CSPTrustedTypesEE5CloneEv: argument 0"}
!66 = distinct !{!66, !"_ZNK4mojo9StructPtrIN7network5mojom5blink15CSPTrustedTypesEE5CloneEv"}
!67 = distinct !{!67, !68, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink15CSPTrustedTypesEEELb1EE5CloneERKS6_: argument 0"}
!68 = distinct !{!68, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink15CSPTrustedTypesEEELb1EE5CloneERKS6_"}
!69 = distinct !{!69, !70, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink15CSPTrustedTypesEEEEET_RKS7_: argument 0"}
!70 = distinct !{!70, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink15CSPTrustedTypesEEEEET_RKS7_"}
!71 = !{!72}
!72 = distinct !{!72, !73, !"_ZN7network5mojom5blink9CSPSource3NewIJN3WTF6StringES5_iS5_bbEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!73 = distinct !{!73, !"_ZN7network5mojom5blink9CSPSource3NewIJN3WTF6StringES5_iS5_bbEEEN4mojo9StructPtrIS2_EEDpOT_"}
!74 = distinct !{!74, !42}
!75 = !{!76, !78, !80}
!76 = distinct !{!76, !77, !"_ZNK4mojo9StructPtrIN7network5mojom5blink13CSPSourceListEE5CloneEv: argument 0"}
!77 = distinct !{!77, !"_ZNK4mojo9StructPtrIN7network5mojom5blink13CSPSourceListEE5CloneEv"}
!78 = distinct !{!78, !79, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink13CSPSourceListEEELb1EE5CloneERKS6_: argument 0"}
!79 = distinct !{!79, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink13CSPSourceListEEELb1EE5CloneERKS6_"}
!80 = distinct !{!80, !81, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink13CSPSourceListEEEEET_RKS7_: argument 0"}
!81 = distinct !{!81, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink13CSPSourceListEEEEET_RKS7_"}
!82 = distinct !{!82, !42}
!83 = !{!84, !86, !88}
!84 = distinct !{!84, !85, !"_ZNK4mojo9StructPtrIN7network5mojom5blink9CSPSourceEE5CloneEv: argument 0"}
!85 = distinct !{!85, !"_ZNK4mojo9StructPtrIN7network5mojom5blink9CSPSourceEE5CloneEv"}
!86 = distinct !{!86, !87, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink9CSPSourceEEELb1EE5CloneERKS6_: argument 0"}
!87 = distinct !{!87, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink9CSPSourceEEELb1EE5CloneERKS6_"}
!88 = distinct !{!88, !89, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink9CSPSourceEEEEET_RKS7_: argument 0"}
!89 = distinct !{!89, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink9CSPSourceEEEEET_RKS7_"}
!90 = distinct !{!90, !42}
!91 = distinct !{!91, !42}
!92 = !{!93, !95, !97}
!93 = distinct !{!93, !94, !"_ZNK4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEE5CloneEv: argument 0"}
!94 = distinct !{!94, !"_ZNK4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEE5CloneEv"}
!95 = distinct !{!95, !96, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink13CSPHashSourceEEELb1EE5CloneERKS6_: argument 0"}
!96 = distinct !{!96, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink13CSPHashSourceEEELb1EE5CloneERKS6_"}
!97 = distinct !{!97, !98, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEET_RKS7_: argument 0"}
!98 = distinct !{!98, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEET_RKS7_"}
!99 = distinct !{!99, !42}
!100 = distinct !{!100, !42}
!101 = !{!102, !104}
!102 = distinct !{!102, !103, !"_ZN4mojo11CloneTraitsIN3WTF6VectorIhLj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKS4_: argument 0"}
!103 = distinct !{!103, !"_ZN4mojo11CloneTraitsIN3WTF6VectorIhLj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKS4_"}
!104 = distinct !{!104, !105, !"_ZN4mojo5CloneIN3WTF6VectorIhLj0ENS1_18PartitionAllocatorEEEEET_RKS5_: argument 0"}
!105 = distinct !{!105, !"_ZN4mojo5CloneIN3WTF6VectorIhLj0ENS1_18PartitionAllocatorEEEEET_RKS5_"}
!106 = !{!107}
!107 = distinct !{!107, !108, !"_ZN7network5mojom5blink13CSPHashSource3NewIJNS0_16CSPHashAlgorithmEN3WTF6VectorIhLj0ENS5_18PartitionAllocatorEEEEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!108 = distinct !{!108, !"_ZN7network5mojom5blink13CSPHashSource3NewIJNS0_16CSPHashAlgorithmEN3WTF6VectorIhLj0ENS5_18PartitionAllocatorEEEEEEN4mojo9StructPtrIS2_EEDpOT_"}
