; ModuleID = '../../third_party/dav1d/libdav1d/src/mem.c'
source_filename = "../../third_party/dav1d/libdav1d/src/mem.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.Dav1dMemPool = type { %union.pthread_mutex_t, %struct.Dav1dMemPoolBuffer*, i32, i32 }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.Dav1dMemPoolBuffer = type { i8*, %struct.Dav1dMemPoolBuffer* }
%union.pthread_mutexattr_t = type { i32 }

; Function Attrs: nounwind ssp uwtable
define hidden void @dav1d_mem_pool_push(%struct.Dav1dMemPool*, %struct.Dav1dMemPoolBuffer*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.Dav1dMemPool, %struct.Dav1dMemPool* %0, i64 0, i32 0
  %4 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %3) #5
  %5 = getelementptr inbounds %struct.Dav1dMemPool, %struct.Dav1dMemPool* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = add nsw i32 %6, -1
  store i32 %7, i32* %5, align 8
  %8 = getelementptr inbounds %struct.Dav1dMemPool, %struct.Dav1dMemPool* %0, i64 0, i32 3
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %19

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.Dav1dMemPool, %struct.Dav1dMemPool* %0, i64 0, i32 1
  %13 = bitcast %struct.Dav1dMemPoolBuffer** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %struct.Dav1dMemPoolBuffer, %struct.Dav1dMemPoolBuffer* %1, i64 0, i32 1
  %16 = bitcast %struct.Dav1dMemPoolBuffer** %15 to i64*
  store i64 %14, i64* %16, align 8
  store %struct.Dav1dMemPoolBuffer* %1, %struct.Dav1dMemPoolBuffer** %12, align 8
  %17 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %3) #5
  %18 = icmp sgt i32 %7, 0
  tail call void @llvm.assume(i1 %18)
  br label %27

19:                                               ; preds = %2
  %20 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %3) #5
  %21 = getelementptr inbounds %struct.Dav1dMemPoolBuffer, %struct.Dav1dMemPoolBuffer* %1, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  tail call void @free(i8* %22) #5
  %23 = icmp eq i32 %7, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = tail call i32 @pthread_mutex_destroy(%union.pthread_mutex_t* %3) #5
  %26 = bitcast %struct.Dav1dMemPool* %0 to i8*
  tail call void @free(i8* %26) #5
  br label %27

27:                                               ; preds = %19, %24, %11
  ret void
}

; Function Attrs: nounwind
declare i32 @pthread_mutex_lock(%union.pthread_mutex_t*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.Dav1dMemPoolBuffer* @dav1d_mem_pool_pop(%struct.Dav1dMemPool*, i64) local_unnamed_addr #0 {
  %3 = alloca i8*, align 8
  %4 = and i64 %1, 7
  %5 = icmp eq i64 %4, 0
  tail call void @llvm.assume(i1 %5)
  %6 = getelementptr inbounds %struct.Dav1dMemPool, %struct.Dav1dMemPool* %0, i64 0, i32 0
  %7 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %6) #5
  %8 = getelementptr inbounds %struct.Dav1dMemPool, %struct.Dav1dMemPool* %0, i64 0, i32 1
  %9 = load %struct.Dav1dMemPoolBuffer*, %struct.Dav1dMemPoolBuffer** %8, align 8
  %10 = getelementptr inbounds %struct.Dav1dMemPool, %struct.Dav1dMemPool* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = add nsw i32 %11, 1
  store i32 %12, i32* %10, align 8
  %13 = icmp eq %struct.Dav1dMemPoolBuffer* %9, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %struct.Dav1dMemPoolBuffer, %struct.Dav1dMemPoolBuffer* %9, i64 0, i32 1
  %16 = bitcast %struct.Dav1dMemPoolBuffer** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %struct.Dav1dMemPoolBuffer** %8 to i64*
  store i64 %17, i64* %18, align 8
  %19 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %6) #5
  %20 = getelementptr inbounds %struct.Dav1dMemPoolBuffer, %struct.Dav1dMemPoolBuffer* %9, i64 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = ptrtoint %struct.Dav1dMemPoolBuffer* %9 to i64
  %23 = ptrtoint i8* %21 to i64
  %24 = sub i64 %22, %23
  %25 = icmp eq i64 %24, %1
  br i1 %25, label %50, label %26

26:                                               ; preds = %14
  tail call void @free(i8* %21) #5
  br label %29

27:                                               ; preds = %2
  %28 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %6) #5
  br label %29

29:                                               ; preds = %27, %26
  %30 = add i64 %1, 16
  %31 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #5
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  %32 = call i32 @posix_memalign(i8** nonnull %3, i64 64, i64 %30) #5
  %33 = icmp ne i32 %32, 0
  %34 = load i8*, i8** %3, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #5
  %35 = icmp eq i8* %34, null
  %36 = or i1 %33, %35
  br i1 %36, label %37, label %46

37:                                               ; preds = %29
  %38 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %6) #5
  %39 = load i32, i32* %10, align 8
  %40 = add nsw i32 %39, -1
  store i32 %40, i32* %10, align 8
  %41 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %6) #5
  %42 = icmp eq i32 %40, 0
  br i1 %42, label %43, label %50

43:                                               ; preds = %37
  %44 = call i32 @pthread_mutex_destroy(%union.pthread_mutex_t* %6) #5
  %45 = bitcast %struct.Dav1dMemPool* %0 to i8*
  call void @free(i8* %45) #5
  br label %50

46:                                               ; preds = %29
  %47 = getelementptr inbounds i8, i8* %34, i64 %1
  %48 = bitcast i8* %47 to %struct.Dav1dMemPoolBuffer*
  %49 = bitcast i8* %47 to i8**
  store i8* %34, i8** %49, align 8
  br label %50

50:                                               ; preds = %46, %14, %43, %37
  %51 = phi %struct.Dav1dMemPoolBuffer* [ null, %37 ], [ null, %43 ], [ %48, %46 ], [ %9, %14 ]
  ret %struct.Dav1dMemPoolBuffer* %51
}

; Function Attrs: cold nounwind optsize ssp uwtable
define hidden i32 @dav1d_mem_pool_init(%struct.Dav1dMemPool** nocapture) local_unnamed_addr #3 {
  %2 = tail call noalias i8* @malloc(i64 56) #5
  %3 = bitcast i8* %2 to %struct.Dav1dMemPool*
  %4 = icmp eq i8* %2, null
  br i1 %4, label %17, label %5

5:                                                ; preds = %1
  %6 = bitcast i8* %2 to %union.pthread_mutex_t*
  %7 = tail call i32 @pthread_mutex_init(%union.pthread_mutex_t* nonnull %6, %union.pthread_mutexattr_t* null) #5
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %16

9:                                                ; preds = %5
  %10 = getelementptr inbounds i8, i8* %2, i64 40
  %11 = bitcast i8* %10 to %struct.Dav1dMemPoolBuffer**
  store %struct.Dav1dMemPoolBuffer* null, %struct.Dav1dMemPoolBuffer** %11, align 8
  %12 = getelementptr inbounds i8, i8* %2, i64 48
  %13 = bitcast i8* %12 to i32*
  store i32 1, i32* %13, align 8
  %14 = getelementptr inbounds i8, i8* %2, i64 52
  %15 = bitcast i8* %14 to i32*
  store i32 0, i32* %15, align 4
  br label %17

16:                                               ; preds = %5
  tail call void @free(i8* nonnull %2) #5
  br label %17

17:                                               ; preds = %16, %1, %9
  %18 = phi %struct.Dav1dMemPool* [ %3, %9 ], [ null, %1 ], [ null, %16 ]
  %19 = phi i32 [ 0, %9 ], [ -12, %1 ], [ -12, %16 ]
  store %struct.Dav1dMemPool* %18, %struct.Dav1dMemPool** %0, align 8
  ret i32 %19
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #4

; Function Attrs: nounwind
declare i32 @pthread_mutex_init(%union.pthread_mutex_t*, %union.pthread_mutexattr_t*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #1

; Function Attrs: cold nounwind optsize ssp uwtable
define hidden void @dav1d_mem_pool_end(%struct.Dav1dMemPool*) local_unnamed_addr #3 {
  %2 = icmp eq %struct.Dav1dMemPool* %0, null
  br i1 %2, label %26, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.Dav1dMemPool, %struct.Dav1dMemPool* %0, i64 0, i32 0
  %5 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %4) #5
  %6 = getelementptr inbounds %struct.Dav1dMemPool, %struct.Dav1dMemPool* %0, i64 0, i32 1
  %7 = load %struct.Dav1dMemPoolBuffer*, %struct.Dav1dMemPoolBuffer** %6, align 8
  %8 = getelementptr inbounds %struct.Dav1dMemPool, %struct.Dav1dMemPool* %0, i64 0, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = add nsw i32 %9, -1
  store i32 %10, i32* %8, align 8
  store %struct.Dav1dMemPoolBuffer* null, %struct.Dav1dMemPoolBuffer** %6, align 8
  %11 = getelementptr inbounds %struct.Dav1dMemPool, %struct.Dav1dMemPool* %0, i64 0, i32 3
  store i32 1, i32* %11, align 4
  %12 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %4) #5
  %13 = icmp eq %struct.Dav1dMemPoolBuffer* %7, null
  br i1 %13, label %21, label %14

14:                                               ; preds = %3, %14
  %15 = phi %struct.Dav1dMemPoolBuffer* [ %19, %14 ], [ %7, %3 ]
  %16 = getelementptr inbounds %struct.Dav1dMemPoolBuffer, %struct.Dav1dMemPoolBuffer* %15, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %struct.Dav1dMemPoolBuffer, %struct.Dav1dMemPoolBuffer* %15, i64 0, i32 1
  %19 = load %struct.Dav1dMemPoolBuffer*, %struct.Dav1dMemPoolBuffer** %18, align 8
  tail call void @free(i8* %17) #5
  %20 = icmp eq %struct.Dav1dMemPoolBuffer* %19, null
  br i1 %20, label %21, label %14

21:                                               ; preds = %14, %3
  %22 = icmp eq i32 %10, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %21
  %24 = tail call i32 @pthread_mutex_destroy(%union.pthread_mutex_t* %4) #5
  %25 = bitcast %struct.Dav1dMemPool* %0 to i8*
  tail call void @free(i8* %25) #5
  br label %26

26:                                               ; preds = %23, %21, %1
  ret void
}

; Function Attrs: nounwind
declare i32 @pthread_mutex_destroy(%union.pthread_mutex_t*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare i32 @posix_memalign(i8**, i64, i64) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @llvm.assume(i1) #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { cold nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
