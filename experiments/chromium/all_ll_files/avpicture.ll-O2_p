; ModuleID = '../../third_party/ffmpeg/libavcodec/avpicture.c'
source_filename = "../../third_party/ffmpeg/libavcodec/avpicture.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.AVPicture = type { [8 x i8*], [8 x i32] }

; Function Attrs: nounwind ssp uwtable
define hidden i32 @avpicture_fill(%struct.AVPicture*, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %6 = getelementptr inbounds %struct.AVPicture, %struct.AVPicture* %0, i64 0, i32 0, i64 0
  %7 = getelementptr inbounds %struct.AVPicture, %struct.AVPicture* %0, i64 0, i32 1, i64 0
  %8 = tail call i32 @av_image_fill_arrays(i8** %6, i32* %7, i8* %1, i32 %2, i32 %3, i32 %4, i32 1) #3
  ret i32 %8
}

declare i32 @av_image_fill_arrays(i8**, i32*, i8*, i32, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @avpicture_layout(%struct.AVPicture*, i32, i32, i32, i8*, i32) local_unnamed_addr #0 {
  %7 = getelementptr inbounds %struct.AVPicture, %struct.AVPicture* %0, i64 0, i32 0, i64 0
  %8 = getelementptr inbounds %struct.AVPicture, %struct.AVPicture* %0, i64 0, i32 1, i64 0
  %9 = tail call i32 @av_image_copy_to_buffer(i8* %4, i32 %5, i8** %7, i32* %8, i32 %1, i32 %2, i32 %3, i32 1) #3
  ret i32 %9
}

declare i32 @av_image_copy_to_buffer(i8*, i32, i8**, i32*, i32, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @avpicture_get_size(i32, i32, i32) local_unnamed_addr #0 {
  %4 = tail call i32 @av_image_get_buffer_size(i32 %0, i32 %1, i32 %2, i32 1) #3
  ret i32 %4
}

declare i32 @av_image_get_buffer_size(i32, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @avpicture_alloc(%struct.AVPicture*, i32, i32, i32) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.AVPicture, %struct.AVPicture* %0, i64 0, i32 0, i64 0
  %6 = getelementptr inbounds %struct.AVPicture, %struct.AVPicture* %0, i64 0, i32 1, i64 0
  %7 = tail call i32 @av_image_alloc(i8** %5, i32* %6, i32 %2, i32 %3, i32 %1, i32 1) #3
  %8 = icmp slt i32 %7, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %4
  %10 = bitcast %struct.AVPicture* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 96, i1 false)
  br label %11

11:                                               ; preds = %4, %9
  %12 = phi i32 [ %7, %9 ], [ 0, %4 ]
  ret i32 %12
}

declare i32 @av_image_alloc(i8**, i32*, i32, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @avpicture_free(%struct.AVPicture*) local_unnamed_addr #0 {
  %2 = bitcast %struct.AVPicture* %0 to i8*
  tail call void @av_freep(i8* %2) #3
  ret void
}

declare void @av_freep(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @av_picture_copy(%struct.AVPicture*, %struct.AVPicture*, i32, i32, i32) local_unnamed_addr #0 {
  %6 = getelementptr inbounds %struct.AVPicture, %struct.AVPicture* %0, i64 0, i32 0, i64 0
  %7 = getelementptr inbounds %struct.AVPicture, %struct.AVPicture* %0, i64 0, i32 1, i64 0
  %8 = getelementptr inbounds %struct.AVPicture, %struct.AVPicture* %1, i64 0, i32 0, i64 0
  %9 = getelementptr inbounds %struct.AVPicture, %struct.AVPicture* %1, i64 0, i32 1, i64 0
  tail call void @av_image_copy(i8** %6, i32* %7, i8** %8, i32* %9, i32 %2, i32 %3, i32 %4) #3
  ret void
}

declare void @av_image_copy(i8**, i32*, i8**, i32*, i32, i32, i32) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
