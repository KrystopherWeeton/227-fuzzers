; ModuleID = '../../third_party/blink/renderer/bindings/core/v8/window_proxy_manager.cc'
source_filename = "../../third_party/blink/renderer/bindings/core/v8/window_proxy_manager.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.134", %"class.std::__1::unique_ptr.134", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.144", %"class.std::__1::unique_ptr.150", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.162", %"class.std::__1::unique_ptr.168", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.175", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.15", %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.33", %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.60", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.95", %"class.std::__1::unique_ptr.118", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.blink::Worklist.49"* }
%"class.blink::Worklist.49" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.blink::Worklist.56"* }
%"class.blink::Worklist.56" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.blink::Worklist.63"* }
%"class.blink::Worklist.63" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.blink::Worklist.70"* }
%"class.blink::Worklist.70" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::Worklist.77"* }
%"class.blink::Worklist.77" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.blink::Worklist.84"* }
%"class.blink::Worklist.84" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.blink::Worklist.91"* }
%"class.blink::Worklist.91" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.98", %"class.std::__1::__compressed_pair.105", %"class.std::__1::__compressed_pair.110", %"class.std::__1::__compressed_pair.112", [4 x i8] }>
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100", %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { i64 }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { float }
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.121", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.134" = type { %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.142" }
%"class.WTF::VectorBuffer.142" = type { %"class.WTF::VectorBufferBase.143" }
%"class.WTF::VectorBufferBase.143" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.156" }
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.49"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.56"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.63"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.70"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.77"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.186" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.174 }
%class.scoped_refptr.174 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.175" = type { %"struct.std::__1::__atomic_base.176" }
%"struct.std::__1::__atomic_base.176" = type { %"struct.std::__1::__cxx_atomic_impl.177" }
%"struct.std::__1::__cxx_atomic_impl.177" = type { %"struct.std::__1::__cxx_atomic_base_impl.178" }
%"struct.std::__1::__cxx_atomic_base_impl.178" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.254" }
%"struct.std::__1::atomic.254" = type { %"struct.std::__1::__atomic_base.255" }
%"struct.std::__1::__atomic_base.255" = type { %"struct.std::__1::__atomic_base.256" }
%"struct.std::__1::__atomic_base.256" = type { %"struct.std::__1::__cxx_atomic_impl.257" }
%"struct.std::__1::__cxx_atomic_impl.257" = type { %"struct.std::__1::__cxx_atomic_base_impl.258" }
%"struct.std::__1::__cxx_atomic_base_impl.258" = type { i32 }
%"class.blink::WindowProxyManager" = type { %"class.v8::Isolate"*, %"class.blink::Member", i32, %"class.blink::Member.0", %"class.blink::HeapHashMap.179" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Frame"* }
%"class.blink::Member.0" = type { %"class.blink::MemberBase.1" }
%"class.blink::MemberBase.1" = type { %"class.blink::WindowProxy"* }
%"class.blink::WindowProxy" = type <{ i32 (...)**, %"class.v8::Isolate"*, %"class.blink::Member", %class.scoped_refptr, %"class.blink::TraceWrapperV8Reference", i32, [4 x i8] }>
%class.scoped_refptr = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.8" }
%"class.blink::MemberBase.8" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::HeapHashMap.179" = type { %"class.WTF::HashMap.182" }
%"class.WTF::HashMap.182" = type { %"class.WTF::HashTable.183" }
%"class.WTF::HashTable.183" = type <{ %"struct.WTF::KeyValuePair.185"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.185" = type { i32, %"class.blink::Member.0" }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.199", %"class.blink::Member.201", %"class.blink::Member.203", i8, i32, i8, i32, %"class.blink::Member.205", %"class.blink::Member.207", %"class.blink::FrameLifecycle", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.209", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.219", i8, %"class.base::UnguessableToken", %"class.absl::optional", %"class.absl::optional.227", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.193 }
%class.scoped_refptr.193 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.194" }
%"struct.std::__1::atomic.194" = type { %"struct.std::__1::__atomic_base.195" }
%"struct.std::__1::__atomic_base.195" = type { %"struct.std::__1::__atomic_base.196" }
%"struct.std::__1::__atomic_base.196" = type { %"struct.std::__1::__cxx_atomic_impl.197" }
%"struct.std::__1::__cxx_atomic_impl.197" = type { %"struct.std::__1::__cxx_atomic_base_impl.198" }
%"struct.std::__1::__cxx_atomic_base_impl.198" = type { i32 }
%"class.blink::Member.199" = type { %"class.blink::MemberBase.200" }
%"class.blink::MemberBase.200" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.201" = type { %"class.blink::MemberBase.202" }
%"class.blink::MemberBase.202" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.203" = type { %"class.blink::MemberBase.204" }
%"class.blink::MemberBase.204" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type opaque
%"class.blink::Member.205" = type { %"class.blink::MemberBase.206" }
%"class.blink::MemberBase.206" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.207" = type { %"class.blink::MemberBase.208" }
%"class.blink::MemberBase.208" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.209" = type { %"class.blink::MemberBase.210" }
%"class.blink::MemberBase.210" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.245", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.269", %"class.blink::FrameLoader", %"class.blink::Member.296", %"class.blink::Member.298", %"class.blink::Member.327", %"class.blink::Member.329", %"class.blink::Member.331", %"class.blink::Member.333", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.335", %class.scoped_refptr.337, %"class.blink::Member.338", %"class.blink::Member.340", %"class.blink::Member.342", %"class.blink::Member.344", %"class.blink::Member.346", %"class.blink::Member.348", %"class.blink::Member.350", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.354", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback", %"class.std::__1::unique_ptr.362", %"class.absl::optional.227", i32, [4 x i8], %"class.std::__1::unique_ptr.368", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.376", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.381", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.386", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.389", %"class.blink::Member.391", %"class.blink::Member.393", %"class.blink::Member.395", %"class.mojo::StructPtr", %"class.blink::Member.405", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.407", i8, [7 x i8] }>
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.238" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapHashMap.238" = type { %"class.WTF::HashMap.241" }
%"class.WTF::HashMap.241" = type { %"class.WTF::HashTable.242" }
%"class.WTF::HashTable.242" = type <{ %"struct.WTF::KeyValuePair.244"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.244" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.245" = type { %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.248", %"class.base::WeakPtrFactory" }
%"class.WTF::HashMap.248" = type { %"class.WTF::HashTable.249" }
%"class.WTF::HashTable.249" = type <{ %"struct.WTF::KeyValuePair.252"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.252" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.253 }
%class.scoped_refptr.253 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.254" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.259" }
%"struct.std::__1::atomic.259" = type { %"struct.std::__1::__atomic_base.260" }
%"struct.std::__1::__atomic_base.260" = type { %"struct.std::__1::__atomic_base.261" }
%"struct.std::__1::__atomic_base.261" = type { %"struct.std::__1::__cxx_atomic_impl.262" }
%"struct.std::__1::__cxx_atomic_impl.262" = type { %"struct.std::__1::__cxx_atomic_base_impl.263" }
%"struct.std::__1::__cxx_atomic_base_impl.263" = type { i8 }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.267" }
%"class.blink::Member.267" = type { %"class.blink::MemberBase.268" }
%"class.blink::MemberBase.268" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1297" }
%"class.blink::WeakMember.1297" = type { %"class.blink::MemberBase.1298" }
%"class.blink::MemberBase.1298" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.727" }
%"class.blink::HeapObserverSet.727" = type { i32, [4 x i8], %"class.blink::HeapHashSet.728" }
%"class.blink::HeapHashSet.728" = type { %"class.WTF::HashSet.731" }
%"class.WTF::HashSet.731" = type { %"class.WTF::HashTable.732" }
%"class.WTF::HashTable.732" = type <{ %"class.blink::WeakMember.734"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.734" = type opaque
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback.862", %"class.base::RepeatingCallback.1299", i64, %"class.std::__1::map.1300", i8*, i64, %"class.base::WeakPtrFactory.1309" }
%"class.base::RepeatingCallback.862" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.360 }
%class.scoped_refptr.360 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.361", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.361" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.1299" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.1300" = type { %"class.std::__1::__tree.1301" }
%"class.std::__1::__tree.1301" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1302", %"class.std::__1::__compressed_pair.1306" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1302" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"struct.std::__1::__compressed_pair_elem.756" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1306" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"class.base::WeakPtrFactory.1309" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.269" = type { %"class.WTF::HashSet.272" }
%"class.WTF::HashSet.272" = type { %"class.WTF::HashTable.273" }
%"class.WTF::HashTable.273" = type <{ %"class.blink::WeakMember.275"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.275" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.209", %"class.blink::Member.276", %"class.blink::Member.278", %"class.std::__1::unique_ptr.280", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.292" }
%"class.blink::Member.276" = type { %"class.blink::MemberBase.277" }
%"class.blink::MemberBase.277" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.278" = type { %"class.blink::MemberBase.279" }
%"class.blink::MemberBase.279" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.280" = type { %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.283" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"class.blink::KURL"* }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr.193 }
%"class.WTF::HashSet.292" = type { %"class.WTF::HashTable.293" }
%"class.WTF::HashTable.293" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.296" = type { %"class.blink::MemberBase.297" }
%"class.blink::MemberBase.297" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.945", %"class.blink::Member.209", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.950", i8, i32, %"class.blink::Color", %"class.absl::optional.952", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.957", %"class.blink::Member.959", %"class.blink::Member.959", %"class.std::__1::unique_ptr.962", i32, [4 x i8], %"class.WTF::HashSet.965", %"class.blink::Member.972", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.974", %"class.blink::HeapHashSet.981", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.989", i8, %"class.blink::Member.995", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1007", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1021", i8, %"class.std::__1::unique_ptr.1027", %"class.std::__1::unique_ptr.1144", %"class.WTF::Vector.1150", i32, %class.scoped_refptr.1155, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1156", %"class.blink::Member.1158", %"class.blink::Member.1160", %"class.blink::HeapHashSet.1162", %"class.blink::HeapHashSet.1169", %"class.std::__1::unique_ptr.1176", %"class.std::__1::unique_ptr.1183", %"class.WTF::Vector.465" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.945" = type { %"class.WTF::HashTable.946" }
%"class.WTF::HashTable.946" = type <{ %class.scoped_refptr.949*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.949 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.950" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.951", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.498, %"class.base::WeakPtrFactory.500" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.498 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.499" }>
%"class.base::RefCountedThreadSafe.499" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory.500" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.951" = type { %"class.blink::MemberBase.297" }
%"class.blink::Color" = type { i32 }
%"class.absl::optional.952" = type { %"class.absl::optional_internal::optional_data.953" }
%"class.absl::optional_internal::optional_data.953" = type { %"class.absl::optional_internal::optional_data_base.954" }
%"class.absl::optional_internal::optional_data_base.954" = type { %"class.absl::optional_internal::optional_data_dtor_base.955" }
%"class.absl::optional_internal::optional_data_dtor_base.955" = type { i8, %union.anon.956 }
%union.anon.956 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.957" = type { %"class.blink::MemberBase.958" }
%"class.blink::MemberBase.958" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::HeapHashSet.961"* }
%"class.blink::HeapHashSet.961" = type opaque
%"class.std::__1::unique_ptr.962" = type { %"class.std::__1::__compressed_pair.963" }
%"class.std::__1::__compressed_pair.963" = type { %"struct.std::__1::__compressed_pair_elem.964" }
%"struct.std::__1::__compressed_pair_elem.964" = type { %"class.WTF::HashSet.965"* }
%"class.WTF::HashSet.965" = type { %"class.WTF::HashTable.966" }
%"class.WTF::HashTable.966" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.972" = type { %"class.blink::MemberBase.973" }
%"class.blink::MemberBase.973" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.974" = type { %"class.WTF::HashSet.977" }
%"class.WTF::HashSet.977" = type { %"class.WTF::HashTable.978" }
%"class.WTF::HashTable.978" = type <{ %"class.blink::Member.980"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.980" = type opaque
%"class.blink::HeapHashSet.981" = type { %"class.WTF::HashSet.984" }
%"class.WTF::HashSet.984" = type { %"class.WTF::HashTable.985" }
%"class.WTF::HashTable.985" = type <{ %"class.blink::Member.987"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.987" = type { %"class.blink::MemberBase.988" }
%"class.blink::MemberBase.988" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type opaque
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.989" = type { %"class.std::__1::__compressed_pair.990" }
%"class.std::__1::__compressed_pair.990" = type { %"struct.std::__1::__compressed_pair_elem.991" }
%"struct.std::__1::__compressed_pair_elem.991" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.995" = type { %"class.blink::MemberBase.996" }
%"class.blink::MemberBase.996" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.999", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.999" = type { %"class.WTF::HashTable.1000" }
%"class.WTF::HashTable.1000" = type <{ %"struct.WTF::KeyValuePair.1002"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1002" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1003", i32, i32 }
%"class.WTF::Vector.1003" = type { %"class.WTF::VectorBuffer.1004" }
%"class.WTF::VectorBuffer.1004" = type { %"class.WTF::VectorBufferBase.1005" }
%"class.WTF::VectorBufferBase.1005" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1007" = type { %"class.WTF::LinkedHashSet.1010" }
%"class.WTF::LinkedHashSet.1010" = type { %"class.WTF::HashMap.1011", %"class.WTF::VectorBackedLinkedList.1015" }
%"class.WTF::HashMap.1011" = type { %"class.WTF::HashTable.1012" }
%"class.WTF::HashTable.1012" = type <{ %"struct.WTF::KeyValuePair.1014"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1014" = type opaque
%"class.WTF::VectorBackedLinkedList.1015" = type { %"class.WTF::Vector.1016", i32, i32 }
%"class.WTF::Vector.1016" = type { %"class.WTF::VectorBuffer.1017" }
%"class.WTF::VectorBuffer.1017" = type { %"class.WTF::VectorBufferBase.1018" }
%"class.WTF::VectorBufferBase.1018" = type { %"class.WTF::VectorBackedLinkedListNode.1019"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1019" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1021" = type { %"class.std::__1::__compressed_pair.1022" }
%"class.std::__1::__compressed_pair.1022" = type { %"struct.std::__1::__compressed_pair_elem.1023" }
%"struct.std::__1::__compressed_pair_elem.1023" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1027" = type { %"class.std::__1::__compressed_pair.1028" }
%"class.std::__1::__compressed_pair.1028" = type { %"struct.std::__1::__compressed_pair_elem.1029" }
%"struct.std::__1::__compressed_pair_elem.1029" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1030, %class.scoped_refptr.1030, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1121", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1126", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1030 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1031", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1038" }
%"class.WTF::RefCounted.1031" = type { %"class.base::RefCounted.1032" }
%"class.base::RefCounted.1032" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1033", i32, [4 x i8] }>
%"class.WTF::Vector.1033" = type { %"class.WTF::VectorBuffer.1034" }
%"class.WTF::VectorBuffer.1034" = type { %"class.WTF::VectorBufferBase.1035" }
%"class.WTF::VectorBufferBase.1035" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1038" = type { %"class.WTF::VectorBuffer.1039" }
%"class.WTF::VectorBuffer.1039" = type { %"class.WTF::VectorBufferBase.1040" }
%"class.WTF::VectorBufferBase.1040" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1044", %"class.std::__1::unique_ptr.1093", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1041, %class.scoped_refptr.1042, %class.scoped_refptr.1043 }
%class.scoped_refptr.1041 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1057", i8, i8, %class.scoped_refptr.1041, i32, i32 }
%"class.WTF::RefCounted.1057" = type { %"class.base::RefCounted.1058" }
%"class.base::RefCounted.1058" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1042 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1212" }
%"class.blink::PaintPropertyNode.1212" = type { %"class.WTF::RefCounted.1213", i8, i8, %class.scoped_refptr.1042, i32, i32 }
%"class.WTF::RefCounted.1213" = type { %"class.base::RefCounted.1214" }
%"class.base::RefCounted.1214" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1043 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1209" }
%"class.blink::PaintPropertyNode.1209" = type { %"class.WTF::RefCounted.1210", i8, i8, %class.scoped_refptr.1043, i32, i32 }
%"class.WTF::RefCounted.1210" = type { %"class.base::RefCounted.1211" }
%"class.base::RefCounted.1211" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1044" = type { %"class.std::__1::__compressed_pair.1045" }
%"class.std::__1::__compressed_pair.1045" = type { %"struct.std::__1::__compressed_pair_elem.1046" }
%"struct.std::__1::__compressed_pair_elem.1046" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1047", %"class.WTF::Vector.1052", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1047" = type { %"class.WTF::VectorBuffer.1048" }
%"class.WTF::VectorBuffer.1048" = type { %"class.WTF::VectorBufferBase.1049" }
%"class.WTF::VectorBufferBase.1049" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1052" = type { %"class.WTF::VectorBuffer.1053" }
%"class.WTF::VectorBuffer.1053" = type { %"class.WTF::VectorBufferBase.1054" }
%"class.WTF::VectorBufferBase.1054" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1072" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1065, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1066", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1059" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.1059" = type { %"class.std::__1::__compressed_pair.1060" }
%"class.std::__1::__compressed_pair.1060" = type { %"struct.std::__1::__compressed_pair_elem.1061" }
%"struct.std::__1::__compressed_pair_elem.1061" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1065 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1194", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1194" = type { %"class.WTF::RefCounted.1195", i8, i8, %class.scoped_refptr.1065, i32, i32 }
%"class.WTF::RefCounted.1195" = type { %"class.base::RefCounted.1196" }
%"class.base::RefCounted.1196" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1197" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1197" = type { %"class.absl::optional_internal::optional_data.1198" }
%"class.absl::optional_internal::optional_data.1198" = type { %"class.absl::optional_internal::optional_data_base.1199" }
%"class.absl::optional_internal::optional_data_base.1199" = type { %"class.absl::optional_internal::optional_data_dtor_base.1200" }
%"class.absl::optional_internal::optional_data_dtor_base.1200" = type { i8, %union.anon.1201 }
%union.anon.1201 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1202", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1202" = type { %"class.std::__1::__vector_base.1203" }
%"class.std::__1::__vector_base.1203" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1204" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1204" = type { %"struct.std::__1::__compressed_pair_elem.1205" }
%"struct.std::__1::__compressed_pair_elem.1205" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1066" = type { %"class.std::__1::__compressed_pair.1067" }
%"class.std::__1::__compressed_pair.1067" = type { %"struct.std::__1::__compressed_pair_elem.1068" }
%"struct.std::__1::__compressed_pair_elem.1068" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1072" = type { %"class.std::__1::__compressed_pair.1073" }
%"class.std::__1::__compressed_pair.1073" = type { %"struct.std::__1::__compressed_pair_elem.1074" }
%"struct.std::__1::__compressed_pair_elem.1074" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1075", %"class.std::__1::unique_ptr.1081", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1081" = type { %"class.std::__1::__compressed_pair.1082" }
%"class.std::__1::__compressed_pair.1082" = type { %"struct.std::__1::__compressed_pair_elem.1083" }
%"struct.std::__1::__compressed_pair_elem.1083" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1093" = type { %"class.std::__1::__compressed_pair.1094" }
%"class.std::__1::__compressed_pair.1094" = type { %"struct.std::__1::__compressed_pair_elem.1095" }
%"struct.std::__1::__compressed_pair_elem.1095" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1096", %"class.absl::optional.1096" }
%"class.absl::optional.1096" = type { %"class.absl::optional_internal::optional_data.1097" }
%"class.absl::optional_internal::optional_data.1097" = type { %"class.absl::optional_internal::optional_data_base.1098" }
%"class.absl::optional_internal::optional_data_base.1098" = type { %"class.absl::optional_internal::optional_data_dtor_base.1099" }
%"class.absl::optional_internal::optional_data_dtor_base.1099" = type { i8, [3 x i8], %union.anon.1100 }
%union.anon.1100 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1038"*, %"class.absl::optional.1106", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1106" = type { %"class.absl::optional_internal::optional_data.1107" }
%"class.absl::optional_internal::optional_data.1107" = type { %"class.absl::optional_internal::optional_data_base.1108" }
%"class.absl::optional_internal::optional_data_base.1108" = type { %"class.absl::optional_internal::optional_data_dtor_base.1109" }
%"class.absl::optional_internal::optional_data_dtor_base.1109" = type { i8, %union.anon.1110 }
%union.anon.1110 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1111", %"class.WTF::Vector.1116" }
%"class.WTF::Vector.1111" = type { %"class.WTF::VectorBuffer.1112" }
%"class.WTF::VectorBuffer.1112" = type { %"class.WTF::VectorBufferBase.1113", [128 x i8] }
%"class.WTF::VectorBufferBase.1113" = type { i32*, i32, i32 }
%"class.WTF::Vector.1116" = type { %"class.WTF::VectorBuffer.1117" }
%"class.WTF::VectorBuffer.1117" = type { %"class.WTF::VectorBufferBase.1118", [128 x i8] }
%"class.WTF::VectorBufferBase.1118" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1121" = type { %"class.WTF::VectorBuffer.1122" }
%"class.WTF::VectorBuffer.1122" = type { %"class.WTF::VectorBufferBase.1123" }
%"class.WTF::VectorBufferBase.1123" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1126" = type { %"class.WTF::HashTable.1127" }
%"class.WTF::HashTable.1127" = type <{ %"struct.WTF::KeyValuePair.1130"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1130" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1131", %"class.WTF::Vector.1136" }
%"class.WTF::HashMap.1131" = type { %"class.WTF::HashTable.1132" }
%"class.WTF::HashTable.1132" = type <{ %"struct.WTF::KeyValuePair.1135"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1135" = type opaque
%"class.WTF::Vector.1136" = type { %"class.WTF::VectorBuffer.1137" }
%"class.WTF::VectorBuffer.1137" = type { %"class.WTF::VectorBufferBase.1138" }
%"class.WTF::VectorBufferBase.1138" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1144" = type { %"class.std::__1::__compressed_pair.1145" }
%"class.std::__1::__compressed_pair.1145" = type { %"struct.std::__1::__compressed_pair_elem.1146" }
%"struct.std::__1::__compressed_pair_elem.1146" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1150" = type { %"class.WTF::VectorBuffer.1151" }
%"class.WTF::VectorBuffer.1151" = type { %"class.WTF::VectorBufferBase.1152" }
%"class.WTF::VectorBufferBase.1152" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1155 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1156" = type { %"class.blink::MemberBase.1157" }
%"class.blink::MemberBase.1157" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1158" = type { %"class.blink::MemberBase.1159" }
%"class.blink::MemberBase.1159" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1160" = type { %"class.blink::MemberBase.1161" }
%"class.blink::MemberBase.1161" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1162" = type { %"class.WTF::HashSet.1165" }
%"class.WTF::HashSet.1165" = type { %"class.WTF::HashTable.1166" }
%"class.WTF::HashTable.1166" = type <{ %"class.blink::WeakMember.1168"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1168" = type opaque
%"class.blink::HeapHashSet.1169" = type { %"class.WTF::HashSet.1172" }
%"class.WTF::HashSet.1172" = type { %"class.WTF::HashTable.1173" }
%"class.WTF::HashTable.1173" = type <{ %"class.blink::WeakMember.1175"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1175" = type opaque
%"class.std::__1::unique_ptr.1176" = type { %"class.std::__1::__compressed_pair.1177" }
%"class.std::__1::__compressed_pair.1177" = type { %"struct.std::__1::__compressed_pair_elem.1178" }
%"struct.std::__1::__compressed_pair_elem.1178" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1179" }
%"class.base::time_internal::TimeBase.1179" = type { i64 }
%"class.std::__1::unique_ptr.1183" = type { %"class.std::__1::__compressed_pair.1184" }
%"class.std::__1::__compressed_pair.1184" = type { %"struct.std::__1::__compressed_pair_elem.1185" }
%"struct.std::__1::__compressed_pair_elem.1185" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1186", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.1186" = type { %"class.absl::optional_internal::optional_data.1187" }
%"class.absl::optional_internal::optional_data.1187" = type { %"class.absl::optional_internal::optional_data_base.1188" }
%"class.absl::optional_internal::optional_data_base.1188" = type { %"class.absl::optional_internal::optional_data_dtor_base.1189" }
%"class.absl::optional_internal::optional_data_dtor_base.1189" = type { i8, %union.anon.1190 }
%union.anon.1190 = type { %"class.base::Time" }
%"class.WTF::Vector.465" = type { %"class.WTF::VectorBuffer.466" }
%"class.WTF::VectorBuffer.466" = type { %"class.WTF::VectorBufferBase.467" }
%"class.WTF::VectorBufferBase.467" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.blink::Member.298" = type { %"class.blink::MemberBase.299" }
%"class.blink::MemberBase.299" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.311" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.300", %"class.blink::Member.300" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.300", %"class.blink::Member.302", %"class.blink::Member.300", %"class.blink::Member.300", %"class.blink::Member.304" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.302" = type { %"class.blink::MemberBase.303" }
%"class.blink::MemberBase.303" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.412", %"class.blink::Member.414", %"class.blink::Member.302", %"class.blink::Member.416", %"class.blink::Member.416", %"class.blink::Member.437", %"class.blink::Member.439", %"class.blink::Member.441", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.446", %"class.blink::HeapVector.448" }
%"class.blink::Member.412" = type { %"class.blink::MemberBase.413" }
%"class.blink::MemberBase.413" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.414" = type { %"class.blink::MemberBase.415" }
%"class.blink::MemberBase.415" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.457", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.465", %"class.WTF::Vector.465", i8, i32, %"class.blink::Member.470", %"class.blink::Member.472", %"class.blink::Member.474", %"class.blink::Member.476", %"class.blink::Member.478", %"class.blink::Member.480", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.482", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.488", %"class.blink::Member.490", %"class.blink::Member.454", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.492", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.298", %"class.blink::Member.502", %"class.blink::Member.298", %"class.blink::Member.298", %"class.blink::Member.298", %"class.blink::UserActionElementSet", %"class.blink::Member.511", double, double, i64, i64, %"class.blink::HeapHashSet.513", %"class.blink::HeapHashSet.520", i16, i8, %"class.blink::Member.527", %"class.blink::Member.529", %"class.blink::Member.531", %"class.blink::Member.533", %"class.blink::TextLinkColors", %"class.blink::Member.535", i8, [7 x i8], %"class.blink::HeapHashMap.537", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.298", %"class.WTF::Vector.544", %"class.blink::Member.549", %"class.blink::Member.551", i8, %"class.blink::Member.298", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.553", %"class.blink::HeapVector.555", %"class.std::__1::unique_ptr.563", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.569", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.582", %"class.WTF::Vector.584", i8, i8, %"class.std::__1::unique_ptr.589", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.595", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.603", i8, i32, %"class.blink::Member.605", %"class.blink::Member.607", %"class.blink::Member.609", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.611", %"class.WTF::HashMap.613", %"class.blink::Member.618", %"class.blink::Member.620", %"class.blink::Member.622", %"class.blink::Member.624", %"class.blink::Member.414", %"class.blink::Member.414", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.626", i8, i32, %"class.blink::Member.633", %"class.blink::Member.635", i32, %"class.blink::Member.637", %"class.blink::Member.639", %"class.blink::Member.641", %"class.std::__1::unique_ptr.643", i64, %"class.std::__1::unique_ptr.649", i32, i32, %"class.blink::Member.655", %"class.blink::Member.657", %"class.blink::Member.659", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.661", %"class.WTF::Vector.663", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.668", %"class.blink::Member.675", %"class.std::__1::unique_ptr.677", %"class.blink::Member.683", i8, i8, %"class.WTF::String", %"class.blink::Member.685", i8, [7 x i8], %"class.blink::HeapHashMap.687", %"class.blink::HeapObserverSet", %"class.blink::Member.701", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.703", i32, i8, i8, %"class.blink::WeakMember.705", %"class.blink::Member.706" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable.457" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.458" }
%"class.blink::HeapHashMap.458" = type { %"class.WTF::HashMap.461" }
%"class.WTF::HashMap.461" = type { %"class.WTF::HashTable.462" }
%"class.WTF::HashTable.462" = type <{ %"struct.WTF::KeyValuePair.464"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.464" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.blink::Member.470" = type { %"class.blink::MemberBase.471" }
%"class.blink::MemberBase.471" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.472" = type { %"class.blink::MemberBase.473" }
%"class.blink::MemberBase.473" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.719", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.786", i32, i8, [3 x i8], %"class.blink::HeapVector.788", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.796", %"class.blink::Member.798", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.807", %"class.blink::Member.938", %"class.blink::Member.940", i8, [7 x i8] }>
%"class.blink::Supplementable.719" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.720" }
%"class.blink::HeapHashMap.720" = type { %"class.WTF::HashMap.723" }
%"class.WTF::HashMap.723" = type { %"class.WTF::HashTable.724" }
%"class.WTF::HashTable.724" = type <{ %"struct.WTF::KeyValuePair.726"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.726" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.735" }
%"class.blink::Supplementable.735" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.736" }
%"class.blink::HeapHashMap.736" = type { %"class.WTF::HashMap.739" }
%"class.WTF::HashMap.739" = type { %"class.WTF::HashTable.740" }
%"class.WTF::HashTable.740" = type <{ %"struct.WTF::KeyValuePair.742"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.742" = type { i8*, %"class.blink::Member.1291" }
%"class.blink::Member.1291" = type { %"class.blink::MemberBase.1292" }
%"class.blink::MemberBase.1292" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1293" }
%"class.blink::Member.1293" = type { %"class.blink::MemberBase.1294" }
%"class.blink::MemberBase.1294" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.743, %"class.std::__1::unique_ptr.752", %"class.std::__1::unique_ptr.752", %"class.std::__1::unique_ptr.776", %"class.std::__1::unique_ptr.776", %"class.blink::Member.472", i32, [4 x i8], %"class.WTF::HashSet.782", i32, i32 }
%class.scoped_refptr.743 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.744", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.746", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.751 }
%"class.WTF::RefCounted.744" = type { %"class.base::RefCounted.745" }
%"class.base::RefCounted.745" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.746" = type { %"class.absl::optional_internal::optional_data.747" }
%"class.absl::optional_internal::optional_data.747" = type { %"class.absl::optional_internal::optional_data_base.748" }
%"class.absl::optional_internal::optional_data_base.748" = type { %"class.absl::optional_internal::optional_data_dtor_base.749" }
%"class.absl::optional_internal::optional_data_dtor_base.749" = type { i8, %union.anon.750 }
%union.anon.750 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.751 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.752" = type { %"class.std::__1::__compressed_pair.753" }
%"class.std::__1::__compressed_pair.753" = type { %"struct.std::__1::__compressed_pair_elem.754" }
%"struct.std::__1::__compressed_pair_elem.754" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.763", %"class.std::__1::map.772"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.746" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.223 }
%union.anon.223 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.755", %"class.std::__1::__compressed_pair.760" }
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"class.std::__1::__compressed_pair.760" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"class.std::__1::map.763" = type { %"class.std::__1::__tree.764" }
%"class.std::__1::__tree.764" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.765", %"class.std::__1::__compressed_pair.769" }
%"class.std::__1::__compressed_pair.765" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"class.std::__1::__compressed_pair.769" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"class.std::__1::map.772" = type opaque
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.782" = type { %"class.WTF::HashTable.783" }
%"class.WTF::HashTable.783" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.786" = type { %"class.blink::MemberBase.787" }
%"class.blink::MemberBase.787" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.788" = type { %"class.WTF::Vector.791" }
%"class.WTF::Vector.791" = type { %"class.WTF::VectorBuffer.792" }
%"class.WTF::VectorBuffer.792" = type { %"class.WTF::VectorBufferBase.793" }
%"class.WTF::VectorBufferBase.793" = type { %"class.blink::Member.794"*, i32, i32 }
%"class.blink::Member.794" = type opaque
%"class.blink::Member.796" = type { %"class.blink::MemberBase.797" }
%"class.blink::MemberBase.797" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.798" = type { %"class.blink::MemberBase.799" }
%"class.blink::MemberBase.799" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.800", i32, i32 }
%"class.blink::HeapHashMap.800" = type { %"class.WTF::HashMap.803" }
%"class.WTF::HashMap.803" = type { %"class.WTF::HashTable.804" }
%"class.WTF::HashTable.804" = type <{ %"struct.WTF::KeyValuePair.806"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.806" = type opaque
%"class.std::__1::unique_ptr.807" = type { %"class.std::__1::__compressed_pair.808" }
%"class.std::__1::__compressed_pair.808" = type { %"struct.std::__1::__compressed_pair_elem.809" }
%"struct.std::__1::__compressed_pair_elem.809" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr.810", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr.810" = type { %"class.std::__1::unique_ptr.811" }
%"class.std::__1::unique_ptr.811" = type { %"class.std::__1::__compressed_pair.812" }
%"class.std::__1::__compressed_pair.812" = type { %"struct.std::__1::__compressed_pair_elem.813" }
%"struct.std::__1::__compressed_pair_elem.813" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.814" }
%"class.WTF::Vector.814" = type { %"class.WTF::VectorBuffer.815" }
%"class.WTF::VectorBuffer.815" = type { %"class.WTF::VectorBufferBase.816" }
%"class.WTF::VectorBufferBase.816" = type { %"class.mojo::StructPtr.817"*, i32, i32 }
%"class.mojo::StructPtr.817" = type { %"class.std::__1::unique_ptr.818" }
%"class.std::__1::unique_ptr.818" = type { %"class.std::__1::__compressed_pair.819" }
%"class.std::__1::__compressed_pair.819" = type { %"struct.std::__1::__compressed_pair_elem.820" }
%"struct.std::__1::__compressed_pair_elem.820" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.821", %"class.WTF::HashMap.828", %"class.WTF::HashMap.833", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr.838", i8, %"class.WTF::Vector.839", i32, %"class.mojo::StructPtr.844", %"class.WTF::Vector.839" }
%"class.mojo::StructPtr.821" = type { %"class.std::__1::unique_ptr.822" }
%"class.std::__1::unique_ptr.822" = type { %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.828" = type { %"class.WTF::HashTable.829" }
%"class.WTF::HashTable.829" = type <{ %"struct.WTF::KeyValuePair.832"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.832" = type opaque
%"class.WTF::HashMap.833" = type { %"class.WTF::HashTable.834" }
%"class.WTF::HashTable.834" = type <{ %"struct.WTF::KeyValuePair.837"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.837" = type opaque
%"class.mojo::InlinedStructPtr.838" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.844" = type { %"class.std::__1::unique_ptr.845" }
%"class.std::__1::unique_ptr.845" = type { %"class.std::__1::__compressed_pair.846" }
%"class.std::__1::__compressed_pair.846" = type { %"struct.std::__1::__compressed_pair_elem.847" }
%"struct.std::__1::__compressed_pair_elem.847" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.839", i8, i8, [6 x i8] }>
%"class.WTF::Vector.839" = type { %"class.WTF::VectorBuffer.840" }
%"class.WTF::VectorBuffer.840" = type { %"class.WTF::VectorBufferBase.841" }
%"class.WTF::VectorBufferBase.841" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.929" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.859", i32 }>
%"class.std::__1::unique_ptr.859" = type { %"class.std::__1::__compressed_pair.860" }
%"class.std::__1::__compressed_pair.860" = type { %"struct.std::__1::__compressed_pair_elem.861" }
%"struct.std::__1::__compressed_pair_elem.861" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.862", %"class.base::OnceCallback.863", %"class.absl::optional.864", %"class.absl::optional.869", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.882", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.904", %"class.std::__1::map.915", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.924", i8, %class.scoped_refptr.874, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.925" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::OnceCallback.863" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.864" = type { %"class.absl::optional_internal::optional_data.865" }
%"class.absl::optional_internal::optional_data.865" = type { %"class.absl::optional_internal::optional_data_base.866" }
%"class.absl::optional_internal::optional_data_base.866" = type { %"class.absl::optional_internal::optional_data_dtor_base.867" }
%"class.absl::optional_internal::optional_data_dtor_base.867" = type { i8, %union.anon.868 }
%union.anon.868 = type { %"class.base::TimeDelta" }
%"class.absl::optional.869" = type { %"class.absl::optional_internal::optional_data.870" }
%"class.absl::optional_internal::optional_data.870" = type { %"class.absl::optional_internal::optional_data_base.871" }
%"class.absl::optional_internal::optional_data_base.871" = type { %"class.absl::optional_internal::optional_data_dtor_base.872" }
%"class.absl::optional_internal::optional_data_dtor_base.872" = type { i8, %union.anon.873 }
%union.anon.873 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.874, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.875" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.875" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.880 }
%class.scoped_refptr.880 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.942", [4 x i8], %"class.base::RepeatingCallback.862", %class.scoped_refptr.874, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.194", [4 x i8] }>
%"class.base::RefCountedThreadSafe.942" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.881 }
%class.scoped_refptr.881 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.882" = type { %"class.std::__1::__compressed_pair.883" }
%"class.std::__1::__compressed_pair.883" = type { %"struct.std::__1::__compressed_pair_elem.884" }
%"struct.std::__1::__compressed_pair_elem.884" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.885", %class.scoped_refptr.886 }
%"class.base::RepeatingCallback.885" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.886 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.887", [4 x i8] }>
%"class.base::RefCountedThreadSafe.887" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.891", %"class.std::__1::unique_ptr.897", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.903" }
%"class.std::__1::unique_ptr.891" = type { %"class.std::__1::__compressed_pair.892" }
%"class.std::__1::__compressed_pair.892" = type { %"struct.std::__1::__compressed_pair_elem.893" }
%"struct.std::__1::__compressed_pair_elem.893" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.897" = type { %"class.std::__1::__compressed_pair.898" }
%"class.std::__1::__compressed_pair.898" = type { %"struct.std::__1::__compressed_pair_elem.899" }
%"struct.std::__1::__compressed_pair_elem.899" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.903" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.904" = type { %"class.std::__1::__tree.905" }
%"class.std::__1::__tree.905" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.906", %"class.std::__1::__compressed_pair.910" }
%"class.std::__1::__compressed_pair.906" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"class.std::__1::__compressed_pair.910" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"class.std::__1::map.915" = type { %"class.std::__1::__tree.916" }
%"class.std::__1::__tree.916" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.917", %"class.std::__1::__compressed_pair.921" }
%"class.std::__1::__compressed_pair.917" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"class.std::__1::__compressed_pair.921" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"class.base::OnceCallback.924" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.874 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.925" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.929" = type { %"class.std::__1::__compressed_pair.930" }
%"class.std::__1::__compressed_pair.930" = type { %"struct.std::__1::__compressed_pair_elem.931" }
%"struct.std::__1::__compressed_pair_elem.931" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.938" = type { %"class.blink::MemberBase.939" }
%"class.blink::MemberBase.939" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.940" = type { %"class.blink::MemberBase.941" }
%"class.blink::MemberBase.941" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.474" = type { %"class.blink::MemberBase.475" }
%"class.blink::MemberBase.475" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.476" = type { %"class.blink::MemberBase.477" }
%"class.blink::MemberBase.477" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.478" = type { %"class.blink::MemberBase.479" }
%"class.blink::MemberBase.479" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.480" = type { %"class.blink::MemberBase.481" }
%"class.blink::MemberBase.481" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.482" = type { %"class.std::__1::__compressed_pair.483" }
%"class.std::__1::__compressed_pair.483" = type { %"struct.std::__1::__compressed_pair_elem.484" }
%"struct.std::__1::__compressed_pair_elem.484" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.488" = type { %"class.blink::MemberBase.489" }
%"class.blink::MemberBase.489" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.490" = type { %"class.blink::MemberBase.491" }
%"class.blink::MemberBase.491" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.454" = type { %"class.blink::MemberBase.455" }
%"class.blink::MemberBase.455" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.WTF::Vector.492" = type { %"class.WTF::VectorBuffer.493" }
%"class.WTF::VectorBuffer.493" = type { %"class.WTF::VectorBufferBase.494" }
%"class.WTF::VectorBufferBase.494" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.495 }
%class.scoped_refptr.495 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.502" = type { %"class.blink::MemberBase.503" }
%"class.blink::MemberBase.503" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.504" }
%"class.blink::HeapHashMap.504" = type { %"class.WTF::HashMap.507" }
%"class.WTF::HashMap.507" = type { %"class.WTF::HashTable.508" }
%"class.WTF::HashTable.508" = type <{ %"struct.WTF::KeyValuePair.510"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.510" = type opaque
%"class.blink::Member.511" = type { %"class.blink::MemberBase.512" }
%"class.blink::MemberBase.512" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.513" = type { %"class.WTF::HashSet.516" }
%"class.WTF::HashSet.516" = type { %"class.WTF::HashTable.517" }
%"class.WTF::HashTable.517" = type <{ %"class.blink::WeakMember.519"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.519" = type opaque
%"class.blink::HeapHashSet.520" = type { %"class.WTF::HashSet.523" }
%"class.WTF::HashSet.523" = type { %"class.WTF::HashTable.524" }
%"class.WTF::HashTable.524" = type <{ %"class.blink::WeakMember.526"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.526" = type opaque
%"class.blink::Member.527" = type { %"class.blink::MemberBase.528" }
%"class.blink::MemberBase.528" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.529" = type { %"class.blink::MemberBase.530" }
%"class.blink::MemberBase.530" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.531" = type { %"class.blink::MemberBase.532" }
%"class.blink::MemberBase.532" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.533" = type { %"class.blink::MemberBase.534" }
%"class.blink::MemberBase.534" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.535" = type { %"class.blink::MemberBase.536" }
%"class.blink::MemberBase.536" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.537" = type { %"class.WTF::HashMap.540" }
%"class.WTF::HashMap.540" = type { %"class.WTF::HashTable.541" }
%"class.WTF::HashTable.541" = type <{ %"struct.WTF::KeyValuePair.543"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.543" = type opaque
%"class.WTF::Vector.544" = type { %"class.WTF::VectorBuffer.545" }
%"class.WTF::VectorBuffer.545" = type { %"class.WTF::VectorBufferBase.546" }
%"class.WTF::VectorBufferBase.546" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.549" = type { %"class.blink::MemberBase.550" }
%"class.blink::MemberBase.550" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.551" = type { %"class.blink::MemberBase.552" }
%"class.blink::MemberBase.552" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.553" = type { %"class.blink::MemberBase.554" }
%"class.blink::MemberBase.554" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.555" = type { %"class.WTF::Vector.558" }
%"class.WTF::Vector.558" = type { %"class.WTF::VectorBuffer.559" }
%"class.WTF::VectorBuffer.559" = type { %"class.WTF::VectorBufferBase.560" }
%"class.WTF::VectorBufferBase.560" = type { %"class.blink::Member.561"*, i32, i32 }
%"class.blink::Member.561" = type opaque
%"class.std::__1::unique_ptr.563" = type { %"class.std::__1::__compressed_pair.564" }
%"class.std::__1::__compressed_pair.564" = type { %"struct.std::__1::__compressed_pair_elem.565" }
%"struct.std::__1::__compressed_pair_elem.565" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.569" = type { %"class.WTF::HashSet.572" }
%"class.WTF::HashSet.572" = type { %"class.WTF::HashTable.573" }
%"class.WTF::HashTable.573" = type <{ %"class.blink::WeakMember.575"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.575" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.576", i32, [4 x i8] }>
%"class.WTF::Vector.576" = type { %"class.WTF::VectorBuffer.577" }
%"class.WTF::VectorBuffer.577" = type { %"class.WTF::VectorBufferBase.578" }
%"class.WTF::VectorBufferBase.578" = type { %"struct.std::__1::pair.579"*, i32, i32 }
%"struct.std::__1::pair.579" = type opaque
%"class.blink::Member.582" = type { %"class.blink::MemberBase.583" }
%"class.blink::MemberBase.583" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.589" = type { %"class.std::__1::__compressed_pair.590" }
%"class.std::__1::__compressed_pair.590" = type { %"struct.std::__1::__compressed_pair_elem.591" }
%"struct.std::__1::__compressed_pair_elem.591" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.433" }
%"class.WTF::Vector.433" = type { %"class.WTF::VectorBuffer.434" }
%"class.WTF::VectorBuffer.434" = type { %"class.WTF::VectorBufferBase.435" }
%"class.WTF::VectorBufferBase.435" = type { %"class.blink::Member.298"*, i32, i32 }
%"class.blink::HeapVector.595" = type { %"class.WTF::Vector.598" }
%"class.WTF::Vector.598" = type { %"class.WTF::VectorBuffer.599" }
%"class.WTF::VectorBuffer.599" = type { %"class.WTF::VectorBufferBase.600" }
%"class.WTF::VectorBufferBase.600" = type { %"class.blink::Member.601"*, i32, i32 }
%"class.blink::Member.601" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.414" }
%"class.blink::Member.603" = type { %"class.blink::MemberBase.604" }
%"class.blink::MemberBase.604" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.605" = type { %"class.blink::MemberBase.606" }
%"class.blink::MemberBase.606" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.607" = type { %"class.blink::MemberBase.608" }
%"class.blink::MemberBase.608" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.609" = type { %"class.blink::MemberBase.610" }
%"class.blink::MemberBase.610" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.611" = type { %"class.blink::MemberBase.612" }
%"class.blink::MemberBase.612" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.613" = type { %"class.WTF::HashTable.614" }
%"class.WTF::HashTable.614" = type <{ %"struct.WTF::KeyValuePair.617"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.617" = type opaque
%"class.blink::Member.618" = type { %"class.blink::MemberBase.619" }
%"class.blink::MemberBase.619" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.620" = type { %"class.blink::MemberBase.621" }
%"class.blink::MemberBase.621" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.622" = type { %"class.blink::MemberBase.623" }
%"class.blink::MemberBase.623" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.624" = type { %"class.blink::MemberBase.625" }
%"class.blink::MemberBase.625" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.501", { i64, i64 } }
%"class.blink::WeakMember.501" = type { %"class.blink::MemberBase.415" }
%"class.blink::HeapHashSet.626" = type { %"class.WTF::HashSet.629" }
%"class.WTF::HashSet.629" = type { %"class.WTF::HashTable.630" }
%"class.WTF::HashTable.630" = type <{ %"class.blink::Member.632"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.632" = type opaque
%"class.blink::Member.633" = type { %"class.blink::MemberBase.634" }
%"class.blink::MemberBase.634" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.635" = type { %"class.blink::MemberBase.636" }
%"class.blink::MemberBase.636" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.637" = type { %"class.blink::MemberBase.638" }
%"class.blink::MemberBase.638" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.639" = type { %"class.blink::MemberBase.640" }
%"class.blink::MemberBase.640" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.641" = type { %"class.blink::MemberBase.642" }
%"class.blink::MemberBase.642" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.643" = type { %"class.std::__1::__compressed_pair.644" }
%"class.std::__1::__compressed_pair.644" = type { %"struct.std::__1::__compressed_pair_elem.645" }
%"struct.std::__1::__compressed_pair_elem.645" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.649" = type { %"class.std::__1::__compressed_pair.650" }
%"class.std::__1::__compressed_pair.650" = type { %"struct.std::__1::__compressed_pair_elem.651" }
%"struct.std::__1::__compressed_pair_elem.651" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.655" = type { %"class.blink::MemberBase.656" }
%"class.blink::MemberBase.656" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.657" = type { %"class.blink::MemberBase.658" }
%"class.blink::MemberBase.658" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.659" = type { %"class.blink::MemberBase.660" }
%"class.blink::MemberBase.660" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.661" = type { %"class.blink::MemberBase.662" }
%"class.blink::MemberBase.662" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.663" = type { %"class.WTF::VectorBuffer.664" }
%"class.WTF::VectorBuffer.664" = type { %"class.WTF::VectorBufferBase.665" }
%"class.WTF::VectorBufferBase.665" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.668" = type { %"class.WTF::HashMap.671" }
%"class.WTF::HashMap.671" = type { %"class.WTF::HashTable.672" }
%"class.WTF::HashTable.672" = type <{ %"struct.WTF::KeyValuePair.674"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.674" = type opaque
%"class.blink::Member.675" = type { %"class.blink::MemberBase.676" }
%"class.blink::MemberBase.676" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.677" = type { %"class.std::__1::__compressed_pair.678" }
%"class.std::__1::__compressed_pair.678" = type { %"struct.std::__1::__compressed_pair_elem.679" }
%"struct.std::__1::__compressed_pair_elem.679" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.683" = type { %"class.blink::MemberBase.684" }
%"class.blink::MemberBase.684" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.685" = type { %"class.blink::MemberBase.686" }
%"class.blink::MemberBase.686" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.694" }
%"class.blink::HeapHashSet.694" = type { %"class.WTF::HashSet.697" }
%"class.WTF::HashSet.697" = type { %"class.WTF::HashTable.698" }
%"class.WTF::HashTable.698" = type <{ %"class.blink::WeakMember.700"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.700" = type opaque
%"class.blink::Member.701" = type { %"class.blink::MemberBase.702" }
%"class.blink::MemberBase.702" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.703" = type { %"class.blink::MemberBase.704" }
%"class.blink::MemberBase.704" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.414", %"class.blink::HeapHashSet.710", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.717", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.710" = type { %"class.WTF::HashSet.713" }
%"class.WTF::HashSet.713" = type { %"class.WTF::HashTable.714" }
%"class.WTF::HashTable.714" = type <{ %"class.blink::Member.716"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.716" = type opaque
%"class.blink::HeapTaskRunnerTimer.717" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.718", { i64, i64 } }
%"class.blink::WeakMember.718" = type { %"class.blink::MemberBase.704" }
%"class.blink::WeakMember.705" = type { %"class.blink::MemberBase.301" }
%"class.blink::MemberBase.301" = type { %"class.blink::Node"* }
%"class.blink::Member.706" = type { %"class.blink::MemberBase.707" }
%"class.blink::MemberBase.707" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.416" = type { %"class.blink::MemberBase.417" }
%"class.blink::MemberBase.417" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.420" }
%"class.blink::HeapHashMap.420" = type { %"class.WTF::HashMap.423" }
%"class.WTF::HashMap.423" = type { %"class.WTF::HashTable.424" }
%"class.WTF::HashTable.424" = type <{ %"struct.WTF::KeyValuePair.426"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.426" = type { %"class.WTF::AtomicString", %"class.blink::Member.427" }
%"class.blink::Member.427" = type { %"class.blink::MemberBase.428" }
%"class.blink::MemberBase.428" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.298", i32, %"class.blink::HeapVector" }
%"class.blink::Member.437" = type { %"class.blink::MemberBase.438" }
%"class.blink::MemberBase.438" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.439" = type { %"class.blink::MemberBase.440" }
%"class.blink::MemberBase.440" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.443" }
%"class.blink::Member.443" = type { %"class.blink::MemberBase.444" }
%"class.blink::MemberBase.444" = type { %"class.blink::HeapHashMap.445"* }
%"class.blink::HeapHashMap.445" = type opaque
%"class.blink::Member.446" = type { %"class.blink::MemberBase.447" }
%"class.blink::MemberBase.447" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.448" = type { %"class.WTF::Vector.451" }
%"class.WTF::Vector.451" = type { %"class.WTF::VectorBuffer.452" }
%"class.WTF::VectorBuffer.452" = type { %"class.WTF::VectorBufferBase.453" }
%"class.WTF::VectorBufferBase.453" = type { %"class.blink::Member.454"*, i32, i32 }
%"class.blink::Member.304" = type { %"class.blink::MemberBase.305" }
%"class.blink::MemberBase.305" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.300" = type { %"class.blink::MemberBase.301" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.308 }
%class.scoped_refptr.308 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.309", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.309" = type { %"class.base::RefCounted.310" }
%"class.base::RefCounted.310" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.311" = type { %"class.blink::MemberBase.312" }
%"class.blink::MemberBase.312" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.315", %"class.blink::Member.317", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.315" = type { %"class.WTF::SingleThreadedBitField.316" }
%"class.WTF::SingleThreadedBitField.316" = type { i32 }
%"class.blink::Member.317" = type { %"class.blink::MemberBase.318" }
%"class.blink::MemberBase.318" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.319 }
%class.scoped_refptr.319 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.320", %"class.WTF::AtomicString", %"class.WTF::Vector.322" }
%"class.WTF::RefCounted.320" = type { %"class.base::RefCounted.321" }
%"class.base::RefCounted.321" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.322" = type { %"class.WTF::VectorBuffer.323" }
%"class.WTF::VectorBuffer.323" = type { %"class.WTF::VectorBufferBase.324", [32 x i8] }
%"class.WTF::VectorBufferBase.324" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::Member.327" = type { %"class.blink::MemberBase.328" }
%"class.blink::MemberBase.328" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.329" = type { %"class.blink::MemberBase.330" }
%"class.blink::MemberBase.330" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.331" = type { %"class.blink::MemberBase.332" }
%"class.blink::MemberBase.332" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.333" = type { %"class.blink::MemberBase.334" }
%"class.blink::MemberBase.334" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.335" = type { %"class.blink::MemberBase.336" }
%"class.blink::MemberBase.336" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type opaque
%class.scoped_refptr.337 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.338" = type { %"class.blink::MemberBase.339" }
%"class.blink::MemberBase.339" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.340" = type { %"class.blink::MemberBase.341" }
%"class.blink::MemberBase.341" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.342" = type { %"class.blink::MemberBase.343" }
%"class.blink::MemberBase.343" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.344" = type { %"class.blink::MemberBase.345" }
%"class.blink::MemberBase.345" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.346" = type { %"class.blink::MemberBase.347" }
%"class.blink::MemberBase.347" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.350" = type { %"class.blink::MemberBase.351" }
%"class.blink::MemberBase.351" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.352" }
%"class.blink::Member.352" = type { %"class.blink::MemberBase.353" }
%"class.blink::MemberBase.353" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1404" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.1312, %"class.std::__1::unique_ptr.859", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.874, i32 }>
%class.scoped_refptr.1312 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.874, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.1370", %"class.absl::optional.1375", %"class.absl::optional.1329", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.1395", i8, [7 x i8], %class.scoped_refptr.874, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.887" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.874, %"class.std::__1::unique_ptr.1313", %"class.absl::optional.1323", %"struct.std::__1::atomic.175", i8, i8, i8, i8, i32, i32, %"class.absl::optional.1329", %"class.std::__1::unique_ptr.1334", i8, i64, %class.scoped_refptr.1367, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.1369" }
%"class.std::__1::unique_ptr.1313" = type { %"class.std::__1::__compressed_pair.1314" }
%"class.std::__1::__compressed_pair.1314" = type { %"struct.std::__1::__compressed_pair_elem.1315" }
%"struct.std::__1::__compressed_pair_elem.1315" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.874, i8, %"class.mojo::ScopedHandleBase.1316", %class.scoped_refptr.1317, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.1318", i8*, %"class.base::WeakPtrFactory.1319" }
%"class.mojo::ScopedHandleBase.1316" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.1317 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.1318" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.1319" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.1323" = type { %"class.absl::optional_internal::optional_data.1324" }
%"class.absl::optional_internal::optional_data.1324" = type { %"class.absl::optional_internal::optional_data_base.1325" }
%"class.absl::optional_internal::optional_data_base.1325" = type { %"class.absl::optional_internal::optional_data_dtor_base.1326" }
%"class.absl::optional_internal::optional_data_dtor_base.1326" = type { i8, %union.anon.1327 }
%union.anon.1327 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.1328", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.1328" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.1334" = type { %"class.std::__1::__compressed_pair.1335" }
%"class.std::__1::__compressed_pair.1335" = type { %"struct.std::__1::__compressed_pair_elem.1336" }
%"struct.std::__1::__compressed_pair_elem.1336" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.1337", i8, i64, %class.scoped_refptr.1338, %class.scoped_refptr.1363 }
%"class.base::RepeatingCallback.1337" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1338 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.1339", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.1341", %"class.std::__1::map.1352", i8, [7 x i8] }>
%"class.base::RefCounted.1339" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.1340 }
%class.scoped_refptr.1340 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.1341" = type { %"class.std::__1::__tree.1342" }
%"class.std::__1::__tree.1342" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1343", %"class.std::__1::__compressed_pair.1347" }
%"class.std::__1::__compressed_pair.1343" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"class.std::__1::__compressed_pair.1347" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"class.std::__1::map.1352" = type { %"class.std::__1::__tree.1353" }
%"class.std::__1::__tree.1353" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1354", %"class.std::__1::__compressed_pair.1358" }
%"class.std::__1::__compressed_pair.1354" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"class.std::__1::__compressed_pair.1358" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%class.scoped_refptr.1363 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.1367 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.1368 }
%class.scoped_refptr.1368 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.1369" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.1370" = type { %"class.absl::optional_internal::optional_data.1371" }
%"class.absl::optional_internal::optional_data.1371" = type { %"class.absl::optional_internal::optional_data_base.1372" }
%"class.absl::optional_internal::optional_data_base.1372" = type { %"class.absl::optional_internal::optional_data_dtor_base.1373" }
%"class.absl::optional_internal::optional_data_dtor_base.1373" = type { i8, %union.anon.1374 }
%union.anon.1374 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.1375" = type { %"class.absl::optional_internal::optional_data.1376" }
%"class.absl::optional_internal::optional_data.1376" = type { %"class.absl::optional_internal::optional_data_base.1377" }
%"class.absl::optional_internal::optional_data_base.1377" = type { %"class.absl::optional_internal::optional_data_dtor_base.1378" }
%"class.absl::optional_internal::optional_data_dtor_base.1378" = type { i8, [7 x i8], %union.anon.1379 }
%union.anon.1379 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.1329" = type { %"class.absl::optional_internal::optional_data.1330" }
%"class.absl::optional_internal::optional_data.1330" = type { %"class.absl::optional_internal::optional_data_base.1331" }
%"class.absl::optional_internal::optional_data_base.1331" = type { %"class.absl::optional_internal::optional_data_dtor_base.1332" }
%"class.absl::optional_internal::optional_data_dtor_base.1332" = type { i8, %union.anon.1333 }
%union.anon.1333 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.1380 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.1380 = type { %"class.std::__1::map.1383" }
%"class.std::__1::map.1383" = type { %"class.std::__1::__tree.1384" }
%"class.std::__1::__tree.1384" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1385", %"class.std::__1::__compressed_pair.1389" }
%"class.std::__1::__compressed_pair.1385" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"class.std::__1::__compressed_pair.1389" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.1394"*, i64 }
%"class.std::__1::unique_ptr.1394" = type opaque
%"class.std::__1::map.1395" = type { %"class.std::__1::__tree.1396" }
%"class.std::__1::__tree.1396" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1397", %"class.std::__1::__compressed_pair.1401" }
%"class.std::__1::__compressed_pair.1397" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"class.std::__1::__compressed_pair.1401" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.1404" = type { %"class.std::__1::__compressed_pair.1405" }
%"class.std::__1::__compressed_pair.1405" = type { %"struct.std::__1::__compressed_pair_elem.1406" }
%"struct.std::__1::__compressed_pair_elem.1406" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.354" = type { %"class.std::__1::__compressed_pair.355" }
%"class.std::__1::__compressed_pair.355" = type { %"struct.std::__1::__compressed_pair_elem.356" }
%"struct.std::__1::__compressed_pair_elem.356" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.362" = type { %"class.std::__1::__compressed_pair.363" }
%"class.std::__1::__compressed_pair.363" = type { %"struct.std::__1::__compressed_pair_elem.364" }
%"struct.std::__1::__compressed_pair_elem.364" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.std::__1::unique_ptr.368" = type { %"class.std::__1::__compressed_pair.369" }
%"class.std::__1::__compressed_pair.369" = type { %"struct.std::__1::__compressed_pair_elem.370" }
%"struct.std::__1::__compressed_pair_elem.370" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.374" }
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.1412" }
%"class.mojo::AssociatedRemote.1412" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1413" }
%"class.mojo::internal::AssociatedInterfacePtrState.1413" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1414" }
%"class.std::__1::unique_ptr.1414" = type { %"class.std::__1::__compressed_pair.1415" }
%"class.std::__1::__compressed_pair.1415" = type { %"struct.std::__1::__compressed_pair_elem.1416" }
%"struct.std::__1::__compressed_pair_elem.1416" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.376" = type { %"class.blink::Member.377" }
%"class.blink::Member.377" = type { %"class.blink::MemberBase.378" }
%"class.blink::MemberBase.378" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.1422" }
%"class.mojo::AssociatedRemote.1422" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1423" }
%"class.mojo::internal::AssociatedInterfacePtrState.1423" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1424" }
%"class.std::__1::unique_ptr.1424" = type { %"class.std::__1::__compressed_pair.1425" }
%"class.std::__1::__compressed_pair.1425" = type { %"struct.std::__1::__compressed_pair_elem.1426" }
%"struct.std::__1::__compressed_pair_elem.1426" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.379" }
%"class.blink::Member.379" = type { %"class.blink::MemberBase.380" }
%"class.blink::MemberBase.380" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.209", %"class.mojo::AssociatedReceiver.1432" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.mojo::AssociatedReceiver.1432" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.1433" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.859" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.1433" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.381" = type { %"class.blink::Member.382" }
%"class.blink::Member.382" = type { %"class.blink::MemberBase.383" }
%"class.blink::MemberBase.383" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1436", %"class.blink::Member.209", %"class.mojo::AssociatedReceiver.1437" }
%"class.blink::ThreadState::PrefinalizerRegistration.1436" = type { i8 }
%"class.mojo::AssociatedReceiver.1437" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.1438" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.1438" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.384" }
%"class.blink::Member.384" = type { %"class.blink::MemberBase.385" }
%"class.blink::MemberBase.385" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1441", %"class.blink::Member.209", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.1441" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.1312, %"class.std::__1::unique_ptr.859", %"class.base::WeakPtrFactory.1442" }
%"class.base::WeakPtrFactory.1442" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.386" = type { %"class.blink::Member.387" }
%"class.blink::Member.387" = type { %"class.blink::MemberBase.388" }
%"class.blink::MemberBase.388" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1445", %"class.blink::Member.209", %"class.mojo::AssociatedReceiver.1446" }
%"class.blink::ThreadState::PrefinalizerRegistration.1445" = type { i8 }
%"class.mojo::AssociatedReceiver.1446" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.1447" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.1447" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.393" = type { %"class.blink::MemberBase.394" }
%"class.blink::MemberBase.394" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.395" = type { %"class.blink::MemberBase.396" }
%"class.blink::MemberBase.396" = type { %"class.blink::HeapHashMap.397"* }
%"class.blink::HeapHashMap.397" = type opaque
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.398" }
%"class.std::__1::unique_ptr.398" = type { %"class.std::__1::__compressed_pair.399" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr.401" }
%"class.mojo::InlinedStructPtr" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.401" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.405" = type { %"class.blink::MemberBase.406" }
%"class.blink::MemberBase.406" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.407" = type { %"class.absl::optional_internal::optional_data.408" }
%"class.absl::optional_internal::optional_data.408" = type { %"class.absl::optional_internal::optional_data_base.409" }
%"class.absl::optional_internal::optional_data_base.409" = type { %"class.absl::optional_internal::optional_data_dtor_base.410" }
%"class.absl::optional_internal::optional_data_dtor_base.410" = type { i8, %union.anon.411 }
%union.anon.411 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.211" }
%"class.std::__1::vector.211" = type { %"class.std::__1::__vector_base.212" }
%"class.std::__1::__vector_base.212" = type { %"struct.std::__1::pair.213"*, %"struct.std::__1::pair.213"*, %"class.std::__1::__compressed_pair.214" }
%"struct.std::__1::pair.213" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"struct.std::__1::pair.213"* }
%"class.blink::Member.219" = type { %"class.blink::MemberBase.220" }
%"class.blink::MemberBase.220" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.std::__1::basic_string" }
%"class.absl::optional.227" = type { %"class.absl::optional_internal::optional_data.228" }
%"class.absl::optional_internal::optional_data.228" = type { %"class.absl::optional_internal::optional_data_base.229" }
%"class.absl::optional_internal::optional_data_base.229" = type { %"class.absl::optional_internal::optional_data_dtor_base.230" }
%"class.absl::optional_internal::optional_data_dtor_base.230" = type { i8, %union.anon.231 }
%union.anon.231 = type { %"class.base::UnguessableToken" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::TaskHandle" = type { %class.scoped_refptr.232 }
%class.scoped_refptr.232 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.235" }
%"class.WTF::HashTable.235" = type <{ %"class.blink::WeakMember.237"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.237" = type opaque
%"class.WTF::Vector.1215" = type { %"class.WTF::VectorBuffer.1216" }
%"class.WTF::VectorBuffer.1216" = type { %"class.WTF::VectorBufferBase.1217" }
%"class.WTF::VectorBufferBase.1217" = type { %"struct.std::__1::pair.1218"*, i32, i32 }
%"struct.std::__1::pair.1218" = type { %"class.blink::DOMWrapperWorld"*, %"class.v8::Local" }
%"class.v8::Local" = type { %"class.v8::Object"* }
%"class.v8::Object" = type { i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::LocalWindowProxy" = type <{ %"class.blink::WindowProxy.base", [4 x i8], %"class.blink::Member.1221", i8, [7 x i8] }>
%"class.blink::WindowProxy.base" = type <{ i32 (...)**, %"class.v8::Isolate"*, %"class.blink::Member", %class.scoped_refptr, %"class.blink::TraceWrapperV8Reference", i32 }>
%"class.blink::Member.1221" = type { %"class.blink::MemberBase.1222" }
%"class.blink::MemberBase.1222" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr, %"class.blink::Member.1225", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%"class.blink::Member.1225" = type { %"class.blink::MemberBase.1226" }
%"class.blink::MemberBase.1226" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.1227" }
%"class.blink::Persistent.1227" = type { %"class.blink::PersistentBase.1228" }
%"class.blink::PersistentBase.1228" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.blink::RemoteFrame" = type { %"class.blink::Frame", %"class.blink::ChildFrameCompositor", %"class.blink::mojom::blink::RemoteMainFrame", %"class.blink::mojom::blink::RemoteFrame", %"class.blink::Member.1229", %"class.blink::RemoteSecurityContext", %"class.absl::optional.1235", %"struct.blink::FrameVisualProperties", %class.scoped_refptr.1252, i8, %"class.std::__1::vector.1253", %"class.WTF::String", %"class.viz::FrameSinkId", %"class.std::__1::unique_ptr.1267", %"class.blink::WebFrameWidget"*, %"class.blink::InterfaceRegistry"*, i8, %"class.std::__1::unique_ptr.1273", %"class.mojo::AssociatedRemote.1279", %"class.mojo::AssociatedReceiver", %"class.mojo::AssociatedReceiver.1288", %class.scoped_refptr.498 }
%"class.blink::ChildFrameCompositor" = type { i32 (...)** }
%"class.blink::mojom::blink::RemoteMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::RemoteFrame" = type { i32 (...)** }
%"class.blink::Member.1229" = type { %"class.blink::MemberBase.1230" }
%"class.blink::MemberBase.1230" = type { %"class.blink::RemoteFrameView"* }
%"class.blink::RemoteFrameView" = type <{ %"class.blink::FrameView.base", i8, %"class.blink::Member.1233", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.blink::IntRect", float, %"struct.blink::IntrinsicSizingInfo", i8, i8, i8, [5 x i8] }>
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::RemoteFrame"* }
%"struct.blink::IntrinsicSizingInfo" = type <{ %"class.blink::FloatSize", %"class.blink::FloatSize", i8, i8, [2 x i8] }>
%"class.blink::RemoteSecurityContext" = type { %"class.blink::SecurityContext" }
%"class.absl::optional.1235" = type { %"class.absl::optional_internal::optional_data.1236" }
%"class.absl::optional_internal::optional_data.1236" = type { %"class.absl::optional_internal::optional_data_base.1237" }
%"class.absl::optional_internal::optional_data_base.1237" = type { %"class.absl::optional_internal::optional_data_dtor_base.1238" }
%"class.absl::optional_internal::optional_data_dtor_base.1238" = type { i8, %union.anon.1239 }
%union.anon.1239 = type { %"struct.blink::FrameVisualProperties" }
%"struct.blink::FrameVisualProperties" = type { %"struct.blink::ScreenInfo", i8, i8, i32, double, float, float, %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size", %"class.std::__1::vector.1245", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Size", %"class.viz::LocalSurfaceId" }
%"struct.blink::ScreenInfo" = type { float, %"class.gfx::DisplayColorSpaces", i32, i32, i8, i32, %"class.gfx::Rect", %"class.gfx::Rect", i32, i16, i8, i8, i8, i64 }
%"class.gfx::DisplayColorSpaces" = type { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, %"class.absl::optional.1240" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.absl::optional.1240" = type { %"class.absl::optional_internal::optional_data.1241" }
%"class.absl::optional_internal::optional_data.1241" = type { %"class.absl::optional_internal::optional_data_base.1242" }
%"class.absl::optional_internal::optional_data_base.1242" = type { %"class.absl::optional_internal::optional_data_dtor_base.1243" }
%"class.absl::optional_internal::optional_data_dtor_base.1243" = type { i8, %union.anon.1244 }
%union.anon.1244 = type { %"struct.gfx::HDRStaticMetadata" }
%"struct.gfx::HDRStaticMetadata" = type { double, double, double }
%"class.std::__1::vector.1245" = type { %"class.std::__1::__vector_base.1246" }
%"class.std::__1::__vector_base.1246" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.1247" }
%"class.std::__1::__compressed_pair.1247" = type { %"struct.std::__1::__compressed_pair_elem.1248" }
%"struct.std::__1::__compressed_pair_elem.1248" = type { %"class.gfx::Rect"* }
%"class.viz::LocalSurfaceId" = type { i32, i32, %"class.base::UnguessableToken" }
%class.scoped_refptr.1252 = type { %"class.cc::Layer"* }
%"class.cc::Layer" = type opaque
%"class.std::__1::vector.1253" = type { %"class.std::__1::__vector_base.1254" }
%"class.std::__1::__vector_base.1254" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"class.std::__1::__compressed_pair.1262" }
%"struct.blink::ParsedPermissionsPolicyDeclaration" = type <{ i32, [4 x i8], %"class.std::__1::vector.1255", i8, i8, [6 x i8] }>
%"class.std::__1::vector.1255" = type { %"class.std::__1::__vector_base.1256" }
%"class.std::__1::__vector_base.1256" = type { %"class.url::Origin"*, %"class.url::Origin"*, %"class.std::__1::__compressed_pair.1257" }
%"class.std::__1::__compressed_pair.1257" = type { %"struct.std::__1::__compressed_pair_elem.1258" }
%"struct.std::__1::__compressed_pair_elem.1258" = type { %"class.url::Origin"* }
%"class.std::__1::__compressed_pair.1262" = type { %"struct.std::__1::__compressed_pair_elem.1263" }
%"struct.std::__1::__compressed_pair_elem.1263" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"* }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.std::__1::unique_ptr.1267" = type { %"class.std::__1::__compressed_pair.1268" }
%"class.std::__1::__compressed_pair.1268" = type { %"struct.std::__1::__compressed_pair_elem.1269" }
%"struct.std::__1::__compressed_pair_elem.1269" = type { %"class.viz::ParentLocalSurfaceIdAllocator"* }
%"class.viz::ParentLocalSurfaceIdAllocator" = type <{ %"class.viz::LocalSurfaceId", i8, i8, [6 x i8] }>
%"class.blink::WebFrameWidget" = type opaque
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::ChildFrameCompositingHelper"* }
%"class.blink::ChildFrameCompositingHelper" = type opaque
%"class.mojo::AssociatedRemote.1279" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1280" }
%"class.mojo::internal::AssociatedInterfacePtrState.1280" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1281" }
%"class.std::__1::unique_ptr.1281" = type { %"class.std::__1::__compressed_pair.1282" }
%"class.std::__1::__compressed_pair.1282" = type { %"struct.std::__1::__compressed_pair_elem.1283" }
%"struct.std::__1::__compressed_pair_elem.1283" = type { %"class.blink::mojom::blink::RemoteFrameHostProxy"* }
%"class.blink::mojom::blink::RemoteFrameHostProxy" = type { %"class.blink::mojom::blink::RemoteFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::RemoteFrameHost" = type { i32 (...)** }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::RemoteFrameStub", %"class.base::WeakPtrFactory.1287" }
%"class.blink::mojom::blink::RemoteFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::RemoteFrame"* }
%"class.base::WeakPtrFactory.1287" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::AssociatedReceiver.1288" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::RemoteMainFrameStub", %"class.base::WeakPtrFactory.1289" }
%"class.blink::mojom::blink::RemoteMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::RemoteMainFrame"* }
%"class.base::WeakPtrFactory.1289" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::RemoteWindowProxy" = type { %"class.blink::WindowProxy.base", [4 x i8] }
%"class.blink::LocalWindowProxyManager" = type { %"class.blink::WindowProxyManagerImplHelper" }
%"class.blink::WindowProxyManagerImplHelper" = type { %"class.blink::WindowProxyManager" }
%"class.v8::HandleScope" = type { %"class.v8::internal::Isolate"*, i64*, i64* }
%"class.v8::internal::Isolate" = type opaque
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapHashTableBacking" = type { i8 }

$_ZN5blink14SecurityOriginD2Ev = comdat any

$_ZN5blink10TraceTraitINS_5FrameEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_11WindowProxyEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_11WindowProxyEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIPN5blink15DOMWrapperWorldEN2v85LocalINS7_6ObjectEEEEEEEmm = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_11WindowProxyEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink8internal14FinalizerTraitINS_11WindowProxyEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_11WindowProxyEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_11WindowProxyEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EEiRPS4_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_11WindowProxyEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6ExpandEPS6_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_11WindowProxyEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE12ExpandBufferEjPS6_Rb = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_11WindowProxyEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE8RehashToEPS6_jSH_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_11WindowProxyEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableIiNS1_12KeyValuePairIiNS_6MemberINS_11WindowProxyEEEEENS1_24KeyValuePairKeyExtractorENS1_7IntHashIiEENS1_18HashMapValueTraitsINS1_10HashTraitsIiEENSC_IS6_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_11WindowProxyEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_11WindowProxyEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_11WindowProxyEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_11WindowProxyEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_11WindowProxyEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/bindings/core/v8/window_proxy_manager.cc\00", align 1
@.str.1 = private unnamed_addr constant [15 x i8] c"IsMainThread()\00", align 1
@.str.2 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.3 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIPN5blink15DOMWrapperWorldEN2v85LocalINS6_6ObjectEEEEEEEPKcv = private unnamed_addr constant [112 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::pair<blink::DOMWrapperWorld *, v8::Local<v8::Object> >]\00", align 1
@.str.5 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11WindowProxyEEEPKcv = private unnamed_addr constant [66 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::WindowProxy]\00", align 1
@.str.6 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.7 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_11WindowProxyEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_11WindowProxyEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_11WindowProxyEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_11WindowProxyEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_11WindowProxyEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.8 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.9 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.10 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.11 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.12 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_11WindowProxyEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_11WindowProxyEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_11WindowProxyEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_11WindowProxyEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableIiNS_12KeyValuePairIiNS1_6MemberINS1_11WindowProxyEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSD_IS7_EEEESE_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [352 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<int, WTF::KeyValuePair<int, blink::Member<blink::WindowProxy> >, WTF::KeyValuePairKeyExtractor, WTF::IntHash<int>, WTF::HashMapValueTraits<WTF::HashTraits<int>, WTF::HashTraits<blink::Member<blink::WindowProxy> > >, WTF::HashTraits<int>, blink::HeapAllocator> >]\00", align 1

@_ZN5blink18WindowProxyManagerC1ERNS_5FrameENS0_9FrameTypeE = hidden unnamed_addr alias void (%"class.blink::WindowProxyManager"*, %"class.blink::Frame"*, i32), void (%"class.blink::WindowProxyManager"*, %"class.blink::Frame"*, i32)* @_ZN5blink18WindowProxyManagerC2ERNS_5FrameENS0_9FrameTypeE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink18WindowProxyManager5TraceEPNS_7VisitorE(%"class.blink::WindowProxyManager"*, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WindowProxyManager", %"class.blink::WindowProxyManager"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_5FrameEE5TraceEPNS_7VisitorEPKv) #5
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::WindowProxyManager", %"class.blink::WindowProxyManager"* %0, i64 0, i32 3
  %15 = bitcast %"class.blink::Member.0"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11WindowProxyEE5TraceEPNS_7VisitorEPKv) #5
  br label %24

24:                                               ; preds = %13, %18
  %25 = getelementptr inbounds %"class.blink::WindowProxyManager", %"class.blink::WindowProxyManager"* %0, i64 0, i32 4
  %26 = bitcast %"class.blink::HeapHashMap.179"* %25 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = bitcast %"class.blink::HeapHashMap.179"* %25 to i8**
  %29 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %30 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %30, i64 11
  %32 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %31, align 8
  tail call void %32(%"class.blink::Visitor"* %1, i8** %28) #5
  %33 = icmp eq i64 %27, 0
  br i1 %33, label %40, label %34

34:                                               ; preds = %24
  %35 = inttoptr i64 %27 to i8*
  %36 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %37, i64 5
  %39 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %38, align 8
  tail call void %39(%"class.blink::Visitor"* %1, i8* nonnull %35, i8* nonnull %35, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_11WindowProxyEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #5
  br label %40

40:                                               ; preds = %24, %34
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18WindowProxyManager13ClearForCloseEv(%"class.blink::WindowProxyManager"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::WindowProxyManager", %"class.blink::WindowProxyManager"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::WindowProxy"*, %"class.blink::WindowProxy"** %2, align 8
  tail call void @_ZN5blink11WindowProxy13ClearForCloseEv(%"class.blink::WindowProxy"* %3) #5
  %4 = getelementptr inbounds %"class.blink::WindowProxyManager", %"class.blink::WindowProxyManager"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %"class.blink::WindowProxyManager", %"class.blink::WindowProxyManager"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %8 = load %"struct.WTF::KeyValuePair.185"*, %"struct.WTF::KeyValuePair.185"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::WindowProxyManager", %"class.blink::WindowProxyManager"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %8, i64 %11
  br i1 %6, label %27, label %13

13:                                               ; preds = %1
  %14 = icmp eq i32 %10, 0
  br i1 %14, label %24, label %15

15:                                               ; preds = %13, %21
  %16 = phi %"struct.WTF::KeyValuePair.185"* [ %22, %21 ], [ %8, %13 ]
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %16, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = add i32 %18, 1
  %20 = icmp ult i32 %19, 2
  br i1 %20, label %21, label %24

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %16, i64 1
  %23 = icmp eq %"struct.WTF::KeyValuePair.185"* %22, %12
  br i1 %23, label %27, label %15

24:                                               ; preds = %15, %13
  %25 = phi %"struct.WTF::KeyValuePair.185"* [ %8, %13 ], [ %16, %15 ]
  %26 = icmp eq %"struct.WTF::KeyValuePair.185"* %25, %12
  br i1 %26, label %27, label %28

27:                                               ; preds = %21, %28, %43, %40, %1, %24
  ret void

28:                                               ; preds = %24, %43
  %29 = phi %"struct.WTF::KeyValuePair.185"* [ %35, %43 ], [ %25, %24 ]
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %29, i64 0, i32 1, i32 0, i32 0
  %31 = load %"class.blink::WindowProxy"*, %"class.blink::WindowProxy"** %30, align 8
  tail call void @_ZN5blink11WindowProxy13ClearForCloseEv(%"class.blink::WindowProxy"* %31) #5
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %29, i64 1
  %33 = icmp eq %"struct.WTF::KeyValuePair.185"* %32, %12
  br i1 %33, label %27, label %34

34:                                               ; preds = %28, %40
  %35 = phi %"struct.WTF::KeyValuePair.185"* [ %41, %40 ], [ %32, %28 ]
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %35, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = add i32 %37, 1
  %39 = icmp ult i32 %38, 2
  br i1 %39, label %40, label %43

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %35, i64 1
  %42 = icmp eq %"struct.WTF::KeyValuePair.185"* %41, %12
  br i1 %42, label %27, label %34

43:                                               ; preds = %34
  %44 = icmp eq %"struct.WTF::KeyValuePair.185"* %35, %12
  br i1 %44, label %27, label %28
}

declare void @_ZN5blink11WindowProxy13ClearForCloseEv(%"class.blink::WindowProxy"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18WindowProxyManager18ClearForNavigationEv(%"class.blink::WindowProxyManager"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::WindowProxyManager", %"class.blink::WindowProxyManager"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::WindowProxy"*, %"class.blink::WindowProxy"** %2, align 8
  tail call void @_ZN5blink11WindowProxy18ClearForNavigationEv(%"class.blink::WindowProxy"* %3) #5
  %4 = getelementptr inbounds %"class.blink::WindowProxyManager", %"class.blink::WindowProxyManager"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %"class.blink::WindowProxyManager", %"class.blink::WindowProxyManager"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %8 = load %"struct.WTF::KeyValuePair.185"*, %"struct.WTF::KeyValuePair.185"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::WindowProxyManager", %"class.blink::WindowProxyManager"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %8, i64 %11
  br i1 %6, label %27, label %13

13:                                               ; preds = %1
  %14 = icmp eq i32 %10, 0
  br i1 %14, label %24, label %15

15:                                               ; preds = %13, %21
  %16 = phi %"struct.WTF::KeyValuePair.185"* [ %22, %21 ], [ %8, %13 ]
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %16, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = add i32 %18, 1
  %20 = icmp ult i32 %19, 2
  br i1 %20, label %21, label %24

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %16, i64 1
  %23 = icmp eq %"struct.WTF::KeyValuePair.185"* %22, %12
  br i1 %23, label %27, label %15

24:                                               ; preds = %15, %13
  %25 = phi %"struct.WTF::KeyValuePair.185"* [ %8, %13 ], [ %16, %15 ]
  %26 = icmp eq %"struct.WTF::KeyValuePair.185"* %25, %12
  br i1 %26, label %27, label %28

27:                                               ; preds = %21, %28, %43, %40, %1, %24
  ret void

28:                                               ; preds = %24, %43
  %29 = phi %"struct.WTF::KeyValuePair.185"* [ %35, %43 ], [ %25, %24 ]
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %29, i64 0, i32 1, i32 0, i32 0
  %31 = load %"class.blink::WindowProxy"*, %"class.blink::WindowProxy"** %30, align 8
  tail call void @_ZN5blink11WindowProxy18ClearForNavigationEv(%"class.blink::WindowProxy"* %31) #5
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %29, i64 1
  %33 = icmp eq %"struct.WTF::KeyValuePair.185"* %32, %12
  br i1 %33, label %27, label %34

34:                                               ; preds = %28, %40
  %35 = phi %"struct.WTF::KeyValuePair.185"* [ %41, %40 ], [ %32, %28 ]
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %35, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = add i32 %37, 1
  %39 = icmp ult i32 %38, 2
  br i1 %39, label %40, label %43

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %35, i64 1
  %42 = icmp eq %"struct.WTF::KeyValuePair.185"* %41, %12
  br i1 %42, label %27, label %34

43:                                               ; preds = %34
  %44 = icmp eq %"struct.WTF::KeyValuePair.185"* %35, %12
  br i1 %44, label %27, label %28
}

declare void @_ZN5blink11WindowProxy18ClearForNavigationEv(%"class.blink::WindowProxy"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18WindowProxyManager12ClearForSwapEv(%"class.blink::WindowProxyManager"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::WindowProxyManager", %"class.blink::WindowProxyManager"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::WindowProxy"*, %"class.blink::WindowProxy"** %2, align 8
  tail call void @_ZN5blink11WindowProxy12ClearForSwapEv(%"class.blink::WindowProxy"* %3) #5
  %4 = getelementptr inbounds %"class.blink::WindowProxyManager", %"class.blink::WindowProxyManager"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %"class.blink::WindowProxyManager", %"class.blink::WindowProxyManager"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %8 = load %"struct.WTF::KeyValuePair.185"*, %"struct.WTF::KeyValuePair.185"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::WindowProxyManager", %"class.blink::WindowProxyManager"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %8, i64 %11
  br i1 %6, label %27, label %13

13:                                               ; preds = %1
  %14 = icmp eq i32 %10, 0
  br i1 %14, label %24, label %15

15:                                               ; preds = %13, %21
  %16 = phi %"struct.WTF::KeyValuePair.185"* [ %22, %21 ], [ %8, %13 ]
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %16, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = add i32 %18, 1
  %20 = icmp ult i32 %19, 2
  br i1 %20, label %21, label %24

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %16, i64 1
  %23 = icmp eq %"struct.WTF::KeyValuePair.185"* %22, %12
  br i1 %23, label %27, label %15

24:                                               ; preds = %15, %13
  %25 = phi %"struct.WTF::KeyValuePair.185"* [ %8, %13 ], [ %16, %15 ]
  %26 = icmp eq %"struct.WTF::KeyValuePair.185"* %25, %12
  br i1 %26, label %27, label %28

27:                                               ; preds = %21, %28, %43, %40, %1, %24
  ret void

28:                                               ; preds = %24, %43
  %29 = phi %"struct.WTF::KeyValuePair.185"* [ %35, %43 ], [ %25, %24 ]
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %29, i64 0, i32 1, i32 0, i32 0
  %31 = load %"class.blink::WindowProxy"*, %"class.blink::WindowProxy"** %30, align 8
  tail call void @_ZN5blink11WindowProxy12ClearForSwapEv(%"class.blink::WindowProxy"* %31) #5
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %29, i64 1
  %33 = icmp eq %"struct.WTF::KeyValuePair.185"* %32, %12
  br i1 %33, label %27, label %34

34:                                               ; preds = %28, %40
  %35 = phi %"struct.WTF::KeyValuePair.185"* [ %41, %40 ], [ %32, %28 ]
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %35, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = add i32 %37, 1
  %39 = icmp ult i32 %38, 2
  br i1 %39, label %40, label %43

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %35, i64 1
  %42 = icmp eq %"struct.WTF::KeyValuePair.185"* %41, %12
  br i1 %42, label %27, label %34

43:                                               ; preds = %34
  %44 = icmp eq %"struct.WTF::KeyValuePair.185"* %35, %12
  br i1 %44, label %27, label %28
}

declare void @_ZN5blink11WindowProxy12ClearForSwapEv(%"class.blink::WindowProxy"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18WindowProxyManager21ClearForV8MemoryPurgeEv(%"class.blink::WindowProxyManager"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::WindowProxyManager", %"class.blink::WindowProxyManager"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::WindowProxy"*, %"class.blink::WindowProxy"** %2, align 8
  tail call void @_ZN5blink11WindowProxy21ClearForV8MemoryPurgeEv(%"class.blink::WindowProxy"* %3) #5
  %4 = getelementptr inbounds %"class.blink::WindowProxyManager", %"class.blink::WindowProxyManager"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %"class.blink::WindowProxyManager", %"class.blink::WindowProxyManager"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %8 = load %"struct.WTF::KeyValuePair.185"*, %"struct.WTF::KeyValuePair.185"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::WindowProxyManager", %"class.blink::WindowProxyManager"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %8, i64 %11
  br i1 %6, label %27, label %13

13:                                               ; preds = %1
  %14 = icmp eq i32 %10, 0
  br i1 %14, label %24, label %15

15:                                               ; preds = %13, %21
  %16 = phi %"struct.WTF::KeyValuePair.185"* [ %22, %21 ], [ %8, %13 ]
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %16, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = add i32 %18, 1
  %20 = icmp ult i32 %19, 2
  br i1 %20, label %21, label %24

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %16, i64 1
  %23 = icmp eq %"struct.WTF::KeyValuePair.185"* %22, %12
  br i1 %23, label %27, label %15

24:                                               ; preds = %15, %13
  %25 = phi %"struct.WTF::KeyValuePair.185"* [ %8, %13 ], [ %16, %15 ]
  %26 = icmp eq %"struct.WTF::KeyValuePair.185"* %25, %12
  br i1 %26, label %27, label %28

27:                                               ; preds = %21, %28, %43, %40, %1, %24
  ret void

28:                                               ; preds = %24, %43
  %29 = phi %"struct.WTF::KeyValuePair.185"* [ %35, %43 ], [ %25, %24 ]
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %29, i64 0, i32 1, i32 0, i32 0
  %31 = load %"class.blink::WindowProxy"*, %"class.blink::WindowProxy"** %30, align 8
  tail call void @_ZN5blink11WindowProxy21ClearForV8MemoryPurgeEv(%"class.blink::WindowProxy"* %31) #5
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %29, i64 1
  %33 = icmp eq %"struct.WTF::KeyValuePair.185"* %32, %12
  br i1 %33, label %27, label %34

34:                                               ; preds = %28, %40
  %35 = phi %"struct.WTF::KeyValuePair.185"* [ %41, %40 ], [ %32, %28 ]
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %35, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = add i32 %37, 1
  %39 = icmp ult i32 %38, 2
  br i1 %39, label %40, label %43

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %35, i64 1
  %42 = icmp eq %"struct.WTF::KeyValuePair.185"* %41, %12
  br i1 %42, label %27, label %34

43:                                               ; preds = %34
  %44 = icmp eq %"struct.WTF::KeyValuePair.185"* %35, %12
  br i1 %44, label %27, label %28
}

declare void @_ZN5blink11WindowProxy21ClearForV8MemoryPurgeEv(%"class.blink::WindowProxy"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18WindowProxyManager20ReleaseGlobalProxiesERN3WTF6VectorINSt3__14pairIPNS_15DOMWrapperWorldEN2v85LocalINS7_6ObjectEEEEELj0ENS1_18PartitionAllocatorEEE(%"class.blink::WindowProxyManager"*, %"class.WTF::Vector.1215"* nocapture dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WindowProxyManager", %"class.blink::WindowProxyManager"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %16, label %7

7:                                                ; preds = %2
  %8 = zext i32 %5 to i64
  %9 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIPN5blink15DOMWrapperWorldEN2v85LocalINS7_6ObjectEEEEEEEmm(i64 %8) #5
  %10 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %9, i8* getelementptr inbounds ([112 x i8], [112 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIPN5blink15DOMWrapperWorldEN2v85LocalINS6_6ObjectEEEEEEEPKcv, i64 0, i64 0)) #5
  %11 = ptrtoint i8* %10 to i64
  %12 = bitcast %"class.WTF::Vector.1215"* %1 to i64*
  store atomic i64 %11, i64* %12 monotonic, align 8
  %13 = lshr i64 %9, 4
  %14 = trunc i64 %13 to i32
  %15 = getelementptr inbounds %"class.WTF::Vector.1215", %"class.WTF::Vector.1215"* %1, i64 0, i32 0, i32 0, i32 1
  store i32 %14, i32* %15, align 8
  br label %16

16:                                               ; preds = %2, %7
  %17 = getelementptr inbounds %"class.blink::WindowProxyManager", %"class.blink::WindowProxyManager"* %0, i64 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::WindowProxy"*, %"class.blink::WindowProxy"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::WindowProxy", %"class.blink::WindowProxy"* %18, i64 0, i32 3, i32 0
  %20 = bitcast %"class.blink::DOMWrapperWorld"** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = tail call %"class.v8::Object"* @_ZN5blink11WindowProxy18ReleaseGlobalProxyEv(%"class.blink::WindowProxy"* %18) #5
  %23 = ptrtoint %"class.v8::Object"* %22 to i64
  %24 = getelementptr inbounds %"class.WTF::Vector.1215", %"class.WTF::Vector.1215"* %1, i64 0, i32 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %"class.WTF::Vector.1215", %"class.WTF::Vector.1215"* %1, i64 0, i32 0, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %25, %27
  br i1 %28, label %29, label %68, !prof !2

29:                                               ; preds = %16
  %30 = add i32 %25, 1
  %31 = lshr i32 %25, 2
  %32 = add i32 %30, %31
  %33 = icmp ugt i32 %32, 4
  %34 = select i1 %33, i32 %32, i32 4
  %35 = icmp ugt i32 %34, %30
  %36 = select i1 %35, i32 %34, i32 %30
  %37 = icmp ult i32 %25, %36
  br i1 %37, label %38, label %68, !prof !3

38:                                               ; preds = %29
  %39 = getelementptr inbounds %"class.WTF::Vector.1215", %"class.WTF::Vector.1215"* %1, i64 0, i32 0, i32 0, i32 0
  %40 = load %"struct.std::__1::pair.1218"*, %"struct.std::__1::pair.1218"** %39, align 8
  %41 = icmp eq %"struct.std::__1::pair.1218"* %40, null
  %42 = zext i32 %36 to i64
  %43 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIPN5blink15DOMWrapperWorldEN2v85LocalINS7_6ObjectEEEEEEEmm(i64 %42) #5
  %44 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %43, i8* getelementptr inbounds ([112 x i8], [112 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIPN5blink15DOMWrapperWorldEN2v85LocalINS6_6ObjectEEEEEEEPKcv, i64 0, i64 0)) #5
  br i1 %41, label %45, label %50

45:                                               ; preds = %38
  %46 = ptrtoint i8* %44 to i64
  %47 = bitcast %"class.WTF::Vector.1215"* %1 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  %48 = lshr i64 %43, 4
  %49 = trunc i64 %48 to i32
  store i32 %49, i32* %26, align 8
  br label %68

50:                                               ; preds = %38
  %51 = lshr i64 %43, 4
  %52 = ptrtoint i8* %44 to i64
  %53 = load %"struct.std::__1::pair.1218"*, %"struct.std::__1::pair.1218"** %39, align 8
  %54 = icmp ne i8* %44, null
  %55 = icmp ne %"struct.std::__1::pair.1218"* %53, null
  %56 = and i1 %54, %55
  %57 = bitcast %"struct.std::__1::pair.1218"* %53 to i8*
  br i1 %56, label %58, label %64, !prof !3

58:                                               ; preds = %50
  %59 = load i32, i32* %24, align 4
  %60 = zext i32 %59 to i64
  %61 = shl nuw nsw i64 %60, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* nonnull align 8 %57, i64 %61, i1 false) #5
  %62 = bitcast %"class.WTF::Vector.1215"* %1 to i8**
  %63 = load i8*, i8** %62, align 8
  br label %64

64:                                               ; preds = %58, %50
  %65 = phi i8* [ %63, %58 ], [ %57, %50 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %65) #5
  %66 = bitcast %"class.WTF::Vector.1215"* %1 to i64*
  store atomic i64 %52, i64* %66 monotonic, align 8
  %67 = trunc i64 %51 to i32
  store i32 %67, i32* %26, align 8
  br label %68

68:                                               ; preds = %16, %29, %45, %64
  %69 = getelementptr inbounds %"class.WTF::Vector.1215", %"class.WTF::Vector.1215"* %1, i64 0, i32 0, i32 0, i32 0
  %70 = load %"struct.std::__1::pair.1218"*, %"struct.std::__1::pair.1218"** %69, align 8
  %71 = load i32, i32* %24, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.std::__1::pair.1218", %"struct.std::__1::pair.1218"* %70, i64 %72
  %74 = bitcast %"struct.std::__1::pair.1218"* %73 to i64*
  store i64 %21, i64* %74, align 8
  %75 = getelementptr inbounds %"struct.std::__1::pair.1218", %"struct.std::__1::pair.1218"* %70, i64 %72, i32 1
  %76 = bitcast %"class.v8::Local"* %75 to i64*
  store i64 %23, i64* %76, align 8
  %77 = load i32, i32* %24, align 4
  %78 = add i32 %77, 1
  store i32 %78, i32* %24, align 4
  %79 = load i32, i32* %3, align 4
  %80 = icmp eq i32 %79, 0
  %81 = getelementptr inbounds %"class.blink::WindowProxyManager", %"class.blink::WindowProxyManager"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %82 = load %"struct.WTF::KeyValuePair.185"*, %"struct.WTF::KeyValuePair.185"** %81, align 8
  %83 = getelementptr inbounds %"class.blink::WindowProxyManager", %"class.blink::WindowProxyManager"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %84 = load i32, i32* %83, align 8
  %85 = zext i32 %84 to i64
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %82, i64 %85
  br i1 %80, label %104, label %87

87:                                               ; preds = %68
  %88 = icmp eq i32 %84, 0
  br i1 %88, label %98, label %89

89:                                               ; preds = %87, %95
  %90 = phi %"struct.WTF::KeyValuePair.185"* [ %96, %95 ], [ %82, %87 ]
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %90, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  %93 = add i32 %92, 1
  %94 = icmp ult i32 %93, 2
  br i1 %94, label %95, label %98

95:                                               ; preds = %89
  %96 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %90, i64 1
  %97 = icmp eq %"struct.WTF::KeyValuePair.185"* %96, %86
  br i1 %97, label %104, label %89

98:                                               ; preds = %89, %87
  %99 = phi %"struct.WTF::KeyValuePair.185"* [ %82, %87 ], [ %90, %89 ]
  %100 = icmp eq %"struct.WTF::KeyValuePair.185"* %99, %86
  br i1 %100, label %104, label %101

101:                                              ; preds = %98
  %102 = bitcast %"class.WTF::Vector.1215"* %1 to i8**
  %103 = bitcast %"class.WTF::Vector.1215"* %1 to i64*
  br label %105

104:                                              ; preds = %95, %153, %174, %171, %68, %98
  ret void

105:                                              ; preds = %101, %174
  %106 = phi %"struct.WTF::KeyValuePair.185"* [ %99, %101 ], [ %166, %174 ]
  %107 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %106, i64 0, i32 1, i32 0, i32 0
  %108 = load %"class.blink::WindowProxy"*, %"class.blink::WindowProxy"** %107, align 8
  %109 = getelementptr inbounds %"class.blink::WindowProxy", %"class.blink::WindowProxy"* %108, i64 0, i32 3, i32 0
  %110 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %109, align 8
  %111 = ptrtoint %"class.blink::DOMWrapperWorld"* %110 to i64
  %112 = tail call %"class.blink::WindowProxy"* @_ZN5blink18WindowProxyManager29WindowProxyMaybeUninitializedERNS_15DOMWrapperWorldE(%"class.blink::WindowProxyManager"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %110)
  %113 = tail call %"class.v8::Object"* @_ZN5blink11WindowProxy18ReleaseGlobalProxyEv(%"class.blink::WindowProxy"* %112) #5
  %114 = ptrtoint %"class.v8::Object"* %113 to i64
  %115 = load i32, i32* %24, align 4
  %116 = load i32, i32* %26, align 8
  %117 = icmp eq i32 %115, %116
  br i1 %117, label %118, label %153, !prof !2

118:                                              ; preds = %105
  %119 = add i32 %115, 1
  %120 = lshr i32 %115, 2
  %121 = add i32 %119, %120
  %122 = icmp ugt i32 %121, 4
  %123 = select i1 %122, i32 %121, i32 4
  %124 = icmp ugt i32 %123, %119
  %125 = select i1 %124, i32 %123, i32 %119
  %126 = icmp ult i32 %115, %125
  br i1 %126, label %127, label %153, !prof !3

127:                                              ; preds = %118
  %128 = load %"struct.std::__1::pair.1218"*, %"struct.std::__1::pair.1218"** %69, align 8
  %129 = icmp eq %"struct.std::__1::pair.1218"* %128, null
  %130 = zext i32 %125 to i64
  %131 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIPN5blink15DOMWrapperWorldEN2v85LocalINS7_6ObjectEEEEEEEmm(i64 %130) #5
  %132 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %131, i8* getelementptr inbounds ([112 x i8], [112 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIPN5blink15DOMWrapperWorldEN2v85LocalINS6_6ObjectEEEEEEEPKcv, i64 0, i64 0)) #5
  br i1 %129, label %133, label %137

133:                                              ; preds = %127
  %134 = ptrtoint i8* %132 to i64
  store atomic i64 %134, i64* %103 monotonic, align 8
  %135 = lshr i64 %131, 4
  %136 = trunc i64 %135 to i32
  store i32 %136, i32* %26, align 8
  br label %153

137:                                              ; preds = %127
  %138 = lshr i64 %131, 4
  %139 = ptrtoint i8* %132 to i64
  %140 = load %"struct.std::__1::pair.1218"*, %"struct.std::__1::pair.1218"** %69, align 8
  %141 = icmp ne i8* %132, null
  %142 = icmp ne %"struct.std::__1::pair.1218"* %140, null
  %143 = and i1 %141, %142
  %144 = bitcast %"struct.std::__1::pair.1218"* %140 to i8*
  br i1 %143, label %145, label %150, !prof !3

145:                                              ; preds = %137
  %146 = load i32, i32* %24, align 4
  %147 = zext i32 %146 to i64
  %148 = shl nuw nsw i64 %147, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %132, i8* nonnull align 8 %144, i64 %148, i1 false) #5
  %149 = load i8*, i8** %102, align 8
  br label %150

150:                                              ; preds = %145, %137
  %151 = phi i8* [ %149, %145 ], [ %144, %137 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %151) #5
  store atomic i64 %139, i64* %103 monotonic, align 8
  %152 = trunc i64 %138 to i32
  store i32 %152, i32* %26, align 8
  br label %153

153:                                              ; preds = %105, %118, %133, %150
  %154 = load %"struct.std::__1::pair.1218"*, %"struct.std::__1::pair.1218"** %69, align 8
  %155 = load i32, i32* %24, align 4
  %156 = zext i32 %155 to i64
  %157 = getelementptr inbounds %"struct.std::__1::pair.1218", %"struct.std::__1::pair.1218"* %154, i64 %156
  %158 = bitcast %"struct.std::__1::pair.1218"* %157 to i64*
  store i64 %111, i64* %158, align 8
  %159 = getelementptr inbounds %"struct.std::__1::pair.1218", %"struct.std::__1::pair.1218"* %154, i64 %156, i32 1
  %160 = bitcast %"class.v8::Local"* %159 to i64*
  store i64 %114, i64* %160, align 8
  %161 = load i32, i32* %24, align 4
  %162 = add i32 %161, 1
  store i32 %162, i32* %24, align 4
  %163 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %106, i64 1
  %164 = icmp eq %"struct.WTF::KeyValuePair.185"* %163, %86
  br i1 %164, label %104, label %165

165:                                              ; preds = %153, %171
  %166 = phi %"struct.WTF::KeyValuePair.185"* [ %172, %171 ], [ %163, %153 ]
  %167 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %166, i64 0, i32 0
  %168 = load i32, i32* %167, align 4
  %169 = add i32 %168, 1
  %170 = icmp ult i32 %169, 2
  br i1 %170, label %171, label %174

171:                                              ; preds = %165
  %172 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %166, i64 1
  %173 = icmp eq %"struct.WTF::KeyValuePair.185"* %172, %86
  br i1 %173, label %104, label %165

174:                                              ; preds = %165
  %175 = icmp eq %"struct.WTF::KeyValuePair.185"* %166, %86
  br i1 %175, label %104, label %105
}

declare %"class.v8::Object"* @_ZN5blink11WindowProxy18ReleaseGlobalProxyEv(%"class.blink::WindowProxy"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::WindowProxy"* @_ZN5blink18WindowProxyManager29WindowProxyMaybeUninitializedERNS_15DOMWrapperWorldE(%"class.blink::WindowProxyManager"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::WindowProxy"*, align 8
  %4 = alloca i32, align 4
  %5 = bitcast %"class.blink::WindowProxy"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #5
  store %"class.blink::WindowProxy"* null, %"class.blink::WindowProxy"** %3, align 8
  %6 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %1, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %15

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::WindowProxyManager", %"class.blink::WindowProxyManager"* %0, i64 0, i32 3, i32 0, i32 0
  %11 = bitcast %"class.blink::WindowProxy"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.blink::WindowProxy"** %3 to i64*
  store i64 %12, i64* %13, align 8
  %14 = inttoptr i64 %12 to %"class.blink::WindowProxy"*
  br label %115

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.blink::WindowProxyManager", %"class.blink::WindowProxyManager"* %0, i64 0, i32 4, i32 0
  %17 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %1, i64 0, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = getelementptr inbounds %"class.WTF::HashMap.182", %"class.WTF::HashMap.182"* %16, i64 0, i32 0, i32 0
  %20 = load %"struct.WTF::KeyValuePair.185"*, %"struct.WTF::KeyValuePair.185"** %19, align 8
  %21 = icmp eq %"struct.WTF::KeyValuePair.185"* %20, null
  %22 = getelementptr inbounds %"class.blink::WindowProxyManager", %"class.blink::WindowProxyManager"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %23 = load i32, i32* %22, align 8
  br i1 %21, label %79, label %24

24:                                               ; preds = %15
  %25 = add i32 %23, -1
  %26 = zext i32 %25 to i64
  %27 = shl i32 %18, 15
  %28 = xor i32 %27, -1
  %29 = add i32 %18, %28
  %30 = lshr i32 %29, 10
  %31 = xor i32 %30, %29
  %32 = mul i32 %31, 9
  %33 = lshr i32 %32, 6
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 11
  %36 = xor i32 %35, -1
  %37 = add i32 %34, %36
  %38 = lshr i32 %37, 16
  %39 = xor i32 %38, %37
  %40 = and i32 %39, %25
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %20, i64 %41
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %42, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, %18
  br i1 %45, label %74, label %46

46:                                               ; preds = %24
  %47 = xor i32 %39, -1
  %48 = lshr i32 %37, 23
  %49 = add i32 %48, %47
  %50 = shl i32 %49, 12
  %51 = xor i32 %50, %49
  %52 = lshr i32 %51, 7
  %53 = xor i32 %52, %51
  %54 = shl i32 %53, 2
  %55 = xor i32 %54, %53
  %56 = lshr i32 %55, 20
  %57 = xor i32 %56, %55
  %58 = or i32 %57, 1
  %59 = zext i32 %58 to i64
  br label %60

60:                                               ; preds = %65, %46
  %61 = phi i32 [ %44, %46 ], [ %72, %65 ]
  %62 = phi i64 [ %41, %46 ], [ %69, %65 ]
  %63 = phi i64 [ 0, %46 ], [ %67, %65 ]
  %64 = icmp eq i32 %61, 0
  br i1 %64, label %79, label %65

65:                                               ; preds = %60
  %66 = icmp eq i64 %63, 0
  %67 = select i1 %66, i64 %59, i64 %63
  %68 = add i64 %67, %62
  %69 = and i64 %68, %26
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %20, i64 %69
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %70, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, %18
  br i1 %73, label %74, label %60

74:                                               ; preds = %65, %24
  %75 = phi %"struct.WTF::KeyValuePair.185"* [ %42, %24 ], [ %70, %65 ]
  %76 = icmp eq %"struct.WTF::KeyValuePair.185"* %75, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %74
  %78 = zext i32 %23 to i64
  br label %82

79:                                               ; preds = %60, %74, %15
  %80 = zext i32 %23 to i64
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %20, i64 %80
  br label %82

82:                                               ; preds = %77, %79
  %83 = phi i64 [ %78, %77 ], [ %80, %79 ]
  %84 = phi %"struct.WTF::KeyValuePair.185"* [ %75, %77 ], [ %81, %79 ]
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %20, i64 %83
  %86 = icmp eq %"struct.WTF::KeyValuePair.185"* %84, %85
  br i1 %86, label %93, label %87

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %84, i64 0, i32 1, i32 0, i32 0
  %89 = bitcast %"class.blink::WindowProxy"** %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = bitcast %"class.blink::WindowProxy"** %3 to i64*
  store i64 %90, i64* %91, align 8
  %92 = inttoptr i64 %90 to %"class.blink::WindowProxy"*
  br label %115

93:                                               ; preds = %82
  %94 = tail call %"class.blink::WindowProxy"* @_ZN5blink18WindowProxyManager17CreateWindowProxyERNS_15DOMWrapperWorldE(%"class.blink::WindowProxyManager"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1)
  store %"class.blink::WindowProxy"* %94, %"class.blink::WindowProxy"** %3, align 8
  %95 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %95) #5
  %96 = load i32, i32* %17, align 8
  store i32 %96, i32* %4, align 4
  %97 = getelementptr inbounds %"class.WTF::HashMap.182", %"class.WTF::HashMap.182"* %16, i64 0, i32 0
  %98 = call { %"struct.WTF::KeyValuePair.185"*, i8 } @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_11WindowProxyEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EEiRPS4_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.183"* %97, i32* nonnull dereferenceable(4) %4, %"class.blink::WindowProxy"** nonnull dereferenceable(8) %3) #5
  %99 = extractvalue { %"struct.WTF::KeyValuePair.185"*, i8 } %98, 1
  %100 = and i8 %99, 1
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %102, label %113

102:                                              ; preds = %93
  %103 = extractvalue { %"struct.WTF::KeyValuePair.185"*, i8 } %98, 0
  %104 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %103, i64 0, i32 1
  %105 = load %"class.blink::WindowProxy"*, %"class.blink::WindowProxy"** %3, align 8
  %106 = ptrtoint %"class.blink::WindowProxy"* %105 to i64
  %107 = bitcast %"class.blink::Member.0"* %104 to i64*
  store atomic i64 %106, i64* %107 monotonic, align 8
  %108 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %113, label %110

110:                                              ; preds = %102
  %111 = bitcast %"class.blink::WindowProxy"* %105 to i8*
  %112 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %111) #5
  br label %113

113:                                              ; preds = %93, %102, %110
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %95) #5
  %114 = load %"class.blink::WindowProxy"*, %"class.blink::WindowProxy"** %3, align 8
  br label %115

115:                                              ; preds = %87, %113, %9
  %116 = phi %"class.blink::WindowProxy"* [ %92, %87 ], [ %114, %113 ], [ %14, %9 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #5
  ret %"class.blink::WindowProxy"* %116
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18WindowProxyManager16SetGlobalProxiesERKN3WTF6VectorINSt3__14pairIPNS_15DOMWrapperWorldEN2v85LocalINS7_6ObjectEEEEELj0ENS1_18PartitionAllocatorEEE(%"class.blink::WindowProxyManager"*, %"class.WTF::Vector.1215"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1215", %"class.WTF::Vector.1215"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::pair.1218"*, %"struct.std::__1::pair.1218"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::Vector.1215", %"class.WTF::Vector.1215"* %1, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"struct.std::__1::pair.1218", %"struct.std::__1::pair.1218"* %4, i64 %7
  %9 = icmp eq i32 %6, 0
  br i1 %9, label %10, label %14

10:                                               ; preds = %14, %2
  %11 = getelementptr inbounds %"class.blink::WindowProxyManager", %"class.blink::WindowProxyManager"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %36, label %23

14:                                               ; preds = %2, %14
  %15 = phi %"struct.std::__1::pair.1218"* [ %21, %14 ], [ %4, %2 ]
  %16 = getelementptr inbounds %"struct.std::__1::pair.1218", %"struct.std::__1::pair.1218"* %15, i64 0, i32 0
  %17 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %16, align 8
  %18 = tail call %"class.blink::WindowProxy"* @_ZN5blink18WindowProxyManager29WindowProxyMaybeUninitializedERNS_15DOMWrapperWorldE(%"class.blink::WindowProxyManager"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %17)
  %19 = getelementptr inbounds %"struct.std::__1::pair.1218", %"struct.std::__1::pair.1218"* %15, i64 0, i32 1, i32 0
  %20 = load %"class.v8::Object"*, %"class.v8::Object"** %19, align 8
  tail call void @_ZN5blink11WindowProxy14SetGlobalProxyEN2v85LocalINS1_6ObjectEEE(%"class.blink::WindowProxy"* %18, %"class.v8::Object"* %20) #5
  %21 = getelementptr inbounds %"struct.std::__1::pair.1218", %"struct.std::__1::pair.1218"* %15, i64 1
  %22 = icmp eq %"struct.std::__1::pair.1218"* %21, %8
  br i1 %22, label %10, label %14

23:                                               ; preds = %10
  %24 = load %"struct.std::__1::pair.1218"*, %"struct.std::__1::pair.1218"** %3, align 8
  %25 = load i32, i32* %5, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"struct.std::__1::pair.1218", %"struct.std::__1::pair.1218"* %24, i64 %26
  %28 = icmp eq i32 %25, 0
  br i1 %28, label %36, label %29

29:                                               ; preds = %23, %29
  %30 = phi %"struct.std::__1::pair.1218"* [ %34, %29 ], [ %24, %23 ]
  %31 = getelementptr inbounds %"struct.std::__1::pair.1218", %"struct.std::__1::pair.1218"* %30, i64 0, i32 0
  %32 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %31, align 8
  %33 = tail call %"class.blink::WindowProxy"* @_ZN5blink18WindowProxyManager29WindowProxyMaybeUninitializedERNS_15DOMWrapperWorldE(%"class.blink::WindowProxyManager"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %32)
  tail call void @_ZN5blink11WindowProxy18InitializeIfNeededEv(%"class.blink::WindowProxy"* %33) #5
  %34 = getelementptr inbounds %"struct.std::__1::pair.1218", %"struct.std::__1::pair.1218"* %30, i64 1
  %35 = icmp eq %"struct.std::__1::pair.1218"* %34, %27
  br i1 %35, label %36, label %29

36:                                               ; preds = %29, %23, %10
  ret void
}

declare void @_ZN5blink11WindowProxy14SetGlobalProxyEN2v85LocalINS1_6ObjectEEE(%"class.blink::WindowProxy"*, %"class.v8::Object"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN5blink11WindowProxy18InitializeIfNeededEv(%"class.blink::WindowProxy"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18WindowProxyManager29ResetIsolatedWorldsForTestingEv(%"class.blink::WindowProxyManager"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::WindowProxyManager", %"class.blink::WindowProxyManager"* %0, i64 0, i32 4, i32 0
  %3 = getelementptr inbounds %"class.blink::WindowProxyManager", %"class.blink::WindowProxyManager"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  %6 = getelementptr inbounds %"class.WTF::HashMap.182", %"class.WTF::HashMap.182"* %2, i64 0, i32 0, i32 0
  %7 = load %"struct.WTF::KeyValuePair.185"*, %"struct.WTF::KeyValuePair.185"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::WindowProxyManager", %"class.blink::WindowProxyManager"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %7, i64 %10
  br i1 %5, label %28, label %12

12:                                               ; preds = %1
  %13 = icmp eq i32 %9, 0
  br i1 %13, label %23, label %14

14:                                               ; preds = %12, %20
  %15 = phi %"struct.WTF::KeyValuePair.185"* [ %21, %20 ], [ %7, %12 ]
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %15, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = add i32 %17, 1
  %19 = icmp ult i32 %18, 2
  br i1 %19, label %20, label %23

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %15, i64 1
  %22 = icmp eq %"struct.WTF::KeyValuePair.185"* %21, %11
  br i1 %22, label %28, label %14

23:                                               ; preds = %14, %12
  %24 = phi %"struct.WTF::KeyValuePair.185"* [ %7, %12 ], [ %15, %14 ]
  %25 = icmp eq %"struct.WTF::KeyValuePair.185"* %24, %11
  br i1 %25, label %28, label %35

26:                                               ; preds = %35, %50, %47
  %27 = load %"struct.WTF::KeyValuePair.185"*, %"struct.WTF::KeyValuePair.185"** %6, align 8
  br label %28

28:                                               ; preds = %20, %1, %26, %23
  %29 = phi %"struct.WTF::KeyValuePair.185"* [ %27, %26 ], [ %7, %23 ], [ %7, %1 ], [ %7, %20 ]
  %30 = icmp eq %"struct.WTF::KeyValuePair.185"* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %28
  %32 = bitcast %"struct.WTF::KeyValuePair.185"* %29 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %32) #5
  %33 = bitcast %"class.WTF::HashMap.182"* %2 to i64*
  store atomic i64 0, i64* %33 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %3, align 4
  br label %34

34:                                               ; preds = %28, %31
  ret void

35:                                               ; preds = %23, %50
  %36 = phi %"struct.WTF::KeyValuePair.185"* [ %42, %50 ], [ %24, %23 ]
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %36, i64 0, i32 1, i32 0, i32 0
  %38 = load %"class.blink::WindowProxy"*, %"class.blink::WindowProxy"** %37, align 8
  tail call void @_ZN5blink11WindowProxy13ClearForCloseEv(%"class.blink::WindowProxy"* %38) #5
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %36, i64 1
  %40 = icmp eq %"struct.WTF::KeyValuePair.185"* %39, %11
  br i1 %40, label %26, label %41

41:                                               ; preds = %35, %47
  %42 = phi %"struct.WTF::KeyValuePair.185"* [ %48, %47 ], [ %39, %35 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %42, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = add i32 %44, 1
  %46 = icmp ult i32 %45, 2
  br i1 %46, label %47, label %50

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %42, i64 1
  %49 = icmp eq %"struct.WTF::KeyValuePair.185"* %48, %11
  br i1 %49, label %26, label %41

50:                                               ; preds = %41
  %51 = icmp eq %"struct.WTF::KeyValuePair.185"* %42, %11
  br i1 %51, label %26, label %35
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18WindowProxyManagerC2ERNS_5FrameENS0_9FrameTypeE(%"class.blink::WindowProxyManager"* nocapture, %"class.blink::Frame"* dereferenceable(392), i32) unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.blink::WindowProxyManager", %"class.blink::WindowProxyManager"* %0, i64 0, i32 0
  %6 = tail call %"class.v8::Isolate"* @_ZN5blink16V8PerIsolateData17MainThreadIsolateEv() #5
  store %"class.v8::Isolate"* %6, %"class.v8::Isolate"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::WindowProxyManager", %"class.blink::WindowProxyManager"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::Frame"* %1, %"class.blink::Frame"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::WindowProxyManager", %"class.blink::WindowProxyManager"* %0, i64 0, i32 2
  store i32 %2, i32* %8, align 8
  %9 = tail call dereferenceable(32) %"class.blink::DOMWrapperWorld"* @_ZN5blink15DOMWrapperWorld9MainWorldEv() #5
  %10 = tail call %"class.blink::WindowProxy"* @_ZN5blink18WindowProxyManager17CreateWindowProxyERNS_15DOMWrapperWorldE(%"class.blink::WindowProxyManager"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %9)
  %11 = getelementptr inbounds %"class.blink::WindowProxyManager", %"class.blink::WindowProxyManager"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::WindowProxy"* %10, %"class.blink::WindowProxy"** %11, align 8
  %12 = getelementptr inbounds %"class.blink::WindowProxyManager", %"class.blink::WindowProxyManager"* %0, i64 0, i32 4
  %13 = bitcast %"class.blink::HeapHashMap.179"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 20, i1 false) #5
  %14 = tail call zeroext i1 @_ZN3WTF12IsMainThreadEv() #5
  br i1 %14, label %18, label %15

15:                                               ; preds = %3
  %16 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #5
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str, i64 0, i64 0), i32 97, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0)) #5
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #5
  br label %18

18:                                               ; preds = %3, %15
  ret void
}

declare %"class.v8::Isolate"* @_ZN5blink16V8PerIsolateData17MainThreadIsolateEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::WindowProxy"* @_ZN5blink18WindowProxyManager17CreateWindowProxyERNS_15DOMWrapperWorldE(%"class.blink::WindowProxyManager"* nocapture readonly, %"class.blink::DOMWrapperWorld"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WindowProxyManager", %"class.blink::WindowProxyManager"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %36 [
    i32 0, label %5
    i32 1, label %17
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::WindowProxyManager", %"class.blink::WindowProxyManager"* %0, i64 0, i32 0
  %7 = getelementptr inbounds %"class.blink::WindowProxyManager", %"class.blink::WindowProxyManager"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = bitcast %"class.blink::Frame"** %7 to %"class.blink::LocalFrame"**
  %9 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %8, align 8
  %10 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_11WindowProxyEEEPhm(i64 64) #5
  %11 = bitcast i8* %10 to %"class.blink::LocalWindowProxy"*
  %12 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %6, align 8
  %13 = icmp eq %"class.blink::DOMWrapperWorld"* %1, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %1, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %15) #5
  br label %16

16:                                               ; preds = %5, %14
  tail call void @_ZN5blink16LocalWindowProxyC1EPN2v87IsolateERNS_10LocalFrameE13scoped_refptrINS_15DOMWrapperWorldEE(%"class.blink::LocalWindowProxy"* %11, %"class.v8::Isolate"* %12, %"class.blink::LocalFrame"* dereferenceable(1176) %9, %"class.blink::DOMWrapperWorld"* %1) #5
  br label %29

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.blink::WindowProxyManager", %"class.blink::WindowProxyManager"* %0, i64 0, i32 0
  %19 = getelementptr inbounds %"class.blink::WindowProxyManager", %"class.blink::WindowProxyManager"* %0, i64 0, i32 1, i32 0, i32 0
  %20 = bitcast %"class.blink::Frame"** %19 to %"class.blink::RemoteFrame"**
  %21 = load %"class.blink::RemoteFrame"*, %"class.blink::RemoteFrame"** %20, align 8
  %22 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_11WindowProxyEEEPhm(i64 48) #5
  %23 = bitcast i8* %22 to %"class.blink::RemoteWindowProxy"*
  %24 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %18, align 8
  %25 = icmp eq %"class.blink::DOMWrapperWorld"* %1, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %17
  %27 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %1, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %27) #5
  br label %28

28:                                               ; preds = %17, %26
  tail call void @_ZN5blink17RemoteWindowProxyC1EPN2v87IsolateERNS_11RemoteFrameE13scoped_refptrINS_15DOMWrapperWorldEE(%"class.blink::RemoteWindowProxy"* %23, %"class.v8::Isolate"* %24, %"class.blink::RemoteFrame"* dereferenceable(2120) %21, %"class.blink::DOMWrapperWorld"* %1) #5
  br label %29

29:                                               ; preds = %16, %28
  %30 = phi i8* [ %10, %16 ], [ %22, %28 ]
  %31 = getelementptr inbounds i8, i8* %30, i64 -4
  %32 = bitcast i8* %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = or i16 %33, 1
  store atomic i16 %34, i16* %32 release, align 2
  %35 = bitcast i8* %30 to %"class.blink::WindowProxy"*
  br label %36

36:                                               ; preds = %29, %2
  %37 = phi %"class.blink::WindowProxy"* [ null, %2 ], [ %35, %29 ]
  ret %"class.blink::WindowProxy"* %37
}

declare dereferenceable(32) %"class.blink::DOMWrapperWorld"* @_ZN5blink15DOMWrapperWorld9MainWorldEv() local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF12IsMainThreadEv() local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23LocalWindowProxyManager14UpdateDocumentEv(%"class.blink::LocalWindowProxyManager"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LocalWindowProxyManager", %"class.blink::LocalWindowProxyManager"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %3 = bitcast %"class.blink::WindowProxy"** %2 to %"class.blink::LocalWindowProxy"**
  %4 = load %"class.blink::LocalWindowProxy"*, %"class.blink::LocalWindowProxy"** %3, align 8
  tail call void @_ZN5blink16LocalWindowProxy14UpdateDocumentEv(%"class.blink::LocalWindowProxy"* %4) #5
  %5 = getelementptr inbounds %"class.blink::LocalWindowProxyManager", %"class.blink::LocalWindowProxyManager"* %0, i64 0, i32 0, i32 0, i32 4, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  %8 = getelementptr inbounds %"class.blink::LocalWindowProxyManager", %"class.blink::LocalWindowProxyManager"* %0, i64 0, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %9 = load %"struct.WTF::KeyValuePair.185"*, %"struct.WTF::KeyValuePair.185"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::LocalWindowProxyManager", %"class.blink::LocalWindowProxyManager"* %0, i64 0, i32 0, i32 0, i32 4, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %9, i64 %12
  br i1 %7, label %28, label %14

14:                                               ; preds = %1
  %15 = icmp eq i32 %11, 0
  br i1 %15, label %25, label %16

16:                                               ; preds = %14, %22
  %17 = phi %"struct.WTF::KeyValuePair.185"* [ %23, %22 ], [ %9, %14 ]
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %17, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = add i32 %19, 1
  %21 = icmp ult i32 %20, 2
  br i1 %21, label %22, label %25

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %17, i64 1
  %24 = icmp eq %"struct.WTF::KeyValuePair.185"* %23, %13
  br i1 %24, label %28, label %16

25:                                               ; preds = %16, %14
  %26 = phi %"struct.WTF::KeyValuePair.185"* [ %9, %14 ], [ %17, %16 ]
  %27 = icmp eq %"struct.WTF::KeyValuePair.185"* %26, %13
  br i1 %27, label %28, label %29

28:                                               ; preds = %22, %29, %45, %42, %1, %25
  ret void

29:                                               ; preds = %25, %45
  %30 = phi %"struct.WTF::KeyValuePair.185"* [ %37, %45 ], [ %26, %25 ]
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %30, i64 0, i32 1, i32 0, i32 0
  %32 = bitcast %"class.blink::WindowProxy"** %31 to %"class.blink::LocalWindowProxy"**
  %33 = load %"class.blink::LocalWindowProxy"*, %"class.blink::LocalWindowProxy"** %32, align 8
  tail call void @_ZN5blink16LocalWindowProxy14UpdateDocumentEv(%"class.blink::LocalWindowProxy"* %33) #5
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %30, i64 1
  %35 = icmp eq %"struct.WTF::KeyValuePair.185"* %34, %13
  br i1 %35, label %28, label %36

36:                                               ; preds = %29, %42
  %37 = phi %"struct.WTF::KeyValuePair.185"* [ %43, %42 ], [ %34, %29 ]
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %37, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = add i32 %39, 1
  %41 = icmp ult i32 %40, 2
  br i1 %41, label %42, label %45

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %37, i64 1
  %44 = icmp eq %"struct.WTF::KeyValuePair.185"* %43, %13
  br i1 %44, label %28, label %36

45:                                               ; preds = %36
  %46 = icmp eq %"struct.WTF::KeyValuePair.185"* %37, %13
  br i1 %46, label %28, label %29
}

declare void @_ZN5blink16LocalWindowProxy14UpdateDocumentEv(%"class.blink::LocalWindowProxy"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23LocalWindowProxyManager20UpdateSecurityOriginEPKNS_14SecurityOriginE(%"class.blink::LocalWindowProxyManager"* nocapture readonly, %"class.blink::SecurityOrigin"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LocalWindowProxyManager", %"class.blink::LocalWindowProxyManager"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %4 = bitcast %"class.blink::WindowProxy"** %3 to %"class.blink::LocalWindowProxy"**
  %5 = load %"class.blink::LocalWindowProxy"*, %"class.blink::LocalWindowProxy"** %4, align 8
  tail call void @_ZN5blink16LocalWindowProxy20UpdateSecurityOriginEPKNS_14SecurityOriginE(%"class.blink::LocalWindowProxy"* %5, %"class.blink::SecurityOrigin"* %1) #5
  %6 = getelementptr inbounds %"class.blink::LocalWindowProxyManager", %"class.blink::LocalWindowProxyManager"* %0, i64 0, i32 0, i32 0, i32 4, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.blink::LocalWindowProxyManager", %"class.blink::LocalWindowProxyManager"* %0, i64 0, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %10 = load %"struct.WTF::KeyValuePair.185"*, %"struct.WTF::KeyValuePair.185"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::LocalWindowProxyManager", %"class.blink::LocalWindowProxyManager"* %0, i64 0, i32 0, i32 0, i32 4, i32 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %10, i64 %13
  br i1 %8, label %31, label %15

15:                                               ; preds = %2
  %16 = icmp eq i32 %12, 0
  br i1 %16, label %26, label %17

17:                                               ; preds = %15, %23
  %18 = phi %"struct.WTF::KeyValuePair.185"* [ %24, %23 ], [ %10, %15 ]
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %18, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = add i32 %20, 1
  %22 = icmp ult i32 %21, 2
  br i1 %22, label %23, label %26

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %18, i64 1
  %25 = icmp eq %"struct.WTF::KeyValuePair.185"* %24, %14
  br i1 %25, label %31, label %17

26:                                               ; preds = %17, %15
  %27 = phi %"struct.WTF::KeyValuePair.185"* [ %10, %15 ], [ %18, %17 ]
  %28 = icmp eq %"struct.WTF::KeyValuePair.185"* %27, %14
  br i1 %28, label %31, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 12
  br label %32

31:                                               ; preds = %23, %48, %60, %57, %2, %26
  ret void

32:                                               ; preds = %29, %60
  %33 = phi %"struct.WTF::KeyValuePair.185"* [ %27, %29 ], [ %52, %60 ]
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %33, i64 0, i32 1, i32 0, i32 0
  %35 = load %"class.blink::WindowProxy"*, %"class.blink::WindowProxy"** %34, align 8
  %36 = bitcast %"class.blink::WindowProxy"* %35 to %"class.blink::LocalWindowProxy"*
  %37 = getelementptr inbounds %"class.blink::WindowProxy", %"class.blink::WindowProxy"* %35, i64 0, i32 3, i32 0
  %38 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %37, align 8
  %39 = tail call %"class.blink::SecurityOrigin"* @_ZN5blink15DOMWrapperWorld27IsolatedWorldSecurityOriginERKN4base16UnguessableTokenE(%"class.blink::DOMWrapperWorld"* %38, %"class.base::UnguessableToken"* dereferenceable(16) %30) #5
  tail call void @_ZN5blink16LocalWindowProxy20UpdateSecurityOriginEPKNS_14SecurityOriginE(%"class.blink::LocalWindowProxy"* %36, %"class.blink::SecurityOrigin"* %39) #5
  %40 = icmp eq %"class.blink::SecurityOrigin"* %39, null
  br i1 %40, label %48, label %41

41:                                               ; preds = %32
  %42 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %39, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %42) #5
  %43 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %39, i64 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %48

46:                                               ; preds = %41
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %39) #5
  %47 = bitcast %"class.blink::SecurityOrigin"* %39 to i8*
  tail call void @free(i8* %47) #5
  br label %48

48:                                               ; preds = %32, %41, %46
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %33, i64 1
  %50 = icmp eq %"struct.WTF::KeyValuePair.185"* %49, %14
  br i1 %50, label %31, label %51

51:                                               ; preds = %48, %57
  %52 = phi %"struct.WTF::KeyValuePair.185"* [ %58, %57 ], [ %49, %48 ]
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %52, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = add i32 %54, 1
  %56 = icmp ult i32 %55, 2
  br i1 %56, label %57, label %60

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %52, i64 1
  %59 = icmp eq %"struct.WTF::KeyValuePair.185"* %58, %14
  br i1 %59, label %31, label %51

60:                                               ; preds = %51
  %61 = icmp eq %"struct.WTF::KeyValuePair.185"* %52, %14
  br i1 %61, label %31, label %32
}

declare void @_ZN5blink16LocalWindowProxy20UpdateSecurityOriginEPKNS_14SecurityOriginE(%"class.blink::LocalWindowProxy"*, %"class.blink::SecurityOrigin"*) local_unnamed_addr #1

declare %"class.blink::SecurityOrigin"* @_ZN5blink15DOMWrapperWorld27IsolatedWorldSecurityOriginERKN4base16UnguessableTokenE(%"class.blink::DOMWrapperWorld"*, %"class.base::UnguessableToken"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23LocalWindowProxyManager23SetAbortScriptExecutionEPFvPN2v87IsolateENS1_5LocalINS1_7ContextEEEE(%"class.blink::LocalWindowProxyManager"* nocapture readonly, void (%"class.v8::Isolate"*, %"class.v8::Context"*)*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::HandleScope", align 8
  %4 = bitcast %"class.v8::HandleScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #5
  %5 = getelementptr inbounds %"class.blink::LocalWindowProxyManager", %"class.blink::LocalWindowProxyManager"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = bitcast %"class.v8::HandleScope"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 24, i1 false)
  %7 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %5, align 8
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %3, %"class.v8::Isolate"* %7) #5
  %8 = getelementptr inbounds %"class.blink::LocalWindowProxyManager", %"class.blink::LocalWindowProxyManager"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %9 = bitcast %"class.blink::WindowProxy"** %8 to %"class.blink::LocalWindowProxy"**
  %10 = load %"class.blink::LocalWindowProxy"*, %"class.blink::LocalWindowProxy"** %9, align 8
  call void @_ZN5blink16LocalWindowProxy23SetAbortScriptExecutionEPFvPN2v87IsolateENS1_5LocalINS1_7ContextEEEE(%"class.blink::LocalWindowProxy"* %10, void (%"class.v8::Isolate"*, %"class.v8::Context"*)* %1) #5
  %11 = getelementptr inbounds %"class.blink::LocalWindowProxyManager", %"class.blink::LocalWindowProxyManager"* %0, i64 0, i32 0, i32 0, i32 4, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.blink::LocalWindowProxyManager", %"class.blink::LocalWindowProxyManager"* %0, i64 0, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %15 = load %"struct.WTF::KeyValuePair.185"*, %"struct.WTF::KeyValuePair.185"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::LocalWindowProxyManager", %"class.blink::LocalWindowProxyManager"* %0, i64 0, i32 0, i32 0, i32 4, i32 0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %15, i64 %18
  br i1 %13, label %34, label %20

20:                                               ; preds = %2
  %21 = icmp eq i32 %17, 0
  br i1 %21, label %31, label %22

22:                                               ; preds = %20, %28
  %23 = phi %"struct.WTF::KeyValuePair.185"* [ %29, %28 ], [ %15, %20 ]
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %23, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = add i32 %25, 1
  %27 = icmp ult i32 %26, 2
  br i1 %27, label %28, label %31

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %23, i64 1
  %30 = icmp eq %"struct.WTF::KeyValuePair.185"* %29, %19
  br i1 %30, label %34, label %22

31:                                               ; preds = %22, %20
  %32 = phi %"struct.WTF::KeyValuePair.185"* [ %15, %20 ], [ %23, %22 ]
  %33 = icmp eq %"struct.WTF::KeyValuePair.185"* %32, %19
  br i1 %33, label %34, label %35

34:                                               ; preds = %28, %35, %51, %48, %2, %31
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %3) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #5
  ret void

35:                                               ; preds = %31, %51
  %36 = phi %"struct.WTF::KeyValuePair.185"* [ %43, %51 ], [ %32, %31 ]
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %36, i64 0, i32 1, i32 0, i32 0
  %38 = bitcast %"class.blink::WindowProxy"** %37 to %"class.blink::LocalWindowProxy"**
  %39 = load %"class.blink::LocalWindowProxy"*, %"class.blink::LocalWindowProxy"** %38, align 8
  call void @_ZN5blink16LocalWindowProxy23SetAbortScriptExecutionEPFvPN2v87IsolateENS1_5LocalINS1_7ContextEEEE(%"class.blink::LocalWindowProxy"* %39, void (%"class.v8::Isolate"*, %"class.v8::Context"*)* %1) #5
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %36, i64 1
  %41 = icmp eq %"struct.WTF::KeyValuePair.185"* %40, %19
  br i1 %41, label %34, label %42

42:                                               ; preds = %35, %48
  %43 = phi %"struct.WTF::KeyValuePair.185"* [ %49, %48 ], [ %40, %35 ]
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %43, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = add i32 %45, 1
  %47 = icmp ult i32 %46, 2
  br i1 %47, label %48, label %51

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %43, i64 1
  %50 = icmp eq %"struct.WTF::KeyValuePair.185"* %49, %19
  br i1 %50, label %34, label %42

51:                                               ; preds = %42
  %52 = icmp eq %"struct.WTF::KeyValuePair.185"* %43, %19
  br i1 %52, label %34, label %35
}

declare void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"*, %"class.v8::Isolate"*) unnamed_addr #1

declare void @_ZN5blink16LocalWindowProxy23SetAbortScriptExecutionEPFvPN2v87IsolateENS1_5LocalINS1_7ContextEEEE(%"class.blink::LocalWindowProxy"*, void (%"class.v8::Isolate"*, %"class.v8::Context"*)*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"*) unnamed_addr #3

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 13, i32 0
  %3 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %2, align 8
  %4 = icmp eq %"class.blink::SecurityOrigin"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #5
  %7 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %3) #5
  %11 = bitcast %"class.blink::SecurityOrigin"* %3 to i8*
  tail call void @free(i8* %11) #5
  br label %12

12:                                               ; preds = %5, %10, %1
  %13 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 3, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #5
  br label %29

29:                                               ; preds = %12, %25, %28
  %30 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 2, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #5
  br label %46

46:                                               ; preds = %29, %42, %45
  %47 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 1, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #5
  br label %63

63:                                               ; preds = %46, %59, %62
  ret void
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_5FrameEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Frame"*
  %4 = bitcast i8* %1 to void (%"class.blink::Frame"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Frame"*, %"class.blink::Visitor"*)**, void (%"class.blink::Frame"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Frame"*, %"class.blink::Visitor"*)*, void (%"class.blink::Frame"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::Frame"*, %"class.blink::Visitor"*)*, void (%"class.blink::Frame"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Frame"* %3, %"class.blink::Visitor"* %0) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11WindowProxyEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::WindowProxy"*
  %4 = bitcast i8* %1 to void (%"class.blink::WindowProxy"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::WindowProxy"*, %"class.blink::Visitor"*)**, void (%"class.blink::WindowProxy"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::WindowProxy"*, %"class.blink::Visitor"*)*, void (%"class.blink::WindowProxy"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::WindowProxy"*, %"class.blink::Visitor"*)*, void (%"class.blink::WindowProxy"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::WindowProxy"* %3, %"class.blink::Visitor"* %0) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_11WindowProxyEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_11WindowProxyEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, i64 %23) #5
  br i1 %28, label %93, label %29

29:                                               ; preds = %2, %22
  %30 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.185"*
  %31 = getelementptr inbounds i8, i8* %1, i64 -2
  %32 = bitcast i8* %31 to i16*
  %33 = load i16, i16* %32, align 2
  %34 = lshr i16 %33, 2
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %36, label %44, !prof !2

36:                                               ; preds = %29
  %37 = getelementptr inbounds i8, i8* %1, i64 -8
  %38 = ptrtoint i8* %37 to i64
  %39 = and i64 %38, -131072
  %40 = inttoptr i64 %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 4144
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 16
  br label %47

44:                                               ; preds = %29
  %45 = zext i16 %34 to i64
  %46 = shl nuw nsw i64 %45, 3
  br label %47

47:                                               ; preds = %44, %36
  %48 = phi i64 [ %43, %36 ], [ %46, %44 ]
  %49 = add i64 %48, -8
  %50 = lshr i64 %49, 4
  %51 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %52 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %51, align 8
  %53 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %52, i64 3
  %54 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %53, align 8
  %55 = tail call zeroext i1 %54(%"class.blink::Visitor"* %0) #5
  %56 = icmp eq i64 %50, 0
  br i1 %56, label %93, label %57

57:                                               ; preds = %47
  %58 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %59

59:                                               ; preds = %90, %57
  %60 = phi i64 [ 0, %57 ], [ %91, %90 ]
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %30, i64 %60, i32 0
  br i1 %55, label %62, label %76

62:                                               ; preds = %59
  %63 = load atomic i32, i32* %61 monotonic, align 4
  %64 = add i32 %63, 1
  %65 = icmp ult i32 %64, 2
  br i1 %65, label %90, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %30, i64 %60, i32 1
  %68 = bitcast %"class.blink::Member.0"* %67 to i64*
  %69 = load atomic i64, i64* %68 monotonic, align 8
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %90, label %71

71:                                               ; preds = %66
  %72 = inttoptr i64 %69 to i8*
  %73 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %58, align 8
  %74 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %73, i64 5
  %75 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %74, align 8
  tail call void %75(%"class.blink::Visitor"* %0, i8* nonnull %72, i8* nonnull %72, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11WindowProxyEE5TraceEPNS_7VisitorEPKv) #5
  br label %90

76:                                               ; preds = %59
  %77 = load i32, i32* %61, align 4
  %78 = add i32 %77, 1
  %79 = icmp ult i32 %78, 2
  br i1 %79, label %90, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %30, i64 %60, i32 1
  %82 = bitcast %"class.blink::Member.0"* %81 to i64*
  %83 = load atomic i64, i64* %82 monotonic, align 8
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %90, label %85

85:                                               ; preds = %80
  %86 = inttoptr i64 %83 to i8*
  %87 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %58, align 8
  %88 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %87, i64 5
  %89 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %88, align 8
  tail call void %89(%"class.blink::Visitor"* %0, i8* nonnull %86, i8* nonnull %86, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11WindowProxyEE5TraceEPNS_7VisitorEPKv) #5
  br label %90

90:                                               ; preds = %85, %80, %76, %71, %66, %62
  %91 = add nuw nsw i64 %60, 1
  %92 = icmp eq i64 %91, %50
  br i1 %92, label %93, label %59

93:                                               ; preds = %90, %47, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIPN5blink15DOMWrapperWorldEN2v85LocalINS7_6ObjectEEEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #5
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #5
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #5
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #5
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #5
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #5
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #5
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #1

declare void @_ZN5blink16LocalWindowProxyC1EPN2v87IsolateERNS_10LocalFrameE13scoped_refptrINS_15DOMWrapperWorldEE(%"class.blink::LocalWindowProxy"*, %"class.v8::Isolate"*, %"class.blink::LocalFrame"* dereferenceable(1176), %"class.blink::DOMWrapperWorld"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_11WindowProxyEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #5
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #5
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #5
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_11WindowProxyEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_11WindowProxyEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.194"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_11WindowProxyEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.194"*)) #5
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11WindowProxyEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #4 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #5
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #5
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #5
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #5
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i8* %21, i8* %22) #5
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #5
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.7, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #5
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #5
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #5
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #5
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_11WindowProxyEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::WindowProxy"*
  %3 = bitcast i8* %0 to void (%"class.blink::WindowProxy"*)***
  %4 = load void (%"class.blink::WindowProxy"*)**, void (%"class.blink::WindowProxy"*)*** %3, align 8
  %5 = load void (%"class.blink::WindowProxy"*)*, void (%"class.blink::WindowProxy"*)** %4, align 8
  tail call void %5(%"class.blink::WindowProxy"* %2) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_11WindowProxyEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.194"*) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

declare void @_ZN5blink17RemoteWindowProxyC1EPN2v87IsolateERNS_11RemoteFrameE13scoped_refptrINS_15DOMWrapperWorldEE(%"class.blink::RemoteWindowProxy"*, %"class.v8::Isolate"*, %"class.blink::RemoteFrame"* dereferenceable(2120), %"class.blink::DOMWrapperWorld"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.185"*, i8 } @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_11WindowProxyEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EEiRPS4_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.183"*, i32* dereferenceable(4), %"class.blink::WindowProxy"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.183", %"class.WTF::HashTable.183"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.185"*, %"struct.WTF::KeyValuePair.185"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.185"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.185"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_11WindowProxyEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.183"* %0, %"struct.WTF::KeyValuePair.185"* null)
  %9 = load %"struct.WTF::KeyValuePair.185"*, %"struct.WTF::KeyValuePair.185"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.185"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.183", %"class.WTF::HashTable.183"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %11, i64 %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %79, label %36

36:                                               ; preds = %10
  %37 = xor i32 %29, -1
  %38 = lshr i32 %27, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %36, %57
  %51 = phi i32 [ %34, %36 ], [ %66, %57 ]
  %52 = phi %"struct.WTF::KeyValuePair.185"* [ %32, %36 ], [ %64, %57 ]
  %53 = phi %"struct.WTF::KeyValuePair.185"* [ null, %36 ], [ %59, %57 ]
  %54 = phi i64 [ %31, %36 ], [ %63, %57 ]
  %55 = phi i64 [ 0, %36 ], [ %61, %57 ]
  %56 = icmp eq i32 %51, %16
  br i1 %56, label %140, label %57

57:                                               ; preds = %50
  %58 = icmp eq i32 %51, -1
  %59 = select i1 %58, %"struct.WTF::KeyValuePair.185"* %52, %"struct.WTF::KeyValuePair.185"* %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %49, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %50

68:                                               ; preds = %57
  %69 = icmp eq %"struct.WTF::KeyValuePair.185"* %59, null
  br i1 %69, label %79, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.185"* %59 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %71, i64 16) #5
  %72 = getelementptr inbounds %"class.WTF::HashTable.183", %"class.WTF::HashTable.183"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  %78 = load i32, i32* %1, align 4
  br label %79

79:                                               ; preds = %10, %68, %70
  %80 = phi i32 [ %78, %70 ], [ %16, %68 ], [ %16, %10 ]
  %81 = phi %"struct.WTF::KeyValuePair.185"* [ %59, %70 ], [ %64, %68 ], [ %32, %10 ]
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %81, i64 0, i32 0
  store i32 %80, i32* %82, align 8
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %81, i64 0, i32 1
  %84 = load %"class.blink::WindowProxy"*, %"class.blink::WindowProxy"** %2, align 8
  %85 = ptrtoint %"class.blink::WindowProxy"* %84 to i64
  %86 = bitcast %"class.blink::Member.0"* %83 to i64*
  store atomic i64 %85, i64* %86 monotonic, align 8
  %87 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %92, label %89

89:                                               ; preds = %79
  %90 = bitcast %"class.blink::WindowProxy"* %84 to i8*
  %91 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %90) #5
  br label %92

92:                                               ; preds = %79, %89
  %93 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %97 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %96, i64 0, i32 1
  %98 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %97) #5
  %99 = icmp eq i8* %98, null
  br i1 %99, label %100, label %102, !prof !2

100:                                              ; preds = %95
  %101 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #5
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %97, i8* %101) #5
  br label %102

102:                                              ; preds = %100, %95
  %103 = phi i8* [ %101, %100 ], [ %98, %95 ]
  %104 = bitcast i8* %103 to %"class.blink::ThreadState"**
  %105 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %104, align 8
  %106 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %105, i64 0, i32 9
  %107 = load i8, i8* %106, align 1, !range !4
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %128, label %109

109:                                              ; preds = %102
  %110 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %105, i64 0, i32 13
  %111 = load i64, i64* %110, align 8
  %112 = add i64 %111, 1
  store i64 %112, i64* %110, align 8
  %113 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %105, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %114 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %113, align 8
  %115 = load atomic i64, i64* %86 monotonic, align 8
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %125, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %114, i64 0, i32 0, i32 0
  %119 = inttoptr i64 %115 to i8*
  %120 = bitcast %"class.blink::MarkingVisitor"* %114 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %121 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %120, align 8
  %122 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %121, i64 5
  %123 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %122, align 8
  tail call void %123(%"class.blink::Visitor"* %118, i8* nonnull %119, i8* nonnull %119, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11WindowProxyEE5TraceEPNS_7VisitorEPKv) #5
  %124 = load i64, i64* %110, align 8
  br label %125

125:                                              ; preds = %117, %109
  %126 = phi i64 [ %112, %109 ], [ %124, %117 ]
  %127 = add i64 %126, -1
  store i64 %127, i64* %110, align 8
  br label %128

128:                                              ; preds = %92, %102, %125
  %129 = getelementptr inbounds %"class.WTF::HashTable.183", %"class.WTF::HashTable.183"* %0, i64 0, i32 2
  %130 = load i32, i32* %129, align 4
  %131 = add i32 %130, 1
  store i32 %131, i32* %129, align 4
  %132 = getelementptr inbounds %"class.WTF::HashTable.183", %"class.WTF::HashTable.183"* %0, i64 0, i32 3
  %133 = load i32, i32* %132, align 8
  %134 = add i32 %133, %131
  %135 = shl i32 %134, 1
  %136 = load i32, i32* %12, align 8
  %137 = icmp ult i32 %135, %136
  br i1 %137, label %140, label %138

138:                                              ; preds = %128
  %139 = tail call %"struct.WTF::KeyValuePair.185"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_11WindowProxyEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.183"* %0, %"struct.WTF::KeyValuePair.185"* %81)
  br label %140

140:                                              ; preds = %50, %128, %138
  %141 = phi i8 [ 1, %128 ], [ 1, %138 ], [ 0, %50 ]
  %142 = phi %"struct.WTF::KeyValuePair.185"* [ %81, %128 ], [ %139, %138 ], [ %52, %50 ]
  %143 = insertvalue { %"struct.WTF::KeyValuePair.185"*, i8 } undef, %"struct.WTF::KeyValuePair.185"* %142, 0
  %144 = insertvalue { %"struct.WTF::KeyValuePair.185"*, i8 } %143, i8 %141, 1
  ret { %"struct.WTF::KeyValuePair.185"*, i8 } %144
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.185"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_11WindowProxyEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.183"*, %"struct.WTF::KeyValuePair.185"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.183", %"class.WTF::HashTable.183"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.183", %"class.WTF::HashTable.183"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #5
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #5
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* %23, i8* %24) #5
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.10, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #5
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #5
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #5
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #5
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair.185"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_11WindowProxyEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE12ExpandBufferEjPS6_Rb(%"class.WTF::HashTable.183"* %0, i32 %35, %"struct.WTF::KeyValuePair.185"* %1, i8* nonnull dereferenceable(1) %4) #5
  %37 = load i8, i8* %4, align 1, !range !4
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #5
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_11WindowProxyEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #5
  %43 = bitcast %"class.blink::HeapHashTableBacking"* %42 to %"struct.WTF::KeyValuePair.185"*
  %44 = call %"struct.WTF::KeyValuePair.185"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_11WindowProxyEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.183"* %0, %"struct.WTF::KeyValuePair.185"* %43, i32 %40, %"struct.WTF::KeyValuePair.185"* %1) #5
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"struct.WTF::KeyValuePair.185"* [ %44, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair.185"* %46
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.185"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_11WindowProxyEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE12ExpandBufferEjPS6_Rb(%"class.WTF::HashTable.183"*, i32, %"struct.WTF::KeyValuePair.185"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #5
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #5
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #5
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !4
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #5
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.10, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5, i64 0, i64 0)) #5
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #5
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.183", %"class.WTF::HashTable.183"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair.185"*, %"struct.WTF::KeyValuePair.185"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair.185"* %32, null
  br i1 %33, label %82, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = bitcast %"struct.WTF::KeyValuePair.185"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #5
  br i1 %38, label %39, label %82

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.183", %"class.WTF::HashTable.183"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair.185"*, %"struct.WTF::KeyValuePair.185"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_11WindowProxyEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #5
  %45 = bitcast %"class.blink::HeapHashTableBacking"* %44 to %"struct.WTF::KeyValuePair.185"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %47, label %58

47:                                               ; preds = %79, %39
  %48 = phi %"struct.WTF::KeyValuePair.185"* [ null, %39 ], [ %65, %79 ]
  %49 = bitcast %"class.WTF::HashTable.183"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %44, %"class.blink::HeapHashTableBacking"** %49, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %44, i64 0, i32 0
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #5
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"struct.WTF::KeyValuePair.185"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 %36, i1 false)
  %57 = call %"struct.WTF::KeyValuePair.185"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_11WindowProxyEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.183"* %0, %"struct.WTF::KeyValuePair.185"* %42, i32 %1, %"struct.WTF::KeyValuePair.185"* %48)
  br label %82

58:                                               ; preds = %39, %79
  %59 = phi i64 [ %80, %79 ], [ 0, %39 ]
  %60 = phi %"struct.WTF::KeyValuePair.185"* [ %65, %79 ], [ null, %39 ]
  %61 = load %"struct.WTF::KeyValuePair.185"*, %"struct.WTF::KeyValuePair.185"** %31, align 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %61, i64 %59
  %63 = icmp eq %"struct.WTF::KeyValuePair.185"* %62, %2
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %45, i64 %59
  %65 = select i1 %63, %"struct.WTF::KeyValuePair.185"* %64, %"struct.WTF::KeyValuePair.185"* %60
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %62, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = add i32 %67, 1
  %69 = icmp ult i32 %68, 2
  br i1 %69, label %70, label %72

70:                                               ; preds = %58
  %71 = bitcast %"struct.WTF::KeyValuePair.185"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 16, i1 false)
  br label %79

72:                                               ; preds = %58
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %64, i64 0, i32 0
  store i32 %67, i32* %73, align 8
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %45, i64 %59, i32 1
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %61, i64 %59, i32 1
  %76 = bitcast %"class.blink::Member.0"* %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = bitcast %"class.blink::Member.0"* %74 to i64*
  store i64 %77, i64* %78, align 8
  br label %79

79:                                               ; preds = %70, %72
  %80 = add nuw nsw i64 %59, 1
  %81 = icmp eq i64 %80, %43
  br i1 %81, label %47, label %58

82:                                               ; preds = %34, %30, %55
  %83 = phi %"struct.WTF::KeyValuePair.185"* [ %57, %55 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair.185"* %83
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.185"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_11WindowProxyEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.183"*, %"struct.WTF::KeyValuePair.185"*, i32, %"struct.WTF::KeyValuePair.185"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair.185"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.183", %"class.WTF::HashTable.183"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.WTF::HashTable.183", %"class.WTF::HashTable.183"* %0, i64 0, i32 0
  %11 = add i32 %2, -1
  %12 = zext i32 %11 to i64
  %13 = load %"struct.WTF::KeyValuePair.185"*, %"struct.WTF::KeyValuePair.185"** %10, align 8
  br label %37

14:                                               ; preds = %124, %4
  %15 = phi %"struct.WTF::KeyValuePair.185"* [ null, %4 ], [ %127, %124 ]
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = bitcast %"struct.WTF::KeyValuePair.185"* %1 to i8*
  tail call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %19) #5
  br label %20

20:                                               ; preds = %14, %18
  %21 = getelementptr inbounds %"class.WTF::HashTable.183", %"class.WTF::HashTable.183"* %0, i64 0, i32 0
  %22 = load %"struct.WTF::KeyValuePair.185"*, %"struct.WTF::KeyValuePair.185"** %21, align 8
  %23 = bitcast %"class.WTF::HashTable.183"* %0 to i64*
  store atomic i64 %5, i64* %23 monotonic, align 8
  %24 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %20
  %27 = bitcast %"struct.WTF::KeyValuePair.185"* %1 to i8*
  %28 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %27) #5
  br label %29

29:                                               ; preds = %20, %26
  store i32 %2, i32* %6, align 8
  %30 = icmp eq %"struct.WTF::KeyValuePair.185"* %22, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = bitcast %"struct.WTF::KeyValuePair.185"* %22 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %32) #5
  br label %33

33:                                               ; preds = %29, %31
  %34 = getelementptr inbounds %"class.WTF::HashTable.183", %"class.WTF::HashTable.183"* %0, i64 0, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, -2147483648
  store i32 %36, i32* %34, align 8
  ret %"struct.WTF::KeyValuePair.185"* %15

37:                                               ; preds = %9, %124
  %38 = phi i32 [ %7, %9 ], [ %125, %124 ]
  %39 = phi %"struct.WTF::KeyValuePair.185"* [ %13, %9 ], [ %126, %124 ]
  %40 = phi %"struct.WTF::KeyValuePair.185"* [ null, %9 ], [ %127, %124 ]
  %41 = phi i32 [ 0, %9 ], [ %128, %124 ]
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %39, i64 %42, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = add i32 %44, 1
  %46 = icmp ult i32 %45, 2
  br i1 %46, label %124, label %47

47:                                               ; preds = %37
  %48 = shl i32 %44, 15
  %49 = xor i32 %48, -1
  %50 = add i32 %44, %49
  %51 = lshr i32 %50, 10
  %52 = xor i32 %51, %50
  %53 = mul i32 %52, 9
  %54 = lshr i32 %53, 6
  %55 = xor i32 %54, %53
  %56 = shl i32 %55, 11
  %57 = xor i32 %56, -1
  %58 = add i32 %55, %57
  %59 = lshr i32 %58, 16
  %60 = xor i32 %59, %58
  %61 = and i32 %60, %11
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %1, i64 %62
  %64 = ptrtoint %"struct.WTF::KeyValuePair.185"* %63 to i64
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %63, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %85, label %68

68:                                               ; preds = %47
  %69 = xor i32 %60, -1
  %70 = lshr i32 %58, 23
  %71 = add i32 %70, %69
  %72 = shl i32 %71, 12
  %73 = xor i32 %72, %71
  %74 = lshr i32 %73, 7
  %75 = xor i32 %74, %73
  %76 = shl i32 %75, 2
  %77 = xor i32 %76, %75
  %78 = lshr i32 %77, 20
  %79 = xor i32 %78, %77
  %80 = or i32 %79, 1
  %81 = zext i32 %80 to i64
  br label %91

82:                                               ; preds = %98
  %83 = ptrtoint %"struct.WTF::KeyValuePair.185"* %105 to i64
  %84 = inttoptr i64 %100 to %"struct.WTF::KeyValuePair.185"*
  br label %85

85:                                               ; preds = %82, %47
  %86 = phi i64 [ %83, %82 ], [ %64, %47 ]
  %87 = phi %"struct.WTF::KeyValuePair.185"* [ %84, %82 ], [ null, %47 ]
  %88 = icmp eq %"struct.WTF::KeyValuePair.185"* %87, null
  %89 = ptrtoint %"struct.WTF::KeyValuePair.185"* %87 to i64
  %90 = select i1 %88, i64 %86, i64 %89
  br label %110

91:                                               ; preds = %98, %68
  %92 = phi i64 [ 0, %68 ], [ %100, %98 ]
  %93 = phi i32 [ %66, %68 ], [ %108, %98 ]
  %94 = phi i64 [ %64, %68 ], [ %106, %98 ]
  %95 = phi i64 [ %62, %68 ], [ %104, %98 ]
  %96 = phi i64 [ 0, %68 ], [ %102, %98 ]
  %97 = icmp eq i32 %93, %44
  br i1 %97, label %110, label %98

98:                                               ; preds = %91
  %99 = icmp eq i32 %93, -1
  %100 = select i1 %99, i64 %94, i64 %92
  %101 = icmp eq i64 %96, 0
  %102 = select i1 %101, i64 %81, i64 %96
  %103 = add i64 %102, %95
  %104 = and i64 %103, %12
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %1, i64 %104
  %106 = ptrtoint %"struct.WTF::KeyValuePair.185"* %105 to i64
  %107 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %105, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %82, label %91

110:                                              ; preds = %91, %85
  %111 = phi i64 [ %90, %85 ], [ %94, %91 ]
  %112 = inttoptr i64 %111 to %"struct.WTF::KeyValuePair.185"*
  %113 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %112, i64 0, i32 0
  store i32 %44, i32* %113, align 8
  %114 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %112, i64 0, i32 1
  %115 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %39, i64 %42, i32 1
  %116 = bitcast %"class.blink::Member.0"* %115 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = bitcast %"class.blink::Member.0"* %114 to i64*
  store i64 %117, i64* %118, align 8
  %119 = load %"struct.WTF::KeyValuePair.185"*, %"struct.WTF::KeyValuePair.185"** %10, align 8
  %120 = getelementptr inbounds %"struct.WTF::KeyValuePair.185", %"struct.WTF::KeyValuePair.185"* %119, i64 %42
  %121 = icmp eq %"struct.WTF::KeyValuePair.185"* %120, %3
  %122 = select i1 %121, %"struct.WTF::KeyValuePair.185"* %112, %"struct.WTF::KeyValuePair.185"* %40
  %123 = load i32, i32* %6, align 8
  br label %124

124:                                              ; preds = %37, %110
  %125 = phi i32 [ %38, %37 ], [ %123, %110 ]
  %126 = phi %"struct.WTF::KeyValuePair.185"* [ %39, %37 ], [ %119, %110 ]
  %127 = phi %"struct.WTF::KeyValuePair.185"* [ %40, %37 ], [ %122, %110 ]
  %128 = add i32 %41, 1
  %129 = icmp eq i32 %128, %125
  br i1 %129, label %14, label %37
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_11WindowProxyEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #5
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #5
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.11, i64 0, i64 0), i8* %11, i8* %12) #5
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.12, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #5
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #5
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #5
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableIiNS1_12KeyValuePairIiNS_6MemberINS_11WindowProxyEEEEENS1_24KeyValuePairKeyExtractorENS1_7IntHashIiEENS1_18HashMapValueTraitsINS1_10HashTraitsIiEENSC_IS6_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableIiNS1_12KeyValuePairIiNS_6MemberINS_11WindowProxyEEEEENS1_24KeyValuePairKeyExtractorENS1_7IntHashIiEENS1_18HashMapValueTraitsINS1_10HashTraitsIiEENSC_IS6_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #5
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #5
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #5
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_11WindowProxyEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_11WindowProxyEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.194"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_11WindowProxyEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.194"*)) #5
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([352 x i8], [352 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableIiNS_12KeyValuePairIiNS1_6MemberINS1_11WindowProxyEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSD_IS7_EEEESE_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_11WindowProxyEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i8 1 }
}

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #1

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
