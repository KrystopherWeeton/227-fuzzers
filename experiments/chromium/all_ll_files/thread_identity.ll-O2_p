; ModuleID = '../../third_party/abseil-cpp/absl/base/internal/thread_identity.cc'
source_filename = "../../third_party/abseil-cpp/absl/base/internal/thread_identity.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.absl::base_internal::SpinLockWaitTransition" = type { i32, i32, i8 }
%"struct.absl::base_internal::ThreadIdentity" = type { %"struct.absl::base_internal::PerThreadSynch", %"struct.absl::base_internal::ThreadIdentity::WaiterState", %"struct.std::__1::atomic.0"*, %"struct.std::__1::atomic.0", %"struct.std::__1::atomic.0", %"struct.std::__1::atomic.5", %"struct.absl::base_internal::ThreadIdentity"* }
%"struct.absl::base_internal::PerThreadSynch" = type { %"struct.absl::base_internal::PerThreadSynch"*, %"struct.absl::base_internal::PerThreadSynch"*, i8, i8, i8, i8, i8, i32, %"struct.std::__1::atomic", %"struct.absl::SynchWaitParams"*, i64, i64, %"struct.absl::SynchLocksHeld"* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.absl::SynchWaitParams" = type opaque
%"struct.absl::SynchLocksHeld" = type opaque
%"struct.absl::base_internal::ThreadIdentity::WaiterState" = type { [128 x i8] }
%"struct.std::__1::atomic.0" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl.3" }
%"struct.std::__1::__cxx_atomic_impl.3" = type { %"struct.std::__1::__cxx_atomic_base_impl.4" }
%"struct.std::__1::__cxx_atomic_base_impl.4" = type { i32 }
%"struct.std::__1::atomic.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl.7" }
%"struct.std::__1::__cxx_atomic_impl.7" = type { %"struct.std::__1::__cxx_atomic_base_impl.8" }
%"struct.std::__1::__cxx_atomic_base_impl.8" = type { i8 }
%struct.__sigset_t = type { [16 x i64] }
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl.12" }
%"struct.std::__1::__cxx_atomic_impl.12" = type { %"struct.std::__1::__cxx_atomic_base_impl.13" }
%"struct.std::__1::__cxx_atomic_base_impl.13" = type { i32 }

$_ZN4absl13base_internal12CallOnceImplIRFvPFvPvEEJRS4_EEEvPNSt3__16atomicIjEENS0_14SchedulingModeEOT_DpOT0_ = comdat any

$_ZZN4absl13base_internal12CallOnceImplIRFvPFvPvEEJRS4_EEEvPNSt3__16atomicIjEENS0_14SchedulingModeEOT_DpOT0_E5trans = comdat any

@_ZN4absl13base_internal12_GLOBAL__N_127thread_identity_pthread_keyE = internal global i32 0, align 4
@_ZN4absl13base_internal12_GLOBAL__N_129init_thread_identity_key_onceE = internal global { { { i32 } } } zeroinitializer, align 4
@_ZZN4absl13base_internal12CallOnceImplIRFvPFvPvEEJRS4_EEEvPNSt3__16atomicIjEENS0_14SchedulingModeEOT_DpOT0_E5trans = linkonce_odr hidden constant [3 x %"struct.absl::base_internal::SpinLockWaitTransition"] [%"struct.absl::base_internal::SpinLockWaitTransition" { i32 0, i32 1707250555, i8 1 }, %"struct.absl::base_internal::SpinLockWaitTransition" { i32 1707250555, i32 94570706, i8 0 }, %"struct.absl::base_internal::SpinLockWaitTransition" { i32 221, i32 221, i8 1 }], comdat, align 16
@_ZN4absl13base_internal12_GLOBAL__N_123pthread_key_initializedE.0.0 = internal unnamed_addr global i8 0, align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl13base_internal24SetCurrentThreadIdentityEPNS0_14ThreadIdentityEPFvPvE(%"struct.absl::base_internal::ThreadIdentity"*, void (i8*)*) local_unnamed_addr #0 {
  %3 = alloca void (i8*)*, align 8
  %4 = alloca %struct.__sigset_t, align 8
  %5 = alloca %struct.__sigset_t, align 8
  store void (i8*)* %1, void (i8*)** %3, align 8
  %6 = load atomic i32, i32* getelementptr inbounds ({ { { i32 } } }, { { { i32 } } }* @_ZN4absl13base_internal12_GLOBAL__N_129init_thread_identity_key_onceE, i64 0, i32 0, i32 0, i32 0) acquire, align 4
  %7 = icmp eq i32 %6, 221
  br i1 %7, label %9, label %8, !prof !2

8:                                                ; preds = %2
  call void @_ZN4absl13base_internal12CallOnceImplIRFvPFvPvEEJRS4_EEEvPNSt3__16atomicIjEENS0_14SchedulingModeEOT_DpOT0_(%"struct.std::__1::atomic.9"* bitcast ({ { { i32 } } }* @_ZN4absl13base_internal12_GLOBAL__N_129init_thread_identity_key_onceE to %"struct.std::__1::atomic.9"*), i32 1, void (void (i8*)*)* nonnull @_ZN4absl13base_internal12_GLOBAL__N_125AllocateThreadIdentityKeyEPFvPvE, void (i8*)** nonnull dereferenceable(8) %3) #6
  br label %9

9:                                                ; preds = %2, %8
  %10 = bitcast %struct.__sigset_t* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 128, i1 false)
  %11 = bitcast %struct.__sigset_t* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %11) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 128, i1 false)
  %12 = call i32 @sigfillset(%struct.__sigset_t* nonnull %4) #6
  %13 = call i32 @pthread_sigmask(i32 2, %struct.__sigset_t* nonnull %4, %struct.__sigset_t* nonnull %5) #6
  %14 = load i32, i32* @_ZN4absl13base_internal12_GLOBAL__N_127thread_identity_pthread_keyE, align 4
  %15 = bitcast %"struct.absl::base_internal::ThreadIdentity"* %0 to i8*
  %16 = call i32 @pthread_setspecific(i32 %14, i8* %15) #6
  %17 = call i32 @pthread_sigmask(i32 2, %struct.__sigset_t* nonnull %5, %struct.__sigset_t* null) #6
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %11) #6
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %10) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4absl13base_internal12_GLOBAL__N_125AllocateThreadIdentityKeyEPFvPvE(void (i8*)*) #0 {
  %2 = tail call i32 @pthread_key_create(i32* nonnull @_ZN4absl13base_internal12_GLOBAL__N_127thread_identity_pthread_keyE, void (i8*)* %0) #6
  store atomic i8 1, i8* @_ZN4absl13base_internal12_GLOBAL__N_123pthread_key_initializedE.0.0 release, align 1
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind
declare i32 @sigfillset(%struct.__sigset_t*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @pthread_sigmask(i32, %struct.__sigset_t*, %struct.__sigset_t*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @pthread_setspecific(i32, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN4absl13base_internal26ClearCurrentThreadIdentityEv() local_unnamed_addr #3 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.absl::base_internal::ThreadIdentity"* @_ZN4absl13base_internal30CurrentThreadIdentityIfPresentEv() local_unnamed_addr #0 {
  %1 = load atomic i8, i8* @_ZN4absl13base_internal12_GLOBAL__N_123pthread_key_initializedE.0.0 acquire, align 1
  %2 = and i8 %1, 1
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %8, label %4

4:                                                ; preds = %0
  %5 = load i32, i32* @_ZN4absl13base_internal12_GLOBAL__N_127thread_identity_pthread_keyE, align 4
  %6 = tail call i8* @pthread_getspecific(i32 %5) #6
  %7 = bitcast i8* %6 to %"struct.absl::base_internal::ThreadIdentity"*
  br label %8

8:                                                ; preds = %0, %4
  %9 = phi %"struct.absl::base_internal::ThreadIdentity"* [ %7, %4 ], [ null, %0 ]
  ret %"struct.absl::base_internal::ThreadIdentity"* %9
}

; Function Attrs: nounwind
declare i8* @pthread_getspecific(i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @pthread_key_create(i32*, void (i8*)*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl13base_internal12CallOnceImplIRFvPFvPvEEJRS4_EEEvPNSt3__16atomicIjEENS0_14SchedulingModeEOT_DpOT0_(%"struct.std::__1::atomic.9"*, i32, void (void (i8*)*)*, void (i8*)** dereferenceable(8)) local_unnamed_addr #4 comdat {
  %5 = getelementptr inbounds %"struct.std::__1::atomic.9", %"struct.std::__1::atomic.9"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = cmpxchg i32* %5, i32 0, i32 1707250555 monotonic monotonic
  %7 = extractvalue { i32, i1 } %6, 1
  br i1 %7, label %11, label %8

8:                                                ; preds = %4
  %9 = tail call i32 @_ZN4absl13base_internal12SpinLockWaitEPNSt3__16atomicIjEEiPKNS0_22SpinLockWaitTransitionENS0_14SchedulingModeE(%"struct.std::__1::atomic.9"* %0, i32 3, %"struct.absl::base_internal::SpinLockWaitTransition"* getelementptr inbounds ([3 x %"struct.absl::base_internal::SpinLockWaitTransition"], [3 x %"struct.absl::base_internal::SpinLockWaitTransition"]* @_ZZN4absl13base_internal12CallOnceImplIRFvPFvPvEEJRS4_EEEvPNSt3__16atomicIjEENS0_14SchedulingModeEOT_DpOT0_E5trans, i64 0, i64 0), i32 %1) #6
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %16

11:                                               ; preds = %4, %8
  %12 = load void (i8*)*, void (i8*)** %3, align 8
  tail call void %2(void (i8*)* %12) #6
  %13 = atomicrmw xchg i32* %5, i32 221 release
  %14 = icmp eq i32 %13, 94570706
  br i1 %14, label %15, label %16

15:                                               ; preds = %11
  tail call void @AbslInternalSpinLockWake(%"struct.std::__1::atomic.9"* %0, i1 zeroext true) #6
  br label %16

16:                                               ; preds = %11, %15, %8
  ret void
}

declare i32 @_ZN4absl13base_internal12SpinLockWaitEPNSt3__16atomicIjEEiPKNS0_22SpinLockWaitTransitionENS0_14SchedulingModeE(%"struct.std::__1::atomic.9"*, i32, %"struct.absl::base_internal::SpinLockWaitTransition"*, i32) local_unnamed_addr #5

declare void @AbslInternalSpinLockWake(%"struct.std::__1::atomic.9"*, i1 zeroext) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
