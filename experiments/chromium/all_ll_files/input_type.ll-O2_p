; ModuleID = '../../third_party/blink/renderer/core/html/forms/input_type.cc'
source_filename = "../../third_party/blink/renderer/core/html/forms/input_type.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.10 }
%class.scoped_refptr.10 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::QualifiedName" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.191", i32, [4 x i8], %"class.std::__1::unique_ptr.327", %"class.std::__1::unique_ptr.327", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.337", %"class.std::__1::unique_ptr.343", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.355", %"class.std::__1::unique_ptr.361", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.368", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.200", %"class.std::__1::unique_ptr.206", %"class.std::__1::unique_ptr.212", %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.224", %"class.std::__1::unique_ptr.235", %"class.std::__1::unique_ptr.242", %"class.std::__1::unique_ptr.242", %"class.std::__1::unique_ptr.249", %"class.std::__1::unique_ptr.256", %"class.std::__1::unique_ptr.263", %"class.std::__1::unique_ptr.263", %"class.std::__1::unique_ptr.270", %"class.std::__1::unique_ptr.277", %"class.std::__1::unique_ptr.284", %"class.std::__1::unique_ptr.307", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.194" = type { %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.200" = type { %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.206" = type { %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.212" = type { %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.218" = type { %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.224" = type { %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.227" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.227" = type { %"struct.std::__1::__atomic_base.228" }
%"struct.std::__1::__atomic_base.228" = type { %"struct.std::__1::__atomic_base.229" }
%"struct.std::__1::__atomic_base.229" = type { %"struct.std::__1::__cxx_atomic_impl.230" }
%"struct.std::__1::__cxx_atomic_impl.230" = type { %"struct.std::__1::__cxx_atomic_base_impl.231" }
%"struct.std::__1::__cxx_atomic_base_impl.231" = type { i64 }
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.blink::Worklist.238"* }
%"class.blink::Worklist.238" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.227" }
%"class.std::__1::unique_ptr.242" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"class.blink::Worklist.245"* }
%"class.blink::Worklist.245" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.227" }
%"class.std::__1::unique_ptr.249" = type { %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.blink::Worklist.252"* }
%"class.blink::Worklist.252" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.227" }
%"class.std::__1::unique_ptr.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"class.blink::Worklist.259"* }
%"class.blink::Worklist.259" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.227" }
%"class.std::__1::unique_ptr.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"class.blink::Worklist.266"* }
%"class.blink::Worklist.266" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.227" }
%"class.std::__1::unique_ptr.270" = type { %"class.std::__1::__compressed_pair.271" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.272" }
%"struct.std::__1::__compressed_pair_elem.272" = type { %"class.blink::Worklist.273"* }
%"class.blink::Worklist.273" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.227" }
%"class.std::__1::unique_ptr.277" = type { %"class.std::__1::__compressed_pair.278" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"struct.std::__1::__compressed_pair_elem.279" = type { %"class.blink::Worklist.280"* }
%"class.blink::Worklist.280" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.227" }
%"class.std::__1::unique_ptr.284" = type { %"class.std::__1::__compressed_pair.285" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.286" }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.287", %"class.std::__1::__compressed_pair.294", %"class.std::__1::__compressed_pair.299", %"class.std::__1::__compressed_pair.301", [4 x i8] }>
%"class.std::__1::unique_ptr.287" = type { %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289", %"struct.std::__1::__compressed_pair_elem.290" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.290" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.291" }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { i64 }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.295" }
%"struct.std::__1::__compressed_pair_elem.295" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.302" }
%"struct.std::__1::__compressed_pair_elem.302" = type { float }
%"class.std::__1::unique_ptr.307" = type { %"class.std::__1::__compressed_pair.308" }
%"class.std::__1::__compressed_pair.308" = type { %"struct.std::__1::__compressed_pair_elem.309" }
%"struct.std::__1::__compressed_pair_elem.309" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.310", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.310" = type { %"class.std::__1::__compressed_pair.311" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"struct.std::__1::__compressed_pair_elem.312" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.319" }
%"class.WTF::Vector.319" = type { %"class.WTF::VectorBuffer.320" }
%"class.WTF::VectorBuffer.320" = type { %"class.WTF::VectorBufferBase.321" }
%"class.WTF::VectorBufferBase.321" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.327" = type { %"class.std::__1::__compressed_pair.328" }
%"class.std::__1::__compressed_pair.328" = type { %"struct.std::__1::__compressed_pair_elem.329" }
%"struct.std::__1::__compressed_pair_elem.329" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.335" }
%"class.WTF::VectorBuffer.335" = type { %"class.WTF::VectorBufferBase.336" }
%"class.WTF::VectorBufferBase.336" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.337" = type { %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.339" }
%"struct.std::__1::__compressed_pair_elem.339" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.343" = type { %"class.std::__1::__compressed_pair.344" }
%"class.std::__1::__compressed_pair.344" = type { %"struct.std::__1::__compressed_pair_elem.345" }
%"struct.std::__1::__compressed_pair_elem.345" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.349" }
%"class.std::__1::unique_ptr.349" = type { %"class.std::__1::__compressed_pair.350" }
%"class.std::__1::__compressed_pair.350" = type { %"struct.std::__1::__compressed_pair_elem.351" }
%"struct.std::__1::__compressed_pair_elem.351" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.238"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.245"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.252"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.259"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.266"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.608" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.355" = type { %"class.std::__1::__compressed_pair.356" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.357" }
%"struct.std::__1::__compressed_pair_elem.357" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.361" = type { %"class.std::__1::__compressed_pair.362" }
%"class.std::__1::__compressed_pair.362" = type { %"struct.std::__1::__compressed_pair_elem.363" }
%"struct.std::__1::__compressed_pair_elem.363" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.367 }
%class.scoped_refptr.367 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.368" = type { %"struct.std::__1::__atomic_base.369" }
%"struct.std::__1::__atomic_base.369" = type { %"struct.std::__1::__cxx_atomic_impl.370" }
%"struct.std::__1::__cxx_atomic_impl.370" = type { %"struct.std::__1::__cxx_atomic_base_impl.371" }
%"struct.std::__1::__cxx_atomic_base_impl.371" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::InputType" = type { i32 (...)**, %"class.blink::Member" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::HTMLInputElement"* }
%"class.blink::HTMLInputElement" = type <{ %"class.blink::TextControlElement", %"class.blink::ActiveScriptWrappable", %"class.WTF::AtomicString", %"class.WTF::String", i32, i16, [2 x i8], %"class.blink::Member.51", %"class.blink::Member.53", %"class.blink::Member.55", %"class.blink::Member.57", i32, [4 x i8] }>
%"class.blink::TextControlElement" = type { %"class.blink::HTMLFormControlElementWithState.base", %"class.blink::Member.49", %"class.WTF::String", i8, i32, i32, i32, %"class.WTF::String", %"class.WTF::String" }
%"class.blink::HTMLFormControlElementWithState.base" = type { %"class.blink::HTMLFormControlElement.base", i8 }
%"class.blink::HTMLFormControlElement.base" = type <{ %"class.blink::HTMLElement", %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", i32, [4 x i8], %"class.blink::WebString", i32, i8 }>
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.12" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.2", %"class.blink::Member.2" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.2", %"class.blink::Member.4", %"class.blink::Member.2", %"class.blink::Member.2", %"class.blink::Member.6" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.4" = type { %"class.blink::MemberBase.5" }
%"class.blink::MemberBase.5" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.59", %"class.blink::Member.61", %"class.blink::Member.4", %"class.blink::Member.63", %"class.blink::Member.63", %"class.blink::Member.84", %"class.blink::Member.86", %"class.blink::Member.88", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.90", %"class.blink::HeapVector.92" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.59" = type { %"class.blink::MemberBase.60" }
%"class.blink::MemberBase.60" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.61" = type { %"class.blink::MemberBase.62" }
%"class.blink::MemberBase.62" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.139", %"class.WTF::Vector.139", i8, i32, %"class.blink::Member.150", %"class.blink::Member.152", %"class.blink::Member.154", %"class.blink::Member.156", %"class.blink::Member.158", %"class.blink::Member.160", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.163", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.169", %"class.blink::Member.171", %"class.blink::Member.98", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.174", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.77", %"class.blink::Member.75", %"class.blink::Member.384", %"class.blink::Member.75", %"class.blink::Member.75", %"class.blink::Member.75", %"class.blink::UserActionElementSet", %"class.blink::Member.393", double, double, i64, i64, %"class.blink::HeapHashSet.395", %"class.blink::HeapHashSet.402", i16, i8, %"class.blink::Member.409", %"class.blink::Member.411", %"class.blink::Member.413", %"class.blink::Member.415", %"class.blink::TextLinkColors", %"class.blink::Member.417", i8, [7 x i8], %"class.blink::HeapHashMap.419", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.75", %"class.WTF::Vector.426", %"class.blink::Member.431", %"class.blink::Member.435", i8, %"class.blink::Member.75", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.437", %"class.blink::HeapVector.439", %"class.std::__1::unique_ptr.447", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.453", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.466", %"class.WTF::Vector.468", i8, i8, %"class.std::__1::unique_ptr.473", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.77", %"class.blink::HeapVector.479", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.487", i8, i32, %"class.blink::Member.489", %"class.blink::Member.491", %"class.blink::Member.493", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.495", %"class.WTF::HashMap.497", %"class.blink::Member.502", %"class.blink::Member.504", %"class.blink::Member.506", %"class.blink::Member.508", %"class.blink::Member.61", %"class.blink::Member.61", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.510", i8, i32, %"class.blink::Member.517", %"class.blink::Member.519", i32, %"class.blink::Member.521", %"class.blink::Member.523", %"class.blink::Member.525", %"class.std::__1::unique_ptr.527", i64, %"class.std::__1::unique_ptr.533", i32, i32, %"class.blink::Member.544", %"class.blink::Member.546", %"class.blink::Member.548", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.550", %"class.WTF::Vector.552", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.557", %"class.blink::Member.564", %"class.std::__1::unique_ptr.566", %"class.blink::Member.572", i8, i8, %"class.WTF::String", %"class.blink::Member.574", i8, [7 x i8], %"class.blink::HeapHashMap.576", %"class.blink::HeapObserverSet", %"class.blink::Member.590", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.592", i32, i8, i8, %"class.blink::WeakMember.594", %"class.blink::Member.595" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.132" }
%"class.blink::HeapHashMap.132" = type { %"class.WTF::HashMap.135" }
%"class.WTF::HashMap.135" = type { %"class.WTF::HashTable.136" }
%"class.WTF::HashTable.136" = type <{ %"struct.WTF::KeyValuePair.138"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.138" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.139" = type { %"class.WTF::VectorBuffer.140" }
%"class.WTF::VectorBuffer.140" = type { %"class.WTF::VectorBufferBase.141" }
%"class.WTF::VectorBufferBase.141" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.142 }
%class.scoped_refptr.142 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.143" }
%"struct.std::__1::atomic.143" = type { %"struct.std::__1::__atomic_base.144" }
%"struct.std::__1::__atomic_base.144" = type { %"struct.std::__1::__atomic_base.145" }
%"struct.std::__1::__atomic_base.145" = type { %"struct.std::__1::__cxx_atomic_impl.146" }
%"struct.std::__1::__cxx_atomic_impl.146" = type { %"struct.std::__1::__cxx_atomic_base_impl.147" }
%"struct.std::__1::__cxx_atomic_base_impl.147" = type { i32 }
%"class.blink::Member.150" = type { %"class.blink::MemberBase.151" }
%"class.blink::MemberBase.151" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.152" = type { %"class.blink::MemberBase.153" }
%"class.blink::MemberBase.153" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.613", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.657", i32, i8, [3 x i8], %"class.blink::HeapVector.659", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.667", %"class.blink::Member.669", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.678", %"class.blink::Member.684", %"class.blink::Member.686", i8, [7 x i8] }>
%"class.blink::Supplementable.613" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.614" }
%"class.blink::HeapHashMap.614" = type { %"class.WTF::HashMap.617" }
%"class.WTF::HashMap.617" = type { %"class.WTF::HashTable.618" }
%"class.WTF::HashTable.618" = type <{ %"struct.WTF::KeyValuePair.620"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.620" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.629" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.621" }
%"class.blink::HeapObserverSet.621" = type { i32, [4 x i8], %"class.blink::HeapHashSet.622" }
%"class.blink::HeapHashSet.622" = type { %"class.WTF::HashSet.625" }
%"class.WTF::HashSet.625" = type { %"class.WTF::HashTable.626" }
%"class.WTF::HashTable.626" = type <{ %"class.blink::WeakMember.628"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.628" = type opaque
%"class.blink::Supplementable.629" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.630" }
%"class.blink::HeapHashMap.630" = type { %"class.WTF::HashMap.633" }
%"class.WTF::HashMap.633" = type { %"class.WTF::HashTable.634" }
%"class.WTF::HashTable.634" = type <{ %"struct.WTF::KeyValuePair.636"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.636" = type { i8*, %"class.blink::Member.1588" }
%"class.blink::Member.1588" = type { %"class.blink::MemberBase.1589" }
%"class.blink::MemberBase.1589" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1590" }
%"class.blink::Member.1590" = type { %"class.blink::MemberBase.1591" }
%"class.blink::MemberBase.1591" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.637, %"class.std::__1::unique_ptr.641", %"class.std::__1::unique_ptr.641", %"class.std::__1::unique_ptr.647", %"class.std::__1::unique_ptr.647", %"class.blink::Member.152", i32, [4 x i8], %"class.WTF::HashSet.653", i32, i32 }
%class.scoped_refptr.637 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.638", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.640 }
%"class.WTF::RefCounted.638" = type { %"class.base::RefCounted.639" }
%"class.base::RefCounted.639" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.640 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.641" = type { %"class.std::__1::__compressed_pair.642" }
%"class.std::__1::__compressed_pair.642" = type { %"struct.std::__1::__compressed_pair_elem.643" }
%"struct.std::__1::__compressed_pair_elem.643" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.647" = type { %"class.std::__1::__compressed_pair.648" }
%"class.std::__1::__compressed_pair.648" = type { %"struct.std::__1::__compressed_pair_elem.649" }
%"struct.std::__1::__compressed_pair_elem.649" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.653" = type { %"class.WTF::HashTable.654" }
%"class.WTF::HashTable.654" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.657" = type { %"class.blink::MemberBase.658" }
%"class.blink::MemberBase.658" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.659" = type { %"class.WTF::Vector.662" }
%"class.WTF::Vector.662" = type { %"class.WTF::VectorBuffer.663" }
%"class.WTF::VectorBuffer.663" = type { %"class.WTF::VectorBufferBase.664" }
%"class.WTF::VectorBufferBase.664" = type { %"class.blink::Member.665"*, i32, i32 }
%"class.blink::Member.665" = type opaque
%"class.blink::Member.667" = type { %"class.blink::MemberBase.668" }
%"class.blink::MemberBase.668" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.669" = type { %"class.blink::MemberBase.670" }
%"class.blink::MemberBase.670" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.671", i32, i32 }
%"class.blink::HeapHashMap.671" = type { %"class.WTF::HashMap.674" }
%"class.WTF::HashMap.674" = type { %"class.WTF::HashTable.675" }
%"class.WTF::HashTable.675" = type <{ %"struct.WTF::KeyValuePair.677"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.677" = type opaque
%"class.std::__1::unique_ptr.678" = type { %"class.std::__1::__compressed_pair.679" }
%"class.std::__1::__compressed_pair.679" = type { %"struct.std::__1::__compressed_pair_elem.680" }
%"struct.std::__1::__compressed_pair_elem.680" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.684" = type { %"class.blink::MemberBase.685" }
%"class.blink::MemberBase.685" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.686" = type { %"class.blink::MemberBase.687" }
%"class.blink::MemberBase.687" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.154" = type { %"class.blink::MemberBase.155" }
%"class.blink::MemberBase.155" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.156" = type { %"class.blink::MemberBase.157" }
%"class.blink::MemberBase.157" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.158" = type { %"class.blink::MemberBase.159" }
%"class.blink::MemberBase.159" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.160" = type { %"class.blink::MemberBase.161" }
%"class.blink::MemberBase.161" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.169" = type { %"class.blink::MemberBase.170" }
%"class.blink::MemberBase.170" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.171" = type { %"class.blink::MemberBase.172" }
%"class.blink::MemberBase.172" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.98" = type { %"class.blink::MemberBase.99" }
%"class.blink::MemberBase.99" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.100", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.102, %"class.WTF::Vector.103", %"class.WTF::Vector.103", %"class.blink::Member.2", %"class.blink::Member.108", %"class.blink::HeapHashSet", %"class.blink::Member.61", %"class.WTF::HashSet.116", %"class.WTF::TextPosition", %"class.blink::Member.120", %"class.blink::HeapVector.122", %"class.blink::Member.129" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.100" = type { %"class.blink::MemberBase.101" }
%"class.blink::MemberBase.101" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.102 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.103" = type { %"class.WTF::VectorBuffer.104" }
%"class.WTF::VectorBuffer.104" = type { %"class.WTF::VectorBufferBase.105" }
%"class.WTF::VectorBufferBase.105" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.108" = type { %"class.blink::MemberBase.109" }
%"class.blink::MemberBase.109" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.110" }
%"class.blink::Member.110" = type { %"class.blink::MemberBase.111" }
%"class.blink::MemberBase.111" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.114" }
%"class.WTF::HashTable.114" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.5" }
%"class.WTF::HashSet.116" = type { %"class.WTF::HashTable.117" }
%"class.WTF::HashTable.117" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.120" = type { %"class.blink::MemberBase.121" }
%"class.blink::MemberBase.121" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.122" = type { %"class.WTF::Vector.125" }
%"class.WTF::Vector.125" = type { %"class.WTF::VectorBuffer.126" }
%"class.WTF::VectorBuffer.126" = type { %"class.WTF::VectorBufferBase.127" }
%"class.WTF::VectorBufferBase.127" = type { %"class.blink::Member.108"*, i32, i32 }
%"class.blink::Member.129" = type { %"class.blink::MemberBase.130" }
%"class.blink::MemberBase.130" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.173 }
%class.scoped_refptr.173 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.174" = type { %"class.WTF::VectorBuffer.175" }
%"class.WTF::VectorBuffer.175" = type { %"class.WTF::VectorBufferBase.176" }
%"class.WTF::VectorBufferBase.176" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.177 }
%class.scoped_refptr.177 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.178", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.178" = type { %"class.base::RefCounted.179" }
%"class.base::RefCounted.179" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.182" }
%"class.blink::HeapHashMap.182" = type { %"class.WTF::HashMap.185" }
%"class.WTF::HashMap.185" = type { %"class.WTF::HashTable.186" }
%"class.WTF::HashTable.186" = type <{ %"struct.WTF::KeyValuePair.188"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.188" = type { %"class.blink::WeakMember.189", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.189" = type { %"class.blink::MemberBase.190" }
%"class.blink::MemberBase.190" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.384" = type { %"class.blink::MemberBase.385" }
%"class.blink::MemberBase.385" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.61", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.2", %"class.blink::Member.2", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.386" }
%"class.blink::HeapHashMap.386" = type { %"class.WTF::HashMap.389" }
%"class.WTF::HashMap.389" = type { %"class.WTF::HashTable.390" }
%"class.WTF::HashTable.390" = type <{ %"struct.WTF::KeyValuePair.392"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.392" = type opaque
%"class.blink::Member.393" = type { %"class.blink::MemberBase.394" }
%"class.blink::MemberBase.394" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.395" = type { %"class.WTF::HashSet.398" }
%"class.WTF::HashSet.398" = type { %"class.WTF::HashTable.399" }
%"class.WTF::HashTable.399" = type <{ %"class.blink::WeakMember.401"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.401" = type opaque
%"class.blink::HeapHashSet.402" = type { %"class.WTF::HashSet.405" }
%"class.WTF::HashSet.405" = type { %"class.WTF::HashTable.406" }
%"class.WTF::HashTable.406" = type <{ %"class.blink::WeakMember.408"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.408" = type opaque
%"class.blink::Member.409" = type { %"class.blink::MemberBase.410" }
%"class.blink::MemberBase.410" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.411" = type { %"class.blink::MemberBase.412" }
%"class.blink::MemberBase.412" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.413" = type { %"class.blink::MemberBase.414" }
%"class.blink::MemberBase.414" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.4", %"class.blink::HeapVector.92" }
%"class.blink::Member.415" = type { %"class.blink::MemberBase.416" }
%"class.blink::MemberBase.416" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.419" = type { %"class.WTF::HashMap.422" }
%"class.WTF::HashMap.422" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"struct.WTF::KeyValuePair.425"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.425" = type opaque
%"class.WTF::Vector.426" = type { %"class.WTF::VectorBuffer.427" }
%"class.WTF::VectorBuffer.427" = type { %"class.WTF::VectorBufferBase.428" }
%"class.WTF::VectorBufferBase.428" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.431" = type { %"class.blink::MemberBase.432" }
%"class.blink::MemberBase.432" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type { i32 (...)** }
%"class.blink::Member.435" = type { %"class.blink::MemberBase.436" }
%"class.blink::MemberBase.436" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.75" = type { %"class.blink::MemberBase.76" }
%"class.blink::MemberBase.76" = type { %"class.blink::Element"* }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.437" = type { %"class.blink::MemberBase.438" }
%"class.blink::MemberBase.438" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.439" = type { %"class.WTF::Vector.442" }
%"class.WTF::Vector.442" = type { %"class.WTF::VectorBuffer.443" }
%"class.WTF::VectorBuffer.443" = type { %"class.WTF::VectorBufferBase.444" }
%"class.WTF::VectorBufferBase.444" = type { %"class.blink::Member.445"*, i32, i32 }
%"class.blink::Member.445" = type opaque
%"class.std::__1::unique_ptr.447" = type { %"class.std::__1::__compressed_pair.448" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.453" = type { %"class.WTF::HashSet.456" }
%"class.WTF::HashSet.456" = type { %"class.WTF::HashTable.457" }
%"class.WTF::HashTable.457" = type <{ %"class.blink::WeakMember.459"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.459" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.460", i32, [4 x i8] }>
%"class.WTF::Vector.460" = type { %"class.WTF::VectorBuffer.461" }
%"class.WTF::VectorBuffer.461" = type { %"class.WTF::VectorBufferBase.462" }
%"class.WTF::VectorBufferBase.462" = type { %"struct.std::__1::pair.463"*, i32, i32 }
%"struct.std::__1::pair.463" = type opaque
%"class.blink::Member.466" = type { %"class.blink::MemberBase.467" }
%"class.blink::MemberBase.467" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.468" = type { %"class.WTF::VectorBuffer.469" }
%"class.WTF::VectorBuffer.469" = type { %"class.WTF::VectorBufferBase.470" }
%"class.WTF::VectorBufferBase.470" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.473" = type { %"class.std::__1::__compressed_pair.474" }
%"class.std::__1::__compressed_pair.474" = type { %"struct.std::__1::__compressed_pair_elem.475" }
%"struct.std::__1::__compressed_pair_elem.475" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.77" = type { %"class.WTF::Vector.80" }
%"class.WTF::Vector.80" = type { %"class.WTF::VectorBuffer.81" }
%"class.WTF::VectorBuffer.81" = type { %"class.WTF::VectorBufferBase.82" }
%"class.WTF::VectorBufferBase.82" = type { %"class.blink::Member.75"*, i32, i32 }
%"class.blink::HeapVector.479" = type { %"class.WTF::Vector.482" }
%"class.WTF::Vector.482" = type { %"class.WTF::VectorBuffer.483" }
%"class.WTF::VectorBuffer.483" = type { %"class.WTF::VectorBufferBase.484" }
%"class.WTF::VectorBufferBase.484" = type { %"class.blink::Member.485"*, i32, i32 }
%"class.blink::Member.485" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.61" }
%"class.blink::Member.487" = type { %"class.blink::MemberBase.488" }
%"class.blink::MemberBase.488" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.489" = type { %"class.blink::MemberBase.490" }
%"class.blink::MemberBase.490" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.491" = type { %"class.blink::MemberBase.492" }
%"class.blink::MemberBase.492" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.493" = type { %"class.blink::MemberBase.494" }
%"class.blink::MemberBase.494" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.495" = type { %"class.blink::MemberBase.496" }
%"class.blink::MemberBase.496" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.497" = type { %"class.WTF::HashTable.498" }
%"class.WTF::HashTable.498" = type <{ %"struct.WTF::KeyValuePair.501"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.501" = type opaque
%"class.blink::Member.502" = type { %"class.blink::MemberBase.503" }
%"class.blink::MemberBase.503" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.504" = type { %"class.blink::MemberBase.505" }
%"class.blink::MemberBase.505" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.506" = type { %"class.blink::MemberBase.507" }
%"class.blink::MemberBase.507" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.508" = type { %"class.blink::MemberBase.509" }
%"class.blink::MemberBase.509" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.383", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.374, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.374 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.375" }>
%"class.base::RefCountedThreadSafe.375" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.376 }
%class.scoped_refptr.376 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.377", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.377" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.378" }
%"struct.std::__1::atomic.378" = type { %"struct.std::__1::__atomic_base.379" }
%"struct.std::__1::__atomic_base.379" = type { %"struct.std::__1::__atomic_base.380" }
%"struct.std::__1::__atomic_base.380" = type { %"struct.std::__1::__cxx_atomic_impl.381" }
%"struct.std::__1::__cxx_atomic_impl.381" = type { %"struct.std::__1::__cxx_atomic_base_impl.382" }
%"struct.std::__1::__cxx_atomic_base_impl.382" = type { i8 }
%"class.blink::WeakMember.383" = type { %"class.blink::MemberBase.62" }
%"class.blink::HeapHashSet.510" = type { %"class.WTF::HashSet.513" }
%"class.WTF::HashSet.513" = type { %"class.WTF::HashTable.514" }
%"class.WTF::HashTable.514" = type <{ %"class.blink::Member.516"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.516" = type opaque
%"class.blink::Member.517" = type { %"class.blink::MemberBase.518" }
%"class.blink::MemberBase.518" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.519" = type { %"class.blink::MemberBase.520" }
%"class.blink::MemberBase.520" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.521" = type { %"class.blink::MemberBase.522" }
%"class.blink::MemberBase.522" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.523" = type { %"class.blink::MemberBase.524" }
%"class.blink::MemberBase.524" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.525" = type { %"class.blink::MemberBase.526" }
%"class.blink::MemberBase.526" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.527" = type { %"class.std::__1::__compressed_pair.528" }
%"class.std::__1::__compressed_pair.528" = type { %"struct.std::__1::__compressed_pair_elem.529" }
%"struct.std::__1::__compressed_pair_elem.529" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.533" = type { %"class.std::__1::__compressed_pair.534" }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.535" }
%"struct.std::__1::__compressed_pair_elem.535" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.116", %"class.WTF::HashSet.116", %"class.WTF::HashSet.116", %"class.WTF::HashSet.116", %"class.WTF::HashSet.116", %"class.WTF::HashSet.116", i32, [4 x i8], %"class.WTF::HashMap.536", %"class.WTF::HashMap.536", %"class.WTF::HashMap.536", %"class.WTF::HashMap.536", %"class.WTF::HashMap.536", %"class.WTF::HashMap.536", %"class.WTF::HashMap.536", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.536" = type { %"class.WTF::HashTable.537" }
%"class.WTF::HashTable.537" = type <{ %"struct.WTF::KeyValuePair.540"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.540" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.544" = type { %"class.blink::MemberBase.545" }
%"class.blink::MemberBase.545" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.546" = type { %"class.blink::MemberBase.547" }
%"class.blink::MemberBase.547" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.548" = type { %"class.blink::MemberBase.549" }
%"class.blink::MemberBase.549" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.550" = type { %"class.blink::MemberBase.551" }
%"class.blink::MemberBase.551" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.552" = type { %"class.WTF::VectorBuffer.553" }
%"class.WTF::VectorBuffer.553" = type { %"class.WTF::VectorBufferBase.554" }
%"class.WTF::VectorBufferBase.554" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.557" = type { %"class.WTF::HashMap.560" }
%"class.WTF::HashMap.560" = type { %"class.WTF::HashTable.561" }
%"class.WTF::HashTable.561" = type <{ %"struct.WTF::KeyValuePair.563"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.563" = type opaque
%"class.blink::Member.564" = type { %"class.blink::MemberBase.565" }
%"class.blink::MemberBase.565" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.566" = type { %"class.std::__1::__compressed_pair.567" }
%"class.std::__1::__compressed_pair.567" = type { %"struct.std::__1::__compressed_pair_elem.568" }
%"struct.std::__1::__compressed_pair_elem.568" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.572" = type { %"class.blink::MemberBase.573" }
%"class.blink::MemberBase.573" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.574" = type { %"class.blink::MemberBase.575" }
%"class.blink::MemberBase.575" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.576" = type { %"class.WTF::HashMap.579" }
%"class.WTF::HashMap.579" = type { %"class.WTF::HashTable.580" }
%"class.WTF::HashTable.580" = type <{ %"struct.WTF::KeyValuePair.582"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.582" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.583" }
%"class.blink::HeapHashSet.583" = type { %"class.WTF::HashSet.586" }
%"class.WTF::HashSet.586" = type { %"class.WTF::HashTable.587" }
%"class.WTF::HashTable.587" = type <{ %"class.blink::WeakMember.589"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.589" = type opaque
%"class.blink::Member.590" = type { %"class.blink::MemberBase.591" }
%"class.blink::MemberBase.591" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.592" = type { %"class.blink::MemberBase.593" }
%"class.blink::MemberBase.593" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.61", %"class.blink::HeapHashSet.599", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.606", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.599" = type { %"class.WTF::HashSet.602" }
%"class.WTF::HashSet.602" = type { %"class.WTF::HashTable.603" }
%"class.WTF::HashTable.603" = type <{ %"class.blink::Member.605"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.605" = type opaque
%"class.blink::HeapTaskRunnerTimer.606" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.607", { i64, i64 } }
%"class.blink::WeakMember.607" = type { %"class.blink::MemberBase.593" }
%"class.blink::WeakMember.594" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::Node"* }
%"class.blink::Member.595" = type { %"class.blink::MemberBase.596" }
%"class.blink::MemberBase.596" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.63" = type { %"class.blink::MemberBase.64" }
%"class.blink::MemberBase.64" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.67" }
%"class.blink::HeapHashMap.67" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.71" }
%"class.blink::Member.71" = type { %"class.blink::MemberBase.72" }
%"class.blink::MemberBase.72" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.75", i32, %"class.blink::HeapVector.77" }
%"class.blink::Member.84" = type { %"class.blink::MemberBase.85" }
%"class.blink::MemberBase.85" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.86" = type { %"class.blink::MemberBase.87" }
%"class.blink::MemberBase.87" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.88" = type { %"class.blink::MemberBase.89" }
%"class.blink::MemberBase.89" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.29" }
%"class.blink::Member.29" = type { %"class.blink::MemberBase.30" }
%"class.blink::MemberBase.30" = type { %"class.blink::HeapHashMap.31"* }
%"class.blink::HeapHashMap.31" = type opaque
%"class.blink::Member.90" = type { %"class.blink::MemberBase.91" }
%"class.blink::MemberBase.91" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.92" = type { %"class.WTF::Vector.95" }
%"class.WTF::Vector.95" = type { %"class.WTF::VectorBuffer.96" }
%"class.WTF::VectorBuffer.96" = type { %"class.WTF::VectorBufferBase.97" }
%"class.WTF::VectorBufferBase.97" = type { %"class.blink::Member.98"*, i32, i32 }
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.12" = type { %"class.blink::MemberBase.13" }
%"class.blink::MemberBase.13" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.16", %"class.blink::Member.18", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.16" = type { %"class.WTF::SingleThreadedBitField.17" }
%"class.WTF::SingleThreadedBitField.17" = type { i32 }
%"class.blink::Member.18" = type { %"class.blink::MemberBase.19" }
%"class.blink::MemberBase.19" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.20 }
%class.scoped_refptr.20 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.21", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.21" = type { %"class.base::RefCounted.22" }
%"class.base::RefCounted.22" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::ListedElement.base" = type <{ %"class.blink::GarbageCollectedMixin", i8, [7 x i8], %"class.blink::Member.23", %"class.blink::Member.25", %"class.blink::Member.47", %"class.WTF::String", i8, [3 x i8], i32, i32 }>
%"class.blink::Member.23" = type { %"class.blink::MemberBase.24" }
%"class.blink::MemberBase.24" = type { %"class.blink::FormAttributeTargetObserver"* }
%"class.blink::FormAttributeTargetObserver" = type opaque
%"class.blink::Member.25" = type { %"class.blink::MemberBase.26" }
%"class.blink::MemberBase.26" = type { %"class.blink::HTMLFormElement"* }
%"class.blink::HTMLFormElement" = type { %"class.blink::HTMLElement", %"class.blink::FormSubmission::Attributes", %"class.blink::Member.27", %"class.blink::RadioButtonGroupScope", %"class.blink::HeapVector", %"class.blink::HeapVector.39", i32, i8, i8, i8, i8 }
%"class.blink::FormSubmission::Attributes" = type { i32, i8, %"class.WTF::String", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::String" }
%"class.blink::Member.27" = type { %"class.blink::MemberBase.28" }
%"class.blink::MemberBase.28" = type { %"class.blink::HeapHashMap"* }
%"class.blink::HeapHashMap" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.34" }
%"class.WTF::Vector.34" = type { %"class.WTF::VectorBuffer.35" }
%"class.WTF::VectorBuffer.35" = type { %"class.WTF::VectorBufferBase.36" }
%"class.WTF::VectorBufferBase.36" = type { %"class.blink::Member.37"*, i32, i32 }
%"class.blink::Member.37" = type opaque
%"class.blink::HeapVector.39" = type { %"class.WTF::Vector.42" }
%"class.WTF::Vector.42" = type { %"class.WTF::VectorBuffer.43" }
%"class.WTF::VectorBuffer.43" = type { %"class.WTF::VectorBufferBase.44" }
%"class.WTF::VectorBufferBase.44" = type { %"class.blink::Member.45"*, i32, i32 }
%"class.blink::Member.45" = type opaque
%"class.blink::Member.47" = type { %"class.blink::MemberBase.48" }
%"class.blink::MemberBase.48" = type { %"class.blink::ValidityState"* }
%"class.blink::ValidityState" = type opaque
%"class.blink::FormAssociated" = type { i32 (...)** }
%"class.blink::WebString" = type { %class.scoped_refptr.10 }
%"class.blink::Member.49" = type { %"class.blink::MemberBase.50" }
%"class.blink::MemberBase.50" = type { %"class.blink::TextControlInnerEditorElement"* }
%"class.blink::TextControlInnerEditorElement" = type <{ %"class.blink::HTMLDivElement", i8, [7 x i8] }>
%"class.blink::HTMLDivElement" = type { %"class.blink::HTMLElement" }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.51" = type { %"class.blink::MemberBase.52" }
%"class.blink::MemberBase.52" = type { %"class.blink::InputType"* }
%"class.blink::Member.53" = type { %"class.blink::MemberBase.54" }
%"class.blink::MemberBase.54" = type { %"class.blink::InputTypeView"* }
%"class.blink::InputTypeView" = type { %"class.blink::GarbageCollectedMixin", i8, %"class.blink::Member" }
%"class.blink::Member.55" = type { %"class.blink::MemberBase.56" }
%"class.blink::MemberBase.56" = type { %"class.blink::HTMLImageLoader"* }
%"class.blink::HTMLImageLoader" = type opaque
%"class.blink::Member.57" = type { %"class.blink::MemberBase.58" }
%"class.blink::MemberBase.58" = type { %"class.blink::ListAttributeTargetObserver"* }
%"class.blink::ListAttributeTargetObserver" = type opaque
%"class.blink::BaseTextInputType" = type { %"class.blink::TextFieldInputType", %"class.blink::Member.688", %"class.WTF::AtomicString" }
%"class.blink::TextFieldInputType" = type { %"class.blink::InputType", %"class.blink::InputTypeView", %"class.blink::SpinButtonElement::SpinButtonOwner" }
%"class.blink::SpinButtonElement::SpinButtonOwner" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.688" = type { %"class.blink::MemberBase.689" }
%"class.blink::MemberBase.689" = type { %"class.blink::ScriptRegexp"* }
%"class.blink::ScriptRegexp" = type { %"class.blink::TraceWrapperV8Reference.692", %"class.WTF::String" }
%"class.blink::TraceWrapperV8Reference.692" = type { %"class.v8::TracedReference.693" }
%"class.v8::TracedReference.693" = type { %"class.v8::BasicTracedReference.694" }
%"class.v8::BasicTracedReference.694" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::BaseButtonInputType" = type { %"class.blink::InputType", %"class.blink::KeyboardClickableInputTypeView" }
%"class.blink::KeyboardClickableInputTypeView" = type { %"class.blink::InputTypeView" }
%"class.blink::ColorInputType" = type { %"class.blink::InputType", %"class.blink::KeyboardClickableInputTypeView", %"class.blink::ColorChooserClient", %"class.blink::Member.695" }
%"class.blink::ColorChooserClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.695" = type { %"class.blink::MemberBase.696" }
%"class.blink::MemberBase.696" = type { %"class.blink::ColorChooser"* }
%"class.blink::ColorChooser" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DateInputType" = type { %"class.blink::BaseTemporalInputType" }
%"class.blink::BaseTemporalInputType" = type { %"class.blink::InputType" }
%"class.blink::EmailInputType" = type { %"class.blink::BaseTextInputType" }
%"class.blink::FileInputType" = type { %"class.blink::InputType", %"class.blink::KeyboardClickableInputTypeView", %"class.blink::FileChooserClient", %"class.blink::Member.890", %"class.WTF::String" }
%"class.blink::FileChooserClient" = type { %"class.blink::PopupOpeningObserver", %class.scoped_refptr.697 }
%"class.blink::PopupOpeningObserver" = type { %"class.blink::GarbageCollectedMixin" }
%class.scoped_refptr.697 = type { %"class.blink::FileChooser"* }
%"class.blink::FileChooser" = type { %"class.WTF::RefCounted.698", %"class.blink::Persistent.700", %"class.mojo::StructPtr", %"class.blink::Persistent.724", %"class.mojo::Remote" }
%"class.WTF::RefCounted.698" = type { %"class.base::RefCounted.699" }
%"class.base::RefCounted.699" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.700" = type { %"class.blink::PersistentBase.701" }
%"class.blink::PersistentBase.701" = type { %"class.blink::FileChooserClient"*, %"class.blink::PersistentNodePtr" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.702" }
%"class.std::__1::unique_ptr.702" = type { %"class.std::__1::__compressed_pair.703" }
%"class.std::__1::__compressed_pair.703" = type { %"struct.std::__1::__compressed_pair_elem.704" }
%"struct.std::__1::__compressed_pair_elem.704" = type { %"class.blink::mojom::blink::FileChooserParams"* }
%"class.blink::mojom::blink::FileChooserParams" = type { i32, %"class.WTF::String", %"class.base::FilePath", %"class.WTF::Vector.711", %"class.WTF::Vector.716", i8, i8, %"class.blink::KURL" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.706" }
%"struct.std::__1::__compressed_pair_elem.706" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.707 }
%union.anon.707 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::Vector.711" = type { %"class.WTF::VectorBuffer.712" }
%"class.WTF::VectorBuffer.712" = type { %"class.WTF::VectorBufferBase.713" }
%"class.WTF::VectorBufferBase.713" = type { %"class.base::FilePath"*, i32, i32 }
%"class.WTF::Vector.716" = type { %"class.WTF::VectorBuffer.717" }
%"class.WTF::VectorBuffer.717" = type { %"class.WTF::VectorBufferBase.718" }
%"class.WTF::VectorBufferBase.718" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::Persistent.724" = type { %"class.blink::PersistentBase.725" }
%"class.blink::PersistentBase.725" = type { %"class.blink::ChromeClientImpl"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ChromeClientImpl" = type opaque
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.884" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.726, %"class.std::__1::unique_ptr.834", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.728, i32 }>
%class.scoped_refptr.726 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.728, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.800", %"class.absl::optional.805", %"class.absl::optional.761", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.825", i8, [7 x i8], %class.scoped_refptr.728, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.727" }>
%"class.base::RefCountedThreadSafe.727" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.729", %"class.std::__1::unique_ptr.735", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.741" }
%"class.std::__1::unique_ptr.729" = type { %"class.std::__1::__compressed_pair.730" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.731" }
%"struct.std::__1::__compressed_pair_elem.731" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.735" = type { %"class.std::__1::__compressed_pair.736" }
%"class.std::__1::__compressed_pair.736" = type { %"struct.std::__1::__compressed_pair_elem.737" }
%"struct.std::__1::__compressed_pair_elem.737" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.741" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.728, %"class.std::__1::unique_ptr.742", %"class.absl::optional.751", %"struct.std::__1::atomic.368", i8, i8, i8, i8, i32, i32, %"class.absl::optional.761", %"class.std::__1::unique_ptr.766", i8, i64, %class.scoped_refptr.796, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.799" }
%"class.std::__1::unique_ptr.742" = type { %"class.std::__1::__compressed_pair.743" }
%"class.std::__1::__compressed_pair.743" = type { %"struct.std::__1::__compressed_pair_elem.744" }
%"struct.std::__1::__compressed_pair_elem.744" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.728, i8, %"class.mojo::ScopedHandleBase.745", %class.scoped_refptr.746, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.747" }
%"class.mojo::ScopedHandleBase.745" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.746 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.747" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.751" = type { %"class.absl::optional_internal::optional_data.752" }
%"class.absl::optional_internal::optional_data.752" = type { %"class.absl::optional_internal::optional_data_base.753" }
%"class.absl::optional_internal::optional_data_base.753" = type { %"class.absl::optional_internal::optional_data_dtor_base.754" }
%"class.absl::optional_internal::optional_data_dtor_base.754" = type { i8, %union.anon.755 }
%union.anon.755 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.756", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.756" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.766" = type { %"class.std::__1::__compressed_pair.767" }
%"class.std::__1::__compressed_pair.767" = type { %"struct.std::__1::__compressed_pair_elem.768" }
%"struct.std::__1::__compressed_pair_elem.768" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.769", i8, i64, %class.scoped_refptr.770, %class.scoped_refptr.792 }
%"class.base::RepeatingCallback.769" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.770 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.771", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.781", i8, [7 x i8] }>
%"class.base::RefCounted.771" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.772 }
%class.scoped_refptr.772 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.773", %"class.std::__1::__compressed_pair.778" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.773" = type { %"struct.std::__1::__compressed_pair_elem.774" }
%"struct.std::__1::__compressed_pair_elem.774" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.778" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"class.std::__1::map.781" = type { %"class.std::__1::__tree.782" }
%"class.std::__1::__tree.782" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.783", %"class.std::__1::__compressed_pair.787" }
%"class.std::__1::__compressed_pair.783" = type { %"struct.std::__1::__compressed_pair_elem.774" }
%"class.std::__1::__compressed_pair.787" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%class.scoped_refptr.792 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.796 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.797 }
%class.scoped_refptr.797 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.900", [4 x i8], %"class.base::RepeatingCallback.837", %class.scoped_refptr.728, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.900" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.837" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.798 }
%class.scoped_refptr.798 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.799" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.800" = type { %"class.absl::optional_internal::optional_data.801" }
%"class.absl::optional_internal::optional_data.801" = type { %"class.absl::optional_internal::optional_data_base.802" }
%"class.absl::optional_internal::optional_data_base.802" = type { %"class.absl::optional_internal::optional_data_dtor_base.803" }
%"class.absl::optional_internal::optional_data_dtor_base.803" = type { i8, %union.anon.804 }
%union.anon.804 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.805" = type { %"class.absl::optional_internal::optional_data.806" }
%"class.absl::optional_internal::optional_data.806" = type { %"class.absl::optional_internal::optional_data_base.807" }
%"class.absl::optional_internal::optional_data_base.807" = type { %"class.absl::optional_internal::optional_data_dtor_base.808" }
%"class.absl::optional_internal::optional_data_dtor_base.808" = type { i8, [7 x i8], %union.anon.809 }
%union.anon.809 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.761" = type { %"class.absl::optional_internal::optional_data.762" }
%"class.absl::optional_internal::optional_data.762" = type { %"class.absl::optional_internal::optional_data_base.763" }
%"class.absl::optional_internal::optional_data_base.763" = type { %"class.absl::optional_internal::optional_data_dtor_base.764" }
%"class.absl::optional_internal::optional_data_dtor_base.764" = type { i8, %union.anon.765 }
%union.anon.765 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.810 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.810 = type { %"class.std::__1::map.813" }
%"class.std::__1::map.813" = type { %"class.std::__1::__tree.814" }
%"class.std::__1::__tree.814" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.815", %"class.std::__1::__compressed_pair.819" }
%"class.std::__1::__compressed_pair.815" = type { %"struct.std::__1::__compressed_pair_elem.774" }
%"class.std::__1::__compressed_pair.819" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.824"*, i64 }
%"class.std::__1::unique_ptr.824" = type opaque
%"class.std::__1::map.825" = type { %"class.std::__1::__tree.826" }
%"class.std::__1::__tree.826" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.827", %"class.std::__1::__compressed_pair.831" }
%"class.std::__1::__compressed_pair.827" = type { %"struct.std::__1::__compressed_pair_elem.774" }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"class.std::__1::unique_ptr.834" = type { %"class.std::__1::__compressed_pair.835" }
%"class.std::__1::__compressed_pair.835" = type { %"struct.std::__1::__compressed_pair_elem.836" }
%"struct.std::__1::__compressed_pair_elem.836" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.837", %"class.base::OnceCallback.838", %"class.absl::optional.839", %"class.absl::optional.844", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.851", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.859", %"class.std::__1::map.870", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.879", i8, %class.scoped_refptr.728, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.880" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.838" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.839" = type { %"class.absl::optional_internal::optional_data.840" }
%"class.absl::optional_internal::optional_data.840" = type { %"class.absl::optional_internal::optional_data_base.841" }
%"class.absl::optional_internal::optional_data_base.841" = type { %"class.absl::optional_internal::optional_data_dtor_base.842" }
%"class.absl::optional_internal::optional_data_dtor_base.842" = type { i8, %union.anon.843 }
%union.anon.843 = type { %"class.base::TimeDelta" }
%"class.absl::optional.844" = type { %"class.absl::optional_internal::optional_data.845" }
%"class.absl::optional_internal::optional_data.845" = type { %"class.absl::optional_internal::optional_data_base.846" }
%"class.absl::optional_internal::optional_data_base.846" = type { %"class.absl::optional_internal::optional_data_dtor_base.847" }
%"class.absl::optional_internal::optional_data_dtor_base.847" = type { i8, %union.anon.848 }
%union.anon.848 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.728, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.849" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.849" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.850 }
%class.scoped_refptr.850 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.851" = type { %"class.std::__1::__compressed_pair.852" }
%"class.std::__1::__compressed_pair.852" = type { %"struct.std::__1::__compressed_pair_elem.853" }
%"struct.std::__1::__compressed_pair_elem.853" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.854", %class.scoped_refptr.855 }
%"class.base::RepeatingCallback.854" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.855 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.727", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.859" = type { %"class.std::__1::__tree.860" }
%"class.std::__1::__tree.860" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.861", %"class.std::__1::__compressed_pair.865" }
%"class.std::__1::__compressed_pair.861" = type { %"struct.std::__1::__compressed_pair_elem.774" }
%"class.std::__1::__compressed_pair.865" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"class.std::__1::map.870" = type { %"class.std::__1::__tree.871" }
%"class.std::__1::__tree.871" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.872", %"class.std::__1::__compressed_pair.876" }
%"class.std::__1::__compressed_pair.872" = type { %"struct.std::__1::__compressed_pair_elem.774" }
%"class.std::__1::__compressed_pair.876" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"class.base::OnceCallback.879" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.880" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.728 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.std::__1::unique_ptr.884" = type { %"class.std::__1::__compressed_pair.885" }
%"class.std::__1::__compressed_pair.885" = type { %"struct.std::__1::__compressed_pair_elem.886" }
%"struct.std::__1::__compressed_pair_elem.886" = type { %"class.blink::mojom::blink::FileChooserProxy"* }
%"class.blink::mojom::blink::FileChooserProxy" = type { %"class.blink::mojom::blink::FileChooser", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::FileChooser" = type { i32 (...)** }
%"class.blink::Member.890" = type { %"class.blink::MemberBase.891" }
%"class.blink::MemberBase.891" = type { %"class.blink::FileList"* }
%"class.blink::FileList" = type { %"class.blink::ScriptWrappable", %"class.blink::HeapVector.892" }
%"class.blink::HeapVector.892" = type { %"class.WTF::Vector.895" }
%"class.WTF::Vector.895" = type { %"class.WTF::VectorBuffer.896" }
%"class.WTF::VectorBuffer.896" = type { %"class.WTF::VectorBufferBase.897" }
%"class.WTF::VectorBufferBase.897" = type { %"class.blink::Member.898"*, i32, i32 }
%"class.blink::Member.898" = type { %"class.blink::MemberBase.1617" }
%"class.blink::MemberBase.1617" = type { %"class.blink::File"* }
%"class.blink::File" = type { %"class.blink::Blob", i8, i32, %"class.WTF::String", %"class.WTF::String", %"class.blink::KURL", %"class.absl::optional.1621", %"class.absl::optional.917", %"class.WTF::String" }
%"class.blink::Blob" = type { %"class.blink::ScriptWrappable", %"class.blink::URLRegistrable", %"class.blink::ImageBitmapSource", %class.scoped_refptr.1618 }
%"class.blink::URLRegistrable" = type { i32 (...)** }
%"class.blink::ImageBitmapSource" = type { i32 (...)** }
%class.scoped_refptr.1618 = type { %"class.blink::BlobDataHandle"* }
%"class.blink::BlobDataHandle" = type { %"class.WTF::ThreadSafeRefCounted.1619", %"class.WTF::String", %"class.WTF::String", i64, i8, %"class.mojo::PendingRemote", %"class.WTF::Mutex" }
%"class.WTF::ThreadSafeRefCounted.1619" = type { %"class.base::RefCountedThreadSafe.1620" }
%"class.base::RefCountedThreadSafe.1620" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.absl::optional.1621" = type { %"class.absl::optional_internal::optional_data.1622" }
%"class.absl::optional_internal::optional_data.1622" = type { %"class.absl::optional_internal::optional_data_base.1623" }
%"class.absl::optional_internal::optional_data_base.1623" = type { %"class.absl::optional_internal::optional_data_dtor_base.1624" }
%"class.absl::optional_internal::optional_data_dtor_base.1624" = type { i8, %union.anon.1625 }
%union.anon.1625 = type { i64 }
%"class.absl::optional.917" = type { %"class.absl::optional_internal::optional_data.918" }
%"class.absl::optional_internal::optional_data.918" = type { %"class.absl::optional_internal::optional_data_base.919" }
%"class.absl::optional_internal::optional_data_base.919" = type { %"class.absl::optional_internal::optional_data_dtor_base.920" }
%"class.absl::optional_internal::optional_data_dtor_base.920" = type { i8, %union.anon.921 }
%union.anon.921 = type { %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.922" }
%"class.base::time_internal::TimeBase.922" = type { i64 }
%"class.blink::ImageInputType" = type <{ %"class.blink::BaseButtonInputType", %"class.blink::IntPoint", i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::RangeInputType" = type { %"class.blink::InputType", %"class.blink::InputTypeView", i8, %"class.WTF::Vector.901" }
%"class.WTF::Vector.901" = type { %"class.WTF::VectorBuffer.902" }
%"class.WTF::VectorBuffer.902" = type { %"class.WTF::VectorBufferBase.903" }
%"class.WTF::VectorBufferBase.903" = type { %"class.blink::Decimal"*, i32, i32 }
%"class.blink::Decimal" = type { %"class.blink::Decimal::EncodedData" }
%"class.blink::Decimal::EncodedData" = type <{ i64, i16, [2 x i8], i32, i32, [4 x i8] }>
%"class.blink::SearchInputType" = type { %"class.blink::BaseTextInputType", %"class.blink::HeapTaskRunnerTimer.906" }
%"class.blink::HeapTaskRunnerTimer.906" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.907", { i64, i64 } }
%"class.blink::WeakMember.907" = type { %"class.blink::MemberBase.908" }
%"class.blink::MemberBase.908" = type { %"class.blink::SearchInputType"* }
%"class.blink::SubmitInputType" = type { %"class.blink::BaseButtonInputType" }
%"class.blink::TimeInputType" = type { %"class.blink::BaseTemporalInputType" }
%"class.blink::FormData" = type <{ %"class.blink::ScriptWrappable", %"class.blink::PairIterable", %"class.WTF::TextEncoding", %"class.blink::HeapVector.909", i8, [7 x i8] }>
%"class.blink::PairIterable" = type { %"class.blink::Iterable" }
%"class.blink::Iterable" = type { i32 (...)** }
%"class.blink::HeapVector.909" = type { %"class.WTF::Vector.912" }
%"class.WTF::Vector.912" = type { %"class.WTF::VectorBuffer.913" }
%"class.WTF::VectorBuffer.913" = type { %"class.WTF::VectorBufferBase.914" }
%"class.WTF::VectorBufferBase.914" = type { %"class.blink::Member.915"*, i32, i32 }
%"class.blink::Member.915" = type opaque
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.18", %"class.WTF::Vector.1626" }
%"class.WTF::Vector.1626" = type { %"class.WTF::VectorBuffer.1627" }
%"class.WTF::VectorBuffer.1627" = type { %"class.WTF::VectorBufferBase.1628", [64 x i8] }
%"class.WTF::VectorBufferBase.1628" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.923" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.923" = type { %"class.v8::TracedReference.924" }
%"class.v8::TracedReference.924" = type { %"class.v8::BasicTracedReference.925" }
%"class.v8::BasicTracedReference.925" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::StepRange" = type <{ %"class.blink::Decimal", %"class.blink::Decimal", %"class.blink::Decimal", %"class.blink::Decimal", %"struct.blink::StepRange::StepDescription", i8, i8, i8, [5 x i8] }>
%"struct.blink::StepRange::StepDescription" = type { i32, i32, i32, i32 }
%"class.blink::Locale" = type <{ i32 (...)**, [12 x %"class.WTF::String"], %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.blink::ChromeClient" = type opaque
%"class.blink::Page" = type { %"class.blink::Supplementable.929", %"class.blink::SettingsDelegate", %"class.blink::PageScheduler::Delegate", %"class.blink::Member.943", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.blink::Member.945", %"class.blink::Member.951", %"class.blink::Member.953", %"class.blink::Member.955", %"class.blink::Member.957", %"class.blink::Member.959", %"class.blink::Member.961", %"class.blink::Member.963", %"class.blink::HeapObserverSet.965", %"class.blink::Member.973", %"class.blink::Member.975", %"class.blink::Member.977", %"class.blink::Member.979", %"class.blink::Member.981", %"class.blink::Member.983", %"class.blink::Member.985", %"class.blink::Member.987", %"class.blink::Member.989", %"class.blink::Member.991", %"class.blink::Member.993", %"class.blink::InspectorIssueStorage", %"class.blink::Deprecation", %"struct.blink::WebWindowFeatures", i8, i8, i8, float, %"class.mojo::StructPtr.1018", i8, i8, i8, i8, i32, %"class.blink::HeapHashSet.1025", %"class.blink::Member.949", %"class.blink::Member.949", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.std::__1::unique_ptr.1033", %"class.std::__1::unique_ptr.1039", i32, i32, i8, %"class.blink::mojom::blink::TextAutosizerPageInfo", %"class.blink::WebScopedVirtualTimePauser" }
%"class.blink::Supplementable.929" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.930" }
%"class.blink::HeapHashMap.930" = type { %"class.WTF::HashMap.933" }
%"class.WTF::HashMap.933" = type { %"class.WTF::HashTable.934" }
%"class.WTF::HashTable.934" = type <{ %"struct.WTF::KeyValuePair.936"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.936" = type opaque
%"class.blink::SettingsDelegate" = type { i32 (...)**, %"class.std::__1::unique_ptr.937" }
%"class.std::__1::unique_ptr.937" = type { %"class.std::__1::__compressed_pair.938" }
%"class.std::__1::__compressed_pair.938" = type { %"struct.std::__1::__compressed_pair_elem.939" }
%"struct.std::__1::__compressed_pair_elem.939" = type { %"class.blink::Settings"* }
%"class.blink::Settings" = type opaque
%"class.blink::PageScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Member.943" = type { %"class.blink::MemberBase.944" }
%"class.blink::MemberBase.944" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.949", %"class.blink::Member.1047", %"class.blink::Member.1049", i8, i32, i8, i32, %"class.blink::Member.1091", %"class.blink::Member.1072", %"class.blink::FrameLifecycle", %"class.blink::Member.943", %"class.blink::Member.943", %"class.blink::Member.943", %"class.blink::Member.943", %"class.blink::Member.943", %"class.blink::Member.943", %"class.blink::Member.1093", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.1103", i8, %"class.base::UnguessableToken", %"class.absl::optional.1105", %"class.absl::optional.1110", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.943", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1047" = type { %"class.blink::MemberBase.1048" }
%"class.blink::MemberBase.1048" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.1049" = type { %"class.blink::MemberBase.1050" }
%"class.blink::MemberBase.1050" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.943", %"class.blink::Member.1072", %"class.blink::Member.1074", %"class.blink::Member.1076", i8, %"class.WTF::Vector.1078" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.1065" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.1053" }
%"class.blink::HeapVector.1053" = type { %"class.WTF::Vector.1056" }
%"class.WTF::Vector.1056" = type { %"class.WTF::VectorBuffer.1057" }
%"class.WTF::VectorBuffer.1057" = type { %"class.WTF::VectorBufferBase.1058", [32 x i8] }
%"class.WTF::VectorBufferBase.1058" = type { %"struct.std::__1::pair.1059"*, i32, i32 }
%"struct.std::__1::pair.1059" = type { %"class.WTF::AtomicString", %"class.blink::Member.1060" }
%"class.blink::Member.1060" = type { %"class.blink::MemberBase.1061" }
%"class.blink::MemberBase.1061" = type { %"class.blink::HeapVector.1062"* }
%"class.blink::HeapVector.1062" = type opaque
%"class.std::__1::unique_ptr.1065" = type { %"class.std::__1::__compressed_pair.1066" }
%"class.std::__1::__compressed_pair.1066" = type { %"struct.std::__1::__compressed_pair_elem.1067" }
%"struct.std::__1::__compressed_pair_elem.1067" = type { %"class.WTF::Vector.1068"* }
%"class.WTF::Vector.1068" = type opaque
%"class.blink::Member.1074" = type { %"class.blink::MemberBase.1075" }
%"class.blink::MemberBase.1075" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.1076" = type { %"class.blink::MemberBase.1077" }
%"class.blink::MemberBase.1077" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.1078" = type { %"class.WTF::VectorBuffer.1079" }
%"class.WTF::VectorBuffer.1079" = type { %"class.WTF::VectorBufferBase.1080" }
%"class.WTF::VectorBufferBase.1080" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote.1081", i8, %"class.WTF::String" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote.1081" = type { %"class.mojo::internal::InterfacePtrState.1082" }
%"class.mojo::internal::InterfacePtrState.1082" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1083" }
%"class.std::__1::unique_ptr.1083" = type { %"class.std::__1::__compressed_pair.1084" }
%"class.std::__1::__compressed_pair.1084" = type { %"struct.std::__1::__compressed_pair_elem.1085" }
%"struct.std::__1::__compressed_pair_elem.1085" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.1091" = type { %"class.blink::MemberBase.1092" }
%"class.blink::MemberBase.1092" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.1072" = type { %"class.blink::MemberBase.1073" }
%"class.blink::MemberBase.1073" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.1093" = type { %"class.blink::MemberBase.1094" }
%"class.blink::MemberBase.1094" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type opaque
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.943", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1095" }
%"class.std::__1::vector.1095" = type { %"class.std::__1::__vector_base.1096" }
%"class.std::__1::__vector_base.1096" = type { %"struct.std::__1::pair.1097"*, %"struct.std::__1::pair.1097"*, %"class.std::__1::__compressed_pair.1098" }
%"struct.std::__1::pair.1097" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.1098" = type { %"struct.std::__1::__compressed_pair_elem.1099" }
%"struct.std::__1::__compressed_pair_elem.1099" = type { %"struct.std::__1::pair.1097"* }
%"class.blink::Member.1103" = type { %"class.blink::MemberBase.1104" }
%"class.blink::MemberBase.1104" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.1105" = type { %"class.absl::optional_internal::optional_data.1106" }
%"class.absl::optional_internal::optional_data.1106" = type { %"class.absl::optional_internal::optional_data_base.1107" }
%"class.absl::optional_internal::optional_data_base.1107" = type { %"class.absl::optional_internal::optional_data_dtor_base.1108" }
%"class.absl::optional_internal::optional_data_dtor_base.1108" = type { i8, %union.anon.1109 }
%union.anon.1109 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.1110" = type { %"class.absl::optional_internal::optional_data.1111" }
%"class.absl::optional_internal::optional_data.1111" = type { %"class.absl::optional_internal::optional_data_base.1112" }
%"class.absl::optional_internal::optional_data_base.1112" = type { %"class.absl::optional_internal::optional_data_dtor_base.1113" }
%"class.absl::optional_internal::optional_data_dtor_base.1113" = type { i8, %union.anon.1114 }
%union.anon.1114 = type { %"class.base::UnguessableToken" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.1115" }
%"class.blink::HeapHashSet.1115" = type { %"class.WTF::HashSet.1118" }
%"class.WTF::HashSet.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"class.blink::WeakMember.1121"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1121" = type opaque
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::Member.945" = type { %"class.blink::MemberBase.946" }
%"class.blink::MemberBase.946" = type { %"class.blink::PageAnimator"* }
%"class.blink::PageAnimator" = type <{ %"class.blink::Member.949", i8, i8, i8, [5 x i8], %"class.blink::AnimationClock", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::AnimationClock" = type <{ %"class.base::TimeTicks", i8, [7 x i8], %"class.base::TickClock"*, i32, [4 x i8] }>
%"class.blink::Member.951" = type { %"class.blink::MemberBase.952" }
%"class.blink::MemberBase.952" = type { %"class.blink::AutoscrollController"* }
%"class.blink::AutoscrollController" = type opaque
%"class.blink::Member.953" = type { %"class.blink::MemberBase.954" }
%"class.blink::MemberBase.954" = type { %"class.blink::ChromeClient"* }
%"class.blink::Member.955" = type { %"class.blink::MemberBase.956" }
%"class.blink::MemberBase.956" = type { %"class.blink::DragCaret"* }
%"class.blink::DragCaret" = type opaque
%"class.blink::Member.957" = type { %"class.blink::MemberBase.958" }
%"class.blink::MemberBase.958" = type { %"class.blink::DragController"* }
%"class.blink::DragController" = type opaque
%"class.blink::Member.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::FocusController"* }
%"class.blink::FocusController" = type opaque
%"class.blink::Member.961" = type { %"class.blink::MemberBase.962" }
%"class.blink::MemberBase.962" = type { %"class.blink::ContextMenuController"* }
%"class.blink::ContextMenuController" = type opaque
%"class.blink::Member.963" = type { %"class.blink::MemberBase.964" }
%"class.blink::MemberBase.964" = type { %"class.blink::PageScaleConstraintsSet"* }
%"class.blink::PageScaleConstraintsSet" = type opaque
%"class.blink::HeapObserverSet.965" = type { i32, [4 x i8], %"class.blink::HeapHashSet.966" }
%"class.blink::HeapHashSet.966" = type { %"class.WTF::HashSet.969" }
%"class.WTF::HashSet.969" = type { %"class.WTF::HashTable.970" }
%"class.WTF::HashTable.970" = type <{ %"class.blink::WeakMember.972"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.972" = type opaque
%"class.blink::Member.973" = type { %"class.blink::MemberBase.974" }
%"class.blink::MemberBase.974" = type { %"class.blink::PointerLockController"* }
%"class.blink::PointerLockController" = type opaque
%"class.blink::Member.975" = type { %"class.blink::MemberBase.976" }
%"class.blink::MemberBase.976" = type { %"class.blink::ScrollingCoordinator"* }
%"class.blink::ScrollingCoordinator" = type opaque
%"class.blink::Member.977" = type { %"class.blink::MemberBase.978" }
%"class.blink::MemberBase.978" = type { %"class.blink::BrowserControls"* }
%"class.blink::BrowserControls" = type opaque
%"class.blink::Member.979" = type { %"class.blink::MemberBase.980" }
%"class.blink::MemberBase.980" = type { %"class.blink::ConsoleMessageStorage"* }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::Member.981" = type { %"class.blink::MemberBase.982" }
%"class.blink::MemberBase.982" = type { %"class.blink::TopDocumentRootScrollerController"* }
%"class.blink::TopDocumentRootScrollerController" = type opaque
%"class.blink::Member.983" = type { %"class.blink::MemberBase.984" }
%"class.blink::MemberBase.984" = type { %"class.blink::VisualViewport"* }
%"class.blink::VisualViewport" = type opaque
%"class.blink::Member.985" = type { %"class.blink::MemberBase.986" }
%"class.blink::MemberBase.986" = type { %"class.blink::OverscrollController"* }
%"class.blink::OverscrollController" = type opaque
%"class.blink::Member.987" = type { %"class.blink::MemberBase.988" }
%"class.blink::MemberBase.988" = type { %"class.blink::LinkHighlight"* }
%"class.blink::LinkHighlight" = type opaque
%"class.blink::Member.989" = type { %"class.blink::MemberBase.990" }
%"class.blink::MemberBase.990" = type { %"class.blink::SpatialNavigationController"* }
%"class.blink::SpatialNavigationController" = type opaque
%"class.blink::Member.991" = type { %"class.blink::MemberBase.992" }
%"class.blink::MemberBase.992" = type { %"class.blink::PluginData"* }
%"class.blink::PluginData" = type opaque
%"class.blink::Member.993" = type { %"class.blink::MemberBase.994" }
%"class.blink::MemberBase.994" = type { %"class.blink::ValidationMessageClient"* }
%"class.blink::ValidationMessageClient" = type opaque
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque.995" }
%"class.WTF::Deque.995" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.998" }
%"class.WTF::VectorBuffer.998" = type { %"class.WTF::VectorBufferBase.999" }
%"class.WTF::VectorBufferBase.999" = type { %"class.std::__1::unique_ptr.1000"*, i32, i32 }
%"class.std::__1::unique_ptr.1000" = type { %"class.std::__1::__compressed_pair.1001" }
%"class.std::__1::__compressed_pair.1001" = type { %"struct.std::__1::__compressed_pair_elem.1002" }
%"struct.std::__1::__compressed_pair_elem.1002" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type opaque
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.1006", i32, [4 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.1006" = type { %"class.std::__1::__bitset.1007" }
%"class.std::__1::__bitset.1007" = type { [25 x i64] }
%"struct.blink::WebWindowFeatures" = type { i32, i8, i32, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.absl::optional.1008" }
%"class.absl::optional.1008" = type { %"class.absl::optional_internal::optional_data.1009" }
%"class.absl::optional_internal::optional_data.1009" = type { %"class.absl::optional_internal::optional_data_base.1010" }
%"class.absl::optional_internal::optional_data_base.1010" = type { %"class.absl::optional_internal::optional_data_dtor_base.1011" }
%"class.absl::optional_internal::optional_data_dtor_base.1011" = type { i8, %union.anon.1012 }
%union.anon.1012 = type { %"struct.blink::WebImpression" }
%"struct.blink::WebImpression" = type { %"class.blink::WebSecurityOrigin", %"class.absl::optional.1013", i64, %"class.absl::optional.839", i64 }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.absl::optional.1013" = type { %"class.absl::optional_internal::optional_data.1014" }
%"class.absl::optional_internal::optional_data.1014" = type { %"class.absl::optional_internal::optional_data_base.1015" }
%"class.absl::optional_internal::optional_data_base.1015" = type { %"class.absl::optional_internal::optional_data_dtor_base.1016" }
%"class.absl::optional_internal::optional_data_dtor_base.1016" = type { i8, %union.anon.1017 }
%union.anon.1017 = type { %"class.blink::WebSecurityOrigin" }
%"class.mojo::StructPtr.1018" = type { %"class.std::__1::unique_ptr.1019" }
%"class.std::__1::unique_ptr.1019" = type { %"class.std::__1::__compressed_pair.1020" }
%"class.std::__1::__compressed_pair.1020" = type { %"struct.std::__1::__compressed_pair_elem.1021" }
%"struct.std::__1::__compressed_pair_elem.1021" = type { %"class.blink::mojom::blink::PageLifecycleState"* }
%"class.blink::mojom::blink::PageLifecycleState" = type <{ i8, [3 x i8], i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.blink::HeapHashSet.1025" = type { %"class.WTF::HashSet.1028" }
%"class.WTF::HashSet.1028" = type { %"class.WTF::HashTable.1029" }
%"class.WTF::HashTable.1029" = type <{ %"class.blink::WeakMember.1031"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1031" = type opaque
%"class.blink::Member.949" = type { %"class.blink::MemberBase.950" }
%"class.blink::MemberBase.950" = type { %"class.blink::Page"* }
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr.1032" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr.1032" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::unique_ptr.1033" = type { %"class.std::__1::__compressed_pair.1034" }
%"class.std::__1::__compressed_pair.1034" = type { %"struct.std::__1::__compressed_pair_elem.1035" }
%"struct.std::__1::__compressed_pair_elem.1035" = type { %"class.blink::PageScheduler"* }
%"class.blink::PageScheduler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1039" = type { %"class.std::__1::__compressed_pair.1040" }
%"class.std::__1::__compressed_pair.1040" = type { %"struct.std::__1::__compressed_pair_elem.1041" }
%"struct.std::__1::__compressed_pair_elem.1041" = type { %"class.blink::MediaFeatureOverrides"* }
%"class.blink::MediaFeatureOverrides" = type opaque
%"class.blink::mojom::blink::TextAutosizerPageInfo" = type { i32, i32, float }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::HTMLFormControlElementWithState" = type { %"class.blink::HTMLFormControlElement.base", i8, [2 x i8] }
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.1632", %"class.blink::Member.1788", %"class.blink::Member.1790", %"class.blink::Member.1809", %"class.blink::Member.1811" }
%"class.blink::Member.1632" = type { %"class.blink::MemberBase.1633" }
%"class.blink::MemberBase.1633" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr.1614 }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr.1614, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.1634" }
%"class.blink::MemberBase.1634" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.1635" }
%"class.std::__1::unique_ptr.1635" = type { %"class.std::__1::__compressed_pair.1636" }
%"class.std::__1::__compressed_pair.1636" = type { %"struct.std::__1::__compressed_pair_elem.1637" }
%"struct.std::__1::__compressed_pair_elem.1637" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.1638", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.1644", %"class.std::__1::unique_ptr.1768", i8, %"class.absl::optional.1774", %class.scoped_refptr.1750, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.1779" }
%"class.std::__1::unique_ptr.1638" = type { %"class.std::__1::__compressed_pair.1639" }
%"class.std::__1::__compressed_pair.1639" = type { %"struct.std::__1::__compressed_pair_elem.1640" }
%"struct.std::__1::__compressed_pair_elem.1640" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.1644" = type { %"class.std::__1::__compressed_pair.1645" }
%"class.std::__1::__compressed_pair.1645" = type { %"struct.std::__1::__compressed_pair_elem.1646" }
%"struct.std::__1::__compressed_pair_elem.1646" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.1647, %class.scoped_refptr.1647, %class.scoped_refptr.1647, %class.scoped_refptr.1647, %class.scoped_refptr.1647, %class.scoped_refptr.1647, %class.scoped_refptr.1682, %class.scoped_refptr.1698, %class.scoped_refptr.1699, %class.scoped_refptr.1699, %class.scoped_refptr.1699, %class.scoped_refptr.1699, %class.scoped_refptr.1699, %class.scoped_refptr.1699, %class.scoped_refptr.1740, %class.scoped_refptr.1741, %class.scoped_refptr.1741, %class.scoped_refptr.1741, %class.scoped_refptr.1741, %class.scoped_refptr.1741, %class.scoped_refptr.1741, %class.scoped_refptr.1741, %class.scoped_refptr.1741, %class.scoped_refptr.1764 }
%class.scoped_refptr.1647 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1664" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1648", i8, i8, %class.scoped_refptr.1650, i32, i32 }
%"class.WTF::RefCounted.1648" = type { %"class.base::RefCounted.1649" }
%"class.base::RefCounted.1649" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1650 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1657, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1658", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1651" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.1651" = type { %"class.std::__1::__compressed_pair.1652" }
%"class.std::__1::__compressed_pair.1652" = type { %"struct.std::__1::__compressed_pair_elem.1653" }
%"struct.std::__1::__compressed_pair_elem.1653" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1657 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1683", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1683" = type { %"class.WTF::RefCounted.1684", i8, i8, %class.scoped_refptr.1657, i32, i32 }
%"class.WTF::RefCounted.1684" = type { %"class.base::RefCounted.1685" }
%"class.base::RefCounted.1685" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1686" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1686" = type { %"class.absl::optional_internal::optional_data.1687" }
%"class.absl::optional_internal::optional_data.1687" = type { %"class.absl::optional_internal::optional_data_base.1688" }
%"class.absl::optional_internal::optional_data_base.1688" = type { %"class.absl::optional_internal::optional_data_dtor_base.1689" }
%"class.absl::optional_internal::optional_data_dtor_base.1689" = type { i8, %union.anon.1690 }
%union.anon.1690 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1691", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1691" = type { %"class.std::__1::__vector_base.1692" }
%"class.std::__1::__vector_base.1692" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1693" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1693" = type { %"struct.std::__1::__compressed_pair_elem.1694" }
%"struct.std::__1::__compressed_pair_elem.1694" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1658" = type { %"class.std::__1::__compressed_pair.1659" }
%"class.std::__1::__compressed_pair.1659" = type { %"struct.std::__1::__compressed_pair_elem.1660" }
%"struct.std::__1::__compressed_pair_elem.1660" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1664" = type { %"class.std::__1::__compressed_pair.1665" }
%"class.std::__1::__compressed_pair.1665" = type { %"struct.std::__1::__compressed_pair_elem.1666" }
%"struct.std::__1::__compressed_pair_elem.1666" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1667", %"class.std::__1::unique_ptr.1673", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1667" = type { %"class.std::__1::__compressed_pair.1668" }
%"class.std::__1::__compressed_pair.1668" = type { %"struct.std::__1::__compressed_pair_elem.1669" }
%"struct.std::__1::__compressed_pair_elem.1669" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1673" = type { %"class.std::__1::__compressed_pair.1674" }
%"class.std::__1::__compressed_pair.1674" = type { %"struct.std::__1::__compressed_pair_elem.1675" }
%"struct.std::__1::__compressed_pair_elem.1675" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.1682 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.1698 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1699 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1700" }
%"class.blink::PaintPropertyNode.1700" = type { %"class.WTF::RefCounted.1701", i8, i8, %class.scoped_refptr.1703, i32, i32 }
%"class.WTF::RefCounted.1701" = type { %"class.base::RefCounted.1702" }
%"class.base::RefCounted.1702" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1703 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.1650, %class.scoped_refptr.1704, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.1726", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.1704 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1742" }
%"class.blink::PaintPropertyNode.1742" = type { %"class.WTF::RefCounted.1743", i8, i8, %class.scoped_refptr.1704, i32, i32 }
%"class.WTF::RefCounted.1743" = type { %"class.base::RefCounted.1744" }
%"class.base::RefCounted.1744" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.1705" }
%"class.std::__1::vector.1705" = type { %"class.std::__1::__vector_base.1706" }
%"class.std::__1::__vector_base.1706" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.1721" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.1707, [20 x float], i32, [4 x i8], %"class.std::__1::vector.1714", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp.1707 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.1708, i32, %"class.absl::optional.1709", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.143" }>
%class.sk_sp.1708 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.1709" = type { %"class.absl::optional_internal::optional_data.1710" }
%"class.absl::optional_internal::optional_data.1710" = type { %"class.absl::optional_internal::optional_data_base.1711" }
%"class.absl::optional_internal::optional_data_base.1711" = type { %"class.absl::optional_internal::optional_data_dtor_base.1712" }
%"class.absl::optional_internal::optional_data_dtor_base.1712" = type { i8, %union.anon.1713 }
%union.anon.1713 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::vector.1714" = type { %"class.std::__1::__vector_base.1715" }
%"class.std::__1::__vector_base.1715" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.1716" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1716" = type { %"struct.std::__1::__compressed_pair_elem.1717" }
%"struct.std::__1::__compressed_pair_elem.1717" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.1721" = type { %"struct.std::__1::__compressed_pair_elem.1722" }
%"struct.std::__1::__compressed_pair_elem.1722" = type { %"class.cc::FilterOperation"* }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.std::__1::unique_ptr.1726" = type { %"class.std::__1::__compressed_pair.1727" }
%"class.std::__1::__compressed_pair.1727" = type { %"struct.std::__1::__compressed_pair_elem.1728" }
%"struct.std::__1::__compressed_pair_elem.1728" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree.1732" }
%"class.base::internal::flat_tree.1732" = type { %"class.std::__1::vector.1733" }
%"class.std::__1::vector.1733" = type { %"class.std::__1::__vector_base.1734" }
%"class.std::__1::__vector_base.1734" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1735" }
%"class.std::__1::__compressed_pair.1735" = type { %"struct.std::__1::__compressed_pair_elem.1736" }
%"struct.std::__1::__compressed_pair_elem.1736" = type { i32* }
%class.scoped_refptr.1740 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1741 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.1753" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.1650, %"class.absl::optional.1745", %class.scoped_refptr.1750, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.1745" = type { %"class.absl::optional_internal::optional_data.1746" }
%"class.absl::optional_internal::optional_data.1746" = type { %"class.absl::optional_internal::optional_data_base.1747" }
%"class.absl::optional_internal::optional_data_base.1747" = type { %"class.absl::optional_internal::optional_data_dtor_base.1748" }
%"class.absl::optional_internal::optional_data_dtor_base.1748" = type { i8, [3 x i8], %union.anon.1749 }
%union.anon.1749 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.1753" = type { %"class.std::__1::__compressed_pair.1754" }
%"class.std::__1::__compressed_pair.1754" = type { %"struct.std::__1::__compressed_pair_elem.1755" }
%"struct.std::__1::__compressed_pair_elem.1755" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.1756", i32, [4 x i8] }>
%"class.WTF::Vector.1756" = type { %"class.WTF::VectorBuffer.1757" }
%"class.WTF::VectorBuffer.1757" = type { %"class.WTF::VectorBufferBase.1758" }
%"class.WTF::VectorBufferBase.1758" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.1764 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.1768" = type { %"class.std::__1::__compressed_pair.1769" }
%"class.std::__1::__compressed_pair.1769" = type { %"struct.std::__1::__compressed_pair_elem.1770" }
%"struct.std::__1::__compressed_pair_elem.1770" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1650, %class.scoped_refptr.1704, %class.scoped_refptr.1703 }
%"class.absl::optional.1774" = type { %"class.absl::optional_internal::optional_data.1775" }
%"class.absl::optional_internal::optional_data.1775" = type { %"class.absl::optional_internal::optional_data_base.1776" }
%"class.absl::optional_internal::optional_data_base.1776" = type { %"class.absl::optional_internal::optional_data_dtor_base.1777" }
%"class.absl::optional_internal::optional_data_dtor_base.1777" = type { i8, %union.anon.1778 }
%union.anon.1778 = type { %"class.blink::IntRect" }
%class.scoped_refptr.1750 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.1751", [4 x i8] }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.1487, i32, %"struct.std::__1::atomic.378", %"struct.std::__1::atomic.378", i8, i8 }>
%class.sk_sp.1487 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.1488, %class.SkTDArray.1489, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.143" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.1488 = type { i8*, i32, i32 }
%class.SkTDArray.1489 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.1490 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.143", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.378" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.1490 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.368", [3 x i8] }
%"class.WTF::RefCounted.1751" = type { %"class.base::RefCounted.1752" }
%"class.base::RefCounted.1752" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.1779" = type { %"class.std::__1::__compressed_pair.1780" }
%"class.std::__1::__compressed_pair.1780" = type { %"struct.std::__1::__compressed_pair_elem.1781" }
%"struct.std::__1::__compressed_pair_elem.1781" = type { %"class.blink::FragmentData"* }
%class.scoped_refptr.1614 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.1549", %"class.std::__1::unique_ptr.1551" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.1186", %"class.blink::DataRef.1266", %"class.blink::DataRef.1270", %"class.blink::DataRef.1465", %"class.blink::DataRef.1532", %"class.blink::DataRef.1536", %"class.blink::DataRef.1540", %"class.blink::DataRef.1544", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.1122 }
%class.scoped_refptr.1122 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted.1123", %"class.blink::DataRef.1125", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted.1123" = type { %"class.base::RefCounted.1124" }
%"class.base::RefCounted.1124" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1125" = type { %class.scoped_refptr.1126 }
%class.scoped_refptr.1126 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.1127", %"class.blink::Font" }
%"class.WTF::RefCounted.1127" = type { %"class.base::RefCounted.1128" }
%"class.base::RefCounted.1128" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.1155 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.1130, %class.scoped_refptr.1138, %class.scoped_refptr.1148, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.1154 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1129 }
%class.scoped_refptr.1129 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1566", [4 x i8] }>
%"class.WTF::RefCounted.1566" = type { %"class.base::RefCounted.1567" }
%"class.base::RefCounted.1567" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1130 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.1136", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.1131" }
%"class.WTF::Vector.1131" = type { %"class.WTF::VectorBuffer.1132" }
%"class.WTF::VectorBuffer.1132" = type { %"class.WTF::VectorBufferBase.1133" }
%"class.WTF::VectorBufferBase.1133" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.1136" = type { %"class.base::RefCounted.1137" }
%"class.base::RefCounted.1137" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1138 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.1139", %"class.WTF::RefCounted.1146", [4 x i8] }>
%"class.blink::FontSettings.1139" = type { %"class.WTF::Vector.1140" }
%"class.WTF::Vector.1140" = type { %"class.WTF::VectorBuffer.1141" }
%"class.WTF::VectorBuffer.1141" = type { %"class.WTF::VectorBufferBase.1142" }
%"class.WTF::VectorBufferBase.1142" = type { %"class.blink::FontTagValuePair.1143"*, i32, i32 }
%"class.blink::FontTagValuePair.1143" = type { i32, float }
%"class.WTF::RefCounted.1146" = type { %"class.base::RefCounted.1147" }
%"class.base::RefCounted.1147" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1148 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.1149", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.1151, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.1149" = type { %"class.base::RefCounted.1150" }
%"class.base::RefCounted.1150" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.1151 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.1152", [4 x i8] }>
%"class.WTF::RefCounted.1152" = type { %"class.base::RefCounted.1153" }
%"class.base::RefCounted.1153" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.1154 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.1155 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.1156", %"class.WTF::Vector.1158", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr.1184" }
%"class.WTF::RefCounted.1156" = type { %"class.base::RefCounted.1157" }
%"class.base::RefCounted.1157" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1158" = type { %"class.WTF::VectorBuffer.1159" }
%"class.WTF::VectorBuffer.1159" = type { %"class.WTF::VectorBufferBase.1160", [8 x i8] }
%"class.WTF::VectorBufferBase.1160" = type { %class.scoped_refptr.1161*, i32, i32 }
%class.scoped_refptr.1161 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.1162", [4 x i8] }>
%"class.WTF::RefCounted.1162" = type { %"class.base::RefCounted.1163" }
%"class.base::RefCounted.1163" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.1172", %class.scoped_refptr.1179, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1162" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional.1166", %"class.absl::optional.1166", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional.1166" = type { %"class.absl::optional_internal::optional_data.1167" }
%"class.absl::optional_internal::optional_data.1167" = type { %"class.absl::optional_internal::optional_data_base.1168" }
%"class.absl::optional_internal::optional_data_base.1168" = type { %"class.absl::optional_internal::optional_data_dtor_base.1169" }
%"class.absl::optional_internal::optional_data_dtor_base.1169" = type { i8, %union.anon.1170 }
%union.anon.1170 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.1171, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.143" }
%class.SkFontStyle = type { i32 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.1171 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.1172" = type { %"class.std::__1::__compressed_pair.1173" }
%"class.std::__1::__compressed_pair.1173" = type { %"struct.std::__1::__compressed_pair_elem.1174" }
%"struct.std::__1::__compressed_pair_elem.1174" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.1175, %class.scoped_refptr.1175 }
%class.scoped_refptr.1175 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.1179 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.1180", [4 x i8] }>
%"class.WTF::RefCounted.1180" = type { %"class.base::RefCounted.1181" }
%"class.base::RefCounted.1181" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase.1182" }
%"class.blink::PersistentBase.1182" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr.1183" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr.1183" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr.1184" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::Length" = type <{ %union.anon.1185, i8, i8, i8, i8 }>
%union.anon.1185 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.1186" = type { %class.scoped_refptr.1187 }
%class.scoped_refptr.1187 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.1188", [4 x i8], %"class.blink::DataRef.1190", %"class.blink::DataRef.1232", %"class.WTF::Vector.1236", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.1240, %class.scoped_refptr.1248, %"class.blink::Persistent.1256", %"class.blink::Persistent.1258", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.1188" = type { %"class.base::RefCounted.1189" }
%"class.base::RefCounted.1189" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1190" = type { %class.scoped_refptr.1191 }
%class.scoped_refptr.1191 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.1192", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.1194, %class.scoped_refptr.1202, %"class.blink::Persistent.1219", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.1192" = type { %"class.base::RefCounted.1193" }
%"class.base::RefCounted.1193" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1194 = type { %"class.base::RefCountedData.1195"* }
%"class.base::RefCountedData.1195" = type { %"class.base::RefCountedThreadSafe.1196", %"class.WTF::Vector.1197" }
%"class.base::RefCountedThreadSafe.1196" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1197" = type { %"class.WTF::VectorBuffer.1198" }
%"class.WTF::VectorBuffer.1198" = type { %"class.WTF::VectorBufferBase.1199" }
%"class.WTF::VectorBufferBase.1199" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.1202 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.1203", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.1203" = type { %"class.base::RefCounted.1204" }
%"class.base::RefCounted.1204" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap.1205", %"class.blink::Persistent.1210" }
%"class.WTF::HashMap.1205" = type { %"class.WTF::HashTable.1206" }
%"class.WTF::HashTable.1206" = type <{ %"struct.WTF::KeyValuePair.1209"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1209" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1602 }
%class.scoped_refptr.1602 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.1603", %"class.WTF::Vector.716", %"class.WTF::Vector.1605", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.1603" = type { %"class.base::RefCounted.1604" }
%"class.base::RefCounted.1604" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1605" = type { %"class.WTF::VectorBuffer.1606" }
%"class.WTF::VectorBuffer.1606" = type { %"class.WTF::VectorBufferBase.1607" }
%"class.WTF::VectorBufferBase.1607" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.1608 }
%union.anon.1608 = type { double }
%"class.blink::Persistent.1210" = type { %"class.blink::PersistentBase.1211" }
%"class.blink::PersistentBase.1211" = type { %"class.blink::HeapHashMap.1212"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapHashMap.1212" = type { %"class.WTF::HashMap.1215" }
%"class.WTF::HashMap.1215" = type { %"class.WTF::HashTable.1216" }
%"class.WTF::HashTable.1216" = type <{ %"struct.WTF::KeyValuePair.1218"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1218" = type opaque
%"class.blink::Persistent.1219" = type { %"class.blink::PersistentBase.1220" }
%"class.blink::PersistentBase.1220" = type { %"class.blink::HeapVector.1221"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapVector.1221" = type { %"class.WTF::Vector.1224" }
%"class.WTF::Vector.1224" = type { %"class.WTF::VectorBuffer.1225" }
%"class.WTF::VectorBuffer.1225" = type { %"class.WTF::VectorBufferBase.1226" }
%"class.WTF::VectorBufferBase.1226" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member.1227", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member.1227" = type { %"class.blink::MemberBase.1228" }
%"class.blink::MemberBase.1228" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::DataRef.1232" = type { %class.scoped_refptr.1233 }
%class.scoped_refptr.1233 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.1234", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.1234" = type { %"class.base::RefCounted.1235" }
%"class.base::RefCounted.1235" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1236" = type { %"class.WTF::VectorBuffer.1237" }
%"class.WTF::VectorBuffer.1237" = type { %"class.WTF::VectorBufferBase" }
%class.scoped_refptr.1240 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.1241", %"class.WTF::Vector.1243" }
%"class.WTF::RefCounted.1241" = type { %"class.base::RefCounted.1242" }
%"class.base::RefCounted.1242" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1243" = type { %"class.WTF::VectorBuffer.1244" }
%"class.WTF::VectorBuffer.1244" = type { %"class.WTF::VectorBufferBase.1245" }
%"class.WTF::VectorBufferBase.1245" = type { %"struct.std::__1::pair.926"*, i32, i32 }
%"struct.std::__1::pair.926" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.1248 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.1249", [4 x i8], %"class.WTF::Vector.1251" }
%"class.WTF::RefCounted.1249" = type { %"class.base::RefCounted.1250" }
%"class.base::RefCounted.1250" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1251" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.1253", [28 x i8] }>
%"class.WTF::VectorBufferBase.1253" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::Persistent.1256" = type { %"class.blink::PersistentBase.1257" }
%"class.blink::PersistentBase.1257" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr" }
%"class.blink::Persistent.1258" = type { %"class.blink::PersistentBase.1259" }
%"class.blink::PersistentBase.1259" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.1262", %"class.blink::Member.1264" }
%"class.blink::Member.1262" = type { %"class.blink::MemberBase.1263" }
%"class.blink::MemberBase.1263" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.1264" = type { %"class.blink::MemberBase.1265" }
%"class.blink::MemberBase.1265" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.1266" = type { %class.scoped_refptr.1267 }
%class.scoped_refptr.1267 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.1268", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.1268" = type { %"class.base::RefCounted.1269" }
%"class.base::RefCounted.1269" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.1270" = type { %class.scoped_refptr.1271 }
%class.scoped_refptr.1271 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.1272", [4 x i8], %"class.blink::DataRef.1274", %"class.blink::DataRef.1340", %"class.blink::TransformOperations", %class.scoped_refptr.1248, %"class.blink::Persistent.1459", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.1272" = type { %"class.base::RefCounted.1273" }
%"class.base::RefCounted.1273" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1274" = type { %class.scoped_refptr.1275 }
%class.scoped_refptr.1275 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.1276", [4 x i8], %"class.blink::DataRef.1278", %"class.blink::Persistent.1316", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.1276" = type { %"class.base::RefCounted.1277" }
%"class.base::RefCounted.1277" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1278" = type { %class.scoped_refptr.1279 }
%class.scoped_refptr.1279 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.1280", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.1298, %class.scoped_refptr.1301, %class.scoped_refptr.1304, %class.scoped_refptr.1307, %class.scoped_refptr.1308, %class.scoped_refptr.1309, %"class.blink::Persistent.1316", %"class.blink::Persistent.1331", %"class.absl::optional.1335", %"class.absl::optional.1335", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.1280" = type { %"class.base::RefCounted.1281" }
%"class.base::RefCounted.1281" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.1282", %"class.std::__1::unique_ptr.1287" }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1287" = type { %"class.std::__1::__compressed_pair.1288" }
%"class.std::__1::__compressed_pair.1288" = type { %"struct.std::__1::__compressed_pair_elem.1289" }
%"struct.std::__1::__compressed_pair_elem.1289" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.1290", %"class.WTF::Vector.1282", i32, i32 }
%"class.WTF::Vector.1290" = type { %"class.WTF::VectorBuffer.1291" }
%"class.WTF::VectorBuffer.1291" = type { %"class.WTF::VectorBufferBase.1292" }
%"class.WTF::VectorBufferBase.1292" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.1298 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.1299", [4 x i8] }>
%"class.WTF::RefCounted.1299" = type { %"class.base::RefCounted.1300" }
%"class.base::RefCounted.1300" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1301 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.1302", [4 x i8] }>
%"class.WTF::RefCounted.1302" = type { %"class.base::RefCounted.1303" }
%"class.base::RefCounted.1303" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1304 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1305" }>
%"class.WTF::RefCounted.1305" = type { %"class.base::RefCounted.1306" }
%"class.base::RefCounted.1306" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%class.scoped_refptr.1307 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.1308 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.1309 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.1310", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.1310" = type { %"class.base::RefCounted.1311" }
%"class.base::RefCounted.1311" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.1312" }
%"class.blink::DataRef.1312" = type { %class.scoped_refptr.1313 }
%class.scoped_refptr.1313 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.1256", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.1314" }
%"class.WTF::RefCounted.1314" = type { %"class.base::RefCounted.1315" }
%"class.base::RefCounted.1315" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.1331" = type { %"class.blink::PersistentBase.1332" }
%"class.blink::PersistentBase.1332" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.1301, %"class.blink::Member.1227", i32, [4 x i8] }>
%"class.absl::optional.1335" = type { %"class.absl::optional_internal::optional_data.1336" }
%"class.absl::optional_internal::optional_data.1336" = type { %"class.absl::optional_internal::optional_data_base.1337" }
%"class.absl::optional_internal::optional_data_base.1337" = type { %"class.absl::optional_internal::optional_data_dtor_base.1338" }
%"class.absl::optional_internal::optional_data_dtor_base.1338" = type { i8, [3 x i8], %union.anon.1339 }
%union.anon.1339 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::Persistent.1316" = type { %"class.blink::PersistentBase.1317" }
%"class.blink::PersistentBase.1317" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.1320" }
%"class.blink::HeapVector.1320" = type { %"class.WTF::Vector.1323" }
%"class.WTF::Vector.1323" = type { %"class.WTF::VectorBuffer.1324" }
%"class.WTF::VectorBuffer.1324" = type { %"class.WTF::VectorBufferBase.1325" }
%"class.WTF::VectorBufferBase.1325" = type { %"class.blink::Member.1326"*, i32, i32 }
%"class.blink::Member.1326" = type { %"class.blink::MemberBase.1327" }
%"class.blink::MemberBase.1327" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.1340" = type { %class.scoped_refptr.1341 }
%class.scoped_refptr.1341 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.1342", %"class.blink::DataRef.1344", %"class.blink::DataRef.1348", %"class.blink::DataRef.1357", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.1376", %"class.std::__1::unique_ptr.1387", %"class.std::__1::unique_ptr.1425", %"class.std::__1::unique_ptr.1436", %"class.std::__1::unique_ptr.1447", %"class.WTF::Vector.716", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.1342" = type { %"class.base::RefCounted.1343" }
%"class.base::RefCounted.1343" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1344" = type { %class.scoped_refptr.1345 }
%class.scoped_refptr.1345 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.1346", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1346" = type { %"class.base::RefCounted.1347" }
%"class.base::RefCounted.1347" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1348" = type { %class.scoped_refptr.1349 }
%class.scoped_refptr.1349 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.1350", [4 x i8], %"class.WTF::Vector.1352", i8, [7 x i8] }>
%"class.WTF::RefCounted.1350" = type { %"class.base::RefCounted.1351" }
%"class.base::RefCounted.1351" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1352" = type { %"class.WTF::VectorBuffer.1353" }
%"class.WTF::VectorBuffer.1353" = type { %"class.WTF::VectorBufferBase.1354" }
%"class.WTF::VectorBufferBase.1354" = type { i32*, i32, i32 }
%"class.blink::DataRef.1357" = type { %class.scoped_refptr.1358 }
%class.scoped_refptr.1358 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.1359", [4 x i8], %"class.WTF::HashMap.1361", %"class.WTF::HashMap.1361", %"class.WTF::HashMap.1361", %"class.WTF::HashMap.1361", %"class.WTF::HashMap.1361", %"class.WTF::HashMap.1361", %"class.WTF::HashMap.1366", %"class.WTF::HashMap.1366", %"class.WTF::HashMap.1366", %"class.WTF::HashMap.1366", %"class.WTF::HashMap.1371", %"class.WTF::Vector.1282", %"class.WTF::Vector.1282", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.1359" = type { %"class.base::RefCounted.1360" }
%"class.base::RefCounted.1360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.1361" = type { %"class.WTF::HashTable.1362" }
%"class.WTF::HashTable.1362" = type <{ %"struct.WTF::KeyValuePair.1365"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1365" = type { %"class.WTF::String", %"class.WTF::Vector.1592" }
%"class.WTF::Vector.1592" = type { %"class.WTF::VectorBuffer.1593" }
%"class.WTF::VectorBuffer.1593" = type { %"class.WTF::VectorBufferBase.1594" }
%"class.WTF::VectorBufferBase.1594" = type { i64*, i32, i32 }
%"class.WTF::HashMap.1366" = type { %"class.WTF::HashTable.1367" }
%"class.WTF::HashTable.1367" = type <{ %"struct.WTF::KeyValuePair.1370"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1370" = type { i64, %"class.WTF::Vector.716" }
%"class.WTF::HashMap.1371" = type { %"class.WTF::HashTable.1372" }
%"class.WTF::HashTable.1372" = type <{ %"struct.WTF::KeyValuePair.1375"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1375" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.1376" = type { %"class.std::__1::__compressed_pair.1377" }
%"class.std::__1::__compressed_pair.1377" = type { %"struct.std::__1::__compressed_pair_elem.1378" }
%"struct.std::__1::__compressed_pair_elem.1378" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.1379" }
%"class.WTF::HashMap.1379" = type { %"class.WTF::HashTable.1380" }
%"class.WTF::HashTable.1380" = type <{ %"struct.WTF::KeyValuePair.1383"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1383" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1597", %"class.absl::optional.1597", %"class.absl::optional.1597" }
%"class.absl::optional.1597" = type { %"class.absl::optional_internal::optional_data.1598" }
%"class.absl::optional_internal::optional_data.1598" = type { %"class.absl::optional_internal::optional_data_base.1599" }
%"class.absl::optional_internal::optional_data_base.1599" = type { %"class.absl::optional_internal::optional_data_dtor_base.1600" }
%"class.absl::optional_internal::optional_data_dtor_base.1600" = type { i8, %union.anon.1601 }
%union.anon.1601 = type { i32 }
%"class.std::__1::unique_ptr.1387" = type { %"class.std::__1::__compressed_pair.1388" }
%"class.std::__1::__compressed_pair.1388" = type { %"struct.std::__1::__compressed_pair_elem.1389" }
%"struct.std::__1::__compressed_pair_elem.1389" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.1236", %"class.WTF::Vector.1402", %"class.WTF::Vector.1390", %"class.WTF::Vector.1407", %"class.WTF::Vector.1412", %"class.WTF::Vector.1417" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.1390", %"class.WTF::Vector.1390", %"class.WTF::Vector.1395" }
%"class.WTF::Vector.1395" = type { %"class.WTF::VectorBuffer.1396" }
%"class.WTF::VectorBuffer.1396" = type { %"class.WTF::VectorBufferBase.1397" }
%"class.WTF::VectorBufferBase.1397" = type { %class.scoped_refptr.1398*, i32, i32 }
%class.scoped_refptr.1398 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.1399" }
%"class.base::RefCountedThreadSafe.1399" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1402" = type { %"class.WTF::VectorBuffer.1403" }
%"class.WTF::VectorBuffer.1403" = type { %"class.WTF::VectorBufferBase.1404" }
%"class.WTF::VectorBufferBase.1404" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.1390" = type { %"class.WTF::VectorBuffer.1391" }
%"class.WTF::VectorBuffer.1391" = type { %"class.WTF::VectorBufferBase.1392" }
%"class.WTF::VectorBufferBase.1392" = type { double*, i32, i32 }
%"class.WTF::Vector.1407" = type { %"class.WTF::VectorBuffer.1408" }
%"class.WTF::VectorBuffer.1408" = type { %"class.WTF::VectorBufferBase.1409" }
%"class.WTF::VectorBufferBase.1409" = type { i32*, i32, i32 }
%"class.WTF::Vector.1412" = type { %"class.WTF::VectorBuffer.1413" }
%"class.WTF::VectorBuffer.1413" = type { %"class.WTF::VectorBufferBase.1414" }
%"class.WTF::VectorBufferBase.1414" = type { i32*, i32, i32 }
%"class.WTF::Vector.1417" = type { %"class.WTF::VectorBuffer.1418" }
%"class.WTF::VectorBuffer.1418" = type { %"class.WTF::VectorBufferBase.1419" }
%"class.WTF::VectorBufferBase.1419" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1425" = type { %"class.std::__1::__compressed_pair.1426" }
%"class.std::__1::__compressed_pair.1426" = type { %"struct.std::__1::__compressed_pair_elem.1427" }
%"struct.std::__1::__compressed_pair_elem.1427" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.1428" }
%"class.WTF::Vector.1428" = type { %"class.WTF::VectorBuffer.1429" }
%"class.WTF::VectorBuffer.1429" = type { %"class.WTF::VectorBufferBase.1430" }
%"class.WTF::VectorBufferBase.1430" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.1436" = type { %"class.std::__1::__compressed_pair.1437" }
%"class.std::__1::__compressed_pair.1437" = type { %"struct.std::__1::__compressed_pair_elem.1438" }
%"struct.std::__1::__compressed_pair_elem.1438" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.1439" }
%"class.WTF::Vector.1439" = type { %"class.WTF::VectorBuffer.1440" }
%"class.WTF::VectorBuffer.1440" = type { %"class.WTF::VectorBufferBase.1441" }
%"class.WTF::VectorBufferBase.1441" = type { %"class.blink::Persistent.1256"*, i32, i32 }
%"class.std::__1::unique_ptr.1447" = type { %"class.std::__1::__compressed_pair.1448" }
%"class.std::__1::__compressed_pair.1448" = type { %"struct.std::__1::__compressed_pair_elem.1449" }
%"struct.std::__1::__compressed_pair_elem.1449" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.1256", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.1453" }
%"class.WTF::Vector.1453" = type { %"class.WTF::VectorBuffer.1454" }
%"class.WTF::VectorBuffer.1454" = type { %"class.WTF::VectorBufferBase.1455" }
%"class.WTF::VectorBufferBase.1455" = type { %class.scoped_refptr.1456*, i32, i32 }
%class.scoped_refptr.1456 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.1305", [4 x i8] }>
%"class.blink::Persistent.1459" = type { %"class.blink::PersistentBase.1460" }
%"class.blink::PersistentBase.1460" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.1463" }
%"class.blink::Member.1463" = type { %"class.blink::MemberBase.1464" }
%"class.blink::MemberBase.1464" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.1465" = type { %class.scoped_refptr.1466 }
%class.scoped_refptr.1466 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.1467", [4 x i8], %"class.blink::DataRef.1469", %"class.blink::DataRef.1473", %"class.blink::DataRef.1494", %"class.blink::DataRef.1512", %"class.blink::DataRef.1524", %"class.blink::DataRef.1528", %class.scoped_refptr.1498, i32, [4 x i8] }>
%"class.WTF::RefCounted.1467" = type { %"class.base::RefCounted.1468" }
%"class.base::RefCounted.1468" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1469" = type { %class.scoped_refptr.1470 }
%class.scoped_refptr.1470 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.1471", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1471" = type { %"class.base::RefCounted.1472" }
%"class.base::RefCounted.1472" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1473" = type { %class.scoped_refptr.1474 }
%class.scoped_refptr.1474 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.1475", %class.scoped_refptr.1477, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.1475" = type { %"class.base::RefCounted.1476" }
%"class.base::RefCounted.1476" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1477 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.1478", %"class.std::__1::unique_ptr.1484", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1302" }>
%"class.std::__1::unique_ptr.1478" = type { %"class.std::__1::__compressed_pair.1479" }
%"class.std::__1::__compressed_pair.1479" = type { %"struct.std::__1::__compressed_pair_elem.1480" }
%"struct.std::__1::__compressed_pair_elem.1480" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.1484" = type { %"class.std::__1::__compressed_pair.1485" }
%"class.std::__1::__compressed_pair.1485" = type { %"struct.std::__1::__compressed_pair_elem.1486" }
%"struct.std::__1::__compressed_pair_elem.1486" = type { %"class.blink::Path"* }
%"class.blink::DataRef.1494" = type { %class.scoped_refptr.1495 }
%class.scoped_refptr.1495 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.1496", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.1496" = type { %"class.base::RefCounted.1497" }
%"class.base::RefCounted.1497" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.1498, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.1512" = type { %class.scoped_refptr.1513 }
%class.scoped_refptr.1513 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.1514", [4 x i8], %class.scoped_refptr.1516, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.1514" = type { %"class.base::RefCounted.1515" }
%"class.base::RefCounted.1515" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1516 = type { %"class.base::RefCountedData.1517"* }
%"class.base::RefCountedData.1517" = type { %"class.base::RefCountedThreadSafe.1518", %"class.WTF::Vector.1519" }
%"class.base::RefCountedThreadSafe.1518" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1519" = type { %"class.WTF::VectorBuffer.1520" }
%"class.WTF::VectorBuffer.1520" = type { %"class.WTF::VectorBufferBase.1521" }
%"class.WTF::VectorBufferBase.1521" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.1524" = type { %class.scoped_refptr.1525 }
%class.scoped_refptr.1525 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.1526", %class.scoped_refptr.1498, %class.scoped_refptr.1498, %class.scoped_refptr.1498 }
%"class.WTF::RefCounted.1526" = type { %"class.base::RefCounted.1527" }
%"class.base::RefCounted.1527" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1528" = type { %class.scoped_refptr.1529 }
%class.scoped_refptr.1529 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.1530", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1530" = type { %"class.base::RefCounted.1531" }
%"class.base::RefCounted.1531" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1498 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.1499", %"class.blink::Persistent.1501", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.1499" = type { %"class.base::RefCounted.1500" }
%"class.base::RefCounted.1500" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1501" = type { %"class.blink::PersistentBase.1502" }
%"class.blink::PersistentBase.1502" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr" }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.75", %"class.blink::HeapHashMap.1505" }
%"class.blink::HeapHashMap.1505" = type { %"class.WTF::HashMap.1508" }
%"class.WTF::HashMap.1508" = type { %"class.WTF::HashTable.1509" }
%"class.WTF::HashTable.1509" = type <{ %"struct.WTF::KeyValuePair.1511"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1511" = type opaque
%"class.blink::DataRef.1532" = type { %class.scoped_refptr.1533 }
%class.scoped_refptr.1533 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.1534", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.1534" = type { %"class.base::RefCounted.1535" }
%"class.base::RefCounted.1535" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.1536" = type { %class.scoped_refptr.1537 }
%class.scoped_refptr.1537 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.1538", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1538" = type { %"class.base::RefCounted.1539" }
%"class.base::RefCounted.1539" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1540" = type { %class.scoped_refptr.1541 }
%class.scoped_refptr.1541 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.1542", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.1542" = type { %"class.base::RefCounted.1543" }
%"class.base::RefCounted.1543" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1544" = type { %class.scoped_refptr.1545 }
%class.scoped_refptr.1545 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.1546", %class.scoped_refptr.1548 }
%"class.WTF::RefCounted.1546" = type { %"class.base::RefCounted.1547" }
%"class.base::RefCounted.1547" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1548 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.1564", %"class.blink::StyleVariables", %class.scoped_refptr.1548 }
%"class.WTF::RefCounted.1564" = type { %"class.base::RefCounted.1565" }
%"class.base::RefCounted.1565" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.1549" = type { %"class.base::RefCounted.1550" }
%"class.base::RefCounted.1550" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1551" = type { %"class.std::__1::__compressed_pair.1552" }
%"class.std::__1::__compressed_pair.1552" = type { %"struct.std::__1::__compressed_pair_elem.1553" }
%"struct.std::__1::__compressed_pair_elem.1553" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.1554" }
%"class.std::__1::unique_ptr.1554" = type { %"class.std::__1::__compressed_pair.1555" }
%"class.std::__1::__compressed_pair.1555" = type { %"struct.std::__1::__compressed_pair_elem.1556" }
%"struct.std::__1::__compressed_pair_elem.1556" = type { %"class.WTF::Vector.1557"* }
%"class.WTF::Vector.1557" = type { %"class.WTF::VectorBuffer.1612" }
%"class.WTF::VectorBuffer.1612" = type { %"class.WTF::VectorBufferBase.1613", [32 x i8] }
%"class.WTF::VectorBufferBase.1613" = type { %class.scoped_refptr.1614*, i32, i32 }
%"class.blink::Member.1788" = type { %"class.blink::MemberBase.1789" }
%"class.blink::MemberBase.1789" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.1790" = type { %"class.blink::MemberBase.1791" }
%"class.blink::MemberBase.1791" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.1794", %"class.blink::HeapHashSet.1803" }
%"class.blink::HeapVector.1794" = type { %"class.WTF::Vector.1797" }
%"class.WTF::Vector.1797" = type { %"class.WTF::VectorBuffer.1798" }
%"class.WTF::VectorBuffer.1798" = type { %"class.WTF::VectorBufferBase.1799" }
%"class.WTF::VectorBufferBase.1799" = type { %"class.blink::Member.1800"*, i32, i32 }
%"class.blink::Member.1800" = type { %"class.blink::MemberBase.1801" }
%"class.blink::MemberBase.1801" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.1803" = type { %"class.WTF::HashSet.1806" }
%"class.WTF::HashSet.1806" = type { %"class.WTF::HashTable.1807" }
%"class.WTF::HashTable.1807" = type <{ %"class.blink::Member.1800"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1809" = type { %"class.blink::MemberBase.1810" }
%"class.blink::MemberBase.1810" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.1811" = type { %"class.blink::MemberBase.1812" }
%"class.blink::MemberBase.1812" = type { %"class.blink::HeapHashSet.1813"* }
%"class.blink::HeapHashSet.1813" = type opaque
%"class.blink::DragData" = type opaque
%"class.blink::ScopedEventQueue" = type <{ %"class.blink::Persistent.1814", i32, [4 x i8] }>
%"class.blink::Persistent.1814" = type { %"class.blink::PersistentBase.1815" }
%"class.blink::PersistentBase.1815" = type { %"class.blink::HeapVector.1816"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapVector.1816" = type opaque
%"class.blink::DummyExceptionStateForTesting" = type { %"class.blink::ExceptionState" }
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Value" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.blink::ConsoleMessage" = type { i32, i32, %"class.WTF::String", %"class.std::__1::unique_ptr.1570", %"class.WTF::String", double, %"class.WTF::String", %"class.blink::WeakMember.1582", %"class.WTF::Vector.1583" }
%"class.std::__1::unique_ptr.1570" = type { %"class.std::__1::__compressed_pair.1571" }
%"class.std::__1::__compressed_pair.1571" = type { %"struct.std::__1::__compressed_pair_elem.1572" }
%"struct.std::__1::__compressed_pair_elem.1572" = type { %"class.blink::SourceLocation"* }
%"class.blink::SourceLocation" = type <{ %"class.WTF::String", i32, i32, %"class.std::__1::unique_ptr.1573", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1573" = type { %"class.std::__1::__compressed_pair.1574" }
%"class.std::__1::__compressed_pair.1574" = type { %"struct.std::__1::__compressed_pair_elem.1575" }
%"struct.std::__1::__compressed_pair_elem.1575" = type { %"class.v8_inspector::V8StackTrace"* }
%"class.v8_inspector::V8StackTrace" = type { i32 (...)** }
%"class.blink::WeakMember.1582" = type { %"class.blink::MemberBase.1094" }
%"class.WTF::Vector.1583" = type { %"class.WTF::VectorBuffer.1584" }
%"class.WTF::VectorBuffer.1584" = type { %"class.WTF::VectorBufferBase.1585" }
%"class.WTF::VectorBufferBase.1585" = type { i32*, i32, i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN5blink10ThreadHeap8AllocateINS_9InputTypeEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_9InputTypeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_9InputTypeEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_9InputTypeEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_16HTMLInputElementEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_9InputTypeEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_9InputTypeEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = comdat any

@_ZN5blink16input_type_names7kButtonE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16input_type_names9kCheckboxE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16input_type_names6kColorE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16input_type_names5kDateE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16input_type_names14kDatetimeLocalE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16input_type_names6kEmailE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16input_type_names5kFileE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16input_type_names7kHiddenE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16input_type_names6kImageE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16input_type_names6kMonthE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16input_type_names7kNumberE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16input_type_names9kPasswordE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16input_type_names6kRadioE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16input_type_names6kRangeE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16input_type_names6kResetE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16input_type_names7kSearchE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16input_type_names7kSubmitE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16input_type_names4kTelE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16input_type_names5kTimeE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16input_type_names4kUrlE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16input_type_names5kWeekE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16input_type_names5kTextE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names10kValueAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str = private unnamed_addr constant [49 x i8] c"This input element does not support Date values.\00", align 1
@.str.1 = private unnamed_addr constant [51 x i8] c"This input element does not support Number values.\00", align 1
@_ZN3WTF14g_empty_stringE = external local_unnamed_addr constant %"class.WTF::String"*, align 8
@_ZN5blink10html_names10kTitleAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.2 = private unnamed_addr constant [55 x i8] c"This form element does not have an allowed value step.\00", align 1
@_ZN5blink10html_names9kStepAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.4 = private unnamed_addr constant [36 x i8] c"This form element is not steppable.\00", align 1
@_ZN5blink10html_names8kMinAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names8kMaxAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZTVN5blink9InputTypeE = hidden unnamed_addr constant { [90 x i8*] } { [90 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InputType"*)* @_ZN5blink9InputTypeD2Ev to i8*), i8* bitcast (void (%"class.blink::InputType"*)* @_ZN5blink9InputTypeD0Ev to i8*), i8* bitcast (void (%"class.blink::InputType"*, %"class.blink::Visitor"*)* @_ZNK5blink9InputType5TraceEPNS_7VisitorE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType20IsInteractiveContentEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType12IsTextButtonEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType11IsTextFieldEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType36ShouldSaveAndRestoreFormControlStateEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType20IsFormDataAppendableEv to i8*), i8* bitcast (void (%"class.blink::InputType"*, %"class.blink::FormData"*)* @_ZNK5blink9InputType16AppendToFormDataERNS_8FormDataE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*)* @_ZNK5blink9InputType21ResultForDialogSubmitEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*)* @_ZNK5blink9InputType24ValueInFilenameValueModeEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*)* @_ZNK5blink9InputType12DefaultLabelEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (double (%"class.blink::InputType"*)* @_ZNK5blink9InputType11ValueAsDateEv to i8*), i8* bitcast (void (%"class.blink::InputType"*, %"class.absl::optional.917"*, %"class.blink::ExceptionState"*)* @_ZNK5blink9InputType14SetValueAsDateERKN4absl8optionalIN4base4TimeEEERNS_14ExceptionStateE to i8*), i8* bitcast (double (%"class.blink::InputType"*)* @_ZNK5blink9InputType13ValueAsDoubleEv to i8*), i8* bitcast (void (%"class.blink::InputType"*, double, i32, %"class.blink::ExceptionState"*)* @_ZNK5blink9InputType16SetValueAsDoubleEdNS_22TextFieldEventBehaviorERNS_14ExceptionStateE to i8*), i8* bitcast (void (%"class.blink::InputType"*, %"class.blink::Decimal"*, i32, %"class.blink::ExceptionState"*)* @_ZNK5blink9InputType17SetValueAsDecimalERKNS_7DecimalENS_22TextFieldEventBehaviorERNS_14ExceptionStateE to i8*), i8* bitcast (void (%"class.blink::InputType"*)* @_ZNK5blink9InputType14ReadingCheckedEv to i8*), i8* bitcast (void (%"class.blink::InputType"*, i1)* @_ZN5blink9InputType21WillUpdateCheckednessEb to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType18SupportsValidationEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*, %"class.WTF::String"*)* @_ZNK5blink9InputType15TypeMismatchForERKN3WTF6StringE to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType12TypeMismatchEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType16SupportsRequiredEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*, %"class.WTF::String"*)* @_ZNK5blink9InputType12ValueMissingERKN3WTF6StringE to i8*), i8* bitcast (i1 (%"class.blink::InputType"*, %"class.WTF::String"*)* @_ZNK5blink9InputType15PatternMismatchERKN3WTF6StringE to i8*), i8* bitcast (i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)* @_ZNK5blink9InputType7TooLongERKN3WTF6StringENS_18TextControlElement21NeedsToCheckDirtyFlagE to i8*), i8* bitcast (i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)* @_ZNK5blink9InputType8TooShortERKN3WTF6StringENS_18TextControlElement21NeedsToCheckDirtyFlagE to i8*), i8* bitcast (void (%"class.blink::Decimal"*, %"class.blink::InputType"*)* @_ZNK5blink9InputType21DefaultValueForStepUpEv to i8*), i8* bitcast (void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)* @_ZNK5blink9InputType15CreateStepRangeENS_15AnyStepHandlingE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*)* @_ZNK5blink9InputType12BadInputTextEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*)* @_ZNK5blink9InputType17ValueNotEqualTextERKNS_7DecimalE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*)* @_ZNK5blink9InputType17RangeOverflowTextERKNS_7DecimalE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*)* @_ZNK5blink9InputType18RangeUnderflowTextERKNS_7DecimalE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*, %"class.blink::Decimal"*)* @_ZNK5blink9InputType27ReversedRangeOutOfRangeTextERKNS_7DecimalES3_ to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*, %"class.blink::Decimal"*)* @_ZNK5blink9InputType16RangeInvalidTextERKNS_7DecimalES3_ to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*)* @_ZNK5blink9InputType16TypeMismatchTextEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*)* @_ZNK5blink9InputType16ValueMissingTextEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType17CanSetStringValueEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)* @_ZNK5blink9InputType13LocalizeValueERKN3WTF6StringE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*)* @_ZNK5blink9InputType12VisibleValueEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)* @_ZNK5blink9InputType13SanitizeValueERKN3WTF6StringE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)* @_ZNK5blink9InputType22SanitizeUserInputValueERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::InputType"*, %"class.WTF::String"*)* @_ZNK5blink9InputType20WarnIfValueIsInvalidERKN3WTF6StringE to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType19IsKeyboardFocusableEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType25MayTriggerVirtualKeyboardEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZN5blink9InputType27CanBeSuccessfulSubmitButtonEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZN5blink9InputType25MatchesDefaultPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZN5blink9InputType20LayoutObjectIsNeededEv to i8*), i8* bitcast (void (%"class.blink::InputType"*)* @_ZN5blink9InputType10CountUsageEv to i8*), i8* bitcast (void (%"class.blink::InputType"*)* @_ZN5blink9InputType48SanitizeValueInResponseToMinOrMaxAttributeChangeEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZN5blink9InputType27ShouldRespectAlignAttributeEv to i8*), i8* bitcast (%"class.blink::FileList"* (%"class.blink::InputType"*)* @_ZN5blink9InputType5FilesEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*, %"class.blink::FileList"*)* @_ZN5blink9InputType8SetFilesEPNS_8FileListE to i8*), i8* bitcast (void (%"class.blink::InputType"*, %"class.blink::FileList"*)* @_ZN5blink9InputType25SetFilesAndDispatchEventsEPNS_8FileListE to i8*), i8* bitcast (void (%"class.blink::InputType"*, %"class.WTF::Vector.716"*)* @_ZN5blink9InputType17SetFilesFromPathsERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE to i8*), i8* bitcast (i1 (%"class.blink::InputType"*, %"class.blink::DragData"*)* @_ZN5blink9InputType19ReceiveDroppedFilesEPKNS_8DragDataE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*)* @_ZN5blink9InputType19DroppedFileSystemIdEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZN5blink9InputType20CanSetSuggestedValueEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZN5blink9InputType40ShouldSendChangeEventAfterCheckedChangedEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*, %"class.WTF::String"*)* @_ZN5blink9InputType11CanSetValueERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::InputType"*, %"class.WTF::String"*, i1, i32, i32)* @_ZN5blink9InputType8SetValueERKN3WTF6StringEbNS_22TextFieldEventBehaviorENS_28TextControlSetValueSelectionE to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZN5blink9InputType26ShouldRespectListAttributeEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZN5blink9InputType14IsEnumeratableEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZN5blink9InputType11IsCheckableEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType11IsSteppableEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZN5blink9InputType37ShouldRespectHeightAndWidthAttributesEv to i8*), i8* bitcast (i32 (%"class.blink::InputType"*)* @_ZNK5blink9InputType9MaxLengthEv to i8*), i8* bitcast (i32 (%"class.blink::InputType"*)* @_ZNK5blink9InputType9MinLengthEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType19SupportsPlaceholderEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType16SupportsReadOnlyEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::InputTypeView"*)* @_ZNK5blink9InputType14DefaultToolTipERKNS_13InputTypeViewE to i8*), i8* bitcast (void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.blink::Decimal"*)* @_ZN5blink9InputType24FindClosestTickMarkValueERKNS_7DecimalE to i8*), i8* bitcast (i1 (%"class.blink::InputType"*, %"class.blink::QualifiedName"*)* @_ZNK5blink9InputType21HasLegalLinkAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (%"class.blink::QualifiedName"* (%"class.blink::InputType"*)* @_ZNK5blink9InputType24SubResourceAttributeNameEv to i8*), i8* bitcast (void (%"class.blink::InputType"*, %"class.blink::HTMLInputElement"*)* @_ZN5blink9InputType26CopyNonAttributePropertiesERKNS_16HTMLInputElementE to i8*), i8* bitcast (void (%"class.blink::InputType"*)* @_ZN5blink9InputType24OnAttachWithLayoutObjectEv to i8*), i8* bitcast (void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)* @_ZNK5blink9InputType13ParseToNumberERKN3WTF6StringERKNS_7DecimalE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*)* @_ZNK5blink9InputType9SerializeERKNS_7DecimalE to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType25ShouldAppearIndeterminateEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType26SupportsInputModeAttributeEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType20SupportsSelectionAPIEv to i8*), i8* bitcast (i32 (%"class.blink::InputType"*)* @_ZNK5blink9InputType6HeightEv to i8*), i8* bitcast (i32 (%"class.blink::InputType"*)* @_ZNK5blink9InputType5WidthEv to i8*), i8* bitcast (void (%"class.blink::InputType"*)* @_ZN5blink9InputType19DispatchSearchEventEv to i8*), i8* bitcast (%"class.blink::ColorChooserClient"* (%"class.blink::InputType"*)* @_ZN5blink9InputType21GetColorChooserClientEv to i8*)] }, align 8
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink11g_null_nameE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZTVN5blink29DummyExceptionStateForTestingE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9InputTypeEEEPKcv = private unnamed_addr constant [64 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::InputType]\00", align 1
@.str.5 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.6 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_9InputTypeEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_9InputTypeEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_9InputTypeEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_9InputTypeEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_9InputTypeEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.7 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZTVN5blink13TextInputTypeE = external unnamed_addr constant { [116 x i8*], [60 x i8*], [11 x i8*] }, align 8
@_ZTVN5blink15ButtonInputTypeE = external unnamed_addr constant { [93 x i8*], [60 x i8*] }, align 8
@_ZTVN5blink17CheckboxInputTypeE = external unnamed_addr constant { [100 x i8*], [60 x i8*] }, align 8
@_ZTVN5blink22DateTimeLocalInputTypeE = external unnamed_addr constant { [97 x i8*] }, align 8
@_ZTVN5blink15HiddenInputTypeE = external unnamed_addr constant { [93 x i8*], [60 x i8*] }, align 8
@_ZTVN5blink14MonthInputTypeE = external unnamed_addr constant { [97 x i8*] }, align 8
@_ZTVN5blink15NumberInputTypeE = external unnamed_addr constant { [120 x i8*], [60 x i8*], [11 x i8*] }, align 8
@_ZTVN5blink17PasswordInputTypeE = external unnamed_addr constant { [121 x i8*], [60 x i8*], [11 x i8*] }, align 8
@_ZTVN5blink14RadioInputTypeE = external unnamed_addr constant { [101 x i8*], [60 x i8*] }, align 8
@_ZTVN5blink14ResetInputTypeE = external unnamed_addr constant { [94 x i8*], [60 x i8*] }, align 8
@_ZTVN5blink18TelephoneInputTypeE = external unnamed_addr constant { [116 x i8*], [60 x i8*], [11 x i8*] }, align 8
@_ZTVN5blink12URLInputTypeE = external unnamed_addr constant { [116 x i8*], [60 x i8*], [11 x i8*] }, align 8
@_ZTVN5blink13WeekInputTypeE = external unnamed_addr constant { [97 x i8*] }, align 8
@_ZN3WTF19kASCIICaseFoldTableE = external local_unnamed_addr constant [256 x i8], align 16
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14ConsoleMessageEEEPKcv = private unnamed_addr constant [69 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ConsoleMessage]\00", align 1
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4

@_ZN5blink9InputTypeD1Ev = hidden unnamed_addr alias void (%"class.blink::InputType"*), void (%"class.blink::InputType"*)* @_ZN5blink9InputTypeD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::InputType"* @_ZN5blink9InputType6CreateERNS_16HTMLInputElementERKN3WTF12AtomicStringE(%"class.blink::HTMLInputElement"* dereferenceable(320), %"class.WTF::AtomicString"* readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %18

10:                                               ; preds = %2, %6
  %11 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_9InputTypeEEEPhm(i64 64) #10
  %12 = bitcast i8* %11 to %"class.blink::BaseTextInputType"*
  tail call void @_ZN5blink17BaseTextInputTypeC2ERNS_16HTMLInputElementE(%"class.blink::BaseTextInputType"* %12, %"class.blink::HTMLInputElement"* dereferenceable(320) %0) #10
  %13 = bitcast i8* %11 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [116 x i8*], [60 x i8*], [11 x i8*] }, { [116 x i8*], [60 x i8*], [11 x i8*] }* @_ZTVN5blink13TextInputTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = getelementptr inbounds i8, i8* %11, i64 16
  %15 = bitcast i8* %14 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [116 x i8*], [60 x i8*], [11 x i8*] }, { [116 x i8*], [60 x i8*], [11 x i8*] }* @_ZTVN5blink13TextInputTypeE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %16 = getelementptr inbounds i8, i8* %11, i64 40
  %17 = bitcast i8* %16 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [116 x i8*], [60 x i8*], [11 x i8*] }, { [116 x i8*], [60 x i8*], [11 x i8*] }* @_ZTVN5blink13TextInputTypeE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  br label %251

18:                                               ; preds = %6
  %19 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names7kButtonE, align 8
  %20 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %4, %21
  br i1 %22, label %23, label %29

23:                                               ; preds = %18
  %24 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_9InputTypeEEEPhm(i64 40) #10
  %25 = bitcast i8* %24 to %"class.blink::BaseButtonInputType"*
  tail call void @_ZN5blink19BaseButtonInputTypeC2ERNS_16HTMLInputElementE(%"class.blink::BaseButtonInputType"* %25, %"class.blink::HTMLInputElement"* dereferenceable(320) %0) #10
  %26 = bitcast i8* %24 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [93 x i8*], [60 x i8*] }, { [93 x i8*], [60 x i8*] }* @_ZTVN5blink15ButtonInputTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %26, align 8
  %27 = getelementptr inbounds i8, i8* %24, i64 16
  %28 = bitcast i8* %27 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [93 x i8*], [60 x i8*] }, { [93 x i8*], [60 x i8*] }* @_ZTVN5blink15ButtonInputTypeE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %28, align 8
  br label %251

29:                                               ; preds = %18
  %30 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names9kCheckboxE, align 8
  %31 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %4, %32
  br i1 %33, label %34, label %45

34:                                               ; preds = %29
  %35 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_9InputTypeEEEPhm(i64 48) #10
  %36 = bitcast i8* %35 to i32 (...)***
  %37 = getelementptr inbounds i8, i8* %35, i64 8
  %38 = bitcast i8* %37 to %"class.blink::HTMLInputElement"**
  store %"class.blink::HTMLInputElement"* %0, %"class.blink::HTMLInputElement"** %38, align 8
  %39 = getelementptr inbounds i8, i8* %35, i64 16
  %40 = bitcast i8* %39 to i32 (...)***
  %41 = getelementptr inbounds i8, i8* %35, i64 24
  store i8 0, i8* %41, align 8
  %42 = getelementptr inbounds i8, i8* %35, i64 32
  %43 = bitcast i8* %42 to %"class.blink::HTMLInputElement"**
  store %"class.blink::HTMLInputElement"* %0, %"class.blink::HTMLInputElement"** %43, align 8
  %44 = getelementptr inbounds i8, i8* %35, i64 40
  store i8 0, i8* %44, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [100 x i8*], [60 x i8*] }, { [100 x i8*], [60 x i8*] }* @_ZTVN5blink17CheckboxInputTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [100 x i8*], [60 x i8*] }, { [100 x i8*], [60 x i8*] }* @_ZTVN5blink17CheckboxInputTypeE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  br label %251

45:                                               ; preds = %29
  %46 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names6kColorE, align 8
  %47 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %46, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %4, %48
  br i1 %49, label %50, label %53

50:                                               ; preds = %45
  %51 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_9InputTypeEEEPhm(i64 56) #10
  %52 = bitcast i8* %51 to %"class.blink::ColorInputType"*
  tail call void @_ZN5blink14ColorInputTypeC1ERNS_16HTMLInputElementE(%"class.blink::ColorInputType"* %52, %"class.blink::HTMLInputElement"* dereferenceable(320) %0) #10
  br label %251

53:                                               ; preds = %45
  %54 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names5kDateE, align 8
  %55 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %54, i64 0, i32 0, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %4, %56
  br i1 %57, label %58, label %61

58:                                               ; preds = %53
  %59 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_9InputTypeEEEPhm(i64 16) #10
  %60 = bitcast i8* %59 to %"class.blink::DateInputType"*
  tail call void @_ZN5blink13DateInputTypeC1ERNS_16HTMLInputElementE(%"class.blink::DateInputType"* %60, %"class.blink::HTMLInputElement"* dereferenceable(320) %0) #10
  br label %251

61:                                               ; preds = %53
  %62 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names14kDatetimeLocalE, align 8
  %63 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %4, %64
  br i1 %65, label %66, label %71

66:                                               ; preds = %61
  %67 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_9InputTypeEEEPhm(i64 16) #10
  %68 = getelementptr inbounds i8, i8* %67, i64 8
  %69 = bitcast i8* %68 to %"class.blink::HTMLInputElement"**
  store %"class.blink::HTMLInputElement"* %0, %"class.blink::HTMLInputElement"** %69, align 8
  %70 = bitcast i8* %67 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [97 x i8*] }, { [97 x i8*] }* @_ZTVN5blink22DateTimeLocalInputTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %70, align 8
  br label %251

71:                                               ; preds = %61
  %72 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names6kEmailE, align 8
  %73 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %72, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %4, %74
  br i1 %75, label %76, label %79

76:                                               ; preds = %71
  %77 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_9InputTypeEEEPhm(i64 64) #10
  %78 = bitcast i8* %77 to %"class.blink::EmailInputType"*
  tail call void @_ZN5blink14EmailInputTypeC1ERNS_16HTMLInputElementE(%"class.blink::EmailInputType"* %78, %"class.blink::HTMLInputElement"* dereferenceable(320) %0) #10
  br label %251

79:                                               ; preds = %71
  %80 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names5kFileE, align 8
  %81 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %81, align 8
  %83 = icmp eq %"class.WTF::StringImpl"* %4, %82
  br i1 %83, label %84, label %87

84:                                               ; preds = %79
  %85 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_9InputTypeEEEPhm(i64 72) #10
  %86 = bitcast i8* %85 to %"class.blink::FileInputType"*
  tail call void @_ZN5blink13FileInputTypeC1ERNS_16HTMLInputElementE(%"class.blink::FileInputType"* %86, %"class.blink::HTMLInputElement"* dereferenceable(320) %0) #10
  br label %251

87:                                               ; preds = %79
  %88 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names7kHiddenE, align 8
  %89 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %88, i64 0, i32 0, i32 0, i32 0
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %91 = icmp eq %"class.WTF::StringImpl"* %4, %90
  br i1 %91, label %92, label %102

92:                                               ; preds = %87
  %93 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_9InputTypeEEEPhm(i64 40) #10
  %94 = bitcast i8* %93 to i32 (...)***
  %95 = getelementptr inbounds i8, i8* %93, i64 8
  %96 = bitcast i8* %95 to %"class.blink::HTMLInputElement"**
  store %"class.blink::HTMLInputElement"* %0, %"class.blink::HTMLInputElement"** %96, align 8
  %97 = getelementptr inbounds i8, i8* %93, i64 16
  %98 = bitcast i8* %97 to i32 (...)***
  %99 = getelementptr inbounds i8, i8* %93, i64 24
  store i8 0, i8* %99, align 8
  %100 = getelementptr inbounds i8, i8* %93, i64 32
  %101 = bitcast i8* %100 to %"class.blink::HTMLInputElement"**
  store %"class.blink::HTMLInputElement"* %0, %"class.blink::HTMLInputElement"** %101, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [93 x i8*], [60 x i8*] }, { [93 x i8*], [60 x i8*] }* @_ZTVN5blink15HiddenInputTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %94, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [93 x i8*], [60 x i8*] }, { [93 x i8*], [60 x i8*] }* @_ZTVN5blink15HiddenInputTypeE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %98, align 8
  br label %251

102:                                              ; preds = %87
  %103 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names6kImageE, align 8
  %104 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %103, i64 0, i32 0, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %4, %105
  br i1 %106, label %107, label %110

107:                                              ; preds = %102
  %108 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_9InputTypeEEEPhm(i64 56) #10
  %109 = bitcast i8* %108 to %"class.blink::ImageInputType"*
  tail call void @_ZN5blink14ImageInputTypeC1ERNS_16HTMLInputElementE(%"class.blink::ImageInputType"* %109, %"class.blink::HTMLInputElement"* dereferenceable(320) %0) #10
  br label %251

110:                                              ; preds = %102
  %111 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names6kMonthE, align 8
  %112 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %111, i64 0, i32 0, i32 0, i32 0
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %112, align 8
  %114 = icmp eq %"class.WTF::StringImpl"* %4, %113
  br i1 %114, label %115, label %120

115:                                              ; preds = %110
  %116 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_9InputTypeEEEPhm(i64 16) #10
  %117 = getelementptr inbounds i8, i8* %116, i64 8
  %118 = bitcast i8* %117 to %"class.blink::HTMLInputElement"**
  store %"class.blink::HTMLInputElement"* %0, %"class.blink::HTMLInputElement"** %118, align 8
  %119 = bitcast i8* %116 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [97 x i8*] }, { [97 x i8*] }* @_ZTVN5blink14MonthInputTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %119, align 8
  br label %251

120:                                              ; preds = %110
  %121 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names7kNumberE, align 8
  %122 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %121, i64 0, i32 0, i32 0, i32 0
  %123 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %122, align 8
  %124 = icmp eq %"class.WTF::StringImpl"* %4, %123
  br i1 %124, label %125, label %133

125:                                              ; preds = %120
  %126 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_9InputTypeEEEPhm(i64 48) #10
  %127 = bitcast i8* %126 to %"class.blink::TextFieldInputType"*
  tail call void @_ZN5blink18TextFieldInputTypeC2ERNS_16HTMLInputElementE(%"class.blink::TextFieldInputType"* %127, %"class.blink::HTMLInputElement"* dereferenceable(320) %0) #10
  %128 = bitcast i8* %126 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [120 x i8*], [60 x i8*], [11 x i8*] }, { [120 x i8*], [60 x i8*], [11 x i8*] }* @_ZTVN5blink15NumberInputTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %128, align 8
  %129 = getelementptr inbounds i8, i8* %126, i64 16
  %130 = bitcast i8* %129 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [120 x i8*], [60 x i8*], [11 x i8*] }, { [120 x i8*], [60 x i8*], [11 x i8*] }* @_ZTVN5blink15NumberInputTypeE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %130, align 8
  %131 = getelementptr inbounds i8, i8* %126, i64 40
  %132 = bitcast i8* %131 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [120 x i8*], [60 x i8*], [11 x i8*] }, { [120 x i8*], [60 x i8*], [11 x i8*] }* @_ZTVN5blink15NumberInputTypeE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %132, align 8
  br label %251

133:                                              ; preds = %120
  %134 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names9kPasswordE, align 8
  %135 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %134, i64 0, i32 0, i32 0, i32 0
  %136 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %135, align 8
  %137 = icmp eq %"class.WTF::StringImpl"* %4, %136
  br i1 %137, label %138, label %148

138:                                              ; preds = %133
  %139 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_9InputTypeEEEPhm(i64 72) #10
  %140 = bitcast i8* %139 to %"class.blink::BaseTextInputType"*
  tail call void @_ZN5blink17BaseTextInputTypeC2ERNS_16HTMLInputElementE(%"class.blink::BaseTextInputType"* %140, %"class.blink::HTMLInputElement"* dereferenceable(320) %0) #10
  %141 = bitcast i8* %139 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [121 x i8*], [60 x i8*], [11 x i8*] }, { [121 x i8*], [60 x i8*], [11 x i8*] }* @_ZTVN5blink17PasswordInputTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %141, align 8
  %142 = getelementptr inbounds i8, i8* %139, i64 16
  %143 = bitcast i8* %142 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [121 x i8*], [60 x i8*], [11 x i8*] }, { [121 x i8*], [60 x i8*], [11 x i8*] }* @_ZTVN5blink17PasswordInputTypeE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %143, align 8
  %144 = getelementptr inbounds i8, i8* %139, i64 40
  %145 = bitcast i8* %144 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [121 x i8*], [60 x i8*], [11 x i8*] }, { [121 x i8*], [60 x i8*], [11 x i8*] }* @_ZTVN5blink17PasswordInputTypeE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %145, align 8
  %146 = getelementptr inbounds i8, i8* %139, i64 64
  store i8 0, i8* %146, align 8
  %147 = getelementptr inbounds i8, i8* %139, i64 65
  store i8 0, i8* %147, align 1
  br label %251

148:                                              ; preds = %133
  %149 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names6kRadioE, align 8
  %150 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %149, i64 0, i32 0, i32 0, i32 0
  %151 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %150, align 8
  %152 = icmp eq %"class.WTF::StringImpl"* %4, %151
  br i1 %152, label %153, label %164

153:                                              ; preds = %148
  %154 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_9InputTypeEEEPhm(i64 48) #10
  %155 = bitcast i8* %154 to i32 (...)***
  %156 = getelementptr inbounds i8, i8* %154, i64 8
  %157 = bitcast i8* %156 to %"class.blink::HTMLInputElement"**
  store %"class.blink::HTMLInputElement"* %0, %"class.blink::HTMLInputElement"** %157, align 8
  %158 = getelementptr inbounds i8, i8* %154, i64 16
  %159 = bitcast i8* %158 to i32 (...)***
  %160 = getelementptr inbounds i8, i8* %154, i64 24
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds i8, i8* %154, i64 32
  %162 = bitcast i8* %161 to %"class.blink::HTMLInputElement"**
  store %"class.blink::HTMLInputElement"* %0, %"class.blink::HTMLInputElement"** %162, align 8
  %163 = getelementptr inbounds i8, i8* %154, i64 40
  store i8 0, i8* %163, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [101 x i8*], [60 x i8*] }, { [101 x i8*], [60 x i8*] }* @_ZTVN5blink14RadioInputTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %155, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [101 x i8*], [60 x i8*] }, { [101 x i8*], [60 x i8*] }* @_ZTVN5blink14RadioInputTypeE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %159, align 8
  br label %251

164:                                              ; preds = %148
  %165 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names6kRangeE, align 8
  %166 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %165, i64 0, i32 0, i32 0, i32 0
  %167 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %166, align 8
  %168 = icmp eq %"class.WTF::StringImpl"* %4, %167
  br i1 %168, label %169, label %172

169:                                              ; preds = %164
  %170 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_9InputTypeEEEPhm(i64 64) #10
  %171 = bitcast i8* %170 to %"class.blink::RangeInputType"*
  tail call void @_ZN5blink14RangeInputTypeC1ERNS_16HTMLInputElementE(%"class.blink::RangeInputType"* %171, %"class.blink::HTMLInputElement"* dereferenceable(320) %0) #10
  br label %251

172:                                              ; preds = %164
  %173 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names6kResetE, align 8
  %174 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %173, i64 0, i32 0, i32 0, i32 0
  %175 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %174, align 8
  %176 = icmp eq %"class.WTF::StringImpl"* %4, %175
  br i1 %176, label %177, label %183

177:                                              ; preds = %172
  %178 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_9InputTypeEEEPhm(i64 40) #10
  %179 = bitcast i8* %178 to %"class.blink::BaseButtonInputType"*
  tail call void @_ZN5blink19BaseButtonInputTypeC2ERNS_16HTMLInputElementE(%"class.blink::BaseButtonInputType"* %179, %"class.blink::HTMLInputElement"* dereferenceable(320) %0) #10
  %180 = bitcast i8* %178 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [94 x i8*], [60 x i8*] }, { [94 x i8*], [60 x i8*] }* @_ZTVN5blink14ResetInputTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %180, align 8
  %181 = getelementptr inbounds i8, i8* %178, i64 16
  %182 = bitcast i8* %181 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [94 x i8*], [60 x i8*] }, { [94 x i8*], [60 x i8*] }* @_ZTVN5blink14ResetInputTypeE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %182, align 8
  br label %251

183:                                              ; preds = %172
  %184 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names7kSearchE, align 8
  %185 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %184, i64 0, i32 0, i32 0, i32 0
  %186 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %185, align 8
  %187 = icmp eq %"class.WTF::StringImpl"* %4, %186
  br i1 %187, label %188, label %191

188:                                              ; preds = %183
  %189 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_9InputTypeEEEPhm(i64 168) #10
  %190 = bitcast i8* %189 to %"class.blink::SearchInputType"*
  tail call void @_ZN5blink15SearchInputTypeC1ERNS_16HTMLInputElementE(%"class.blink::SearchInputType"* %190, %"class.blink::HTMLInputElement"* dereferenceable(320) %0) #10
  br label %251

191:                                              ; preds = %183
  %192 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names7kSubmitE, align 8
  %193 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %192, i64 0, i32 0, i32 0, i32 0
  %194 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %193, align 8
  %195 = icmp eq %"class.WTF::StringImpl"* %4, %194
  br i1 %195, label %196, label %199

196:                                              ; preds = %191
  %197 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_9InputTypeEEEPhm(i64 40) #10
  %198 = bitcast i8* %197 to %"class.blink::SubmitInputType"*
  tail call void @_ZN5blink15SubmitInputTypeC1ERNS_16HTMLInputElementE(%"class.blink::SubmitInputType"* %198, %"class.blink::HTMLInputElement"* dereferenceable(320) %0) #10
  br label %251

199:                                              ; preds = %191
  %200 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names4kTelE, align 8
  %201 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %200, i64 0, i32 0, i32 0, i32 0
  %202 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %201, align 8
  %203 = icmp eq %"class.WTF::StringImpl"* %4, %202
  br i1 %203, label %204, label %212

204:                                              ; preds = %199
  %205 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_9InputTypeEEEPhm(i64 64) #10
  %206 = bitcast i8* %205 to %"class.blink::BaseTextInputType"*
  tail call void @_ZN5blink17BaseTextInputTypeC2ERNS_16HTMLInputElementE(%"class.blink::BaseTextInputType"* %206, %"class.blink::HTMLInputElement"* dereferenceable(320) %0) #10
  %207 = bitcast i8* %205 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [116 x i8*], [60 x i8*], [11 x i8*] }, { [116 x i8*], [60 x i8*], [11 x i8*] }* @_ZTVN5blink18TelephoneInputTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %207, align 8
  %208 = getelementptr inbounds i8, i8* %205, i64 16
  %209 = bitcast i8* %208 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [116 x i8*], [60 x i8*], [11 x i8*] }, { [116 x i8*], [60 x i8*], [11 x i8*] }* @_ZTVN5blink18TelephoneInputTypeE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %209, align 8
  %210 = getelementptr inbounds i8, i8* %205, i64 40
  %211 = bitcast i8* %210 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [116 x i8*], [60 x i8*], [11 x i8*] }, { [116 x i8*], [60 x i8*], [11 x i8*] }* @_ZTVN5blink18TelephoneInputTypeE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %211, align 8
  br label %251

212:                                              ; preds = %199
  %213 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names5kTimeE, align 8
  %214 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %213, i64 0, i32 0, i32 0, i32 0
  %215 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %214, align 8
  %216 = icmp eq %"class.WTF::StringImpl"* %4, %215
  br i1 %216, label %217, label %220

217:                                              ; preds = %212
  %218 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_9InputTypeEEEPhm(i64 16) #10
  %219 = bitcast i8* %218 to %"class.blink::TimeInputType"*
  tail call void @_ZN5blink13TimeInputTypeC1ERNS_16HTMLInputElementE(%"class.blink::TimeInputType"* %219, %"class.blink::HTMLInputElement"* dereferenceable(320) %0) #10
  br label %251

220:                                              ; preds = %212
  %221 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names4kUrlE, align 8
  %222 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %221, i64 0, i32 0, i32 0, i32 0
  %223 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %222, align 8
  %224 = icmp eq %"class.WTF::StringImpl"* %4, %223
  br i1 %224, label %225, label %233

225:                                              ; preds = %220
  %226 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_9InputTypeEEEPhm(i64 64) #10
  %227 = bitcast i8* %226 to %"class.blink::BaseTextInputType"*
  tail call void @_ZN5blink17BaseTextInputTypeC2ERNS_16HTMLInputElementE(%"class.blink::BaseTextInputType"* %227, %"class.blink::HTMLInputElement"* dereferenceable(320) %0) #10
  %228 = bitcast i8* %226 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [116 x i8*], [60 x i8*], [11 x i8*] }, { [116 x i8*], [60 x i8*], [11 x i8*] }* @_ZTVN5blink12URLInputTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %228, align 8
  %229 = getelementptr inbounds i8, i8* %226, i64 16
  %230 = bitcast i8* %229 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [116 x i8*], [60 x i8*], [11 x i8*] }, { [116 x i8*], [60 x i8*], [11 x i8*] }* @_ZTVN5blink12URLInputTypeE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %230, align 8
  %231 = getelementptr inbounds i8, i8* %226, i64 40
  %232 = bitcast i8* %231 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [116 x i8*], [60 x i8*], [11 x i8*] }, { [116 x i8*], [60 x i8*], [11 x i8*] }* @_ZTVN5blink12URLInputTypeE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %232, align 8
  br label %251

233:                                              ; preds = %220
  %234 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names5kWeekE, align 8
  %235 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %234, i64 0, i32 0, i32 0, i32 0
  %236 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %235, align 8
  %237 = icmp eq %"class.WTF::StringImpl"* %4, %236
  br i1 %237, label %238, label %243

238:                                              ; preds = %233
  %239 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_9InputTypeEEEPhm(i64 16) #10
  %240 = getelementptr inbounds i8, i8* %239, i64 8
  %241 = bitcast i8* %240 to %"class.blink::HTMLInputElement"**
  store %"class.blink::HTMLInputElement"* %0, %"class.blink::HTMLInputElement"** %241, align 8
  %242 = bitcast i8* %239 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [97 x i8*] }, { [97 x i8*] }* @_ZTVN5blink13WeekInputTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %242, align 8
  br label %251

243:                                              ; preds = %233
  %244 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_9InputTypeEEEPhm(i64 64) #10
  %245 = bitcast i8* %244 to %"class.blink::BaseTextInputType"*
  tail call void @_ZN5blink17BaseTextInputTypeC2ERNS_16HTMLInputElementE(%"class.blink::BaseTextInputType"* %245, %"class.blink::HTMLInputElement"* dereferenceable(320) %0) #10
  %246 = bitcast i8* %244 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [116 x i8*], [60 x i8*], [11 x i8*] }, { [116 x i8*], [60 x i8*], [11 x i8*] }* @_ZTVN5blink13TextInputTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %246, align 8
  %247 = getelementptr inbounds i8, i8* %244, i64 16
  %248 = bitcast i8* %247 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [116 x i8*], [60 x i8*], [11 x i8*] }, { [116 x i8*], [60 x i8*], [11 x i8*] }* @_ZTVN5blink13TextInputTypeE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %248, align 8
  %249 = getelementptr inbounds i8, i8* %244, i64 40
  %250 = bitcast i8* %249 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [116 x i8*], [60 x i8*], [11 x i8*] }, { [116 x i8*], [60 x i8*], [11 x i8*] }* @_ZTVN5blink13TextInputTypeE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %250, align 8
  br label %251

251:                                              ; preds = %243, %238, %225, %217, %204, %196, %188, %177, %169, %153, %138, %125, %115, %107, %92, %84, %76, %66, %58, %50, %34, %23, %10
  %252 = phi i8* [ %244, %243 ], [ %239, %238 ], [ %226, %225 ], [ %218, %217 ], [ %205, %204 ], [ %197, %196 ], [ %189, %188 ], [ %178, %177 ], [ %170, %169 ], [ %154, %153 ], [ %139, %138 ], [ %126, %125 ], [ %116, %115 ], [ %108, %107 ], [ %93, %92 ], [ %85, %84 ], [ %77, %76 ], [ %67, %66 ], [ %59, %58 ], [ %51, %50 ], [ %35, %34 ], [ %24, %23 ], [ %11, %10 ]
  %253 = getelementptr inbounds i8, i8* %252, i64 -4
  %254 = bitcast i8* %253 to i16*
  %255 = load atomic i16, i16* %254 monotonic, align 2
  %256 = or i16 %255, 1
  store atomic i16 %256, i16* %254 release, align 2
  %257 = bitcast i8* %252 to %"class.blink::InputType"*
  ret %"class.blink::InputType"* %257
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink9InputType17NormalizeTypeNameERKN3WTF12AtomicStringE(%"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %1, %5
  %10 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names5kTextE, align 8
  br label %135

11:                                               ; preds = %5
  %12 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF12AtomicString10LowerASCIIEv(%"class.WTF::AtomicString"* %0) #10
  %13 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names7kButtonE, align 8
  %14 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %12, %15
  br i1 %16, label %119, label %17

17:                                               ; preds = %11
  %18 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names9kCheckboxE, align 8
  %19 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %18, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %12, %20
  br i1 %21, label %119, label %22

22:                                               ; preds = %17
  %23 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names6kColorE, align 8
  %24 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %12, %25
  br i1 %26, label %119, label %27

27:                                               ; preds = %22
  %28 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names5kDateE, align 8
  %29 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %12, %30
  br i1 %31, label %119, label %32

32:                                               ; preds = %27
  %33 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names14kDatetimeLocalE, align 8
  %34 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %12, %35
  br i1 %36, label %119, label %37

37:                                               ; preds = %32
  %38 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names6kEmailE, align 8
  %39 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %38, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %12, %40
  br i1 %41, label %119, label %42

42:                                               ; preds = %37
  %43 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names5kFileE, align 8
  %44 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %43, i64 0, i32 0, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %12, %45
  br i1 %46, label %119, label %47

47:                                               ; preds = %42
  %48 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names7kHiddenE, align 8
  %49 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %48, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %12, %50
  br i1 %51, label %119, label %52

52:                                               ; preds = %47
  %53 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names6kImageE, align 8
  %54 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %53, i64 0, i32 0, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %12, %55
  br i1 %56, label %119, label %57

57:                                               ; preds = %52
  %58 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names6kMonthE, align 8
  %59 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %12, %60
  br i1 %61, label %119, label %62

62:                                               ; preds = %57
  %63 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names7kNumberE, align 8
  %64 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %63, i64 0, i32 0, i32 0, i32 0
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %12, %65
  br i1 %66, label %119, label %67

67:                                               ; preds = %62
  %68 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names9kPasswordE, align 8
  %69 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %68, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %12, %70
  br i1 %71, label %119, label %72

72:                                               ; preds = %67
  %73 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names6kRadioE, align 8
  %74 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %73, i64 0, i32 0, i32 0, i32 0
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  %76 = icmp eq %"class.WTF::StringImpl"* %12, %75
  br i1 %76, label %119, label %77

77:                                               ; preds = %72
  %78 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names6kRangeE, align 8
  %79 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %78, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %79, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %12, %80
  br i1 %81, label %119, label %82

82:                                               ; preds = %77
  %83 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names6kResetE, align 8
  %84 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %83, i64 0, i32 0, i32 0, i32 0
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %84, align 8
  %86 = icmp eq %"class.WTF::StringImpl"* %12, %85
  br i1 %86, label %119, label %87

87:                                               ; preds = %82
  %88 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names7kSearchE, align 8
  %89 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %88, i64 0, i32 0, i32 0, i32 0
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %91 = icmp eq %"class.WTF::StringImpl"* %12, %90
  br i1 %91, label %119, label %92

92:                                               ; preds = %87
  %93 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names7kSubmitE, align 8
  %94 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %93, i64 0, i32 0, i32 0, i32 0
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %94, align 8
  %96 = icmp eq %"class.WTF::StringImpl"* %12, %95
  br i1 %96, label %119, label %97

97:                                               ; preds = %92
  %98 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names4kTelE, align 8
  %99 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %99, align 8
  %101 = icmp eq %"class.WTF::StringImpl"* %12, %100
  br i1 %101, label %119, label %102

102:                                              ; preds = %97
  %103 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names5kTimeE, align 8
  %104 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %103, i64 0, i32 0, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %12, %105
  br i1 %106, label %119, label %107

107:                                              ; preds = %102
  %108 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names4kUrlE, align 8
  %109 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %108, i64 0, i32 0, i32 0, i32 0
  %110 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %109, align 8
  %111 = icmp eq %"class.WTF::StringImpl"* %12, %110
  br i1 %111, label %119, label %112

112:                                              ; preds = %107
  %113 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names5kWeekE, align 8
  %114 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %113, i64 0, i32 0, i32 0, i32 0
  %115 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %114, align 8
  %116 = icmp eq %"class.WTF::StringImpl"* %12, %115
  %117 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names5kTextE, align 8
  %118 = select i1 %116, %"class.WTF::AtomicString"* %113, %"class.WTF::AtomicString"* %117
  br label %119

119:                                              ; preds = %112, %107, %102, %97, %92, %87, %82, %77, %72, %67, %62, %57, %52, %47, %42, %37, %32, %27, %22, %17, %11
  %120 = phi %"class.WTF::AtomicString"* [ %13, %11 ], [ %18, %17 ], [ %23, %22 ], [ %28, %27 ], [ %33, %32 ], [ %38, %37 ], [ %43, %42 ], [ %48, %47 ], [ %53, %52 ], [ %58, %57 ], [ %63, %62 ], [ %68, %67 ], [ %73, %72 ], [ %78, %77 ], [ %83, %82 ], [ %88, %87 ], [ %93, %92 ], [ %98, %97 ], [ %103, %102 ], [ %108, %107 ], [ %118, %112 ]
  %121 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %121, label %135, label %122

122:                                              ; preds = %119
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = load atomic i32, i32* %123 monotonic, align 4
  %125 = and i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %128 = load i32, i32* %127, align 4
  br i1 %126, label %129, label %131

129:                                              ; preds = %122
  %130 = add i32 %128, -1
  store i32 %130, i32* %127, align 4
  br label %131

131:                                              ; preds = %129, %122
  %132 = phi i32 [ %130, %129 ], [ %128, %122 ]
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %135

134:                                              ; preds = %131
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %12) #10
  br label %135

135:                                              ; preds = %134, %131, %119, %9
  %136 = phi %"class.WTF::AtomicString"* [ %10, %9 ], [ %120, %119 ], [ %120, %131 ], [ %120, %134 ]
  ret %"class.WTF::AtomicString"* %136
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.WTF::StringImpl"* @_ZNK3WTF12AtomicString10LowerASCIIEv(%"class.WTF::AtomicString"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink9InputTypeD2Ev(%"class.blink::InputType"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN5blink9InputTypeD0Ev(%"class.blink::InputType"* nocapture readnone) unnamed_addr #4 align 2 {
  tail call void @llvm.trap() #11
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9InputType5TraceEPNS_7VisitorE(%"class.blink::InputType"* nocapture readonly, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InputType", %"class.blink::InputType"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16HTMLInputElementEE5TraceEPNS_7VisitorEPKv) #10
  br label %13

13:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink9InputType11IsTextFieldEv(%"class.blink::InputType"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink9InputType36ShouldSaveAndRestoreFormControlStateEv(%"class.blink::InputType"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9InputType20IsFormDataAppendableEv(%"class.blink::InputType"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InputType", %"class.blink::InputType"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %2, align 8
  %4 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16HTMLInputElement7GetNameEv(%"class.blink::HTMLInputElement"* %3) #10
  %5 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi i1 [ false, %1 ], [ %11, %8 ]
  ret i1 %13
}

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16HTMLInputElement7GetNameEv(%"class.blink::HTMLInputElement"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9InputType16AppendToFormDataERNS_8FormDataE(%"class.blink::InputType"* nocapture readonly, %"class.blink::FormData"* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.blink::InputType", %"class.blink::InputType"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %4, align 8
  %6 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16HTMLInputElement7GetNameEv(%"class.blink::HTMLInputElement"* %5) #10
  %7 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %6, i64 0, i32 0
  %8 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #10
  %9 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %4, align 8
  %10 = bitcast %"class.blink::HTMLInputElement"* %9 to %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)***
  %11 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)**, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %11, i64 195
  %13 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %12, align 8
  %14 = tail call %"class.WTF::StringImpl"* %13(%"class.blink::HTMLInputElement"* %9) #10
  %15 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %14, %"class.WTF::StringImpl"** %15, align 8
  call void @_ZN5blink8FormData17AppendFromElementERKN3WTF6StringES4_(%"class.blink::FormData"* %1, %"class.WTF::String"* dereferenceable(8) %7, %"class.WTF::String"* nonnull dereferenceable(8) %3) #10
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  br i1 %22, label %25, label %27

25:                                               ; preds = %18
  %26 = add i32 %24, -1
  store i32 %26, i32* %23, align 4
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi i32 [ %26, %25 ], [ %24, %18 ]
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #10
  br label %31

31:                                               ; preds = %2, %27, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #10
  ret void
}

declare void @_ZN5blink8FormData17AppendFromElementERKN3WTF6StringES4_(%"class.blink::FormData"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink9InputType21ResultForDialogSubmitEv(%"class.blink::InputType"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InputType", %"class.blink::InputType"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %2, align 8
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kValueAttrE, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %5, align 8
  %7 = icmp eq %"class.blink::ElementData"* %6, null
  br i1 %7, label %58, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %6, i64 0, i32 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %20, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.blink::ElementData"* %6 to %"class.blink::UniqueElementData"*
  %15 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %6, i64 1, i32 1
  %16 = bitcast %"class.blink::Member.18"* %15 to %"class.blink::Attribute"**
  %17 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %14, i64 0, i32 2, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  br label %25

20:                                               ; preds = %8
  %21 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %6, i64 1
  %22 = bitcast %"class.blink::ElementData"* %21 to %"class.blink::Attribute"*
  %23 = lshr i32 %10, 1
  %24 = and i32 %23, 268435455
  br label %25

25:                                               ; preds = %20, %13
  %26 = phi %"class.blink::Attribute"* [ %22, %20 ], [ %17, %13 ]
  %27 = phi i32 [ %24, %20 ], [ %19, %13 ]
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %26, i64 %28
  %30 = icmp eq i32 %27, 0
  br i1 %30, label %58, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %4, i64 0, i32 0, i32 0
  %33 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %36

36:                                               ; preds = %51, %31
  %37 = phi %"class.blink::Attribute"* [ %26, %31 ], [ %52, %51 ]
  %38 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %37, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %38, align 8
  %40 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %39, %33
  br i1 %40, label %54, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 3, i32 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %43, %44
  br i1 %45, label %46, label %51

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 4, i32 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %48, %49
  br i1 %50, label %54, label %51

51:                                               ; preds = %46, %41
  %52 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %37, i64 1
  %53 = icmp eq %"class.blink::Attribute"* %52, %29
  br i1 %53, label %58, label %36

54:                                               ; preds = %46, %36
  %55 = icmp eq %"class.blink::Attribute"* %37, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %37, i64 0, i32 1
  br label %60

58:                                               ; preds = %51, %54, %25, %1
  %59 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %60

60:                                               ; preds = %56, %58
  %61 = phi %"class.WTF::AtomicString"* [ %59, %58 ], [ %57, %56 ]
  %62 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %61, i64 0, i32 0, i32 0, i32 0
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %64, label %82, label %65

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %82

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = zext i32 %72 to i33
  %74 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %73, i33 1) #10
  %75 = extractvalue { i33, i1 } %74, 1
  %76 = extractvalue { i33, i1 } %74, 0
  %77 = icmp slt i33 %76, 0
  %78 = or i1 %75, %77
  br i1 %78, label %79, label %80, !prof !2

79:                                               ; preds = %70
  tail call void @llvm.trap() #10
  unreachable

80:                                               ; preds = %70
  %81 = trunc i33 %76 to i32
  store i32 %81, i32* %71, align 4
  br label %82

82:                                               ; preds = %60, %65, %80
  ret %"class.WTF::StringImpl"* %63
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden double @_ZNK5blink9InputType11ValueAsDateEv(%"class.blink::InputType"* nocapture readnone) unnamed_addr #3 align 2 {
  ret double 0x7FF8000000000000
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9InputType14SetValueAsDateERKN4absl8optionalIN4base4TimeEEERNS_14ExceptionStateE(%"class.blink::InputType"* nocapture readnone, %"class.absl::optional.917"* nocapture readnone dereferenceable(16), %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 11, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0)) #10
  ret void
}

declare void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"*, i32, i8*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden double @_ZNK5blink9InputType13ValueAsDoubleEv(%"class.blink::InputType"* nocapture readnone) unnamed_addr #3 align 2 {
  ret double 0x7FF8000000000000
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9InputType16SetValueAsDoubleEdNS_22TextFieldEventBehaviorERNS_14ExceptionStateE(%"class.blink::InputType"* nocapture readnone, double, i32, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %3, i32 11, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1, i64 0, i64 0)) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9InputType17SetValueAsDecimalERKNS_7DecimalENS_22TextFieldEventBehaviorERNS_14ExceptionStateE(%"class.blink::InputType"*, %"class.blink::Decimal"* dereferenceable(24), i32, %"class.blink::ExceptionState"* nocapture readnone dereferenceable(72)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.blink::InputType", %"class.blink::InputType"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %6, align 8
  %8 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #10
  %9 = bitcast %"class.blink::InputType"* %0 to %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*)***
  %10 = load %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*)**, %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*)*, %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*)** %10, i64 80
  %12 = load %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*)*, %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*)** %11, align 8
  %13 = tail call %"class.WTF::StringImpl"* %12(%"class.blink::InputType"* %0, %"class.blink::Decimal"* dereferenceable(24) %1) #10
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"** %14, align 8
  %15 = bitcast %"class.blink::HTMLInputElement"* %7 to void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)***
  %16 = load void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)**, void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)*, void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)** %16, i64 196
  %18 = load void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)*, void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)** %17, align 8
  call void %18(%"class.blink::HTMLInputElement"* %7, %"class.WTF::String"* nonnull dereferenceable(8) %5, i32 %2, i32 0) #10
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %34, label %21

21:                                               ; preds = %4
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  br i1 %25, label %28, label %30

28:                                               ; preds = %21
  %29 = add i32 %27, -1
  store i32 %29, i32* %26, align 4
  br label %30

30:                                               ; preds = %28, %21
  %31 = phi i32 [ %29, %28 ], [ %27, %21 ]
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %30
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %19) #10
  br label %34

34:                                               ; preds = %4, %30, %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #10
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZNK5blink9InputType14ReadingCheckedEv(%"class.blink::InputType"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink9InputType21WillUpdateCheckednessEb(%"class.blink::InputType"* nocapture, i1 zeroext) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink9InputType18SupportsValidationEv(%"class.blink::InputType"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink9InputType15TypeMismatchForERKN3WTF6StringE(%"class.blink::InputType"* nocapture readnone, %"class.WTF::String"* nocapture readnone dereferenceable(8)) unnamed_addr #3 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink9InputType12TypeMismatchEv(%"class.blink::InputType"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9InputType16SupportsRequiredEv(%"class.blink::InputType"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::InputType"* %0 to i1 (%"class.blink::InputType"*)***
  %3 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %2, align 8
  %4 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %3, i64 22
  %5 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %4, align 8
  %6 = tail call zeroext i1 %5(%"class.blink::InputType"* %0) #10
  ret i1 %6
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink9InputType12ValueMissingERKN3WTF6StringE(%"class.blink::InputType"* nocapture readnone, %"class.WTF::String"* nocapture readnone dereferenceable(8)) unnamed_addr #3 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink9InputType7TooLongERKN3WTF6StringENS_18TextControlElement21NeedsToCheckDirtyFlagE(%"class.blink::InputType"* nocapture readnone, %"class.WTF::String"* nocapture readnone dereferenceable(8), i32) unnamed_addr #3 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink9InputType8TooShortERKN3WTF6StringENS_18TextControlElement21NeedsToCheckDirtyFlagE(%"class.blink::InputType"* nocapture readnone, %"class.WTF::String"* nocapture readnone dereferenceable(8), i32) unnamed_addr #3 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink9InputType15PatternMismatchERKN3WTF6StringE(%"class.blink::InputType"* nocapture readnone, %"class.WTF::String"* nocapture readnone dereferenceable(8)) unnamed_addr #3 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9InputType14RangeUnderflowERKN3WTF6StringE(%"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::Decimal", align 8
  %4 = alloca %"class.blink::Decimal", align 8
  %5 = alloca %"class.blink::StepRange", align 8
  %6 = alloca %"class.blink::Decimal", align 8
  %7 = alloca %"class.blink::Decimal", align 8
  %8 = alloca %"class.blink::Decimal", align 8
  %9 = bitcast %"class.blink::InputType"* %0 to i1 (%"class.blink::InputType"*)***
  %10 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %10, i64 67
  %12 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.blink::InputType"* %0) #10
  br i1 %13, label %14, label %52

14:                                               ; preds = %2
  %15 = bitcast %"class.blink::Decimal"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #10
  %16 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %4, i64 0, i32 0, i32 3
  %17 = bitcast %"class.blink::Decimal"* %3 to i8*
  %18 = bitcast %"class.blink::Decimal"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #10, !noalias !3
  call void @_ZN5blink7Decimal3NanEv(%"class.blink::Decimal"* nonnull sret %3) #10, !noalias !3
  %19 = bitcast %"class.blink::InputType"* %0 to void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)***
  %20 = load void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)**, void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)*** %19, align 8, !noalias !3
  %21 = getelementptr inbounds void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)*, void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)** %20, i64 79
  %22 = load void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)*, void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)** %21, align 8, !noalias !3
  call void %22(%"class.blink::Decimal"* nonnull sret %4, %"class.blink::InputType"* %0, %"class.WTF::String"* dereferenceable(8) %1, %"class.blink::Decimal"* nonnull dereferenceable(24) %3) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #10, !noalias !3
  %23 = load i32, i32* %16, align 4
  %24 = and i32 %23, -3
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %50, label %26

26:                                               ; preds = %14
  %27 = bitcast %"class.blink::StepRange"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %27) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 120, i1 false)
  %28 = bitcast %"class.blink::InputType"* %0 to void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)***
  %29 = load void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)**, void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)*, void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)** %29, i64 31
  %31 = load void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)*, void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)** %30, align 8
  call void %31(%"class.blink::StepRange"* nonnull sret %5, %"class.blink::InputType"* %0, i32 0) #10
  %32 = call zeroext i1 @_ZNK5blink9StepRange16HasReversedRangeEv(%"class.blink::StepRange"* nonnull %5) #10
  br i1 %32, label %33, label %43

33:                                               ; preds = %26
  %34 = bitcast %"class.blink::Decimal"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #10
  %35 = getelementptr inbounds %"class.blink::StepRange", %"class.blink::StepRange"* %5, i64 0, i32 0
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %6, %"class.blink::Decimal"* nonnull dereferenceable(24) %35) #10
  %36 = call zeroext i1 @_ZNK5blink7DecimalgtERKS0_(%"class.blink::Decimal"* nonnull %4, %"class.blink::Decimal"* nonnull dereferenceable(24) %6) #10
  %37 = bitcast %"class.blink::Decimal"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #10
  br i1 %36, label %38, label %41

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.blink::StepRange", %"class.blink::StepRange"* %5, i64 0, i32 1
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %7, %"class.blink::Decimal"* dereferenceable(24) %39) #10
  %40 = call zeroext i1 @_ZNK5blink7DecimalltERKS0_(%"class.blink::Decimal"* nonnull %4, %"class.blink::Decimal"* nonnull dereferenceable(24) %7) #10
  br label %41

41:                                               ; preds = %38, %33
  %42 = phi i1 [ false, %33 ], [ %40, %38 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #10
  br label %47

43:                                               ; preds = %26
  %44 = bitcast %"class.blink::Decimal"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #10
  %45 = getelementptr inbounds %"class.blink::StepRange", %"class.blink::StepRange"* %5, i64 0, i32 1
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %8, %"class.blink::Decimal"* dereferenceable(24) %45) #10
  %46 = call zeroext i1 @_ZNK5blink7DecimalltERKS0_(%"class.blink::Decimal"* nonnull %4, %"class.blink::Decimal"* nonnull dereferenceable(24) %8) #10
  br label %47

47:                                               ; preds = %43, %41
  %48 = phi i8* [ %44, %43 ], [ %34, %41 ]
  %49 = phi i1 [ %46, %43 ], [ %42, %41 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #10
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %27) #10
  br label %50

50:                                               ; preds = %14, %47
  %51 = phi i1 [ %49, %47 ], [ false, %14 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #10
  br label %52

52:                                               ; preds = %2, %50
  %53 = phi i1 [ %51, %50 ], [ false, %2 ]
  ret i1 %53
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9InputType18ParseToNumberOrNaNERKN3WTF6StringE(%"class.blink::Decimal"* noalias sret, %"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::Decimal", align 8
  %5 = bitcast %"class.blink::Decimal"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #10
  call void @_ZN5blink7Decimal3NanEv(%"class.blink::Decimal"* nonnull sret %4) #10
  %6 = bitcast %"class.blink::InputType"* %1 to void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)***
  %7 = load void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)**, void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)*, void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)** %7, i64 79
  %9 = load void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)*, void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)** %8, align 8
  call void %9(%"class.blink::Decimal"* sret %0, %"class.blink::InputType"* %1, %"class.WTF::String"* dereferenceable(8) %2, %"class.blink::Decimal"* nonnull dereferenceable(24) %4) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare zeroext i1 @_ZNK5blink9StepRange16HasReversedRangeEv(%"class.blink::StepRange"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink7DecimalgtERKS0_(%"class.blink::Decimal"*, %"class.blink::Decimal"* dereferenceable(24)) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink7DecimalltERKS0_(%"class.blink::Decimal"*, %"class.blink::Decimal"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9InputType13RangeOverflowERKN3WTF6StringE(%"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::Decimal", align 8
  %4 = alloca %"class.blink::Decimal", align 8
  %5 = alloca %"class.blink::StepRange", align 8
  %6 = alloca %"class.blink::Decimal", align 8
  %7 = alloca %"class.blink::Decimal", align 8
  %8 = alloca %"class.blink::Decimal", align 8
  %9 = bitcast %"class.blink::InputType"* %0 to i1 (%"class.blink::InputType"*)***
  %10 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %10, i64 67
  %12 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.blink::InputType"* %0) #10
  br i1 %13, label %14, label %52

14:                                               ; preds = %2
  %15 = bitcast %"class.blink::Decimal"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #10
  %16 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %4, i64 0, i32 0, i32 3
  %17 = bitcast %"class.blink::Decimal"* %3 to i8*
  %18 = bitcast %"class.blink::Decimal"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #10, !noalias !6
  call void @_ZN5blink7Decimal3NanEv(%"class.blink::Decimal"* nonnull sret %3) #10, !noalias !6
  %19 = bitcast %"class.blink::InputType"* %0 to void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)***
  %20 = load void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)**, void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)*** %19, align 8, !noalias !6
  %21 = getelementptr inbounds void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)*, void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)** %20, i64 79
  %22 = load void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)*, void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)** %21, align 8, !noalias !6
  call void %22(%"class.blink::Decimal"* nonnull sret %4, %"class.blink::InputType"* %0, %"class.WTF::String"* dereferenceable(8) %1, %"class.blink::Decimal"* nonnull dereferenceable(24) %3) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #10, !noalias !6
  %23 = load i32, i32* %16, align 4
  %24 = and i32 %23, -3
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %50, label %26

26:                                               ; preds = %14
  %27 = bitcast %"class.blink::StepRange"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %27) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 120, i1 false)
  %28 = bitcast %"class.blink::InputType"* %0 to void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)***
  %29 = load void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)**, void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)*, void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)** %29, i64 31
  %31 = load void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)*, void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)** %30, align 8
  call void %31(%"class.blink::StepRange"* nonnull sret %5, %"class.blink::InputType"* %0, i32 0) #10
  %32 = call zeroext i1 @_ZNK5blink9StepRange16HasReversedRangeEv(%"class.blink::StepRange"* nonnull %5) #10
  br i1 %32, label %33, label %43

33:                                               ; preds = %26
  %34 = bitcast %"class.blink::Decimal"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #10
  %35 = getelementptr inbounds %"class.blink::StepRange", %"class.blink::StepRange"* %5, i64 0, i32 0
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %6, %"class.blink::Decimal"* nonnull dereferenceable(24) %35) #10
  %36 = call zeroext i1 @_ZNK5blink7DecimalgtERKS0_(%"class.blink::Decimal"* nonnull %4, %"class.blink::Decimal"* nonnull dereferenceable(24) %6) #10
  %37 = bitcast %"class.blink::Decimal"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #10
  br i1 %36, label %38, label %41

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.blink::StepRange", %"class.blink::StepRange"* %5, i64 0, i32 1
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %7, %"class.blink::Decimal"* dereferenceable(24) %39) #10
  %40 = call zeroext i1 @_ZNK5blink7DecimalltERKS0_(%"class.blink::Decimal"* nonnull %4, %"class.blink::Decimal"* nonnull dereferenceable(24) %7) #10
  br label %41

41:                                               ; preds = %38, %33
  %42 = phi i1 [ false, %33 ], [ %40, %38 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #10
  br label %47

43:                                               ; preds = %26
  %44 = bitcast %"class.blink::Decimal"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #10
  %45 = getelementptr inbounds %"class.blink::StepRange", %"class.blink::StepRange"* %5, i64 0, i32 0
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %8, %"class.blink::Decimal"* nonnull dereferenceable(24) %45) #10
  %46 = call zeroext i1 @_ZNK5blink7DecimalgtERKS0_(%"class.blink::Decimal"* nonnull %4, %"class.blink::Decimal"* nonnull dereferenceable(24) %8) #10
  br label %47

47:                                               ; preds = %43, %41
  %48 = phi i8* [ %44, %43 ], [ %34, %41 ]
  %49 = phi i1 [ %46, %43 ], [ %42, %41 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #10
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %27) #10
  br label %50

50:                                               ; preds = %14, %47
  %51 = phi i1 [ %49, %47 ], [ false, %14 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #10
  br label %52

52:                                               ; preds = %2, %50
  %53 = phi i1 [ %51, %50 ], [ false, %2 ]
  ret i1 %53
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9InputType21DefaultValueForStepUpEv(%"class.blink::Decimal"* noalias sret, %"class.blink::InputType"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink7DecimalC1Ei(%"class.blink::Decimal"* %0, i32 0) #10
  ret void
}

declare void @_ZN5blink7DecimalC1Ei(%"class.blink::Decimal"*, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink9InputType7MinimumEv(%"class.blink::InputType"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::Decimal", align 8
  %3 = alloca %"class.blink::StepRange", align 8
  %4 = bitcast %"class.blink::Decimal"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #10
  %5 = bitcast %"class.blink::StepRange"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %5) #10
  %6 = bitcast %"class.blink::InputType"* %0 to void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)***
  %7 = load void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)**, void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)*, void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)** %7, i64 31
  %9 = load void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)*, void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)** %8, align 8
  call void %9(%"class.blink::StepRange"* nonnull sret %3, %"class.blink::InputType"* %0, i32 0) #10
  %10 = getelementptr inbounds %"class.blink::StepRange", %"class.blink::StepRange"* %3, i64 0, i32 1
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %2, %"class.blink::Decimal"* dereferenceable(24) %10) #10
  %11 = call double @_ZNK5blink7Decimal8ToDoubleEv(%"class.blink::Decimal"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #10
  ret double %11
}

declare double @_ZNK5blink7Decimal8ToDoubleEv(%"class.blink::Decimal"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink9InputType7MaximumEv(%"class.blink::InputType"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::Decimal", align 8
  %3 = alloca %"class.blink::StepRange", align 8
  %4 = bitcast %"class.blink::Decimal"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #10
  %5 = bitcast %"class.blink::StepRange"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %5) #10
  %6 = bitcast %"class.blink::InputType"* %0 to void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)***
  %7 = load void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)**, void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)*, void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)** %7, i64 31
  %9 = load void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)*, void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)** %8, align 8
  call void %9(%"class.blink::StepRange"* nonnull sret %3, %"class.blink::InputType"* %0, i32 0) #10
  %10 = getelementptr inbounds %"class.blink::StepRange", %"class.blink::StepRange"* %3, i64 0, i32 0
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %2, %"class.blink::Decimal"* nonnull dereferenceable(24) %10) #10
  %11 = call double @_ZNK5blink7Decimal8ToDoubleEv(%"class.blink::Decimal"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #10
  ret double %11
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9InputType9IsInRangeERKN3WTF6StringE(%"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::Decimal", align 8
  %4 = alloca %"class.blink::Decimal", align 8
  %5 = alloca %"class.blink::StepRange", align 8
  %6 = alloca %"class.blink::Decimal", align 8
  %7 = alloca %"class.blink::Decimal", align 8
  %8 = bitcast %"class.blink::InputType"* %0 to i1 (%"class.blink::InputType"*)***
  %9 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %8, align 8
  %10 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %9, i64 67
  %11 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.blink::InputType"* %0) #10
  br i1 %12, label %13, label %46

13:                                               ; preds = %2
  %14 = bitcast %"class.blink::Decimal"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #10
  %15 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %4, i64 0, i32 0, i32 3
  %16 = bitcast %"class.blink::Decimal"* %3 to i8*
  %17 = bitcast %"class.blink::Decimal"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #10, !noalias !9
  call void @_ZN5blink7Decimal3NanEv(%"class.blink::Decimal"* nonnull sret %3) #10, !noalias !9
  %18 = bitcast %"class.blink::InputType"* %0 to void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)***
  %19 = load void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)**, void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)*** %18, align 8, !noalias !9
  %20 = getelementptr inbounds void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)*, void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)** %19, i64 79
  %21 = load void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)*, void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)** %20, align 8, !noalias !9
  call void %21(%"class.blink::Decimal"* nonnull sret %4, %"class.blink::InputType"* %0, %"class.WTF::String"* dereferenceable(8) %1, %"class.blink::Decimal"* nonnull dereferenceable(24) %3) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #10, !noalias !9
  %22 = load i32, i32* %15, align 4
  %23 = and i32 %22, -3
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %44, label %25

25:                                               ; preds = %13
  %26 = bitcast %"class.blink::StepRange"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %26) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 120, i1 false)
  %27 = bitcast %"class.blink::InputType"* %0 to void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)***
  %28 = load void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)**, void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)*, void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)** %28, i64 31
  %30 = load void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)*, void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)** %29, align 8
  call void %30(%"class.blink::StepRange"* nonnull sret %5, %"class.blink::InputType"* %0, i32 0) #10
  %31 = getelementptr inbounds %"class.blink::StepRange", %"class.blink::StepRange"* %5, i64 0, i32 6
  %32 = load i8, i8* %31, align 1, !range !12
  %33 = icmp eq i8 %32, 0
  %34 = bitcast %"class.blink::Decimal"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #10
  %35 = bitcast %"class.blink::Decimal"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #10
  br i1 %33, label %42, label %36

36:                                               ; preds = %25
  %37 = getelementptr inbounds %"class.blink::StepRange", %"class.blink::StepRange"* %5, i64 0, i32 1
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %6, %"class.blink::Decimal"* dereferenceable(24) %37) #10
  %38 = call zeroext i1 @_ZNK5blink7DecimalgeERKS0_(%"class.blink::Decimal"* nonnull %4, %"class.blink::Decimal"* nonnull dereferenceable(24) %6) #10
  br i1 %38, label %39, label %42

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"class.blink::StepRange", %"class.blink::StepRange"* %5, i64 0, i32 0
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %7, %"class.blink::Decimal"* nonnull dereferenceable(24) %40) #10
  %41 = call zeroext i1 @_ZNK5blink7DecimalleERKS0_(%"class.blink::Decimal"* nonnull %4, %"class.blink::Decimal"* nonnull dereferenceable(24) %7) #10
  br label %42

42:                                               ; preds = %25, %39, %36
  %43 = phi i1 [ false, %36 ], [ false, %25 ], [ %41, %39 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #10
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %26) #10
  br label %44

44:                                               ; preds = %13, %42
  %45 = phi i1 [ %43, %42 ], [ true, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #10
  br label %46

46:                                               ; preds = %2, %44
  %47 = phi i1 [ %45, %44 ], [ false, %2 ]
  ret i1 %47
}

declare zeroext i1 @_ZNK5blink7DecimalgeERKS0_(%"class.blink::Decimal"*, %"class.blink::Decimal"* dereferenceable(24)) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink7DecimalleERKS0_(%"class.blink::Decimal"*, %"class.blink::Decimal"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9InputType12IsOutOfRangeERKN3WTF6StringE(%"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::Decimal", align 8
  %4 = alloca %"class.blink::Decimal", align 8
  %5 = alloca %"class.blink::StepRange", align 8
  %6 = alloca %"class.blink::Decimal", align 8
  %7 = alloca %"class.blink::Decimal", align 8
  %8 = bitcast %"class.blink::InputType"* %0 to i1 (%"class.blink::InputType"*)***
  %9 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %8, align 8
  %10 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %9, i64 67
  %11 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.blink::InputType"* %0) #10
  br i1 %12, label %13, label %46

13:                                               ; preds = %2
  %14 = bitcast %"class.blink::Decimal"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #10
  %15 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %4, i64 0, i32 0, i32 3
  %16 = bitcast %"class.blink::Decimal"* %3 to i8*
  %17 = bitcast %"class.blink::Decimal"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #10, !noalias !13
  call void @_ZN5blink7Decimal3NanEv(%"class.blink::Decimal"* nonnull sret %3) #10, !noalias !13
  %18 = bitcast %"class.blink::InputType"* %0 to void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)***
  %19 = load void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)**, void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)*** %18, align 8, !noalias !13
  %20 = getelementptr inbounds void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)*, void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)** %19, i64 79
  %21 = load void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)*, void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)** %20, align 8, !noalias !13
  call void %21(%"class.blink::Decimal"* nonnull sret %4, %"class.blink::InputType"* %0, %"class.WTF::String"* dereferenceable(8) %1, %"class.blink::Decimal"* nonnull dereferenceable(24) %3) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #10, !noalias !13
  %22 = load i32, i32* %15, align 4
  %23 = and i32 %22, -3
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %44, label %25

25:                                               ; preds = %13
  %26 = bitcast %"class.blink::StepRange"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %26) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 120, i1 false)
  %27 = bitcast %"class.blink::InputType"* %0 to void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)***
  %28 = load void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)**, void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)*, void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)** %28, i64 31
  %30 = load void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)*, void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)** %29, align 8
  call void %30(%"class.blink::StepRange"* nonnull sret %5, %"class.blink::InputType"* %0, i32 0) #10
  %31 = getelementptr inbounds %"class.blink::StepRange", %"class.blink::StepRange"* %5, i64 0, i32 6
  %32 = load i8, i8* %31, align 1, !range !12
  %33 = icmp eq i8 %32, 0
  %34 = bitcast %"class.blink::Decimal"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #10
  %35 = bitcast %"class.blink::Decimal"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #10
  br i1 %33, label %42, label %36

36:                                               ; preds = %25
  %37 = getelementptr inbounds %"class.blink::StepRange", %"class.blink::StepRange"* %5, i64 0, i32 1
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %6, %"class.blink::Decimal"* dereferenceable(24) %37) #10
  %38 = call zeroext i1 @_ZNK5blink7DecimalltERKS0_(%"class.blink::Decimal"* nonnull %4, %"class.blink::Decimal"* nonnull dereferenceable(24) %6) #10
  br i1 %38, label %42, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"class.blink::StepRange", %"class.blink::StepRange"* %5, i64 0, i32 0
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %7, %"class.blink::Decimal"* nonnull dereferenceable(24) %40) #10
  %41 = call zeroext i1 @_ZNK5blink7DecimalgtERKS0_(%"class.blink::Decimal"* nonnull %4, %"class.blink::Decimal"* nonnull dereferenceable(24) %7) #10
  br label %42

42:                                               ; preds = %25, %36, %39
  %43 = phi i1 [ false, %25 ], [ true, %36 ], [ %41, %39 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #10
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %26) #10
  br label %44

44:                                               ; preds = %13, %42
  %45 = phi i1 [ %43, %42 ], [ false, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #10
  br label %46

46:                                               ; preds = %2, %44
  %47 = phi i1 [ %45, %44 ], [ false, %2 ]
  ret i1 %47
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9InputType14InRangeChangedEv(%"class.blink::InputType"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::InputType"* %0 to i1 (%"class.blink::InputType"*)***
  %3 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %2, align 8
  %4 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %3, i64 67
  %5 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %4, align 8
  %6 = tail call zeroext i1 %5(%"class.blink::InputType"* %0) #10
  br i1 %6, label %7, label %13

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::InputType", %"class.blink::InputType"* %0, i64 0, i32 1, i32 0, i32 0
  %9 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"* %10, i32 85) #10
  %11 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %8, align 8
  %12 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"* %12, i32 86) #10
  br label %13

13:                                               ; preds = %7, %1
  ret void
}

declare void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9InputType12StepMismatchERKN3WTF6StringE(%"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::Decimal", align 8
  %4 = alloca %"class.blink::Decimal", align 8
  %5 = alloca %"class.blink::StepRange", align 8
  %6 = bitcast %"class.blink::InputType"* %0 to i1 (%"class.blink::InputType"*)***
  %7 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %7, i64 67
  %9 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.blink::InputType"* %0) #10
  br i1 %10, label %11, label %32

11:                                               ; preds = %2
  %12 = bitcast %"class.blink::Decimal"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #10
  %13 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %4, i64 0, i32 0, i32 3
  %14 = bitcast %"class.blink::Decimal"* %3 to i8*
  %15 = bitcast %"class.blink::Decimal"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #10, !noalias !16
  call void @_ZN5blink7Decimal3NanEv(%"class.blink::Decimal"* nonnull sret %3) #10, !noalias !16
  %16 = bitcast %"class.blink::InputType"* %0 to void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)***
  %17 = load void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)**, void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)*** %16, align 8, !noalias !16
  %18 = getelementptr inbounds void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)*, void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)** %17, i64 79
  %19 = load void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)*, void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)** %18, align 8, !noalias !16
  call void %19(%"class.blink::Decimal"* nonnull sret %4, %"class.blink::InputType"* %0, %"class.WTF::String"* dereferenceable(8) %1, %"class.blink::Decimal"* nonnull dereferenceable(24) %3) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #10, !noalias !16
  %20 = load i32, i32* %13, align 4
  %21 = and i32 %20, -3
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %30, label %23

23:                                               ; preds = %11
  %24 = bitcast %"class.blink::StepRange"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %24) #10
  %25 = bitcast %"class.blink::InputType"* %0 to void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)***
  %26 = load void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)**, void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)*, void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)** %26, i64 31
  %28 = load void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)*, void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)** %27, align 8
  call void %28(%"class.blink::StepRange"* nonnull sret %5, %"class.blink::InputType"* %0, i32 0) #10
  %29 = call zeroext i1 @_ZNK5blink9StepRange12StepMismatchERKNS_7DecimalE(%"class.blink::StepRange"* nonnull %5, %"class.blink::Decimal"* nonnull dereferenceable(24) %4) #10
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %24) #10
  br label %30

30:                                               ; preds = %11, %23
  %31 = phi i1 [ %29, %23 ], [ false, %11 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #10
  br label %32

32:                                               ; preds = %2, %30
  %33 = phi i1 [ %31, %30 ], [ false, %2 ]
  ret i1 %33
}

declare zeroext i1 @_ZNK5blink9StepRange12StepMismatchERKNS_7DecimalE(%"class.blink::StepRange"*, %"class.blink::Decimal"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink9InputType12BadInputTextEv(%"class.blink::InputType"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InputType", %"class.blink::InputType"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = tail call dereferenceable(152) %"class.blink::Locale"* @_ZNK5blink7Element9GetLocaleEv(%"class.blink::Element"* %4) #10
  %6 = tail call %"class.WTF::StringImpl"* @_ZN5blink6Locale11QueryStringEi(%"class.blink::Locale"* %5, i32 25022) #10
  ret %"class.WTF::StringImpl"* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(152) %"class.blink::Locale"* @_ZNK5blink9InputType9GetLocaleEv(%"class.blink::InputType"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InputType", %"class.blink::InputType"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = tail call dereferenceable(152) %"class.blink::Locale"* @_ZNK5blink7Element9GetLocaleEv(%"class.blink::Element"* %4) #10
  ret %"class.blink::Locale"* %5
}

declare %"class.WTF::StringImpl"* @_ZN5blink6Locale11QueryStringEi(%"class.blink::Locale"*, i32) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink9InputType17ValueNotEqualTextERKNS_7DecimalE(%"class.blink::InputType"* nocapture readnone, %"class.blink::Decimal"* nocapture readnone dereferenceable(24)) unnamed_addr #3 align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink9InputType17RangeOverflowTextERKNS_7DecimalE(%"class.blink::InputType"* nocapture readnone, %"class.blink::Decimal"* nocapture readnone dereferenceable(24)) unnamed_addr #3 align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink9InputType18RangeUnderflowTextERKNS_7DecimalE(%"class.blink::InputType"* nocapture readnone, %"class.blink::Decimal"* nocapture readnone dereferenceable(24)) unnamed_addr #3 align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink9InputType27ReversedRangeOutOfRangeTextERKNS_7DecimalES3_(%"class.blink::InputType"* nocapture readnone, %"class.blink::Decimal"* nocapture readnone dereferenceable(24), %"class.blink::Decimal"* nocapture readnone dereferenceable(24)) unnamed_addr #3 align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink9InputType16RangeInvalidTextERKNS_7DecimalES3_(%"class.blink::InputType"* nocapture readnone, %"class.blink::Decimal"* nocapture readnone dereferenceable(24), %"class.blink::Decimal"* nocapture readnone dereferenceable(24)) unnamed_addr #3 align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink9InputType16TypeMismatchTextEv(%"class.blink::InputType"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InputType", %"class.blink::InputType"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = tail call dereferenceable(152) %"class.blink::Locale"* @_ZNK5blink7Element9GetLocaleEv(%"class.blink::Element"* %4) #10
  %6 = tail call %"class.WTF::StringImpl"* @_ZN5blink6Locale11QueryStringEi(%"class.blink::Locale"* %5, i32 25022) #10
  ret %"class.WTF::StringImpl"* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink9InputType16ValueMissingTextEv(%"class.blink::InputType"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InputType", %"class.blink::InputType"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = tail call dereferenceable(152) %"class.blink::Locale"* @_ZNK5blink7Element9GetLocaleEv(%"class.blink::Element"* %4) #10
  %6 = tail call %"class.WTF::StringImpl"* @_ZN5blink6Locale11QueryStringEi(%"class.blink::Locale"* %5, i32 25041) #10
  ret %"class.WTF::StringImpl"* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZNK5blink9InputType17ValidationMessageERKNS_13InputTypeViewE(%"class.blink::InputType"*, %"class.blink::InputTypeView"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::Decimal", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.blink::Decimal", align 8
  %6 = alloca %"class.blink::StepRange", align 8
  %7 = alloca %"class.blink::Decimal", align 8
  %8 = alloca %"class.blink::Decimal", align 8
  %9 = alloca %"class.blink::Decimal", align 8
  %10 = alloca %"class.blink::Decimal", align 8
  %11 = alloca %"class.blink::Decimal", align 8
  %12 = alloca %"class.blink::Decimal", align 8
  %13 = alloca %"class.blink::Decimal", align 8
  %14 = alloca %"class.blink::Decimal", align 8
  %15 = alloca %"class.blink::Decimal", align 8
  %16 = alloca %"class.blink::Decimal", align 8
  %17 = alloca %"class.blink::Decimal", align 8
  %18 = alloca %"class.blink::Decimal", align 8
  %19 = alloca %"class.blink::Decimal", align 8
  %20 = alloca %"class.blink::Decimal", align 8
  %21 = alloca %"class.blink::Decimal", align 8
  %22 = alloca %"class.blink::Decimal", align 8
  %23 = alloca %"class.blink::Decimal", align 8
  %24 = alloca %"class.WTF::String", align 8
  %25 = alloca %"class.WTF::String", align 8
  %26 = alloca %"class.blink::Decimal", align 8
  %27 = alloca %"class.blink::Decimal", align 8
  %28 = alloca %"class.blink::Decimal", align 8
  %29 = alloca %"class.blink::Decimal", align 8
  %30 = alloca %"class.blink::Decimal", align 8
  %31 = alloca %"class.WTF::String", align 8
  %32 = alloca %"class.WTF::String", align 8
  %33 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  %34 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %34, align 8
  %35 = getelementptr inbounds %"class.blink::InputType", %"class.blink::InputType"* %0, i64 0, i32 1, i32 0, i32 0
  %36 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %35, align 8
  %37 = bitcast %"class.blink::HTMLInputElement"* %36 to %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)***
  %38 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)**, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*** %37, align 8
  %39 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %38, i64 195
  %40 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %39, align 8
  %41 = tail call %"class.WTF::StringImpl"* %40(%"class.blink::HTMLInputElement"* %36) #10
  store %"class.WTF::StringImpl"* %41, %"class.WTF::StringImpl"** %34, align 8
  %42 = bitcast %"class.blink::InputTypeView"* %1 to i1 (%"class.blink::InputTypeView"*)***
  %43 = load i1 (%"class.blink::InputTypeView"*)**, i1 (%"class.blink::InputTypeView"*)*** %42, align 8
  %44 = getelementptr inbounds i1 (%"class.blink::InputTypeView"*)*, i1 (%"class.blink::InputTypeView"*)** %43, i64 56
  %45 = load i1 (%"class.blink::InputTypeView"*)*, i1 (%"class.blink::InputTypeView"*)** %44, align 8
  %46 = tail call zeroext i1 %45(%"class.blink::InputTypeView"* %1) #10
  br i1 %46, label %47, label %74

47:                                               ; preds = %2
  %48 = bitcast %"class.blink::InputType"* %0 to %"class.WTF::StringImpl"* (%"class.blink::InputType"*)***
  %49 = load %"class.WTF::StringImpl"* (%"class.blink::InputType"*)**, %"class.WTF::StringImpl"* (%"class.blink::InputType"*)*** %48, align 8
  %50 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::InputType"*)*, %"class.WTF::StringImpl"* (%"class.blink::InputType"*)** %49, i64 32
  %51 = load %"class.WTF::StringImpl"* (%"class.blink::InputType"*)*, %"class.WTF::StringImpl"* (%"class.blink::InputType"*)** %50, align 8
  %52 = tail call %"class.WTF::StringImpl"* %51(%"class.blink::InputType"* %0) #10
  %53 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %54 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %53, i64 0, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %56, label %836, label %57

57:                                               ; preds = %47
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %836

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = zext i32 %64 to i33
  %66 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %65, i33 1) #10
  %67 = extractvalue { i33, i1 } %66, 1
  %68 = extractvalue { i33, i1 } %66, 0
  %69 = icmp slt i33 %68, 0
  %70 = or i1 %67, %69
  br i1 %70, label %71, label %72, !prof !2

71:                                               ; preds = %62
  tail call void @llvm.trap() #10
  unreachable

72:                                               ; preds = %62
  %73 = trunc i33 %68 to i32
  store i32 %73, i32* %63, align 4
  br label %836

74:                                               ; preds = %2
  %75 = bitcast %"class.blink::InputType"* %0 to i1 (%"class.blink::InputType"*, %"class.WTF::String"*)***
  %76 = load i1 (%"class.blink::InputType"*, %"class.WTF::String"*)**, i1 (%"class.blink::InputType"*, %"class.WTF::String"*)*** %75, align 8
  %77 = getelementptr inbounds i1 (%"class.blink::InputType"*, %"class.WTF::String"*)*, i1 (%"class.blink::InputType"*, %"class.WTF::String"*)** %76, i64 26
  %78 = load i1 (%"class.blink::InputType"*, %"class.WTF::String"*)*, i1 (%"class.blink::InputType"*, %"class.WTF::String"*)** %77, align 8
  %79 = call zeroext i1 %78(%"class.blink::InputType"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %4) #10
  br i1 %79, label %80, label %107

80:                                               ; preds = %74
  %81 = bitcast %"class.blink::InputType"* %0 to %"class.WTF::StringImpl"* (%"class.blink::InputType"*)***
  %82 = load %"class.WTF::StringImpl"* (%"class.blink::InputType"*)**, %"class.WTF::StringImpl"* (%"class.blink::InputType"*)*** %81, align 8
  %83 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::InputType"*)*, %"class.WTF::StringImpl"* (%"class.blink::InputType"*)** %82, i64 39
  %84 = load %"class.WTF::StringImpl"* (%"class.blink::InputType"*)*, %"class.WTF::StringImpl"* (%"class.blink::InputType"*)** %83, align 8
  %85 = call %"class.WTF::StringImpl"* %84(%"class.blink::InputType"* %0) #10
  %86 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %87 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %86, i64 0, i32 0, i32 0
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %87, align 8
  %89 = icmp eq %"class.WTF::StringImpl"* %88, null
  br i1 %89, label %836, label %90

90:                                               ; preds = %80
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %836

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 0
  %97 = load i32, i32* %96, align 4
  %98 = zext i32 %97 to i33
  %99 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %98, i33 1) #10
  %100 = extractvalue { i33, i1 } %99, 1
  %101 = extractvalue { i33, i1 } %99, 0
  %102 = icmp slt i33 %101, 0
  %103 = or i1 %100, %102
  br i1 %103, label %104, label %105, !prof !2

104:                                              ; preds = %95
  call void @llvm.trap() #10
  unreachable

105:                                              ; preds = %95
  %106 = trunc i33 %101 to i32
  store i32 %106, i32* %96, align 4
  br label %836

107:                                              ; preds = %74
  %108 = bitcast %"class.blink::InputType"* %0 to i1 (%"class.blink::InputType"*)***
  %109 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %108, align 8
  %110 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %109, i64 24
  %111 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %110, align 8
  %112 = call zeroext i1 %111(%"class.blink::InputType"* %0) #10
  br i1 %112, label %113, label %140

113:                                              ; preds = %107
  %114 = bitcast %"class.blink::InputType"* %0 to %"class.WTF::StringImpl"* (%"class.blink::InputType"*)***
  %115 = load %"class.WTF::StringImpl"* (%"class.blink::InputType"*)**, %"class.WTF::StringImpl"* (%"class.blink::InputType"*)*** %114, align 8
  %116 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::InputType"*)*, %"class.WTF::StringImpl"* (%"class.blink::InputType"*)** %115, i64 38
  %117 = load %"class.WTF::StringImpl"* (%"class.blink::InputType"*)*, %"class.WTF::StringImpl"* (%"class.blink::InputType"*)** %116, align 8
  %118 = call %"class.WTF::StringImpl"* %117(%"class.blink::InputType"* %0) #10
  %119 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %120 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %119, i64 0, i32 0, i32 0
  %121 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %120, align 8
  %122 = icmp eq %"class.WTF::StringImpl"* %121, null
  br i1 %122, label %836, label %123

123:                                              ; preds = %113
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load atomic i32, i32* %124 monotonic, align 4
  %126 = and i32 %125, 2
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %836

128:                                              ; preds = %123
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 0
  %130 = load i32, i32* %129, align 4
  %131 = zext i32 %130 to i33
  %132 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %131, i33 1) #10
  %133 = extractvalue { i33, i1 } %132, 1
  %134 = extractvalue { i33, i1 } %132, 0
  %135 = icmp slt i33 %134, 0
  %136 = or i1 %133, %135
  br i1 %136, label %137, label %138, !prof !2

137:                                              ; preds = %128
  call void @llvm.trap() #10
  unreachable

138:                                              ; preds = %128
  %139 = trunc i33 %134 to i32
  store i32 %139, i32* %129, align 4
  br label %836

140:                                              ; preds = %107
  %141 = load i1 (%"class.blink::InputType"*, %"class.WTF::String"*)**, i1 (%"class.blink::InputType"*, %"class.WTF::String"*)*** %75, align 8
  %142 = getelementptr inbounds i1 (%"class.blink::InputType"*, %"class.WTF::String"*)*, i1 (%"class.blink::InputType"*, %"class.WTF::String"*)** %141, i64 27
  %143 = load i1 (%"class.blink::InputType"*, %"class.WTF::String"*)*, i1 (%"class.blink::InputType"*, %"class.WTF::String"*)** %142, align 8
  %144 = call zeroext i1 %143(%"class.blink::InputType"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %4) #10
  %145 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %35, align 8
  br i1 %144, label %146, label %229

146:                                              ; preds = %140
  %147 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %145, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %148 = call dereferenceable(152) %"class.blink::Locale"* @_ZNK5blink7Element9GetLocaleEv(%"class.blink::Element"* %147) #10
  %149 = call %"class.WTF::StringImpl"* @_ZN5blink6Locale11QueryStringEi(%"class.blink::Locale"* %148, i32 25048) #10
  %150 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %35, align 8
  %151 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kTitleAttrE, align 8
  %152 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %150, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %153 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %152, align 8
  %154 = icmp eq %"class.blink::ElementData"* %153, null
  br i1 %154, label %205, label %155

155:                                              ; preds = %146
  %156 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %153, i64 0, i32 0, i32 0, i32 0
  %157 = load i32, i32* %156, align 4
  %158 = and i32 %157, 1
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %167, label %160

160:                                              ; preds = %155
  %161 = bitcast %"class.blink::ElementData"* %153 to %"class.blink::UniqueElementData"*
  %162 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %153, i64 1, i32 1
  %163 = bitcast %"class.blink::Member.18"* %162 to %"class.blink::Attribute"**
  %164 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %163, align 8
  %165 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %161, i64 0, i32 2, i32 0, i32 0, i32 2
  %166 = load i32, i32* %165, align 4
  br label %172

167:                                              ; preds = %155
  %168 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %153, i64 1
  %169 = bitcast %"class.blink::ElementData"* %168 to %"class.blink::Attribute"*
  %170 = lshr i32 %157, 1
  %171 = and i32 %170, 268435455
  br label %172

172:                                              ; preds = %167, %160
  %173 = phi %"class.blink::Attribute"* [ %169, %167 ], [ %164, %160 ]
  %174 = phi i32 [ %171, %167 ], [ %166, %160 ]
  %175 = zext i32 %174 to i64
  %176 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %173, i64 %175
  %177 = icmp eq i32 %174, 0
  br i1 %177, label %205, label %178

178:                                              ; preds = %172
  %179 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %151, i64 0, i32 0, i32 0
  %180 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %179, align 8
  %181 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %180, i64 0, i32 3, i32 0, i32 0, i32 0
  %182 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %180, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %183

183:                                              ; preds = %198, %178
  %184 = phi %"class.blink::Attribute"* [ %173, %178 ], [ %199, %198 ]
  %185 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %184, i64 0, i32 0, i32 0, i32 0
  %186 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %185, align 8
  %187 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %186, %180
  br i1 %187, label %201, label %188

188:                                              ; preds = %183
  %189 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %186, i64 0, i32 3, i32 0, i32 0, i32 0
  %190 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %189, align 8
  %191 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %181, align 8
  %192 = icmp eq %"class.WTF::StringImpl"* %190, %191
  br i1 %192, label %193, label %198

193:                                              ; preds = %188
  %194 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %186, i64 0, i32 4, i32 0, i32 0, i32 0
  %195 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %194, align 8
  %196 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %182, align 8
  %197 = icmp eq %"class.WTF::StringImpl"* %195, %196
  br i1 %197, label %201, label %198

198:                                              ; preds = %193, %188
  %199 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %184, i64 1
  %200 = icmp eq %"class.blink::Attribute"* %199, %176
  br i1 %200, label %205, label %183

201:                                              ; preds = %193, %183
  %202 = icmp eq %"class.blink::Attribute"* %184, null
  br i1 %202, label %205, label %203

203:                                              ; preds = %201
  %204 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %184, i64 0, i32 1
  br label %207

205:                                              ; preds = %198, %201, %172, %146
  %206 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %207

207:                                              ; preds = %203, %205
  %208 = phi %"class.WTF::AtomicString"* [ %206, %205 ], [ %204, %203 ]
  %209 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %208, i64 0, i32 0, i32 0, i32 0
  %210 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %209, align 8
  %211 = icmp eq %"class.WTF::StringImpl"* %210, null
  br i1 %211, label %836, label %212

212:                                              ; preds = %207
  %213 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %210, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %214 = load atomic i32, i32* %213 monotonic, align 4
  %215 = and i32 %214, 2
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %217, label %836

217:                                              ; preds = %212
  %218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %210, i64 0, i32 0
  %219 = load i32, i32* %218, align 4
  %220 = zext i32 %219 to i33
  %221 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %220, i33 1) #10
  %222 = extractvalue { i33, i1 } %221, 1
  %223 = extractvalue { i33, i1 } %221, 0
  %224 = icmp slt i33 %223, 0
  %225 = or i1 %222, %224
  br i1 %225, label %226, label %227, !prof !2

226:                                              ; preds = %217
  call void @llvm.trap() #10
  unreachable

227:                                              ; preds = %217
  %228 = trunc i33 %223 to i32
  store i32 %228, i32* %218, align 4
  br label %836

229:                                              ; preds = %140
  %230 = call zeroext i1 @_ZNK5blink16HTMLInputElement7TooLongEv(%"class.blink::HTMLInputElement"* %145) #10
  %231 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %35, align 8
  br i1 %230, label %232, label %267

232:                                              ; preds = %229
  %233 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %231, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %234 = call dereferenceable(152) %"class.blink::Locale"* @_ZNK5blink7Element9GetLocaleEv(%"class.blink::Element"* %233) #10
  %235 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %236 = icmp eq %"class.WTF::StringImpl"* %235, null
  br i1 %236, label %240, label %237

237:                                              ; preds = %232
  %238 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %235, i64 0, i32 1
  %239 = load i32, i32* %238, align 4
  br label %240

240:                                              ; preds = %232, %237
  %241 = phi i32 [ %239, %237 ], [ 0, %232 ]
  %242 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %35, align 8
  %243 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %242, i64 0, i32 0
  %244 = call i32 @_ZNK5blink18TextControlElement9maxLengthEv(%"class.blink::TextControlElement"* %243) #10
  %245 = call %"class.WTF::StringImpl"* @_ZN5blink6Locale28ValidationMessageTooLongTextEji(%"class.blink::Locale"* %234, i32 %241, i32 %244) #10
  %246 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %247 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %246, i64 0, i32 0, i32 0
  %248 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %247, align 8
  %249 = icmp eq %"class.WTF::StringImpl"* %248, null
  br i1 %249, label %836, label %250

250:                                              ; preds = %240
  %251 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %248, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %252 = load atomic i32, i32* %251 monotonic, align 4
  %253 = and i32 %252, 2
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %255, label %836

255:                                              ; preds = %250
  %256 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %248, i64 0, i32 0
  %257 = load i32, i32* %256, align 4
  %258 = zext i32 %257 to i33
  %259 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %258, i33 1) #10
  %260 = extractvalue { i33, i1 } %259, 1
  %261 = extractvalue { i33, i1 } %259, 0
  %262 = icmp slt i33 %261, 0
  %263 = or i1 %260, %262
  br i1 %263, label %264, label %265, !prof !2

264:                                              ; preds = %255
  call void @llvm.trap() #10
  unreachable

265:                                              ; preds = %255
  %266 = trunc i33 %261 to i32
  store i32 %266, i32* %256, align 4
  br label %836

267:                                              ; preds = %229
  %268 = call zeroext i1 @_ZNK5blink16HTMLInputElement8TooShortEv(%"class.blink::HTMLInputElement"* %231) #10
  br i1 %268, label %269, label %305

269:                                              ; preds = %267
  %270 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %35, align 8
  %271 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %270, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %272 = call dereferenceable(152) %"class.blink::Locale"* @_ZNK5blink7Element9GetLocaleEv(%"class.blink::Element"* %271) #10
  %273 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %274 = icmp eq %"class.WTF::StringImpl"* %273, null
  br i1 %274, label %278, label %275

275:                                              ; preds = %269
  %276 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %273, i64 0, i32 1
  %277 = load i32, i32* %276, align 4
  br label %278

278:                                              ; preds = %269, %275
  %279 = phi i32 [ %277, %275 ], [ 0, %269 ]
  %280 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %35, align 8
  %281 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %280, i64 0, i32 0
  %282 = call i32 @_ZNK5blink18TextControlElement9minLengthEv(%"class.blink::TextControlElement"* %281) #10
  %283 = call %"class.WTF::StringImpl"* @_ZN5blink6Locale29ValidationMessageTooShortTextEji(%"class.blink::Locale"* %272, i32 %279, i32 %282) #10
  %284 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %285 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %284, i64 0, i32 0, i32 0
  %286 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %285, align 8
  %287 = icmp eq %"class.WTF::StringImpl"* %286, null
  br i1 %287, label %836, label %288

288:                                              ; preds = %278
  %289 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %286, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %290 = load atomic i32, i32* %289 monotonic, align 4
  %291 = and i32 %290, 2
  %292 = icmp eq i32 %291, 0
  br i1 %292, label %293, label %836

293:                                              ; preds = %288
  %294 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %286, i64 0, i32 0
  %295 = load i32, i32* %294, align 4
  %296 = zext i32 %295 to i33
  %297 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %296, i33 1) #10
  %298 = extractvalue { i33, i1 } %297, 1
  %299 = extractvalue { i33, i1 } %297, 0
  %300 = icmp slt i33 %299, 0
  %301 = or i1 %298, %300
  br i1 %301, label %302, label %303, !prof !2

302:                                              ; preds = %293
  call void @llvm.trap() #10
  unreachable

303:                                              ; preds = %293
  %304 = trunc i33 %299 to i32
  store i32 %304, i32* %294, align 4
  br label %836

305:                                              ; preds = %267
  %306 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %108, align 8
  %307 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %306, i64 67
  %308 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %307, align 8
  %309 = call zeroext i1 %308(%"class.blink::InputType"* %0) #10
  br i1 %309, label %352, label %310

310:                                              ; preds = %305
  %311 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %312 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %311, i64 0, i32 0, i32 0
  %313 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %312, align 8
  %314 = icmp eq %"class.WTF::StringImpl"* %313, null
  br i1 %314, label %836, label %315

315:                                              ; preds = %310
  %316 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %313, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %317 = load atomic i32, i32* %316 monotonic, align 4
  %318 = and i32 %317, 2
  %319 = icmp eq i32 %318, 0
  br i1 %319, label %320, label %334

320:                                              ; preds = %315
  %321 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %313, i64 0, i32 0
  %322 = load i32, i32* %321, align 4
  %323 = zext i32 %322 to i33
  %324 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %323, i33 1) #10
  %325 = extractvalue { i33, i1 } %324, 1
  %326 = extractvalue { i33, i1 } %324, 0
  %327 = icmp slt i33 %326, 0
  %328 = or i1 %325, %327
  br i1 %328, label %329, label %330, !prof !2

329:                                              ; preds = %320
  call void @llvm.trap() #10
  unreachable

330:                                              ; preds = %320
  %331 = trunc i33 %326 to i32
  store i32 %331, i32* %321, align 4
  %332 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %312, align 8
  %333 = icmp eq %"class.WTF::StringImpl"* %332, null
  br i1 %333, label %836, label %334

334:                                              ; preds = %315, %330
  %335 = phi %"class.WTF::StringImpl"* [ %332, %330 ], [ %313, %315 ]
  %336 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %335, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %337 = load atomic i32, i32* %336 monotonic, align 4
  %338 = and i32 %337, 2
  %339 = icmp eq i32 %338, 0
  br i1 %339, label %340, label %836

340:                                              ; preds = %334
  %341 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %335, i64 0, i32 0
  %342 = load i32, i32* %341, align 4
  %343 = zext i32 %342 to i33
  %344 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %343, i33 1) #10
  %345 = extractvalue { i33, i1 } %344, 1
  %346 = extractvalue { i33, i1 } %344, 0
  %347 = icmp slt i33 %346, 0
  %348 = or i1 %345, %347
  br i1 %348, label %349, label %350, !prof !2

349:                                              ; preds = %340
  call void @llvm.trap() #10
  unreachable

350:                                              ; preds = %340
  %351 = trunc i33 %346 to i32
  store i32 %351, i32* %341, align 4
  br label %836

352:                                              ; preds = %305
  %353 = bitcast %"class.blink::Decimal"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %353) #10
  %354 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %5, i64 0, i32 0, i32 3
  %355 = bitcast %"class.blink::Decimal"* %3 to i8*
  %356 = bitcast %"class.blink::Decimal"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %356, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %355) #10, !noalias !19
  call void @_ZN5blink7Decimal3NanEv(%"class.blink::Decimal"* nonnull sret %3) #10, !noalias !19
  %357 = bitcast %"class.blink::InputType"* %0 to void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)***
  %358 = load void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)**, void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)*** %357, align 8, !noalias !19
  %359 = getelementptr inbounds void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)*, void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)** %358, i64 79
  %360 = load void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)*, void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)** %359, align 8, !noalias !19
  call void %360(%"class.blink::Decimal"* nonnull sret %5, %"class.blink::InputType"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::Decimal"* nonnull dereferenceable(24) %3) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %355) #10, !noalias !19
  %361 = load i32, i32* %354, align 4
  %362 = and i32 %361, -3
  %363 = icmp eq i32 %362, 0
  br i1 %363, label %364, label %406

364:                                              ; preds = %352
  %365 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %366 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %365, i64 0, i32 0, i32 0
  %367 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %366, align 8
  %368 = icmp eq %"class.WTF::StringImpl"* %367, null
  br i1 %368, label %833, label %369

369:                                              ; preds = %364
  %370 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %367, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %371 = load atomic i32, i32* %370 monotonic, align 4
  %372 = and i32 %371, 2
  %373 = icmp eq i32 %372, 0
  br i1 %373, label %374, label %388

374:                                              ; preds = %369
  %375 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %367, i64 0, i32 0
  %376 = load i32, i32* %375, align 4
  %377 = zext i32 %376 to i33
  %378 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %377, i33 1) #10
  %379 = extractvalue { i33, i1 } %378, 1
  %380 = extractvalue { i33, i1 } %378, 0
  %381 = icmp slt i33 %380, 0
  %382 = or i1 %379, %381
  br i1 %382, label %383, label %384, !prof !2

383:                                              ; preds = %374
  call void @llvm.trap() #10
  unreachable

384:                                              ; preds = %374
  %385 = trunc i33 %380 to i32
  store i32 %385, i32* %375, align 4
  %386 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %366, align 8
  %387 = icmp eq %"class.WTF::StringImpl"* %386, null
  br i1 %387, label %833, label %388

388:                                              ; preds = %369, %384
  %389 = phi %"class.WTF::StringImpl"* [ %386, %384 ], [ %367, %369 ]
  %390 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %389, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %391 = load atomic i32, i32* %390 monotonic, align 4
  %392 = and i32 %391, 2
  %393 = icmp eq i32 %392, 0
  br i1 %393, label %394, label %833

394:                                              ; preds = %388
  %395 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %389, i64 0, i32 0
  %396 = load i32, i32* %395, align 4
  %397 = zext i32 %396 to i33
  %398 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %397, i33 1) #10
  %399 = extractvalue { i33, i1 } %398, 1
  %400 = extractvalue { i33, i1 } %398, 0
  %401 = icmp slt i33 %400, 0
  %402 = or i1 %399, %401
  br i1 %402, label %403, label %404, !prof !2

403:                                              ; preds = %394
  call void @llvm.trap() #10
  unreachable

404:                                              ; preds = %394
  %405 = trunc i33 %400 to i32
  store i32 %405, i32* %395, align 4
  br label %833

406:                                              ; preds = %352
  %407 = bitcast %"class.blink::StepRange"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %407) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %407, i8 -86, i64 120, i1 false)
  %408 = bitcast %"class.blink::InputType"* %0 to void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)***
  %409 = load void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)**, void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)*** %408, align 8
  %410 = getelementptr inbounds void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)*, void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)** %409, i64 31
  %411 = load void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)*, void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)** %410, align 8
  call void %411(%"class.blink::StepRange"* nonnull sret %6, %"class.blink::InputType"* %0, i32 0) #10
  %412 = bitcast %"class.blink::Decimal"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %412) #10
  %413 = getelementptr inbounds %"class.blink::StepRange", %"class.blink::StepRange"* %6, i64 0, i32 1
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %7, %"class.blink::Decimal"* dereferenceable(24) %413) #10
  %414 = bitcast %"class.blink::Decimal"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %414) #10
  %415 = getelementptr inbounds %"class.blink::StepRange", %"class.blink::StepRange"* %6, i64 0, i32 0
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %8, %"class.blink::Decimal"* nonnull dereferenceable(24) %415) #10
  %416 = call zeroext i1 @_ZNK5blink7DecimalgtERKS0_(%"class.blink::Decimal"* nonnull %7, %"class.blink::Decimal"* nonnull dereferenceable(24) %8) #10
  br i1 %416, label %417, label %449

417:                                              ; preds = %406
  %418 = call zeroext i1 @_ZNK5blink9StepRange16HasReversedRangeEv(%"class.blink::StepRange"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %414) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %412) #10
  br i1 %418, label %450, label %419

419:                                              ; preds = %417
  %420 = bitcast %"class.blink::Decimal"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %420) #10
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %9, %"class.blink::Decimal"* dereferenceable(24) %413) #10
  %421 = bitcast %"class.blink::Decimal"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %421) #10
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %10, %"class.blink::Decimal"* nonnull dereferenceable(24) %415) #10
  %422 = bitcast %"class.blink::InputType"* %0 to %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*, %"class.blink::Decimal"*)***
  %423 = load %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*, %"class.blink::Decimal"*)**, %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*, %"class.blink::Decimal"*)*** %422, align 8
  %424 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*, %"class.blink::Decimal"*)*, %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*, %"class.blink::Decimal"*)** %423, i64 37
  %425 = load %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*, %"class.blink::Decimal"*)*, %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*, %"class.blink::Decimal"*)** %424, align 8
  %426 = call %"class.WTF::StringImpl"* %425(%"class.blink::InputType"* %0, %"class.blink::Decimal"* nonnull dereferenceable(24) %9, %"class.blink::Decimal"* nonnull dereferenceable(24) %10) #10
  %427 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %428 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %427, i64 0, i32 0, i32 0
  %429 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %428, align 8
  %430 = icmp eq %"class.WTF::StringImpl"* %429, null
  br i1 %430, label %448, label %431

431:                                              ; preds = %419
  %432 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %429, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %433 = load atomic i32, i32* %432 monotonic, align 4
  %434 = and i32 %433, 2
  %435 = icmp eq i32 %434, 0
  br i1 %435, label %436, label %448

436:                                              ; preds = %431
  %437 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %429, i64 0, i32 0
  %438 = load i32, i32* %437, align 4
  %439 = zext i32 %438 to i33
  %440 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %439, i33 1) #10
  %441 = extractvalue { i33, i1 } %440, 1
  %442 = extractvalue { i33, i1 } %440, 0
  %443 = icmp slt i33 %442, 0
  %444 = or i1 %441, %443
  br i1 %444, label %445, label %446, !prof !2

445:                                              ; preds = %436
  call void @llvm.trap() #10
  unreachable

446:                                              ; preds = %436
  %447 = trunc i33 %442 to i32
  store i32 %447, i32* %437, align 4
  br label %448

448:                                              ; preds = %446, %431, %419
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %421) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %420) #10
  br label %830

449:                                              ; preds = %406
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %414) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %412) #10
  br label %450

450:                                              ; preds = %417, %449
  %451 = call zeroext i1 @_ZNK5blink9StepRange16HasReversedRangeEv(%"class.blink::StepRange"* nonnull %6) #10
  %452 = bitcast %"class.blink::Decimal"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %452) #10
  %453 = bitcast %"class.blink::Decimal"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %453) #10
  br i1 %451, label %454, label %488

454:                                              ; preds = %450
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %11, %"class.blink::Decimal"* dereferenceable(24) %413) #10
  %455 = call zeroext i1 @_ZNK5blink7DecimalltERKS0_(%"class.blink::Decimal"* nonnull %5, %"class.blink::Decimal"* nonnull dereferenceable(24) %11) #10
  br i1 %455, label %456, label %488

456:                                              ; preds = %454
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %12, %"class.blink::Decimal"* nonnull dereferenceable(24) %415) #10
  %457 = call zeroext i1 @_ZNK5blink7DecimalgtERKS0_(%"class.blink::Decimal"* nonnull %5, %"class.blink::Decimal"* nonnull dereferenceable(24) %12) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %453) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %452) #10
  br i1 %457, label %458, label %489

458:                                              ; preds = %456
  %459 = bitcast %"class.blink::Decimal"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %459) #10
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %13, %"class.blink::Decimal"* dereferenceable(24) %413) #10
  %460 = bitcast %"class.blink::Decimal"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %460) #10
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %14, %"class.blink::Decimal"* nonnull dereferenceable(24) %415) #10
  %461 = bitcast %"class.blink::InputType"* %0 to %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*, %"class.blink::Decimal"*)***
  %462 = load %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*, %"class.blink::Decimal"*)**, %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*, %"class.blink::Decimal"*)*** %461, align 8
  %463 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*, %"class.blink::Decimal"*)*, %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*, %"class.blink::Decimal"*)** %462, i64 36
  %464 = load %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*, %"class.blink::Decimal"*)*, %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*, %"class.blink::Decimal"*)** %463, align 8
  %465 = call %"class.WTF::StringImpl"* %464(%"class.blink::InputType"* %0, %"class.blink::Decimal"* nonnull dereferenceable(24) %13, %"class.blink::Decimal"* nonnull dereferenceable(24) %14) #10
  %466 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %467 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %466, i64 0, i32 0, i32 0
  %468 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %467, align 8
  %469 = icmp eq %"class.WTF::StringImpl"* %468, null
  br i1 %469, label %487, label %470

470:                                              ; preds = %458
  %471 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %468, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %472 = load atomic i32, i32* %471 monotonic, align 4
  %473 = and i32 %472, 2
  %474 = icmp eq i32 %473, 0
  br i1 %474, label %475, label %487

475:                                              ; preds = %470
  %476 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %468, i64 0, i32 0
  %477 = load i32, i32* %476, align 4
  %478 = zext i32 %477 to i33
  %479 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %478, i33 1) #10
  %480 = extractvalue { i33, i1 } %479, 1
  %481 = extractvalue { i33, i1 } %479, 0
  %482 = icmp slt i33 %481, 0
  %483 = or i1 %480, %482
  br i1 %483, label %484, label %485, !prof !2

484:                                              ; preds = %475
  call void @llvm.trap() #10
  unreachable

485:                                              ; preds = %475
  %486 = trunc i33 %481 to i32
  store i32 %486, i32* %476, align 4
  br label %487

487:                                              ; preds = %485, %470, %458
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %460) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %459) #10
  br label %830

488:                                              ; preds = %450, %454
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %453) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %452) #10
  br label %489

489:                                              ; preds = %488, %456
  %490 = bitcast %"class.blink::Decimal"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %490) #10
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %15, %"class.blink::Decimal"* dereferenceable(24) %413) #10
  %491 = call zeroext i1 @_ZNK5blink7DecimalneERKS0_(%"class.blink::Decimal"* nonnull %5, %"class.blink::Decimal"* nonnull dereferenceable(24) %15) #10
  %492 = bitcast %"class.blink::Decimal"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %492) #10
  %493 = bitcast %"class.blink::Decimal"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %493) #10
  br i1 %491, label %494, label %525

494:                                              ; preds = %489
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %16, %"class.blink::Decimal"* dereferenceable(24) %413) #10
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %17, %"class.blink::Decimal"* nonnull dereferenceable(24) %415) #10
  %495 = call zeroext i1 @_ZNK5blink7DecimaleqERKS0_(%"class.blink::Decimal"* nonnull %16, %"class.blink::Decimal"* nonnull dereferenceable(24) %17) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %493) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %492) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %490) #10
  br i1 %495, label %496, label %526

496:                                              ; preds = %494
  %497 = bitcast %"class.blink::Decimal"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %497) #10
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %18, %"class.blink::Decimal"* dereferenceable(24) %413) #10
  %498 = bitcast %"class.blink::InputType"* %0 to %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*)***
  %499 = load %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*)**, %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*)*** %498, align 8
  %500 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*)*, %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*)** %499, i64 33
  %501 = load %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*)*, %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*)** %500, align 8
  %502 = call %"class.WTF::StringImpl"* %501(%"class.blink::InputType"* %0, %"class.blink::Decimal"* nonnull dereferenceable(24) %18) #10
  %503 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %504 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %503, i64 0, i32 0, i32 0
  %505 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %504, align 8
  %506 = icmp eq %"class.WTF::StringImpl"* %505, null
  br i1 %506, label %524, label %507

507:                                              ; preds = %496
  %508 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %505, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %509 = load atomic i32, i32* %508 monotonic, align 4
  %510 = and i32 %509, 2
  %511 = icmp eq i32 %510, 0
  br i1 %511, label %512, label %524

512:                                              ; preds = %507
  %513 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %505, i64 0, i32 0
  %514 = load i32, i32* %513, align 4
  %515 = zext i32 %514 to i33
  %516 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %515, i33 1) #10
  %517 = extractvalue { i33, i1 } %516, 1
  %518 = extractvalue { i33, i1 } %516, 0
  %519 = icmp slt i33 %518, 0
  %520 = or i1 %517, %519
  br i1 %520, label %521, label %522, !prof !2

521:                                              ; preds = %512
  call void @llvm.trap() #10
  unreachable

522:                                              ; preds = %512
  %523 = trunc i33 %518 to i32
  store i32 %523, i32* %513, align 4
  br label %524

524:                                              ; preds = %522, %507, %496
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %497) #10
  br label %830

525:                                              ; preds = %489
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %493) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %492) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %490) #10
  br label %526

526:                                              ; preds = %525, %494
  %527 = bitcast %"class.blink::Decimal"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %527) #10
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %19, %"class.blink::Decimal"* dereferenceable(24) %413) #10
  %528 = call zeroext i1 @_ZNK5blink7DecimalltERKS0_(%"class.blink::Decimal"* nonnull %5, %"class.blink::Decimal"* nonnull dereferenceable(24) %19) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %527) #10
  br i1 %528, label %529, label %558

529:                                              ; preds = %526
  %530 = bitcast %"class.blink::Decimal"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %530) #10
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %20, %"class.blink::Decimal"* dereferenceable(24) %413) #10
  %531 = bitcast %"class.blink::InputType"* %0 to %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*)***
  %532 = load %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*)**, %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*)*** %531, align 8
  %533 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*)*, %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*)** %532, i64 35
  %534 = load %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*)*, %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*)** %533, align 8
  %535 = call %"class.WTF::StringImpl"* %534(%"class.blink::InputType"* %0, %"class.blink::Decimal"* nonnull dereferenceable(24) %20) #10
  %536 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %537 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %536, i64 0, i32 0, i32 0
  %538 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %537, align 8
  %539 = icmp eq %"class.WTF::StringImpl"* %538, null
  br i1 %539, label %557, label %540

540:                                              ; preds = %529
  %541 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %538, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %542 = load atomic i32, i32* %541 monotonic, align 4
  %543 = and i32 %542, 2
  %544 = icmp eq i32 %543, 0
  br i1 %544, label %545, label %557

545:                                              ; preds = %540
  %546 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %538, i64 0, i32 0
  %547 = load i32, i32* %546, align 4
  %548 = zext i32 %547 to i33
  %549 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %548, i33 1) #10
  %550 = extractvalue { i33, i1 } %549, 1
  %551 = extractvalue { i33, i1 } %549, 0
  %552 = icmp slt i33 %551, 0
  %553 = or i1 %550, %552
  br i1 %553, label %554, label %555, !prof !2

554:                                              ; preds = %545
  call void @llvm.trap() #10
  unreachable

555:                                              ; preds = %545
  %556 = trunc i33 %551 to i32
  store i32 %556, i32* %546, align 4
  br label %557

557:                                              ; preds = %555, %540, %529
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %530) #10
  br label %830

558:                                              ; preds = %526
  %559 = bitcast %"class.blink::Decimal"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %559) #10
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %21, %"class.blink::Decimal"* nonnull dereferenceable(24) %415) #10
  %560 = call zeroext i1 @_ZNK5blink7DecimalgtERKS0_(%"class.blink::Decimal"* nonnull %5, %"class.blink::Decimal"* nonnull dereferenceable(24) %21) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %559) #10
  br i1 %560, label %561, label %590

561:                                              ; preds = %558
  %562 = bitcast %"class.blink::Decimal"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %562) #10
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %22, %"class.blink::Decimal"* nonnull dereferenceable(24) %415) #10
  %563 = bitcast %"class.blink::InputType"* %0 to %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*)***
  %564 = load %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*)**, %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*)*** %563, align 8
  %565 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*)*, %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*)** %564, i64 34
  %566 = load %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*)*, %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*)** %565, align 8
  %567 = call %"class.WTF::StringImpl"* %566(%"class.blink::InputType"* %0, %"class.blink::Decimal"* nonnull dereferenceable(24) %22) #10
  %568 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %569 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %568, i64 0, i32 0, i32 0
  %570 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %569, align 8
  %571 = icmp eq %"class.WTF::StringImpl"* %570, null
  br i1 %571, label %589, label %572

572:                                              ; preds = %561
  %573 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %570, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %574 = load atomic i32, i32* %573 monotonic, align 4
  %575 = and i32 %574, 2
  %576 = icmp eq i32 %575, 0
  br i1 %576, label %577, label %589

577:                                              ; preds = %572
  %578 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %570, i64 0, i32 0
  %579 = load i32, i32* %578, align 4
  %580 = zext i32 %579 to i33
  %581 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %580, i33 1) #10
  %582 = extractvalue { i33, i1 } %581, 1
  %583 = extractvalue { i33, i1 } %581, 0
  %584 = icmp slt i33 %583, 0
  %585 = or i1 %582, %584
  br i1 %585, label %586, label %587, !prof !2

586:                                              ; preds = %577
  call void @llvm.trap() #10
  unreachable

587:                                              ; preds = %577
  %588 = trunc i33 %583 to i32
  store i32 %588, i32* %578, align 4
  br label %589

589:                                              ; preds = %587, %572, %561
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %562) #10
  br label %830

590:                                              ; preds = %558
  %591 = call zeroext i1 @_ZNK5blink9StepRange12StepMismatchERKNS_7DecimalE(%"class.blink::StepRange"* nonnull %6, %"class.blink::Decimal"* nonnull dereferenceable(24) %5) #10
  br i1 %591, label %592, label %788

592:                                              ; preds = %590
  %593 = bitcast %"class.blink::Decimal"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %593) #10
  %594 = bitcast %"class.blink::Decimal"* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %594, i8 -86, i64 24, i1 false)
  call void @_ZNK5blink9StepRange10ClampValueERKNS_7DecimalE(%"class.blink::Decimal"* nonnull sret %23, %"class.blink::StepRange"* nonnull %6, %"class.blink::Decimal"* nonnull dereferenceable(24) %5) #10
  %595 = bitcast %"class.WTF::String"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %595) #10
  %596 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 0, i32 0, i32 0
  %597 = bitcast %"class.WTF::String"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %597) #10
  %598 = bitcast %"class.blink::InputType"* %0 to %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*)***
  %599 = load %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*)**, %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*)*** %598, align 8
  %600 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*)*, %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*)** %599, i64 80
  %601 = load %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*)*, %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*)** %600, align 8
  %602 = call %"class.WTF::StringImpl"* %601(%"class.blink::InputType"* %0, %"class.blink::Decimal"* nonnull dereferenceable(24) %23) #10
  %603 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %25, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %602, %"class.WTF::StringImpl"** %603, align 8
  %604 = bitcast %"class.blink::InputType"* %0 to %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)***
  %605 = load %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)**, %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)*** %604, align 8
  %606 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)** %605, i64 41
  %607 = load %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)** %606, align 8
  %608 = call %"class.WTF::StringImpl"* %607(%"class.blink::InputType"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %25) #10
  store %"class.WTF::StringImpl"* %608, %"class.WTF::StringImpl"** %596, align 8
  %609 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %603, align 8
  %610 = icmp eq %"class.WTF::StringImpl"* %609, null
  br i1 %610, label %624, label %611

611:                                              ; preds = %592
  %612 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %609, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %613 = load atomic i32, i32* %612 monotonic, align 4
  %614 = and i32 %613, 2
  %615 = icmp eq i32 %614, 0
  %616 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %609, i64 0, i32 0
  %617 = load i32, i32* %616, align 4
  br i1 %615, label %618, label %620

618:                                              ; preds = %611
  %619 = add i32 %617, -1
  store i32 %619, i32* %616, align 4
  br label %620

620:                                              ; preds = %618, %611
  %621 = phi i32 [ %619, %618 ], [ %617, %611 ]
  %622 = icmp eq i32 %621, 0
  br i1 %622, label %623, label %624

623:                                              ; preds = %620
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %609) #10
  br label %624

624:                                              ; preds = %592, %620, %623
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %597) #10
  %625 = bitcast %"class.blink::Decimal"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %625) #10
  %626 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %26, i64 0, i32 0, i32 3
  %627 = bitcast %"class.blink::Decimal"* %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %627, i8 -86, i64 24, i1 false)
  %628 = call zeroext i1 @_ZNK5blink7DecimalltERKS0_(%"class.blink::Decimal"* nonnull %23, %"class.blink::Decimal"* nonnull dereferenceable(24) %5) #10
  %629 = bitcast %"class.blink::Decimal"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %629) #10
  %630 = bitcast %"class.blink::Decimal"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %630) #10
  %631 = getelementptr inbounds %"class.blink::StepRange", %"class.blink::StepRange"* %6, i64 0, i32 2
  br i1 %628, label %632, label %633

632:                                              ; preds = %624
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %27, %"class.blink::Decimal"* dereferenceable(24) %631) #10
  call void @_ZNK5blink7DecimalplERKS0_(%"class.blink::Decimal"* nonnull sret %26, %"class.blink::Decimal"* nonnull %23, %"class.blink::Decimal"* nonnull dereferenceable(24) %27) #10
  br label %634

633:                                              ; preds = %624
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %28, %"class.blink::Decimal"* dereferenceable(24) %631) #10
  call void @_ZNK5blink7DecimalmiERKS0_(%"class.blink::Decimal"* nonnull sret %26, %"class.blink::Decimal"* nonnull %23, %"class.blink::Decimal"* nonnull dereferenceable(24) %28) #10
  br label %634

634:                                              ; preds = %633, %632
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %630) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %629) #10
  %635 = load i32, i32* %626, align 4
  %636 = and i32 %635, -3
  %637 = icmp eq i32 %636, 0
  %638 = bitcast %"class.blink::Decimal"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %638) #10
  %639 = bitcast %"class.blink::Decimal"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %639) #10
  br i1 %637, label %644, label %640

640:                                              ; preds = %634
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %29, %"class.blink::Decimal"* dereferenceable(24) %413) #10
  %641 = call zeroext i1 @_ZNK5blink7DecimalltERKS0_(%"class.blink::Decimal"* nonnull %26, %"class.blink::Decimal"* nonnull dereferenceable(24) %29) #10
  br i1 %641, label %644, label %642

642:                                              ; preds = %640
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %30, %"class.blink::Decimal"* nonnull dereferenceable(24) %415) #10
  %643 = call zeroext i1 @_ZNK5blink7DecimalgtERKS0_(%"class.blink::Decimal"* nonnull %26, %"class.blink::Decimal"* nonnull dereferenceable(24) %30) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %639) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %638) #10
  br i1 %643, label %645, label %671

644:                                              ; preds = %634, %640
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %639) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %638) #10
  br label %645

645:                                              ; preds = %644, %642
  %646 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %35, align 8
  %647 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %646, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %648 = call dereferenceable(152) %"class.blink::Locale"* @_ZNK5blink7Element9GetLocaleEv(%"class.blink::Element"* %647) #10
  %649 = call %"class.WTF::StringImpl"* @_ZN5blink6Locale11QueryStringEiRKN3WTF6StringE(%"class.blink::Locale"* %648, i32 25050, %"class.WTF::String"* nonnull dereferenceable(8) %24) #10
  %650 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %651 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %650, i64 0, i32 0, i32 0
  %652 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %651, align 8
  %653 = icmp eq %"class.WTF::StringImpl"* %652, null
  br i1 %653, label %769, label %654

654:                                              ; preds = %645
  %655 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %652, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %656 = load atomic i32, i32* %655 monotonic, align 4
  %657 = and i32 %656, 2
  %658 = icmp eq i32 %657, 0
  br i1 %658, label %659, label %769

659:                                              ; preds = %654
  %660 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %652, i64 0, i32 0
  %661 = load i32, i32* %660, align 4
  %662 = zext i32 %661 to i33
  %663 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %662, i33 1) #10
  %664 = extractvalue { i33, i1 } %663, 1
  %665 = extractvalue { i33, i1 } %663, 0
  %666 = icmp slt i33 %665, 0
  %667 = or i1 %664, %666
  br i1 %667, label %668, label %669, !prof !2

668:                                              ; preds = %659
  call void @llvm.trap() #10
  unreachable

669:                                              ; preds = %659
  %670 = trunc i33 %665 to i32
  store i32 %670, i32* %660, align 4
  br label %769

671:                                              ; preds = %642
  %672 = bitcast %"class.WTF::String"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %672) #10
  %673 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %31, i64 0, i32 0, i32 0
  %674 = bitcast %"class.WTF::String"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %674) #10
  %675 = load %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*)**, %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*)*** %598, align 8
  %676 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*)*, %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*)** %675, i64 80
  %677 = load %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*)*, %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*)** %676, align 8
  %678 = call %"class.WTF::StringImpl"* %677(%"class.blink::InputType"* %0, %"class.blink::Decimal"* nonnull dereferenceable(24) %26) #10
  %679 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %32, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %678, %"class.WTF::StringImpl"** %679, align 8
  %680 = load %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)**, %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)*** %604, align 8
  %681 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)** %680, i64 41
  %682 = load %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)** %681, align 8
  %683 = call %"class.WTF::StringImpl"* %682(%"class.blink::InputType"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %32) #10
  store %"class.WTF::StringImpl"* %683, %"class.WTF::StringImpl"** %673, align 8
  %684 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %679, align 8
  %685 = icmp eq %"class.WTF::StringImpl"* %684, null
  br i1 %685, label %699, label %686

686:                                              ; preds = %671
  %687 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %684, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %688 = load atomic i32, i32* %687 monotonic, align 4
  %689 = and i32 %688, 2
  %690 = icmp eq i32 %689, 0
  %691 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %684, i64 0, i32 0
  %692 = load i32, i32* %691, align 4
  br i1 %690, label %693, label %695

693:                                              ; preds = %686
  %694 = add i32 %692, -1
  store i32 %694, i32* %691, align 4
  br label %695

695:                                              ; preds = %693, %686
  %696 = phi i32 [ %694, %693 ], [ %692, %686 ]
  %697 = icmp eq i32 %696, 0
  br i1 %697, label %698, label %699

698:                                              ; preds = %695
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %684) #10
  br label %699

699:                                              ; preds = %671, %695, %698
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %674) #10
  %700 = call zeroext i1 @_ZNK5blink7DecimalltERKS0_(%"class.blink::Decimal"* nonnull %23, %"class.blink::Decimal"* nonnull dereferenceable(24) %26) #10
  %701 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %35, align 8
  %702 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %701, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %703 = call dereferenceable(152) %"class.blink::Locale"* @_ZNK5blink7Element9GetLocaleEv(%"class.blink::Element"* %702) #10
  br i1 %700, label %704, label %727

704:                                              ; preds = %699
  %705 = call %"class.WTF::StringImpl"* @_ZN5blink6Locale11QueryStringEiRKN3WTF6StringES4_(%"class.blink::Locale"* %703, i32 25049, %"class.WTF::String"* nonnull dereferenceable(8) %24, %"class.WTF::String"* nonnull dereferenceable(8) %31) #10
  %706 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %707 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %706, i64 0, i32 0, i32 0
  %708 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %707, align 8
  %709 = icmp eq %"class.WTF::StringImpl"* %708, null
  br i1 %709, label %750, label %710

710:                                              ; preds = %704
  %711 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %708, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %712 = load atomic i32, i32* %711 monotonic, align 4
  %713 = and i32 %712, 2
  %714 = icmp eq i32 %713, 0
  br i1 %714, label %715, label %750

715:                                              ; preds = %710
  %716 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %708, i64 0, i32 0
  %717 = load i32, i32* %716, align 4
  %718 = zext i32 %717 to i33
  %719 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %718, i33 1) #10
  %720 = extractvalue { i33, i1 } %719, 1
  %721 = extractvalue { i33, i1 } %719, 0
  %722 = icmp slt i33 %721, 0
  %723 = or i1 %720, %722
  br i1 %723, label %724, label %725, !prof !2

724:                                              ; preds = %715
  call void @llvm.trap() #10
  unreachable

725:                                              ; preds = %715
  %726 = trunc i33 %721 to i32
  store i32 %726, i32* %716, align 4
  br label %750

727:                                              ; preds = %699
  %728 = call %"class.WTF::StringImpl"* @_ZN5blink6Locale11QueryStringEiRKN3WTF6StringES4_(%"class.blink::Locale"* %703, i32 25049, %"class.WTF::String"* nonnull dereferenceable(8) %31, %"class.WTF::String"* nonnull dereferenceable(8) %24) #10
  %729 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %730 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %729, i64 0, i32 0, i32 0
  %731 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %730, align 8
  %732 = icmp eq %"class.WTF::StringImpl"* %731, null
  br i1 %732, label %750, label %733

733:                                              ; preds = %727
  %734 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %731, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %735 = load atomic i32, i32* %734 monotonic, align 4
  %736 = and i32 %735, 2
  %737 = icmp eq i32 %736, 0
  br i1 %737, label %738, label %750

738:                                              ; preds = %733
  %739 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %731, i64 0, i32 0
  %740 = load i32, i32* %739, align 4
  %741 = zext i32 %740 to i33
  %742 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %741, i33 1) #10
  %743 = extractvalue { i33, i1 } %742, 1
  %744 = extractvalue { i33, i1 } %742, 0
  %745 = icmp slt i33 %744, 0
  %746 = or i1 %743, %745
  br i1 %746, label %747, label %748, !prof !2

747:                                              ; preds = %738
  call void @llvm.trap() #10
  unreachable

748:                                              ; preds = %738
  %749 = trunc i33 %744 to i32
  store i32 %749, i32* %739, align 4
  br label %750

750:                                              ; preds = %727, %733, %748, %704, %710, %725
  %751 = phi %"class.WTF::StringImpl"* [ %705, %725 ], [ %705, %710 ], [ %705, %704 ], [ %728, %748 ], [ %728, %733 ], [ %728, %727 ]
  %752 = phi %"class.WTF::StringImpl"* [ %708, %725 ], [ %708, %710 ], [ null, %704 ], [ %731, %748 ], [ %731, %733 ], [ null, %727 ]
  %753 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %673, align 8
  %754 = icmp eq %"class.WTF::StringImpl"* %753, null
  br i1 %754, label %768, label %755

755:                                              ; preds = %750
  %756 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %753, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %757 = load atomic i32, i32* %756 monotonic, align 4
  %758 = and i32 %757, 2
  %759 = icmp eq i32 %758, 0
  %760 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %753, i64 0, i32 0
  %761 = load i32, i32* %760, align 4
  br i1 %759, label %762, label %764

762:                                              ; preds = %755
  %763 = add i32 %761, -1
  store i32 %763, i32* %760, align 4
  br label %764

764:                                              ; preds = %762, %755
  %765 = phi i32 [ %763, %762 ], [ %761, %755 ]
  %766 = icmp eq i32 %765, 0
  br i1 %766, label %767, label %768

767:                                              ; preds = %764
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %753) #10
  br label %768

768:                                              ; preds = %750, %764, %767
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %672) #10
  br label %769

769:                                              ; preds = %645, %654, %669, %768
  %770 = phi %"class.WTF::StringImpl"* [ %751, %768 ], [ %649, %669 ], [ %649, %654 ], [ %649, %645 ]
  %771 = phi %"class.WTF::StringImpl"* [ %752, %768 ], [ %652, %669 ], [ %652, %654 ], [ null, %645 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %625) #10
  %772 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %596, align 8
  %773 = icmp eq %"class.WTF::StringImpl"* %772, null
  br i1 %773, label %787, label %774

774:                                              ; preds = %769
  %775 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %772, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %776 = load atomic i32, i32* %775 monotonic, align 4
  %777 = and i32 %776, 2
  %778 = icmp eq i32 %777, 0
  %779 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %772, i64 0, i32 0
  %780 = load i32, i32* %779, align 4
  br i1 %778, label %781, label %783

781:                                              ; preds = %774
  %782 = add i32 %780, -1
  store i32 %782, i32* %779, align 4
  br label %783

783:                                              ; preds = %781, %774
  %784 = phi i32 [ %782, %781 ], [ %780, %774 ]
  %785 = icmp eq i32 %784, 0
  br i1 %785, label %786, label %787

786:                                              ; preds = %783
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %772) #10
  br label %787

787:                                              ; preds = %769, %783, %786
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %595) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %593) #10
  br label %830

788:                                              ; preds = %590
  %789 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %790 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %789, i64 0, i32 0, i32 0
  %791 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %790, align 8
  %792 = icmp eq %"class.WTF::StringImpl"* %791, null
  br i1 %792, label %830, label %793

793:                                              ; preds = %788
  %794 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %791, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %795 = load atomic i32, i32* %794 monotonic, align 4
  %796 = and i32 %795, 2
  %797 = icmp eq i32 %796, 0
  br i1 %797, label %798, label %812

798:                                              ; preds = %793
  %799 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %791, i64 0, i32 0
  %800 = load i32, i32* %799, align 4
  %801 = zext i32 %800 to i33
  %802 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %801, i33 1) #10
  %803 = extractvalue { i33, i1 } %802, 1
  %804 = extractvalue { i33, i1 } %802, 0
  %805 = icmp slt i33 %804, 0
  %806 = or i1 %803, %805
  br i1 %806, label %807, label %808, !prof !2

807:                                              ; preds = %798
  call void @llvm.trap() #10
  unreachable

808:                                              ; preds = %798
  %809 = trunc i33 %804 to i32
  store i32 %809, i32* %799, align 4
  %810 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %790, align 8
  %811 = icmp eq %"class.WTF::StringImpl"* %810, null
  br i1 %811, label %830, label %812

812:                                              ; preds = %793, %808
  %813 = phi %"class.WTF::StringImpl"* [ %810, %808 ], [ %791, %793 ]
  %814 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %813, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %815 = load atomic i32, i32* %814 monotonic, align 4
  %816 = and i32 %815, 2
  %817 = icmp eq i32 %816, 0
  br i1 %817, label %818, label %830

818:                                              ; preds = %812
  %819 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %813, i64 0, i32 0
  %820 = load i32, i32* %819, align 4
  %821 = zext i32 %820 to i33
  %822 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %821, i33 1) #10
  %823 = extractvalue { i33, i1 } %822, 1
  %824 = extractvalue { i33, i1 } %822, 0
  %825 = icmp slt i33 %824, 0
  %826 = or i1 %823, %825
  br i1 %826, label %827, label %828, !prof !2

827:                                              ; preds = %818
  call void @llvm.trap() #10
  unreachable

828:                                              ; preds = %818
  %829 = trunc i33 %824 to i32
  store i32 %829, i32* %819, align 4
  br label %830

830:                                              ; preds = %828, %812, %808, %788, %787, %589, %557, %524, %487, %448
  %831 = phi %"class.WTF::StringImpl"* [ %426, %448 ], [ %465, %487 ], [ %502, %524 ], [ %535, %557 ], [ %567, %589 ], [ %770, %787 ], [ null, %788 ], [ %791, %808 ], [ %791, %812 ], [ %791, %828 ]
  %832 = phi %"class.WTF::StringImpl"* [ %429, %448 ], [ %468, %487 ], [ %505, %524 ], [ %538, %557 ], [ %570, %589 ], [ %771, %787 ], [ null, %788 ], [ null, %808 ], [ %813, %812 ], [ %813, %828 ]
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %407) #10
  br label %833

833:                                              ; preds = %404, %388, %384, %364, %830
  %834 = phi %"class.WTF::StringImpl"* [ %831, %830 ], [ null, %364 ], [ %367, %384 ], [ %367, %388 ], [ %367, %404 ]
  %835 = phi %"class.WTF::StringImpl"* [ %832, %830 ], [ null, %364 ], [ null, %384 ], [ %389, %388 ], [ %389, %404 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %353) #10
  br label %836

836:                                              ; preds = %350, %334, %330, %310, %278, %288, %303, %240, %250, %265, %207, %212, %227, %113, %123, %138, %80, %90, %105, %47, %57, %72, %833
  %837 = phi %"class.WTF::StringImpl"* [ %834, %833 ], [ %52, %72 ], [ %52, %57 ], [ %52, %47 ], [ %85, %105 ], [ %85, %90 ], [ %85, %80 ], [ %118, %138 ], [ %118, %123 ], [ %118, %113 ], [ %149, %227 ], [ %149, %212 ], [ %149, %207 ], [ %245, %265 ], [ %245, %250 ], [ %245, %240 ], [ %283, %303 ], [ %283, %288 ], [ %283, %278 ], [ null, %310 ], [ %313, %330 ], [ %313, %334 ], [ %313, %350 ]
  %838 = phi %"class.WTF::StringImpl"* [ %835, %833 ], [ %55, %72 ], [ %55, %57 ], [ null, %47 ], [ %88, %105 ], [ %88, %90 ], [ null, %80 ], [ %121, %138 ], [ %121, %123 ], [ null, %113 ], [ %210, %227 ], [ %210, %212 ], [ null, %207 ], [ %248, %265 ], [ %248, %250 ], [ null, %240 ], [ %286, %303 ], [ %286, %288 ], [ null, %278 ], [ null, %310 ], [ null, %330 ], [ %335, %334 ], [ %335, %350 ]
  %839 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %840 = icmp eq %"class.WTF::StringImpl"* %839, null
  br i1 %840, label %854, label %841

841:                                              ; preds = %836
  %842 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %839, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %843 = load atomic i32, i32* %842 monotonic, align 4
  %844 = and i32 %843, 2
  %845 = icmp eq i32 %844, 0
  %846 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %839, i64 0, i32 0
  %847 = load i32, i32* %846, align 4
  br i1 %845, label %848, label %850

848:                                              ; preds = %841
  %849 = add i32 %847, -1
  store i32 %849, i32* %846, align 4
  br label %850

850:                                              ; preds = %848, %841
  %851 = phi i32 [ %849, %848 ], [ %847, %841 ]
  %852 = icmp eq i32 %851, 0
  br i1 %852, label %853, label %854

853:                                              ; preds = %850
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %839) #10
  br label %854

854:                                              ; preds = %836, %850, %853
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  %855 = insertvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } undef, %"class.WTF::StringImpl"* %837, 0
  %856 = insertvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %855, %"class.WTF::StringImpl"* %838, 1
  ret { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %856
}

declare zeroext i1 @_ZNK5blink16HTMLInputElement7TooLongEv(%"class.blink::HTMLInputElement"*) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink6Locale28ValidationMessageTooLongTextEji(%"class.blink::Locale"*, i32, i32) local_unnamed_addr #2

declare i32 @_ZNK5blink18TextControlElement9maxLengthEv(%"class.blink::TextControlElement"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink16HTMLInputElement8TooShortEv(%"class.blink::HTMLInputElement"*) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink6Locale29ValidationMessageTooShortTextEji(%"class.blink::Locale"*, i32, i32) local_unnamed_addr #2

declare i32 @_ZNK5blink18TextControlElement9minLengthEv(%"class.blink::TextControlElement"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink7DecimalneERKS0_(%"class.blink::Decimal"*, %"class.blink::Decimal"* dereferenceable(24)) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink7DecimaleqERKS0_(%"class.blink::Decimal"*, %"class.blink::Decimal"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZNK5blink9StepRange10ClampValueERKNS_7DecimalE(%"class.blink::Decimal"* sret, %"class.blink::StepRange"*, %"class.blink::Decimal"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZNK5blink7DecimalplERKS0_(%"class.blink::Decimal"* sret, %"class.blink::Decimal"*, %"class.blink::Decimal"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZNK5blink7DecimalmiERKS0_(%"class.blink::Decimal"* sret, %"class.blink::Decimal"*, %"class.blink::Decimal"* dereferenceable(24)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink6Locale11QueryStringEiRKN3WTF6StringE(%"class.blink::Locale"*, i32, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink6Locale11QueryStringEiRKN3WTF6StringES4_(%"class.blink::Locale"*, i32, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9InputType13ParseToNumberERKN3WTF6StringERKNS_7DecimalE(%"class.blink::Decimal"* noalias sret, %"class.blink::InputType"* nocapture readnone, %"class.WTF::String"* nocapture readnone dereferenceable(8), %"class.blink::Decimal"* dereferenceable(24)) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* %0, %"class.blink::Decimal"* dereferenceable(24) %3) #10
  ret void
}

declare void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"*, %"class.blink::Decimal"* dereferenceable(24)) unnamed_addr #2

declare void @_ZN5blink7Decimal3NanEv(%"class.blink::Decimal"* sret) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink9InputType9SerializeERKNS_7DecimalE(%"class.blink::InputType"* nocapture readnone, %"class.blink::Decimal"* nocapture readnone dereferenceable(24)) unnamed_addr #3 align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ChromeClient"* @_ZNK5blink9InputType15GetChromeClientEv(%"class.blink::InputType"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InputType", %"class.blink::InputType"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %5, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::Document"*, %"class.blink::Document"** %6, align 8
  %8 = tail call %"class.blink::Page"* @_ZNK5blink8Document7GetPageEv(%"class.blink::Document"* %7) #10
  %9 = icmp eq %"class.blink::Page"* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::Page", %"class.blink::Page"* %8, i64 0, i32 7, i32 0, i32 0
  %12 = load %"class.blink::ChromeClient"*, %"class.blink::ChromeClient"** %11, align 8
  br label %13

13:                                               ; preds = %1, %10
  %14 = phi %"class.blink::ChromeClient"* [ %12, %10 ], [ null, %1 ]
  ret %"class.blink::ChromeClient"* %14
}

declare %"class.blink::Page"* @_ZNK5blink8Document7GetPageEv(%"class.blink::Document"*) local_unnamed_addr #2

declare dereferenceable(152) %"class.blink::Locale"* @_ZNK5blink7Element9GetLocaleEv(%"class.blink::Element"*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink9InputType17CanSetStringValueEv(%"class.blink::InputType"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9InputType19IsKeyboardFocusableEv(%"class.blink::InputType"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InputType", %"class.blink::InputType"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = tail call zeroext i1 @_ZNK5blink7Element22IsBaseElementFocusableEv(%"class.blink::Element"* %4) #10
  ret i1 %5
}

declare zeroext i1 @_ZNK5blink7Element22IsBaseElementFocusableEv(%"class.blink::Element"*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink9InputType25MayTriggerVirtualKeyboardEv(%"class.blink::InputType"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink9InputType10CountUsageEv(%"class.blink::InputType"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN5blink9InputType27ShouldRespectAlignAttributeEv(%"class.blink::InputType"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink9InputType48SanitizeValueInResponseToMinOrMaxAttributeChangeEv(%"class.blink::InputType"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN5blink9InputType27CanBeSuccessfulSubmitButtonEv(%"class.blink::InputType"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN5blink9InputType25MatchesDefaultPseudoClassEv(%"class.blink::InputType"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN5blink9InputType20LayoutObjectIsNeededEv(%"class.blink::InputType"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %"class.blink::FileList"* @_ZN5blink9InputType5FilesEv(%"class.blink::InputType"* nocapture readnone) unnamed_addr #3 align 2 {
  ret %"class.blink::FileList"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN5blink9InputType8SetFilesEPNS_8FileListE(%"class.blink::InputType"* nocapture readnone, %"class.blink::FileList"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink9InputType25SetFilesAndDispatchEventsEPNS_8FileListE(%"class.blink::InputType"* nocapture, %"class.blink::FileList"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink9InputType17SetFilesFromPathsERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE(%"class.blink::InputType"* nocapture, %"class.WTF::Vector.716"* nocapture dereferenceable(16)) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink9InputType24ValueInFilenameValueModeEv(%"class.blink::InputType"* nocapture readnone) unnamed_addr #3 align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink9InputType12DefaultLabelEv(%"class.blink::InputType"* nocapture readnone) unnamed_addr #3 align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN5blink9InputType20CanSetSuggestedValueEv(%"class.blink::InputType"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN5blink9InputType40ShouldSendChangeEventAfterCheckedChangedEv(%"class.blink::InputType"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink9InputType19DispatchSearchEventEv(%"class.blink::InputType"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9InputType8SetValueERKN3WTF6StringEbNS_22TextFieldEventBehaviorENS_28TextControlSetValueSelectionE(%"class.blink::InputType"* nocapture readonly, %"class.WTF::String"* dereferenceable(8), i1 zeroext, i32, i32) unnamed_addr #0 align 2 {
  %6 = icmp eq i32 %3, 0
  %7 = getelementptr inbounds %"class.blink::InputType", %"class.blink::InputType"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %7, align 8
  br i1 %6, label %9, label %10

9:                                                ; preds = %5
  tail call void @_ZN5blink16HTMLInputElement20SetNonAttributeValueERKN3WTF6StringE(%"class.blink::HTMLInputElement"* %8, %"class.WTF::String"* dereferenceable(8) %1) #10
  br label %11

10:                                               ; preds = %5
  tail call void @_ZN5blink16HTMLInputElement30SetNonAttributeValueByUserEditERKN3WTF6StringE(%"class.blink::HTMLInputElement"* %8, %"class.WTF::String"* dereferenceable(8) %1) #10
  br label %11

11:                                               ; preds = %10, %9
  br i1 %2, label %12, label %24

12:                                               ; preds = %11
  switch i32 %3, label %24 [
    i32 1, label %13
    i32 2, label %16
    i32 3, label %19
  ]

13:                                               ; preds = %12
  %14 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %7, align 8
  %15 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %14, i64 0, i32 0
  tail call void @_ZN5blink18TextControlElement30DispatchFormControlChangeEventEv(%"class.blink::TextControlElement"* %15) #10
  br label %24

16:                                               ; preds = %12
  %17 = bitcast %"class.blink::HTMLInputElement"** %7 to %"class.blink::HTMLFormControlElementWithState"**
  %18 = load %"class.blink::HTMLFormControlElementWithState"*, %"class.blink::HTMLFormControlElementWithState"** %17, align 8
  tail call void @_ZN5blink31HTMLFormControlElementWithState18DispatchInputEventEv(%"class.blink::HTMLFormControlElementWithState"* %18) #10
  br label %24

19:                                               ; preds = %12
  %20 = bitcast %"class.blink::HTMLInputElement"** %7 to %"class.blink::HTMLFormControlElementWithState"**
  %21 = load %"class.blink::HTMLFormControlElementWithState"*, %"class.blink::HTMLFormControlElementWithState"** %20, align 8
  tail call void @_ZN5blink31HTMLFormControlElementWithState18DispatchInputEventEv(%"class.blink::HTMLFormControlElementWithState"* %21) #10
  %22 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %7, align 8
  %23 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %22, i64 0, i32 0
  tail call void @_ZN5blink18TextControlElement30DispatchFormControlChangeEventEv(%"class.blink::TextControlElement"* %23) #10
  br label %24

24:                                               ; preds = %11, %12, %19, %16, %13
  ret void
}

declare void @_ZN5blink16HTMLInputElement20SetNonAttributeValueERKN3WTF6StringE(%"class.blink::HTMLInputElement"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink16HTMLInputElement30SetNonAttributeValueByUserEditERKN3WTF6StringE(%"class.blink::HTMLInputElement"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink18TextControlElement30DispatchFormControlChangeEventEv(%"class.blink::TextControlElement"*) local_unnamed_addr #2

declare void @_ZN5blink31HTMLFormControlElementWithState18DispatchInputEventEv(%"class.blink::HTMLFormControlElementWithState"*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN5blink9InputType11CanSetValueERKN3WTF6StringE(%"class.blink::InputType"* nocapture readnone, %"class.WTF::String"* nocapture readnone dereferenceable(8)) unnamed_addr #3 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink9InputType13LocalizeValueERKN3WTF6StringE(%"class.blink::InputType"* nocapture readnone, %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %23

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i33
  %15 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %14, i33 1) #10
  %16 = extractvalue { i33, i1 } %15, 1
  %17 = extractvalue { i33, i1 } %15, 0
  %18 = icmp slt i33 %17, 0
  %19 = or i1 %16, %18
  br i1 %19, label %20, label %21, !prof !2

20:                                               ; preds = %11
  tail call void @llvm.trap() #10
  unreachable

21:                                               ; preds = %11
  %22 = trunc i33 %17 to i32
  store i32 %22, i32* %12, align 4
  br label %23

23:                                               ; preds = %2, %6, %21
  ret %"class.WTF::StringImpl"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink9InputType12VisibleValueEv(%"class.blink::InputType"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InputType", %"class.blink::InputType"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %2, align 8
  %4 = bitcast %"class.blink::HTMLInputElement"* %3 to %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)***
  %5 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)**, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %5, i64 195
  %7 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %6, align 8
  %8 = tail call %"class.WTF::StringImpl"* %7(%"class.blink::HTMLInputElement"* %3) #10
  ret %"class.WTF::StringImpl"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink9InputType13SanitizeValueERKN3WTF6StringE(%"class.blink::InputType"* nocapture readnone, %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %23

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i33
  %15 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %14, i33 1) #10
  %16 = extractvalue { i33, i1 } %15, 1
  %17 = extractvalue { i33, i1 } %15, 0
  %18 = icmp slt i33 %17, 0
  %19 = or i1 %16, %18
  br i1 %19, label %20, label %21, !prof !2

20:                                               ; preds = %11
  tail call void @llvm.trap() #10
  unreachable

21:                                               ; preds = %11
  %22 = trunc i33 %17 to i32
  store i32 %22, i32* %12, align 4
  br label %23

23:                                               ; preds = %2, %6, %21
  ret %"class.WTF::StringImpl"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink9InputType22SanitizeUserInputValueERKN3WTF6StringE(%"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::InputType"* %0 to %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)***
  %4 = load %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)**, %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)** %4, i64 43
  %6 = load %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)** %5, align 8
  %7 = tail call %"class.WTF::StringImpl"* %6(%"class.blink::InputType"* %0, %"class.WTF::String"* dereferenceable(8) %1) #10
  ret %"class.WTF::StringImpl"* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9InputType39WarnIfValueIsInvalidAndElementIsVisibleERKN3WTF6StringE(%"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InputType", %"class.blink::InputType"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 12
  %8 = icmp eq i32 %7, 0
  %9 = and i32 %6, 1
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %8, label %12, label %23

12:                                               ; preds = %2
  br i1 %10, label %19, label %13

13:                                               ; preds = %12
  %14 = bitcast %"class.blink::NodeData"** %11 to %"class.blink::NodeRareData"**
  %15 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %15, i64 0, i32 1, i32 0, i32 0
  %17 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %17, i64 0, i32 2, i32 0
  br label %38

19:                                               ; preds = %12
  %20 = bitcast %"class.blink::NodeData"** %11 to %"class.blink::NodeRenderingData"**
  %21 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %21, i64 0, i32 2, i32 0
  br label %38

23:                                               ; preds = %2
  br i1 %10, label %28, label %24

24:                                               ; preds = %23
  %25 = bitcast %"class.blink::NodeData"** %11 to %"class.blink::NodeRareData"**
  %26 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %26, i64 0, i32 1, i32 0, i32 0
  br label %30

28:                                               ; preds = %23
  %29 = bitcast %"class.blink::NodeData"** %11 to %"class.blink::NodeRenderingData"**
  br label %30

30:                                               ; preds = %28, %24
  %31 = phi %"class.blink::NodeRenderingData"** [ %27, %24 ], [ %29, %28 ]
  %32 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %32, i64 0, i32 1
  %34 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %33, align 8
  %35 = icmp eq %"class.blink::LayoutObject"* %34, null
  br i1 %35, label %53, label %36

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %34, i64 0, i32 5, i32 0
  br label %38

38:                                               ; preds = %13, %19, %36
  %39 = phi %"class.blink::ComputedStyle"** [ %37, %36 ], [ %18, %13 ], [ %22, %19 ]
  %40 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %39, align 8
  %41 = icmp eq %"class.blink::ComputedStyle"* %40, null
  br i1 %41, label %53, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %40, i64 0, i32 0, i32 9
  %44 = bitcast [20 x i8]* %43 to i160*
  %45 = load i160, i160* %44, align 8
  %46 = and i160 %45, 3802951800684688204490109616128
  %47 = icmp eq i160 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %42
  %49 = bitcast %"class.blink::InputType"* %0 to void (%"class.blink::InputType"*, %"class.WTF::String"*)***
  %50 = load void (%"class.blink::InputType"*, %"class.WTF::String"*)**, void (%"class.blink::InputType"*, %"class.WTF::String"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.blink::InputType"*, %"class.WTF::String"*)*, void (%"class.blink::InputType"*, %"class.WTF::String"*)** %50, i64 45
  %52 = load void (%"class.blink::InputType"*, %"class.WTF::String"*)*, void (%"class.blink::InputType"*, %"class.WTF::String"*)** %51, align 8
  tail call void %52(%"class.blink::InputType"* %0, %"class.WTF::String"* dereferenceable(8) %1) #10
  br label %53

53:                                               ; preds = %30, %42, %38, %48
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZNK5blink9InputType20WarnIfValueIsInvalidERKN3WTF6StringE(%"class.blink::InputType"* nocapture, %"class.WTF::String"* nocapture dereferenceable(8)) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN5blink9InputType19ReceiveDroppedFilesEPKNS_8DragDataE(%"class.blink::InputType"* nocapture readnone, %"class.blink::DragData"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink9InputType19DroppedFileSystemIdEv(%"class.blink::InputType"* nocapture readnone) unnamed_addr #3 align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN5blink9InputType26ShouldRespectListAttributeEv(%"class.blink::InputType"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink9InputType12IsTextButtonEv(%"class.blink::InputType"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink9InputType20IsInteractiveContentEv(%"class.blink::InputType"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN5blink9InputType14IsEnumeratableEv(%"class.blink::InputType"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN5blink9InputType11IsCheckableEv(%"class.blink::InputType"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink9InputType11IsSteppableEv(%"class.blink::InputType"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN5blink9InputType37ShouldRespectHeightAndWidthAttributesEv(%"class.blink::InputType"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK5blink9InputType9MaxLengthEv(%"class.blink::InputType"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i32 -1
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK5blink9InputType9MinLengthEv(%"class.blink::InputType"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink9InputType19SupportsPlaceholderEv(%"class.blink::InputType"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink9InputType16SupportsReadOnlyEv(%"class.blink::InputType"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink9InputType14DefaultToolTipERKNS_13InputTypeViewE(%"class.blink::InputType"*, %"class.blink::InputTypeView"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InputType", %"class.blink::InputType"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 4, i32 0, i32 0
  %6 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %5, align 8
  %7 = icmp eq %"class.blink::HTMLFormElement"* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  %9 = tail call zeroext i1 @_ZNK5blink15HTMLFormElement10NoValidateEv(%"class.blink::HTMLFormElement"* nonnull %6) #10
  br i1 %9, label %29, label %10

10:                                               ; preds = %2, %8
  %11 = tail call { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZNK5blink9InputType17ValidationMessageERKNS_13InputTypeViewE(%"class.blink::InputType"* %0, %"class.blink::InputTypeView"* dereferenceable(24) %1)
  %12 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %11, 0
  %13 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %14 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %11, 1
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #10
  br label %29

29:                                               ; preds = %28, %25, %10, %8
  %30 = phi i64 [ 0, %8 ], [ %13, %10 ], [ %13, %25 ], [ %13, %28 ]
  %31 = inttoptr i64 %30 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %31
}

declare zeroext i1 @_ZNK5blink15HTMLFormElement10NoValidateEv(%"class.blink::HTMLFormElement"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9InputType24FindClosestTickMarkValueERKNS_7DecimalE(%"class.blink::Decimal"* noalias sret, %"class.blink::InputType"* nocapture readnone, %"class.blink::Decimal"* nocapture readnone dereferenceable(24)) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink7Decimal3NanEv(%"class.blink::Decimal"* sret %0) #10
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink9InputType21HasLegalLinkAttributeERKNS_13QualifiedNameE(%"class.blink::InputType"* nocapture readnone, %"class.blink::QualifiedName"* nocapture readnone dereferenceable(8)) unnamed_addr #3 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(8) %"class.blink::QualifiedName"* @_ZNK5blink9InputType24SubResourceAttributeNameEv(%"class.blink::InputType"* nocapture readnone) unnamed_addr #3 align 2 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  ret %"class.blink::QualifiedName"* %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink9InputType26CopyNonAttributePropertiesERKNS_16HTMLInputElementE(%"class.blink::InputType"* nocapture, %"class.blink::HTMLInputElement"* nocapture dereferenceable(320)) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink9InputType24OnAttachWithLayoutObjectEv(%"class.blink::InputType"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink9InputType25ShouldAppearIndeterminateEv(%"class.blink::InputType"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink9InputType26SupportsInputModeAttributeEv(%"class.blink::InputType"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink9InputType20SupportsSelectionAPIEv(%"class.blink::InputType"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK5blink9InputType6HeightEv(%"class.blink::InputType"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK5blink9InputType5WidthEv(%"class.blink::InputType"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %"class.blink::ColorChooserClient"* @_ZN5blink9InputType21GetColorChooserClientEv(%"class.blink::InputType"* nocapture readnone) unnamed_addr #3 align 2 {
  ret %"class.blink::ColorChooserClient"* null
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9InputType9ApplyStepERKNS_7DecimalEdNS_15AnyStepHandlingENS_22TextFieldEventBehaviorERNS_14ExceptionStateE(%"class.blink::InputType"*, %"class.blink::Decimal"* dereferenceable(24), double, i32, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.blink::StepRange", align 8
  %8 = alloca %"class.blink::Decimal", align 8
  %9 = alloca %"class.blink::Decimal", align 8
  %10 = alloca %"class.blink::Decimal", align 8
  %11 = alloca %"class.blink::Decimal", align 8
  %12 = alloca %"class.blink::Decimal", align 8
  %13 = alloca %"class.blink::Decimal", align 8
  %14 = alloca %"class.blink::Decimal", align 8
  %15 = alloca %"class.blink::Decimal", align 8
  %16 = alloca %"class.blink::Decimal", align 8
  %17 = alloca %"class.blink::Decimal", align 8
  %18 = alloca %"class.blink::Decimal", align 8
  %19 = alloca %"class.blink::Decimal", align 8
  %20 = alloca %"class.blink::Decimal", align 8
  %21 = alloca %"class.blink::Decimal", align 8
  %22 = alloca %"class.blink::Decimal", align 8
  %23 = alloca %"class.blink::Decimal", align 8
  %24 = alloca %"class.blink::Decimal", align 8
  %25 = alloca %"class.blink::Decimal", align 8
  %26 = alloca %"class.blink::Decimal", align 8
  %27 = alloca %"class.blink::Decimal", align 8
  %28 = alloca %"class.blink::Decimal", align 8
  %29 = alloca %"class.blink::Decimal", align 8
  %30 = alloca %"class.blink::Decimal", align 8
  %31 = alloca %"class.blink::Decimal", align 8
  %32 = alloca %"class.blink::Decimal", align 8
  %33 = alloca %"class.blink::Decimal", align 8
  %34 = alloca %"class.blink::Decimal", align 8
  %35 = alloca %"class.blink::Decimal", align 8
  %36 = alloca %"class.blink::Decimal", align 8
  %37 = bitcast %"class.blink::StepRange"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %37) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 120, i1 false)
  %38 = bitcast %"class.blink::InputType"* %0 to void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)***
  %39 = load void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)**, void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)*, void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)** %39, i64 31
  %41 = load void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)*, void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)** %40, align 8
  call void %41(%"class.blink::StepRange"* nonnull sret %7, %"class.blink::InputType"* %0, i32 %3) #10
  %42 = getelementptr inbounds %"class.blink::StepRange", %"class.blink::StepRange"* %7, i64 0, i32 5
  %43 = load i8, i8* %42, align 8, !range !12
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %6
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %5, i32 11, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0)) #10
  br label %367

46:                                               ; preds = %6
  %47 = bitcast %"class.blink::Decimal"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #10
  %48 = getelementptr inbounds %"class.blink::StepRange", %"class.blink::StepRange"* %7, i64 0, i32 1
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %8, %"class.blink::Decimal"* dereferenceable(24) %48) #10
  %49 = bitcast %"class.blink::Decimal"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #10
  %50 = getelementptr inbounds %"class.blink::StepRange", %"class.blink::StepRange"* %7, i64 0, i32 0
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %9, %"class.blink::Decimal"* nonnull dereferenceable(24) %50) #10
  %51 = call zeroext i1 @_ZNK5blink7DecimalgtERKS0_(%"class.blink::Decimal"* nonnull %8, %"class.blink::Decimal"* nonnull dereferenceable(24) %9) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #10
  br i1 %51, label %367, label %52

52:                                               ; preds = %46
  %53 = bitcast %"class.blink::Decimal"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #10
  %54 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %10, i64 0, i32 0, i32 3
  %55 = bitcast %"class.blink::Decimal"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 -86, i64 24, i1 false)
  call void @_ZNK5blink9StepRange18StepSnappedMaximumEv(%"class.blink::Decimal"* nonnull sret %10, %"class.blink::StepRange"* nonnull %7) #10
  %56 = load i32, i32* %54, align 4
  %57 = and i32 %56, -3
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %366, label %59

59:                                               ; preds = %52
  %60 = bitcast %"class.blink::Decimal"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #10
  %61 = getelementptr inbounds %"class.blink::StepRange", %"class.blink::StepRange"* %7, i64 0, i32 3
  %62 = bitcast %"class.blink::Decimal"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %62, i8 -86, i64 24, i1 false)
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %11, %"class.blink::Decimal"* dereferenceable(24) %61) #10
  %63 = bitcast %"class.blink::Decimal"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #10
  %64 = getelementptr inbounds %"class.blink::StepRange", %"class.blink::StepRange"* %7, i64 0, i32 2
  %65 = bitcast %"class.blink::Decimal"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 -86, i64 24, i1 false)
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %12, %"class.blink::Decimal"* dereferenceable(24) %64) #10
  %66 = call %"class.blink::ScopedEventQueue"* @_ZN5blink16ScopedEventQueue8InstanceEv() #10
  call void @_ZN5blink16ScopedEventQueue21IncrementScopingLevelEv(%"class.blink::ScopedEventQueue"* %66) #10
  %67 = bitcast %"class.blink::Decimal"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %67) #10
  %68 = bitcast %"class.blink::Decimal"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %68, i8 -86, i64 24, i1 false)
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %13, %"class.blink::Decimal"* dereferenceable(24) %1) #10
  %69 = getelementptr inbounds %"class.blink::InputType", %"class.blink::InputType"* %0, i64 0, i32 1, i32 0, i32 0
  %70 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %69, align 8
  %71 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kStepAttrE, align 8
  %72 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %73 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %72, align 8
  %74 = icmp eq %"class.blink::ElementData"* %73, null
  br i1 %74, label %125, label %75

75:                                               ; preds = %59
  %76 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %73, i64 0, i32 0, i32 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = and i32 %77, 1
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %87, label %80

80:                                               ; preds = %75
  %81 = bitcast %"class.blink::ElementData"* %73 to %"class.blink::UniqueElementData"*
  %82 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %73, i64 1, i32 1
  %83 = bitcast %"class.blink::Member.18"* %82 to %"class.blink::Attribute"**
  %84 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %83, align 8
  %85 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %81, i64 0, i32 2, i32 0, i32 0, i32 2
  %86 = load i32, i32* %85, align 4
  br label %92

87:                                               ; preds = %75
  %88 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %73, i64 1
  %89 = bitcast %"class.blink::ElementData"* %88 to %"class.blink::Attribute"*
  %90 = lshr i32 %77, 1
  %91 = and i32 %90, 268435455
  br label %92

92:                                               ; preds = %87, %80
  %93 = phi %"class.blink::Attribute"* [ %89, %87 ], [ %84, %80 ]
  %94 = phi i32 [ %91, %87 ], [ %86, %80 ]
  %95 = zext i32 %94 to i64
  %96 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %93, i64 %95
  %97 = icmp eq i32 %94, 0
  br i1 %97, label %125, label %98

98:                                               ; preds = %92
  %99 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %71, i64 0, i32 0, i32 0
  %100 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %99, align 8
  %101 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %100, i64 0, i32 3, i32 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %100, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %103

103:                                              ; preds = %118, %98
  %104 = phi %"class.blink::Attribute"* [ %93, %98 ], [ %119, %118 ]
  %105 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %105, align 8
  %107 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %106, %100
  br i1 %107, label %121, label %108

108:                                              ; preds = %103
  %109 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %106, i64 0, i32 3, i32 0, i32 0, i32 0
  %110 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %109, align 8
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %101, align 8
  %112 = icmp eq %"class.WTF::StringImpl"* %110, %111
  br i1 %112, label %113, label %118

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %106, i64 0, i32 4, i32 0, i32 0, i32 0
  %115 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %114, align 8
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  %117 = icmp eq %"class.WTF::StringImpl"* %115, %116
  br i1 %117, label %121, label %118

118:                                              ; preds = %113, %108
  %119 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %104, i64 1
  %120 = icmp eq %"class.blink::Attribute"* %119, %96
  br i1 %120, label %125, label %103

121:                                              ; preds = %113, %103
  %122 = icmp eq %"class.blink::Attribute"* %104, null
  br i1 %122, label %125, label %123

123:                                              ; preds = %121
  %124 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %104, i64 0, i32 1
  br label %127

125:                                              ; preds = %118, %121, %92, %59
  %126 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %127

127:                                              ; preds = %123, %125
  %128 = phi %"class.WTF::AtomicString"* [ %126, %125 ], [ %124, %123 ]
  %129 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %128, i64 0, i32 0, i32 0, i32 0
  %130 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %129, align 8
  %131 = icmp eq %"class.WTF::StringImpl"* %130, null
  br i1 %131, label %209, label %132

132:                                              ; preds = %127
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 1
  %134 = load i32, i32* %133, align 4
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 1
  %136 = bitcast %"class.WTF::StringImpl"* %135 to i8*
  %137 = icmp eq i32 %134, 3
  br i1 %137, label %138, label %209

138:                                              ; preds = %132
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = load atomic i32, i32* %139 monotonic, align 4
  %141 = and i32 %140, 1
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %162, label %143

143:                                              ; preds = %138
  %144 = load i8, i8* %136, align 1
  %145 = zext i8 %144 to i64
  %146 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %145
  %147 = load i8, i8* %146, align 1
  %148 = zext i8 %147 to i32
  %149 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 97), align 1
  %150 = sext i8 %149 to i32
  %151 = icmp eq i32 %148, %150
  br i1 %151, label %152, label %209

152:                                              ; preds = %143
  %153 = getelementptr inbounds i8, i8* %136, i64 1
  %154 = load i8, i8* %153, align 1
  %155 = zext i8 %154 to i64
  %156 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %155
  %157 = load i8, i8* %156, align 1
  %158 = zext i8 %157 to i32
  %159 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 110), align 2
  %160 = sext i8 %159 to i32
  %161 = icmp eq i32 %158, %160
  br i1 %161, label %199, label %209

162:                                              ; preds = %138
  %163 = bitcast %"class.WTF::StringImpl"* %135 to i16*
  %164 = load i16, i16* %163, align 2
  %165 = add i16 %164, -65
  %166 = icmp ult i16 %165, 26
  %167 = zext i1 %166 to i16
  %168 = shl nuw nsw i16 %167, 5
  %169 = or i16 %168, %164
  %170 = zext i16 %169 to i32
  %171 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 97), align 1
  %172 = sext i8 %171 to i32
  %173 = icmp eq i32 %170, %172
  br i1 %173, label %174, label %209

174:                                              ; preds = %162
  %175 = getelementptr inbounds i16, i16* %163, i64 1
  %176 = load i16, i16* %175, align 2
  %177 = add i16 %176, -65
  %178 = icmp ult i16 %177, 26
  %179 = zext i1 %178 to i16
  %180 = shl nuw nsw i16 %179, 5
  %181 = or i16 %180, %176
  %182 = zext i16 %181 to i32
  %183 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 110), align 2
  %184 = sext i8 %183 to i32
  %185 = icmp eq i32 %182, %184
  br i1 %185, label %186, label %209

186:                                              ; preds = %174
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 1, i32 1
  %188 = bitcast i32* %187 to i16*
  %189 = load i16, i16* %188, align 2
  %190 = add i16 %189, -65
  %191 = icmp ult i16 %190, 26
  %192 = zext i1 %191 to i16
  %193 = shl nuw nsw i16 %192, 5
  %194 = or i16 %193, %189
  %195 = zext i16 %194 to i32
  %196 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 121), align 1
  %197 = sext i8 %196 to i32
  %198 = icmp eq i32 %195, %197
  br i1 %198, label %231, label %209

199:                                              ; preds = %152
  %200 = getelementptr inbounds i8, i8* %136, i64 2
  %201 = load i8, i8* %200, align 1
  %202 = zext i8 %201 to i64
  %203 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %202
  %204 = load i8, i8* %203, align 1
  %205 = zext i8 %204 to i32
  %206 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 121), align 1
  %207 = sext i8 %206 to i32
  %208 = icmp eq i32 %205, %207
  br i1 %208, label %231, label %209

209:                                              ; preds = %127, %152, %143, %174, %162, %132, %186, %199
  %210 = call zeroext i1 @_ZNK5blink9StepRange12StepMismatchERKNS_7DecimalE(%"class.blink::StepRange"* nonnull %7, %"class.blink::Decimal"* dereferenceable(24) %1) #10
  br i1 %210, label %211, label %231

211:                                              ; preds = %209
  %212 = fcmp olt double %2, 0.000000e+00
  br i1 %212, label %213, label %221

213:                                              ; preds = %211
  %214 = bitcast %"class.blink::Decimal"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %214) #10
  %215 = bitcast %"class.blink::Decimal"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %215) #10
  %216 = bitcast %"class.blink::Decimal"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %216) #10
  %217 = bitcast %"class.blink::Decimal"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %217) #10
  %218 = bitcast %"class.blink::Decimal"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %218) #10
  call void @_ZNK5blink7DecimalmiERKS0_(%"class.blink::Decimal"* nonnull sret %18, %"class.blink::Decimal"* nonnull %13, %"class.blink::Decimal"* nonnull dereferenceable(24) %11) #10
  call void @_ZNK5blink7DecimaldvERKS0_(%"class.blink::Decimal"* nonnull sret %17, %"class.blink::Decimal"* nonnull %18, %"class.blink::Decimal"* nonnull dereferenceable(24) %12) #10
  call void @_ZNK5blink7Decimal5FloorEv(%"class.blink::Decimal"* nonnull sret %16, %"class.blink::Decimal"* nonnull %17) #10
  call void @_ZNK5blink7DecimalmlERKS0_(%"class.blink::Decimal"* nonnull sret %15, %"class.blink::Decimal"* nonnull %16, %"class.blink::Decimal"* nonnull dereferenceable(24) %12) #10
  call void @_ZNK5blink7DecimalplERKS0_(%"class.blink::Decimal"* nonnull sret %14, %"class.blink::Decimal"* nonnull %11, %"class.blink::Decimal"* nonnull dereferenceable(24) %15) #10
  %219 = call dereferenceable(24) %"class.blink::Decimal"* @_ZN5blink7DecimalaSERKS0_(%"class.blink::Decimal"* nonnull %13, %"class.blink::Decimal"* nonnull dereferenceable(24) %14) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %218) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %217) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %216) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %215) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %214) #10
  %220 = fadd double %2, 1.000000e+00
  br label %231

221:                                              ; preds = %211
  %222 = fcmp ogt double %2, 0.000000e+00
  br i1 %222, label %223, label %231

223:                                              ; preds = %221
  %224 = bitcast %"class.blink::Decimal"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %224) #10
  %225 = bitcast %"class.blink::Decimal"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %225) #10
  %226 = bitcast %"class.blink::Decimal"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %226) #10
  %227 = bitcast %"class.blink::Decimal"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %227) #10
  %228 = bitcast %"class.blink::Decimal"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %228) #10
  call void @_ZNK5blink7DecimalmiERKS0_(%"class.blink::Decimal"* nonnull sret %23, %"class.blink::Decimal"* nonnull %13, %"class.blink::Decimal"* nonnull dereferenceable(24) %11) #10
  call void @_ZNK5blink7DecimaldvERKS0_(%"class.blink::Decimal"* nonnull sret %22, %"class.blink::Decimal"* nonnull %23, %"class.blink::Decimal"* nonnull dereferenceable(24) %12) #10
  call void @_ZNK5blink7Decimal4CeilEv(%"class.blink::Decimal"* nonnull sret %21, %"class.blink::Decimal"* nonnull %22) #10
  call void @_ZNK5blink7DecimalmlERKS0_(%"class.blink::Decimal"* nonnull sret %20, %"class.blink::Decimal"* nonnull %21, %"class.blink::Decimal"* nonnull dereferenceable(24) %12) #10
  call void @_ZNK5blink7DecimalplERKS0_(%"class.blink::Decimal"* nonnull sret %19, %"class.blink::Decimal"* nonnull %11, %"class.blink::Decimal"* nonnull dereferenceable(24) %20) #10
  %229 = call dereferenceable(24) %"class.blink::Decimal"* @_ZN5blink7DecimalaSERKS0_(%"class.blink::Decimal"* nonnull %13, %"class.blink::Decimal"* nonnull dereferenceable(24) %19) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %228) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %227) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %226) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %225) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %224) #10
  %230 = fadd double %2, -1.000000e+00
  br label %231

231:                                              ; preds = %199, %186, %213, %223, %221, %209
  %232 = phi double [ %220, %213 ], [ %230, %223 ], [ %2, %221 ], [ %2, %209 ], [ %2, %186 ], [ %2, %199 ]
  %233 = bitcast %"class.blink::Decimal"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %233) #10
  %234 = bitcast %"class.blink::Decimal"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %234) #10
  %235 = bitcast %"class.blink::Decimal"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %235) #10
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %26, %"class.blink::Decimal"* dereferenceable(24) %64) #10
  %236 = bitcast %"class.blink::Decimal"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %236) #10
  call void @_ZN5blink7Decimal10FromDoubleEd(%"class.blink::Decimal"* nonnull sret %27, double %232) #10
  call void @_ZNK5blink7DecimalmlERKS0_(%"class.blink::Decimal"* nonnull sret %25, %"class.blink::Decimal"* nonnull %26, %"class.blink::Decimal"* nonnull dereferenceable(24) %27) #10
  call void @_ZNK5blink7DecimalplERKS0_(%"class.blink::Decimal"* nonnull sret %24, %"class.blink::Decimal"* nonnull %13, %"class.blink::Decimal"* nonnull dereferenceable(24) %25) #10
  %237 = call dereferenceable(24) %"class.blink::Decimal"* @_ZN5blink7DecimalaSERKS0_(%"class.blink::Decimal"* nonnull %13, %"class.blink::Decimal"* nonnull dereferenceable(24) %24) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %236) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %235) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %234) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %233) #10
  %238 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %129, align 8
  %239 = icmp eq %"class.WTF::StringImpl"* %238, null
  br i1 %239, label %317, label %240

240:                                              ; preds = %231
  %241 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %238, i64 0, i32 1
  %242 = load i32, i32* %241, align 4
  %243 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %238, i64 1
  %244 = bitcast %"class.WTF::StringImpl"* %243 to i8*
  %245 = icmp eq i32 %242, 3
  br i1 %245, label %246, label %317

246:                                              ; preds = %240
  %247 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %238, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %248 = load atomic i32, i32* %247 monotonic, align 4
  %249 = and i32 %248, 1
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %270, label %251

251:                                              ; preds = %246
  %252 = load i8, i8* %244, align 1
  %253 = zext i8 %252 to i64
  %254 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %253
  %255 = load i8, i8* %254, align 1
  %256 = zext i8 %255 to i32
  %257 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 97), align 1
  %258 = sext i8 %257 to i32
  %259 = icmp eq i32 %256, %258
  br i1 %259, label %260, label %317

260:                                              ; preds = %251
  %261 = getelementptr inbounds i8, i8* %244, i64 1
  %262 = load i8, i8* %261, align 1
  %263 = zext i8 %262 to i64
  %264 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %263
  %265 = load i8, i8* %264, align 1
  %266 = zext i8 %265 to i32
  %267 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 110), align 2
  %268 = sext i8 %267 to i32
  %269 = icmp eq i32 %266, %268
  br i1 %269, label %307, label %317

270:                                              ; preds = %246
  %271 = bitcast %"class.WTF::StringImpl"* %243 to i16*
  %272 = load i16, i16* %271, align 2
  %273 = add i16 %272, -65
  %274 = icmp ult i16 %273, 26
  %275 = zext i1 %274 to i16
  %276 = shl nuw nsw i16 %275, 5
  %277 = or i16 %276, %272
  %278 = zext i16 %277 to i32
  %279 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 97), align 1
  %280 = sext i8 %279 to i32
  %281 = icmp eq i32 %278, %280
  br i1 %281, label %282, label %317

282:                                              ; preds = %270
  %283 = getelementptr inbounds i16, i16* %271, i64 1
  %284 = load i16, i16* %283, align 2
  %285 = add i16 %284, -65
  %286 = icmp ult i16 %285, 26
  %287 = zext i1 %286 to i16
  %288 = shl nuw nsw i16 %287, 5
  %289 = or i16 %288, %284
  %290 = zext i16 %289 to i32
  %291 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 110), align 2
  %292 = sext i8 %291 to i32
  %293 = icmp eq i32 %290, %292
  br i1 %293, label %294, label %317

294:                                              ; preds = %282
  %295 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %238, i64 1, i32 1
  %296 = bitcast i32* %295 to i16*
  %297 = load i16, i16* %296, align 2
  %298 = add i16 %297, -65
  %299 = icmp ult i16 %298, 26
  %300 = zext i1 %299 to i16
  %301 = shl nuw nsw i16 %300, 5
  %302 = or i16 %301, %297
  %303 = zext i16 %302 to i32
  %304 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 121), align 1
  %305 = sext i8 %304 to i32
  %306 = icmp eq i32 %303, %305
  br i1 %306, label %320, label %317

307:                                              ; preds = %260
  %308 = getelementptr inbounds i8, i8* %244, i64 2
  %309 = load i8, i8* %308, align 1
  %310 = zext i8 %309 to i64
  %311 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %310
  %312 = load i8, i8* %311, align 1
  %313 = zext i8 %312 to i32
  %314 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 121), align 1
  %315 = sext i8 %314 to i32
  %316 = icmp eq i32 %313, %315
  br i1 %316, label %320, label %317

317:                                              ; preds = %231, %260, %251, %282, %270, %240, %294, %307
  %318 = bitcast %"class.blink::Decimal"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %318) #10
  call void @_ZNK5blink9StepRange17AlignValueForStepERKNS_7DecimalES3_(%"class.blink::Decimal"* nonnull sret %28, %"class.blink::StepRange"* nonnull %7, %"class.blink::Decimal"* dereferenceable(24) %1, %"class.blink::Decimal"* nonnull dereferenceable(24) %13) #10
  %319 = call dereferenceable(24) %"class.blink::Decimal"* @_ZN5blink7DecimalaSERKS0_(%"class.blink::Decimal"* nonnull %13, %"class.blink::Decimal"* nonnull dereferenceable(24) %28) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %318) #10
  br label %320

320:                                              ; preds = %294, %307, %317
  %321 = bitcast %"class.blink::Decimal"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %321) #10
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %29, %"class.blink::Decimal"* dereferenceable(24) %48) #10
  %322 = call zeroext i1 @_ZNK5blink7DecimalltERKS0_(%"class.blink::Decimal"* nonnull %13, %"class.blink::Decimal"* nonnull dereferenceable(24) %29) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %321) #10
  br i1 %322, label %323, label %332

323:                                              ; preds = %320
  %324 = bitcast %"class.blink::Decimal"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %324) #10
  %325 = bitcast %"class.blink::Decimal"* %31 to i8*
  %326 = bitcast %"class.blink::Decimal"* %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %326, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %325) #10
  %327 = bitcast %"class.blink::Decimal"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %327) #10
  %328 = bitcast %"class.blink::Decimal"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %328) #10
  %329 = bitcast %"class.blink::Decimal"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %329) #10
  %330 = bitcast %"class.blink::Decimal"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %330) #10
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %35, %"class.blink::Decimal"* dereferenceable(24) %48) #10
  call void @_ZNK5blink7DecimalmiERKS0_(%"class.blink::Decimal"* nonnull sret %34, %"class.blink::Decimal"* nonnull %35, %"class.blink::Decimal"* nonnull dereferenceable(24) %11) #10
  call void @_ZNK5blink7DecimaldvERKS0_(%"class.blink::Decimal"* nonnull sret %33, %"class.blink::Decimal"* nonnull %34, %"class.blink::Decimal"* nonnull dereferenceable(24) %12) #10
  call void @_ZNK5blink7Decimal4CeilEv(%"class.blink::Decimal"* nonnull sret %32, %"class.blink::Decimal"* nonnull %33) #10
  call void @_ZNK5blink7DecimalmlERKS0_(%"class.blink::Decimal"* nonnull sret %31, %"class.blink::Decimal"* nonnull %32, %"class.blink::Decimal"* nonnull dereferenceable(24) %12) #10
  call void @_ZNK5blink7DecimalplERKS0_(%"class.blink::Decimal"* nonnull sret %30, %"class.blink::Decimal"* nonnull %11, %"class.blink::Decimal"* nonnull dereferenceable(24) %31) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %330) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %329) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %328) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %327) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %325) #10
  %331 = call dereferenceable(24) %"class.blink::Decimal"* @_ZN5blink7DecimalaSERKS0_(%"class.blink::Decimal"* nonnull %13, %"class.blink::Decimal"* nonnull dereferenceable(24) %30) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %324) #10
  br label %332

332:                                              ; preds = %323, %320
  %333 = bitcast %"class.blink::Decimal"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %333) #10
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %36, %"class.blink::Decimal"* nonnull dereferenceable(24) %50) #10
  %334 = call zeroext i1 @_ZNK5blink7DecimalgtERKS0_(%"class.blink::Decimal"* nonnull %13, %"class.blink::Decimal"* nonnull dereferenceable(24) %36) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %333) #10
  br i1 %334, label %335, label %337

335:                                              ; preds = %332
  %336 = call dereferenceable(24) %"class.blink::Decimal"* @_ZN5blink7DecimalaSERKS0_(%"class.blink::Decimal"* nonnull %13, %"class.blink::Decimal"* nonnull dereferenceable(24) %10) #10
  br label %337

337:                                              ; preds = %335, %332
  %338 = fcmp olt double %232, 0.000000e+00
  br i1 %338, label %339, label %341

339:                                              ; preds = %337
  %340 = call zeroext i1 @_ZNK5blink7DecimalltERKS0_(%"class.blink::Decimal"* %1, %"class.blink::Decimal"* nonnull dereferenceable(24) %13) #10
  br i1 %340, label %364, label %341

341:                                              ; preds = %339, %337
  %342 = fcmp ogt double %232, 0.000000e+00
  br i1 %342, label %343, label %345

343:                                              ; preds = %341
  %344 = call zeroext i1 @_ZNK5blink7DecimalgtERKS0_(%"class.blink::Decimal"* %1, %"class.blink::Decimal"* nonnull dereferenceable(24) %13) #10
  br i1 %344, label %364, label %345

345:                                              ; preds = %343, %341
  %346 = bitcast %"class.blink::InputType"* %0 to void (%"class.blink::InputType"*, %"class.blink::Decimal"*, i32, %"class.blink::ExceptionState"*)***
  %347 = load void (%"class.blink::InputType"*, %"class.blink::Decimal"*, i32, %"class.blink::ExceptionState"*)**, void (%"class.blink::InputType"*, %"class.blink::Decimal"*, i32, %"class.blink::ExceptionState"*)*** %346, align 8
  %348 = getelementptr inbounds void (%"class.blink::InputType"*, %"class.blink::Decimal"*, i32, %"class.blink::ExceptionState"*)*, void (%"class.blink::InputType"*, %"class.blink::Decimal"*, i32, %"class.blink::ExceptionState"*)** %347, i64 19
  %349 = load void (%"class.blink::InputType"*, %"class.blink::Decimal"*, i32, %"class.blink::ExceptionState"*)*, void (%"class.blink::InputType"*, %"class.blink::Decimal"*, i32, %"class.blink::ExceptionState"*)** %348, align 8
  call void %349(%"class.blink::InputType"* %0, %"class.blink::Decimal"* nonnull dereferenceable(24) %13, i32 %4, %"class.blink::ExceptionState"* dereferenceable(72) %5) #10
  %350 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %69, align 8
  %351 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %350, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %352 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %351, align 8
  %353 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %352, i64 0, i32 2, i32 0, i32 0
  %354 = load %"class.blink::Document"*, %"class.blink::Document"** %353, align 8
  %355 = call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %354) #10
  %356 = icmp eq %"class.blink::AXObjectCache"* %355, null
  br i1 %356, label %364, label %357

357:                                              ; preds = %345
  %358 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %69, align 8
  %359 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %358, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %360 = bitcast %"class.blink::AXObjectCache"* %355 to void (%"class.blink::AXObjectCache"*, %"class.blink::Node"*)***
  %361 = load void (%"class.blink::AXObjectCache"*, %"class.blink::Node"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::Node"*)*** %360, align 8
  %362 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::Node"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::Node"*)** %361, i64 37
  %363 = load void (%"class.blink::AXObjectCache"*, %"class.blink::Node"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::Node"*)** %362, align 8
  call void %363(%"class.blink::AXObjectCache"* nonnull %355, %"class.blink::Node"* %359) #10
  br label %364

364:                                              ; preds = %357, %345, %339, %343
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %67) #10
  %365 = call %"class.blink::ScopedEventQueue"* @_ZN5blink16ScopedEventQueue8InstanceEv() #10
  call void @_ZN5blink16ScopedEventQueue21DecrementScopingLevelEv(%"class.blink::ScopedEventQueue"* %365) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #10
  br label %366

366:                                              ; preds = %52, %364
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #10
  br label %367

367:                                              ; preds = %46, %366, %45
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %37) #10
  ret void
}

declare void @_ZNK5blink9StepRange18StepSnappedMaximumEv(%"class.blink::Decimal"* sret, %"class.blink::StepRange"*) local_unnamed_addr #2

declare void @_ZNK5blink7DecimaldvERKS0_(%"class.blink::Decimal"* sret, %"class.blink::Decimal"*, %"class.blink::Decimal"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZNK5blink7Decimal5FloorEv(%"class.blink::Decimal"* sret, %"class.blink::Decimal"*) local_unnamed_addr #2

declare void @_ZNK5blink7DecimalmlERKS0_(%"class.blink::Decimal"* sret, %"class.blink::Decimal"*, %"class.blink::Decimal"* dereferenceable(24)) local_unnamed_addr #2

declare dereferenceable(24) %"class.blink::Decimal"* @_ZN5blink7DecimalaSERKS0_(%"class.blink::Decimal"*, %"class.blink::Decimal"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZNK5blink7Decimal4CeilEv(%"class.blink::Decimal"* sret, %"class.blink::Decimal"*) local_unnamed_addr #2

declare void @_ZN5blink7Decimal10FromDoubleEd(%"class.blink::Decimal"* sret, double) local_unnamed_addr #2

declare void @_ZNK5blink9StepRange17AlignValueForStepERKNS_7DecimalES3_(%"class.blink::Decimal"* sret, %"class.blink::StepRange"*, %"class.blink::Decimal"* dereferenceable(24), %"class.blink::Decimal"* dereferenceable(24)) local_unnamed_addr #2

declare %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9InputType19GetAllowedValueStepEPNS_7DecimalE(%"class.blink::InputType"*, %"class.blink::Decimal"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::StepRange", align 8
  %4 = alloca %"class.blink::Decimal", align 8
  %5 = bitcast %"class.blink::StepRange"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %5) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 120, i1 false)
  %6 = bitcast %"class.blink::InputType"* %0 to void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)***
  %7 = load void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)**, void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)*, void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)** %7, i64 31
  %9 = load void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)*, void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)** %8, align 8
  call void %9(%"class.blink::StepRange"* nonnull sret %3, %"class.blink::InputType"* %0, i32 0) #10
  %10 = bitcast %"class.blink::Decimal"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"class.blink::StepRange", %"class.blink::StepRange"* %3, i64 0, i32 2
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %4, %"class.blink::Decimal"* dereferenceable(24) %11) #10
  %12 = call dereferenceable(24) %"class.blink::Decimal"* @_ZN5blink7DecimalaSERKS0_(%"class.blink::Decimal"* %1, %"class.blink::Decimal"* nonnull dereferenceable(24) %4) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #10
  %13 = getelementptr inbounds %"class.blink::StepRange", %"class.blink::StepRange"* %3, i64 0, i32 5
  %14 = load i8, i8* %13, align 8, !range !12
  %15 = icmp ne i8 %14, 0
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %5) #10
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9InputType15CreateStepRangeENS_15AnyStepHandlingE(%"class.blink::StepRange"* noalias sret, %"class.blink::InputType"* nocapture readnone, i32) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink9StepRangeC1Ev(%"class.blink::StepRange"* %0) #10
  ret void
}

declare void @_ZN5blink9StepRangeC1Ev(%"class.blink::StepRange"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9InputType6StepUpEdRNS_14ExceptionStateE(%"class.blink::InputType"*, double, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::Decimal", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.blink::Decimal", align 8
  %7 = bitcast %"class.blink::InputType"* %0 to i1 (%"class.blink::InputType"*)***
  %8 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %8, i64 67
  %10 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.blink::InputType"* %0) #10
  br i1 %11, label %13, label %12

12:                                               ; preds = %3
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 11, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4, i64 0, i64 0)) #10
  br label %46

13:                                               ; preds = %3
  %14 = bitcast %"class.blink::Decimal"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #10
  %15 = bitcast %"class.WTF::String"* %5 to i8*
  %16 = bitcast %"class.blink::Decimal"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #10
  %17 = getelementptr inbounds %"class.blink::InputType", %"class.blink::InputType"* %0, i64 0, i32 1, i32 0, i32 0
  %18 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %17, align 8
  %19 = bitcast %"class.blink::HTMLInputElement"* %18 to %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)***
  %20 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)**, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %20, i64 195
  %22 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %21, align 8
  %23 = tail call %"class.WTF::StringImpl"* %22(%"class.blink::HTMLInputElement"* %18) #10
  %24 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %23, %"class.WTF::StringImpl"** %24, align 8
  %25 = bitcast %"class.blink::Decimal"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #10
  call void @_ZN5blink7DecimalC1Ei(%"class.blink::Decimal"* nonnull %6, i32 0) #10
  %26 = bitcast %"class.blink::InputType"* %0 to void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)***
  %27 = load void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)**, void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)*, void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)** %27, i64 79
  %29 = load void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)*, void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)** %28, align 8
  call void %29(%"class.blink::Decimal"* nonnull sret %4, %"class.blink::InputType"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.blink::Decimal"* nonnull dereferenceable(24) %6) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #10
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %13
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %41

39:                                               ; preds = %32
  %40 = add i32 %38, -1
  store i32 %40, i32* %37, align 4
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi i32 [ %40, %39 ], [ %38, %32 ]
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #10
  br label %45

45:                                               ; preds = %13, %41, %44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #10
  call void @_ZN5blink9InputType9ApplyStepERKNS_7DecimalEdNS_15AnyStepHandlingENS_22TextFieldEventBehaviorERNS_14ExceptionStateE(%"class.blink::InputType"* %0, %"class.blink::Decimal"* nonnull dereferenceable(24) %4, double %1, i32 0, i32 0, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #10
  br label %46

46:                                               ; preds = %45, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9InputType22StepUpFromLayoutObjectEi(%"class.blink::InputType"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::Decimal", align 8
  %4 = alloca %"class.blink::StepRange", align 8
  %5 = alloca %"class.blink::Decimal", align 8
  %6 = alloca %"class.blink::Decimal", align 8
  %7 = alloca %"class.blink::Decimal", align 8
  %8 = alloca %"class.blink::Decimal", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.blink::Decimal", align 8
  %11 = alloca %"class.blink::Decimal", align 8
  %12 = alloca %"class.blink::Decimal", align 8
  %13 = alloca %"class.blink::Decimal", align 8
  %14 = alloca %"class.blink::Decimal", align 8
  %15 = alloca %"class.blink::Decimal", align 8
  %16 = alloca %"class.blink::Decimal", align 8
  %17 = alloca %"class.blink::Decimal", align 8
  %18 = alloca %"class.blink::Decimal", align 8
  %19 = alloca %"class.blink::Decimal", align 8
  %20 = alloca %"class.blink::Decimal", align 8
  %21 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %22 = alloca %"class.blink::Decimal", align 8
  %23 = alloca %"class.blink::Decimal", align 8
  %24 = alloca %"class.blink::Decimal", align 8
  %25 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %26 = alloca %"class.blink::Decimal", align 8
  %27 = alloca %"class.blink::Decimal", align 8
  %28 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %29 = bitcast %"class.blink::InputType"* %0 to i1 (%"class.blink::InputType"*)***
  %30 = load i1 (%"class.blink::InputType"*)**, i1 (%"class.blink::InputType"*)*** %29, align 8
  %31 = getelementptr inbounds i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %30, i64 67
  %32 = load i1 (%"class.blink::InputType"*)*, i1 (%"class.blink::InputType"*)** %31, align 8
  %33 = tail call zeroext i1 %32(%"class.blink::InputType"* %0) #10
  %34 = icmp ne i32 %1, 0
  %35 = and i1 %34, %33
  br i1 %35, label %36, label %299

36:                                               ; preds = %2
  %37 = bitcast %"class.blink::StepRange"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %37) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 120, i1 false)
  %38 = bitcast %"class.blink::InputType"* %0 to void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)***
  %39 = load void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)**, void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)*, void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)** %39, i64 31
  %41 = load void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)*, void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)** %40, align 8
  call void %41(%"class.blink::StepRange"* nonnull sret %4, %"class.blink::InputType"* %0, i32 1) #10
  %42 = getelementptr inbounds %"class.blink::StepRange", %"class.blink::StepRange"* %4, i64 0, i32 5
  %43 = load i8, i8* %42, align 8, !range !12
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %298, label %45

45:                                               ; preds = %36
  %46 = call %"class.blink::ScopedEventQueue"* @_ZN5blink16ScopedEventQueue8InstanceEv() #10
  call void @_ZN5blink16ScopedEventQueue21IncrementScopingLevelEv(%"class.blink::ScopedEventQueue"* %46) #10
  %47 = bitcast %"class.blink::Decimal"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #10
  %48 = getelementptr inbounds %"class.blink::StepRange", %"class.blink::StepRange"* %4, i64 0, i32 2
  %49 = bitcast %"class.blink::Decimal"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 24, i1 false)
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %5, %"class.blink::Decimal"* dereferenceable(24) %48) #10
  %50 = bitcast %"class.blink::Decimal"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #10
  call void @_ZN5blink7DecimalC1Ei(%"class.blink::Decimal"* nonnull %6, i32 0) #10
  %51 = call zeroext i1 @_ZNK5blink7DecimalgtERKS0_(%"class.blink::Decimal"* nonnull %5, %"class.blink::Decimal"* nonnull dereferenceable(24) %6) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #10
  br i1 %51, label %57, label %52

52:                                               ; preds = %45
  %53 = bitcast %"class.blink::Decimal"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #10
  call void @_ZN5blink7DecimalC1Ei(%"class.blink::Decimal"* nonnull %7, i32 0) #10
  %54 = call zeroext i1 @_ZNK5blink7DecimalltERKS0_(%"class.blink::Decimal"* nonnull %5, %"class.blink::Decimal"* nonnull dereferenceable(24) %7) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #10
  %55 = sub nsw i32 0, %1
  %56 = select i1 %54, i32 %55, i32 0
  br label %57

57:                                               ; preds = %52, %45
  %58 = phi i32 [ %1, %45 ], [ %56, %52 ]
  %59 = bitcast %"class.blink::Decimal"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #10
  %60 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %8, i64 0, i32 0, i32 3
  %61 = bitcast %"class.WTF::String"* %9 to i8*
  %62 = bitcast %"class.blink::Decimal"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %62, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #10
  %63 = getelementptr inbounds %"class.blink::InputType", %"class.blink::InputType"* %0, i64 0, i32 1, i32 0, i32 0
  %64 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %63, align 8
  %65 = bitcast %"class.blink::HTMLInputElement"* %64 to %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)***
  %66 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)**, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*** %65, align 8
  %67 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %66, i64 195
  %68 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %67, align 8
  %69 = call %"class.WTF::StringImpl"* %68(%"class.blink::HTMLInputElement"* %64) #10
  %70 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %69, %"class.WTF::StringImpl"** %70, align 8
  %71 = bitcast %"class.blink::Decimal"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #10, !noalias !22
  call void @_ZN5blink7Decimal3NanEv(%"class.blink::Decimal"* nonnull sret %3) #10, !noalias !22
  %72 = bitcast %"class.blink::InputType"* %0 to void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)***
  %73 = load void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)**, void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)*** %72, align 8, !noalias !22
  %74 = getelementptr inbounds void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)*, void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)** %73, i64 79
  %75 = load void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)*, void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)** %74, align 8, !noalias !22
  call void %75(%"class.blink::Decimal"* nonnull sret %8, %"class.blink::InputType"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %9, %"class.blink::Decimal"* nonnull dereferenceable(24) %3) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #10, !noalias !22
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %91, label %78

78:                                               ; preds = %57
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %87

85:                                               ; preds = %78
  %86 = add i32 %84, -1
  store i32 %86, i32* %83, align 4
  br label %87

87:                                               ; preds = %85, %78
  %88 = phi i32 [ %86, %85 ], [ %84, %78 ]
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %91

90:                                               ; preds = %87
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %76) #10
  br label %91

91:                                               ; preds = %57, %87, %90
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #10
  %92 = load i32, i32* %60, align 4
  %93 = and i32 %92, -3
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %171

95:                                               ; preds = %91
  %96 = bitcast %"class.blink::Decimal"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %96) #10
  %97 = bitcast %"class.blink::InputType"* %0 to void (%"class.blink::Decimal"*, %"class.blink::InputType"*)***
  %98 = load void (%"class.blink::Decimal"*, %"class.blink::InputType"*)**, void (%"class.blink::Decimal"*, %"class.blink::InputType"*)*** %97, align 8
  %99 = getelementptr inbounds void (%"class.blink::Decimal"*, %"class.blink::InputType"*)*, void (%"class.blink::Decimal"*, %"class.blink::InputType"*)** %98, i64 30
  %100 = load void (%"class.blink::Decimal"*, %"class.blink::InputType"*)*, void (%"class.blink::Decimal"*, %"class.blink::InputType"*)** %99, align 8
  call void %100(%"class.blink::Decimal"* nonnull sret %10, %"class.blink::InputType"* %0) #10
  %101 = call dereferenceable(24) %"class.blink::Decimal"* @_ZN5blink7DecimalaSERKS0_(%"class.blink::Decimal"* nonnull %8, %"class.blink::Decimal"* nonnull dereferenceable(24) %10) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %96) #10
  %102 = bitcast %"class.blink::Decimal"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %102) #10
  %103 = bitcast %"class.blink::Decimal"* %12 to i8*
  %104 = bitcast %"class.blink::Decimal"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %104, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %103) #10
  call void @_ZN5blink7DecimalC1Ei(%"class.blink::Decimal"* nonnull %12, i32 %1) #10
  call void @_ZNK5blink7DecimalmlERKS0_(%"class.blink::Decimal"* nonnull sret %11, %"class.blink::Decimal"* nonnull %5, %"class.blink::Decimal"* nonnull dereferenceable(24) %12) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %103) #10
  %105 = bitcast %"class.blink::Decimal"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %105) #10
  %106 = bitcast %"class.blink::Decimal"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %106) #10
  %107 = getelementptr inbounds %"class.blink::StepRange", %"class.blink::StepRange"* %4, i64 0, i32 1
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %14, %"class.blink::Decimal"* dereferenceable(24) %107) #10
  call void @_ZNK5blink7DecimalmiERKS0_(%"class.blink::Decimal"* nonnull sret %13, %"class.blink::Decimal"* nonnull %14, %"class.blink::Decimal"* nonnull dereferenceable(24) %11) #10
  %108 = call zeroext i1 @_ZNK5blink7DecimalltERKS0_(%"class.blink::Decimal"* nonnull %8, %"class.blink::Decimal"* nonnull dereferenceable(24) %13) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %106) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %105) #10
  br i1 %108, label %109, label %113

109:                                              ; preds = %95
  %110 = bitcast %"class.blink::Decimal"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %110) #10
  %111 = bitcast %"class.blink::Decimal"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %111) #10
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %16, %"class.blink::Decimal"* dereferenceable(24) %107) #10
  call void @_ZNK5blink7DecimalmiERKS0_(%"class.blink::Decimal"* nonnull sret %15, %"class.blink::Decimal"* nonnull %16, %"class.blink::Decimal"* nonnull dereferenceable(24) %11) #10
  %112 = call dereferenceable(24) %"class.blink::Decimal"* @_ZN5blink7DecimalaSERKS0_(%"class.blink::Decimal"* nonnull %8, %"class.blink::Decimal"* nonnull dereferenceable(24) %15) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %111) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %110) #10
  br label %113

113:                                              ; preds = %109, %95
  %114 = bitcast %"class.blink::Decimal"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %114) #10
  %115 = bitcast %"class.blink::Decimal"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %115) #10
  %116 = getelementptr inbounds %"class.blink::StepRange", %"class.blink::StepRange"* %4, i64 0, i32 0
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %18, %"class.blink::Decimal"* nonnull dereferenceable(24) %116) #10
  call void @_ZNK5blink7DecimalmiERKS0_(%"class.blink::Decimal"* nonnull sret %17, %"class.blink::Decimal"* nonnull %18, %"class.blink::Decimal"* nonnull dereferenceable(24) %11) #10
  %117 = call zeroext i1 @_ZNK5blink7DecimalgtERKS0_(%"class.blink::Decimal"* nonnull %8, %"class.blink::Decimal"* nonnull dereferenceable(24) %17) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %115) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %114) #10
  br i1 %117, label %118, label %122

118:                                              ; preds = %113
  %119 = bitcast %"class.blink::Decimal"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %119) #10
  %120 = bitcast %"class.blink::Decimal"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %120) #10
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %20, %"class.blink::Decimal"* nonnull dereferenceable(24) %116) #10
  call void @_ZNK5blink7DecimalmiERKS0_(%"class.blink::Decimal"* nonnull sret %19, %"class.blink::Decimal"* nonnull %20, %"class.blink::Decimal"* nonnull dereferenceable(24) %11) #10
  %121 = call dereferenceable(24) %"class.blink::Decimal"* @_ZN5blink7DecimalaSERKS0_(%"class.blink::Decimal"* nonnull %8, %"class.blink::Decimal"* nonnull dereferenceable(24) %19) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %120) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %119) #10
  br label %122

122:                                              ; preds = %118, %113
  %123 = bitcast %"class.blink::DummyExceptionStateForTesting"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %123) #10
  %124 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %21, i64 0, i32 0, i32 0
  %125 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %21, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %125, align 8
  %126 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %21, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %126, align 2
  %127 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %21, i64 0, i32 0, i32 1, i32 2
  %128 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %21, i64 0, i32 0, i32 5, i32 0, i32 0
  %129 = bitcast %"class.WTF::StringImpl"** %128 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %129, i8 0, i64 16, i1 false) #10
  %130 = bitcast i8** %127 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %130, i8 0, i64 36, i1 false) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %124, align 8
  %131 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %21, i64 0, i32 0
  %132 = bitcast %"class.blink::InputType"* %0 to void (%"class.blink::InputType"*, %"class.blink::Decimal"*, i32, %"class.blink::ExceptionState"*)***
  %133 = load void (%"class.blink::InputType"*, %"class.blink::Decimal"*, i32, %"class.blink::ExceptionState"*)**, void (%"class.blink::InputType"*, %"class.blink::Decimal"*, i32, %"class.blink::ExceptionState"*)*** %132, align 8
  %134 = getelementptr inbounds void (%"class.blink::InputType"*, %"class.blink::Decimal"*, i32, %"class.blink::ExceptionState"*)*, void (%"class.blink::InputType"*, %"class.blink::Decimal"*, i32, %"class.blink::ExceptionState"*)** %133, i64 19
  %135 = load void (%"class.blink::InputType"*, %"class.blink::Decimal"*, i32, %"class.blink::ExceptionState"*)*, void (%"class.blink::InputType"*, %"class.blink::Decimal"*, i32, %"class.blink::ExceptionState"*)** %134, align 8
  call void %135(%"class.blink::InputType"* %0, %"class.blink::Decimal"* nonnull dereferenceable(24) %8, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %131) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %124, align 8
  %136 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %21, i64 0, i32 0, i32 4
  %137 = load i32, i32* %136, align 8
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %140, label %139

139:                                              ; preds = %122
  call void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"* nonnull %131) #10
  br label %140

140:                                              ; preds = %122, %139
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %124, align 8
  %141 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %21, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %142 = load i64*, i64** %141, align 8
  %143 = icmp eq i64* %142, null
  br i1 %143, label %154, label %144

144:                                              ; preds = %140
  %145 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %21, i64 0, i32 0, i32 3
  %146 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %145, align 8
  %147 = bitcast %"class.v8::Isolate"* %146 to %"class.v8::internal::Isolate"*
  %148 = load i64, i64* %142, align 8
  %149 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %147, i64 %148) #10
  %150 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %146) #10
  br i1 %150, label %154, label %151

151:                                              ; preds = %144
  %152 = bitcast i64* %149 to %"class.v8::Value"*
  %153 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %146, %"class.v8::Value"* %152) #10
  br label %154

154:                                              ; preds = %151, %144, %140
  %155 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %128, align 8
  %156 = icmp eq %"class.WTF::StringImpl"* %155, null
  br i1 %156, label %170, label %157

157:                                              ; preds = %154
  %158 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %155, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = load atomic i32, i32* %158 monotonic, align 4
  %160 = and i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %155, i64 0, i32 0
  %163 = load i32, i32* %162, align 4
  br i1 %161, label %164, label %166

164:                                              ; preds = %157
  %165 = add i32 %163, -1
  store i32 %165, i32* %162, align 4
  br label %166

166:                                              ; preds = %164, %157
  %167 = phi i32 [ %165, %164 ], [ %163, %157 ]
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %169, label %170

169:                                              ; preds = %166
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %155) #10
  br label %170

170:                                              ; preds = %154, %166, %169
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %123) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %102) #10
  br label %171

171:                                              ; preds = %91, %170
  %172 = icmp sgt i32 %58, 0
  %173 = bitcast %"class.blink::Decimal"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %173) #10
  %174 = bitcast %"class.blink::Decimal"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %174) #10
  br i1 %172, label %175, label %178

175:                                              ; preds = %171
  %176 = getelementptr inbounds %"class.blink::StepRange", %"class.blink::StepRange"* %4, i64 0, i32 1
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %22, %"class.blink::Decimal"* dereferenceable(24) %176) #10
  %177 = call zeroext i1 @_ZNK5blink7DecimalltERKS0_(%"class.blink::Decimal"* nonnull %8, %"class.blink::Decimal"* nonnull dereferenceable(24) %22) #10
  br i1 %177, label %188, label %242

178:                                              ; preds = %171
  %179 = icmp slt i32 %58, 0
  br i1 %179, label %180, label %242

180:                                              ; preds = %178
  %181 = getelementptr inbounds %"class.blink::StepRange", %"class.blink::StepRange"* %4, i64 0, i32 0
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %23, %"class.blink::Decimal"* nonnull dereferenceable(24) %181) #10
  %182 = call zeroext i1 @_ZNK5blink7DecimalgtERKS0_(%"class.blink::Decimal"* nonnull %8, %"class.blink::Decimal"* nonnull dereferenceable(24) %23) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %174) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %173) #10
  br i1 %182, label %190, label %183

183:                                              ; preds = %180
  %184 = bitcast %"class.blink::Decimal"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %184) #10
  %185 = bitcast %"class.blink::Decimal"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %185) #10
  %186 = getelementptr inbounds %"class.blink::StepRange", %"class.blink::StepRange"* %4, i64 0, i32 1
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %27, %"class.blink::Decimal"* dereferenceable(24) %186) #10
  %187 = call zeroext i1 @_ZNK5blink7DecimalleERKS0_(%"class.blink::Decimal"* nonnull %8, %"class.blink::Decimal"* nonnull dereferenceable(24) %27) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %185) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %184) #10
  br i1 %187, label %296, label %250

188:                                              ; preds = %175
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %174) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %173) #10
  %189 = bitcast %"class.blink::Decimal"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %189) #10
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %24, %"class.blink::Decimal"* dereferenceable(24) %176) #10
  br label %192

190:                                              ; preds = %180
  %191 = bitcast %"class.blink::Decimal"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %191) #10
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %24, %"class.blink::Decimal"* nonnull dereferenceable(24) %181) #10
  br label %192

192:                                              ; preds = %190, %188
  %193 = phi i8* [ %191, %190 ], [ %189, %188 ]
  %194 = bitcast %"class.blink::DummyExceptionStateForTesting"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %194) #10
  %195 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %25, i64 0, i32 0, i32 0
  %196 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %25, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %196, align 8
  %197 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %25, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %197, align 2
  %198 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %25, i64 0, i32 0, i32 1, i32 2
  %199 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %25, i64 0, i32 0, i32 5, i32 0, i32 0
  %200 = bitcast %"class.WTF::StringImpl"** %199 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %200, i8 0, i64 16, i1 false) #10
  %201 = bitcast i8** %198 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %201, i8 0, i64 36, i1 false) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %195, align 8
  %202 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %25, i64 0, i32 0
  %203 = bitcast %"class.blink::InputType"* %0 to void (%"class.blink::InputType"*, %"class.blink::Decimal"*, i32, %"class.blink::ExceptionState"*)***
  %204 = load void (%"class.blink::InputType"*, %"class.blink::Decimal"*, i32, %"class.blink::ExceptionState"*)**, void (%"class.blink::InputType"*, %"class.blink::Decimal"*, i32, %"class.blink::ExceptionState"*)*** %203, align 8
  %205 = getelementptr inbounds void (%"class.blink::InputType"*, %"class.blink::Decimal"*, i32, %"class.blink::ExceptionState"*)*, void (%"class.blink::InputType"*, %"class.blink::Decimal"*, i32, %"class.blink::ExceptionState"*)** %204, i64 19
  %206 = load void (%"class.blink::InputType"*, %"class.blink::Decimal"*, i32, %"class.blink::ExceptionState"*)*, void (%"class.blink::InputType"*, %"class.blink::Decimal"*, i32, %"class.blink::ExceptionState"*)** %205, align 8
  call void %206(%"class.blink::InputType"* %0, %"class.blink::Decimal"* nonnull dereferenceable(24) %24, i32 1, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %202) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %195, align 8
  %207 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %25, i64 0, i32 0, i32 4
  %208 = load i32, i32* %207, align 8
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %211, label %210

210:                                              ; preds = %192
  call void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"* nonnull %202) #10
  br label %211

211:                                              ; preds = %192, %210
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %195, align 8
  %212 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %25, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %213 = load i64*, i64** %212, align 8
  %214 = icmp eq i64* %213, null
  br i1 %214, label %225, label %215

215:                                              ; preds = %211
  %216 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %25, i64 0, i32 0, i32 3
  %217 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %216, align 8
  %218 = bitcast %"class.v8::Isolate"* %217 to %"class.v8::internal::Isolate"*
  %219 = load i64, i64* %213, align 8
  %220 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %218, i64 %219) #10
  %221 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %217) #10
  br i1 %221, label %225, label %222

222:                                              ; preds = %215
  %223 = bitcast i64* %220 to %"class.v8::Value"*
  %224 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %217, %"class.v8::Value"* %223) #10
  br label %225

225:                                              ; preds = %222, %215, %211
  %226 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %199, align 8
  %227 = icmp eq %"class.WTF::StringImpl"* %226, null
  br i1 %227, label %241, label %228

228:                                              ; preds = %225
  %229 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %226, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %230 = load atomic i32, i32* %229 monotonic, align 4
  %231 = and i32 %230, 2
  %232 = icmp eq i32 %231, 0
  %233 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %226, i64 0, i32 0
  %234 = load i32, i32* %233, align 4
  br i1 %232, label %235, label %237

235:                                              ; preds = %228
  %236 = add i32 %234, -1
  store i32 %236, i32* %233, align 4
  br label %237

237:                                              ; preds = %235, %228
  %238 = phi i32 [ %236, %235 ], [ %234, %228 ]
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %240, label %241

240:                                              ; preds = %237
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %226) #10
  br label %241

241:                                              ; preds = %225, %237, %240
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %194) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %193) #10
  br label %296

242:                                              ; preds = %175, %178
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %174) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %173) #10
  %243 = bitcast %"class.blink::Decimal"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %243) #10
  %244 = bitcast %"class.blink::Decimal"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %244) #10
  br i1 %172, label %245, label %249

245:                                              ; preds = %242
  %246 = getelementptr inbounds %"class.blink::StepRange", %"class.blink::StepRange"* %4, i64 0, i32 0
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %26, %"class.blink::Decimal"* nonnull dereferenceable(24) %246) #10
  %247 = call zeroext i1 @_ZNK5blink7DecimalgeERKS0_(%"class.blink::Decimal"* nonnull %8, %"class.blink::Decimal"* nonnull dereferenceable(24) %26) #10
  br i1 %247, label %248, label %249

248:                                              ; preds = %245
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %244) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %243) #10
  br label %296

249:                                              ; preds = %242, %245
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %244) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %243) #10
  br label %250

250:                                              ; preds = %249, %183
  %251 = sitofp i32 %1 to double
  %252 = bitcast %"class.blink::DummyExceptionStateForTesting"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %252) #10
  %253 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %28, i64 0, i32 0, i32 0
  %254 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %28, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %254, align 8
  %255 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %28, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %255, align 2
  %256 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %28, i64 0, i32 0, i32 1, i32 2
  %257 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %28, i64 0, i32 0, i32 5, i32 0, i32 0
  %258 = bitcast %"class.WTF::StringImpl"** %257 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %258, i8 0, i64 16, i1 false) #10
  %259 = bitcast i8** %256 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %259, i8 0, i64 36, i1 false) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %253, align 8
  %260 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %28, i64 0, i32 0
  call void @_ZN5blink9InputType9ApplyStepERKNS_7DecimalEdNS_15AnyStepHandlingENS_22TextFieldEventBehaviorERNS_14ExceptionStateE(%"class.blink::InputType"* %0, %"class.blink::Decimal"* nonnull dereferenceable(24) %8, double %251, i32 1, i32 1, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %260)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %253, align 8
  %261 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %28, i64 0, i32 0, i32 4
  %262 = load i32, i32* %261, align 8
  %263 = icmp eq i32 %262, 0
  br i1 %263, label %265, label %264

264:                                              ; preds = %250
  call void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"* nonnull %260) #10
  br label %265

265:                                              ; preds = %250, %264
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %253, align 8
  %266 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %28, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %267 = load i64*, i64** %266, align 8
  %268 = icmp eq i64* %267, null
  br i1 %268, label %279, label %269

269:                                              ; preds = %265
  %270 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %28, i64 0, i32 0, i32 3
  %271 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %270, align 8
  %272 = bitcast %"class.v8::Isolate"* %271 to %"class.v8::internal::Isolate"*
  %273 = load i64, i64* %267, align 8
  %274 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %272, i64 %273) #10
  %275 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %271) #10
  br i1 %275, label %279, label %276

276:                                              ; preds = %269
  %277 = bitcast i64* %274 to %"class.v8::Value"*
  %278 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %271, %"class.v8::Value"* %277) #10
  br label %279

279:                                              ; preds = %276, %269, %265
  %280 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %257, align 8
  %281 = icmp eq %"class.WTF::StringImpl"* %280, null
  br i1 %281, label %295, label %282

282:                                              ; preds = %279
  %283 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %280, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %284 = load atomic i32, i32* %283 monotonic, align 4
  %285 = and i32 %284, 2
  %286 = icmp eq i32 %285, 0
  %287 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %280, i64 0, i32 0
  %288 = load i32, i32* %287, align 4
  br i1 %286, label %289, label %291

289:                                              ; preds = %282
  %290 = add i32 %288, -1
  store i32 %290, i32* %287, align 4
  br label %291

291:                                              ; preds = %289, %282
  %292 = phi i32 [ %290, %289 ], [ %288, %282 ]
  %293 = icmp eq i32 %292, 0
  br i1 %293, label %294, label %295

294:                                              ; preds = %291
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %280) #10
  br label %295

295:                                              ; preds = %279, %291, %294
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %252) #10
  br label %296

296:                                              ; preds = %183, %248, %295, %241
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #10
  %297 = call %"class.blink::ScopedEventQueue"* @_ZN5blink16ScopedEventQueue8InstanceEv() #10
  call void @_ZN5blink16ScopedEventQueue21DecrementScopingLevelEv(%"class.blink::ScopedEventQueue"* %297) #10
  br label %298

298:                                              ; preds = %36, %296
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %37) #10
  br label %299

299:                                              ; preds = %2, %298
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9InputType19CountUsageIfVisibleENS_5mojom10WebFeatureE(%"class.blink::InputType"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InputType", %"class.blink::InputType"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 12
  %8 = icmp eq i32 %7, 0
  %9 = and i32 %6, 1
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %8, label %12, label %23

12:                                               ; preds = %2
  br i1 %10, label %19, label %13

13:                                               ; preds = %12
  %14 = bitcast %"class.blink::NodeData"** %11 to %"class.blink::NodeRareData"**
  %15 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %15, i64 0, i32 1, i32 0, i32 0
  %17 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %17, i64 0, i32 2, i32 0
  br label %38

19:                                               ; preds = %12
  %20 = bitcast %"class.blink::NodeData"** %11 to %"class.blink::NodeRenderingData"**
  %21 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %21, i64 0, i32 2, i32 0
  br label %38

23:                                               ; preds = %2
  br i1 %10, label %28, label %24

24:                                               ; preds = %23
  %25 = bitcast %"class.blink::NodeData"** %11 to %"class.blink::NodeRareData"**
  %26 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %26, i64 0, i32 1, i32 0, i32 0
  br label %30

28:                                               ; preds = %23
  %29 = bitcast %"class.blink::NodeData"** %11 to %"class.blink::NodeRenderingData"**
  br label %30

30:                                               ; preds = %28, %24
  %31 = phi %"class.blink::NodeRenderingData"** [ %27, %24 ], [ %29, %28 ]
  %32 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %32, i64 0, i32 1
  %34 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %33, align 8
  %35 = icmp eq %"class.blink::LayoutObject"* %34, null
  br i1 %35, label %58, label %36

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %34, i64 0, i32 5, i32 0
  br label %38

38:                                               ; preds = %13, %19, %36
  %39 = phi %"class.blink::ComputedStyle"** [ %37, %36 ], [ %18, %13 ], [ %22, %19 ]
  %40 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %39, align 8
  %41 = icmp eq %"class.blink::ComputedStyle"* %40, null
  br i1 %41, label %58, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %40, i64 0, i32 0, i32 9
  %44 = bitcast [20 x i8]* %43 to i160*
  %45 = load i160, i160* %44, align 8
  %46 = and i160 %45, 3802951800684688204490109616128
  %47 = icmp eq i160 %46, 0
  br i1 %47, label %58, label %48

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %50 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %50, i64 0, i32 2, i32 0, i32 0
  %52 = load %"class.blink::Document"*, %"class.blink::Document"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %52, i64 0, i32 2
  %54 = bitcast %"class.blink::UseCounter"* %53 to void (%"class.blink::UseCounter"*, i32)***
  %55 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %55, i64 3
  %57 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %56, align 8
  tail call void %57(%"class.blink::UseCounter"* %53, i32 %1) #10
  br label %58

58:                                               ; preds = %30, %42, %38, %48
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9InputType12FindStepBaseERKNS_7DecimalE(%"class.blink::Decimal"* noalias sret, %"class.blink::InputType"*, %"class.blink::Decimal"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::Decimal", align 8
  %5 = alloca %"class.blink::Decimal", align 8
  %6 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %0, i64 0, i32 0, i32 3
  %7 = getelementptr inbounds %"class.blink::InputType", %"class.blink::InputType"* %1, i64 0, i32 1, i32 0, i32 0
  %8 = bitcast %"class.blink::Decimal"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 -86, i64 24, i1 false)
  %9 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %7, align 8
  %10 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kMinAttrE, align 8
  %11 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %11, align 8
  %13 = icmp eq %"class.blink::ElementData"* %12, null
  br i1 %13, label %64, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %12, i64 0, i32 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %14
  %20 = bitcast %"class.blink::ElementData"* %12 to %"class.blink::UniqueElementData"*
  %21 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %12, i64 1, i32 1
  %22 = bitcast %"class.blink::Member.18"* %21 to %"class.blink::Attribute"**
  %23 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %20, i64 0, i32 2, i32 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  br label %31

26:                                               ; preds = %14
  %27 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %12, i64 1
  %28 = bitcast %"class.blink::ElementData"* %27 to %"class.blink::Attribute"*
  %29 = lshr i32 %16, 1
  %30 = and i32 %29, 268435455
  br label %31

31:                                               ; preds = %26, %19
  %32 = phi %"class.blink::Attribute"* [ %28, %26 ], [ %23, %19 ]
  %33 = phi i32 [ %30, %26 ], [ %25, %19 ]
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %32, i64 %34
  %36 = icmp eq i32 %33, 0
  br i1 %36, label %64, label %37

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %10, i64 0, i32 0, i32 0
  %39 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 3, i32 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %42

42:                                               ; preds = %57, %37
  %43 = phi %"class.blink::Attribute"* [ %32, %37 ], [ %58, %57 ]
  %44 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %43, i64 0, i32 0, i32 0, i32 0
  %45 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %44, align 8
  %46 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %45, %39
  br i1 %46, label %60, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %45, i64 0, i32 3, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %49, %50
  br i1 %51, label %52, label %57

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %45, i64 0, i32 4, i32 0, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %54, %55
  br i1 %56, label %60, label %57

57:                                               ; preds = %52, %47
  %58 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %43, i64 1
  %59 = icmp eq %"class.blink::Attribute"* %58, %35
  br i1 %59, label %64, label %42

60:                                               ; preds = %52, %42
  %61 = icmp eq %"class.blink::Attribute"* %43, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %60
  %63 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %43, i64 0, i32 1
  br label %66

64:                                               ; preds = %57, %60, %31, %3
  %65 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %66

66:                                               ; preds = %62, %64
  %67 = phi %"class.WTF::AtomicString"* [ %65, %64 ], [ %63, %62 ]
  %68 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %67, i64 0, i32 0
  %69 = bitcast %"class.blink::Decimal"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %69) #10
  call void @_ZN5blink7Decimal3NanEv(%"class.blink::Decimal"* nonnull sret %4) #10
  %70 = bitcast %"class.blink::InputType"* %1 to void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)***
  %71 = load void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)**, void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)*** %70, align 8
  %72 = getelementptr inbounds void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)*, void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)** %71, i64 79
  %73 = load void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)*, void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)** %72, align 8
  call void %73(%"class.blink::Decimal"* sret %0, %"class.blink::InputType"* %1, %"class.WTF::String"* dereferenceable(8) %68, %"class.blink::Decimal"* nonnull dereferenceable(24) %4) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69) #10
  %74 = load i32, i32* %6, align 4
  %75 = and i32 %74, -3
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %143

77:                                               ; preds = %66
  %78 = bitcast %"class.blink::Decimal"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %78) #10
  %79 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %7, align 8
  %80 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kValueAttrE, align 8
  %81 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %79, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %82 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %81, align 8
  %83 = icmp eq %"class.blink::ElementData"* %82, null
  br i1 %83, label %134, label %84

84:                                               ; preds = %77
  %85 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %82, i64 0, i32 0, i32 0, i32 0
  %86 = load i32, i32* %85, align 4
  %87 = and i32 %86, 1
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %96, label %89

89:                                               ; preds = %84
  %90 = bitcast %"class.blink::ElementData"* %82 to %"class.blink::UniqueElementData"*
  %91 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %82, i64 1, i32 1
  %92 = bitcast %"class.blink::Member.18"* %91 to %"class.blink::Attribute"**
  %93 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %92, align 8
  %94 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %90, i64 0, i32 2, i32 0, i32 0, i32 2
  %95 = load i32, i32* %94, align 4
  br label %101

96:                                               ; preds = %84
  %97 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %82, i64 1
  %98 = bitcast %"class.blink::ElementData"* %97 to %"class.blink::Attribute"*
  %99 = lshr i32 %86, 1
  %100 = and i32 %99, 268435455
  br label %101

101:                                              ; preds = %96, %89
  %102 = phi %"class.blink::Attribute"* [ %98, %96 ], [ %93, %89 ]
  %103 = phi i32 [ %100, %96 ], [ %95, %89 ]
  %104 = zext i32 %103 to i64
  %105 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %102, i64 %104
  %106 = icmp eq i32 %103, 0
  br i1 %106, label %134, label %107

107:                                              ; preds = %101
  %108 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %80, i64 0, i32 0, i32 0
  %109 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %108, align 8
  %110 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %109, i64 0, i32 3, i32 0, i32 0, i32 0
  %111 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %109, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %112

112:                                              ; preds = %127, %107
  %113 = phi %"class.blink::Attribute"* [ %102, %107 ], [ %128, %127 ]
  %114 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %113, i64 0, i32 0, i32 0, i32 0
  %115 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %114, align 8
  %116 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %115, %109
  br i1 %116, label %130, label %117

117:                                              ; preds = %112
  %118 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %115, i64 0, i32 3, i32 0, i32 0, i32 0
  %119 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %118, align 8
  %120 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %110, align 8
  %121 = icmp eq %"class.WTF::StringImpl"* %119, %120
  br i1 %121, label %122, label %127

122:                                              ; preds = %117
  %123 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %115, i64 0, i32 4, i32 0, i32 0, i32 0
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %123, align 8
  %125 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %111, align 8
  %126 = icmp eq %"class.WTF::StringImpl"* %124, %125
  br i1 %126, label %130, label %127

127:                                              ; preds = %122, %117
  %128 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %113, i64 1
  %129 = icmp eq %"class.blink::Attribute"* %128, %105
  br i1 %129, label %134, label %112

130:                                              ; preds = %122, %112
  %131 = icmp eq %"class.blink::Attribute"* %113, null
  br i1 %131, label %134, label %132

132:                                              ; preds = %130
  %133 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %113, i64 0, i32 1
  br label %136

134:                                              ; preds = %127, %130, %101, %77
  %135 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %136

136:                                              ; preds = %132, %134
  %137 = phi %"class.WTF::AtomicString"* [ %135, %134 ], [ %133, %132 ]
  %138 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %137, i64 0, i32 0
  %139 = load void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)**, void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)*** %70, align 8
  %140 = getelementptr inbounds void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)*, void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)** %139, i64 79
  %141 = load void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)*, void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)** %140, align 8
  call void %141(%"class.blink::Decimal"* nonnull sret %5, %"class.blink::InputType"* %1, %"class.WTF::String"* dereferenceable(8) %138, %"class.blink::Decimal"* dereferenceable(24) %2) #10
  %142 = call dereferenceable(24) %"class.blink::Decimal"* @_ZN5blink7DecimalaSERKS0_(%"class.blink::Decimal"* %0, %"class.blink::Decimal"* nonnull dereferenceable(24) %5) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %78) #10
  br label %143

143:                                              ; preds = %66, %136
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9InputType25CreateReversibleStepRangeENS_15AnyStepHandlingERKNS_7DecimalES4_S4_RKNS_9StepRange15StepDescriptionE(%"class.blink::StepRange"* noalias sret, %"class.blink::InputType"*, i32, %"class.blink::Decimal"* dereferenceable(24), %"class.blink::Decimal"* dereferenceable(24), %"class.blink::Decimal"* dereferenceable(24), %"struct.blink::StepRange::StepDescription"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  tail call void @_ZNK5blink9InputType15CreateStepRangeENS_15AnyStepHandlingERKNS_7DecimalES4_S4_RKNS_9StepRange15StepDescriptionEb(%"class.blink::StepRange"* sret %0, %"class.blink::InputType"* %1, i32 %2, %"class.blink::Decimal"* dereferenceable(24) %3, %"class.blink::Decimal"* dereferenceable(24) %4, %"class.blink::Decimal"* dereferenceable(24) %5, %"struct.blink::StepRange::StepDescription"* dereferenceable(16) %6, i1 zeroext true)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9InputType15CreateStepRangeENS_15AnyStepHandlingERKNS_7DecimalES4_S4_RKNS_9StepRange15StepDescriptionEb(%"class.blink::StepRange"* noalias sret, %"class.blink::InputType"*, i32, %"class.blink::Decimal"* dereferenceable(24), %"class.blink::Decimal"* dereferenceable(24), %"class.blink::Decimal"* dereferenceable(24), %"struct.blink::StepRange::StepDescription"* dereferenceable(16), i1 zeroext) local_unnamed_addr #0 align 2 {
  %9 = alloca %"class.blink::Decimal", align 8
  %10 = alloca %"class.blink::Decimal", align 8
  %11 = alloca %"class.blink::Decimal", align 8
  %12 = alloca %"class.blink::Decimal", align 8
  %13 = alloca %"class.blink::Decimal", align 8
  %14 = alloca %"class.blink::Decimal", align 8
  %15 = bitcast %"class.blink::Decimal"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #10
  %16 = bitcast %"class.blink::Decimal"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 24, i1 false)
  call void @_ZNK5blink9InputType12FindStepBaseERKNS_7DecimalE(%"class.blink::Decimal"* nonnull sret %11, %"class.blink::InputType"* %1, %"class.blink::Decimal"* dereferenceable(24) %3)
  %17 = bitcast %"class.blink::Decimal"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #10
  %18 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %12, i64 0, i32 0, i32 3
  %19 = getelementptr inbounds %"class.blink::InputType", %"class.blink::InputType"* %1, i64 0, i32 1, i32 0, i32 0
  %20 = bitcast %"class.blink::Decimal"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 24, i1 false)
  %21 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %19, align 8
  %22 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kMinAttrE, align 8
  %23 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %24 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %23, align 8
  %25 = icmp eq %"class.blink::ElementData"* %24, null
  br i1 %25, label %76, label %26

26:                                               ; preds = %8
  %27 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %24, i64 0, i32 0, i32 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = and i32 %28, 1
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %26
  %32 = bitcast %"class.blink::ElementData"* %24 to %"class.blink::UniqueElementData"*
  %33 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %24, i64 1, i32 1
  %34 = bitcast %"class.blink::Member.18"* %33 to %"class.blink::Attribute"**
  %35 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %32, i64 0, i32 2, i32 0, i32 0, i32 2
  %37 = load i32, i32* %36, align 4
  br label %43

38:                                               ; preds = %26
  %39 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %24, i64 1
  %40 = bitcast %"class.blink::ElementData"* %39 to %"class.blink::Attribute"*
  %41 = lshr i32 %28, 1
  %42 = and i32 %41, 268435455
  br label %43

43:                                               ; preds = %38, %31
  %44 = phi %"class.blink::Attribute"* [ %40, %38 ], [ %35, %31 ]
  %45 = phi i32 [ %42, %38 ], [ %37, %31 ]
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %44, i64 %46
  %48 = icmp eq i32 %45, 0
  br i1 %48, label %76, label %49

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %22, i64 0, i32 0, i32 0
  %51 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %51, i64 0, i32 3, i32 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %51, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %54

54:                                               ; preds = %69, %49
  %55 = phi %"class.blink::Attribute"* [ %44, %49 ], [ %70, %69 ]
  %56 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %55, i64 0, i32 0, i32 0, i32 0
  %57 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %56, align 8
  %58 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %57, %51
  br i1 %58, label %72, label %59

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %57, i64 0, i32 3, i32 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %61, %62
  br i1 %63, label %64, label %69

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %57, i64 0, i32 4, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %66, %67
  br i1 %68, label %72, label %69

69:                                               ; preds = %64, %59
  %70 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %55, i64 1
  %71 = icmp eq %"class.blink::Attribute"* %70, %47
  br i1 %71, label %76, label %54

72:                                               ; preds = %64, %54
  %73 = icmp eq %"class.blink::Attribute"* %55, null
  br i1 %73, label %76, label %74

74:                                               ; preds = %72
  %75 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %55, i64 0, i32 1
  br label %78

76:                                               ; preds = %69, %72, %43, %8
  %77 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %78

78:                                               ; preds = %74, %76
  %79 = phi %"class.WTF::AtomicString"* [ %77, %76 ], [ %75, %74 ]
  %80 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %79, i64 0, i32 0
  %81 = bitcast %"class.blink::Decimal"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %81) #10, !noalias !25
  call void @_ZN5blink7Decimal3NanEv(%"class.blink::Decimal"* nonnull sret %9) #10, !noalias !25
  %82 = bitcast %"class.blink::InputType"* %1 to void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)***
  %83 = load void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)**, void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)*** %82, align 8, !noalias !25
  %84 = getelementptr inbounds void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)*, void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)** %83, i64 79
  %85 = load void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)*, void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)** %84, align 8, !noalias !25
  call void %85(%"class.blink::Decimal"* nonnull sret %12, %"class.blink::InputType"* %1, %"class.WTF::String"* dereferenceable(8) %80, %"class.blink::Decimal"* nonnull dereferenceable(24) %9) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %81) #10, !noalias !25
  %86 = load i32, i32* %18, align 4
  %87 = and i32 %86, -3
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %91

89:                                               ; preds = %78
  %90 = call dereferenceable(24) %"class.blink::Decimal"* @_ZN5blink7DecimalaSERKS0_(%"class.blink::Decimal"* nonnull %12, %"class.blink::Decimal"* dereferenceable(24) %4) #10
  br label %91

91:                                               ; preds = %78, %89
  %92 = phi i1 [ false, %89 ], [ true, %78 ]
  %93 = bitcast %"class.blink::Decimal"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %93) #10
  %94 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %13, i64 0, i32 0, i32 3
  %95 = bitcast %"class.blink::Decimal"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %95, i8 -86, i64 24, i1 false)
  %96 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %19, align 8
  %97 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kMaxAttrE, align 8
  %98 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %96, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %99 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %98, align 8
  %100 = icmp eq %"class.blink::ElementData"* %99, null
  br i1 %100, label %151, label %101

101:                                              ; preds = %91
  %102 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %99, i64 0, i32 0, i32 0, i32 0
  %103 = load i32, i32* %102, align 4
  %104 = and i32 %103, 1
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %113, label %106

106:                                              ; preds = %101
  %107 = bitcast %"class.blink::ElementData"* %99 to %"class.blink::UniqueElementData"*
  %108 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %99, i64 1, i32 1
  %109 = bitcast %"class.blink::Member.18"* %108 to %"class.blink::Attribute"**
  %110 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %109, align 8
  %111 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %107, i64 0, i32 2, i32 0, i32 0, i32 2
  %112 = load i32, i32* %111, align 4
  br label %118

113:                                              ; preds = %101
  %114 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %99, i64 1
  %115 = bitcast %"class.blink::ElementData"* %114 to %"class.blink::Attribute"*
  %116 = lshr i32 %103, 1
  %117 = and i32 %116, 268435455
  br label %118

118:                                              ; preds = %113, %106
  %119 = phi %"class.blink::Attribute"* [ %115, %113 ], [ %110, %106 ]
  %120 = phi i32 [ %117, %113 ], [ %112, %106 ]
  %121 = zext i32 %120 to i64
  %122 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %119, i64 %121
  %123 = icmp eq i32 %120, 0
  br i1 %123, label %151, label %124

124:                                              ; preds = %118
  %125 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %97, i64 0, i32 0, i32 0
  %126 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %125, align 8
  %127 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %126, i64 0, i32 3, i32 0, i32 0, i32 0
  %128 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %126, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %129

129:                                              ; preds = %144, %124
  %130 = phi %"class.blink::Attribute"* [ %119, %124 ], [ %145, %144 ]
  %131 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %130, i64 0, i32 0, i32 0, i32 0
  %132 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %131, align 8
  %133 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %132, %126
  br i1 %133, label %147, label %134

134:                                              ; preds = %129
  %135 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %132, i64 0, i32 3, i32 0, i32 0, i32 0
  %136 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %135, align 8
  %137 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %127, align 8
  %138 = icmp eq %"class.WTF::StringImpl"* %136, %137
  br i1 %138, label %139, label %144

139:                                              ; preds = %134
  %140 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %132, i64 0, i32 4, i32 0, i32 0, i32 0
  %141 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %140, align 8
  %142 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %128, align 8
  %143 = icmp eq %"class.WTF::StringImpl"* %141, %142
  br i1 %143, label %147, label %144

144:                                              ; preds = %139, %134
  %145 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %130, i64 1
  %146 = icmp eq %"class.blink::Attribute"* %145, %122
  br i1 %146, label %151, label %129

147:                                              ; preds = %139, %129
  %148 = icmp eq %"class.blink::Attribute"* %130, null
  br i1 %148, label %151, label %149

149:                                              ; preds = %147
  %150 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %130, i64 0, i32 1
  br label %153

151:                                              ; preds = %144, %147, %118, %91
  %152 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %153

153:                                              ; preds = %149, %151
  %154 = phi %"class.WTF::AtomicString"* [ %152, %151 ], [ %150, %149 ]
  %155 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %154, i64 0, i32 0
  %156 = bitcast %"class.blink::Decimal"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %156) #10, !noalias !28
  call void @_ZN5blink7Decimal3NanEv(%"class.blink::Decimal"* nonnull sret %10) #10, !noalias !28
  %157 = load void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)**, void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)*** %82, align 8, !noalias !28
  %158 = getelementptr inbounds void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)*, void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)** %157, i64 79
  %159 = load void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)*, void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)** %158, align 8, !noalias !28
  call void %159(%"class.blink::Decimal"* nonnull sret %13, %"class.blink::InputType"* %1, %"class.WTF::String"* dereferenceable(8) %155, %"class.blink::Decimal"* nonnull dereferenceable(24) %10) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %156) #10, !noalias !28
  %160 = load i32, i32* %94, align 4
  %161 = and i32 %160, -3
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %165

163:                                              ; preds = %153
  %164 = call dereferenceable(24) %"class.blink::Decimal"* @_ZN5blink7DecimalaSERKS0_(%"class.blink::Decimal"* nonnull %13, %"class.blink::Decimal"* dereferenceable(24) %5) #10
  br label %165

165:                                              ; preds = %153, %163
  %166 = phi i1 [ %92, %163 ], [ true, %153 ]
  %167 = bitcast %"class.blink::Decimal"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %167) #10
  %168 = bitcast %"class.blink::Decimal"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %168, i8 -86, i64 24, i1 false)
  %169 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %19, align 8
  %170 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kStepAttrE, align 8
  %171 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %169, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %172 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %171, align 8
  %173 = icmp eq %"class.blink::ElementData"* %172, null
  br i1 %173, label %224, label %174

174:                                              ; preds = %165
  %175 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %172, i64 0, i32 0, i32 0, i32 0
  %176 = load i32, i32* %175, align 4
  %177 = and i32 %176, 1
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %186, label %179

179:                                              ; preds = %174
  %180 = bitcast %"class.blink::ElementData"* %172 to %"class.blink::UniqueElementData"*
  %181 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %172, i64 1, i32 1
  %182 = bitcast %"class.blink::Member.18"* %181 to %"class.blink::Attribute"**
  %183 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %182, align 8
  %184 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %180, i64 0, i32 2, i32 0, i32 0, i32 2
  %185 = load i32, i32* %184, align 4
  br label %191

186:                                              ; preds = %174
  %187 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %172, i64 1
  %188 = bitcast %"class.blink::ElementData"* %187 to %"class.blink::Attribute"*
  %189 = lshr i32 %176, 1
  %190 = and i32 %189, 268435455
  br label %191

191:                                              ; preds = %186, %179
  %192 = phi %"class.blink::Attribute"* [ %188, %186 ], [ %183, %179 ]
  %193 = phi i32 [ %190, %186 ], [ %185, %179 ]
  %194 = zext i32 %193 to i64
  %195 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %192, i64 %194
  %196 = icmp eq i32 %193, 0
  br i1 %196, label %224, label %197

197:                                              ; preds = %191
  %198 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %170, i64 0, i32 0, i32 0
  %199 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %198, align 8
  %200 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %199, i64 0, i32 3, i32 0, i32 0, i32 0
  %201 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %199, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %202

202:                                              ; preds = %217, %197
  %203 = phi %"class.blink::Attribute"* [ %192, %197 ], [ %218, %217 ]
  %204 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %203, i64 0, i32 0, i32 0, i32 0
  %205 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %204, align 8
  %206 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %205, %199
  br i1 %206, label %220, label %207

207:                                              ; preds = %202
  %208 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %205, i64 0, i32 3, i32 0, i32 0, i32 0
  %209 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %208, align 8
  %210 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %200, align 8
  %211 = icmp eq %"class.WTF::StringImpl"* %209, %210
  br i1 %211, label %212, label %217

212:                                              ; preds = %207
  %213 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %205, i64 0, i32 4, i32 0, i32 0, i32 0
  %214 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %213, align 8
  %215 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %201, align 8
  %216 = icmp eq %"class.WTF::StringImpl"* %214, %215
  br i1 %216, label %220, label %217

217:                                              ; preds = %212, %207
  %218 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %203, i64 1
  %219 = icmp eq %"class.blink::Attribute"* %218, %195
  br i1 %219, label %224, label %202

220:                                              ; preds = %212, %202
  %221 = icmp eq %"class.blink::Attribute"* %203, null
  br i1 %221, label %224, label %222

222:                                              ; preds = %220
  %223 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %203, i64 0, i32 1
  br label %226

224:                                              ; preds = %217, %220, %191, %165
  %225 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %226

226:                                              ; preds = %222, %224
  %227 = phi %"class.WTF::AtomicString"* [ %225, %224 ], [ %223, %222 ]
  %228 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %227, i64 0, i32 0
  call void @_ZN5blink9StepRange9ParseStepENS_15AnyStepHandlingERKNS0_15StepDescriptionERKN3WTF6StringE(%"class.blink::Decimal"* nonnull sret %14, i32 %2, %"struct.blink::StepRange::StepDescription"* dereferenceable(16) %6, %"class.WTF::String"* dereferenceable(8) %228) #10
  %229 = and i1 %166, %7
  br i1 %229, label %230, label %232

230:                                              ; preds = %226
  %231 = call zeroext i1 @_ZNK5blink7DecimalltERKS0_(%"class.blink::Decimal"* nonnull %13, %"class.blink::Decimal"* nonnull dereferenceable(24) %12) #10
  br label %232

232:                                              ; preds = %226, %230
  %233 = phi i1 [ false, %226 ], [ %231, %230 ]
  call void @_ZN5blink9StepRangeC1ERKNS_7DecimalES3_S3_bbS3_RKNS0_15StepDescriptionE(%"class.blink::StepRange"* %0, %"class.blink::Decimal"* nonnull dereferenceable(24) %11, %"class.blink::Decimal"* nonnull dereferenceable(24) %12, %"class.blink::Decimal"* nonnull dereferenceable(24) %13, i1 zeroext %166, i1 zeroext %233, %"class.blink::Decimal"* nonnull dereferenceable(24) %14, %"struct.blink::StepRange::StepDescription"* dereferenceable(16) %6) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %167) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %93) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9InputType15CreateStepRangeENS_15AnyStepHandlingERKNS_7DecimalES4_S4_RKNS_9StepRange15StepDescriptionE(%"class.blink::StepRange"* noalias sret, %"class.blink::InputType"*, i32, %"class.blink::Decimal"* dereferenceable(24), %"class.blink::Decimal"* dereferenceable(24), %"class.blink::Decimal"* dereferenceable(24), %"struct.blink::StepRange::StepDescription"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  tail call void @_ZNK5blink9InputType15CreateStepRangeENS_15AnyStepHandlingERKNS_7DecimalES4_S4_RKNS_9StepRange15StepDescriptionEb(%"class.blink::StepRange"* sret %0, %"class.blink::InputType"* %1, i32 %2, %"class.blink::Decimal"* dereferenceable(24) %3, %"class.blink::Decimal"* dereferenceable(24) %4, %"class.blink::Decimal"* dereferenceable(24) %5, %"struct.blink::StepRange::StepDescription"* dereferenceable(16) %6, i1 zeroext false)
  ret void
}

declare void @_ZN5blink9StepRange9ParseStepENS_15AnyStepHandlingERKNS0_15StepDescriptionERKN3WTF6StringE(%"class.blink::Decimal"* sret, i32, %"struct.blink::StepRange::StepDescription"* dereferenceable(16), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink9StepRangeC1ERKNS_7DecimalES3_S3_bbS3_RKNS0_15StepDescriptionE(%"class.blink::StepRange"*, %"class.blink::Decimal"* dereferenceable(24), %"class.blink::Decimal"* dereferenceable(24), %"class.blink::Decimal"* dereferenceable(24), i1 zeroext, i1 zeroext, %"class.blink::Decimal"* dereferenceable(24), %"struct.blink::StepRange::StepDescription"* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9InputType19AddWarningToConsoleEPKcRKN3WTF6StringE(%"class.blink::InputType"* nocapture readonly, i8*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = getelementptr inbounds %"class.blink::InputType", %"class.blink::InputType"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %10, i64 0, i32 2, i32 0, i32 0
  %12 = load %"class.blink::Document"*, %"class.blink::Document"** %11, align 8
  %13 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #10
  %14 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #10
  %15 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #10
  %16 = tail call %"class.WTF::StringImpl"* @_ZN5blink9JSONValue11QuoteStringERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %2) #10
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %16, %"class.WTF::StringImpl"** %17, align 8
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %5, %"class.WTF::String"* nonnull %6, i32 0) #10
  %18 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = select i1 %21, i8* %23, i8* %14
  %25 = call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* %1, i8* %24) #10
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  %27 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #10
  %28 = bitcast i8* %27 to %"class.blink::ConsoleMessage"*
  %29 = call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #10
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %28, i32 6, i32 2, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::SourceLocation"* %29) #10
  %30 = getelementptr inbounds i8, i8* %27, i64 -4
  %31 = bitcast i8* %30 to i16*
  %32 = load atomic i16, i16* %31 monotonic, align 2
  %33 = or i16 %32, 1
  store atomic i16 %33, i16* %31 release, align 2
  call void @_ZNK5blink8Document17AddConsoleMessageEPNS_14ConsoleMessageEb(%"class.blink::Document"* %12, %"class.blink::ConsoleMessage"* %28, i1 zeroext false) #10
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %3
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #10
  br label %49

49:                                               ; preds = %3, %45, %48
  %50 = load i8, i8* %19, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %49
  %53 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %53) #12
  br label %54

54:                                               ; preds = %49, %52
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %56, label %70, label %57

57:                                               ; preds = %54
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %55) #10
  br label %70

70:                                               ; preds = %54, %66, %69
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #10
  ret void
}

declare void @_ZNK5blink8Document17AddConsoleMessageEPNS_14ConsoleMessageEb(%"class.blink::Document"*, %"class.blink::ConsoleMessage"*, i1 zeroext) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF6String6FormatEPKcz(i8*, ...) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink9JSONValue11QuoteStringERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*, i32) local_unnamed_addr #2

declare void @__cxa_pure_virtual() unnamed_addr

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #6

declare %"class.blink::ScopedEventQueue"* @_ZN5blink16ScopedEventQueue8InstanceEv() local_unnamed_addr #2

declare void @_ZN5blink16ScopedEventQueue21IncrementScopingLevelEv(%"class.blink::ScopedEventQueue"*) local_unnamed_addr #2

declare void @_ZN5blink16ScopedEventQueue21DecrementScopingLevelEv(%"class.blink::ScopedEventQueue"*) local_unnamed_addr #2

declare void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"*) unnamed_addr #2

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #2

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_9InputTypeEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_9InputTypeEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_9InputTypeEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_9InputTypeEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9InputTypeEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #8 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #10
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* %21, i8* %22) #10
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.6, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #10
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #10
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #10
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #9

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_9InputTypeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::InputType"*
  %4 = bitcast i8* %1 to void (%"class.blink::InputType"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::InputType"*, %"class.blink::Visitor"*)**, void (%"class.blink::InputType"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::InputType"*, %"class.blink::Visitor"*)*, void (%"class.blink::InputType"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::InputType"*, %"class.blink::Visitor"*)*, void (%"class.blink::InputType"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::InputType"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_9InputTypeEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::InputType"*
  %3 = bitcast i8* %0 to void (%"class.blink::InputType"*)***
  %4 = load void (%"class.blink::InputType"*)**, void (%"class.blink::InputType"*)*** %3, align 8
  %5 = load void (%"class.blink::InputType"*)*, void (%"class.blink::InputType"*)** %4, align 8
  tail call void %5(%"class.blink::InputType"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_9InputTypeEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

declare void @_ZN5blink17BaseTextInputTypeC2ERNS_16HTMLInputElementE(%"class.blink::BaseTextInputType"*, %"class.blink::HTMLInputElement"* dereferenceable(320)) unnamed_addr #2

declare void @_ZN5blink19BaseButtonInputTypeC2ERNS_16HTMLInputElementE(%"class.blink::BaseButtonInputType"*, %"class.blink::HTMLInputElement"* dereferenceable(320)) unnamed_addr #2

declare void @_ZN5blink14ColorInputTypeC1ERNS_16HTMLInputElementE(%"class.blink::ColorInputType"*, %"class.blink::HTMLInputElement"* dereferenceable(320)) unnamed_addr #2

declare void @_ZN5blink13DateInputTypeC1ERNS_16HTMLInputElementE(%"class.blink::DateInputType"*, %"class.blink::HTMLInputElement"* dereferenceable(320)) unnamed_addr #2

declare void @_ZN5blink14EmailInputTypeC1ERNS_16HTMLInputElementE(%"class.blink::EmailInputType"*, %"class.blink::HTMLInputElement"* dereferenceable(320)) unnamed_addr #2

declare void @_ZN5blink13FileInputTypeC1ERNS_16HTMLInputElementE(%"class.blink::FileInputType"*, %"class.blink::HTMLInputElement"* dereferenceable(320)) unnamed_addr #2

declare void @_ZN5blink14ImageInputTypeC1ERNS_16HTMLInputElementE(%"class.blink::ImageInputType"*, %"class.blink::HTMLInputElement"* dereferenceable(320)) unnamed_addr #2

declare void @_ZN5blink18TextFieldInputTypeC2ERNS_16HTMLInputElementE(%"class.blink::TextFieldInputType"*, %"class.blink::HTMLInputElement"* dereferenceable(320)) unnamed_addr #2

declare void @_ZN5blink14RangeInputTypeC1ERNS_16HTMLInputElementE(%"class.blink::RangeInputType"*, %"class.blink::HTMLInputElement"* dereferenceable(320)) unnamed_addr #2

declare void @_ZN5blink15SearchInputTypeC1ERNS_16HTMLInputElementE(%"class.blink::SearchInputType"*, %"class.blink::HTMLInputElement"* dereferenceable(320)) unnamed_addr #2

declare void @_ZN5blink15SubmitInputTypeC1ERNS_16HTMLInputElementE(%"class.blink::SubmitInputType"*, %"class.blink::HTMLInputElement"* dereferenceable(320)) unnamed_addr #2

declare void @_ZN5blink13TimeInputTypeC1ERNS_16HTMLInputElementE(%"class.blink::TimeInputType"*, %"class.blink::HTMLInputElement"* dereferenceable(320)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16HTMLInputElementEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::HTMLInputElement"*
  %4 = bitcast i8* %1 to void (%"class.blink::HTMLInputElement"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::HTMLInputElement"*, %"class.blink::Visitor"*)**, void (%"class.blink::HTMLInputElement"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::HTMLInputElement"*, %"class.blink::Visitor"*)*, void (%"class.blink::HTMLInputElement"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::HTMLInputElement"*, %"class.blink::Visitor"*)*, void (%"class.blink::HTMLInputElement"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::HTMLInputElement"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

declare %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #2

declare void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"*, i32, i32, %"class.WTF::String"* dereferenceable(8), %"class.blink::SourceLocation"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14ConsoleMessageEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ConsoleMessage"*
  tail call void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ConsoleMessage"*
  tail call void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"*, %"class.blink::Visitor"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"*) unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK5blink9InputType18ParseToNumberOrNaNERKN3WTF6StringE: argument 0"}
!5 = distinct !{!5, !"_ZNK5blink9InputType18ParseToNumberOrNaNERKN3WTF6StringE"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK5blink9InputType18ParseToNumberOrNaNERKN3WTF6StringE: argument 0"}
!8 = distinct !{!8, !"_ZNK5blink9InputType18ParseToNumberOrNaNERKN3WTF6StringE"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNK5blink9InputType18ParseToNumberOrNaNERKN3WTF6StringE: argument 0"}
!11 = distinct !{!11, !"_ZNK5blink9InputType18ParseToNumberOrNaNERKN3WTF6StringE"}
!12 = !{i8 0, i8 2}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNK5blink9InputType18ParseToNumberOrNaNERKN3WTF6StringE: argument 0"}
!15 = distinct !{!15, !"_ZNK5blink9InputType18ParseToNumberOrNaNERKN3WTF6StringE"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNK5blink9InputType18ParseToNumberOrNaNERKN3WTF6StringE: argument 0"}
!18 = distinct !{!18, !"_ZNK5blink9InputType18ParseToNumberOrNaNERKN3WTF6StringE"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZNK5blink9InputType18ParseToNumberOrNaNERKN3WTF6StringE: argument 0"}
!21 = distinct !{!21, !"_ZNK5blink9InputType18ParseToNumberOrNaNERKN3WTF6StringE"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZNK5blink9InputType18ParseToNumberOrNaNERKN3WTF6StringE: argument 0"}
!24 = distinct !{!24, !"_ZNK5blink9InputType18ParseToNumberOrNaNERKN3WTF6StringE"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZNK5blink9InputType18ParseToNumberOrNaNERKN3WTF6StringE: argument 0"}
!27 = distinct !{!27, !"_ZNK5blink9InputType18ParseToNumberOrNaNERKN3WTF6StringE"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZNK5blink9InputType18ParseToNumberOrNaNERKN3WTF6StringE: argument 0"}
!30 = distinct !{!30, !"_ZNK5blink9InputType18ParseToNumberOrNaNERKN3WTF6StringE"}
