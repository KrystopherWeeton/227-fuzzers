; ModuleID = '../../third_party/blink/renderer/core/animation/css_ray_interpolation_type.cc'
source_filename = "../../third_party/blink/renderer/core/animation/css_ray_interpolation_type.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.128", %"class.std::__1::unique_ptr.128", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.144", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.156", %"class.std::__1::unique_ptr.162", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.169", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.69", %"class.std::__1::unique_ptr.69", %"class.std::__1::unique_ptr.76", %"class.std::__1::unique_ptr.83", %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.113", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.33" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.33" = type { %"struct.std::__1::__atomic_base.34" }
%"struct.std::__1::__atomic_base.34" = type { %"struct.std::__1::__atomic_base.35" }
%"struct.std::__1::__atomic_base.35" = type { %"struct.std::__1::__cxx_atomic_impl.36" }
%"struct.std::__1::__cxx_atomic_impl.36" = type { %"struct.std::__1::__cxx_atomic_base_impl.37" }
%"struct.std::__1::__cxx_atomic_base_impl.37" = type { i64 }
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.blink::Worklist.44"* }
%"class.blink::Worklist.44" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.33" }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.blink::Worklist.51"* }
%"class.blink::Worklist.51" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.33" }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.blink::Worklist.58"* }
%"class.blink::Worklist.58" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.33" }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::Worklist.65"* }
%"class.blink::Worklist.65" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.33" }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.blink::Worklist.72"* }
%"class.blink::Worklist.72" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.33" }
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.blink::Worklist.79"* }
%"class.blink::Worklist.79" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.33" }
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.blink::Worklist.86"* }
%"class.blink::Worklist.86" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.33" }
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.93", %"class.std::__1::__compressed_pair.100", %"class.std::__1::__compressed_pair.105", %"class.std::__1::__compressed_pair.107", [4 x i8] }>
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95", %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { i64 }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { float }
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.116", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.136" }
%"class.WTF::VectorBuffer.136" = type { %"class.WTF::VectorBufferBase.137" }
%"class.WTF::VectorBufferBase.137" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.150" }
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.44"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.51"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.58"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.65"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.72"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.173" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.168 }
%class.scoped_refptr.168 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.169" = type { %"struct.std::__1::__atomic_base.170" }
%"struct.std::__1::__atomic_base.170" = type { %"struct.std::__1::__cxx_atomic_impl.171" }
%"struct.std::__1::__cxx_atomic_impl.171" = type { %"struct.std::__1::__cxx_atomic_base_impl.172" }
%"struct.std::__1::__cxx_atomic_base_impl.172" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::CSSRayInterpolationType" = type { %"class.blink::CSSInterpolationType" }
%"class.blink::CSSInterpolationType" = type { %"class.blink::InterpolationType", %"class.blink::WeakPersistent" }
%"class.blink::InterpolationType" = type { i32 (...)**, %"class.blink::PropertyHandle" }
%"class.blink::PropertyHandle" = type { i32, %union.anon, %"class.WTF::AtomicString" }
%union.anon = type { %"class.blink::CSSProperty"* }
%"class.blink::CSSProperty" = type <{ %"class.blink::CSSUnresolvedProperty", i32, i32, i8, [7 x i8] }>
%"class.blink::CSSUnresolvedProperty" = type { i32 (...)** }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::PropertyRegistration"*, %"class.blink::PersistentNodePtr" }
%"class.blink::PropertyRegistration" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::InterpolableValue" = type { i32 (...)** }
%"class.blink::NonInterpolableValue" = type <{ i32 (...)**, %"class.WTF::RefCounted.178", [4 x i8] }>
%"class.WTF::RefCounted.178" = type { %"class.base::RefCounted.179" }
%"class.base::RefCounted.179" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::StyleResolverState" = type <{ %"class.blink::ElementResolveContext", %"class.blink::Document"*, %class.scoped_refptr.703, %"class.blink::CSSToLengthConversionData", %class.scoped_refptr.204, %class.scoped_refptr.204, %"class.blink::CSSAnimationUpdate", i32, [4 x i8], %"class.blink::FontBuilder", %"class.blink::PseudoElement"*, %"class.blink::ElementStyleResources", i32, i8, i8, [2 x i8] }>
%"class.blink::ElementResolveContext" = type <{ %"class.blink::Element"*, %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"*, %class.scoped_refptr.204, i32, [4 x i8] }>
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.186" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.180", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.182" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.180" = type { %"class.blink::MemberBase.181" }
%"class.blink::MemberBase.181" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.354", %"class.blink::Member.356", %"class.blink::Member.180", %"class.blink::Member.358", %"class.blink::Member.358", %"class.blink::Member.382", %"class.blink::Member.384", %"class.blink::Member.386", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.391", %"class.blink::HeapVector.393" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.356" = type { %"class.blink::MemberBase.357" }
%"class.blink::MemberBase.357" = type { %"class.blink::Document"* }
%"class.blink::Member.358" = type { %"class.blink::MemberBase.359" }
%"class.blink::MemberBase.359" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.362" }
%"class.blink::HeapHashMap.362" = type { %"class.WTF::HashMap.365" }
%"class.WTF::HashMap.365" = type { %"class.WTF::HashTable.366" }
%"class.WTF::HashTable.366" = type <{ %"struct.WTF::KeyValuePair.368"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.368" = type { %"class.WTF::AtomicString", %"class.blink::Member.369" }
%"class.blink::Member.369" = type { %"class.blink::MemberBase.370" }
%"class.blink::MemberBase.370" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.373", i32, %"class.blink::HeapVector.375" }
%"class.blink::Member.373" = type { %"class.blink::MemberBase.374" }
%"class.blink::MemberBase.374" = type { %"class.blink::Element"* }
%"class.blink::HeapVector.375" = type { %"class.WTF::Vector.378" }
%"class.WTF::Vector.378" = type { %"class.WTF::VectorBuffer.379" }
%"class.WTF::VectorBuffer.379" = type { %"class.WTF::VectorBufferBase.380" }
%"class.WTF::VectorBufferBase.380" = type { %"class.blink::Member.373"*, i32, i32 }
%"class.blink::Member.382" = type { %"class.blink::MemberBase.383" }
%"class.blink::MemberBase.383" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.384" = type { %"class.blink::MemberBase.385" }
%"class.blink::MemberBase.385" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.386" = type { %"class.blink::MemberBase.387" }
%"class.blink::MemberBase.387" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.388" }
%"class.blink::Member.388" = type { %"class.blink::MemberBase.389" }
%"class.blink::MemberBase.389" = type { %"class.blink::HeapHashMap.390"* }
%"class.blink::HeapHashMap.390" = type opaque
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.393" = type { %"class.WTF::Vector.396" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.blink::Member.399"*, i32, i32 }
%"class.blink::Member.399" = type { %"class.blink::MemberBase.400" }
%"class.blink::MemberBase.400" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::Member.182" = type { %"class.blink::MemberBase.183" }
%"class.blink::MemberBase.183" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.186" = type { %"class.blink::MemberBase.187" }
%"class.blink::MemberBase.187" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.190", %"class.blink::Member.192", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.190" = type { %"class.WTF::SingleThreadedBitField.191" }
%"class.WTF::SingleThreadedBitField.191" = type { i32 }
%"class.blink::Member.192" = type { %"class.blink::MemberBase.193" }
%"class.blink::MemberBase.193" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.196 }
%class.scoped_refptr.196 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.197", %"class.WTF::AtomicString", %"class.WTF::Vector.199" }
%"class.WTF::RefCounted.197" = type { %"class.base::RefCounted.198" }
%"class.base::RefCounted.198" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.199" = type { %"class.WTF::VectorBuffer.200" }
%"class.WTF::VectorBuffer.200" = type { %"class.WTF::VectorBufferBase.201", [32 x i8] }
%"class.WTF::VectorBufferBase.201" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.966", %"class.WTF::Vector.966", i8, i32, %"class.blink::Member.973", %"class.blink::Member.975", %"class.blink::Member.977", %"class.blink::Member.979", %"class.blink::Member.981", %"class.blink::Member.983", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.991", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.997", %"class.blink::Member.999", %"class.blink::Member.399", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1002", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.375", %"class.blink::Member.373", %"class.blink::Member.1027", %"class.blink::Member.373", %"class.blink::Member.373", %"class.blink::Member.373", %"class.blink::UserActionElementSet", %"class.blink::Member.1036", double, double, i64, i64, %"class.blink::HeapHashSet.1038", %"class.blink::HeapHashSet.1045", i16, i8, %"class.blink::Member.1052", %"class.blink::Member.1054", %"class.blink::Member.1056", %"class.blink::Member.1058", %"class.blink::TextLinkColors", %"class.blink::Member.1060", i8, [7 x i8], %"class.blink::HeapHashMap.1062", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.373", %"class.WTF::Vector.1069", %"class.blink::Member.1074", %"class.blink::Member.1076", i8, %"class.blink::Member.373", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1078", %"class.blink::HeapVector.1080", %"class.std::__1::unique_ptr.1088", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1094", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1107", %"class.WTF::Vector.1109", i8, i8, %"class.std::__1::unique_ptr.1114", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.375", %"class.blink::HeapVector.1120", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1128", i8, i32, %"class.blink::Member.1130", %"class.blink::Member.1132", %"class.blink::Member.1134", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1136", %"class.WTF::HashMap.1138", %"class.blink::Member.1143", %"class.blink::Member.1145", %"class.blink::Member.1147", %"class.blink::Member.1149", %"class.blink::Member.356", %"class.blink::Member.356", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1151", i8, i32, %"class.blink::Member.1158", %"class.blink::Member.1160", i32, %"class.blink::Member.1162", %"class.blink::Member.1164", %"class.blink::Member.1166", %"class.std::__1::unique_ptr.1168", i64, %"class.std::__1::unique_ptr.1174", i32, i32, %"class.blink::Member.1189", %"class.blink::Member.1191", %"class.blink::Member.1193", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1195", %"class.WTF::Vector.1197", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1202", %"class.blink::Member.1209", %"class.std::__1::unique_ptr.1211", %"class.blink::Member.1217", i8, i8, %"class.WTF::String", %"class.blink::Member.1219", i8, [7 x i8], %"class.blink::HeapHashMap.1221", %"class.blink::HeapObserverSet.1228", %"class.blink::Member.1236", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1238", i32, i8, i8, %"class.blink::WeakMember.1240", %"class.blink::Member.1241" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.959" }
%"class.blink::HeapHashMap.959" = type { %"class.WTF::HashMap.962" }
%"class.WTF::HashMap.962" = type { %"class.WTF::HashTable.963" }
%"class.WTF::HashTable.963" = type <{ %"struct.WTF::KeyValuePair.965"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.965" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.966" = type { %"class.WTF::VectorBuffer.967" }
%"class.WTF::VectorBuffer.967" = type { %"class.WTF::VectorBufferBase.968" }
%"class.WTF::VectorBufferBase.968" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.969 }
%class.scoped_refptr.969 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.970", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.970" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.256" }
%"struct.std::__1::atomic.256" = type { %"struct.std::__1::__atomic_base.257" }
%"struct.std::__1::__atomic_base.257" = type { %"struct.std::__1::__atomic_base.258" }
%"struct.std::__1::__atomic_base.258" = type { %"struct.std::__1::__cxx_atomic_impl.259" }
%"struct.std::__1::__cxx_atomic_impl.259" = type { %"struct.std::__1::__cxx_atomic_base_impl.260" }
%"struct.std::__1::__cxx_atomic_base_impl.260" = type { i32 }
%"class.blink::Member.973" = type { %"class.blink::MemberBase.974" }
%"class.blink::MemberBase.974" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.975" = type { %"class.blink::MemberBase.976" }
%"class.blink::MemberBase.976" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1254", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1287", i32, i8, [3 x i8], %"class.blink::HeapVector.1289", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1297", %"class.blink::Member.1299", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1308", %"class.blink::Member.1314", %"class.blink::Member.1316", i8, [7 x i8] }>
%"class.blink::Supplementable.1254" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1255" }
%"class.blink::HeapHashMap.1255" = type { %"class.WTF::HashMap.1258" }
%"class.WTF::HashMap.1258" = type { %"class.WTF::HashTable.1259" }
%"class.WTF::HashTable.1259" = type <{ %"struct.WTF::KeyValuePair.1261"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1261" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1262" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.927" }
%"class.blink::HeapHashSet.927" = type { %"class.WTF::HashSet.930" }
%"class.WTF::HashSet.930" = type { %"class.WTF::HashTable.931" }
%"class.WTF::HashTable.931" = type <{ %"class.blink::WeakMember.933"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.933" = type opaque
%"class.blink::Supplementable.1262" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1263" }
%"class.blink::HeapHashMap.1263" = type { %"class.WTF::HashMap.1266" }
%"class.WTF::HashMap.1266" = type { %"class.WTF::HashTable.1267" }
%"class.WTF::HashTable.1267" = type <{ %"struct.WTF::KeyValuePair.1269"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1269" = type { i8*, %"class.blink::Member.1348" }
%"class.blink::Member.1348" = type { %"class.blink::MemberBase.1349" }
%"class.blink::MemberBase.1349" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1350" }
%"class.blink::Member.1350" = type { %"class.blink::MemberBase.1351" }
%"class.blink::MemberBase.1351" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1270, %"class.std::__1::unique_ptr.1271", %"class.std::__1::unique_ptr.1271", %"class.std::__1::unique_ptr.1277", %"class.std::__1::unique_ptr.1277", %"class.blink::Member.975", i32, [4 x i8], %"class.WTF::HashSet.1283", i32, i32 }
%class.scoped_refptr.1270 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.1271" = type { %"class.std::__1::__compressed_pair.1272" }
%"class.std::__1::__compressed_pair.1272" = type { %"struct.std::__1::__compressed_pair_elem.1273" }
%"struct.std::__1::__compressed_pair_elem.1273" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1277" = type { %"class.std::__1::__compressed_pair.1278" }
%"class.std::__1::__compressed_pair.1278" = type { %"struct.std::__1::__compressed_pair_elem.1279" }
%"struct.std::__1::__compressed_pair_elem.1279" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1283" = type { %"class.WTF::HashTable.1284" }
%"class.WTF::HashTable.1284" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1287" = type { %"class.blink::MemberBase.1288" }
%"class.blink::MemberBase.1288" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1289" = type { %"class.WTF::Vector.1292" }
%"class.WTF::Vector.1292" = type { %"class.WTF::VectorBuffer.1293" }
%"class.WTF::VectorBuffer.1293" = type { %"class.WTF::VectorBufferBase.1294" }
%"class.WTF::VectorBufferBase.1294" = type { %"class.blink::Member.1295"*, i32, i32 }
%"class.blink::Member.1295" = type opaque
%"class.blink::Member.1297" = type { %"class.blink::MemberBase.1298" }
%"class.blink::MemberBase.1298" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1299" = type { %"class.blink::MemberBase.1300" }
%"class.blink::MemberBase.1300" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1301", i32, i32 }
%"class.blink::HeapHashMap.1301" = type { %"class.WTF::HashMap.1304" }
%"class.WTF::HashMap.1304" = type { %"class.WTF::HashTable.1305" }
%"class.WTF::HashTable.1305" = type <{ %"struct.WTF::KeyValuePair.1307"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1307" = type opaque
%"class.std::__1::unique_ptr.1308" = type { %"class.std::__1::__compressed_pair.1309" }
%"class.std::__1::__compressed_pair.1309" = type { %"struct.std::__1::__compressed_pair_elem.1310" }
%"struct.std::__1::__compressed_pair_elem.1310" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1314" = type { %"class.blink::MemberBase.1315" }
%"class.blink::MemberBase.1315" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1316" = type { %"class.blink::MemberBase.1317" }
%"class.blink::MemberBase.1317" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.977" = type { %"class.blink::MemberBase.978" }
%"class.blink::MemberBase.978" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.979" = type { %"class.blink::MemberBase.980" }
%"class.blink::MemberBase.980" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.981" = type { %"class.blink::MemberBase.982" }
%"class.blink::MemberBase.982" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.983" = type { %"class.blink::MemberBase.984" }
%"class.blink::MemberBase.984" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.991" = type { %"class.std::__1::__compressed_pair.992" }
%"class.std::__1::__compressed_pair.992" = type { %"struct.std::__1::__compressed_pair_elem.993" }
%"struct.std::__1::__compressed_pair_elem.993" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.985" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.985" = type { %"class.std::__1::__compressed_pair.986" }
%"class.std::__1::__compressed_pair.986" = type { %"struct.std::__1::__compressed_pair_elem.987" }
%"struct.std::__1::__compressed_pair_elem.987" = type { %"class.blink::KURL"* }
%"class.blink::Member.997" = type { %"class.blink::MemberBase.998" }
%"class.blink::MemberBase.998" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.999" = type { %"class.blink::MemberBase.1000" }
%"class.blink::MemberBase.1000" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.1001 }
%class.scoped_refptr.1001 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.1002" = type { %"class.WTF::VectorBuffer.1003" }
%"class.WTF::VectorBuffer.1003" = type { %"class.WTF::VectorBufferBase.1004" }
%"class.WTF::VectorBufferBase.1004" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.1005 }
%class.scoped_refptr.1005 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.1006", i32, i32, %"class.blink::Persistent.1008" }
%"class.WTF::RefCounted.1006" = type { %"class.base::RefCounted.1007" }
%"class.base::RefCounted.1007" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1008" = type { %"class.blink::PersistentBase.1009" }
%"class.blink::PersistentBase.1009" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.308" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.1012" }
%"class.blink::HeapHashMap.1012" = type { %"class.WTF::HashMap.1015" }
%"class.WTF::HashMap.1015" = type { %"class.WTF::HashTable.1016" }
%"class.WTF::HashTable.1016" = type <{ %"struct.WTF::KeyValuePair.1018"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1018" = type { %"class.blink::WeakMember.1019", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.1019" = type { %"class.blink::MemberBase.1020" }
%"class.blink::MemberBase.1020" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr.308" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.1027" = type { %"class.blink::MemberBase.1028" }
%"class.blink::MemberBase.1028" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1029" }
%"class.blink::HeapHashMap.1029" = type { %"class.WTF::HashMap.1032" }
%"class.WTF::HashMap.1032" = type { %"class.WTF::HashTable.1033" }
%"class.WTF::HashTable.1033" = type <{ %"struct.WTF::KeyValuePair.1035"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1035" = type opaque
%"class.blink::Member.1036" = type { %"class.blink::MemberBase.1037" }
%"class.blink::MemberBase.1037" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1038" = type { %"class.WTF::HashSet.1041" }
%"class.WTF::HashSet.1041" = type { %"class.WTF::HashTable.1042" }
%"class.WTF::HashTable.1042" = type <{ %"class.blink::WeakMember.1044"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1044" = type opaque
%"class.blink::HeapHashSet.1045" = type { %"class.WTF::HashSet.1048" }
%"class.WTF::HashSet.1048" = type { %"class.WTF::HashTable.1049" }
%"class.WTF::HashTable.1049" = type <{ %"class.blink::WeakMember.1051"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1051" = type opaque
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1054" = type { %"class.blink::MemberBase.1055" }
%"class.blink::MemberBase.1055" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.1056" = type { %"class.blink::MemberBase.1057" }
%"class.blink::MemberBase.1057" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.1058" = type { %"class.blink::MemberBase.1059" }
%"class.blink::MemberBase.1059" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.1060" = type { %"class.blink::MemberBase.1061" }
%"class.blink::MemberBase.1061" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1062" = type { %"class.WTF::HashMap.1065" }
%"class.WTF::HashMap.1065" = type { %"class.WTF::HashTable.1066" }
%"class.WTF::HashTable.1066" = type <{ %"struct.WTF::KeyValuePair.1068"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1068" = type opaque
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071" }
%"class.WTF::VectorBufferBase.1071" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1074" = type { %"class.blink::MemberBase.1075" }
%"class.blink::MemberBase.1075" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1076" = type { %"class.blink::MemberBase.1077" }
%"class.blink::MemberBase.1077" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1078" = type { %"class.blink::MemberBase.1079" }
%"class.blink::MemberBase.1079" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1080" = type { %"class.WTF::Vector.1083" }
%"class.WTF::Vector.1083" = type { %"class.WTF::VectorBuffer.1084" }
%"class.WTF::VectorBuffer.1084" = type { %"class.WTF::VectorBufferBase.1085" }
%"class.WTF::VectorBufferBase.1085" = type { %"class.blink::Member.1086"*, i32, i32 }
%"class.blink::Member.1086" = type opaque
%"class.std::__1::unique_ptr.1088" = type { %"class.std::__1::__compressed_pair.1089" }
%"class.std::__1::__compressed_pair.1089" = type { %"struct.std::__1::__compressed_pair_elem.1090" }
%"struct.std::__1::__compressed_pair_elem.1090" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.1094" = type { %"class.WTF::HashSet.1097" }
%"class.WTF::HashSet.1097" = type { %"class.WTF::HashTable.1098" }
%"class.WTF::HashTable.1098" = type <{ %"class.blink::WeakMember.1100"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1100" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1101", i32, [4 x i8] }>
%"class.WTF::Vector.1101" = type { %"class.WTF::VectorBuffer.1102" }
%"class.WTF::VectorBuffer.1102" = type { %"class.WTF::VectorBufferBase.1103" }
%"class.WTF::VectorBufferBase.1103" = type { %"struct.std::__1::pair.1104"*, i32, i32 }
%"struct.std::__1::pair.1104" = type opaque
%"class.blink::Member.1107" = type { %"class.blink::MemberBase.1108" }
%"class.blink::MemberBase.1108" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1109" = type { %"class.WTF::VectorBuffer.1110" }
%"class.WTF::VectorBuffer.1110" = type { %"class.WTF::VectorBufferBase.1111" }
%"class.WTF::VectorBufferBase.1111" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1114" = type { %"class.std::__1::__compressed_pair.1115" }
%"class.std::__1::__compressed_pair.1115" = type { %"struct.std::__1::__compressed_pair_elem.1116" }
%"struct.std::__1::__compressed_pair_elem.1116" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.1120" = type { %"class.WTF::Vector.1123" }
%"class.WTF::Vector.1123" = type { %"class.WTF::VectorBuffer.1124" }
%"class.WTF::VectorBuffer.1124" = type { %"class.WTF::VectorBufferBase.1125" }
%"class.WTF::VectorBufferBase.1125" = type { %"class.blink::Member.1126"*, i32, i32 }
%"class.blink::Member.1126" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.356" }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1130" = type { %"class.blink::MemberBase.1131" }
%"class.blink::MemberBase.1131" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1134" = type { %"class.blink::MemberBase.1135" }
%"class.blink::MemberBase.1135" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1136" = type { %"class.blink::MemberBase.1137" }
%"class.blink::MemberBase.1137" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1138" = type { %"class.WTF::HashTable.1139" }
%"class.WTF::HashTable.1139" = type <{ %"struct.WTF::KeyValuePair.1142"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1142" = type opaque
%"class.blink::Member.1143" = type { %"class.blink::MemberBase.1144" }
%"class.blink::MemberBase.1144" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1145" = type { %"class.blink::MemberBase.1146" }
%"class.blink::MemberBase.1146" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1147" = type { %"class.blink::MemberBase.1148" }
%"class.blink::MemberBase.1148" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1149" = type { %"class.blink::MemberBase.1150" }
%"class.blink::MemberBase.1150" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1026", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.1023, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.1023 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1024" }>
%"class.base::RefCountedThreadSafe.1024" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.1025 }
%class.scoped_refptr.1025 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.261" }
%"struct.std::__1::atomic.261" = type { %"struct.std::__1::__atomic_base.262" }
%"struct.std::__1::__atomic_base.262" = type { %"struct.std::__1::__atomic_base.263" }
%"struct.std::__1::__atomic_base.263" = type { %"struct.std::__1::__cxx_atomic_impl.264" }
%"struct.std::__1::__cxx_atomic_impl.264" = type { %"struct.std::__1::__cxx_atomic_base_impl.265" }
%"struct.std::__1::__cxx_atomic_base_impl.265" = type { i8 }
%"class.blink::WeakMember.1026" = type { %"class.blink::MemberBase.357" }
%"class.blink::HeapHashSet.1151" = type { %"class.WTF::HashSet.1154" }
%"class.WTF::HashSet.1154" = type { %"class.WTF::HashTable.1155" }
%"class.WTF::HashTable.1155" = type <{ %"class.blink::Member.1157"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1157" = type opaque
%"class.blink::Member.1158" = type { %"class.blink::MemberBase.1159" }
%"class.blink::MemberBase.1159" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1160" = type { %"class.blink::MemberBase.1161" }
%"class.blink::MemberBase.1161" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1162" = type { %"class.blink::MemberBase.1163" }
%"class.blink::MemberBase.1163" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.1165" }
%"class.blink::MemberBase.1165" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1166" = type { %"class.blink::MemberBase.1167" }
%"class.blink::MemberBase.1167" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1168" = type { %"class.std::__1::__compressed_pair.1169" }
%"class.std::__1::__compressed_pair.1169" = type { %"struct.std::__1::__compressed_pair_elem.1170" }
%"struct.std::__1::__compressed_pair_elem.1170" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1174" = type { %"class.std::__1::__compressed_pair.1175" }
%"class.std::__1::__compressed_pair.1175" = type { %"struct.std::__1::__compressed_pair_elem.1176" }
%"struct.std::__1::__compressed_pair_elem.1176" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.1177", %"class.WTF::HashSet.1177", %"class.WTF::HashSet.1177", %"class.WTF::HashSet.1177", %"class.WTF::HashSet.1177", %"class.WTF::HashSet.1177", i32, [4 x i8], %"class.WTF::HashMap.1181", %"class.WTF::HashMap.1181", %"class.WTF::HashMap.1181", %"class.WTF::HashMap.1181", %"class.WTF::HashMap.1181", %"class.WTF::HashMap.1181", %"class.WTF::HashMap.1181", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashSet.1177" = type { %"class.WTF::HashTable.1178" }
%"class.WTF::HashTable.1178" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.1181" = type { %"class.WTF::HashTable.1182" }
%"class.WTF::HashTable.1182" = type <{ %"struct.WTF::KeyValuePair.1185"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1185" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1189" = type { %"class.blink::MemberBase.1190" }
%"class.blink::MemberBase.1190" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1191" = type { %"class.blink::MemberBase.1192" }
%"class.blink::MemberBase.1192" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1193" = type { %"class.blink::MemberBase.1194" }
%"class.blink::MemberBase.1194" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1195" = type { %"class.blink::MemberBase.1196" }
%"class.blink::MemberBase.1196" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1197" = type { %"class.WTF::VectorBuffer.1198" }
%"class.WTF::VectorBuffer.1198" = type { %"class.WTF::VectorBufferBase.1199" }
%"class.WTF::VectorBufferBase.1199" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1202" = type { %"class.WTF::HashMap.1205" }
%"class.WTF::HashMap.1205" = type { %"class.WTF::HashTable.1206" }
%"class.WTF::HashTable.1206" = type <{ %"struct.WTF::KeyValuePair.1208"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1208" = type opaque
%"class.blink::Member.1209" = type { %"class.blink::MemberBase.1210" }
%"class.blink::MemberBase.1210" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1211" = type { %"class.std::__1::__compressed_pair.1212" }
%"class.std::__1::__compressed_pair.1212" = type { %"struct.std::__1::__compressed_pair_elem.1213" }
%"struct.std::__1::__compressed_pair_elem.1213" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1217" = type { %"class.blink::MemberBase.1218" }
%"class.blink::MemberBase.1218" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1219" = type { %"class.blink::MemberBase.1220" }
%"class.blink::MemberBase.1220" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1221" = type { %"class.WTF::HashMap.1224" }
%"class.WTF::HashMap.1224" = type { %"class.WTF::HashTable.1225" }
%"class.WTF::HashTable.1225" = type <{ %"struct.WTF::KeyValuePair.1227"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1227" = type opaque
%"class.blink::HeapObserverSet.1228" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1229" }
%"class.blink::HeapHashSet.1229" = type { %"class.WTF::HashSet.1232" }
%"class.WTF::HashSet.1232" = type { %"class.WTF::HashTable.1233" }
%"class.WTF::HashTable.1233" = type <{ %"class.blink::WeakMember.1235"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1235" = type opaque
%"class.blink::Member.1236" = type { %"class.blink::MemberBase.1237" }
%"class.blink::MemberBase.1237" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1238" = type { %"class.blink::MemberBase.1239" }
%"class.blink::MemberBase.1239" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.356", %"class.blink::HeapHashSet.1245", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1252", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1245" = type { %"class.WTF::HashSet.1248" }
%"class.WTF::HashSet.1248" = type { %"class.WTF::HashTable.1249" }
%"class.WTF::HashTable.1249" = type <{ %"class.blink::Member.1251"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1251" = type opaque
%"class.blink::HeapTaskRunnerTimer.1252" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1253", { i64, i64 } }
%"class.blink::WeakMember.1253" = type { %"class.blink::MemberBase.1239" }
%"class.blink::WeakMember.1240" = type { %"class.blink::MemberBase" }
%"class.blink::Member.1241" = type { %"class.blink::MemberBase.1242" }
%"class.blink::MemberBase.1242" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%class.scoped_refptr.703 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.688", %"class.std::__1::unique_ptr.690" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.281", %"class.blink::DataRef.404", %"class.blink::DataRef.408", %"class.blink::DataRef.608", %"class.blink::DataRef.671", %"class.blink::DataRef.675", %"class.blink::DataRef.679", %"class.blink::DataRef.683", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.205 }
%class.scoped_refptr.205 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted.206", %"class.blink::DataRef.208", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted.206" = type { %"class.base::RefCounted.207" }
%"class.base::RefCounted.207" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.208" = type { %class.scoped_refptr.209 }
%class.scoped_refptr.209 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.210", %"class.blink::Font" }
%"class.WTF::RefCounted.210" = type { %"class.base::RefCounted.211" }
%"class.base::RefCounted.211" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.244 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.213, %class.scoped_refptr.221, %class.scoped_refptr.231, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.243 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.212 }
%class.scoped_refptr.212 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1318", [4 x i8] }>
%"class.WTF::RefCounted.1318" = type { %"class.base::RefCounted.1319" }
%"class.base::RefCounted.1319" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.213 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.219", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.214" }
%"class.WTF::Vector.214" = type { %"class.WTF::VectorBuffer.215" }
%"class.WTF::VectorBuffer.215" = type { %"class.WTF::VectorBufferBase.216" }
%"class.WTF::VectorBufferBase.216" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.219" = type { %"class.base::RefCounted.220" }
%"class.base::RefCounted.220" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.221 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.222", %"class.WTF::RefCounted.229", [4 x i8] }>
%"class.blink::FontSettings.222" = type { %"class.WTF::Vector.223" }
%"class.WTF::Vector.223" = type { %"class.WTF::VectorBuffer.224" }
%"class.WTF::VectorBuffer.224" = type { %"class.WTF::VectorBufferBase.225" }
%"class.WTF::VectorBufferBase.225" = type { %"class.blink::FontTagValuePair.226"*, i32, i32 }
%"class.blink::FontTagValuePair.226" = type { i32, float }
%"class.WTF::RefCounted.229" = type { %"class.base::RefCounted.230" }
%"class.base::RefCounted.230" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.231 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.232", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.240, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.232" = type { %"class.base::RefCounted.233" }
%"class.base::RefCounted.233" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.236 }
%union.anon.236 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.240 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.241", [4 x i8] }>
%"class.WTF::RefCounted.241" = type { %"class.base::RefCounted.242" }
%"class.base::RefCounted.242" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.243 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.244 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.245", %"class.WTF::Vector.247", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent.277", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.245" = type { %"class.base::RefCounted.246" }
%"class.base::RefCounted.246" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.247" = type { %"class.WTF::VectorBuffer.248" }
%"class.WTF::VectorBuffer.248" = type { %"class.WTF::VectorBufferBase.249", [8 x i8] }
%"class.WTF::VectorBufferBase.249" = type { %class.scoped_refptr.250*, i32, i32 }
%class.scoped_refptr.250 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.251", [4 x i8] }>
%"class.WTF::RefCounted.251" = type { %"class.base::RefCounted.252" }
%"class.base::RefCounted.252" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.267", %class.scoped_refptr.274, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.251" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.255 }
%union.anon.255 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.266, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.256" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.256" }>
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.261" }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.266 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.267" = type { %"class.std::__1::__compressed_pair.268" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.270, %class.scoped_refptr.270 }
%class.scoped_refptr.270 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.274 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.275", [4 x i8] }>
%"class.WTF::RefCounted.275" = type { %"class.base::RefCounted.276" }
%"class.base::RefCounted.276" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::WeakPersistent.277" = type { %"class.blink::PersistentBase.278" }
%"class.blink::PersistentBase.278" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.279 }
%class.scoped_refptr.279 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::Length" = type <{ %union.anon.280, i8, i8, i8, i8 }>
%union.anon.280 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.281" = type { %class.scoped_refptr.282 }
%class.scoped_refptr.282 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.283", [4 x i8], %"class.blink::DataRef.285", %"class.blink::DataRef.321", %"class.WTF::Vector.325", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.329, %class.scoped_refptr.338, %"class.blink::Persistent.346", %"class.blink::Persistent.348", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.283" = type { %"class.base::RefCounted.284" }
%"class.base::RefCounted.284" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.285" = type { %class.scoped_refptr.286 }
%class.scoped_refptr.286 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.287", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.296, %"class.blink::Persistent.309", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.287" = type { %"class.base::RefCounted.288" }
%"class.base::RefCounted.288" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.289 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.290", %"class.WTF::Vector.291" }
%"class.base::RefCountedThreadSafe.290" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.291" = type { %"class.WTF::VectorBuffer.292" }
%"class.WTF::VectorBuffer.292" = type { %"class.WTF::VectorBufferBase.293" }
%"class.WTF::VectorBufferBase.293" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.296 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.297", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.297" = type { %"class.base::RefCounted.298" }
%"class.base::RefCounted.298" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1392 }
%class.scoped_refptr.1392 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.1393", %"class.WTF::Vector.591", %"class.WTF::Vector.1395", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.1393" = type { %"class.base::RefCounted.1394" }
%"class.base::RefCounted.1394" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.591" = type { %"class.WTF::VectorBuffer.592" }
%"class.WTF::VectorBuffer.592" = type { %"class.WTF::VectorBufferBase.593" }
%"class.WTF::VectorBufferBase.593" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.1395" = type { %"class.WTF::VectorBuffer.1396" }
%"class.WTF::VectorBuffer.1396" = type { %"class.WTF::VectorBufferBase.1397" }
%"class.WTF::VectorBufferBase.1397" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.1398 }
%union.anon.1398 = type { double }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.301" }
%"class.blink::PersistentBase.301" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.308" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.304" }
%"class.WTF::HashMap.304" = type { %"class.WTF::HashTable.305" }
%"class.WTF::HashTable.305" = type <{ %"struct.WTF::KeyValuePair.307"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.307" = type opaque
%"class.blink::Persistent.309" = type { %"class.blink::PersistentBase.310" }
%"class.blink::PersistentBase.310" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.308" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.313" }
%"class.WTF::Vector.313" = type { %"class.WTF::VectorBuffer.314" }
%"class.WTF::VectorBuffer.314" = type { %"class.WTF::VectorBufferBase.315" }
%"class.WTF::VectorBufferBase.315" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member.316", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member.316" = type { %"class.blink::MemberBase.317" }
%"class.blink::MemberBase.317" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.321" = type { %class.scoped_refptr.322 }
%class.scoped_refptr.322 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.323", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.323" = type { %"class.base::RefCounted.324" }
%"class.base::RefCounted.324" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.325" = type { %"class.WTF::VectorBuffer.326" }
%"class.WTF::VectorBuffer.326" = type { %"class.WTF::VectorBufferBase.201" }
%class.scoped_refptr.329 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.330", %"class.WTF::Vector.332" }
%"class.WTF::RefCounted.330" = type { %"class.base::RefCounted.331" }
%"class.base::RefCounted.331" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.332" = type { %"class.WTF::VectorBuffer.333" }
%"class.WTF::VectorBuffer.333" = type { %"class.WTF::VectorBufferBase.334" }
%"class.WTF::VectorBufferBase.334" = type { %"struct.std::__1::pair.335"*, i32, i32 }
%"struct.std::__1::pair.335" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.338 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.339", [4 x i8], %"class.WTF::Vector.341" }
%"class.WTF::RefCounted.339" = type { %"class.base::RefCounted.340" }
%"class.base::RefCounted.340" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.341" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.343", [28 x i8] }>
%"class.WTF::VectorBufferBase.343" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.346" = type { %"class.blink::PersistentBase.347" }
%"class.blink::PersistentBase.347" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.308" }
%"class.blink::Persistent.348" = type { %"class.blink::PersistentBase.349" }
%"class.blink::PersistentBase.349" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.308" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.352", %"class.blink::Member.402" }
%"class.blink::Member.352" = type { %"class.blink::MemberBase.353" }
%"class.blink::MemberBase.353" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.402" = type { %"class.blink::MemberBase.403" }
%"class.blink::MemberBase.403" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.404" = type { %class.scoped_refptr.405 }
%class.scoped_refptr.405 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.406", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.406" = type { %"class.base::RefCounted.407" }
%"class.base::RefCounted.407" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.408" = type { %class.scoped_refptr.409 }
%class.scoped_refptr.409 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.410", [4 x i8], %"class.blink::DataRef.412", %"class.blink::DataRef.478", %"class.blink::TransformOperations", %class.scoped_refptr.338, %"class.blink::Persistent.602", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.410" = type { %"class.base::RefCounted.411" }
%"class.base::RefCounted.411" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.412" = type { %class.scoped_refptr.413 }
%class.scoped_refptr.413 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.414", [4 x i8], %"class.blink::DataRef.416", %"class.blink::Persistent.454", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.414" = type { %"class.base::RefCounted.415" }
%"class.base::RefCounted.415" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.416" = type { %class.scoped_refptr.417 }
%class.scoped_refptr.417 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.418", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.436, %class.scoped_refptr.439, %class.scoped_refptr.442, %class.scoped_refptr.445, %class.scoped_refptr.446, %class.scoped_refptr.447, %"class.blink::Persistent.454", %"class.blink::Persistent.469", %"class.absl::optional.473", %"class.absl::optional.473", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.418" = type { %"class.base::RefCounted.419" }
%"class.base::RefCounted.419" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.420", %"class.std::__1::unique_ptr.425" }
%"class.WTF::Vector.420" = type { %"class.WTF::VectorBuffer.421" }
%"class.WTF::VectorBuffer.421" = type { %"class.WTF::VectorBufferBase.422" }
%"class.WTF::VectorBufferBase.422" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.425" = type { %"class.std::__1::__compressed_pair.426" }
%"class.std::__1::__compressed_pair.426" = type { %"struct.std::__1::__compressed_pair_elem.427" }
%"struct.std::__1::__compressed_pair_elem.427" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.428", %"class.WTF::Vector.420", i32, i32 }
%"class.WTF::Vector.428" = type { %"class.WTF::VectorBuffer.429" }
%"class.WTF::VectorBuffer.429" = type { %"class.WTF::VectorBufferBase.430" }
%"class.WTF::VectorBufferBase.430" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.436 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.437", [4 x i8] }>
%"class.WTF::RefCounted.437" = type { %"class.base::RefCounted.438" }
%"class.base::RefCounted.438" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.439 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.440", [4 x i8] }>
%"class.WTF::RefCounted.440" = type { %"class.base::RefCounted.441" }
%"class.base::RefCounted.441" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.442 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.443" }>
%"class.WTF::RefCounted.443" = type { %"class.base::RefCounted.444" }
%"class.base::RefCounted.444" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.445 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.446 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.447 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.448", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.448" = type { %"class.base::RefCounted.449" }
%"class.base::RefCounted.449" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.450" }
%"class.blink::DataRef.450" = type { %class.scoped_refptr.451 }
%class.scoped_refptr.451 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.346", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.452" }
%"class.WTF::RefCounted.452" = type { %"class.base::RefCounted.453" }
%"class.base::RefCounted.453" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.469" = type { %"class.blink::PersistentBase.470" }
%"class.blink::PersistentBase.470" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.308" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.439, %"class.blink::Member.316", i32, [4 x i8] }>
%"class.absl::optional.473" = type { %"class.absl::optional_internal::optional_data.474" }
%"class.absl::optional_internal::optional_data.474" = type { %"class.absl::optional_internal::optional_data_base.475" }
%"class.absl::optional_internal::optional_data_base.475" = type { %"class.absl::optional_internal::optional_data_dtor_base.476" }
%"class.absl::optional_internal::optional_data_dtor_base.476" = type { i8, [3 x i8], %union.anon.477 }
%union.anon.477 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.454" = type { %"class.blink::PersistentBase.455" }
%"class.blink::PersistentBase.455" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.308" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.458" }
%"class.blink::HeapVector.458" = type { %"class.WTF::Vector.461" }
%"class.WTF::Vector.461" = type { %"class.WTF::VectorBuffer.462" }
%"class.WTF::VectorBuffer.462" = type { %"class.WTF::VectorBufferBase.463" }
%"class.WTF::VectorBufferBase.463" = type { %"class.blink::Member.464"*, i32, i32 }
%"class.blink::Member.464" = type { %"class.blink::MemberBase.465" }
%"class.blink::MemberBase.465" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.478" = type { %class.scoped_refptr.479 }
%class.scoped_refptr.479 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.480", %"class.blink::DataRef.482", %"class.blink::DataRef.486", %"class.blink::DataRef.495", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.514", %"class.std::__1::unique_ptr.525", %"class.std::__1::unique_ptr.563", %"class.std::__1::unique_ptr.574", %"class.std::__1::unique_ptr.585", %"class.WTF::Vector.591", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.480" = type { %"class.base::RefCounted.481" }
%"class.base::RefCounted.481" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.482" = type { %class.scoped_refptr.483 }
%class.scoped_refptr.483 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.484", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.484" = type { %"class.base::RefCounted.485" }
%"class.base::RefCounted.485" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.486" = type { %class.scoped_refptr.487 }
%class.scoped_refptr.487 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.488", [4 x i8], %"class.WTF::Vector.490", i8, [7 x i8] }>
%"class.WTF::RefCounted.488" = type { %"class.base::RefCounted.489" }
%"class.base::RefCounted.489" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.490" = type { %"class.WTF::VectorBuffer.491" }
%"class.WTF::VectorBuffer.491" = type { %"class.WTF::VectorBufferBase.492" }
%"class.WTF::VectorBufferBase.492" = type { i32*, i32, i32 }
%"class.blink::DataRef.495" = type { %class.scoped_refptr.496 }
%class.scoped_refptr.496 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.497", [4 x i8], %"class.WTF::HashMap.499", %"class.WTF::HashMap.499", %"class.WTF::HashMap.499", %"class.WTF::HashMap.499", %"class.WTF::HashMap.499", %"class.WTF::HashMap.499", %"class.WTF::HashMap.504", %"class.WTF::HashMap.504", %"class.WTF::HashMap.504", %"class.WTF::HashMap.504", %"class.WTF::HashMap.509", %"class.WTF::Vector.420", %"class.WTF::Vector.420", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.497" = type { %"class.base::RefCounted.498" }
%"class.base::RefCounted.498" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.499" = type { %"class.WTF::HashTable.500" }
%"class.WTF::HashTable.500" = type <{ %"struct.WTF::KeyValuePair.503"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.503" = type { %"class.WTF::String", %"class.WTF::Vector.1382" }
%"class.WTF::Vector.1382" = type { %"class.WTF::VectorBuffer.1383" }
%"class.WTF::VectorBuffer.1383" = type { %"class.WTF::VectorBufferBase.1384" }
%"class.WTF::VectorBufferBase.1384" = type { i64*, i32, i32 }
%"class.WTF::HashMap.504" = type { %"class.WTF::HashTable.505" }
%"class.WTF::HashTable.505" = type <{ %"struct.WTF::KeyValuePair.508"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.508" = type { i64, %"class.WTF::Vector.591" }
%"class.WTF::HashMap.509" = type { %"class.WTF::HashTable.510" }
%"class.WTF::HashTable.510" = type <{ %"struct.WTF::KeyValuePair.513"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.513" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.514" = type { %"class.std::__1::__compressed_pair.515" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.516" }
%"struct.std::__1::__compressed_pair_elem.516" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.517" }
%"class.WTF::HashMap.517" = type { %"class.WTF::HashTable.518" }
%"class.WTF::HashTable.518" = type <{ %"struct.WTF::KeyValuePair.521"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.521" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1387", %"class.absl::optional.1387", %"class.absl::optional.1387" }
%"class.absl::optional.1387" = type { %"class.absl::optional_internal::optional_data.1388" }
%"class.absl::optional_internal::optional_data.1388" = type { %"class.absl::optional_internal::optional_data_base.1389" }
%"class.absl::optional_internal::optional_data_base.1389" = type { %"class.absl::optional_internal::optional_data_dtor_base.1390" }
%"class.absl::optional_internal::optional_data_dtor_base.1390" = type { i8, %union.anon.1391 }
%union.anon.1391 = type { i32 }
%"class.std::__1::unique_ptr.525" = type { %"class.std::__1::__compressed_pair.526" }
%"class.std::__1::__compressed_pair.526" = type { %"struct.std::__1::__compressed_pair_elem.527" }
%"struct.std::__1::__compressed_pair_elem.527" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.325", %"class.WTF::Vector.540", %"class.WTF::Vector.528", %"class.WTF::Vector.545", %"class.WTF::Vector.550", %"class.WTF::Vector.555" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.528", %"class.WTF::Vector.528", %"class.WTF::Vector.533" }
%"class.WTF::Vector.533" = type { %"class.WTF::VectorBuffer.534" }
%"class.WTF::VectorBuffer.534" = type { %"class.WTF::VectorBufferBase.535" }
%"class.WTF::VectorBufferBase.535" = type { %class.scoped_refptr.536*, i32, i32 }
%class.scoped_refptr.536 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.537" }
%"class.base::RefCountedThreadSafe.537" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.540" = type { %"class.WTF::VectorBuffer.541" }
%"class.WTF::VectorBuffer.541" = type { %"class.WTF::VectorBufferBase.542" }
%"class.WTF::VectorBufferBase.542" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.528" = type { %"class.WTF::VectorBuffer.529" }
%"class.WTF::VectorBuffer.529" = type { %"class.WTF::VectorBufferBase.530" }
%"class.WTF::VectorBufferBase.530" = type { double*, i32, i32 }
%"class.WTF::Vector.545" = type { %"class.WTF::VectorBuffer.546" }
%"class.WTF::VectorBuffer.546" = type { %"class.WTF::VectorBufferBase.547" }
%"class.WTF::VectorBufferBase.547" = type { i32*, i32, i32 }
%"class.WTF::Vector.550" = type { %"class.WTF::VectorBuffer.551" }
%"class.WTF::VectorBuffer.551" = type { %"class.WTF::VectorBufferBase.552" }
%"class.WTF::VectorBufferBase.552" = type { i32*, i32, i32 }
%"class.WTF::Vector.555" = type { %"class.WTF::VectorBuffer.556" }
%"class.WTF::VectorBuffer.556" = type { %"class.WTF::VectorBufferBase.557" }
%"class.WTF::VectorBufferBase.557" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.563" = type { %"class.std::__1::__compressed_pair.564" }
%"class.std::__1::__compressed_pair.564" = type { %"struct.std::__1::__compressed_pair_elem.565" }
%"struct.std::__1::__compressed_pair_elem.565" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.566" }
%"class.WTF::Vector.566" = type { %"class.WTF::VectorBuffer.567" }
%"class.WTF::VectorBuffer.567" = type { %"class.WTF::VectorBufferBase.568" }
%"class.WTF::VectorBufferBase.568" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.574" = type { %"class.std::__1::__compressed_pair.575" }
%"class.std::__1::__compressed_pair.575" = type { %"struct.std::__1::__compressed_pair_elem.576" }
%"struct.std::__1::__compressed_pair_elem.576" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.577" }
%"class.WTF::Vector.577" = type { %"class.WTF::VectorBuffer.578" }
%"class.WTF::VectorBuffer.578" = type { %"class.WTF::VectorBufferBase.579" }
%"class.WTF::VectorBufferBase.579" = type { %"class.blink::Persistent.346"*, i32, i32 }
%"class.std::__1::unique_ptr.585" = type { %"class.std::__1::__compressed_pair.586" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.587" }
%"struct.std::__1::__compressed_pair_elem.587" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.346", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.596" }
%"class.WTF::Vector.596" = type { %"class.WTF::VectorBuffer.597" }
%"class.WTF::VectorBuffer.597" = type { %"class.WTF::VectorBufferBase.598" }
%"class.WTF::VectorBufferBase.598" = type { %class.scoped_refptr.599*, i32, i32 }
%class.scoped_refptr.599 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.443", [4 x i8] }>
%"class.blink::Persistent.602" = type { %"class.blink::PersistentBase.603" }
%"class.blink::PersistentBase.603" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.308" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.606" }
%"class.blink::Member.606" = type { %"class.blink::MemberBase.607" }
%"class.blink::MemberBase.607" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.608" = type { %class.scoped_refptr.609 }
%class.scoped_refptr.609 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.610", [4 x i8], %"class.blink::DataRef.612", %"class.blink::DataRef.616", %"class.blink::DataRef.633", %"class.blink::DataRef.651", %"class.blink::DataRef.663", %"class.blink::DataRef.667", %class.scoped_refptr.637, i32, [4 x i8] }>
%"class.WTF::RefCounted.610" = type { %"class.base::RefCounted.611" }
%"class.base::RefCounted.611" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.612" = type { %class.scoped_refptr.613 }
%class.scoped_refptr.613 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.614", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.614" = type { %"class.base::RefCounted.615" }
%"class.base::RefCounted.615" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.616" = type { %class.scoped_refptr.617 }
%class.scoped_refptr.617 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.618", %class.scoped_refptr.620, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.618" = type { %"class.base::RefCounted.619" }
%"class.base::RefCounted.619" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.620 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.621", %"class.std::__1::unique_ptr.627", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.440" }>
%"class.std::__1::unique_ptr.621" = type { %"class.std::__1::__compressed_pair.622" }
%"class.std::__1::__compressed_pair.622" = type { %"struct.std::__1::__compressed_pair_elem.623" }
%"struct.std::__1::__compressed_pair_elem.623" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.627" = type { %"class.std::__1::__compressed_pair.628" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.629" }
%"struct.std::__1::__compressed_pair_elem.629" = type { %"class.blink::Path"* }
%"class.blink::Path" = type opaque
%"class.blink::DataRef.633" = type { %class.scoped_refptr.634 }
%class.scoped_refptr.634 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.635", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.635" = type { %"class.base::RefCounted.636" }
%"class.base::RefCounted.636" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.637, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.653", [4 x i8], %class.scoped_refptr.655, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.655 = type { %"class.base::RefCountedData.656"* }
%"class.base::RefCountedData.656" = type { %"class.base::RefCountedThreadSafe.657", %"class.WTF::Vector.658" }
%"class.base::RefCountedThreadSafe.657" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.658" = type { %"class.WTF::VectorBuffer.659" }
%"class.WTF::VectorBuffer.659" = type { %"class.WTF::VectorBufferBase.660" }
%"class.WTF::VectorBufferBase.660" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.663" = type { %class.scoped_refptr.664 }
%class.scoped_refptr.664 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.665", %class.scoped_refptr.637, %class.scoped_refptr.637, %class.scoped_refptr.637 }
%"class.WTF::RefCounted.665" = type { %"class.base::RefCounted.666" }
%"class.base::RefCounted.666" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.667" = type { %class.scoped_refptr.668 }
%class.scoped_refptr.668 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.669", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.669" = type { %"class.base::RefCounted.670" }
%"class.base::RefCounted.670" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.637 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.638", %"class.blink::Persistent.640", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.638" = type { %"class.base::RefCounted.639" }
%"class.base::RefCounted.639" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.640" = type { %"class.blink::PersistentBase.641" }
%"class.blink::PersistentBase.641" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.308" }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.373", %"class.blink::HeapHashMap.644" }
%"class.blink::HeapHashMap.644" = type { %"class.WTF::HashMap.647" }
%"class.WTF::HashMap.647" = type { %"class.WTF::HashTable.648" }
%"class.WTF::HashTable.648" = type <{ %"struct.WTF::KeyValuePair.650"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.650" = type opaque
%"class.blink::DataRef.671" = type { %class.scoped_refptr.672 }
%class.scoped_refptr.672 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.673", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.673" = type { %"class.base::RefCounted.674" }
%"class.base::RefCounted.674" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.675" = type { %class.scoped_refptr.676 }
%class.scoped_refptr.676 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.677", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.677" = type { %"class.base::RefCounted.678" }
%"class.base::RefCounted.678" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.679" = type { %class.scoped_refptr.680 }
%class.scoped_refptr.680 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.681", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.683" = type { %class.scoped_refptr.684 }
%class.scoped_refptr.684 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.685", %class.scoped_refptr.687 }
%"class.WTF::RefCounted.685" = type { %"class.base::RefCounted.686" }
%"class.base::RefCounted.686" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.687 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.957", %"class.blink::StyleVariables", %class.scoped_refptr.687 }
%"class.WTF::RefCounted.957" = type { %"class.base::RefCounted.958" }
%"class.base::RefCounted.958" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.688" = type { %"class.base::RefCounted.689" }
%"class.base::RefCounted.689" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.690" = type { %"class.std::__1::__compressed_pair.691" }
%"class.std::__1::__compressed_pair.691" = type { %"struct.std::__1::__compressed_pair_elem.692" }
%"struct.std::__1::__compressed_pair_elem.692" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.693" }
%"class.std::__1::unique_ptr.693" = type { %"class.std::__1::__compressed_pair.694" }
%"class.std::__1::__compressed_pair.694" = type { %"struct.std::__1::__compressed_pair_elem.695" }
%"struct.std::__1::__compressed_pair_elem.695" = type { %"class.WTF::Vector.696"* }
%"class.WTF::Vector.696" = type opaque
%"class.blink::CSSToLengthConversionData" = type <{ %"class.blink::ComputedStyle"*, %"class.blink::CSSToLengthConversionData::FontSizes", %"class.blink::CSSToLengthConversionData::ViewportSize", float, [4 x i8] }>
%"class.blink::CSSToLengthConversionData::FontSizes" = type <{ float, float, %"class.blink::Font"*, float, [4 x i8] }>
%"class.blink::CSSToLengthConversionData::ViewportSize" = type { %"class.blink::DoubleSize" }
%"class.blink::DoubleSize" = type { double, double }
%class.scoped_refptr.204 = type { %"class.blink::ComputedStyle"* }
%"class.blink::CSSAnimationUpdate" = type { %"class.blink::HeapVector.704", %"class.WTF::Vector.856", %"class.blink::HeapHashSet.861", %"class.WTF::Vector.856", %"class.blink::HeapVector.868", %"class.blink::HeapVector.875", %"class.blink::HeapHashMap.882", %"class.WTF::HashSet.889", %"class.WTF::HashSet.889", %"class.blink::HeapHashMap.893", %"class.blink::HeapHashMap.893", %"class.blink::HeapHashMap.893", %"class.blink::HeapHashMap.893" }
%"class.blink::HeapVector.704" = type { %"class.WTF::Vector.707" }
%"class.WTF::Vector.707" = type { %"class.WTF::VectorBuffer.708" }
%"class.WTF::VectorBuffer.708" = type { %"class.WTF::VectorBufferBase.709" }
%"class.WTF::VectorBufferBase.709" = type { %"class.blink::NewCSSAnimation"*, i32, i32 }
%"class.blink::NewCSSAnimation" = type { %"class.WTF::AtomicString", i64, i64, %"class.blink::Member.710", %"struct.blink::Timing", %"class.blink::Member.786", i32, %"class.blink::Member.798", %"class.WTF::Vector.555" }
%"class.blink::Member.710" = type { %"class.blink::MemberBase.711" }
%"class.blink::MemberBase.711" = type { %"class.blink::InertEffect"* }
%"class.blink::InertEffect" = type { %"class.blink::AnimationEffect", %"class.blink::Member.733", i8, %"class.absl::optional.714", %"class.absl::optional.781" }
%"class.blink::AnimationEffect" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.712", %"struct.blink::Timing", %"class.blink::Member.719", %"struct.blink::Timing::CalculatedTiming", i8, %"class.absl::optional.714", %"class.absl::optional.728", %"class.blink::AnimationTimeDelta" }
%"class.blink::Member.712" = type { %"class.blink::MemberBase.713" }
%"class.blink::MemberBase.713" = type { %"class.blink::AnimationEffectOwner"* }
%"class.blink::AnimationEffectOwner" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.719" = type { %"class.blink::MemberBase.720" }
%"class.blink::MemberBase.720" = type { %"class.blink::AnimationEffect::EventDelegate"* }
%"class.blink::AnimationEffect::EventDelegate" = type { i32 (...)** }
%"struct.blink::Timing::CalculatedTiming" = type { i32, %"class.absl::optional.723", %"class.absl::optional.723", i8, i8, i8, %"class.absl::optional.714", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta" }
%"class.absl::optional.723" = type { %"class.absl::optional_internal::optional_data.724" }
%"class.absl::optional_internal::optional_data.724" = type { %"class.absl::optional_internal::optional_data_base.725" }
%"class.absl::optional_internal::optional_data_base.725" = type { %"class.absl::optional_internal::optional_data_dtor_base.726" }
%"class.absl::optional_internal::optional_data_dtor_base.726" = type { i8, %union.anon.727 }
%union.anon.727 = type { double }
%"class.absl::optional.728" = type { %"class.absl::optional_internal::optional_data.729" }
%"class.absl::optional_internal::optional_data.729" = type { %"class.absl::optional_internal::optional_data_base.730" }
%"class.absl::optional_internal::optional_data_base.730" = type { %"class.absl::optional_internal::optional_data_dtor_base.731" }
%"class.absl::optional_internal::optional_data_dtor_base.731" = type { i8, %union.anon.732 }
%union.anon.732 = type { i32 }
%"class.blink::AnimationTimeDelta" = type { double }
%"class.blink::Member.733" = type { %"class.blink::MemberBase.734" }
%"class.blink::MemberBase.734" = type { %"class.blink::KeyframeEffectModelBase"* }
%"class.blink::KeyframeEffectModelBase" = type <{ %"class.blink::EffectModel", %"class.blink::HeapVector.737", %"class.blink::Member.745", %"class.blink::Member.769", i32, [4 x i8], double, %"class.blink::AnimationTimeDelta", i32, [4 x i8], %class.scoped_refptr.536, i8, i8, i8, [5 x i8] }>
%"class.blink::EffectModel" = type { i32 (...)** }
%"class.blink::HeapVector.737" = type { %"class.WTF::Vector.740" }
%"class.WTF::Vector.740" = type { %"class.WTF::VectorBuffer.741" }
%"class.WTF::VectorBuffer.741" = type { %"class.WTF::VectorBufferBase.742" }
%"class.WTF::VectorBufferBase.742" = type { %"class.blink::Member.743"*, i32, i32 }
%"class.blink::Member.743" = type { %"class.blink::MemberBase.1359" }
%"class.blink::MemberBase.1359" = type { %"class.blink::Keyframe"* }
%"class.blink::Keyframe" = type { i32 (...)**, %"class.absl::optional.723", %"class.absl::optional.1362", %class.scoped_refptr.536 }
%"class.absl::optional.1362" = type { %"class.absl::optional_internal::optional_data.1363" }
%"class.absl::optional_internal::optional_data.1363" = type { %"class.absl::optional_internal::optional_data_base.1364" }
%"class.absl::optional_internal::optional_data_base.1364" = type { %"class.absl::optional_internal::optional_data_dtor_base.1365" }
%"class.absl::optional_internal::optional_data_dtor_base.1365" = type { i8, %union.anon.1366 }
%union.anon.1366 = type { i32 }
%"class.blink::Member.745" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::HeapHashMap.747"* }
%"class.blink::HeapHashMap.747" = type { %"class.WTF::HashMap.750" }
%"class.WTF::HashMap.750" = type { %"class.WTF::HashTable.751" }
%"class.WTF::HashTable.751" = type <{ %"struct.WTF::KeyValuePair.753"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.753" = type { %"class.blink::PropertyHandle", %"class.blink::Member.754" }
%"class.blink::Member.754" = type { %"class.blink::MemberBase.755" }
%"class.blink::MemberBase.755" = type { %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"* }
%"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup" = type { %"class.blink::HeapVector.758" }
%"class.blink::HeapVector.758" = type { %"class.WTF::Vector.761" }
%"class.WTF::Vector.761" = type { %"class.WTF::VectorBuffer.762" }
%"class.WTF::VectorBuffer.762" = type { %"class.WTF::VectorBufferBase.763" }
%"class.WTF::VectorBufferBase.763" = type { %"class.blink::Member.764"*, i32, i32 }
%"class.blink::Member.764" = type { %"class.blink::MemberBase.765" }
%"class.blink::MemberBase.765" = type { %"class.blink::Keyframe::PropertySpecificKeyframe"* }
%"class.blink::Keyframe::PropertySpecificKeyframe" = type <{ i32 (...)**, double, %class.scoped_refptr.536, i32, [4 x i8] }>
%"class.blink::Member.769" = type { %"class.blink::MemberBase.770" }
%"class.blink::MemberBase.770" = type { %"class.blink::InterpolationEffect"* }
%"class.blink::InterpolationEffect" = type { i8, %"class.blink::HeapVector.773" }
%"class.blink::HeapVector.773" = type { %"class.WTF::Vector.776" }
%"class.WTF::Vector.776" = type { %"class.WTF::VectorBuffer.777" }
%"class.WTF::VectorBuffer.777" = type { %"class.WTF::VectorBufferBase.778" }
%"class.WTF::VectorBufferBase.778" = type { %"class.blink::Member.779"*, i32, i32 }
%"class.blink::Member.779" = type { %"class.blink::MemberBase.1352" }
%"class.blink::MemberBase.1352" = type { %"class.blink::InterpolationEffect::InterpolationRecord"* }
%"class.blink::InterpolationEffect::InterpolationRecord" = type { %"class.blink::Member.1355", %class.scoped_refptr.536, double, double, double, double }
%"class.blink::Member.1355" = type { %"class.blink::MemberBase.1356" }
%"class.blink::MemberBase.1356" = type { %"class.blink::Interpolation"* }
%"class.blink::Interpolation" = type { i32 (...)** }
%"class.absl::optional.714" = type { %"class.absl::optional_internal::optional_data.715" }
%"class.absl::optional_internal::optional_data.715" = type { %"class.absl::optional_internal::optional_data_base.716" }
%"class.absl::optional_internal::optional_data_base.716" = type { %"class.absl::optional_internal::optional_data_dtor_base.717" }
%"class.absl::optional_internal::optional_data_dtor_base.717" = type { i8, %union.anon.718 }
%union.anon.718 = type { %"class.blink::AnimationTimeDelta" }
%"class.absl::optional.781" = type { %"class.absl::optional_internal::optional_data.782" }
%"class.absl::optional_internal::optional_data.782" = type { %"class.absl::optional_internal::optional_data_base.783" }
%"class.absl::optional_internal::optional_data_base.783" = type { %"class.absl::optional_internal::optional_data_dtor_base.784" }
%"class.absl::optional_internal::optional_data_dtor_base.784" = type { i8, %union.anon.785 }
%union.anon.785 = type { i32 }
%"struct.blink::Timing" = type <{ %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", i32, [4 x i8], double, double, %"class.absl::optional.714", i32, [4 x i8], %class.scoped_refptr.536, i16, [6 x i8] }>
%"class.blink::Member.786" = type { %"class.blink::MemberBase.787" }
%"class.blink::MemberBase.787" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.790", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::HeapVector.790" = type { %"class.WTF::Vector.793" }
%"class.WTF::Vector.793" = type { %"class.WTF::VectorBuffer.794" }
%"class.WTF::VectorBuffer.794" = type { %"class.WTF::VectorBufferBase.795" }
%"class.WTF::VectorBufferBase.795" = type { %"class.blink::Member.796"*, i32, i32 }
%"class.blink::Member.796" = type opaque
%"class.blink::Member.798" = type { %"class.blink::MemberBase.799" }
%"class.blink::MemberBase.799" = type { %"class.blink::AnimationTimeline"* }
%"class.blink::AnimationTimeline" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.356", i32, [4 x i8], %"class.blink::HeapHashSet", %"class.blink::HeapHashSet.806", %"class.std::__1::unique_ptr.812", %"class.absl::optional.845" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.802" }
%"class.WTF::HashTable.802" = type <{ %"class.blink::Member.804"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.804" = type { %"class.blink::MemberBase.805" }
%"class.blink::MemberBase.805" = type { %"class.blink::Animation"* }
%"class.blink::Animation" = type <{ %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleObserver.base", [4 x i8], %"class.blink::CompositorAnimationDelegate", %"class.blink::CompositorAnimationClient", %"class.blink::AnimationEffectOwner", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.WTF::String", i32, [4 x i8], double, %"class.absl::optional.723", %"class.absl::optional.714", %"class.absl::optional.714", %"class.absl::optional.781", %"class.absl::optional.714", i8, [3 x i8], i32, %"class.blink::Member.934", %"class.blink::Member.934", %"class.blink::Member.936", %"class.blink::Member.356", %"class.blink::Member.798", i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], %"class.blink::Member.938", %"class.blink::Member.938", %"class.blink::Member.938", %"class.std::__1::unique_ptr.940", i8, [3 x i8], i32, %"class.blink::Member.946", i8, [7 x i8], %"class.base::TimeTicks", i8, i8, i8, [5 x i8] }>
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.918" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.906" }
%"class.blink::HeapVector.906" = type { %"class.WTF::Vector.909" }
%"class.WTF::Vector.909" = type { %"class.WTF::VectorBuffer.910" }
%"class.WTF::VectorBuffer.910" = type { %"class.WTF::VectorBufferBase.911", [32 x i8] }
%"class.WTF::VectorBufferBase.911" = type { %"struct.std::__1::pair.912"*, i32, i32 }
%"struct.std::__1::pair.912" = type { %"class.WTF::AtomicString", %"class.blink::Member.913" }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::HeapVector.915"* }
%"class.blink::HeapVector.915" = type opaque
%"class.std::__1::unique_ptr.918" = type { %"class.std::__1::__compressed_pair.919" }
%"class.std::__1::__compressed_pair.919" = type { %"struct.std::__1::__compressed_pair_elem.920" }
%"struct.std::__1::__compressed_pair_elem.920" = type { %"class.WTF::Vector.921"* }
%"class.WTF::Vector.921" = type opaque
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.925" }
%"class.blink::WeakMember.925" = type { %"class.blink::MemberBase.926" }
%"class.blink::MemberBase.926" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::CompositorAnimationDelegate" = type { i32 (...)** }
%"class.blink::CompositorAnimationClient" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.934" = type { %"class.blink::MemberBase.935" }
%"class.blink::MemberBase.935" = type { %"class.blink::ScriptPromiseProperty"* }
%"class.blink::ScriptPromiseProperty" = type opaque
%"class.blink::Member.936" = type { %"class.blink::MemberBase.937" }
%"class.blink::MemberBase.937" = type { %"class.blink::AnimationEffect"* }
%"class.blink::Member.938" = type { %"class.blink::MemberBase.939" }
%"class.blink::MemberBase.939" = type { %"class.blink::Event"* }
%"class.blink::Event" = type opaque
%"class.std::__1::unique_ptr.940" = type { %"class.std::__1::__compressed_pair.941" }
%"class.std::__1::__compressed_pair.941" = type { %"struct.std::__1::__compressed_pair_elem.942" }
%"struct.std::__1::__compressed_pair_elem.942" = type { %"class.blink::Animation::CompositorState"* }
%"class.blink::Animation::CompositorState" = type { %"class.absl::optional.723", %"class.absl::optional.723", double, i8, i32 }
%"class.blink::Member.946" = type { %"class.blink::MemberBase.947" }
%"class.blink::MemberBase.947" = type { %"class.blink::Animation::CompositorAnimationHolder"* }
%"class.blink::Animation::CompositorAnimationHolder" = type { %"class.blink::ThreadState::PrefinalizerRegistration.950", %"class.std::__1::unique_ptr.951", %"class.blink::Member.804" }
%"class.blink::ThreadState::PrefinalizerRegistration.950" = type { i8 }
%"class.std::__1::unique_ptr.951" = type { %"class.std::__1::__compressed_pair.952" }
%"class.std::__1::__compressed_pair.952" = type { %"struct.std::__1::__compressed_pair_elem.953" }
%"struct.std::__1::__compressed_pair_elem.953" = type { %"class.blink::CompositorAnimation"* }
%"class.blink::CompositorAnimation" = type opaque
%"class.blink::HeapHashSet.806" = type { %"class.WTF::HashSet.809" }
%"class.WTF::HashSet.809" = type { %"class.WTF::HashTable.810" }
%"class.WTF::HashTable.810" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.std::__1::unique_ptr.812" = type { %"class.std::__1::__compressed_pair.813" }
%"class.std::__1::__compressed_pair.813" = type { %"struct.std::__1::__compressed_pair_elem.814" }
%"struct.std::__1::__compressed_pair_elem.814" = type { %"class.blink::CompositorAnimationTimeline"* }
%"class.blink::CompositorAnimationTimeline" = type { %class.scoped_refptr.815 }
%class.scoped_refptr.815 = type { %"class.cc::AnimationTimeline"* }
%"class.cc::AnimationTimeline" = type <{ i32 (...)**, %"class.base::RefCounted.816", [4 x i8], %"class.std::__1::unordered_map", i32, [4 x i8], %"class.cc::AnimationHost"*, i8, i8, [6 x i8] }>
%"class.base::RefCounted.816" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.817" }
%"class.std::__1::__hash_table.817" = type <{ %"class.std::__1::unique_ptr.818", %"class.std::__1::__compressed_pair.828", %"class.std::__1::__compressed_pair.833", %"class.std::__1::__compressed_pair.837", [4 x i8] }>
%"class.std::__1::unique_ptr.818" = type { %"class.std::__1::__compressed_pair.819" }
%"class.std::__1::__compressed_pair.819" = type { %"struct.std::__1::__compressed_pair_elem.820", %"struct.std::__1::__compressed_pair_elem.822" }
%"struct.std::__1::__compressed_pair_elem.820" = type { %"struct.std::__1::__hash_node_base.821"** }
%"struct.std::__1::__hash_node_base.821" = type { %"struct.std::__1::__hash_node_base.821"* }
%"struct.std::__1::__compressed_pair_elem.822" = type { %"class.std::__1::__bucket_list_deallocator.823" }
%"class.std::__1::__bucket_list_deallocator.823" = type { %"class.std::__1::__compressed_pair.824" }
%"class.std::__1::__compressed_pair.824" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"class.std::__1::__compressed_pair.828" = type { %"struct.std::__1::__compressed_pair_elem.829" }
%"struct.std::__1::__compressed_pair_elem.829" = type { %"struct.std::__1::__hash_node_base.821" }
%"class.std::__1::__compressed_pair.833" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"class.cc::AnimationHost" = type opaque
%"class.absl::optional.845" = type { %"class.absl::optional_internal::optional_data.846" }
%"class.absl::optional_internal::optional_data.846" = type { %"class.absl::optional_internal::optional_data_base.847" }
%"class.absl::optional_internal::optional_data_base.847" = type { %"class.absl::optional_internal::optional_data_dtor_base.848" }
%"class.absl::optional_internal::optional_data_dtor_base.848" = type { i8, %union.anon.849 }
%union.anon.849 = type { %"struct.blink::AnimationTimeline::PhaseAndTime" }
%"struct.blink::AnimationTimeline::PhaseAndTime" = type { i32, %"class.absl::optional.850" }
%"class.absl::optional.850" = type { %"class.absl::optional_internal::optional_data.851" }
%"class.absl::optional_internal::optional_data.851" = type { %"class.absl::optional_internal::optional_data_base.852" }
%"class.absl::optional_internal::optional_data_base.852" = type { %"class.absl::optional_internal::optional_data_dtor_base.853" }
%"class.absl::optional_internal::optional_data_dtor_base.853" = type { i8, %union.anon.854 }
%union.anon.854 = type { %"class.base::TimeDelta" }
%"class.blink::HeapHashSet.861" = type { %"class.WTF::HashSet.864" }
%"class.WTF::HashSet.864" = type { %"class.WTF::HashTable.865" }
%"class.WTF::HashTable.865" = type <{ %"class.blink::Member.867"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.867" = type { %"class.blink::MemberBase.1367" }
%"class.blink::MemberBase.1367" = type { %"class.blink::Animation"* }
%"class.WTF::Vector.856" = type { %"class.WTF::VectorBuffer.857" }
%"class.WTF::VectorBuffer.857" = type { %"class.WTF::VectorBufferBase.858" }
%"class.WTF::VectorBufferBase.858" = type { i32*, i32, i32 }
%"class.blink::HeapVector.868" = type { %"class.WTF::Vector.871" }
%"class.WTF::Vector.871" = type { %"class.WTF::VectorBuffer.872" }
%"class.WTF::VectorBuffer.872" = type { %"class.WTF::VectorBufferBase.873" }
%"class.WTF::VectorBufferBase.873" = type { %"class.blink::UpdatedCSSAnimation"*, i32, i32 }
%"class.blink::UpdatedCSSAnimation" = type { i32, %"class.blink::Member.804", %"class.blink::Member.710", %"struct.blink::Timing", %"class.blink::Member.786", i32, %"class.blink::Member.798", %"class.WTF::Vector.555" }
%"class.blink::HeapVector.875" = type { %"class.WTF::Vector.878" }
%"class.WTF::Vector.878" = type { %"class.WTF::VectorBuffer.879" }
%"class.WTF::VectorBuffer.879" = type { %"class.WTF::VectorBufferBase.880" }
%"class.WTF::VectorBufferBase.880" = type { %"class.blink::Member.804"*, i32, i32 }
%"class.blink::HeapHashMap.882" = type { %"class.WTF::HashMap.885" }
%"class.WTF::HashMap.885" = type { %"class.WTF::HashTable.886" }
%"class.WTF::HashTable.886" = type <{ %"struct.WTF::KeyValuePair.888"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.888" = type { %"class.blink::PropertyHandle", %"class.blink::Member.1378" }
%"class.blink::Member.1378" = type { %"class.blink::MemberBase.1379" }
%"class.blink::MemberBase.1379" = type { %"struct.blink::CSSAnimationUpdate::NewTransition"* }
%"struct.blink::CSSAnimationUpdate::NewTransition" = type { i32 (...)**, %"class.blink::PropertyHandle", %class.scoped_refptr.204, %class.scoped_refptr.204, %class.scoped_refptr.204, double, %"class.blink::Member.710" }
%"class.WTF::HashSet.889" = type { %"class.WTF::HashTable.890" }
%"class.WTF::HashTable.890" = type <{ %"class.blink::PropertyHandle"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.893" = type { %"class.WTF::HashMap.896" }
%"class.WTF::HashMap.896" = type { %"class.WTF::HashTable.897" }
%"class.WTF::HashTable.897" = type <{ %"struct.WTF::KeyValuePair.899"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.899" = type { %"class.blink::PropertyHandle", %"class.blink::Member.1368" }
%"class.blink::Member.1368" = type { %"class.blink::MemberBase.1369" }
%"class.blink::MemberBase.1369" = type { %"class.blink::HeapVector.1370"* }
%"class.blink::HeapVector.1370" = type { %"class.WTF::Vector.1373" }
%"class.WTF::Vector.1373" = type { %"class.WTF::VectorBuffer.1374" }
%"class.WTF::VectorBuffer.1374" = type { %"class.WTF::VectorBufferBase.1375", [8 x i8] }
%"class.WTF::VectorBufferBase.1375" = type { %"class.blink::Member.1355"*, i32, i32 }
%"class.blink::FontBuilder" = type <{ %"class.blink::Document"*, %"class.blink::TreeScope"*, %"class.blink::FontDescription", i32, [4 x i8] }>
%"class.blink::PseudoElement" = type opaque
%"class.blink::ElementStyleResources" = type { %"class.blink::Element"*, %"class.WTF::HashSet.900", %"class.WTF::HashSet.900", float, %"class.blink::PseudoElement"* }
%"class.WTF::HashSet.900" = type { %"class.WTF::HashTable.901" }
%"class.WTF::HashTable.901" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.281", %"class.blink::DataRef.404", %"class.blink::DataRef.408", %"class.blink::DataRef.608", %"class.blink::DataRef.671", %"class.blink::DataRef.675", %"class.blink::DataRef.679", %"class.blink::DataRef.683", [20 x i8], [4 x i8] }>
%"class.blink::StyleRay" = type <{ %"class.blink::BasicShape.base", float, i32, i8, [3 x i8] }>
%"class.blink::UnderlyingValueOwner" = type { %"class.blink::UnderlyingValue", %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* }
%"class.blink::UnderlyingValue" = type { i32 (...)** }
%"struct.blink::InterpolationValue" = type { %"class.std::__1::unique_ptr.1321", %class.scoped_refptr.1327 }
%"class.std::__1::unique_ptr.1321" = type { %"class.std::__1::__compressed_pair.1322" }
%"class.std::__1::__compressed_pair.1322" = type { %"struct.std::__1::__compressed_pair_elem.1323" }
%"struct.std::__1::__compressed_pair_elem.1323" = type { %"class.blink::InterpolableValue"* }
%class.scoped_refptr.1327 = type { %"class.blink::NonInterpolableValue"* }
%"class.blink::CSSRayNonInterpolableValue" = type { %"class.blink::NonInterpolableValue.base", %"class.blink::(anonymous namespace)::RayMode", [4 x i8] }
%"class.blink::NonInterpolableValue.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.178" }>
%"class.blink::(anonymous namespace)::RayMode" = type <{ i32, i8, [3 x i8] }>
%"class.WTF::Vector.1328" = type { %"class.WTF::VectorBuffer.1329" }
%"class.WTF::VectorBuffer.1329" = type { %"class.WTF::VectorBufferBase.1330" }
%"class.WTF::VectorBufferBase.1330" = type { %"class.std::__1::unique_ptr.1331"*, i32, i32 }
%"class.std::__1::unique_ptr.1331" = type { %"class.std::__1::__compressed_pair.1402" }
%"class.std::__1::__compressed_pair.1402" = type { %"struct.std::__1::__compressed_pair_elem.1403" }
%"struct.std::__1::__compressed_pair_elem.1403" = type { %"class.blink::InterpolationType::ConversionChecker"* }
%"class.blink::InterpolationType::ConversionChecker" = type { i32 (...)**, %"class.blink::InterpolationType"* }
%"class.std::__1::unique_ptr.1334" = type { %"class.std::__1::__compressed_pair.1335" }
%"class.std::__1::__compressed_pair.1335" = type { %"struct.std::__1::__compressed_pair_elem.1336" }
%"struct.std::__1::__compressed_pair_elem.1336" = type { %"class.blink::(anonymous namespace)::UnderlyingRayModeChecker"* }
%"class.blink::(anonymous namespace)::UnderlyingRayModeChecker" = type { %"class.blink::CSSInterpolationType::CSSConversionChecker", %"class.blink::(anonymous namespace)::RayMode" }
%"class.blink::CSSInterpolationType::CSSConversionChecker" = type { %"class.blink::InterpolationType::ConversionChecker" }
%"class.std::__1::unique_ptr.1340" = type { %"class.std::__1::__compressed_pair.1341" }
%"class.std::__1::__compressed_pair.1341" = type { %"struct.std::__1::__compressed_pair_elem.1342" }
%"struct.std::__1::__compressed_pair_elem.1342" = type { %"class.blink::(anonymous namespace)::InheritedRayChecker"* }
%"class.blink::(anonymous namespace)::InheritedRayChecker" = type { %"class.blink::CSSInterpolationType::CSSConversionChecker", %class.scoped_refptr.1320 }
%class.scoped_refptr.1320 = type { %"class.blink::StyleRay"* }
%"struct.blink::PairwiseInterpolationValue" = type { %"class.std::__1::unique_ptr.1321", %"class.std::__1::unique_ptr.1321", %class.scoped_refptr.1327 }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::InterpolationEnvironment" = type { i32 (...)**, %"class.blink::InterpolationTypesMap"* }
%"class.blink::InterpolationTypesMap" = type { i32 (...)** }
%"class.WTF::VectorBuffer.342" = type <{ %"class.WTF::VectorBufferBase.343", [28 x i8], [4 x i8] }>
%"struct.std::__1::default_delete.434" = type { i8 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN5blink17ComputedStyleBase13SetOffsetPathE13scoped_refptrINS_10BasicShapeEE = comdat any

$_ZN5blink20CSSInterpolationTypeD2Ev = comdat any

$_ZN5blink23CSSRayInterpolationTypeD0Ev = comdat any

$_ZNK5blink17InterpolationType20MaybeConvertPairwiseERKNS_8Keyframe24PropertySpecificKeyframeES4_RKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS0_17ConversionCheckerENSD_14default_deleteISF_EEEELj0ENSB_18PartitionAllocatorEEE = comdat any

$_ZNK5blink20CSSInterpolationType14CreateCSSValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERKNS_18StyleResolverStateE = comdat any

$_ZNK5blink20CSSInterpolationType33PreInterpolationCompositeIfNeededENS_18InterpolationValueERKS1_NS_11EffectModel18CompositeOperationERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS8_14default_deleteISB_EEEELj0ENS6_18PartitionAllocatorEEE = comdat any

$_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan14PercentDataD2Ev = comdat any

$_ZN3WTF12VectorBufferIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN5blink17ComputedStyleBase50StyleRareNonInheritedUsageLessThan14PercentSubDataD2Ev = comdat any

$_ZN5blink18NinePieceImageDataD2Ev = comdat any

$_ZN5blink15CSSVariableDataD2Ev = comdat any

$_ZNSt3__110unique_ptrIN5blink11PaintImagesENS_14default_deleteIS2_EEE5resetEPS2_ = comdat any

$_ZN5blink13CSSTimingDataD2Ev = comdat any

$_ZN5blink16CSSAnimationDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase13StyleGridDataD2Ev = comdat any

$_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j = comdat any

$_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan22PercentDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase48StyleRareNonInheritedUsageLessThan100PercentDataD2Ev = comdat any

$_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_ = comdat any

$_ZN5blink26CSSRayNonInterpolableValueD0Ev = comdat any

$_ZNK5blink26CSSRayNonInterpolableValue7GetTypeEv = comdat any

$_ZN5blink20NonInterpolableValueD2Ev = comdat any

$_ZN5blink17InterpolationTypeD2Ev = comdat any

$_ZN5blink17InterpolationTypeD0Ev = comdat any

$_ZNK5blink17InterpolationType17MaybeMergeSinglesEONS_18InterpolationValueES2_ = comdat any

$_ZNK5blink17InterpolationType9CompositeERNS_20UnderlyingValueOwnerEdRKNS_18InterpolationValueEd = comdat any

$_ZN5blink17InterpolationType17ConversionCheckerD2Ev = comdat any

$_ZNK5blink20CSSInterpolationType20CSSConversionChecker7IsValidERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueE = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS2_14default_deleteIS6_EEEEEEmm = comdat any

$_ZTVN5blink26CSSRayNonInterpolableValueE = comdat any

$_ZTVN5blink17InterpolationTypeE = comdat any

@_ZN5blink26CSSRayNonInterpolableValue12static_type_E = hidden global i8* bitcast (i8** @_ZN5blink26CSSRayNonInterpolableValue12static_type_E to i8*), align 8
@_ZTVN5blink23CSSRayInterpolationTypeE = hidden unnamed_addr constant { [18 x i8*] } { [18 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::CSSInterpolationType"*)* @_ZN5blink20CSSInterpolationTypeD2Ev to i8*), i8* bitcast (void (%"class.blink::CSSRayInterpolationType"*)* @_ZN5blink23CSSRayInterpolationTypeD0Ev to i8*), i8* bitcast (void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1328"*)* @_ZNK5blink17InterpolationType20MaybeConvertPairwiseERKNS_8Keyframe24PropertySpecificKeyframeES4_RKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS0_17ConversionCheckerENSD_14default_deleteISF_EEEELj0ENSB_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1328"*)* @_ZNK5blink20CSSInterpolationType18MaybeConvertSingleERKNS_8Keyframe24PropertySpecificKeyframeERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENSD_14default_deleteISG_EEEELj0ENSB_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::CSSRayInterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)* @_ZNK5blink23CSSRayInterpolationType17MaybeMergeSinglesEONS_18InterpolationValueES2_ to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::InterpolationEnvironment"*)* @_ZNK5blink20CSSInterpolationType27MaybeConvertUnderlyingValueERKNS_24InterpolationEnvironmentE to i8*), i8* bitcast (void (%"class.blink::CSSRayInterpolationType"*, %"class.blink::UnderlyingValueOwner"*, double, %"struct.blink::InterpolationValue"*, double)* @_ZNK5blink23CSSRayInterpolationType9CompositeERNS_20UnderlyingValueOwnerEdRKNS_18InterpolationValueEd to i8*), i8* bitcast (void (%"class.blink::CSSInterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::InterpolationEnvironment"*)* @_ZNK5blink20CSSInterpolationType5ApplyERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERNS_24InterpolationEnvironmentE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSRayInterpolationType"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1328"*)* @_ZNK5blink23CSSRayInterpolationType19MaybeConvertNeutralERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSRayInterpolationType"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.1328"*)* @_ZNK5blink23CSSRayInterpolationType19MaybeConvertInitialERKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSRayInterpolationType"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.1328"*)* @_ZNK5blink23CSSRayInterpolationType19MaybeConvertInheritERKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSRayInterpolationType"*, %"class.blink::CSSValue"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.1328"*)* @_ZNK5blink23CSSRayInterpolationType17MaybeConvertValueERKNS_8CSSValueEPKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS9_14default_deleteISC_EEEELj0ENS7_18PartitionAllocatorEEE to i8*), i8* bitcast (%"class.blink::CSSValue"* (%"class.blink::CSSInterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::StyleResolverState"*)* @_ZNK5blink20CSSInterpolationType14CreateCSSValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERKNS_18StyleResolverStateE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*, i32, %"class.WTF::Vector.1328"*)* @_ZNK5blink20CSSInterpolationType33PreInterpolationCompositeIfNeededENS_18InterpolationValueERKS1_NS_11EffectModel18CompositeOperationERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS8_14default_deleteISB_EEEELj0ENS6_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSRayInterpolationType"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink23CSSRayInterpolationType43MaybeConvertStandardPropertyUnderlyingValueERKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::CSSRayInterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::StyleResolverState"*)* @_ZNK5blink23CSSRayInterpolationType26ApplyStandardPropertyValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERNS_18StyleResolverStateE to i8*)] }, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@_ZTVN5blink18InterpolableNumberE = external unnamed_addr constant { [20 x i8*] }, align 8
@_ZTVN5blink26CSSRayNonInterpolableValueE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::NonInterpolableValue"*)* @_ZN5blink20NonInterpolableValueD2Ev to i8*), i8* bitcast (void (%"class.blink::CSSRayNonInterpolableValue"*)* @_ZN5blink26CSSRayNonInterpolableValueD0Ev to i8*), i8* bitcast (i8* (%"class.blink::CSSRayNonInterpolableValue"*)* @_ZNK5blink26CSSRayNonInterpolableValue7GetTypeEv to i8*)] }, comdat, align 8
@_ZTVN5blink20CSSInterpolationTypeE = external unnamed_addr constant { [18 x i8*] }, align 8
@_ZTVN5blink17InterpolationTypeE = linkonce_odr hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InterpolationType"*)* @_ZN5blink17InterpolationTypeD2Ev to i8*), i8* bitcast (void (%"class.blink::InterpolationType"*)* @_ZN5blink17InterpolationTypeD0Ev to i8*), i8* bitcast (void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1328"*)* @_ZNK5blink17InterpolationType20MaybeConvertPairwiseERKNS_8Keyframe24PropertySpecificKeyframeES4_RKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS0_17ConversionCheckerENSD_14default_deleteISF_EEEELj0ENSB_18PartitionAllocatorEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)* @_ZNK5blink17InterpolationType17MaybeMergeSinglesEONS_18InterpolationValueES2_ to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.blink::InterpolationType"*, %"class.blink::UnderlyingValueOwner"*, double, %"struct.blink::InterpolationValue"*, double)* @_ZNK5blink17InterpolationType9CompositeERNS_20UnderlyingValueOwnerEdRKNS_18InterpolationValueEd to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTVN5blink12_GLOBAL__N_124UnderlyingRayModeCheckerE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InterpolationType::ConversionChecker"*)* @_ZN5blink17InterpolationType17ConversionCheckerD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::UnderlyingRayModeChecker"*)* @_ZN5blink12_GLOBAL__N_124UnderlyingRayModeCheckerD0Ev to i8*), i8* bitcast (i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*)* @_ZNK5blink20CSSInterpolationType20CSSConversionChecker7IsValidERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueE to i8*), i8* bitcast (i1 (%"class.blink::(anonymous namespace)::UnderlyingRayModeChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)* @_ZNK5blink12_GLOBAL__N_124UnderlyingRayModeChecker7IsValidERKNS_18StyleResolverStateERKNS_18InterpolationValueE to i8*)] }, align 8
@.str.2 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.3 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEEEEPKcv = private unnamed_addr constant [185 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::unique_ptr<blink::InterpolationType::ConversionChecker, std::__1::default_delete<blink::InterpolationType::ConversionChecker> >]\00", align 1
@_ZTVN5blink12_GLOBAL__N_119InheritedRayCheckerE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::(anonymous namespace)::InheritedRayChecker"*)* @_ZN5blink12_GLOBAL__N_119InheritedRayCheckerD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::InheritedRayChecker"*)* @_ZN5blink12_GLOBAL__N_119InheritedRayCheckerD0Ev to i8*), i8* bitcast (i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*)* @_ZNK5blink20CSSInterpolationType20CSSConversionChecker7IsValidERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueE to i8*), i8* bitcast (i1 (%"class.blink::(anonymous namespace)::InheritedRayChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)* @_ZNK5blink12_GLOBAL__N_119InheritedRayChecker7IsValidERKNS_18StyleResolverStateERKNS_18InterpolationValueE to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink23CSSRayInterpolationType26ApplyStandardPropertyValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERNS_18StyleResolverStateE(%"class.blink::CSSRayInterpolationType"* nocapture readnone, %"class.blink::InterpolableValue"* nocapture readonly dereferenceable(8), %"class.blink::NonInterpolableValue"* nocapture readonly, %"class.blink::StyleResolverState"* nocapture readonly dereferenceable(600)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %3, i64 0, i32 2, i32 0
  %6 = bitcast %"class.blink::ComputedStyle"** %5 to %"class.blink::ComputedStyleBase"**
  %7 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::InterpolableValue", %"class.blink::InterpolableValue"* %1, i64 1
  %9 = bitcast %"class.blink::InterpolableValue"* %8 to double*
  %10 = load double, double* %9, align 8
  %11 = fptrunc double %10 to float
  %12 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %2, i64 0, i32 2
  %13 = bitcast [4 x i8]* %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds [4 x i8], [4 x i8]* %12, i64 1, i64 0
  %16 = load i8, i8* %15, align 4, !range !2
  %17 = icmp ne i8 %16, 0
  %18 = tail call %"class.blink::StyleRay"* @_ZN5blink8StyleRay6CreateEfNS0_7RaySizeEb(float %11, i32 %14, i1 zeroext %17) #10
  %19 = bitcast %"class.blink::StyleRay"* %18 to %"class.blink::BasicShape"*
  tail call void @_ZN5blink17ComputedStyleBase13SetOffsetPathE13scoped_refptrINS_10BasicShapeEE(%"class.blink::ComputedStyleBase"* %7, %"class.blink::BasicShape"* %19)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase13SetOffsetPathE13scoped_refptrINS_10BasicShapeEE(%"class.blink::ComputedStyleBase"*, %"class.blink::BasicShape"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::BasicShape"* %1 to i64
  %4 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 3
  %5 = getelementptr inbounds %"class.blink::DataRef.408", %"class.blink::DataRef.408"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %24, label %10

10:                                               ; preds = %2
  %11 = tail call noalias i8* @malloc(i64 104) #10
  %12 = bitcast i8* %11 to %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*
  tail call void @_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan14PercentDataC1ERKS1_(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %12, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* dereferenceable(104) %6) #10
  %13 = ptrtoint i8* %11 to i64
  %14 = bitcast %"class.blink::DataRef.408"* %4 to i64*
  %15 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %5, align 8
  store i64 %13, i64* %14, align 8
  %16 = icmp eq %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %15, null
  br i1 %16, label %24, label %17

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %15, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %18) #10
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %17
  tail call void @_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan14PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* nonnull %15) #10
  %23 = bitcast %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %15 to i8*
  tail call void @free(i8* %23) #10
  br label %24

24:                                               ; preds = %2, %10, %17, %22
  %25 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %5, align 8
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %25, i64 0, i32 2
  %27 = getelementptr inbounds %"class.blink::DataRef.412", %"class.blink::DataRef.412"* %26, i64 0, i32 0, i32 0
  %28 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %28, i64 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %46, label %32

32:                                               ; preds = %24
  %33 = tail call noalias i8* @malloc(i64 80) #10
  %34 = bitcast i8* %33 to %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*
  tail call void @_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan22PercentDataC1ERKS1_(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %34, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* dereferenceable(80) %28) #10
  %35 = ptrtoint i8* %33 to i64
  %36 = bitcast %"class.blink::DataRef.412"* %26 to i64*
  %37 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %27, align 8
  store i64 %35, i64* %36, align 8
  %38 = icmp eq %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %37, null
  br i1 %38, label %46, label %39

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %37, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %40) #10
  %41 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %37, i64 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %39
  tail call void @_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan22PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* nonnull %37) #10
  %45 = bitcast %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %37 to i8*
  tail call void @free(i8* %45) #10
  br label %46

46:                                               ; preds = %24, %32, %39, %44
  %47 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %27, align 8
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %47, i64 0, i32 2
  %49 = getelementptr inbounds %"class.blink::DataRef.416", %"class.blink::DataRef.416"* %48, i64 0, i32 0, i32 0
  %50 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %50, i64 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, 1
  br i1 %53, label %68, label %54

54:                                               ; preds = %46
  %55 = tail call noalias i8* @malloc(i64 480) #10
  %56 = bitcast i8* %55 to %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*
  tail call void @_ZN5blink17ComputedStyleBase48StyleRareNonInheritedUsageLessThan100PercentDataC1ERKS1_(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %56, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* dereferenceable(480) %50) #10
  %57 = ptrtoint i8* %55 to i64
  %58 = bitcast %"class.blink::DataRef.416"* %48 to i64*
  %59 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %49, align 8
  store i64 %57, i64* %58, align 8
  %60 = icmp eq %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %59, null
  br i1 %60, label %68, label %61

61:                                               ; preds = %54
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %59, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %62) #10
  %63 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %59, i64 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %68

66:                                               ; preds = %61
  tail call void @_ZN5blink17ComputedStyleBase48StyleRareNonInheritedUsageLessThan100PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* nonnull %59) #10
  %67 = bitcast %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %59 to i8*
  tail call void @free(i8* %67) #10
  br label %68

68:                                               ; preds = %46, %54, %61, %66
  %69 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %49, align 8
  %70 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %69, i64 0, i32 11
  %71 = bitcast %class.scoped_refptr.439* %70 to i64*
  %72 = getelementptr inbounds %class.scoped_refptr.439, %class.scoped_refptr.439* %70, i64 0, i32 0
  %73 = load %"class.blink::BasicShape"*, %"class.blink::BasicShape"** %72, align 8
  store i64 %3, i64* %71, align 8
  %74 = icmp eq %"class.blink::BasicShape"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %68
  %76 = getelementptr inbounds %"class.blink::BasicShape", %"class.blink::BasicShape"* %73, i64 0, i32 1, i32 0
  %77 = getelementptr inbounds %"class.base::RefCounted.441", %"class.base::RefCounted.441"* %76, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %77) #10
  %78 = getelementptr inbounds %"class.base::RefCounted.441", %"class.base::RefCounted.441"* %76, i64 0, i32 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %88

81:                                               ; preds = %75
  %82 = getelementptr inbounds %"class.base::RefCounted.441", %"class.base::RefCounted.441"* %76, i64 -2
  %83 = bitcast %"class.base::RefCounted.441"* %82 to %"class.blink::BasicShape"*
  %84 = bitcast %"class.base::RefCounted.441"* %82 to void (%"class.blink::BasicShape"*)***
  %85 = load void (%"class.blink::BasicShape"*)**, void (%"class.blink::BasicShape"*)*** %84, align 8
  %86 = getelementptr inbounds void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %85, i64 1
  %87 = load void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %86, align 8
  tail call void %87(%"class.blink::BasicShape"* nonnull %83) #10
  br label %88

88:                                               ; preds = %81, %75, %68
  ret void
}

declare %"class.blink::StyleRay"* @_ZN5blink8StyleRay6CreateEfNS0_7RaySizeEb(float, i32, i1 zeroext) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink23CSSRayInterpolationType9CompositeERNS_20UnderlyingValueOwnerEdRKNS_18InterpolationValueEd(%"class.blink::CSSRayInterpolationType"*, %"class.blink::UnderlyingValueOwner"* dereferenceable(40), double, %"struct.blink::InterpolationValue"* dereferenceable(16), double) unnamed_addr #0 align 2 {
  %6 = tail call dereferenceable(16) %"struct.blink::InterpolationValue"* @_ZNK5blink20UnderlyingValueOwner5ValueEv(%"class.blink::UnderlyingValueOwner"* %1) #10
  %7 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %6, i64 0, i32 1, i32 0
  %8 = bitcast %"class.blink::NonInterpolableValue"** %7 to %"class.blink::CSSRayNonInterpolableValue"**
  %9 = load %"class.blink::CSSRayNonInterpolableValue"*, %"class.blink::CSSRayNonInterpolableValue"** %8, align 8
  %10 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %3, i64 0, i32 1, i32 0
  %11 = bitcast %"class.blink::NonInterpolableValue"** %10 to %"class.blink::CSSRayNonInterpolableValue"**
  %12 = load %"class.blink::CSSRayNonInterpolableValue"*, %"class.blink::CSSRayNonInterpolableValue"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::CSSRayNonInterpolableValue", %"class.blink::CSSRayNonInterpolableValue"* %9, i64 0, i32 1, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"class.blink::CSSRayNonInterpolableValue", %"class.blink::CSSRayNonInterpolableValue"* %12, i64 0, i32 1, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %14, %16
  br i1 %17, label %18, label %34

18:                                               ; preds = %5
  %19 = getelementptr inbounds %"class.blink::CSSRayNonInterpolableValue", %"class.blink::CSSRayNonInterpolableValue"* %9, i64 0, i32 1, i32 1
  %20 = load i8, i8* %19, align 4, !range !2
  %21 = getelementptr inbounds %"class.blink::CSSRayNonInterpolableValue", %"class.blink::CSSRayNonInterpolableValue"* %12, i64 0, i32 1, i32 1
  %22 = load i8, i8* %21, align 4, !range !2
  %23 = icmp eq i8 %20, %22
  br i1 %23, label %24, label %34

24:                                               ; preds = %18
  %25 = tail call dereferenceable(16) %"struct.blink::InterpolationValue"* @_ZN5blink20UnderlyingValueOwner12MutableValueEv(%"class.blink::UnderlyingValueOwner"* %1) #10
  %26 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %25, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %26, align 8
  %28 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %28, align 8
  %30 = bitcast %"class.blink::InterpolableValue"* %27 to void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)***
  %31 = load void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)** %31, i64 14
  %33 = load void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)** %32, align 8
  tail call void %33(%"class.blink::InterpolableValue"* %27, double %2, %"class.blink::InterpolableValue"* dereferenceable(8) %29) #10
  br label %36

34:                                               ; preds = %5, %18
  %35 = getelementptr inbounds %"class.blink::CSSRayInterpolationType", %"class.blink::CSSRayInterpolationType"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink20UnderlyingValueOwner3SetERKNS_17InterpolationTypeERKNS_18InterpolationValueE(%"class.blink::UnderlyingValueOwner"* %1, %"class.blink::InterpolationType"* dereferenceable(32) %35, %"struct.blink::InterpolationValue"* dereferenceable(16) %3) #10
  br label %36

36:                                               ; preds = %34, %24
  ret void
}

declare dereferenceable(16) %"struct.blink::InterpolationValue"* @_ZNK5blink20UnderlyingValueOwner5ValueEv(%"class.blink::UnderlyingValueOwner"*) local_unnamed_addr #2

declare dereferenceable(16) %"struct.blink::InterpolationValue"* @_ZN5blink20UnderlyingValueOwner12MutableValueEv(%"class.blink::UnderlyingValueOwner"*) local_unnamed_addr #2

declare void @_ZN5blink20UnderlyingValueOwner3SetERKNS_17InterpolationTypeERKNS_18InterpolationValueE(%"class.blink::UnderlyingValueOwner"*, %"class.blink::InterpolationType"* dereferenceable(32), %"struct.blink::InterpolationValue"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink23CSSRayInterpolationType19MaybeConvertNeutralERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* noalias nocapture sret, %"class.blink::CSSRayInterpolationType"* nocapture readnone, %"struct.blink::InterpolationValue"* nocapture readonly dereferenceable(16), %"class.WTF::Vector.1328"* nocapture dereferenceable(16)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::unique_ptr.1334", align 8
  %6 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %2, i64 0, i32 1, i32 0
  %7 = bitcast %"class.blink::NonInterpolableValue"** %6 to %"class.blink::CSSRayNonInterpolableValue"**
  %8 = load %"class.blink::CSSRayNonInterpolableValue"*, %"class.blink::CSSRayNonInterpolableValue"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::CSSRayNonInterpolableValue", %"class.blink::CSSRayNonInterpolableValue"* %8, i64 0, i32 1
  %10 = bitcast %"class.std::__1::unique_ptr.1334"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #10
  %11 = tail call noalias i8* @malloc(i64 24) #10
  %12 = getelementptr inbounds i8, i8* %11, i64 8
  %13 = bitcast i8* %12 to %"class.blink::InterpolationType"**
  store %"class.blink::InterpolationType"* null, %"class.blink::InterpolationType"** %13, align 8
  %14 = bitcast i8* %11 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink12_GLOBAL__N_124UnderlyingRayModeCheckerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = getelementptr inbounds i8, i8* %11, i64 16
  %16 = bitcast %"class.blink::(anonymous namespace)::RayMode"* %9 to i64*
  %17 = bitcast i8* %15 to i64*
  %18 = load i64, i64* %16, align 4
  store i64 %18, i64* %17, align 8
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.1334", %"class.std::__1::unique_ptr.1334"* %5, i64 0, i32 0, i32 0, i32 0
  %20 = bitcast %"class.std::__1::unique_ptr.1334"* %5 to i8**
  store i8* %11, i8** %20, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.1328", %"class.WTF::Vector.1328"* %3, i64 0, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::Vector.1328", %"class.WTF::Vector.1328"* %3, i64 0, i32 0, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %22, %24
  br i1 %25, label %35, label %26, !prof !3

26:                                               ; preds = %4
  %27 = ptrtoint i8* %11 to i64
  %28 = getelementptr inbounds %"class.WTF::Vector.1328", %"class.WTF::Vector.1328"* %3, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.std::__1::unique_ptr.1331"*, %"class.std::__1::unique_ptr.1331"** %28, align 8
  %30 = zext i32 %22 to i64
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr.1331", %"class.std::__1::unique_ptr.1331"* %29, i64 %30
  %32 = bitcast %"class.std::__1::unique_ptr.1331"* %31 to i64*
  store i64 %27, i64* %32, align 8
  %33 = load i32, i32* %21, align 4
  %34 = add i32 %33, 1
  store i32 %34, i32* %21, align 4
  store %"class.blink::(anonymous namespace)::UnderlyingRayModeChecker"* null, %"class.blink::(anonymous namespace)::UnderlyingRayModeChecker"** %19, align 8
  br label %43

35:                                               ; preds = %4
  call fastcc void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_12_GLOBAL__N_124UnderlyingRayModeCheckerENS6_ISD_EEEEEEvOT_(%"class.WTF::Vector.1328"* %3, %"class.std::__1::unique_ptr.1334"* nonnull dereferenceable(8) %5) #10
  %36 = load %"class.blink::(anonymous namespace)::UnderlyingRayModeChecker"*, %"class.blink::(anonymous namespace)::UnderlyingRayModeChecker"** %19, align 8
  store %"class.blink::(anonymous namespace)::UnderlyingRayModeChecker"* null, %"class.blink::(anonymous namespace)::UnderlyingRayModeChecker"** %19, align 8
  %37 = icmp eq %"class.blink::(anonymous namespace)::UnderlyingRayModeChecker"* %36, null
  br i1 %37, label %43, label %38

38:                                               ; preds = %35
  %39 = bitcast %"class.blink::(anonymous namespace)::UnderlyingRayModeChecker"* %36 to void (%"class.blink::(anonymous namespace)::UnderlyingRayModeChecker"*)***
  %40 = load void (%"class.blink::(anonymous namespace)::UnderlyingRayModeChecker"*)**, void (%"class.blink::(anonymous namespace)::UnderlyingRayModeChecker"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.blink::(anonymous namespace)::UnderlyingRayModeChecker"*)*, void (%"class.blink::(anonymous namespace)::UnderlyingRayModeChecker"*)** %40, i64 1
  %42 = load void (%"class.blink::(anonymous namespace)::UnderlyingRayModeChecker"*)*, void (%"class.blink::(anonymous namespace)::UnderlyingRayModeChecker"*)** %41, align 8
  tail call void %42(%"class.blink::(anonymous namespace)::UnderlyingRayModeChecker"* nonnull %36) #10
  br label %43

43:                                               ; preds = %26, %35, %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #10
  %44 = tail call noalias i8* @malloc(i64 16) #10, !noalias !4
  %45 = bitcast i8* %44 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink18InterpolableNumberE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %45, align 8, !noalias !4
  %46 = getelementptr inbounds i8, i8* %44, i64 8
  %47 = bitcast i8* %46 to double*
  store double 0.000000e+00, double* %47, align 8, !noalias !4
  %48 = ptrtoint i8* %44 to i64
  %49 = tail call noalias i8* @malloc(i64 24) #10, !noalias !4
  %50 = getelementptr inbounds i8, i8* %49, i64 8
  %51 = bitcast i8* %50 to i32*
  store i32 1, i32* %51, align 4, !noalias !4
  %52 = bitcast i8* %49 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink26CSSRayNonInterpolableValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %52, align 8, !noalias !4
  %53 = getelementptr inbounds i8, i8* %49, i64 12
  %54 = bitcast i8* %53 to i64*
  %55 = load i64, i64* %16, align 4, !noalias !4
  store i64 %55, i64* %54, align 4, !noalias !4
  %56 = ptrtoint i8* %49 to i64
  %57 = bitcast %"struct.blink::InterpolationValue"* %0 to i64*
  store i64 %48, i64* %57, align 8, !alias.scope !4
  %58 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %0, i64 0, i32 1
  %59 = bitcast %class.scoped_refptr.1327* %58 to i64*
  store i64 %56, i64* %59, align 8, !alias.scope !4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink23CSSRayInterpolationType19MaybeConvertInitialERKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* noalias nocapture sret, %"class.blink::CSSRayInterpolationType"* nocapture readnone, %"class.blink::StyleResolverState"* nocapture readnone dereferenceable(600), %"class.WTF::Vector.1328"* nocapture readnone dereferenceable(16)) unnamed_addr #0 align 2 {
  %5 = bitcast %"struct.blink::InterpolationValue"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink23CSSRayInterpolationType19MaybeConvertInheritERKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* noalias nocapture sret, %"class.blink::CSSRayInterpolationType"* nocapture readnone, %"class.blink::StyleResolverState"* nocapture readonly dereferenceable(600), %"class.WTF::Vector.1328"* nocapture dereferenceable(16)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::unique_ptr.1340", align 8
  %6 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %2, i64 0, i32 4, i32 0
  %7 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %8 = icmp eq %"class.blink::ComputedStyle"* %7, null
  br i1 %8, label %9, label %11

9:                                                ; preds = %4
  %10 = bitcast %"struct.blink::InterpolationValue"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #10
  br label %101

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %7, i64 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %15, i64 0, i32 2, i32 0, i32 0
  %17 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %17, i64 0, i32 11, i32 0
  %19 = load %"class.blink::BasicShape"*, %"class.blink::BasicShape"** %18, align 8
  %20 = icmp eq %"class.blink::BasicShape"* %19, null
  br i1 %20, label %38, label %21

21:                                               ; preds = %11
  %22 = bitcast %"class.blink::BasicShape"* %19 to i32 (%"class.blink::BasicShape"*)***
  %23 = load i32 (%"class.blink::BasicShape"*)**, i32 (%"class.blink::BasicShape"*)*** %22, align 8
  %24 = getelementptr inbounds i32 (%"class.blink::BasicShape"*)*, i32 (%"class.blink::BasicShape"*)** %23, i64 5
  %25 = load i32 (%"class.blink::BasicShape"*)*, i32 (%"class.blink::BasicShape"*)** %24, align 8
  %26 = tail call i32 %25(%"class.blink::BasicShape"* nonnull %19) #10
  %27 = icmp eq i32 %26, 4
  br i1 %27, label %28, label %38

28:                                               ; preds = %21
  %29 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %12, align 8
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %29, i64 0, i32 2, i32 0, i32 0
  %31 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %31, i64 0, i32 2, i32 0, i32 0
  %33 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %33, i64 0, i32 11, i32 0
  %35 = bitcast %"class.blink::BasicShape"** %34 to %"class.blink::StyleRay"**
  %36 = load %"class.blink::StyleRay"*, %"class.blink::StyleRay"** %35, align 8
  %37 = icmp eq %"class.blink::StyleRay"* %36, null
  br i1 %37, label %38, label %40

38:                                               ; preds = %11, %21, %28
  %39 = bitcast %"struct.blink::InterpolationValue"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 16, i1 false) #10
  br label %101

40:                                               ; preds = %28
  %41 = bitcast %"class.std::__1::unique_ptr.1340"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #10
  %42 = tail call noalias i8* @malloc(i64 24) #10
  %43 = getelementptr inbounds %"class.blink::StyleRay", %"class.blink::StyleRay"* %36, i64 0, i32 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %43) #10
  %44 = ptrtoint %"class.blink::StyleRay"* %36 to i64
  %45 = getelementptr inbounds i8, i8* %42, i64 8
  %46 = bitcast i8* %45 to %"class.blink::InterpolationType"**
  store %"class.blink::InterpolationType"* null, %"class.blink::InterpolationType"** %46, align 8
  %47 = bitcast i8* %42 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink12_GLOBAL__N_119InheritedRayCheckerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %47, align 8
  %48 = getelementptr inbounds i8, i8* %42, i64 16
  %49 = bitcast i8* %48 to i64*
  store i64 %44, i64* %49, align 8
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.1340", %"class.std::__1::unique_ptr.1340"* %5, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.1340"* %5 to i8**
  store i8* %42, i8** %51, align 8
  %52 = getelementptr inbounds %"class.WTF::Vector.1328", %"class.WTF::Vector.1328"* %3, i64 0, i32 0, i32 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds %"class.WTF::Vector.1328", %"class.WTF::Vector.1328"* %3, i64 0, i32 0, i32 0, i32 1
  %55 = load i32, i32* %54, align 8
  %56 = icmp eq i32 %53, %55
  br i1 %56, label %66, label %57, !prof !3

57:                                               ; preds = %40
  %58 = ptrtoint i8* %42 to i64
  %59 = getelementptr inbounds %"class.WTF::Vector.1328", %"class.WTF::Vector.1328"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.std::__1::unique_ptr.1331"*, %"class.std::__1::unique_ptr.1331"** %59, align 8
  %61 = zext i32 %53 to i64
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr.1331", %"class.std::__1::unique_ptr.1331"* %60, i64 %61
  %63 = bitcast %"class.std::__1::unique_ptr.1331"* %62 to i64*
  store i64 %58, i64* %63, align 8
  %64 = load i32, i32* %52, align 4
  %65 = add i32 %64, 1
  store i32 %65, i32* %52, align 4
  store %"class.blink::(anonymous namespace)::InheritedRayChecker"* null, %"class.blink::(anonymous namespace)::InheritedRayChecker"** %50, align 8
  br label %74

66:                                               ; preds = %40
  call fastcc void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_12_GLOBAL__N_119InheritedRayCheckerENS6_ISD_EEEEEEvOT_(%"class.WTF::Vector.1328"* %3, %"class.std::__1::unique_ptr.1340"* nonnull dereferenceable(8) %5) #10
  %67 = load %"class.blink::(anonymous namespace)::InheritedRayChecker"*, %"class.blink::(anonymous namespace)::InheritedRayChecker"** %50, align 8
  store %"class.blink::(anonymous namespace)::InheritedRayChecker"* null, %"class.blink::(anonymous namespace)::InheritedRayChecker"** %50, align 8
  %68 = icmp eq %"class.blink::(anonymous namespace)::InheritedRayChecker"* %67, null
  br i1 %68, label %74, label %69

69:                                               ; preds = %66
  %70 = bitcast %"class.blink::(anonymous namespace)::InheritedRayChecker"* %67 to void (%"class.blink::(anonymous namespace)::InheritedRayChecker"*)***
  %71 = load void (%"class.blink::(anonymous namespace)::InheritedRayChecker"*)**, void (%"class.blink::(anonymous namespace)::InheritedRayChecker"*)*** %70, align 8
  %72 = getelementptr inbounds void (%"class.blink::(anonymous namespace)::InheritedRayChecker"*)*, void (%"class.blink::(anonymous namespace)::InheritedRayChecker"*)** %71, i64 1
  %73 = load void (%"class.blink::(anonymous namespace)::InheritedRayChecker"*)*, void (%"class.blink::(anonymous namespace)::InheritedRayChecker"*)** %72, align 8
  tail call void %73(%"class.blink::(anonymous namespace)::InheritedRayChecker"* nonnull %67) #10
  br label %74

74:                                               ; preds = %57, %66, %69
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #10
  %75 = getelementptr inbounds %"class.blink::StyleRay", %"class.blink::StyleRay"* %36, i64 0, i32 1
  %76 = load float, float* %75, align 4
  %77 = getelementptr inbounds %"class.blink::StyleRay", %"class.blink::StyleRay"* %36, i64 0, i32 2
  %78 = load i32, i32* %77, align 8
  %79 = getelementptr inbounds %"class.blink::StyleRay", %"class.blink::StyleRay"* %36, i64 0, i32 3
  %80 = load i8, i8* %79, align 4, !range !2
  %81 = tail call noalias i8* @malloc(i64 16) #10, !noalias !7
  %82 = fpext float %76 to double
  %83 = bitcast i8* %81 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink18InterpolableNumberE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %83, align 8, !noalias !7
  %84 = getelementptr inbounds i8, i8* %81, i64 8
  %85 = bitcast i8* %84 to double*
  store double %82, double* %85, align 8, !noalias !7
  %86 = ptrtoint i8* %81 to i64
  %87 = tail call noalias i8* @malloc(i64 24) #10, !noalias !7
  %88 = getelementptr inbounds i8, i8* %87, i64 8
  %89 = bitcast i8* %88 to i32*
  store i32 1, i32* %89, align 4, !noalias !7
  %90 = bitcast i8* %87 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink26CSSRayNonInterpolableValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %90, align 8, !noalias !7
  %91 = getelementptr inbounds i8, i8* %87, i64 12
  %92 = bitcast i8* %91 to i64*
  %93 = zext i8 %80 to i64
  %94 = shl nuw nsw i64 %93, 32
  %95 = zext i32 %78 to i64
  %96 = or i64 %94, %95
  store i64 %96, i64* %92, align 4, !noalias !7
  %97 = ptrtoint i8* %87 to i64
  %98 = bitcast %"struct.blink::InterpolationValue"* %0 to i64*
  store i64 %86, i64* %98, align 8, !alias.scope !7
  %99 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %0, i64 0, i32 1
  %100 = bitcast %class.scoped_refptr.1327* %99 to i64*
  store i64 %97, i64* %100, align 8, !alias.scope !7
  br label %101

101:                                              ; preds = %38, %74, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink23CSSRayInterpolationType17MaybeMergeSinglesEONS_18InterpolationValueES2_(%"struct.blink::PairwiseInterpolationValue"* noalias nocapture sret, %"class.blink::CSSRayInterpolationType"* nocapture readnone, %"struct.blink::InterpolationValue"* nocapture dereferenceable(16), %"struct.blink::InterpolationValue"* nocapture dereferenceable(16)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %2, i64 0, i32 1
  %6 = getelementptr inbounds %class.scoped_refptr.1327, %class.scoped_refptr.1327* %5, i64 0, i32 0
  %7 = bitcast %class.scoped_refptr.1327* %5 to %"class.blink::CSSRayNonInterpolableValue"**
  %8 = load %"class.blink::CSSRayNonInterpolableValue"*, %"class.blink::CSSRayNonInterpolableValue"** %7, align 8
  %9 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %3, i64 0, i32 1, i32 0
  %10 = bitcast %"class.blink::NonInterpolableValue"** %9 to %"class.blink::CSSRayNonInterpolableValue"**
  %11 = load %"class.blink::CSSRayNonInterpolableValue"*, %"class.blink::CSSRayNonInterpolableValue"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::CSSRayNonInterpolableValue", %"class.blink::CSSRayNonInterpolableValue"* %8, i64 0, i32 1, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"class.blink::CSSRayNonInterpolableValue", %"class.blink::CSSRayNonInterpolableValue"* %11, i64 0, i32 1, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %13, %15
  br i1 %16, label %17, label %23

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.blink::CSSRayNonInterpolableValue", %"class.blink::CSSRayNonInterpolableValue"* %8, i64 0, i32 1, i32 1
  %19 = load i8, i8* %18, align 4, !range !2
  %20 = getelementptr inbounds %"class.blink::CSSRayNonInterpolableValue", %"class.blink::CSSRayNonInterpolableValue"* %11, i64 0, i32 1, i32 1
  %21 = load i8, i8* %20, align 4, !range !2
  %22 = icmp eq i8 %19, %21
  br i1 %22, label %25, label %23

23:                                               ; preds = %17, %4
  %24 = bitcast %"struct.blink::PairwiseInterpolationValue"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #10
  br label %39

25:                                               ; preds = %17
  %26 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = bitcast %"struct.blink::InterpolationValue"* %2 to i64*
  %28 = load i64, i64* %27, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %26, align 8
  %29 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %30 = bitcast %"struct.blink::InterpolationValue"* %3 to i64*
  %31 = load i64, i64* %30, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %29, align 8
  %32 = bitcast %class.scoped_refptr.1327* %5 to i64*
  %33 = load i64, i64* %32, align 8
  store %"class.blink::NonInterpolableValue"* null, %"class.blink::NonInterpolableValue"** %6, align 8
  %34 = bitcast %"struct.blink::PairwiseInterpolationValue"* %0 to i64*
  store i64 %28, i64* %34, align 8
  %35 = getelementptr inbounds %"struct.blink::PairwiseInterpolationValue", %"struct.blink::PairwiseInterpolationValue"* %0, i64 0, i32 1
  %36 = bitcast %"class.std::__1::unique_ptr.1321"* %35 to i64*
  store i64 %31, i64* %36, align 8
  %37 = getelementptr inbounds %"struct.blink::PairwiseInterpolationValue", %"struct.blink::PairwiseInterpolationValue"* %0, i64 0, i32 2
  %38 = bitcast %class.scoped_refptr.1327* %37 to i64*
  store i64 %33, i64* %38, align 8
  br label %39

39:                                               ; preds = %25, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink23CSSRayInterpolationType43MaybeConvertStandardPropertyUnderlyingValueERKNS_13ComputedStyleE(%"struct.blink::InterpolationValue"* noalias nocapture sret, %"class.blink::CSSRayInterpolationType"* nocapture readnone, %"class.blink::ComputedStyle"* nocapture readonly dereferenceable(104)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %2, i64 0, i32 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %5, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %7, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %9, i64 0, i32 11, i32 0
  %11 = load %"class.blink::BasicShape"*, %"class.blink::BasicShape"** %10, align 8
  %12 = icmp eq %"class.blink::BasicShape"* %11, null
  br i1 %12, label %30, label %13

13:                                               ; preds = %3
  %14 = bitcast %"class.blink::BasicShape"* %11 to i32 (%"class.blink::BasicShape"*)***
  %15 = load i32 (%"class.blink::BasicShape"*)**, i32 (%"class.blink::BasicShape"*)*** %14, align 8
  %16 = getelementptr inbounds i32 (%"class.blink::BasicShape"*)*, i32 (%"class.blink::BasicShape"*)** %15, i64 5
  %17 = load i32 (%"class.blink::BasicShape"*)*, i32 (%"class.blink::BasicShape"*)** %16, align 8
  %18 = tail call i32 %17(%"class.blink::BasicShape"* nonnull %11) #10
  %19 = icmp eq i32 %18, 4
  br i1 %19, label %20, label %30

20:                                               ; preds = %13
  %21 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %4, align 8
  %22 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %21, i64 0, i32 2, i32 0, i32 0
  %23 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %23, i64 0, i32 2, i32 0, i32 0
  %25 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %25, i64 0, i32 11, i32 0
  %27 = bitcast %"class.blink::BasicShape"** %26 to %"class.blink::StyleRay"**
  %28 = load %"class.blink::StyleRay"*, %"class.blink::StyleRay"** %27, align 8
  %29 = icmp eq %"class.blink::StyleRay"* %28, null
  br i1 %29, label %30, label %32

30:                                               ; preds = %3, %13, %20
  %31 = bitcast %"struct.blink::InterpolationValue"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 16, i1 false) #10
  br label %59

32:                                               ; preds = %20
  %33 = getelementptr inbounds %"class.blink::StyleRay", %"class.blink::StyleRay"* %28, i64 0, i32 1
  %34 = load float, float* %33, align 4
  %35 = getelementptr inbounds %"class.blink::StyleRay", %"class.blink::StyleRay"* %28, i64 0, i32 2
  %36 = load i32, i32* %35, align 8
  %37 = getelementptr inbounds %"class.blink::StyleRay", %"class.blink::StyleRay"* %28, i64 0, i32 3
  %38 = load i8, i8* %37, align 4, !range !2
  %39 = tail call noalias i8* @malloc(i64 16) #10, !noalias !10
  %40 = fpext float %34 to double
  %41 = bitcast i8* %39 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink18InterpolableNumberE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %41, align 8, !noalias !10
  %42 = getelementptr inbounds i8, i8* %39, i64 8
  %43 = bitcast i8* %42 to double*
  store double %40, double* %43, align 8, !noalias !10
  %44 = ptrtoint i8* %39 to i64
  %45 = tail call noalias i8* @malloc(i64 24) #10, !noalias !10
  %46 = getelementptr inbounds i8, i8* %45, i64 8
  %47 = bitcast i8* %46 to i32*
  store i32 1, i32* %47, align 4, !noalias !10
  %48 = bitcast i8* %45 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink26CSSRayNonInterpolableValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %48, align 8, !noalias !10
  %49 = getelementptr inbounds i8, i8* %45, i64 12
  %50 = bitcast i8* %49 to i64*
  %51 = zext i8 %38 to i64
  %52 = shl nuw nsw i64 %51, 32
  %53 = zext i32 %36 to i64
  %54 = or i64 %52, %53
  store i64 %54, i64* %50, align 4, !noalias !10
  %55 = ptrtoint i8* %45 to i64
  %56 = bitcast %"struct.blink::InterpolationValue"* %0 to i64*
  store i64 %44, i64* %56, align 8, !alias.scope !10
  %57 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %0, i64 0, i32 1
  %58 = bitcast %class.scoped_refptr.1327* %57 to i64*
  store i64 %55, i64* %58, align 8, !alias.scope !10
  br label %59

59:                                               ; preds = %32, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink23CSSRayInterpolationType17MaybeConvertValueERKNS_8CSSValueEPKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS9_14default_deleteISC_EEEELj0ENS7_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* noalias nocapture sret, %"class.blink::CSSRayInterpolationType"* nocapture readnone, %"class.blink::CSSValue"* dereferenceable(3), %"class.blink::StyleResolverState"*, %"class.WTF::Vector.1328"* nocapture readnone dereferenceable(16)) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 0, i32 2
  %7 = load i8, i8* %6, align 1
  %8 = icmp eq i8 %7, 41
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  %10 = bitcast %"struct.blink::InterpolationValue"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #10
  br label %56

11:                                               ; preds = %5
  %12 = tail call %"class.blink::BasicShape"* @_ZN5blink18BasicShapeForValueERKNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::StyleResolverState"* dereferenceable(600) %3, %"class.blink::CSSValue"* dereferenceable(3) %2) #10
  %13 = bitcast %"class.blink::BasicShape"* %12 to %"class.blink::StyleRay"*
  %14 = getelementptr inbounds %"class.blink::BasicShape", %"class.blink::BasicShape"* %12, i64 0, i32 2
  %15 = bitcast [4 x i8]* %14 to float*
  %16 = load float, float* %15, align 4
  %17 = getelementptr inbounds %"class.blink::BasicShape", %"class.blink::BasicShape"* %12, i64 1
  %18 = bitcast %"class.blink::BasicShape"* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.blink::StyleRay", %"class.blink::StyleRay"* %13, i64 0, i32 3
  %21 = load i8, i8* %20, align 4, !range !2
  %22 = tail call noalias i8* @malloc(i64 16) #10, !noalias !13
  %23 = fpext float %16 to double
  %24 = bitcast i8* %22 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink18InterpolableNumberE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %24, align 8, !noalias !13
  %25 = getelementptr inbounds i8, i8* %22, i64 8
  %26 = bitcast i8* %25 to double*
  store double %23, double* %26, align 8, !noalias !13
  %27 = ptrtoint i8* %22 to i64
  %28 = tail call noalias i8* @malloc(i64 24) #10, !noalias !13
  %29 = getelementptr inbounds i8, i8* %28, i64 8
  %30 = bitcast i8* %29 to i32*
  store i32 1, i32* %30, align 4, !noalias !13
  %31 = bitcast i8* %28 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink26CSSRayNonInterpolableValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %31, align 8, !noalias !13
  %32 = getelementptr inbounds i8, i8* %28, i64 12
  %33 = bitcast i8* %32 to i64*
  %34 = zext i8 %21 to i64
  %35 = shl nuw nsw i64 %34, 32
  %36 = zext i32 %19 to i64
  %37 = or i64 %35, %36
  store i64 %37, i64* %33, align 4, !noalias !13
  %38 = ptrtoint i8* %28 to i64
  %39 = bitcast %"struct.blink::InterpolationValue"* %0 to i64*
  store i64 %27, i64* %39, align 8, !alias.scope !13
  %40 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %0, i64 0, i32 1
  %41 = bitcast %class.scoped_refptr.1327* %40 to i64*
  store i64 %38, i64* %41, align 8, !alias.scope !13
  %42 = icmp eq %"class.blink::BasicShape"* %12, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %11
  %44 = getelementptr inbounds %"class.blink::BasicShape", %"class.blink::BasicShape"* %12, i64 0, i32 1, i32 0
  %45 = getelementptr inbounds %"class.base::RefCounted.441", %"class.base::RefCounted.441"* %44, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %45) #10
  %46 = getelementptr inbounds %"class.base::RefCounted.441", %"class.base::RefCounted.441"* %44, i64 0, i32 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %56

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"class.base::RefCounted.441", %"class.base::RefCounted.441"* %44, i64 -2
  %51 = bitcast %"class.base::RefCounted.441"* %50 to %"class.blink::BasicShape"*
  %52 = bitcast %"class.base::RefCounted.441"* %50 to void (%"class.blink::BasicShape"*)***
  %53 = load void (%"class.blink::BasicShape"*)**, void (%"class.blink::BasicShape"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %53, i64 1
  %55 = load void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %54, align 8
  tail call void %55(%"class.blink::BasicShape"* nonnull %51) #10
  br label %56

56:                                               ; preds = %49, %43, %11, %9
  ret void
}

declare %"class.blink::BasicShape"* @_ZN5blink18BasicShapeForValueERKNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::StyleResolverState"* dereferenceable(600), %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20CSSInterpolationTypeD2Ev(%"class.blink::CSSInterpolationType"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSInterpolationType", %"class.blink::CSSInterpolationType"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink20CSSInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::CSSInterpolationType", %"class.blink::CSSInterpolationType"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  %4 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %5 = icmp eq %"class.blink::PersistentNode"* %4, null
  br i1 %5, label %25, label %6

6:                                                ; preds = %1
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #10
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !3

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #10
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 4, i32 0, i32 0, i32 0
  %18 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %17, align 8
  %19 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %20 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %18, i64 0, i32 0, i32 0
  %21 = bitcast %"class.blink::PersistentRegion"* %18 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.blink::PersistentNode"* %19 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %19, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %24, align 8
  store %"class.blink::PersistentNode"* %19, %"class.blink::PersistentNode"** %20, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %3, align 8
  br label %25

25:                                               ; preds = %1, %13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink17InterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %26 = getelementptr inbounds %"class.blink::CSSInterpolationType", %"class.blink::CSSInterpolationType"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #10
  br label %42

42:                                               ; preds = %25, %38, %41
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink23CSSRayInterpolationTypeD0Ev(%"class.blink::CSSRayInterpolationType"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSRayInterpolationType", %"class.blink::CSSRayInterpolationType"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink20CSSInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::CSSRayInterpolationType", %"class.blink::CSSRayInterpolationType"* %0, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0
  %4 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %5 = icmp eq %"class.blink::PersistentNode"* %4, null
  br i1 %5, label %25, label %6

6:                                                ; preds = %1
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #10
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !3

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #10
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 4, i32 0, i32 0, i32 0
  %18 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %17, align 8
  %19 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %20 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %18, i64 0, i32 0, i32 0
  %21 = bitcast %"class.blink::PersistentRegion"* %18 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.blink::PersistentNode"* %19 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %19, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %24, align 8
  store %"class.blink::PersistentNode"* %19, %"class.blink::PersistentNode"** %20, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %3, align 8
  br label %25

25:                                               ; preds = %13, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink17InterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %26 = getelementptr inbounds %"class.blink::CSSRayInterpolationType", %"class.blink::CSSRayInterpolationType"* %0, i64 0, i32 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #10
  br label %42

42:                                               ; preds = %25, %38, %41
  %43 = bitcast %"class.blink::CSSRayInterpolationType"* %0 to i8*
  tail call void @free(i8* %43) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink17InterpolationType20MaybeConvertPairwiseERKNS_8Keyframe24PropertySpecificKeyframeES4_RKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS0_17ConversionCheckerENSD_14default_deleteISF_EEEELj0ENSB_18PartitionAllocatorEEE(%"struct.blink::PairwiseInterpolationValue"* noalias sret, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32), %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32), %"class.blink::InterpolationEnvironment"* dereferenceable(16), %"struct.blink::InterpolationValue"* dereferenceable(16), %"class.WTF::Vector.1328"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %8 = alloca %"struct.blink::InterpolationValue", align 8
  %9 = alloca %"struct.blink::InterpolationValue", align 8
  %10 = bitcast %"struct.blink::InterpolationValue"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %8, i64 0, i32 1, i32 0
  %13 = bitcast %"class.blink::InterpolationType"* %1 to void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1328"*)***
  %14 = bitcast %"struct.blink::InterpolationValue"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false)
  %15 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1328"*)**, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1328"*)*** %13, align 8
  %16 = getelementptr inbounds void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1328"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1328"*)** %15, i64 3
  %17 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1328"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1328"*)** %16, align 8
  call void %17(%"struct.blink::InterpolationValue"* nonnull sret %8, %"class.blink::InterpolationType"* %1, %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32) %2, %"class.blink::InterpolationEnvironment"* dereferenceable(16) %4, %"struct.blink::InterpolationValue"* dereferenceable(16) %5, %"class.WTF::Vector.1328"* dereferenceable(16) %6) #10
  %18 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %11, align 8
  %19 = icmp eq %"class.blink::InterpolableValue"* %18, null
  br i1 %19, label %20, label %22

20:                                               ; preds = %7
  %21 = bitcast %"struct.blink::PairwiseInterpolationValue"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #10
  br label %64

22:                                               ; preds = %7
  %23 = bitcast %"struct.blink::InterpolationValue"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #10
  %24 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %9, i64 0, i32 1, i32 0
  %26 = bitcast %"struct.blink::InterpolationValue"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 16, i1 false)
  %27 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1328"*)**, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1328"*)*** %13, align 8
  %28 = getelementptr inbounds void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1328"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1328"*)** %27, i64 3
  %29 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1328"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1328"*)** %28, align 8
  call void %29(%"struct.blink::InterpolationValue"* nonnull sret %9, %"class.blink::InterpolationType"* %1, %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32) %3, %"class.blink::InterpolationEnvironment"* dereferenceable(16) %4, %"struct.blink::InterpolationValue"* dereferenceable(16) %5, %"class.WTF::Vector.1328"* dereferenceable(16) %6) #10
  %30 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %24, align 8
  %31 = icmp eq %"class.blink::InterpolableValue"* %30, null
  br i1 %31, label %32, label %34

32:                                               ; preds = %22
  %33 = bitcast %"struct.blink::PairwiseInterpolationValue"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 24, i1 false) #10
  br label %39

34:                                               ; preds = %22
  %35 = bitcast %"class.blink::InterpolationType"* %1 to void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)***
  %36 = load void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)**, void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)*, void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)** %36, i64 4
  %38 = load void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)*, void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)** %37, align 8
  call void %38(%"struct.blink::PairwiseInterpolationValue"* sret %0, %"class.blink::InterpolationType"* %1, %"struct.blink::InterpolationValue"* nonnull dereferenceable(16) %8, %"struct.blink::InterpolationValue"* nonnull dereferenceable(16) %9) #10
  br label %39

39:                                               ; preds = %34, %32
  %40 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %25, align 8
  %41 = icmp eq %"class.blink::NonInterpolableValue"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %40, i64 0, i32 1, i32 0
  %44 = getelementptr inbounds %"class.base::RefCounted.179", %"class.base::RefCounted.179"* %43, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %44) #10
  %45 = getelementptr inbounds %"class.base::RefCounted.179", %"class.base::RefCounted.179"* %43, i64 0, i32 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %55

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.base::RefCounted.179", %"class.base::RefCounted.179"* %43, i64 -2
  %50 = bitcast %"class.base::RefCounted.179"* %49 to %"class.blink::NonInterpolableValue"*
  %51 = bitcast %"class.base::RefCounted.179"* %49 to void (%"class.blink::NonInterpolableValue"*)***
  %52 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %52, i64 1
  %54 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %53, align 8
  call void %54(%"class.blink::NonInterpolableValue"* nonnull %50) #10
  br label %55

55:                                               ; preds = %48, %42, %39
  %56 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %24, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %24, align 8
  %57 = icmp eq %"class.blink::InterpolableValue"* %56, null
  br i1 %57, label %63, label %58

58:                                               ; preds = %55
  %59 = bitcast %"class.blink::InterpolableValue"* %56 to void (%"class.blink::InterpolableValue"*)***
  %60 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %60, i64 1
  %62 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %61, align 8
  call void %62(%"class.blink::InterpolableValue"* nonnull %56) #10
  br label %63

63:                                               ; preds = %55, %58
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #10
  br label %64

64:                                               ; preds = %63, %20
  %65 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %12, align 8
  %66 = icmp eq %"class.blink::NonInterpolableValue"* %65, null
  br i1 %66, label %80, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %65, i64 0, i32 1, i32 0
  %69 = getelementptr inbounds %"class.base::RefCounted.179", %"class.base::RefCounted.179"* %68, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %69) #10
  %70 = getelementptr inbounds %"class.base::RefCounted.179", %"class.base::RefCounted.179"* %68, i64 0, i32 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %80

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"class.base::RefCounted.179", %"class.base::RefCounted.179"* %68, i64 -2
  %75 = bitcast %"class.base::RefCounted.179"* %74 to %"class.blink::NonInterpolableValue"*
  %76 = bitcast %"class.base::RefCounted.179"* %74 to void (%"class.blink::NonInterpolableValue"*)***
  %77 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %77, i64 1
  %79 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %78, align 8
  call void %79(%"class.blink::NonInterpolableValue"* nonnull %75) #10
  br label %80

80:                                               ; preds = %73, %67, %64
  %81 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %11, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %11, align 8
  %82 = icmp eq %"class.blink::InterpolableValue"* %81, null
  br i1 %82, label %88, label %83

83:                                               ; preds = %80
  %84 = bitcast %"class.blink::InterpolableValue"* %81 to void (%"class.blink::InterpolableValue"*)***
  %85 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %84, align 8
  %86 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %85, i64 1
  %87 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %86, align 8
  call void %87(%"class.blink::InterpolableValue"* nonnull %81) #10
  br label %88

88:                                               ; preds = %80, %83
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #10
  ret void
}

declare void @_ZNK5blink20CSSInterpolationType18MaybeConvertSingleERKNS_8Keyframe24PropertySpecificKeyframeERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENSD_14default_deleteISG_EEEELj0ENSB_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* sret, %"class.blink::CSSInterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32), %"class.blink::InterpolationEnvironment"* dereferenceable(16), %"struct.blink::InterpolationValue"* dereferenceable(16), %"class.WTF::Vector.1328"* dereferenceable(16)) unnamed_addr #2

declare void @_ZNK5blink20CSSInterpolationType27MaybeConvertUnderlyingValueERKNS_24InterpolationEnvironmentE(%"struct.blink::InterpolationValue"* sret, %"class.blink::CSSInterpolationType"*, %"class.blink::InterpolationEnvironment"* dereferenceable(16)) unnamed_addr #2

declare void @_ZNK5blink20CSSInterpolationType5ApplyERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERNS_24InterpolationEnvironmentE(%"class.blink::CSSInterpolationType"*, %"class.blink::InterpolableValue"* dereferenceable(8), %"class.blink::NonInterpolableValue"*, %"class.blink::InterpolationEnvironment"* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSValue"* @_ZNK5blink20CSSInterpolationType14CreateCSSValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERKNS_18StyleResolverStateE(%"class.blink::CSSInterpolationType"*, %"class.blink::InterpolableValue"* dereferenceable(8), %"class.blink::NonInterpolableValue"*, %"class.blink::StyleResolverState"* dereferenceable(600)) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::CSSValue"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink20CSSInterpolationType33PreInterpolationCompositeIfNeededENS_18InterpolationValueERKS1_NS_11EffectModel18CompositeOperationERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS8_14default_deleteISB_EEEELj0ENS6_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* noalias sret, %"class.blink::CSSInterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"* dereferenceable(16), i32, %"class.WTF::Vector.1328"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = bitcast %"struct.blink::InterpolationValue"* %2 to <2 x i64>*
  %9 = load <2 x i64>, <2 x i64>* %8, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %7, align 8
  %10 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %2, i64 0, i32 1, i32 0
  %11 = bitcast %"struct.blink::InterpolationValue"* %0 to <2 x i64>*
  store <2 x i64> %9, <2 x i64>* %11, align 8
  store %"class.blink::NonInterpolableValue"* null, %"class.blink::NonInterpolableValue"** %10, align 8
  ret void
}

declare void @_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan14PercentDataC1ERKS1_(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* dereferenceable(104)) unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #4

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan14PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 7, i32 1, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 7, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #10
  br label %7

7:                                                ; preds = %5, %1
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 7, i32 0, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 7, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #10
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 6, i32 0, i32 1, i32 0
  %15 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %14, align 8
  %16 = icmp eq %"class.blink::PersistentNode"* %15, null
  br i1 %16, label %36, label %17

17:                                               ; preds = %13
  %18 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %19 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %18, i64 0, i32 1
  %20 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %19) #10
  %21 = icmp eq i8* %20, null
  br i1 %21, label %22, label %24, !prof !3

22:                                               ; preds = %17
  %23 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %19, i8* %23) #10
  br label %24

24:                                               ; preds = %22, %17
  %25 = phi i8* [ %23, %22 ], [ %20, %17 ]
  %26 = bitcast i8* %25 to %"class.blink::ThreadState"**
  %27 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %27, i64 0, i32 3, i32 0, i32 0, i32 0
  %29 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %28, align 8
  %30 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %14, align 8
  %31 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %29, i64 0, i32 0, i32 0
  %32 = bitcast %"class.blink::PersistentRegion"* %29 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.blink::PersistentNode"* %30 to i64*
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %30, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %35, align 8
  store %"class.blink::PersistentNode"* %30, %"class.blink::PersistentNode"** %31, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %14, align 8
  br label %36

36:                                               ; preds = %13, %24
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 5, i32 0
  %38 = load %"class.blink::ShadowList"*, %"class.blink::ShadowList"** %37, align 8
  %39 = icmp eq %"class.blink::ShadowList"* %38, null
  br i1 %39, label %62, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %38, i64 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %38, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %42) #10
  %43 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %62

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.base::RefCounted.340", %"class.base::RefCounted.340"* %41, i64 2
  %48 = getelementptr inbounds %"class.base::RefCounted.340", %"class.base::RefCounted.340"* %41, i64 5, i32 0, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %52, label %51, !prof !3

51:                                               ; preds = %46
  store i32 0, i32* %48, align 4
  br label %52

52:                                               ; preds = %51, %46
  %53 = bitcast %"class.base::RefCounted.340"* %47 to %"class.blink::ShadowData"**
  %54 = load %"class.blink::ShadowData"*, %"class.blink::ShadowData"** %53, align 8
  %55 = getelementptr inbounds %"class.base::RefCounted.340", %"class.base::RefCounted.340"* %41, i64 6
  %56 = bitcast %"class.base::RefCounted.340"* %55 to %"class.blink::ShadowData"*
  %57 = icmp eq %"class.blink::ShadowData"* %54, %56
  br i1 %57, label %60, label %58, !prof !16

58:                                               ; preds = %52
  %59 = bitcast %"class.base::RefCounted.340"* %47 to %"class.WTF::VectorBuffer.342"*
  tail call void @_ZN3WTF12VectorBufferIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.342"* %59, %"class.blink::ShadowData"* %54) #10
  br label %60

60:                                               ; preds = %58, %52
  %61 = bitcast %"class.blink::ShadowList"* %38 to i8*
  tail call void @free(i8* %61) #10
  br label %62

62:                                               ; preds = %36, %40, %60
  %63 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 4
  %64 = getelementptr inbounds %"class.blink::TransformOperations", %"class.blink::TransformOperations"* %63, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = load %class.scoped_refptr.599*, %class.scoped_refptr.599** %64, align 8
  %66 = icmp eq %class.scoped_refptr.599* %65, null
  br i1 %66, label %101, label %67, !prof !16

67:                                               ; preds = %62
  %68 = bitcast %class.scoped_refptr.599* %65 to i8*
  %69 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %99, label %72, !prof !3

72:                                               ; preds = %67
  %73 = zext i32 %70 to i64
  %74 = getelementptr inbounds %class.scoped_refptr.599, %class.scoped_refptr.599* %65, i64 %73
  br label %75

75:                                               ; preds = %93, %72
  %76 = phi %class.scoped_refptr.599* [ %94, %93 ], [ %65, %72 ]
  %77 = getelementptr inbounds %class.scoped_refptr.599, %class.scoped_refptr.599* %76, i64 0, i32 0
  %78 = load %"class.blink::TransformOperation"*, %"class.blink::TransformOperation"** %77, align 8
  %79 = icmp eq %"class.blink::TransformOperation"* %78, null
  br i1 %79, label %93, label %80

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.blink::TransformOperation", %"class.blink::TransformOperation"* %78, i64 0, i32 1, i32 0
  %82 = getelementptr inbounds %"class.base::RefCounted.444", %"class.base::RefCounted.444"* %81, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %82) #10
  %83 = getelementptr inbounds %"class.base::RefCounted.444", %"class.base::RefCounted.444"* %81, i64 0, i32 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %93

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.base::RefCounted.444", %"class.base::RefCounted.444"* %81, i64 -2
  %88 = bitcast %"class.base::RefCounted.444"* %87 to %"class.blink::TransformOperation"*
  %89 = bitcast %"class.base::RefCounted.444"* %87 to void (%"class.blink::TransformOperation"*)***
  %90 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %89, align 8
  %91 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %90, i64 1
  %92 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %91, align 8
  tail call void %92(%"class.blink::TransformOperation"* nonnull %88) #10
  br label %93

93:                                               ; preds = %86, %80, %75
  %94 = getelementptr inbounds %class.scoped_refptr.599, %class.scoped_refptr.599* %76, i64 1
  %95 = icmp eq %class.scoped_refptr.599* %94, %74
  br i1 %95, label %96, label %75

96:                                               ; preds = %93
  store i32 0, i32* %69, align 4
  %97 = bitcast %"class.blink::TransformOperations"* %63 to i8**
  %98 = load i8*, i8** %97, align 8
  br label %99

99:                                               ; preds = %96, %67
  %100 = phi i8* [ %98, %96 ], [ %68, %67 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %100) #10
  store %class.scoped_refptr.599* null, %class.scoped_refptr.599** %64, align 8
  br label %101

101:                                              ; preds = %62, %99
  %102 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 3, i32 0, i32 0
  %103 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %102, align 8
  %104 = icmp eq %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %103, null
  br i1 %104, label %112, label %105

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %103, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %106) #10
  %107 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %103, i64 0, i32 0, i32 0, i32 0, i32 0
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %112

110:                                              ; preds = %105
  tail call void @_ZN5blink17ComputedStyleBase50StyleRareNonInheritedUsageLessThan14PercentSubDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* nonnull %103) #10
  %111 = bitcast %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %103 to i8*
  tail call void @free(i8* %111) #10
  br label %112

112:                                              ; preds = %101, %105, %110
  %113 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 2, i32 0, i32 0
  %114 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %113, align 8
  %115 = icmp eq %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %114, null
  br i1 %115, label %123, label %116

116:                                              ; preds = %112
  %117 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %114, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %117) #10
  %118 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %114, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load i32, i32* %118, align 4
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %123

121:                                              ; preds = %116
  tail call void @_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan22PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* nonnull %114) #10
  %122 = bitcast %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %114 to i8*
  tail call void @free(i8* %122) #10
  br label %123

123:                                              ; preds = %112, %116, %121
  ret void
}

declare void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #2

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.342"*, %"class.blink::ShadowData"*) local_unnamed_addr #5 comdat align 2 {
  %3 = bitcast %"class.blink::ShadowData"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #10
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase50StyleRareNonInheritedUsageLessThan14PercentSubDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 23, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 23
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #10
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 22, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 22
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #10
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 21, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 21
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #10
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 20, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 20
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #10
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 19, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 19
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #10
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 18, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 18
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #10
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 17, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 17
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #10
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 16, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 16
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #10
  br label %49

49:                                               ; preds = %43, %47
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %51 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %50, align 8
  %52 = icmp eq %"class.blink::NinePieceImageData"* %51, null
  br i1 %52, label %60, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %51, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %54) #10
  %55 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %60

58:                                               ; preds = %53
  tail call void @_ZN5blink18NinePieceImageDataD2Ev(%"class.blink::NinePieceImageData"* nonnull %51) #10
  %59 = bitcast %"class.blink::NinePieceImageData"* %51 to i8*
  tail call void @free(i8* %59) #10
  br label %60

60:                                               ; preds = %49, %53, %58
  %61 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 13
  tail call void @_ZN5blink9FillLayerD1Ev(%"class.blink::FillLayer"* %61) #10
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 12
  %63 = getelementptr inbounds %"class.WTF::Vector.591", %"class.WTF::Vector.591"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::String"*, %"class.WTF::String"** %63, align 8
  %65 = icmp eq %"class.WTF::String"* %64, null
  br i1 %65, label %100, label %66, !prof !16

66:                                               ; preds = %60
  %67 = bitcast %"class.WTF::String"* %64 to i8*
  %68 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 12, i32 0, i32 0, i32 2
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %98, label %71, !prof !3

71:                                               ; preds = %66
  %72 = zext i32 %69 to i64
  %73 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 %72
  br label %74

74:                                               ; preds = %92, %71
  %75 = phi %"class.WTF::String"* [ %93, %92 ], [ %64, %71 ]
  %76 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %75, i64 0, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %92, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  br i1 %83, label %86, label %88

86:                                               ; preds = %79
  %87 = add i32 %85, -1
  store i32 %87, i32* %84, align 4
  br label %88

88:                                               ; preds = %86, %79
  %89 = phi i32 [ %87, %86 ], [ %85, %79 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %88
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #10
  br label %92

92:                                               ; preds = %91, %88, %74
  %93 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %75, i64 1
  %94 = icmp eq %"class.WTF::String"* %93, %73
  br i1 %94, label %95, label %74

95:                                               ; preds = %92
  store i32 0, i32* %68, align 4
  %96 = bitcast %"class.WTF::Vector.591"* %62 to i8**
  %97 = load i8*, i8** %96, align 8
  br label %98

98:                                               ; preds = %95, %66
  %99 = phi i8* [ %97, %95 ], [ %67, %66 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %99) #10
  store %"class.WTF::String"* null, %"class.WTF::String"** %63, align 8
  br label %100

100:                                              ; preds = %60, %98
  %101 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %102 = load %"class.blink::StyleNonInheritedVariables"*, %"class.blink::StyleNonInheritedVariables"** %101, align 8
  store %"class.blink::StyleNonInheritedVariables"* null, %"class.blink::StyleNonInheritedVariables"** %101, align 8
  %103 = icmp eq %"class.blink::StyleNonInheritedVariables"* %102, null
  br i1 %103, label %178, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.blink::StyleNonInheritedVariables", %"class.blink::StyleNonInheritedVariables"* %102, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0
  %106 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %105, align 8
  %107 = icmp eq %"class.blink::PersistentNode"* %106, null
  br i1 %107, label %127, label %108

108:                                              ; preds = %104
  %109 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %110 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %109, i64 0, i32 1
  %111 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %110) #10
  %112 = icmp eq i8* %111, null
  br i1 %112, label %113, label %115, !prof !3

113:                                              ; preds = %108
  %114 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %110, i8* %114) #10
  br label %115

115:                                              ; preds = %113, %108
  %116 = phi i8* [ %114, %113 ], [ %111, %108 ]
  %117 = bitcast i8* %116 to %"class.blink::ThreadState"**
  %118 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %117, align 8
  %119 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %118, i64 0, i32 3, i32 0, i32 0, i32 0
  %120 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %119, align 8
  %121 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %105, align 8
  %122 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %120, i64 0, i32 0, i32 0
  %123 = bitcast %"class.blink::PersistentRegion"* %120 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.blink::PersistentNode"* %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %121, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %126, align 8
  store %"class.blink::PersistentNode"* %121, %"class.blink::PersistentNode"** %122, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %105, align 8
  br label %127

127:                                              ; preds = %115, %104
  %128 = getelementptr inbounds %"class.blink::StyleNonInheritedVariables", %"class.blink::StyleNonInheritedVariables"* %102, i64 0, i32 0, i32 0, i32 0, i32 0
  %129 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %128, align 8
  %130 = icmp eq %"struct.WTF::KeyValuePair"* %129, null
  br i1 %130, label %176, label %131, !prof !16

131:                                              ; preds = %127
  %132 = getelementptr inbounds %"class.blink::StyleNonInheritedVariables", %"class.blink::StyleNonInheritedVariables"* %102, i64 0, i32 0, i32 0, i32 0, i32 1
  %133 = load i32, i32* %132, align 8
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %174, label %135

135:                                              ; preds = %131
  %136 = zext i32 %133 to i64
  br label %137

137:                                              ; preds = %171, %135
  %138 = phi i64 [ 0, %135 ], [ %172, %171 ]
  %139 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %129, i64 %138
  %140 = bitcast %"struct.WTF::KeyValuePair"* %139 to i8**
  %141 = load i8*, i8** %140, align 8
  %142 = icmp eq i8* %141, inttoptr (i64 -1 to i8*)
  br i1 %142, label %171, label %143

143:                                              ; preds = %137
  %144 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %129, i64 %138, i32 1, i32 0
  %145 = load %"class.blink::CSSVariableData"*, %"class.blink::CSSVariableData"** %144, align 8
  %146 = icmp eq %"class.blink::CSSVariableData"* %145, null
  br i1 %146, label %154, label %147

147:                                              ; preds = %143
  %148 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %145, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %148) #10
  %149 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %145, i64 0, i32 0, i32 0, i32 0, i32 0
  %150 = load i32, i32* %149, align 4
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %154

152:                                              ; preds = %147
  tail call void @_ZN5blink15CSSVariableDataD2Ev(%"class.blink::CSSVariableData"* nonnull %145) #10
  %153 = bitcast %"class.blink::CSSVariableData"* %145 to i8*
  tail call void @free(i8* %153) #10
  br label %154

154:                                              ; preds = %152, %147, %143
  %155 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %139, i64 0, i32 0, i32 0, i32 0, i32 0
  %156 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %155, align 8
  %157 = icmp eq %"class.WTF::StringImpl"* %156, null
  br i1 %157, label %171, label %158

158:                                              ; preds = %154
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = load atomic i32, i32* %159 monotonic, align 4
  %161 = and i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 0
  %164 = load i32, i32* %163, align 4
  br i1 %162, label %165, label %167

165:                                              ; preds = %158
  %166 = add i32 %164, -1
  store i32 %166, i32* %163, align 4
  br label %167

167:                                              ; preds = %165, %158
  %168 = phi i32 [ %166, %165 ], [ %164, %158 ]
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %171

170:                                              ; preds = %167
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %156) #10
  br label %171

171:                                              ; preds = %170, %167, %154, %137
  %172 = add nuw nsw i64 %138, 1
  %173 = icmp eq i64 %172, %136
  br i1 %173, label %174, label %137

174:                                              ; preds = %171, %131
  %175 = bitcast %"struct.WTF::KeyValuePair"* %129 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %175) #10
  br label %176

176:                                              ; preds = %174, %127
  %177 = bitcast %"class.blink::StyleNonInheritedVariables"* %102 to i8*
  tail call void @free(i8* %177) #10
  br label %178

178:                                              ; preds = %100, %176
  %179 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 10
  tail call void @_ZNSt3__110unique_ptrIN5blink11PaintImagesENS_14default_deleteIS2_EEE5resetEPS2_(%"class.std::__1::unique_ptr.574"* %179, %"class.blink::PaintImages"* null) #10
  %180 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %181 = load %"class.blink::CSSTransitionData"*, %"class.blink::CSSTransitionData"** %180, align 8
  store %"class.blink::CSSTransitionData"* null, %"class.blink::CSSTransitionData"** %180, align 8
  %182 = icmp eq %"class.blink::CSSTransitionData"* %181, null
  br i1 %182, label %225, label %183

183:                                              ; preds = %178
  %184 = getelementptr inbounds %"class.blink::CSSTransitionData", %"class.blink::CSSTransitionData"* %181, i64 0, i32 1
  %185 = getelementptr inbounds %"class.WTF::Vector.566", %"class.WTF::Vector.566"* %184, i64 0, i32 0, i32 0, i32 0
  %186 = load %"struct.blink::CSSTransitionData::TransitionProperty"*, %"struct.blink::CSSTransitionData::TransitionProperty"** %185, align 8
  %187 = icmp eq %"struct.blink::CSSTransitionData::TransitionProperty"* %186, null
  br i1 %187, label %222, label %188, !prof !16

188:                                              ; preds = %183
  %189 = bitcast %"struct.blink::CSSTransitionData::TransitionProperty"* %186 to i8*
  %190 = getelementptr inbounds %"class.blink::CSSTransitionData", %"class.blink::CSSTransitionData"* %181, i64 0, i32 1, i32 0, i32 0, i32 2
  %191 = load i32, i32* %190, align 4
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %220, label %193, !prof !3

193:                                              ; preds = %188
  %194 = zext i32 %191 to i64
  %195 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %186, i64 %194
  br label %196

196:                                              ; preds = %214, %193
  %197 = phi %"struct.blink::CSSTransitionData::TransitionProperty"* [ %215, %214 ], [ %186, %193 ]
  %198 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %197, i64 0, i32 2, i32 0, i32 0, i32 0
  %199 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %198, align 8
  %200 = icmp eq %"class.WTF::StringImpl"* %199, null
  br i1 %200, label %214, label %201

201:                                              ; preds = %196
  %202 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %199, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %203 = load atomic i32, i32* %202 monotonic, align 4
  %204 = and i32 %203, 2
  %205 = icmp eq i32 %204, 0
  %206 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %199, i64 0, i32 0
  %207 = load i32, i32* %206, align 4
  br i1 %205, label %208, label %210

208:                                              ; preds = %201
  %209 = add i32 %207, -1
  store i32 %209, i32* %206, align 4
  br label %210

210:                                              ; preds = %208, %201
  %211 = phi i32 [ %209, %208 ], [ %207, %201 ]
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %213, label %214

213:                                              ; preds = %210
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %199) #10
  br label %214

214:                                              ; preds = %213, %210, %196
  %215 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %197, i64 1
  %216 = icmp eq %"struct.blink::CSSTransitionData::TransitionProperty"* %215, %195
  br i1 %216, label %217, label %196

217:                                              ; preds = %214
  store i32 0, i32* %190, align 4
  %218 = bitcast %"class.WTF::Vector.566"* %184 to i8**
  %219 = load i8*, i8** %218, align 8
  br label %220

220:                                              ; preds = %217, %188
  %221 = phi i8* [ %219, %217 ], [ %189, %188 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %221) #10
  store %"struct.blink::CSSTransitionData::TransitionProperty"* null, %"struct.blink::CSSTransitionData::TransitionProperty"** %185, align 8
  br label %222

222:                                              ; preds = %183, %220
  %223 = getelementptr inbounds %"class.blink::CSSTransitionData", %"class.blink::CSSTransitionData"* %181, i64 0, i32 0
  tail call void @_ZN5blink13CSSTimingDataD2Ev(%"class.blink::CSSTimingData"* %223) #10
  %224 = bitcast %"class.blink::CSSTransitionData"* %181 to i8*
  tail call void @free(i8* %224) #10
  br label %225

225:                                              ; preds = %178, %222
  %226 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %227 = load %"class.blink::CSSAnimationData"*, %"class.blink::CSSAnimationData"** %226, align 8
  store %"class.blink::CSSAnimationData"* null, %"class.blink::CSSAnimationData"** %226, align 8
  %228 = icmp eq %"class.blink::CSSAnimationData"* %227, null
  br i1 %228, label %231, label %229

229:                                              ; preds = %225
  tail call void @_ZN5blink16CSSAnimationDataD2Ev(%"class.blink::CSSAnimationData"* nonnull %227) #10
  %230 = bitcast %"class.blink::CSSAnimationData"* %227 to i8*
  tail call void @free(i8* %230) #10
  br label %231

231:                                              ; preds = %225, %229
  %232 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %233 = load %"class.blink::CounterDirectiveMap"*, %"class.blink::CounterDirectiveMap"** %232, align 8
  store %"class.blink::CounterDirectiveMap"* null, %"class.blink::CounterDirectiveMap"** %232, align 8
  %234 = icmp eq %"class.blink::CounterDirectiveMap"* %233, null
  br i1 %234, label %273, label %235

235:                                              ; preds = %231
  %236 = getelementptr inbounds %"class.blink::CounterDirectiveMap", %"class.blink::CounterDirectiveMap"* %233, i64 0, i32 0, i32 0, i32 0
  %237 = load %"struct.WTF::KeyValuePair.521"*, %"struct.WTF::KeyValuePair.521"** %236, align 8
  %238 = icmp eq %"struct.WTF::KeyValuePair.521"* %237, null
  br i1 %238, label %271, label %239, !prof !16

239:                                              ; preds = %235
  %240 = getelementptr inbounds %"class.blink::CounterDirectiveMap", %"class.blink::CounterDirectiveMap"* %233, i64 0, i32 0, i32 0, i32 1
  %241 = load i32, i32* %240, align 8
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %269, label %243

243:                                              ; preds = %239
  %244 = zext i32 %241 to i64
  br label %245

245:                                              ; preds = %266, %243
  %246 = phi i64 [ 0, %243 ], [ %267, %266 ]
  %247 = getelementptr inbounds %"struct.WTF::KeyValuePair.521", %"struct.WTF::KeyValuePair.521"* %237, i64 %246
  %248 = bitcast %"struct.WTF::KeyValuePair.521"* %247 to i8**
  %249 = load i8*, i8** %248, align 8
  %250 = bitcast i8* %249 to %"class.WTF::StringImpl"*
  %251 = ptrtoint i8* %249 to i64
  switch i64 %251, label %252 [
    i64 -1, label %266
    i64 0, label %266
  ]

252:                                              ; preds = %245
  %253 = getelementptr inbounds i8, i8* %249, i64 8
  %254 = bitcast i8* %253 to i32*
  %255 = load atomic i32, i32* %254 monotonic, align 4
  %256 = and i32 %255, 2
  %257 = icmp eq i32 %256, 0
  %258 = bitcast i8* %249 to i32*
  %259 = load i32, i32* %258, align 4
  br i1 %257, label %260, label %262

260:                                              ; preds = %252
  %261 = add i32 %259, -1
  store i32 %261, i32* %258, align 4
  br label %262

262:                                              ; preds = %260, %252
  %263 = phi i32 [ %261, %260 ], [ %259, %252 ]
  %264 = icmp eq i32 %263, 0
  br i1 %264, label %265, label %266

265:                                              ; preds = %262
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %250) #10
  br label %266

266:                                              ; preds = %265, %262, %245, %245
  %267 = add nuw nsw i64 %246, 1
  %268 = icmp eq i64 %267, %244
  br i1 %268, label %269, label %245

269:                                              ; preds = %266, %239
  %270 = bitcast %"struct.WTF::KeyValuePair.521"* %237 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %270) #10
  store %"struct.WTF::KeyValuePair.521"* null, %"struct.WTF::KeyValuePair.521"** %236, align 8
  br label %271

271:                                              ; preds = %269, %235
  %272 = bitcast %"class.blink::CounterDirectiveMap"* %233 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %272) #10
  br label %273

273:                                              ; preds = %231, %271
  %274 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %275 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %274, align 8
  %276 = icmp eq %"class.WTF::StringImpl"* %275, null
  br i1 %276, label %290, label %277

277:                                              ; preds = %273
  %278 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %275, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %279 = load atomic i32, i32* %278 monotonic, align 4
  %280 = and i32 %279, 2
  %281 = icmp eq i32 %280, 0
  %282 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %275, i64 0, i32 0
  %283 = load i32, i32* %282, align 4
  br i1 %281, label %284, label %286

284:                                              ; preds = %277
  %285 = add i32 %283, -1
  store i32 %285, i32* %282, align 4
  br label %286

286:                                              ; preds = %284, %277
  %287 = phi i32 [ %285, %284 ], [ %283, %277 ]
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %289, label %290

289:                                              ; preds = %286
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %275) #10
  br label %290

290:                                              ; preds = %273, %286, %289
  %291 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %292 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %291, align 8
  %293 = icmp eq %"class.WTF::StringImpl"* %292, null
  br i1 %293, label %307, label %294

294:                                              ; preds = %290
  %295 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %292, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %296 = load atomic i32, i32* %295 monotonic, align 4
  %297 = and i32 %296, 2
  %298 = icmp eq i32 %297, 0
  %299 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %292, i64 0, i32 0
  %300 = load i32, i32* %299, align 4
  br i1 %298, label %301, label %303

301:                                              ; preds = %294
  %302 = add i32 %300, -1
  store i32 %302, i32* %299, align 4
  br label %303

303:                                              ; preds = %301, %294
  %304 = phi i32 [ %302, %301 ], [ %300, %294 ]
  %305 = icmp eq i32 %304, 0
  br i1 %305, label %306, label %307

306:                                              ; preds = %303
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %292) #10
  br label %307

307:                                              ; preds = %290, %303, %306
  %308 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %309 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %308, align 8
  %310 = icmp eq %"class.WTF::StringImpl"* %309, null
  br i1 %310, label %324, label %311

311:                                              ; preds = %307
  %312 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %309, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %313 = load atomic i32, i32* %312 monotonic, align 4
  %314 = and i32 %313, 2
  %315 = icmp eq i32 %314, 0
  %316 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %309, i64 0, i32 0
  %317 = load i32, i32* %316, align 4
  br i1 %315, label %318, label %320

318:                                              ; preds = %311
  %319 = add i32 %317, -1
  store i32 %319, i32* %316, align 4
  br label %320

320:                                              ; preds = %318, %311
  %321 = phi i32 [ %319, %318 ], [ %317, %311 ]
  %322 = icmp eq i32 %321, 0
  br i1 %322, label %323, label %324

323:                                              ; preds = %320
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %309) #10
  br label %324

324:                                              ; preds = %307, %320, %323
  %325 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 3, i32 0, i32 0
  %326 = load %"class.blink::ComputedStyleBase::StyleGridData"*, %"class.blink::ComputedStyleBase::StyleGridData"** %325, align 8
  %327 = icmp eq %"class.blink::ComputedStyleBase::StyleGridData"* %326, null
  br i1 %327, label %335, label %328

328:                                              ; preds = %324
  %329 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %326, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %329) #10
  %330 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %326, i64 0, i32 0, i32 0, i32 0, i32 0
  %331 = load i32, i32* %330, align 4
  %332 = icmp eq i32 %331, 0
  br i1 %332, label %333, label %335

333:                                              ; preds = %328
  tail call void @_ZN5blink17ComputedStyleBase13StyleGridDataD2Ev(%"class.blink::ComputedStyleBase::StyleGridData"* nonnull %326) #10
  %334 = bitcast %"class.blink::ComputedStyleBase::StyleGridData"* %326 to i8*
  tail call void @free(i8* %334) #10
  br label %335

335:                                              ; preds = %324, %328, %333
  %336 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 2, i32 0, i32 0
  %337 = load %"class.blink::ComputedStyleBase::StyleWillChangeData"*, %"class.blink::ComputedStyleBase::StyleWillChangeData"** %336, align 8
  %338 = icmp eq %"class.blink::ComputedStyleBase::StyleWillChangeData"* %337, null
  br i1 %338, label %359, label %339

339:                                              ; preds = %335
  %340 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleWillChangeData", %"class.blink::ComputedStyleBase::StyleWillChangeData"* %337, i64 0, i32 0, i32 0
  %341 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleWillChangeData", %"class.blink::ComputedStyleBase::StyleWillChangeData"* %337, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %341) #10
  %342 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleWillChangeData", %"class.blink::ComputedStyleBase::StyleWillChangeData"* %337, i64 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i32, i32* %342, align 4
  %344 = icmp eq i32 %343, 0
  br i1 %344, label %345, label %359

345:                                              ; preds = %339
  %346 = getelementptr inbounds %"class.base::RefCounted.489", %"class.base::RefCounted.489"* %340, i64 2
  %347 = bitcast %"class.base::RefCounted.489"* %346 to i32**
  %348 = load i32*, i32** %347, align 8
  %349 = icmp eq i32* %348, null
  %350 = bitcast i32* %348 to i8*
  br i1 %349, label %357, label %351, !prof !16

351:                                              ; preds = %345
  %352 = getelementptr inbounds %"class.base::RefCounted.489", %"class.base::RefCounted.489"* %340, i64 5, i32 0, i32 0
  %353 = load i32, i32* %352, align 4
  %354 = icmp eq i32 %353, 0
  br i1 %354, label %356, label %355, !prof !3

355:                                              ; preds = %351
  store i32 0, i32* %352, align 4
  br label %356

356:                                              ; preds = %355, %351
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %350) #10
  br label %357

357:                                              ; preds = %356, %345
  %358 = bitcast %"class.blink::ComputedStyleBase::StyleWillChangeData"* %337 to i8*
  tail call void @free(i8* %358) #10
  br label %359

359:                                              ; preds = %335, %339, %357
  %360 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 1, i32 0, i32 0
  %361 = load %"class.blink::ComputedStyleBase::StyleMultiColData"*, %"class.blink::ComputedStyleBase::StyleMultiColData"** %360, align 8
  %362 = icmp eq %"class.blink::ComputedStyleBase::StyleMultiColData"* %361, null
  br i1 %362, label %370, label %363

363:                                              ; preds = %359
  %364 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMultiColData", %"class.blink::ComputedStyleBase::StyleMultiColData"* %361, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %364) #10
  %365 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMultiColData", %"class.blink::ComputedStyleBase::StyleMultiColData"* %361, i64 0, i32 0, i32 0, i32 0, i32 0
  %366 = load i32, i32* %365, align 4
  %367 = icmp eq i32 %366, 0
  br i1 %367, label %368, label %370

368:                                              ; preds = %363
  %369 = bitcast %"class.blink::ComputedStyleBase::StyleMultiColData"* %361 to i8*
  tail call void @free(i8* %369) #10
  br label %370

370:                                              ; preds = %359, %363, %368
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink9FillLayerD1Ev(%"class.blink::FillLayer"*) unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18NinePieceImageDataD2Ev(%"class.blink::NinePieceImageData"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 3, i32 0, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #10
  br label %7

7:                                                ; preds = %5, %1
  %8 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 2, i32 0, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #10
  br label %13

13:                                               ; preds = %11, %7
  %14 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 1, i32 0, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 1, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #10
  br label %19

19:                                               ; preds = %17, %13
  %20 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 0, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #10
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 3, i32 0, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #10
  br label %31

31:                                               ; preds = %29, %25
  %32 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 2, i32 0, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #10
  br label %37

37:                                               ; preds = %35, %31
  %38 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 1, i32 0, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 1, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #10
  br label %43

43:                                               ; preds = %41, %37
  %44 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 0, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #10
  br label %49

49:                                               ; preds = %43, %47
  %50 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 3, i32 2
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 8
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %54) #10
  br label %55

55:                                               ; preds = %53, %49
  %56 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 2, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 8
  br i1 %58, label %59, label %61

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %60) #10
  br label %61

61:                                               ; preds = %59, %55
  %62 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 1, i32 2
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 8
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %66) #10
  br label %67

67:                                               ; preds = %65, %61
  %68 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 0, i32 2
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 8
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %72) #10
  br label %73

73:                                               ; preds = %67, %71
  %74 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  %75 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %74, align 8
  %76 = icmp eq %"class.blink::PersistentNode"* %75, null
  br i1 %76, label %96, label %77

77:                                               ; preds = %73
  %78 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %79 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %78, i64 0, i32 1
  %80 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %79) #10
  %81 = icmp eq i8* %80, null
  br i1 %81, label %82, label %84, !prof !3

82:                                               ; preds = %77
  %83 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %79, i8* %83) #10
  br label %84

84:                                               ; preds = %82, %77
  %85 = phi i8* [ %83, %82 ], [ %80, %77 ]
  %86 = bitcast i8* %85 to %"class.blink::ThreadState"**
  %87 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %86, align 8
  %88 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %87, i64 0, i32 3, i32 0, i32 0, i32 0
  %89 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %88, align 8
  %90 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %74, align 8
  %91 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %89, i64 0, i32 0, i32 0
  %92 = bitcast %"class.blink::PersistentRegion"* %89 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %"class.blink::PersistentNode"* %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %90, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %95, align 8
  store %"class.blink::PersistentNode"* %90, %"class.blink::PersistentNode"** %91, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %74, align 8
  br label %96

96:                                               ; preds = %73, %84
  ret void
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15CSSVariableDataD2Ev(%"class.blink::CSSVariableData"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #10
  br label %18

18:                                               ; preds = %1, %14, %17
  %19 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 3, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #10
  br label %35

35:                                               ; preds = %18, %31, %34
  %36 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %37 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %36, align 8
  %38 = icmp eq %"class.blink::CSSParserToken"* %37, null
  %39 = bitcast %"class.blink::CSSParserToken"* %37 to i8*
  br i1 %38, label %46, label %40, !prof !16

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %45, label %44, !prof !3

44:                                               ; preds = %40
  store i32 0, i32* %41, align 4
  br label %45

45:                                               ; preds = %44, %40
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %39) #10
  store %"class.blink::CSSParserToken"* null, %"class.blink::CSSParserToken"** %36, align 8
  br label %46

46:                                               ; preds = %35, %45
  %47 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 1
  %48 = getelementptr inbounds %"class.WTF::Vector.591", %"class.WTF::Vector.591"* %47, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::String"*, %"class.WTF::String"** %48, align 8
  %50 = icmp eq %"class.WTF::String"* %49, null
  br i1 %50, label %85, label %51, !prof !16

51:                                               ; preds = %46
  %52 = bitcast %"class.WTF::String"* %49 to i8*
  %53 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %83, label %56, !prof !3

56:                                               ; preds = %51
  %57 = zext i32 %54 to i64
  %58 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %49, i64 %57
  br label %59

59:                                               ; preds = %77, %56
  %60 = phi %"class.WTF::String"* [ %78, %77 ], [ %49, %56 ]
  %61 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %60, i64 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %77, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %64
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %64
  %74 = phi i32 [ %72, %71 ], [ %70, %64 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #10
  br label %77

77:                                               ; preds = %76, %73, %59
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %60, i64 1
  %79 = icmp eq %"class.WTF::String"* %78, %58
  br i1 %79, label %80, label %59

80:                                               ; preds = %77
  store i32 0, i32* %53, align 4
  %81 = bitcast %"class.WTF::Vector.591"* %47 to i8**
  %82 = load i8*, i8** %81, align 8
  br label %83

83:                                               ; preds = %80, %51
  %84 = phi i8* [ %82, %80 ], [ %52, %51 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %84) #10
  store %"class.WTF::String"* null, %"class.WTF::String"** %48, align 8
  br label %85

85:                                               ; preds = %46, %83
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110unique_ptrIN5blink11PaintImagesENS_14default_deleteIS2_EEE5resetEPS2_(%"class.std::__1::unique_ptr.574"*, %"class.blink::PaintImages"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr.574", %"class.std::__1::unique_ptr.574"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::PaintImages"*, %"class.blink::PaintImages"** %3, align 8
  store %"class.blink::PaintImages"* %1, %"class.blink::PaintImages"** %3, align 8
  %5 = icmp eq %"class.blink::PaintImages"* %4, null
  br i1 %5, label %52, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::PaintImages", %"class.blink::PaintImages"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::Persistent.346"*, %"class.blink::Persistent.346"** %7, align 8
  %9 = icmp eq %"class.blink::Persistent.346"* %8, null
  br i1 %9, label %50, label %10, !prof !16

10:                                               ; preds = %6
  %11 = bitcast %"class.blink::Persistent.346"* %8 to i8*
  %12 = getelementptr inbounds %"class.blink::PaintImages", %"class.blink::PaintImages"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %48, label %15, !prof !3

15:                                               ; preds = %10
  %16 = zext i32 %13 to i64
  %17 = getelementptr inbounds %"class.blink::Persistent.346", %"class.blink::Persistent.346"* %8, i64 %16
  br label %18

18:                                               ; preds = %15, %42
  %19 = phi %"class.blink::Persistent.346"* [ %43, %42 ], [ %8, %15 ]
  %20 = getelementptr inbounds %"class.blink::Persistent.346", %"class.blink::Persistent.346"* %19, i64 0, i32 0, i32 1, i32 0
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %20, align 8
  %22 = icmp eq %"class.blink::PersistentNode"* %21, null
  br i1 %22, label %42, label %23

23:                                               ; preds = %18
  %24 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %25 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %24, i64 0, i32 1
  %26 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %25) #10
  %27 = icmp eq i8* %26, null
  br i1 %27, label %28, label %30, !prof !3

28:                                               ; preds = %23
  %29 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %25, i8* %29) #10
  br label %30

30:                                               ; preds = %28, %23
  %31 = phi i8* [ %29, %28 ], [ %26, %23 ]
  %32 = bitcast i8* %31 to %"class.blink::ThreadState"**
  %33 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %34, align 8
  %36 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %20, align 8
  %37 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %35, i64 0, i32 0, i32 0
  %38 = bitcast %"class.blink::PersistentRegion"* %35 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.blink::PersistentNode"* %36 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %36, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %41, align 8
  store %"class.blink::PersistentNode"* %36, %"class.blink::PersistentNode"** %37, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %20, align 8
  br label %42

42:                                               ; preds = %30, %18
  %43 = getelementptr inbounds %"class.blink::Persistent.346", %"class.blink::Persistent.346"* %19, i64 1
  %44 = icmp eq %"class.blink::Persistent.346"* %43, %17
  br i1 %44, label %45, label %18

45:                                               ; preds = %42
  store i32 0, i32* %12, align 4
  %46 = bitcast %"class.blink::PaintImages"* %4 to i8**
  %47 = load i8*, i8** %46, align 8
  br label %48

48:                                               ; preds = %45, %10
  %49 = phi i8* [ %47, %45 ], [ %11, %10 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %49) #10
  store %"class.blink::Persistent.346"* null, %"class.blink::Persistent.346"** %7, align 8
  br label %50

50:                                               ; preds = %6, %48
  %51 = bitcast %"class.blink::PaintImages"* %4 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %51) #10
  br label %52

52:                                               ; preds = %2, %50
  ret void
}

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13CSSTimingDataD2Ev(%"class.blink::CSSTimingData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.WTF::Vector.533", %"class.WTF::Vector.533"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %class.scoped_refptr.536*, %class.scoped_refptr.536** %3, align 8
  %5 = icmp eq %class.scoped_refptr.536* %4, null
  br i1 %5, label %39, label %6, !prof !16

6:                                                ; preds = %1
  %7 = bitcast %class.scoped_refptr.536* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %37, label %11, !prof !3

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %class.scoped_refptr.536, %class.scoped_refptr.536* %4, i64 %12
  br label %14

14:                                               ; preds = %31, %11
  %15 = phi %class.scoped_refptr.536* [ %32, %31 ], [ %4, %11 ]
  %16 = getelementptr inbounds %class.scoped_refptr.536, %class.scoped_refptr.536* %15, i64 0, i32 0
  %17 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %16, align 8
  %18 = icmp eq %"class.blink::TimingFunction"* %17, null
  br i1 %18, label %31, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %17, i64 0, i32 1, i32 0
  %21 = getelementptr inbounds %"class.base::RefCountedThreadSafe.537", %"class.base::RefCountedThreadSafe.537"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw sub i32* %21, i32 1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %31

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.base::RefCountedThreadSafe.537", %"class.base::RefCountedThreadSafe.537"* %20, i64 -2
  %26 = bitcast %"class.base::RefCountedThreadSafe.537"* %25 to %"class.blink::TimingFunction"*
  %27 = bitcast %"class.base::RefCountedThreadSafe.537"* %25 to void (%"class.blink::TimingFunction"*)***
  %28 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %28, i64 1
  %30 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %29, align 8
  tail call void %30(%"class.blink::TimingFunction"* nonnull %26) #10
  br label %31

31:                                               ; preds = %24, %19, %14
  %32 = getelementptr inbounds %class.scoped_refptr.536, %class.scoped_refptr.536* %15, i64 1
  %33 = icmp eq %class.scoped_refptr.536* %32, %13
  br i1 %33, label %34, label %14

34:                                               ; preds = %31
  store i32 0, i32* %8, align 4
  %35 = bitcast %"class.WTF::Vector.533"* %2 to i8**
  %36 = load i8*, i8** %35, align 8
  br label %37

37:                                               ; preds = %34, %6
  %38 = phi i8* [ %36, %34 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %38) #10
  store %class.scoped_refptr.536* null, %class.scoped_refptr.536** %3, align 8
  br label %39

39:                                               ; preds = %1, %37
  %40 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %41 = load double*, double** %40, align 8
  %42 = icmp eq double* %41, null
  %43 = bitcast double* %41 to i8*
  br i1 %42, label %50, label %44, !prof !16

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %49, label %48, !prof !3

48:                                               ; preds = %44
  store i32 0, i32* %45, align 4
  br label %49

49:                                               ; preds = %48, %44
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %43) #10
  store double* null, double** %40, align 8
  br label %50

50:                                               ; preds = %39, %49
  %51 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %52 = load double*, double** %51, align 8
  %53 = icmp eq double* %52, null
  %54 = bitcast double* %52 to i8*
  br i1 %53, label %61, label %55, !prof !16

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %60, label %59, !prof !3

59:                                               ; preds = %55
  store i32 0, i32* %56, align 4
  br label %60

60:                                               ; preds = %59, %55
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %54) #10
  store double* null, double** %51, align 8
  br label %61

61:                                               ; preds = %50, %60
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16CSSAnimationDataD2Ev(%"class.blink::CSSAnimationData"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %3 = load i32*, i32** %2, align 8
  %4 = icmp eq i32* %3, null
  %5 = bitcast i32* %3 to i8*
  br i1 %4, label %12, label %6, !prof !16

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10, !prof !3

10:                                               ; preds = %6
  store i32 0, i32* %7, align 4
  br label %11

11:                                               ; preds = %10, %6
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %5) #10
  store i32* null, i32** %2, align 8
  br label %12

12:                                               ; preds = %1, %11
  %13 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = icmp eq i32* %14, null
  %16 = bitcast i32* %14 to i8*
  br i1 %15, label %23, label %17, !prof !16

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %22, label %21, !prof !3

21:                                               ; preds = %17
  store i32 0, i32* %18, align 4
  br label %22

22:                                               ; preds = %21, %17
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %16) #10
  store i32* null, i32** %13, align 8
  br label %23

23:                                               ; preds = %12, %22
  %24 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %25 = load i32*, i32** %24, align 8
  %26 = icmp eq i32* %25, null
  %27 = bitcast i32* %25 to i8*
  br i1 %26, label %34, label %28, !prof !16

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %33, label %32, !prof !3

32:                                               ; preds = %28
  store i32 0, i32* %29, align 4
  br label %33

33:                                               ; preds = %32, %28
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %27) #10
  store i32* null, i32** %24, align 8
  br label %34

34:                                               ; preds = %23, %33
  %35 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %36 = load double*, double** %35, align 8
  %37 = icmp eq double* %36, null
  %38 = bitcast double* %36 to i8*
  br i1 %37, label %45, label %39, !prof !16

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %44, label %43, !prof !3

43:                                               ; preds = %39
  store i32 0, i32* %40, align 4
  br label %44

44:                                               ; preds = %43, %39
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %38) #10
  store double* null, double** %35, align 8
  br label %45

45:                                               ; preds = %34, %44
  %46 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 2
  %47 = getelementptr inbounds %"class.WTF::Vector.540", %"class.WTF::Vector.540"* %46, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.blink::StyleNameOrKeyword"*, %"class.blink::StyleNameOrKeyword"** %47, align 8
  %49 = icmp eq %"class.blink::StyleNameOrKeyword"* %48, null
  br i1 %49, label %84, label %50, !prof !16

50:                                               ; preds = %45
  %51 = bitcast %"class.blink::StyleNameOrKeyword"* %48 to i8*
  %52 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %82, label %55, !prof !3

55:                                               ; preds = %50
  %56 = zext i32 %53 to i64
  %57 = getelementptr inbounds %"class.blink::StyleNameOrKeyword", %"class.blink::StyleNameOrKeyword"* %48, i64 %56
  br label %58

58:                                               ; preds = %76, %55
  %59 = phi %"class.blink::StyleNameOrKeyword"* [ %77, %76 ], [ %48, %55 ]
  %60 = getelementptr inbounds %"class.blink::StyleNameOrKeyword", %"class.blink::StyleNameOrKeyword"* %59, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %76, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %72

70:                                               ; preds = %63
  %71 = add i32 %69, -1
  store i32 %71, i32* %68, align 4
  br label %72

72:                                               ; preds = %70, %63
  %73 = phi i32 [ %71, %70 ], [ %69, %63 ]
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %72
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %61) #10
  br label %76

76:                                               ; preds = %75, %72, %58
  %77 = getelementptr inbounds %"class.blink::StyleNameOrKeyword", %"class.blink::StyleNameOrKeyword"* %59, i64 1
  %78 = icmp eq %"class.blink::StyleNameOrKeyword"* %77, %57
  br i1 %78, label %79, label %58

79:                                               ; preds = %76
  store i32 0, i32* %52, align 4
  %80 = bitcast %"class.WTF::Vector.540"* %46 to i8**
  %81 = load i8*, i8** %80, align 8
  br label %82

82:                                               ; preds = %79, %50
  %83 = phi i8* [ %81, %79 ], [ %51, %50 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %83) #10
  store %"class.blink::StyleNameOrKeyword"* null, %"class.blink::StyleNameOrKeyword"** %47, align 8
  br label %84

84:                                               ; preds = %45, %82
  %85 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 1
  %86 = getelementptr inbounds %"class.WTF::Vector.325", %"class.WTF::Vector.325"* %85, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %86, align 8
  %88 = icmp eq %"class.WTF::AtomicString"* %87, null
  br i1 %88, label %123, label %89, !prof !16

89:                                               ; preds = %84
  %90 = bitcast %"class.WTF::AtomicString"* %87 to i8*
  %91 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %92 = load i32, i32* %91, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %121, label %94, !prof !3

94:                                               ; preds = %89
  %95 = zext i32 %92 to i64
  %96 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %87, i64 %95
  br label %97

97:                                               ; preds = %115, %94
  %98 = phi %"class.WTF::AtomicString"* [ %116, %115 ], [ %87, %94 ]
  %99 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %99, align 8
  %101 = icmp eq %"class.WTF::StringImpl"* %100, null
  br i1 %101, label %115, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  br i1 %106, label %109, label %111

109:                                              ; preds = %102
  %110 = add i32 %108, -1
  store i32 %110, i32* %107, align 4
  br label %111

111:                                              ; preds = %109, %102
  %112 = phi i32 [ %110, %109 ], [ %108, %102 ]
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %115

114:                                              ; preds = %111
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %100) #10
  br label %115

115:                                              ; preds = %114, %111, %97
  %116 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %98, i64 1
  %117 = icmp eq %"class.WTF::AtomicString"* %116, %96
  br i1 %117, label %118, label %97

118:                                              ; preds = %115
  store i32 0, i32* %91, align 4
  %119 = bitcast %"class.WTF::Vector.325"* %85 to i8**
  %120 = load i8*, i8** %119, align 8
  br label %121

121:                                              ; preds = %118, %89
  %122 = phi i8* [ %120, %118 ], [ %90, %89 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %122) #10
  store %"class.WTF::AtomicString"* null, %"class.WTF::AtomicString"** %86, align 8
  br label %123

123:                                              ; preds = %84, %121
  %124 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 0
  tail call void @_ZN5blink13CSSTimingDataD2Ev(%"class.blink::CSSTimingData"* %124) #10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase13StyleGridDataD2Ev(%"class.blink::ComputedStyleBase::StyleGridData"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 14
  %3 = getelementptr inbounds %"class.WTF::Vector.420", %"class.WTF::Vector.420"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %3, align 8
  %5 = icmp eq %"class.blink::GridTrackSize"* %4, null
  br i1 %5, label %41, label %6, !prof !16

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::GridTrackSize"* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 14, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %39, label %11, !prof !3

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %4, i64 %12
  br label %14

14:                                               ; preds = %33, %11
  %15 = phi %"class.blink::GridTrackSize"* [ %34, %33 ], [ %4, %11 ]
  %16 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 4, i32 0, i32 2
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, 8
  br i1 %18, label %19, label %21

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %20) #10
  br label %21

21:                                               ; preds = %19, %14
  %22 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 3, i32 0, i32 2
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %23, 8
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %26) #10
  br label %27

27:                                               ; preds = %25, %21
  %28 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 2, i32 0, i32 2
  %29 = load i8, i8* %28, align 1
  %30 = icmp eq i8 %29, 8
  br i1 %30, label %31, label %33

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %32) #10
  br label %33

33:                                               ; preds = %31, %27
  %34 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 1
  %35 = icmp eq %"class.blink::GridTrackSize"* %34, %13
  br i1 %35, label %36, label %14

36:                                               ; preds = %33
  store i32 0, i32* %8, align 4
  %37 = bitcast %"class.WTF::Vector.420"* %2 to i8**
  %38 = load i8*, i8** %37, align 8
  br label %39

39:                                               ; preds = %36, %6
  %40 = phi i8* [ %38, %36 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %40) #10
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %3, align 8
  br label %41

41:                                               ; preds = %1, %39
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 13
  %43 = getelementptr inbounds %"class.WTF::Vector.420", %"class.WTF::Vector.420"* %42, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %43, align 8
  %45 = icmp eq %"class.blink::GridTrackSize"* %44, null
  br i1 %45, label %81, label %46, !prof !16

46:                                               ; preds = %41
  %47 = bitcast %"class.blink::GridTrackSize"* %44 to i8*
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 13, i32 0, i32 0, i32 2
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %79, label %51, !prof !3

51:                                               ; preds = %46
  %52 = zext i32 %49 to i64
  %53 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %44, i64 %52
  br label %54

54:                                               ; preds = %73, %51
  %55 = phi %"class.blink::GridTrackSize"* [ %74, %73 ], [ %44, %51 ]
  %56 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 4, i32 0, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 8
  br i1 %58, label %59, label %61

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %60) #10
  br label %61

61:                                               ; preds = %59, %54
  %62 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 3, i32 0, i32 2
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 8
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %66) #10
  br label %67

67:                                               ; preds = %65, %61
  %68 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 2, i32 0, i32 2
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 8
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %72) #10
  br label %73

73:                                               ; preds = %71, %67
  %74 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 1
  %75 = icmp eq %"class.blink::GridTrackSize"* %74, %53
  br i1 %75, label %76, label %54

76:                                               ; preds = %73
  store i32 0, i32* %48, align 4
  %77 = bitcast %"class.WTF::Vector.420"* %42 to i8**
  %78 = load i8*, i8** %77, align 8
  br label %79

79:                                               ; preds = %76, %46
  %80 = phi i8* [ %78, %76 ], [ %47, %46 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %80) #10
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %43, align 8
  br label %81

81:                                               ; preds = %41, %79
  %82 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 12, i32 0, i32 0
  %83 = load %"struct.WTF::KeyValuePair.513"*, %"struct.WTF::KeyValuePair.513"** %82, align 8
  %84 = icmp eq %"struct.WTF::KeyValuePair.513"* %83, null
  br i1 %84, label %117, label %85, !prof !16

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 12, i32 0, i32 1
  %87 = load i32, i32* %86, align 8
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %115, label %89

89:                                               ; preds = %85
  %90 = zext i32 %87 to i64
  br label %91

91:                                               ; preds = %112, %89
  %92 = phi i64 [ 0, %89 ], [ %113, %112 ]
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair.513", %"struct.WTF::KeyValuePair.513"* %83, i64 %92
  %94 = bitcast %"struct.WTF::KeyValuePair.513"* %93 to i8**
  %95 = load i8*, i8** %94, align 8
  %96 = bitcast i8* %95 to %"class.WTF::StringImpl"*
  %97 = ptrtoint i8* %95 to i64
  switch i64 %97, label %98 [
    i64 -1, label %112
    i64 0, label %112
  ]

98:                                               ; preds = %91
  %99 = getelementptr inbounds i8, i8* %95, i64 8
  %100 = bitcast i8* %99 to i32*
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = bitcast i8* %95 to i32*
  %105 = load i32, i32* %104, align 4
  br i1 %103, label %106, label %108

106:                                              ; preds = %98
  %107 = add i32 %105, -1
  store i32 %107, i32* %104, align 4
  br label %108

108:                                              ; preds = %106, %98
  %109 = phi i32 [ %107, %106 ], [ %105, %98 ]
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %96) #10
  br label %112

112:                                              ; preds = %111, %108, %91, %91
  %113 = add nuw nsw i64 %92, 1
  %114 = icmp eq i64 %113, %90
  br i1 %114, label %115, label %91

115:                                              ; preds = %112, %85
  %116 = bitcast %"struct.WTF::KeyValuePair.513"* %83 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %116) #10
  store %"struct.WTF::KeyValuePair.513"* null, %"struct.WTF::KeyValuePair.513"** %82, align 8
  br label %117

117:                                              ; preds = %81, %115
  %118 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 11, i32 0, i32 0
  %119 = load %"struct.WTF::KeyValuePair.508"*, %"struct.WTF::KeyValuePair.508"** %118, align 8
  %120 = icmp eq %"struct.WTF::KeyValuePair.508"* %119, null
  br i1 %120, label %124, label %121, !prof !16

121:                                              ; preds = %117
  %122 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 11, i32 0, i32 1
  %123 = load i32, i32* %122, align 8
  tail call void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.508"* nonnull %119, i32 %123) #10
  store %"struct.WTF::KeyValuePair.508"* null, %"struct.WTF::KeyValuePair.508"** %118, align 8
  br label %124

124:                                              ; preds = %117, %121
  %125 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 10, i32 0, i32 0
  %126 = load %"struct.WTF::KeyValuePair.508"*, %"struct.WTF::KeyValuePair.508"** %125, align 8
  %127 = icmp eq %"struct.WTF::KeyValuePair.508"* %126, null
  br i1 %127, label %131, label %128, !prof !16

128:                                              ; preds = %124
  %129 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 10, i32 0, i32 1
  %130 = load i32, i32* %129, align 8
  tail call void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.508"* nonnull %126, i32 %130) #10
  store %"struct.WTF::KeyValuePair.508"* null, %"struct.WTF::KeyValuePair.508"** %125, align 8
  br label %131

131:                                              ; preds = %124, %128
  %132 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 9, i32 0, i32 0
  %133 = load %"struct.WTF::KeyValuePair.508"*, %"struct.WTF::KeyValuePair.508"** %132, align 8
  %134 = icmp eq %"struct.WTF::KeyValuePair.508"* %133, null
  br i1 %134, label %138, label %135, !prof !16

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 9, i32 0, i32 1
  %137 = load i32, i32* %136, align 8
  tail call void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.508"* nonnull %133, i32 %137) #10
  store %"struct.WTF::KeyValuePair.508"* null, %"struct.WTF::KeyValuePair.508"** %132, align 8
  br label %138

138:                                              ; preds = %131, %135
  %139 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 8, i32 0, i32 0
  %140 = load %"struct.WTF::KeyValuePair.508"*, %"struct.WTF::KeyValuePair.508"** %139, align 8
  %141 = icmp eq %"struct.WTF::KeyValuePair.508"* %140, null
  br i1 %141, label %145, label %142, !prof !16

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 8, i32 0, i32 1
  %144 = load i32, i32* %143, align 8
  tail call void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.508"* nonnull %140, i32 %144) #10
  store %"struct.WTF::KeyValuePair.508"* null, %"struct.WTF::KeyValuePair.508"** %139, align 8
  br label %145

145:                                              ; preds = %138, %142
  %146 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 7, i32 0, i32 0
  %147 = load %"struct.WTF::KeyValuePair.503"*, %"struct.WTF::KeyValuePair.503"** %146, align 8
  %148 = icmp eq %"struct.WTF::KeyValuePair.503"* %147, null
  br i1 %148, label %196, label %149, !prof !16

149:                                              ; preds = %145
  %150 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 7, i32 0, i32 1
  %151 = load i32, i32* %150, align 8
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %194, label %153

153:                                              ; preds = %149
  %154 = zext i32 %151 to i64
  br label %155

155:                                              ; preds = %191, %153
  %156 = phi i64 [ 0, %153 ], [ %192, %191 ]
  %157 = getelementptr inbounds %"struct.WTF::KeyValuePair.503", %"struct.WTF::KeyValuePair.503"* %147, i64 %156
  %158 = bitcast %"struct.WTF::KeyValuePair.503"* %157 to i8**
  %159 = load i8*, i8** %158, align 8
  %160 = icmp eq i8* %159, inttoptr (i64 -1 to i8*)
  br i1 %160, label %191, label %161

161:                                              ; preds = %155
  %162 = bitcast i8* %159 to %"class.WTF::StringImpl"*
  %163 = getelementptr inbounds %"struct.WTF::KeyValuePair.503", %"struct.WTF::KeyValuePair.503"* %147, i64 %156, i32 1, i32 0, i32 0, i32 0
  %164 = load i64*, i64** %163, align 8
  %165 = icmp eq i64* %164, null
  %166 = bitcast i64* %164 to i8*
  br i1 %165, label %175, label %167, !prof !16

167:                                              ; preds = %161
  %168 = getelementptr inbounds %"struct.WTF::KeyValuePair.503", %"struct.WTF::KeyValuePair.503"* %147, i64 %156, i32 1, i32 0, i32 0, i32 2
  %169 = load i32, i32* %168, align 4
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %172, label %171, !prof !3

171:                                              ; preds = %167
  store i32 0, i32* %168, align 4
  br label %172

172:                                              ; preds = %171, %167
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %166) #10
  store i64* null, i64** %163, align 8
  %173 = getelementptr inbounds %"struct.WTF::KeyValuePair.503", %"struct.WTF::KeyValuePair.503"* %157, i64 0, i32 0, i32 0, i32 0
  %174 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %173, align 8
  br label %175

175:                                              ; preds = %172, %161
  %176 = phi %"class.WTF::StringImpl"* [ %174, %172 ], [ %162, %161 ]
  %177 = icmp eq %"class.WTF::StringImpl"* %176, null
  br i1 %177, label %191, label %178

178:                                              ; preds = %175
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = load atomic i32, i32* %179 monotonic, align 4
  %181 = and i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 0
  %184 = load i32, i32* %183, align 4
  br i1 %182, label %185, label %187

185:                                              ; preds = %178
  %186 = add i32 %184, -1
  store i32 %186, i32* %183, align 4
  br label %187

187:                                              ; preds = %185, %178
  %188 = phi i32 [ %186, %185 ], [ %184, %178 ]
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %191

190:                                              ; preds = %187
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %176) #10
  br label %191

191:                                              ; preds = %190, %187, %175, %155
  %192 = add nuw nsw i64 %156, 1
  %193 = icmp eq i64 %192, %154
  br i1 %193, label %194, label %155

194:                                              ; preds = %191, %149
  %195 = bitcast %"struct.WTF::KeyValuePair.503"* %147 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %195) #10
  store %"struct.WTF::KeyValuePair.503"* null, %"struct.WTF::KeyValuePair.503"** %146, align 8
  br label %196

196:                                              ; preds = %145, %194
  %197 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 6, i32 0, i32 0
  %198 = load %"struct.WTF::KeyValuePair.503"*, %"struct.WTF::KeyValuePair.503"** %197, align 8
  %199 = icmp eq %"struct.WTF::KeyValuePair.503"* %198, null
  br i1 %199, label %247, label %200, !prof !16

200:                                              ; preds = %196
  %201 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 6, i32 0, i32 1
  %202 = load i32, i32* %201, align 8
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %245, label %204

204:                                              ; preds = %200
  %205 = zext i32 %202 to i64
  br label %206

206:                                              ; preds = %242, %204
  %207 = phi i64 [ 0, %204 ], [ %243, %242 ]
  %208 = getelementptr inbounds %"struct.WTF::KeyValuePair.503", %"struct.WTF::KeyValuePair.503"* %198, i64 %207
  %209 = bitcast %"struct.WTF::KeyValuePair.503"* %208 to i8**
  %210 = load i8*, i8** %209, align 8
  %211 = icmp eq i8* %210, inttoptr (i64 -1 to i8*)
  br i1 %211, label %242, label %212

212:                                              ; preds = %206
  %213 = bitcast i8* %210 to %"class.WTF::StringImpl"*
  %214 = getelementptr inbounds %"struct.WTF::KeyValuePair.503", %"struct.WTF::KeyValuePair.503"* %198, i64 %207, i32 1, i32 0, i32 0, i32 0
  %215 = load i64*, i64** %214, align 8
  %216 = icmp eq i64* %215, null
  %217 = bitcast i64* %215 to i8*
  br i1 %216, label %226, label %218, !prof !16

218:                                              ; preds = %212
  %219 = getelementptr inbounds %"struct.WTF::KeyValuePair.503", %"struct.WTF::KeyValuePair.503"* %198, i64 %207, i32 1, i32 0, i32 0, i32 2
  %220 = load i32, i32* %219, align 4
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %223, label %222, !prof !3

222:                                              ; preds = %218
  store i32 0, i32* %219, align 4
  br label %223

223:                                              ; preds = %222, %218
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %217) #10
  store i64* null, i64** %214, align 8
  %224 = getelementptr inbounds %"struct.WTF::KeyValuePair.503", %"struct.WTF::KeyValuePair.503"* %208, i64 0, i32 0, i32 0, i32 0
  %225 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %224, align 8
  br label %226

226:                                              ; preds = %223, %212
  %227 = phi %"class.WTF::StringImpl"* [ %225, %223 ], [ %213, %212 ]
  %228 = icmp eq %"class.WTF::StringImpl"* %227, null
  br i1 %228, label %242, label %229

229:                                              ; preds = %226
  %230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %231 = load atomic i32, i32* %230 monotonic, align 4
  %232 = and i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 0
  %235 = load i32, i32* %234, align 4
  br i1 %233, label %236, label %238

236:                                              ; preds = %229
  %237 = add i32 %235, -1
  store i32 %237, i32* %234, align 4
  br label %238

238:                                              ; preds = %236, %229
  %239 = phi i32 [ %237, %236 ], [ %235, %229 ]
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %241, label %242

241:                                              ; preds = %238
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %227) #10
  br label %242

242:                                              ; preds = %241, %238, %226, %206
  %243 = add nuw nsw i64 %207, 1
  %244 = icmp eq i64 %243, %205
  br i1 %244, label %245, label %206

245:                                              ; preds = %242, %200
  %246 = bitcast %"struct.WTF::KeyValuePair.503"* %198 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %246) #10
  store %"struct.WTF::KeyValuePair.503"* null, %"struct.WTF::KeyValuePair.503"** %197, align 8
  br label %247

247:                                              ; preds = %196, %245
  %248 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 5, i32 0, i32 0
  %249 = load %"struct.WTF::KeyValuePair.503"*, %"struct.WTF::KeyValuePair.503"** %248, align 8
  %250 = icmp eq %"struct.WTF::KeyValuePair.503"* %249, null
  br i1 %250, label %298, label %251, !prof !16

251:                                              ; preds = %247
  %252 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 5, i32 0, i32 1
  %253 = load i32, i32* %252, align 8
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %296, label %255

255:                                              ; preds = %251
  %256 = zext i32 %253 to i64
  br label %257

257:                                              ; preds = %293, %255
  %258 = phi i64 [ 0, %255 ], [ %294, %293 ]
  %259 = getelementptr inbounds %"struct.WTF::KeyValuePair.503", %"struct.WTF::KeyValuePair.503"* %249, i64 %258
  %260 = bitcast %"struct.WTF::KeyValuePair.503"* %259 to i8**
  %261 = load i8*, i8** %260, align 8
  %262 = icmp eq i8* %261, inttoptr (i64 -1 to i8*)
  br i1 %262, label %293, label %263

263:                                              ; preds = %257
  %264 = bitcast i8* %261 to %"class.WTF::StringImpl"*
  %265 = getelementptr inbounds %"struct.WTF::KeyValuePair.503", %"struct.WTF::KeyValuePair.503"* %249, i64 %258, i32 1, i32 0, i32 0, i32 0
  %266 = load i64*, i64** %265, align 8
  %267 = icmp eq i64* %266, null
  %268 = bitcast i64* %266 to i8*
  br i1 %267, label %277, label %269, !prof !16

269:                                              ; preds = %263
  %270 = getelementptr inbounds %"struct.WTF::KeyValuePair.503", %"struct.WTF::KeyValuePair.503"* %249, i64 %258, i32 1, i32 0, i32 0, i32 2
  %271 = load i32, i32* %270, align 4
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %274, label %273, !prof !3

273:                                              ; preds = %269
  store i32 0, i32* %270, align 4
  br label %274

274:                                              ; preds = %273, %269
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %268) #10
  store i64* null, i64** %265, align 8
  %275 = getelementptr inbounds %"struct.WTF::KeyValuePair.503", %"struct.WTF::KeyValuePair.503"* %259, i64 0, i32 0, i32 0, i32 0
  %276 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %275, align 8
  br label %277

277:                                              ; preds = %274, %263
  %278 = phi %"class.WTF::StringImpl"* [ %276, %274 ], [ %264, %263 ]
  %279 = icmp eq %"class.WTF::StringImpl"* %278, null
  br i1 %279, label %293, label %280

280:                                              ; preds = %277
  %281 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %278, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %282 = load atomic i32, i32* %281 monotonic, align 4
  %283 = and i32 %282, 2
  %284 = icmp eq i32 %283, 0
  %285 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %278, i64 0, i32 0
  %286 = load i32, i32* %285, align 4
  br i1 %284, label %287, label %289

287:                                              ; preds = %280
  %288 = add i32 %286, -1
  store i32 %288, i32* %285, align 4
  br label %289

289:                                              ; preds = %287, %280
  %290 = phi i32 [ %288, %287 ], [ %286, %280 ]
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %292, label %293

292:                                              ; preds = %289
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %278) #10
  br label %293

293:                                              ; preds = %292, %289, %277, %257
  %294 = add nuw nsw i64 %258, 1
  %295 = icmp eq i64 %294, %256
  br i1 %295, label %296, label %257

296:                                              ; preds = %293, %251
  %297 = bitcast %"struct.WTF::KeyValuePair.503"* %249 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %297) #10
  store %"struct.WTF::KeyValuePair.503"* null, %"struct.WTF::KeyValuePair.503"** %248, align 8
  br label %298

298:                                              ; preds = %247, %296
  %299 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 4, i32 0, i32 0
  %300 = load %"struct.WTF::KeyValuePair.503"*, %"struct.WTF::KeyValuePair.503"** %299, align 8
  %301 = icmp eq %"struct.WTF::KeyValuePair.503"* %300, null
  br i1 %301, label %349, label %302, !prof !16

302:                                              ; preds = %298
  %303 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 4, i32 0, i32 1
  %304 = load i32, i32* %303, align 8
  %305 = icmp eq i32 %304, 0
  br i1 %305, label %347, label %306

306:                                              ; preds = %302
  %307 = zext i32 %304 to i64
  br label %308

308:                                              ; preds = %344, %306
  %309 = phi i64 [ 0, %306 ], [ %345, %344 ]
  %310 = getelementptr inbounds %"struct.WTF::KeyValuePair.503", %"struct.WTF::KeyValuePair.503"* %300, i64 %309
  %311 = bitcast %"struct.WTF::KeyValuePair.503"* %310 to i8**
  %312 = load i8*, i8** %311, align 8
  %313 = icmp eq i8* %312, inttoptr (i64 -1 to i8*)
  br i1 %313, label %344, label %314

314:                                              ; preds = %308
  %315 = bitcast i8* %312 to %"class.WTF::StringImpl"*
  %316 = getelementptr inbounds %"struct.WTF::KeyValuePair.503", %"struct.WTF::KeyValuePair.503"* %300, i64 %309, i32 1, i32 0, i32 0, i32 0
  %317 = load i64*, i64** %316, align 8
  %318 = icmp eq i64* %317, null
  %319 = bitcast i64* %317 to i8*
  br i1 %318, label %328, label %320, !prof !16

320:                                              ; preds = %314
  %321 = getelementptr inbounds %"struct.WTF::KeyValuePair.503", %"struct.WTF::KeyValuePair.503"* %300, i64 %309, i32 1, i32 0, i32 0, i32 2
  %322 = load i32, i32* %321, align 4
  %323 = icmp eq i32 %322, 0
  br i1 %323, label %325, label %324, !prof !3

324:                                              ; preds = %320
  store i32 0, i32* %321, align 4
  br label %325

325:                                              ; preds = %324, %320
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %319) #10
  store i64* null, i64** %316, align 8
  %326 = getelementptr inbounds %"struct.WTF::KeyValuePair.503", %"struct.WTF::KeyValuePair.503"* %310, i64 0, i32 0, i32 0, i32 0
  %327 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %326, align 8
  br label %328

328:                                              ; preds = %325, %314
  %329 = phi %"class.WTF::StringImpl"* [ %327, %325 ], [ %315, %314 ]
  %330 = icmp eq %"class.WTF::StringImpl"* %329, null
  br i1 %330, label %344, label %331

331:                                              ; preds = %328
  %332 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %329, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %333 = load atomic i32, i32* %332 monotonic, align 4
  %334 = and i32 %333, 2
  %335 = icmp eq i32 %334, 0
  %336 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %329, i64 0, i32 0
  %337 = load i32, i32* %336, align 4
  br i1 %335, label %338, label %340

338:                                              ; preds = %331
  %339 = add i32 %337, -1
  store i32 %339, i32* %336, align 4
  br label %340

340:                                              ; preds = %338, %331
  %341 = phi i32 [ %339, %338 ], [ %337, %331 ]
  %342 = icmp eq i32 %341, 0
  br i1 %342, label %343, label %344

343:                                              ; preds = %340
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %329) #10
  br label %344

344:                                              ; preds = %343, %340, %328, %308
  %345 = add nuw nsw i64 %309, 1
  %346 = icmp eq i64 %345, %307
  br i1 %346, label %347, label %308

347:                                              ; preds = %344, %302
  %348 = bitcast %"struct.WTF::KeyValuePair.503"* %300 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %348) #10
  store %"struct.WTF::KeyValuePair.503"* null, %"struct.WTF::KeyValuePair.503"** %299, align 8
  br label %349

349:                                              ; preds = %298, %347
  %350 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 3, i32 0, i32 0
  %351 = load %"struct.WTF::KeyValuePair.503"*, %"struct.WTF::KeyValuePair.503"** %350, align 8
  %352 = icmp eq %"struct.WTF::KeyValuePair.503"* %351, null
  br i1 %352, label %400, label %353, !prof !16

353:                                              ; preds = %349
  %354 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 3, i32 0, i32 1
  %355 = load i32, i32* %354, align 8
  %356 = icmp eq i32 %355, 0
  br i1 %356, label %398, label %357

357:                                              ; preds = %353
  %358 = zext i32 %355 to i64
  br label %359

359:                                              ; preds = %395, %357
  %360 = phi i64 [ 0, %357 ], [ %396, %395 ]
  %361 = getelementptr inbounds %"struct.WTF::KeyValuePair.503", %"struct.WTF::KeyValuePair.503"* %351, i64 %360
  %362 = bitcast %"struct.WTF::KeyValuePair.503"* %361 to i8**
  %363 = load i8*, i8** %362, align 8
  %364 = icmp eq i8* %363, inttoptr (i64 -1 to i8*)
  br i1 %364, label %395, label %365

365:                                              ; preds = %359
  %366 = bitcast i8* %363 to %"class.WTF::StringImpl"*
  %367 = getelementptr inbounds %"struct.WTF::KeyValuePair.503", %"struct.WTF::KeyValuePair.503"* %351, i64 %360, i32 1, i32 0, i32 0, i32 0
  %368 = load i64*, i64** %367, align 8
  %369 = icmp eq i64* %368, null
  %370 = bitcast i64* %368 to i8*
  br i1 %369, label %379, label %371, !prof !16

371:                                              ; preds = %365
  %372 = getelementptr inbounds %"struct.WTF::KeyValuePair.503", %"struct.WTF::KeyValuePair.503"* %351, i64 %360, i32 1, i32 0, i32 0, i32 2
  %373 = load i32, i32* %372, align 4
  %374 = icmp eq i32 %373, 0
  br i1 %374, label %376, label %375, !prof !3

375:                                              ; preds = %371
  store i32 0, i32* %372, align 4
  br label %376

376:                                              ; preds = %375, %371
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %370) #10
  store i64* null, i64** %367, align 8
  %377 = getelementptr inbounds %"struct.WTF::KeyValuePair.503", %"struct.WTF::KeyValuePair.503"* %361, i64 0, i32 0, i32 0, i32 0
  %378 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %377, align 8
  br label %379

379:                                              ; preds = %376, %365
  %380 = phi %"class.WTF::StringImpl"* [ %378, %376 ], [ %366, %365 ]
  %381 = icmp eq %"class.WTF::StringImpl"* %380, null
  br i1 %381, label %395, label %382

382:                                              ; preds = %379
  %383 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %380, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %384 = load atomic i32, i32* %383 monotonic, align 4
  %385 = and i32 %384, 2
  %386 = icmp eq i32 %385, 0
  %387 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %380, i64 0, i32 0
  %388 = load i32, i32* %387, align 4
  br i1 %386, label %389, label %391

389:                                              ; preds = %382
  %390 = add i32 %388, -1
  store i32 %390, i32* %387, align 4
  br label %391

391:                                              ; preds = %389, %382
  %392 = phi i32 [ %390, %389 ], [ %388, %382 ]
  %393 = icmp eq i32 %392, 0
  br i1 %393, label %394, label %395

394:                                              ; preds = %391
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %380) #10
  br label %395

395:                                              ; preds = %394, %391, %379, %359
  %396 = add nuw nsw i64 %360, 1
  %397 = icmp eq i64 %396, %358
  br i1 %397, label %398, label %359

398:                                              ; preds = %395, %353
  %399 = bitcast %"struct.WTF::KeyValuePair.503"* %351 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %399) #10
  store %"struct.WTF::KeyValuePair.503"* null, %"struct.WTF::KeyValuePair.503"** %350, align 8
  br label %400

400:                                              ; preds = %349, %398
  %401 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 2, i32 0, i32 0
  %402 = load %"struct.WTF::KeyValuePair.503"*, %"struct.WTF::KeyValuePair.503"** %401, align 8
  %403 = icmp eq %"struct.WTF::KeyValuePair.503"* %402, null
  br i1 %403, label %451, label %404, !prof !16

404:                                              ; preds = %400
  %405 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 2, i32 0, i32 1
  %406 = load i32, i32* %405, align 8
  %407 = icmp eq i32 %406, 0
  br i1 %407, label %449, label %408

408:                                              ; preds = %404
  %409 = zext i32 %406 to i64
  br label %410

410:                                              ; preds = %446, %408
  %411 = phi i64 [ 0, %408 ], [ %447, %446 ]
  %412 = getelementptr inbounds %"struct.WTF::KeyValuePair.503", %"struct.WTF::KeyValuePair.503"* %402, i64 %411
  %413 = bitcast %"struct.WTF::KeyValuePair.503"* %412 to i8**
  %414 = load i8*, i8** %413, align 8
  %415 = icmp eq i8* %414, inttoptr (i64 -1 to i8*)
  br i1 %415, label %446, label %416

416:                                              ; preds = %410
  %417 = bitcast i8* %414 to %"class.WTF::StringImpl"*
  %418 = getelementptr inbounds %"struct.WTF::KeyValuePair.503", %"struct.WTF::KeyValuePair.503"* %402, i64 %411, i32 1, i32 0, i32 0, i32 0
  %419 = load i64*, i64** %418, align 8
  %420 = icmp eq i64* %419, null
  %421 = bitcast i64* %419 to i8*
  br i1 %420, label %430, label %422, !prof !16

422:                                              ; preds = %416
  %423 = getelementptr inbounds %"struct.WTF::KeyValuePair.503", %"struct.WTF::KeyValuePair.503"* %402, i64 %411, i32 1, i32 0, i32 0, i32 2
  %424 = load i32, i32* %423, align 4
  %425 = icmp eq i32 %424, 0
  br i1 %425, label %427, label %426, !prof !3

426:                                              ; preds = %422
  store i32 0, i32* %423, align 4
  br label %427

427:                                              ; preds = %426, %422
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %421) #10
  store i64* null, i64** %418, align 8
  %428 = getelementptr inbounds %"struct.WTF::KeyValuePair.503", %"struct.WTF::KeyValuePair.503"* %412, i64 0, i32 0, i32 0, i32 0
  %429 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %428, align 8
  br label %430

430:                                              ; preds = %427, %416
  %431 = phi %"class.WTF::StringImpl"* [ %429, %427 ], [ %417, %416 ]
  %432 = icmp eq %"class.WTF::StringImpl"* %431, null
  br i1 %432, label %446, label %433

433:                                              ; preds = %430
  %434 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %431, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %435 = load atomic i32, i32* %434 monotonic, align 4
  %436 = and i32 %435, 2
  %437 = icmp eq i32 %436, 0
  %438 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %431, i64 0, i32 0
  %439 = load i32, i32* %438, align 4
  br i1 %437, label %440, label %442

440:                                              ; preds = %433
  %441 = add i32 %439, -1
  store i32 %441, i32* %438, align 4
  br label %442

442:                                              ; preds = %440, %433
  %443 = phi i32 [ %441, %440 ], [ %439, %433 ]
  %444 = icmp eq i32 %443, 0
  br i1 %444, label %445, label %446

445:                                              ; preds = %442
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %431) #10
  br label %446

446:                                              ; preds = %445, %442, %430, %410
  %447 = add nuw nsw i64 %411, 1
  %448 = icmp eq i64 %447, %409
  br i1 %448, label %449, label %410

449:                                              ; preds = %446, %404
  %450 = bitcast %"struct.WTF::KeyValuePair.503"* %402 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %450) #10
  store %"struct.WTF::KeyValuePair.503"* null, %"struct.WTF::KeyValuePair.503"** %401, align 8
  br label %451

451:                                              ; preds = %400, %449
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.508"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  br label %8

6:                                                ; preds = %52, %2
  %7 = bitcast %"struct.WTF::KeyValuePair.508"* %0 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #10
  ret void

8:                                                ; preds = %52, %4
  %9 = phi i64 [ 0, %4 ], [ %53, %52 ]
  %10 = getelementptr inbounds %"struct.WTF::KeyValuePair.508", %"struct.WTF::KeyValuePair.508"* %0, i64 %9, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, -2
  br i1 %12, label %52, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.508", %"struct.WTF::KeyValuePair.508"* %0, i64 %9, i32 1
  %15 = getelementptr inbounds %"class.WTF::Vector.591", %"class.WTF::Vector.591"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %17 = icmp eq %"class.WTF::String"* %16, null
  br i1 %17, label %52, label %18, !prof !16

18:                                               ; preds = %13
  %19 = bitcast %"class.WTF::String"* %16 to i8*
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair.508", %"struct.WTF::KeyValuePair.508"* %0, i64 %9, i32 1, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %50, label %23, !prof !3

23:                                               ; preds = %18
  %24 = zext i32 %21 to i64
  %25 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 %24
  br label %26

26:                                               ; preds = %44, %23
  %27 = phi %"class.WTF::String"* [ %45, %44 ], [ %16, %23 ]
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #10
  br label %44

44:                                               ; preds = %43, %40, %26
  %45 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 1
  %46 = icmp eq %"class.WTF::String"* %45, %25
  br i1 %46, label %47, label %26

47:                                               ; preds = %44
  store i32 0, i32* %20, align 4
  %48 = bitcast %"class.WTF::Vector.591"* %14 to i8**
  %49 = load i8*, i8** %48, align 8
  br label %50

50:                                               ; preds = %47, %18
  %51 = phi i8* [ %49, %47 ], [ %19, %18 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %51) #10
  store %"class.WTF::String"* null, %"class.WTF::String"** %15, align 8
  br label %52

52:                                               ; preds = %50, %13, %8
  %53 = add nuw nsw i64 %9, 1
  %54 = icmp eq i64 %53, %5
  br i1 %54, label %6, label %8
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan22PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %0, i64 0, i32 4, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %0, i64 0, i32 4
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #10
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  %9 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %8, align 8
  %10 = icmp eq %"class.blink::PersistentNode"* %9, null
  br i1 %10, label %30, label %11

11:                                               ; preds = %7
  %12 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %13 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %12, i64 0, i32 1
  %14 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %13) #10
  %15 = icmp eq i8* %14, null
  br i1 %15, label %16, label %18, !prof !3

16:                                               ; preds = %11
  %17 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %13, i8* %17) #10
  br label %18

18:                                               ; preds = %16, %11
  %19 = phi i8* [ %17, %16 ], [ %14, %11 ]
  %20 = bitcast i8* %19 to %"class.blink::ThreadState"**
  %21 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %21, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %22, align 8
  %24 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %8, align 8
  %25 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %23, i64 0, i32 0, i32 0
  %26 = bitcast %"class.blink::PersistentRegion"* %23 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.blink::PersistentNode"* %24 to i64*
  store i64 %27, i64* %28, align 8
  %29 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %24, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %29, align 8
  store %"class.blink::PersistentNode"* %24, %"class.blink::PersistentNode"** %25, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %8, align 8
  br label %30

30:                                               ; preds = %7, %18
  %31 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %0, i64 0, i32 2, i32 0, i32 0
  %32 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %31, align 8
  %33 = icmp eq %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %32, null
  br i1 %33, label %41, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %32, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %35) #10
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %32, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %34
  tail call void @_ZN5blink17ComputedStyleBase48StyleRareNonInheritedUsageLessThan100PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* nonnull %32) #10
  %40 = bitcast %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %32 to i8*
  tail call void @free(i8* %40) #10
  br label %41

41:                                               ; preds = %30, %34, %39
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase48StyleRareNonInheritedUsageLessThan100PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 30, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 30
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #10
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 29, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 29
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #10
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 28, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 28
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #10
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 27, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 27
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #10
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 26, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 26
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #10
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 25, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 25
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #10
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 24, i32 1, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 24, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #10
  br label %43

43:                                               ; preds = %41, %37
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 24, i32 0, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 24, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #10
  br label %49

49:                                               ; preds = %43, %47
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 23, i32 1, i32 2
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 8
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 23, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %54) #10
  br label %55

55:                                               ; preds = %53, %49
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 23, i32 0, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 8
  br i1 %58, label %59, label %61

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 23, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %60) #10
  br label %61

61:                                               ; preds = %55, %59
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 22, i32 1, i32 2
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 8
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 22, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %66) #10
  br label %67

67:                                               ; preds = %65, %61
  %68 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 22, i32 0, i32 2
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 8
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 22, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %72) #10
  br label %73

73:                                               ; preds = %67, %71
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 21, i32 1, i32 2
  %75 = load i8, i8* %74, align 1
  %76 = icmp eq i8 %75, 8
  br i1 %76, label %77, label %79

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 21, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %78) #10
  br label %79

79:                                               ; preds = %77, %73
  %80 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 21, i32 0, i32 2
  %81 = load i8, i8* %80, align 1
  %82 = icmp eq i8 %81, 8
  br i1 %82, label %83, label %85

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 21, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %84) #10
  br label %85

85:                                               ; preds = %79, %83
  %86 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 0
  %87 = load i8, i8* %86, align 4, !range !2
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %96, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2
  %91 = load i8, i8* %90, align 1
  %92 = icmp eq i8 %91, 8
  br i1 %92, label %93, label %95

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %94) #10
  br label %95

95:                                               ; preds = %93, %89
  store i8 0, i8* %86, align 4
  br label %96

96:                                               ; preds = %85, %95
  %97 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0
  %98 = load i8, i8* %97, align 4, !range !2
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %107, label %100

100:                                              ; preds = %96
  %101 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2
  %102 = load i8, i8* %101, align 1
  %103 = icmp eq i8 %102, 8
  br i1 %103, label %104, label %106

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %105) #10
  br label %106

106:                                              ; preds = %104, %100
  store i8 0, i8* %97, align 4
  br label %107

107:                                              ; preds = %96, %106
  %108 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 17, i32 0, i32 1, i32 0
  %109 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %108, align 8
  %110 = icmp eq %"class.blink::PersistentNode"* %109, null
  br i1 %110, label %130, label %111

111:                                              ; preds = %107
  %112 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %113 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %112, i64 0, i32 1
  %114 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %113) #10
  %115 = icmp eq i8* %114, null
  br i1 %115, label %116, label %118, !prof !3

116:                                              ; preds = %111
  %117 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %113, i8* %117) #10
  br label %118

118:                                              ; preds = %116, %111
  %119 = phi i8* [ %117, %116 ], [ %114, %111 ]
  %120 = bitcast i8* %119 to %"class.blink::ThreadState"**
  %121 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %120, align 8
  %122 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %121, i64 0, i32 3, i32 0, i32 0, i32 0
  %123 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %122, align 8
  %124 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %108, align 8
  %125 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %123, i64 0, i32 0, i32 0
  %126 = bitcast %"class.blink::PersistentRegion"* %123 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"class.blink::PersistentNode"* %124 to i64*
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %124, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %129, align 8
  store %"class.blink::PersistentNode"* %124, %"class.blink::PersistentNode"** %125, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %108, align 8
  br label %130

130:                                              ; preds = %107, %118
  %131 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 16, i32 0, i32 1, i32 0
  %132 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %131, align 8
  %133 = icmp eq %"class.blink::PersistentNode"* %132, null
  br i1 %133, label %153, label %134

134:                                              ; preds = %130
  %135 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %136 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %135, i64 0, i32 1
  %137 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %136) #10
  %138 = icmp eq i8* %137, null
  br i1 %138, label %139, label %141, !prof !3

139:                                              ; preds = %134
  %140 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %136, i8* %140) #10
  br label %141

141:                                              ; preds = %139, %134
  %142 = phi i8* [ %140, %139 ], [ %137, %134 ]
  %143 = bitcast i8* %142 to %"class.blink::ThreadState"**
  %144 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %143, align 8
  %145 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %144, i64 0, i32 3, i32 0, i32 0, i32 0
  %146 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %145, align 8
  %147 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %131, align 8
  %148 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %146, i64 0, i32 0, i32 0
  %149 = bitcast %"class.blink::PersistentRegion"* %146 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = bitcast %"class.blink::PersistentNode"* %147 to i64*
  store i64 %150, i64* %151, align 8
  %152 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %147, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %152, align 8
  store %"class.blink::PersistentNode"* %147, %"class.blink::PersistentNode"** %148, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %131, align 8
  br label %153

153:                                              ; preds = %130, %141
  %154 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 15, i32 0
  %155 = load %"class.blink::StyleReflection"*, %"class.blink::StyleReflection"** %154, align 8
  %156 = icmp eq %"class.blink::StyleReflection"* %155, null
  br i1 %156, label %181, label %157

157:                                              ; preds = %153
  %158 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %158) #10
  %159 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 0, i32 0, i32 0, i32 0
  %160 = load i32, i32* %159, align 4
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %181

162:                                              ; preds = %157
  %163 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 3, i32 0, i32 0, i32 0
  %164 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %163, align 8
  %165 = icmp eq %"class.blink::NinePieceImageData"* %164, null
  br i1 %165, label %173, label %166

166:                                              ; preds = %162
  %167 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %164, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %167) #10
  %168 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %164, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load i32, i32* %168, align 4
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %173

171:                                              ; preds = %166
  tail call void @_ZN5blink18NinePieceImageDataD2Ev(%"class.blink::NinePieceImageData"* nonnull %164) #10
  %172 = bitcast %"class.blink::NinePieceImageData"* %164 to i8*
  tail call void @free(i8* %172) #10
  br label %173

173:                                              ; preds = %171, %166, %162
  %174 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 2, i32 2
  %175 = load i8, i8* %174, align 1
  %176 = icmp eq i8 %175, 8
  br i1 %176, label %177, label %179

177:                                              ; preds = %173
  %178 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %178) #10
  br label %179

179:                                              ; preds = %173, %177
  %180 = bitcast %"class.blink::StyleReflection"* %155 to i8*
  tail call void @free(i8* %180) #10
  br label %181

181:                                              ; preds = %153, %157, %179
  %182 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 14, i32 0
  %183 = load %"class.blink::TranslateTransformOperation"*, %"class.blink::TranslateTransformOperation"** %182, align 8
  %184 = icmp eq %"class.blink::TranslateTransformOperation"* %183, null
  br i1 %184, label %198, label %185

185:                                              ; preds = %181
  %186 = getelementptr inbounds %"class.blink::TranslateTransformOperation", %"class.blink::TranslateTransformOperation"* %183, i64 0, i32 0, i32 1, i32 0
  %187 = getelementptr inbounds %"class.base::RefCounted.444", %"class.base::RefCounted.444"* %186, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %187) #10
  %188 = getelementptr inbounds %"class.base::RefCounted.444", %"class.base::RefCounted.444"* %186, i64 0, i32 0, i32 0
  %189 = load i32, i32* %188, align 4
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %198

191:                                              ; preds = %185
  %192 = getelementptr inbounds %"class.base::RefCounted.444", %"class.base::RefCounted.444"* %186, i64 -2
  %193 = bitcast %"class.base::RefCounted.444"* %192 to %"class.blink::TransformOperation"*
  %194 = bitcast %"class.base::RefCounted.444"* %192 to void (%"class.blink::TransformOperation"*)***
  %195 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %194, align 8
  %196 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %195, i64 1
  %197 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %196, align 8
  tail call void %197(%"class.blink::TransformOperation"* nonnull %193) #10
  br label %198

198:                                              ; preds = %181, %185, %191
  %199 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 13, i32 0
  %200 = load %"class.blink::ScaleTransformOperation"*, %"class.blink::ScaleTransformOperation"** %199, align 8
  %201 = icmp eq %"class.blink::ScaleTransformOperation"* %200, null
  br i1 %201, label %215, label %202

202:                                              ; preds = %198
  %203 = getelementptr inbounds %"class.blink::ScaleTransformOperation", %"class.blink::ScaleTransformOperation"* %200, i64 0, i32 0, i32 1, i32 0
  %204 = getelementptr inbounds %"class.base::RefCounted.444", %"class.base::RefCounted.444"* %203, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %204) #10
  %205 = getelementptr inbounds %"class.base::RefCounted.444", %"class.base::RefCounted.444"* %203, i64 0, i32 0, i32 0
  %206 = load i32, i32* %205, align 4
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %208, label %215

208:                                              ; preds = %202
  %209 = getelementptr inbounds %"class.base::RefCounted.444", %"class.base::RefCounted.444"* %203, i64 -2
  %210 = bitcast %"class.base::RefCounted.444"* %209 to %"class.blink::TransformOperation"*
  %211 = bitcast %"class.base::RefCounted.444"* %209 to void (%"class.blink::TransformOperation"*)***
  %212 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %211, align 8
  %213 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %212, i64 1
  %214 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %213, align 8
  tail call void %214(%"class.blink::TransformOperation"* nonnull %210) #10
  br label %215

215:                                              ; preds = %198, %202, %208
  %216 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 12, i32 0
  %217 = load %"class.blink::RotateTransformOperation"*, %"class.blink::RotateTransformOperation"** %216, align 8
  %218 = icmp eq %"class.blink::RotateTransformOperation"* %217, null
  br i1 %218, label %232, label %219

219:                                              ; preds = %215
  %220 = getelementptr inbounds %"class.blink::RotateTransformOperation", %"class.blink::RotateTransformOperation"* %217, i64 0, i32 0, i32 1, i32 0
  %221 = getelementptr inbounds %"class.base::RefCounted.444", %"class.base::RefCounted.444"* %220, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %221) #10
  %222 = getelementptr inbounds %"class.base::RefCounted.444", %"class.base::RefCounted.444"* %220, i64 0, i32 0, i32 0
  %223 = load i32, i32* %222, align 4
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %232

225:                                              ; preds = %219
  %226 = getelementptr inbounds %"class.base::RefCounted.444", %"class.base::RefCounted.444"* %220, i64 -2
  %227 = bitcast %"class.base::RefCounted.444"* %226 to %"class.blink::TransformOperation"*
  %228 = bitcast %"class.base::RefCounted.444"* %226 to void (%"class.blink::TransformOperation"*)***
  %229 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %228, align 8
  %230 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %229, i64 1
  %231 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %230, align 8
  tail call void %231(%"class.blink::TransformOperation"* nonnull %227) #10
  br label %232

232:                                              ; preds = %215, %219, %225
  %233 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 11, i32 0
  %234 = load %"class.blink::BasicShape"*, %"class.blink::BasicShape"** %233, align 8
  %235 = icmp eq %"class.blink::BasicShape"* %234, null
  br i1 %235, label %249, label %236

236:                                              ; preds = %232
  %237 = getelementptr inbounds %"class.blink::BasicShape", %"class.blink::BasicShape"* %234, i64 0, i32 1, i32 0
  %238 = getelementptr inbounds %"class.base::RefCounted.441", %"class.base::RefCounted.441"* %237, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %238) #10
  %239 = getelementptr inbounds %"class.base::RefCounted.441", %"class.base::RefCounted.441"* %237, i64 0, i32 0, i32 0
  %240 = load i32, i32* %239, align 4
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %242, label %249

242:                                              ; preds = %236
  %243 = getelementptr inbounds %"class.base::RefCounted.441", %"class.base::RefCounted.441"* %237, i64 -2
  %244 = bitcast %"class.base::RefCounted.441"* %243 to %"class.blink::BasicShape"*
  %245 = bitcast %"class.base::RefCounted.441"* %243 to void (%"class.blink::BasicShape"*)***
  %246 = load void (%"class.blink::BasicShape"*)**, void (%"class.blink::BasicShape"*)*** %245, align 8
  %247 = getelementptr inbounds void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %246, i64 1
  %248 = load void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %247, align 8
  tail call void %248(%"class.blink::BasicShape"* nonnull %244) #10
  br label %249

249:                                              ; preds = %232, %236, %242
  %250 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 10, i32 0
  %251 = load %"class.blink::ClipPathOperation"*, %"class.blink::ClipPathOperation"** %250, align 8
  %252 = icmp eq %"class.blink::ClipPathOperation"* %251, null
  br i1 %252, label %266, label %253

253:                                              ; preds = %249
  %254 = getelementptr inbounds %"class.blink::ClipPathOperation", %"class.blink::ClipPathOperation"* %251, i64 0, i32 1, i32 0
  %255 = getelementptr inbounds %"class.base::RefCounted.438", %"class.base::RefCounted.438"* %254, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %255) #10
  %256 = getelementptr inbounds %"class.base::RefCounted.438", %"class.base::RefCounted.438"* %254, i64 0, i32 0, i32 0
  %257 = load i32, i32* %256, align 4
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %259, label %266

259:                                              ; preds = %253
  %260 = getelementptr inbounds %"class.base::RefCounted.438", %"class.base::RefCounted.438"* %254, i64 -2
  %261 = bitcast %"class.base::RefCounted.438"* %260 to %"class.blink::ClipPathOperation"*
  %262 = bitcast %"class.base::RefCounted.438"* %260 to void (%"class.blink::ClipPathOperation"*)***
  %263 = load void (%"class.blink::ClipPathOperation"*)**, void (%"class.blink::ClipPathOperation"*)*** %262, align 8
  %264 = getelementptr inbounds void (%"class.blink::ClipPathOperation"*)*, void (%"class.blink::ClipPathOperation"*)** %263, i64 1
  %265 = load void (%"class.blink::ClipPathOperation"*)*, void (%"class.blink::ClipPathOperation"*)** %264, align 8
  tail call void %265(%"class.blink::ClipPathOperation"* nonnull %261) #10
  br label %266

266:                                              ; preds = %249, %253, %259
  %267 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %268 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %267, align 8
  %269 = icmp eq %"class.WTF::StringImpl"* %268, null
  br i1 %269, label %283, label %270

270:                                              ; preds = %266
  %271 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %268, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %272 = load atomic i32, i32* %271 monotonic, align 4
  %273 = and i32 %272, 2
  %274 = icmp eq i32 %273, 0
  %275 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %268, i64 0, i32 0
  %276 = load i32, i32* %275, align 4
  br i1 %274, label %277, label %279

277:                                              ; preds = %270
  %278 = add i32 %276, -1
  store i32 %278, i32* %275, align 4
  br label %279

279:                                              ; preds = %277, %270
  %280 = phi i32 [ %278, %277 ], [ %276, %270 ]
  %281 = icmp eq i32 %280, 0
  br i1 %281, label %282, label %283

282:                                              ; preds = %279
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %268) #10
  br label %283

283:                                              ; preds = %266, %279, %282
  %284 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 8, i32 2, i32 0, i32 0, i32 0
  %285 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %284, align 8
  %286 = icmp eq %"class.WTF::StringImpl"* %285, null
  br i1 %286, label %300, label %287

287:                                              ; preds = %283
  %288 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %285, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %289 = load atomic i32, i32* %288 monotonic, align 4
  %290 = and i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %285, i64 0, i32 0
  %293 = load i32, i32* %292, align 4
  br i1 %291, label %294, label %296

294:                                              ; preds = %287
  %295 = add i32 %293, -1
  store i32 %295, i32* %292, align 4
  br label %296

296:                                              ; preds = %294, %287
  %297 = phi i32 [ %295, %294 ], [ %293, %287 ]
  %298 = icmp eq i32 %297, 0
  br i1 %298, label %299, label %300

299:                                              ; preds = %296
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %285) #10
  br label %300

300:                                              ; preds = %283, %296, %299
  %301 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 7, i32 2, i32 0, i32 0, i32 0
  %302 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %301, align 8
  %303 = icmp eq %"class.WTF::StringImpl"* %302, null
  br i1 %303, label %317, label %304

304:                                              ; preds = %300
  %305 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %302, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %306 = load atomic i32, i32* %305 monotonic, align 4
  %307 = and i32 %306, 2
  %308 = icmp eq i32 %307, 0
  %309 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %302, i64 0, i32 0
  %310 = load i32, i32* %309, align 4
  br i1 %308, label %311, label %313

311:                                              ; preds = %304
  %312 = add i32 %310, -1
  store i32 %312, i32* %309, align 4
  br label %313

313:                                              ; preds = %311, %304
  %314 = phi i32 [ %312, %311 ], [ %310, %304 ]
  %315 = icmp eq i32 %314, 0
  br i1 %315, label %316, label %317

316:                                              ; preds = %313
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %302) #10
  br label %317

317:                                              ; preds = %300, %313, %316
  %318 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 6, i32 2, i32 0, i32 0, i32 0
  %319 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %318, align 8
  %320 = icmp eq %"class.WTF::StringImpl"* %319, null
  br i1 %320, label %334, label %321

321:                                              ; preds = %317
  %322 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %319, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %323 = load atomic i32, i32* %322 monotonic, align 4
  %324 = and i32 %323, 2
  %325 = icmp eq i32 %324, 0
  %326 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %319, i64 0, i32 0
  %327 = load i32, i32* %326, align 4
  br i1 %325, label %328, label %330

328:                                              ; preds = %321
  %329 = add i32 %327, -1
  store i32 %329, i32* %326, align 4
  br label %330

330:                                              ; preds = %328, %321
  %331 = phi i32 [ %329, %328 ], [ %327, %321 ]
  %332 = icmp eq i32 %331, 0
  br i1 %332, label %333, label %334

333:                                              ; preds = %330
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %319) #10
  br label %334

334:                                              ; preds = %317, %330, %333
  %335 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i32 0
  %336 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %335, align 8
  %337 = icmp eq %"class.WTF::StringImpl"* %336, null
  br i1 %337, label %351, label %338

338:                                              ; preds = %334
  %339 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %336, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %340 = load atomic i32, i32* %339 monotonic, align 4
  %341 = and i32 %340, 2
  %342 = icmp eq i32 %341, 0
  %343 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %336, i64 0, i32 0
  %344 = load i32, i32* %343, align 4
  br i1 %342, label %345, label %347

345:                                              ; preds = %338
  %346 = add i32 %344, -1
  store i32 %346, i32* %343, align 4
  br label %347

347:                                              ; preds = %345, %338
  %348 = phi i32 [ %346, %345 ], [ %344, %338 ]
  %349 = icmp eq i32 %348, 0
  br i1 %349, label %350, label %351

350:                                              ; preds = %347
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %336) #10
  br label %351

351:                                              ; preds = %334, %347, %350
  %352 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 4
  %353 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 4, i32 1
  %354 = getelementptr inbounds %"class.std::__1::unique_ptr.425", %"class.std::__1::unique_ptr.425"* %353, i64 0, i32 0, i32 0, i32 0
  %355 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %354, align 8
  store %"class.blink::NGGridTrackList"* null, %"class.blink::NGGridTrackList"** %354, align 8
  %356 = icmp eq %"class.blink::NGGridTrackList"* %355, null
  br i1 %356, label %359, label %357

357:                                              ; preds = %351
  %358 = bitcast %"class.std::__1::unique_ptr.425"* %353 to %"struct.std::__1::default_delete.434"*
  tail call void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.434"* %358, %"class.blink::NGGridTrackList"* nonnull %355) #10
  br label %359

359:                                              ; preds = %357, %351
  %360 = getelementptr inbounds %"class.blink::GridTrackList", %"class.blink::GridTrackList"* %352, i64 0, i32 0, i32 0, i32 0, i32 0
  %361 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %360, align 8
  %362 = icmp eq %"class.blink::GridTrackSize"* %361, null
  br i1 %362, label %398, label %363, !prof !16

363:                                              ; preds = %359
  %364 = bitcast %"class.blink::GridTrackSize"* %361 to i8*
  %365 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %366 = load i32, i32* %365, align 4
  %367 = icmp eq i32 %366, 0
  br i1 %367, label %396, label %368, !prof !3

368:                                              ; preds = %363
  %369 = zext i32 %366 to i64
  %370 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %361, i64 %369
  br label %371

371:                                              ; preds = %390, %368
  %372 = phi %"class.blink::GridTrackSize"* [ %391, %390 ], [ %361, %368 ]
  %373 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 4, i32 0, i32 2
  %374 = load i8, i8* %373, align 1
  %375 = icmp eq i8 %374, 8
  br i1 %375, label %376, label %378

376:                                              ; preds = %371
  %377 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %377) #10
  br label %378

378:                                              ; preds = %376, %371
  %379 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 3, i32 0, i32 2
  %380 = load i8, i8* %379, align 1
  %381 = icmp eq i8 %380, 8
  br i1 %381, label %382, label %384

382:                                              ; preds = %378
  %383 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %383) #10
  br label %384

384:                                              ; preds = %382, %378
  %385 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 2, i32 0, i32 2
  %386 = load i8, i8* %385, align 1
  %387 = icmp eq i8 %386, 8
  br i1 %387, label %388, label %390

388:                                              ; preds = %384
  %389 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %389) #10
  br label %390

390:                                              ; preds = %388, %384
  %391 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 1
  %392 = icmp eq %"class.blink::GridTrackSize"* %391, %370
  br i1 %392, label %393, label %371

393:                                              ; preds = %390
  store i32 0, i32* %365, align 4
  %394 = bitcast %"class.blink::GridTrackList"* %352 to i8**
  %395 = load i8*, i8** %394, align 8
  br label %396

396:                                              ; preds = %393, %363
  %397 = phi i8* [ %395, %393 ], [ %364, %363 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %397) #10
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %360, align 8
  br label %398

398:                                              ; preds = %359, %396
  %399 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 3
  %400 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 3, i32 1
  %401 = getelementptr inbounds %"class.std::__1::unique_ptr.425", %"class.std::__1::unique_ptr.425"* %400, i64 0, i32 0, i32 0, i32 0
  %402 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %401, align 8
  store %"class.blink::NGGridTrackList"* null, %"class.blink::NGGridTrackList"** %401, align 8
  %403 = icmp eq %"class.blink::NGGridTrackList"* %402, null
  br i1 %403, label %406, label %404

404:                                              ; preds = %398
  %405 = bitcast %"class.std::__1::unique_ptr.425"* %400 to %"struct.std::__1::default_delete.434"*
  tail call void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.434"* %405, %"class.blink::NGGridTrackList"* nonnull %402) #10
  br label %406

406:                                              ; preds = %404, %398
  %407 = getelementptr inbounds %"class.blink::GridTrackList", %"class.blink::GridTrackList"* %399, i64 0, i32 0, i32 0, i32 0, i32 0
  %408 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %407, align 8
  %409 = icmp eq %"class.blink::GridTrackSize"* %408, null
  br i1 %409, label %445, label %410, !prof !16

410:                                              ; preds = %406
  %411 = bitcast %"class.blink::GridTrackSize"* %408 to i8*
  %412 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %413 = load i32, i32* %412, align 4
  %414 = icmp eq i32 %413, 0
  br i1 %414, label %443, label %415, !prof !3

415:                                              ; preds = %410
  %416 = zext i32 %413 to i64
  %417 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %408, i64 %416
  br label %418

418:                                              ; preds = %437, %415
  %419 = phi %"class.blink::GridTrackSize"* [ %438, %437 ], [ %408, %415 ]
  %420 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 4, i32 0, i32 2
  %421 = load i8, i8* %420, align 1
  %422 = icmp eq i8 %421, 8
  br i1 %422, label %423, label %425

423:                                              ; preds = %418
  %424 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %424) #10
  br label %425

425:                                              ; preds = %423, %418
  %426 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 3, i32 0, i32 2
  %427 = load i8, i8* %426, align 1
  %428 = icmp eq i8 %427, 8
  br i1 %428, label %429, label %431

429:                                              ; preds = %425
  %430 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %430) #10
  br label %431

431:                                              ; preds = %429, %425
  %432 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 2, i32 0, i32 2
  %433 = load i8, i8* %432, align 1
  %434 = icmp eq i8 %433, 8
  br i1 %434, label %435, label %437

435:                                              ; preds = %431
  %436 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %436) #10
  br label %437

437:                                              ; preds = %435, %431
  %438 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 1
  %439 = icmp eq %"class.blink::GridTrackSize"* %438, %417
  br i1 %439, label %440, label %418

440:                                              ; preds = %437
  store i32 0, i32* %412, align 4
  %441 = bitcast %"class.blink::GridTrackList"* %399 to i8**
  %442 = load i8*, i8** %441, align 8
  br label %443

443:                                              ; preds = %440, %410
  %444 = phi i8* [ %442, %440 ], [ %411, %410 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %444) #10
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %407, align 8
  br label %445

445:                                              ; preds = %406, %443
  %446 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 2
  %447 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 2, i32 1
  %448 = getelementptr inbounds %"class.std::__1::unique_ptr.425", %"class.std::__1::unique_ptr.425"* %447, i64 0, i32 0, i32 0, i32 0
  %449 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %448, align 8
  store %"class.blink::NGGridTrackList"* null, %"class.blink::NGGridTrackList"** %448, align 8
  %450 = icmp eq %"class.blink::NGGridTrackList"* %449, null
  br i1 %450, label %453, label %451

451:                                              ; preds = %445
  %452 = bitcast %"class.std::__1::unique_ptr.425"* %447 to %"struct.std::__1::default_delete.434"*
  tail call void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.434"* %452, %"class.blink::NGGridTrackList"* nonnull %449) #10
  br label %453

453:                                              ; preds = %451, %445
  %454 = getelementptr inbounds %"class.blink::GridTrackList", %"class.blink::GridTrackList"* %446, i64 0, i32 0, i32 0, i32 0, i32 0
  %455 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %454, align 8
  %456 = icmp eq %"class.blink::GridTrackSize"* %455, null
  br i1 %456, label %492, label %457, !prof !16

457:                                              ; preds = %453
  %458 = bitcast %"class.blink::GridTrackSize"* %455 to i8*
  %459 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %460 = load i32, i32* %459, align 4
  %461 = icmp eq i32 %460, 0
  br i1 %461, label %490, label %462, !prof !3

462:                                              ; preds = %457
  %463 = zext i32 %460 to i64
  %464 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %455, i64 %463
  br label %465

465:                                              ; preds = %484, %462
  %466 = phi %"class.blink::GridTrackSize"* [ %485, %484 ], [ %455, %462 ]
  %467 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 4, i32 0, i32 2
  %468 = load i8, i8* %467, align 1
  %469 = icmp eq i8 %468, 8
  br i1 %469, label %470, label %472

470:                                              ; preds = %465
  %471 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %471) #10
  br label %472

472:                                              ; preds = %470, %465
  %473 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 3, i32 0, i32 2
  %474 = load i8, i8* %473, align 1
  %475 = icmp eq i8 %474, 8
  br i1 %475, label %476, label %478

476:                                              ; preds = %472
  %477 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %477) #10
  br label %478

478:                                              ; preds = %476, %472
  %479 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 2, i32 0, i32 2
  %480 = load i8, i8* %479, align 1
  %481 = icmp eq i8 %480, 8
  br i1 %481, label %482, label %484

482:                                              ; preds = %478
  %483 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %483) #10
  br label %484

484:                                              ; preds = %482, %478
  %485 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 1
  %486 = icmp eq %"class.blink::GridTrackSize"* %485, %464
  br i1 %486, label %487, label %465

487:                                              ; preds = %484
  store i32 0, i32* %459, align 4
  %488 = bitcast %"class.blink::GridTrackList"* %446 to i8**
  %489 = load i8*, i8** %488, align 8
  br label %490

490:                                              ; preds = %487, %457
  %491 = phi i8* [ %489, %487 ], [ %458, %457 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %491) #10
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %454, align 8
  br label %492

492:                                              ; preds = %453, %490
  %493 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 1
  %494 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 1, i32 1
  %495 = getelementptr inbounds %"class.std::__1::unique_ptr.425", %"class.std::__1::unique_ptr.425"* %494, i64 0, i32 0, i32 0, i32 0
  %496 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %495, align 8
  store %"class.blink::NGGridTrackList"* null, %"class.blink::NGGridTrackList"** %495, align 8
  %497 = icmp eq %"class.blink::NGGridTrackList"* %496, null
  br i1 %497, label %500, label %498

498:                                              ; preds = %492
  %499 = bitcast %"class.std::__1::unique_ptr.425"* %494 to %"struct.std::__1::default_delete.434"*
  tail call void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.434"* %499, %"class.blink::NGGridTrackList"* nonnull %496) #10
  br label %500

500:                                              ; preds = %498, %492
  %501 = getelementptr inbounds %"class.blink::GridTrackList", %"class.blink::GridTrackList"* %493, i64 0, i32 0, i32 0, i32 0, i32 0
  %502 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %501, align 8
  %503 = icmp eq %"class.blink::GridTrackSize"* %502, null
  br i1 %503, label %539, label %504, !prof !16

504:                                              ; preds = %500
  %505 = bitcast %"class.blink::GridTrackSize"* %502 to i8*
  %506 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %507 = load i32, i32* %506, align 4
  %508 = icmp eq i32 %507, 0
  br i1 %508, label %537, label %509, !prof !3

509:                                              ; preds = %504
  %510 = zext i32 %507 to i64
  %511 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %502, i64 %510
  br label %512

512:                                              ; preds = %531, %509
  %513 = phi %"class.blink::GridTrackSize"* [ %532, %531 ], [ %502, %509 ]
  %514 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 4, i32 0, i32 2
  %515 = load i8, i8* %514, align 1
  %516 = icmp eq i8 %515, 8
  br i1 %516, label %517, label %519

517:                                              ; preds = %512
  %518 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %518) #10
  br label %519

519:                                              ; preds = %517, %512
  %520 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 3, i32 0, i32 2
  %521 = load i8, i8* %520, align 1
  %522 = icmp eq i8 %521, 8
  br i1 %522, label %523, label %525

523:                                              ; preds = %519
  %524 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %524) #10
  br label %525

525:                                              ; preds = %523, %519
  %526 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 2, i32 0, i32 2
  %527 = load i8, i8* %526, align 1
  %528 = icmp eq i8 %527, 8
  br i1 %528, label %529, label %531

529:                                              ; preds = %525
  %530 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %530) #10
  br label %531

531:                                              ; preds = %529, %525
  %532 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 1
  %533 = icmp eq %"class.blink::GridTrackSize"* %532, %511
  br i1 %533, label %534, label %512

534:                                              ; preds = %531
  store i32 0, i32* %506, align 4
  %535 = bitcast %"class.blink::GridTrackList"* %493 to i8**
  %536 = load i8*, i8** %535, align 8
  br label %537

537:                                              ; preds = %534, %504
  %538 = phi i8* [ %536, %534 ], [ %505, %504 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %538) #10
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %501, align 8
  br label %539

539:                                              ; preds = %500, %537
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.434"*, %"class.blink::NGGridTrackList"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.blink::NGGridTrackList"* %1, null
  br i1 %3, label %57, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::NGGridTrackList", %"class.blink::NGGridTrackList"* %1, i64 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::Vector.420", %"class.WTF::Vector.420"* %5, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %6, align 8
  %8 = icmp eq %"class.blink::GridTrackSize"* %7, null
  br i1 %8, label %44, label %9, !prof !16

9:                                                ; preds = %4
  %10 = bitcast %"class.blink::GridTrackSize"* %7 to i8*
  %11 = getelementptr inbounds %"class.blink::NGGridTrackList", %"class.blink::NGGridTrackList"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %42, label %14, !prof !3

14:                                               ; preds = %9
  %15 = zext i32 %12 to i64
  %16 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %7, i64 %15
  br label %17

17:                                               ; preds = %36, %14
  %18 = phi %"class.blink::GridTrackSize"* [ %37, %36 ], [ %7, %14 ]
  %19 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 4, i32 0, i32 2
  %20 = load i8, i8* %19, align 1
  %21 = icmp eq i8 %20, 8
  br i1 %21, label %22, label %24

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %23) #10
  br label %24

24:                                               ; preds = %22, %17
  %25 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 3, i32 0, i32 2
  %26 = load i8, i8* %25, align 1
  %27 = icmp eq i8 %26, 8
  br i1 %27, label %28, label %30

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %29) #10
  br label %30

30:                                               ; preds = %28, %24
  %31 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 2, i32 0, i32 2
  %32 = load i8, i8* %31, align 1
  %33 = icmp eq i8 %32, 8
  br i1 %33, label %34, label %36

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %35) #10
  br label %36

36:                                               ; preds = %34, %30
  %37 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 1
  %38 = icmp eq %"class.blink::GridTrackSize"* %37, %16
  br i1 %38, label %39, label %17

39:                                               ; preds = %36
  store i32 0, i32* %11, align 4
  %40 = bitcast %"class.WTF::Vector.420"* %5 to i8**
  %41 = load i8*, i8** %40, align 8
  br label %42

42:                                               ; preds = %39, %9
  %43 = phi i8* [ %41, %39 ], [ %10, %9 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %43) #10
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %6, align 8
  br label %44

44:                                               ; preds = %42, %4
  %45 = getelementptr inbounds %"class.blink::NGGridTrackList", %"class.blink::NGGridTrackList"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.blink::NGGridTrackRepeater"*, %"struct.blink::NGGridTrackRepeater"** %45, align 8
  %47 = icmp eq %"struct.blink::NGGridTrackRepeater"* %46, null
  %48 = bitcast %"struct.blink::NGGridTrackRepeater"* %46 to i8*
  br i1 %47, label %55, label %49, !prof !16

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.blink::NGGridTrackList", %"class.blink::NGGridTrackList"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %54, label %53, !prof !3

53:                                               ; preds = %49
  store i32 0, i32* %50, align 4
  br label %54

54:                                               ; preds = %53, %49
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %48) #10
  br label %55

55:                                               ; preds = %44, %54
  %56 = bitcast %"class.blink::NGGridTrackList"* %1 to i8*
  tail call void @_ZdlPv(i8* %56) #11
  br label %57

57:                                               ; preds = %55, %2
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare void @_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan22PercentDataC1ERKS1_(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* dereferenceable(80)) unnamed_addr #2

declare void @_ZN5blink17ComputedStyleBase48StyleRareNonInheritedUsageLessThan100PercentDataC1ERKS1_(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* dereferenceable(480)) unnamed_addr #2

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink26CSSRayNonInterpolableValueD0Ev(%"class.blink::CSSRayNonInterpolableValue"*) unnamed_addr #3 comdat align 2 {
  %2 = bitcast %"class.blink::CSSRayNonInterpolableValue"* %0 to i8*
  tail call void @free(i8* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK5blink26CSSRayNonInterpolableValue7GetTypeEv(%"class.blink::CSSRayNonInterpolableValue"*) unnamed_addr #0 comdat align 2 {
  %2 = load i8*, i8** @_ZN5blink26CSSRayNonInterpolableValue12static_type_E, align 8
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20NonInterpolableValueD2Ev(%"class.blink::NonInterpolableValue"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17InterpolationTypeD2Ev(%"class.blink::InterpolationType"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InterpolationType", %"class.blink::InterpolationType"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink17InterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InterpolationType", %"class.blink::InterpolationType"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #10
  br label %19

19:                                               ; preds = %1, %15, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17InterpolationTypeD0Ev(%"class.blink::InterpolationType"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink17InterpolationType17MaybeMergeSinglesEONS_18InterpolationValueES2_(%"struct.blink::PairwiseInterpolationValue"* noalias sret, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"* dereferenceable(16), %"struct.blink::InterpolationValue"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = bitcast %"struct.blink::InterpolationValue"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %5, align 8
  %8 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = bitcast %"struct.blink::InterpolationValue"* %3 to i64*
  %10 = load i64, i64* %9, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %8, align 8
  %11 = bitcast %"struct.blink::PairwiseInterpolationValue"* %0 to i64*
  store i64 %7, i64* %11, align 8
  %12 = getelementptr inbounds %"struct.blink::PairwiseInterpolationValue", %"struct.blink::PairwiseInterpolationValue"* %0, i64 0, i32 1
  %13 = bitcast %"class.std::__1::unique_ptr.1321"* %12 to i64*
  store i64 %10, i64* %13, align 8
  %14 = getelementptr inbounds %"struct.blink::PairwiseInterpolationValue", %"struct.blink::PairwiseInterpolationValue"* %0, i64 0, i32 2
  %15 = bitcast %class.scoped_refptr.1327* %14 to i64*
  store i64 0, i64* %15, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink17InterpolationType9CompositeERNS_20UnderlyingValueOwnerEdRKNS_18InterpolationValueEd(%"class.blink::InterpolationType"*, %"class.blink::UnderlyingValueOwner"* dereferenceable(40), double, %"struct.blink::InterpolationValue"* dereferenceable(16), double) unnamed_addr #0 comdat align 2 {
  %6 = tail call dereferenceable(16) %"struct.blink::InterpolationValue"* @_ZN5blink20UnderlyingValueOwner12MutableValueEv(%"class.blink::UnderlyingValueOwner"* %1) #10
  %7 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %7, align 8
  %9 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %9, align 8
  %11 = bitcast %"class.blink::InterpolableValue"* %8 to void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)***
  %12 = load void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)** %12, i64 14
  %14 = load void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)** %13, align 8
  tail call void %14(%"class.blink::InterpolableValue"* %8, double %2, %"class.blink::InterpolableValue"* dereferenceable(8) %10) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17InterpolationType17ConversionCheckerD2Ev(%"class.blink::InterpolationType::ConversionChecker"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_124UnderlyingRayModeCheckerD0Ev(%"class.blink::(anonymous namespace)::UnderlyingRayModeChecker"* nocapture) unnamed_addr #3 align 2 {
  %2 = bitcast %"class.blink::(anonymous namespace)::UnderlyingRayModeChecker"* %0 to i8*
  tail call void @free(i8* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink20CSSInterpolationType20CSSConversionChecker7IsValidERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueE(%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::InterpolationEnvironment"* dereferenceable(16), %"struct.blink::InterpolationValue"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::InterpolationEnvironment", %"class.blink::InterpolationEnvironment"* %1, i64 1
  %5 = bitcast %"class.blink::InterpolationEnvironment"* %4 to %"class.blink::StyleResolverState"**
  %6 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %5, align 8
  %7 = bitcast %"class.blink::CSSInterpolationType::CSSConversionChecker"* %0 to i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)***
  %8 = load i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)**, i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)*, i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)** %8, i64 3
  %10 = load i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)*, i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.blink::CSSInterpolationType::CSSConversionChecker"* %0, %"class.blink::StyleResolverState"* dereferenceable(600) %6, %"struct.blink::InterpolationValue"* dereferenceable(16) %2) #10
  ret i1 %11
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal zeroext i1 @_ZNK5blink12_GLOBAL__N_124UnderlyingRayModeChecker7IsValidERKNS_18StyleResolverStateERKNS_18InterpolationValueE(%"class.blink::(anonymous namespace)::UnderlyingRayModeChecker"* nocapture readonly, %"class.blink::StyleResolverState"* nocapture readnone dereferenceable(600), %"struct.blink::InterpolationValue"* nocapture readonly dereferenceable(16)) unnamed_addr #9 align 2 {
  %4 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %2, i64 0, i32 1, i32 0
  %5 = bitcast %"class.blink::NonInterpolableValue"** %4 to %"class.blink::CSSRayNonInterpolableValue"**
  %6 = load %"class.blink::CSSRayNonInterpolableValue"*, %"class.blink::CSSRayNonInterpolableValue"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::(anonymous namespace)::UnderlyingRayModeChecker", %"class.blink::(anonymous namespace)::UnderlyingRayModeChecker"* %0, i64 0, i32 1, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.blink::CSSRayNonInterpolableValue", %"class.blink::CSSRayNonInterpolableValue"* %6, i64 0, i32 1, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %8, %10
  br i1 %11, label %12, label %18

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blink::(anonymous namespace)::UnderlyingRayModeChecker", %"class.blink::(anonymous namespace)::UnderlyingRayModeChecker"* %0, i64 0, i32 1, i32 1
  %14 = load i8, i8* %13, align 4, !range !2
  %15 = getelementptr inbounds %"class.blink::CSSRayNonInterpolableValue", %"class.blink::CSSRayNonInterpolableValue"* %6, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 4, !range !2
  %17 = icmp eq i8 %14, %16
  br label %18

18:                                               ; preds = %3, %12
  %19 = phi i1 [ false, %3 ], [ %17, %12 ]
  ret i1 %19
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_12_GLOBAL__N_124UnderlyingRayModeCheckerENS6_ISD_EEEEEEvOT_(%"class.WTF::Vector.1328"* nocapture, %"class.std::__1::unique_ptr.1334"* nocapture dereferenceable(8)) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1328", %"class.WTF::Vector.1328"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1328", %"class.WTF::Vector.1328"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.1328", %"class.WTF::Vector.1328"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.1331"*, %"class.std::__1::unique_ptr.1331"** %16, align 8
  br i1 %15, label %18, label %45, !prof !16

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr.1331"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #10
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([185 x i8], [185 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #10
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.1328"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr.1331"*, %"class.std::__1::unique_ptr.1331"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr.1331"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr.1331"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !16

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #10
  %36 = bitcast %"class.WTF::Vector.1328"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #10
  %40 = bitcast %"class.WTF::Vector.1328"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr.1331"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr.1331"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.1331", %"class.std::__1::unique_ptr.1331"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.1334", %"class.std::__1::unique_ptr.1334"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.1334"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::(anonymous namespace)::UnderlyingRayModeChecker"* null, %"class.blink::(anonymous namespace)::UnderlyingRayModeChecker"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.1331"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS2_14default_deleteIS6_EEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_119InheritedRayCheckerD2Ev(%"class.blink::(anonymous namespace)::InheritedRayChecker"* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::InheritedRayChecker", %"class.blink::(anonymous namespace)::InheritedRayChecker"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink12_GLOBAL__N_119InheritedRayCheckerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::InheritedRayChecker", %"class.blink::(anonymous namespace)::InheritedRayChecker"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.blink::StyleRay"*, %"class.blink::StyleRay"** %3, align 8
  %5 = icmp eq %"class.blink::StyleRay"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::StyleRay", %"class.blink::StyleRay"* %4, i64 0, i32 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.base::RefCounted.441", %"class.base::RefCounted.441"* %7, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %8) #10
  %9 = getelementptr inbounds %"class.base::RefCounted.441", %"class.base::RefCounted.441"* %7, i64 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %19

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.base::RefCounted.441", %"class.base::RefCounted.441"* %7, i64 -2
  %14 = bitcast %"class.base::RefCounted.441"* %13 to %"class.blink::BasicShape"*
  %15 = bitcast %"class.base::RefCounted.441"* %13 to void (%"class.blink::BasicShape"*)***
  %16 = load void (%"class.blink::BasicShape"*)**, void (%"class.blink::BasicShape"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %16, i64 1
  %18 = load void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %17, align 8
  tail call void %18(%"class.blink::BasicShape"* nonnull %14) #10
  br label %19

19:                                               ; preds = %1, %6, %12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_119InheritedRayCheckerD0Ev(%"class.blink::(anonymous namespace)::InheritedRayChecker"* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::InheritedRayChecker", %"class.blink::(anonymous namespace)::InheritedRayChecker"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink12_GLOBAL__N_119InheritedRayCheckerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::InheritedRayChecker", %"class.blink::(anonymous namespace)::InheritedRayChecker"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.blink::StyleRay"*, %"class.blink::StyleRay"** %3, align 8
  %5 = icmp eq %"class.blink::StyleRay"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::StyleRay", %"class.blink::StyleRay"* %4, i64 0, i32 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.base::RefCounted.441", %"class.base::RefCounted.441"* %7, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %8) #10
  %9 = getelementptr inbounds %"class.base::RefCounted.441", %"class.base::RefCounted.441"* %7, i64 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %19

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.base::RefCounted.441", %"class.base::RefCounted.441"* %7, i64 -2
  %14 = bitcast %"class.base::RefCounted.441"* %13 to %"class.blink::BasicShape"*
  %15 = bitcast %"class.base::RefCounted.441"* %13 to void (%"class.blink::BasicShape"*)***
  %16 = load void (%"class.blink::BasicShape"*)**, void (%"class.blink::BasicShape"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %16, i64 1
  %18 = load void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %17, align 8
  tail call void %18(%"class.blink::BasicShape"* nonnull %14) #10
  br label %19

19:                                               ; preds = %1, %6, %12
  %20 = bitcast %"class.blink::(anonymous namespace)::InheritedRayChecker"* %0 to i8*
  tail call void @free(i8* %20) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZNK5blink12_GLOBAL__N_119InheritedRayChecker7IsValidERKNS_18StyleResolverStateERKNS_18InterpolationValueE(%"class.blink::(anonymous namespace)::InheritedRayChecker"* nocapture readonly, %"class.blink::StyleResolverState"* nocapture readonly dereferenceable(600), %"struct.blink::InterpolationValue"* nocapture readnone dereferenceable(16)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %1, i64 0, i32 4, i32 0
  %5 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %7, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %9, i64 0, i32 2, i32 0, i32 0
  %11 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %11, i64 0, i32 11, i32 0
  %13 = load %"class.blink::BasicShape"*, %"class.blink::BasicShape"** %12, align 8
  %14 = icmp eq %"class.blink::BasicShape"* %13, null
  br i1 %14, label %31, label %15

15:                                               ; preds = %3
  %16 = bitcast %"class.blink::BasicShape"* %13 to i32 (%"class.blink::BasicShape"*)***
  %17 = load i32 (%"class.blink::BasicShape"*)**, i32 (%"class.blink::BasicShape"*)*** %16, align 8
  %18 = getelementptr inbounds i32 (%"class.blink::BasicShape"*)*, i32 (%"class.blink::BasicShape"*)** %17, i64 5
  %19 = load i32 (%"class.blink::BasicShape"*)*, i32 (%"class.blink::BasicShape"*)** %18, align 8
  %20 = tail call i32 %19(%"class.blink::BasicShape"* nonnull %13) #10
  %21 = icmp eq i32 %20, 4
  br i1 %21, label %22, label %31

22:                                               ; preds = %15
  %23 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %6, align 8
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %23, i64 0, i32 2, i32 0, i32 0
  %25 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %25, i64 0, i32 2, i32 0, i32 0
  %27 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %27, i64 0, i32 11, i32 0
  %29 = bitcast %"class.blink::BasicShape"** %28 to %"class.blink::StyleRay"**
  %30 = load %"class.blink::StyleRay"*, %"class.blink::StyleRay"** %29, align 8
  br label %31

31:                                               ; preds = %3, %15, %22
  %32 = phi %"class.blink::StyleRay"* [ %30, %22 ], [ null, %15 ], [ null, %3 ]
  %33 = getelementptr inbounds %"class.blink::(anonymous namespace)::InheritedRayChecker", %"class.blink::(anonymous namespace)::InheritedRayChecker"* %0, i64 0, i32 1, i32 0
  %34 = load %"class.blink::StyleRay"*, %"class.blink::StyleRay"** %33, align 8
  %35 = icmp eq %"class.blink::StyleRay"* %32, %34
  ret i1 %35
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_12_GLOBAL__N_119InheritedRayCheckerENS6_ISD_EEEEEEvOT_(%"class.WTF::Vector.1328"* nocapture, %"class.std::__1::unique_ptr.1340"* nocapture dereferenceable(8)) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1328", %"class.WTF::Vector.1328"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1328", %"class.WTF::Vector.1328"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.1328", %"class.WTF::Vector.1328"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.1331"*, %"class.std::__1::unique_ptr.1331"** %16, align 8
  br i1 %15, label %18, label %45, !prof !16

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr.1331"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #10
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([185 x i8], [185 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #10
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.1328"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr.1331"*, %"class.std::__1::unique_ptr.1331"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr.1331"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr.1331"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !16

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #10
  %36 = bitcast %"class.WTF::Vector.1328"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #10
  %40 = bitcast %"class.WTF::Vector.1328"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr.1331"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr.1331"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.1331", %"class.std::__1::unique_ptr.1331"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.1340", %"class.std::__1::unique_ptr.1340"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.1340"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::(anonymous namespace)::InheritedRayChecker"* null, %"class.blink::(anonymous namespace)::InheritedRayChecker"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.1331"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN5blink12_GLOBAL__N_111CreateValueEfRKNS0_7RayModeE: argument 0"}
!6 = distinct !{!6, !"_ZN5blink12_GLOBAL__N_111CreateValueEfRKNS0_7RayModeE"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN5blink12_GLOBAL__N_111CreateValueEfRKNS0_7RayModeE: argument 0"}
!9 = distinct !{!9, !"_ZN5blink12_GLOBAL__N_111CreateValueEfRKNS0_7RayModeE"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN5blink12_GLOBAL__N_111CreateValueEfRKNS0_7RayModeE: argument 0"}
!12 = distinct !{!12, !"_ZN5blink12_GLOBAL__N_111CreateValueEfRKNS0_7RayModeE"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZN5blink12_GLOBAL__N_111CreateValueEfRKNS0_7RayModeE: argument 0"}
!15 = distinct !{!15, !"_ZN5blink12_GLOBAL__N_111CreateValueEfRKNS0_7RayModeE"}
!16 = !{!"branch_weights", i32 2000, i32 1}
