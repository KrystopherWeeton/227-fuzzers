; ModuleID = '../../third_party/blink/renderer/core/layout/layout_theme_linux.cc'
source_filename = "../../third_party/blink/renderer/core/layout/layout_theme_linux.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::LayoutTheme" = type <{ i32 (...)**, %"class.WTF::RefCounted", %"class.blink::Color", i8, [7 x i8], %"class.base::TimeDelta", i8, [7 x i8] }>
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Color" = type { i32 }
%"class.base::TimeDelta" = type { i64 }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::LayoutThemeDefault" = type { %"class.blink::LayoutTheme.base", %"class.blink::ThemePainterDefault", float, float }
%"class.blink::LayoutTheme.base" = type <{ i32 (...)**, %"class.WTF::RefCounted", %"class.blink::Color", i8, [7 x i8], %"class.base::TimeDelta", i8 }>
%"class.blink::ThemePainterDefault" = type { %"class.blink::ThemePainter", %"class.blink::LayoutThemeDefault"* }
%"class.blink::ThemePainter" = type { i32 (...)** }
%"class.blink::LayoutThemeLinux" = type { %"class.blink::LayoutThemeDefault" }
%"class.WTF::StringAppend" = type { %"class.WTF::String", %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.1 }
%class.scoped_refptr.1 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringTypeAdapter" = type { %"class.WTF::StringTypeAdapter.3" }
%"class.WTF::StringTypeAdapter.3" = type { %"class.WTF::StringView" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::ComputedStyle" = type opaque
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::LocalFrame" = type opaque
%"class.blink::File" = type opaque
%"class.blink::Element" = type opaque
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_ = comdat any

$_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev = comdat any

$_ZN5blink16LayoutThemeLinuxD0Ev = comdat any

$_ZN5blink18LayoutThemeDefault7PainterEv = comdat any

$_ZNK5blink18LayoutThemeDefault25PlatformTapHighlightColorEv = comdat any

$_ZNK5blink11LayoutTheme41PlatformDefaultCompositionBackgroundColorEv = comdat any

$_ZNK5blink11LayoutTheme19PopsMenuByArrowKeysEv = comdat any

$_ZNK5blink11LayoutTheme19PopsMenuByReturnKeyEv = comdat any

$_ZNK5blink11LayoutTheme33SupportsSelectionForegroundColorsEv = comdat any

$_ZNK5blink11LayoutTheme23IsAccentColorCustomizedENS_5mojom11ColorSchemeE = comdat any

$_ZNK5blink11LayoutTheme14GetAccentColorENS_5mojom11ColorSchemeE = comdat any

$_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_ = comdat any

$_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv = comdat any

@_ZZN5blink11LayoutTheme11NativeThemeEvE12layout_theme = internal unnamed_addr global %"class.blink::LayoutTheme"* null, align 8
@_ZGVZN5blink11LayoutTheme11NativeThemeEvE12layout_theme = internal global i64 0, align 8
@_ZTVN5blink16LayoutThemeLinuxE = hidden unnamed_addr constant { [55 x i8*] } { [55 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::LayoutThemeDefault"*)* @_ZN5blink18LayoutThemeDefaultD2Ev to i8*), i8* bitcast (void (%"class.blink::LayoutThemeLinux"*)* @_ZN5blink16LayoutThemeLinuxD0Ev to i8*), i8* bitcast (%"class.blink::ThemePainter"* (%"class.blink::LayoutThemeDefault"*)* @_ZN5blink18LayoutThemeDefault7PainterEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutThemeLinux"*)* @_ZN5blink16LayoutThemeLinux22ExtraDefaultStyleSheetEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutThemeDefault"*)* @_ZN5blink18LayoutThemeDefault21ExtraQuirksStyleSheetEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutTheme"*)* @_ZN5blink11LayoutTheme25ExtraFullscreenStyleSheetEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutTheme"*, i32, %"class.blink::ComputedStyle"*)* @_ZNK5blink11LayoutTheme15IsControlStyledENS_11ControlPartERKNS_13ComputedStyleE to i8*), i8* bitcast (i1 (%"class.blink::LayoutTheme"*, %"class.WTF::AtomicString"*)* @_ZNK5blink11LayoutTheme22SupportsCalendarPickerERKN3WTF12AtomicStringE to i8*), i8* bitcast (void (%"class.blink::LayoutThemeDefault"*, i32, i32, i32, i32)* @_ZN5blink18LayoutThemeDefault18SetSelectionColorsENS_5ColorES1_S1_S1_ to i8*), i8* bitcast (i32 (%"class.blink::LayoutTheme"*)* @_ZNK5blink11LayoutTheme36PlatformSpellingMarkerUnderlineColorEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutTheme"*)* @_ZNK5blink11LayoutTheme35PlatformGrammarMarkerUnderlineColorEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutTheme"*, i32)* @_ZNK5blink11LayoutTheme14FocusRingColorENS_5mojom11ColorSchemeE to i8*), i8* bitcast (i32 (%"class.blink::LayoutThemeDefault"*)* @_ZNK5blink18LayoutThemeDefault22PlatformFocusRingColorEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutThemeDefault"*)* @_ZNK5blink18LayoutThemeDefault25PlatformTapHighlightColorEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutTheme"*)* @_ZNK5blink11LayoutTheme41PlatformDefaultCompositionBackgroundColorEv to i8*), i8* bitcast (void (%"class.blink::LayoutTheme"*)* @_ZN5blink11LayoutTheme20ColorSchemeDidChangeEv to i8*), i8* bitcast (i64 (%"class.blink::LayoutTheme"*)* @_ZNK5blink11LayoutTheme18CaretBlinkIntervalEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutTheme"*, i32, i32)* @_ZNK5blink11LayoutTheme11SystemColorENS_10CSSValueIDENS_5mojom11ColorSchemeE to i8*), i8* bitcast (void (%"class.blink::LayoutThemeDefault"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink18LayoutThemeDefault21AdjustSliderThumbSizeERNS_13ComputedStyleE to i8*), i8* bitcast (i32 (%"class.blink::LayoutThemeDefault"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink18LayoutThemeDefault25PopupInternalPaddingStartERKNS_13ComputedStyleE to i8*), i8* bitcast (i32 (%"class.blink::LayoutThemeDefault"*, %"class.blink::LocalFrame"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink18LayoutThemeDefault23PopupInternalPaddingEndEPNS_10LocalFrameERKNS_13ComputedStyleE to i8*), i8* bitcast (i32 (%"class.blink::LayoutThemeDefault"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink18LayoutThemeDefault23PopupInternalPaddingTopERKNS_13ComputedStyleE to i8*), i8* bitcast (i32 (%"class.blink::LayoutThemeDefault"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink18LayoutThemeDefault26PopupInternalPaddingBottomERKNS_13ComputedStyleE to i8*), i8* bitcast (i64 (%"class.blink::LayoutThemeDefault"*)* @_ZNK5blink18LayoutThemeDefault14SliderTickSizeEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutThemeDefault"*)* @_ZNK5blink18LayoutThemeDefault31SliderTickOffsetFromTrackCenterEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutTheme"*)* @_ZNK5blink11LayoutTheme26DelegatesMenuListRenderingEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutTheme"*)* @_ZNK5blink11LayoutTheme19PopsMenuByArrowKeysEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutTheme"*)* @_ZNK5blink11LayoutTheme19PopsMenuByReturnKeyEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutTheme"*, %"class.blink::File"*)* @_ZNK5blink11LayoutTheme18DisplayNameForFileERKNS_4FileE to i8*), i8* bitcast (i1 (%"class.blink::LayoutTheme"*)* @_ZNK5blink11LayoutTheme33SupportsSelectionForegroundColorsEv to i8*), i8* bitcast (void (%"class.blink::LayoutTheme"*, %"class.blink::ComputedStyle"*)* @_ZN5blink11LayoutTheme22AdjustControlPartStyleERNS_13ComputedStyleE to i8*), i8* bitcast (i1 (%"class.blink::LayoutTheme"*, i32)* @_ZNK5blink11LayoutTheme23IsAccentColorCustomizedENS_5mojom11ColorSchemeE to i8*), i8* bitcast (i32 (%"class.blink::LayoutTheme"*, i32)* @_ZNK5blink11LayoutTheme14GetAccentColorENS_5mojom11ColorSchemeE to i8*), i8* bitcast (i32 (%"class.blink::LayoutThemeDefault"*, i32)* @_ZNK5blink18LayoutThemeDefault38PlatformActiveSelectionBackgroundColorENS_5mojom11ColorSchemeE to i8*), i8* bitcast (i32 (%"class.blink::LayoutThemeDefault"*, i32)* @_ZNK5blink18LayoutThemeDefault40PlatformInactiveSelectionBackgroundColorENS_5mojom11ColorSchemeE to i8*), i8* bitcast (i32 (%"class.blink::LayoutThemeDefault"*, i32)* @_ZNK5blink18LayoutThemeDefault38PlatformActiveSelectionForegroundColorENS_5mojom11ColorSchemeE to i8*), i8* bitcast (i32 (%"class.blink::LayoutThemeDefault"*, i32)* @_ZNK5blink18LayoutThemeDefault40PlatformInactiveSelectionForegroundColorENS_5mojom11ColorSchemeE to i8*), i8* bitcast (i32 (%"class.blink::LayoutTheme"*, i32)* @_ZNK5blink11LayoutTheme45PlatformActiveListBoxSelectionBackgroundColorENS_5mojom11ColorSchemeE to i8*), i8* bitcast (i32 (%"class.blink::LayoutTheme"*, i32)* @_ZNK5blink11LayoutTheme47PlatformInactiveListBoxSelectionBackgroundColorENS_5mojom11ColorSchemeE to i8*), i8* bitcast (i32 (%"class.blink::LayoutTheme"*, i32)* @_ZNK5blink11LayoutTheme45PlatformActiveListBoxSelectionForegroundColorENS_5mojom11ColorSchemeE to i8*), i8* bitcast (i32 (%"class.blink::LayoutTheme"*, i32)* @_ZNK5blink11LayoutTheme47PlatformInactiveListBoxSelectionForegroundColorENS_5mojom11ColorSchemeE to i8*), i8* bitcast (void (%"class.blink::LayoutTheme"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink11LayoutTheme19AdjustCheckboxStyleERNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::LayoutThemeDefault"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink18LayoutThemeDefault15SetCheckboxSizeERNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::LayoutTheme"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink11LayoutTheme16AdjustRadioStyleERNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::LayoutThemeDefault"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink18LayoutThemeDefault12SetRadioSizeERNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::LayoutThemeDefault"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink18LayoutThemeDefault17AdjustButtonStyleERNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::LayoutThemeDefault"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink18LayoutThemeDefault26AdjustInnerSpinButtonStyleERNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::LayoutThemeDefault"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink18LayoutThemeDefault19AdjustMenuListStyleERNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::LayoutThemeDefault"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink18LayoutThemeDefault25AdjustMenuListButtonStyleERNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::LayoutTheme"*, %"class.blink::Element"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink11LayoutTheme26AdjustSliderContainerStyleERKNS_7ElementERNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::LayoutTheme"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink11LayoutTheme22AdjustSliderThumbStyleERNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::LayoutThemeDefault"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink18LayoutThemeDefault22AdjustSearchFieldStyleERNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::LayoutThemeDefault"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink18LayoutThemeDefault34AdjustSearchFieldCancelButtonStyleERNS_13ComputedStyleE to i8*)] }, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.1 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.2 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutTheme"* @_ZN5blink16LayoutThemeLinux6CreateEv() local_unnamed_addr #0 align 2 {
  %1 = tail call noalias i8* @malloc(i64 64) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 64, i1 false)
  %2 = bitcast i8* %1 to %"class.blink::LayoutThemeDefault"*
  tail call void @_ZN5blink18LayoutThemeDefaultC2Ev(%"class.blink::LayoutThemeDefault"* %2) #9
  %3 = bitcast i8* %1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [55 x i8*] }, { [55 x i8*] }* @_ZTVN5blink16LayoutThemeLinuxE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = bitcast i8* %1 to %"class.blink::LayoutTheme"*
  ret %"class.blink::LayoutTheme"* %4
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(40) %"class.blink::LayoutTheme"* @_ZN5blink11LayoutTheme11NativeThemeEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink11LayoutTheme11NativeThemeEvE12layout_theme to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %24, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink11LayoutTheme11NativeThemeEvE12layout_theme) #9
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %24, label %6

6:                                                ; preds = %3
  %7 = tail call noalias i8* @malloc(i64 64) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 64, i1 false) #9
  %8 = bitcast i8* %7 to %"class.blink::LayoutThemeDefault"*
  tail call void @_ZN5blink18LayoutThemeDefaultC2Ev(%"class.blink::LayoutThemeDefault"* %8) #9
  %9 = bitcast i8* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [55 x i8*] }, { [55 x i8*] }* @_ZTVN5blink16LayoutThemeLinuxE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = icmp eq i8* %7, null
  br i1 %10, label %23, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds i8, i8* %7, i64 8
  %13 = bitcast i8* %12 to %"class.base::subtle::RefCountedBase"*
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %13) #9
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %13) #9
  %14 = bitcast i8* %12 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %23

17:                                               ; preds = %11
  %18 = bitcast i8* %7 to %"class.blink::LayoutTheme"*
  %19 = bitcast i8* %7 to void (%"class.blink::LayoutTheme"*)***
  %20 = load void (%"class.blink::LayoutTheme"*)**, void (%"class.blink::LayoutTheme"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::LayoutTheme"*)*, void (%"class.blink::LayoutTheme"*)** %20, i64 1
  %22 = load void (%"class.blink::LayoutTheme"*)*, void (%"class.blink::LayoutTheme"*)** %21, align 8
  tail call void %22(%"class.blink::LayoutTheme"* nonnull %18) #9
  br label %23

23:                                               ; preds = %6, %11, %17
  store i8* %7, i8** bitcast (%"class.blink::LayoutTheme"** @_ZZN5blink11LayoutTheme11NativeThemeEvE12layout_theme to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink11LayoutTheme11NativeThemeEvE12layout_theme) #9
  br label %24

24:                                               ; preds = %3, %23, %0
  %25 = load %"class.blink::LayoutTheme"*, %"class.blink::LayoutTheme"** @_ZZN5blink11LayoutTheme11NativeThemeEvE12layout_theme, align 8
  ret %"class.blink::LayoutTheme"* %25
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink16LayoutThemeLinux22ExtraDefaultStyleSheetEv(%"class.blink::LayoutThemeLinux"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringAppend", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = bitcast %"class.WTF::StringAppend"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #9
  %5 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.blink::LayoutThemeLinux", %"class.blink::LayoutThemeLinux"* %0, i64 0, i32 0
  %7 = tail call %"class.WTF::StringImpl"* @_ZN5blink18LayoutThemeDefault22ExtraDefaultStyleSheetEv(%"class.blink::LayoutThemeDefault"* %6) #9
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"** %8, align 8
  %9 = tail call %"class.WTF::StringImpl"* @_ZN5blink31UncompressResourceAsASCIIStringEi(i32 24695) #9
  %10 = call { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.WTF::StringImpl"* %9)
  %11 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %2, i64 0, i32 0, i32 0, i32 0
  %12 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %10, 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %2, i64 0, i32 1, i32 0, i32 0
  %14 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %10, 1
  store %"class.WTF::StringImpl"* %14, %"class.WTF::StringImpl"** %13, align 8
  %15 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev(%"class.WTF::StringAppend"* nonnull %2)
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %1
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  br i1 %22, label %25, label %27

25:                                               ; preds = %18
  %26 = add i32 %24, -1
  store i32 %26, i32* %23, align 4
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi i32 [ %26, %25 ], [ %24, %18 ]
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #9
  br label %31

31:                                               ; preds = %30, %27, %1
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %47, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  br i1 %38, label %41, label %43

41:                                               ; preds = %34
  %42 = add i32 %40, -1
  store i32 %42, i32* %39, align 4
  br label %43

43:                                               ; preds = %41, %34
  %44 = phi i32 [ %42, %41 ], [ %40, %34 ]
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %43
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #9
  br label %47

47:                                               ; preds = %31, %43, %46
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #9
  br label %63

63:                                               ; preds = %47, %59, %62
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #9
  ret %"class.WTF::StringImpl"* %15
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* dereferenceable(8), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %3 = alloca %"class.WTF::StringAppend", align 8
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #9
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !3

21:                                               ; preds = %12
  tail call void @llvm.trap() #9
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %2, %7, %22
  %25 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %25, label %43, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %44

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i33
  %35 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #9
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !3

40:                                               ; preds = %31
  tail call void @llvm.trap() #9
  unreachable

41:                                               ; preds = %31
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %32, align 4
  br label %44

43:                                               ; preds = %24
  call void @_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_(%"class.WTF::StringAppend"* nonnull %3, %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"* null)
  br label %56

44:                                               ; preds = %26, %41
  call void @_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_(%"class.WTF::StringAppend"* nonnull %3, %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"* nonnull %1)
  %45 = load atomic i32, i32* %27 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %44
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %44
  %53 = phi i32 [ %51, %50 ], [ %49, %44 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #9
  br label %56

56:                                               ; preds = %43, %52, %55
  %57 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %3, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = insertvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } undef, %"class.WTF::StringImpl"* %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %3, i64 0, i32 1, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = insertvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %59, %"class.WTF::StringImpl"* %61, 1
  ret { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %62
}

declare %"class.WTF::StringImpl"* @_ZN5blink18LayoutThemeDefault22ExtraDefaultStyleSheetEv(%"class.blink::LayoutThemeDefault"*) unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN5blink31UncompressResourceAsASCIIStringEi(i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter", align 8
  %6 = alloca i8*, align 8
  %7 = alloca i16*, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %12 = select i1 %10, %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"* %9
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %103, label %19

19:                                               ; preds = %1
  %20 = icmp eq %"class.WTF::StringImpl"* %14, null
  %21 = select i1 %20, %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"* %14
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %103, label %26

26:                                               ; preds = %19
  %27 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #9
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %28 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %29 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %28, i8** nonnull dereferenceable(8) %6) #9
  %30 = load i8*, i8** %6, align 8
  %31 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #9
  %32 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 24, i1 false) #9
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %36, label %38

36:                                               ; preds = %26
  %37 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %44

38:                                               ; preds = %26
  %39 = ptrtoint %"class.WTF::StringImpl"* %34 to i64
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 1
  %43 = bitcast %"class.WTF::StringImpl"* %42 to i8*
  br label %44

44:                                               ; preds = %38, %36
  %45 = phi i8* [ null, %36 ], [ %43, %38 ]
  %46 = phi i64 [ %37, %36 ], [ %39, %38 ]
  %47 = phi i32 [ 0, %36 ], [ %41, %38 ]
  %48 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i64*
  store i64 %46, i64* %48, align 8
  store i8* %45, i8** %32, align 8
  store i32 %47, i32* %33, align 8
  %49 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #9
  %50 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %5, i64 0, i32 0, i32 0, i32 1
  %51 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 24, i1 false) #9
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %54, label %56

54:                                               ; preds = %44
  %55 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %62

56:                                               ; preds = %44
  %57 = ptrtoint %"class.WTF::StringImpl"* %52 to i64
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 1
  %61 = bitcast %"class.WTF::StringImpl"* %60 to i8*
  br label %62

62:                                               ; preds = %54, %56
  %63 = phi i8* [ null, %54 ], [ %61, %56 ]
  %64 = phi i64 [ %55, %54 ], [ %57, %56 ]
  %65 = phi i32 [ 0, %54 ], [ %59, %56 ]
  %66 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i64*
  store i64 %64, i64* %66, align 8
  store i8* %63, i8** %50, align 8
  store i32 %65, i32* %51, align 8
  %67 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.3"* nonnull %67, i8* %30) #9
  %68 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %5, i64 0, i32 0
  %69 = load i32, i32* %33, align 8
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds i8, i8* %30, i64 %70
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.3"* nonnull %68, i8* %71) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #9
  %72 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %72, label %180, label %73

73:                                               ; preds = %62
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %90

80:                                               ; preds = %73
  %81 = zext i32 %79 to i33
  %82 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %81, i33 1) #9
  %83 = extractvalue { i33, i1 } %82, 1
  %84 = extractvalue { i33, i1 } %82, 0
  %85 = icmp slt i33 %84, 0
  %86 = or i1 %83, %85
  br i1 %86, label %87, label %88, !prof !3

87:                                               ; preds = %80
  call void @llvm.trap() #9
  unreachable

88:                                               ; preds = %80
  %89 = trunc i33 %84 to i32
  store i32 %89, i32* %78, align 4
  br label %90

90:                                               ; preds = %73, %88
  %91 = phi i32 [ %89, %88 ], [ %79, %73 ]
  %92 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %93 = load atomic i32, i32* %74 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %90
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %98 = add i32 %91, -1
  store i32 %98, i32* %97, align 4
  br label %99

99:                                               ; preds = %96, %90
  %100 = phi i32 [ %98, %96 ], [ %91, %90 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %180

102:                                              ; preds = %99
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #9
  br label %180

103:                                              ; preds = %19, %1
  %104 = bitcast i16** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104) #9
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %7, align 8
  %105 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %106 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %105, i16** nonnull dereferenceable(8) %7) #9
  %107 = load i16*, i16** %7, align 8
  %108 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %108) #9
  %109 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0, i32 0, i32 1
  %110 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %108, i8 -86, i64 24, i1 false) #9
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %112 = icmp eq %"class.WTF::StringImpl"* %111, null
  br i1 %112, label %113, label %115

113:                                              ; preds = %103
  %114 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %121

115:                                              ; preds = %103
  %116 = ptrtoint %"class.WTF::StringImpl"* %111 to i64
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 1
  %118 = load i32, i32* %117, align 4
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 1
  %120 = bitcast %"class.WTF::StringImpl"* %119 to i8*
  br label %121

121:                                              ; preds = %115, %113
  %122 = phi i8* [ null, %113 ], [ %120, %115 ]
  %123 = phi i64 [ %114, %113 ], [ %116, %115 ]
  %124 = phi i32 [ 0, %113 ], [ %118, %115 ]
  %125 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i64*
  store i64 %123, i64* %125, align 8
  store i8* %122, i8** %109, align 8
  store i32 %124, i32* %110, align 8
  %126 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %126) #9
  %127 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 0, i32 0, i32 1
  %128 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %126, i8 -86, i64 24, i1 false) #9
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %129, null
  br i1 %130, label %131, label %133

131:                                              ; preds = %121
  %132 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %139

133:                                              ; preds = %121
  %134 = ptrtoint %"class.WTF::StringImpl"* %129 to i64
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 1
  %136 = load i32, i32* %135, align 4
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 1
  %138 = bitcast %"class.WTF::StringImpl"* %137 to i8*
  br label %139

139:                                              ; preds = %131, %133
  %140 = phi i8* [ null, %131 ], [ %138, %133 ]
  %141 = phi i64 [ %132, %131 ], [ %134, %133 ]
  %142 = phi i32 [ 0, %131 ], [ %136, %133 ]
  %143 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i64*
  store i64 %141, i64* %143, align 8
  store i8* %140, i8** %127, align 8
  store i32 %142, i32* %128, align 8
  %144 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3"* nonnull %144, i16* %107) #9
  %145 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 0
  %146 = load i32, i32* %110, align 8
  %147 = zext i32 %146 to i64
  %148 = getelementptr inbounds i16, i16* %107, i64 %147
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3"* nonnull %145, i16* %148) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %126) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %108) #9
  %149 = icmp eq %"class.WTF::StringImpl"* %106, null
  br i1 %149, label %180, label %150

150:                                              ; preds = %139
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = load atomic i32, i32* %151 monotonic, align 4
  %153 = and i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %156 = load i32, i32* %155, align 4
  br i1 %154, label %157, label %167

157:                                              ; preds = %150
  %158 = zext i32 %156 to i33
  %159 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %158, i33 1) #9
  %160 = extractvalue { i33, i1 } %159, 1
  %161 = extractvalue { i33, i1 } %159, 0
  %162 = icmp slt i33 %161, 0
  %163 = or i1 %160, %162
  br i1 %163, label %164, label %165, !prof !3

164:                                              ; preds = %157
  call void @llvm.trap() #9
  unreachable

165:                                              ; preds = %157
  %166 = trunc i33 %161 to i32
  store i32 %166, i32* %155, align 4
  br label %167

167:                                              ; preds = %150, %165
  %168 = phi i32 [ %166, %165 ], [ %156, %150 ]
  %169 = ptrtoint %"class.WTF::StringImpl"* %106 to i64
  %170 = load atomic i32, i32* %151 monotonic, align 4
  %171 = and i32 %170, 2
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %176

173:                                              ; preds = %167
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %175 = add i32 %168, -1
  store i32 %175, i32* %174, align 4
  br label %176

176:                                              ; preds = %173, %167
  %177 = phi i32 [ %175, %173 ], [ %168, %167 ]
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %180

179:                                              ; preds = %176
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %106) #9
  br label %180

180:                                              ; preds = %179, %176, %139, %102, %99, %62
  %181 = phi i8* [ %27, %62 ], [ %27, %99 ], [ %27, %102 ], [ %104, %139 ], [ %104, %176 ], [ %104, %179 ]
  %182 = phi i64 [ 0, %62 ], [ %92, %99 ], [ %92, %102 ], [ 0, %139 ], [ %169, %176 ], [ %169, %179 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %181) #9
  %183 = inttoptr i64 %182 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %183
}

; Function Attrs: nounwind
declare void @_ZN5blink18LayoutThemeDefaultD2Ev(%"class.blink::LayoutThemeDefault"*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16LayoutThemeLinuxD0Ev(%"class.blink::LayoutThemeLinux"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutThemeLinux", %"class.blink::LayoutThemeLinux"* %0, i64 0, i32 0
  tail call void @_ZN5blink18LayoutThemeDefaultD2Ev(%"class.blink::LayoutThemeDefault"* %2) #9
  %3 = bitcast %"class.blink::LayoutThemeLinux"* %0 to i8*
  tail call void @free(i8* %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::ThemePainter"* @_ZN5blink18LayoutThemeDefault7PainterEv(%"class.blink::LayoutThemeDefault"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutThemeDefault", %"class.blink::LayoutThemeDefault"* %0, i64 0, i32 1, i32 0
  ret %"class.blink::ThemePainter"* %2
}

declare %"class.WTF::StringImpl"* @_ZN5blink18LayoutThemeDefault21ExtraQuirksStyleSheetEv(%"class.blink::LayoutThemeDefault"*) unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN5blink11LayoutTheme25ExtraFullscreenStyleSheetEv(%"class.blink::LayoutTheme"*) unnamed_addr #3

declare zeroext i1 @_ZNK5blink11LayoutTheme15IsControlStyledENS_11ControlPartERKNS_13ComputedStyleE(%"class.blink::LayoutTheme"*, i32, %"class.blink::ComputedStyle"*) unnamed_addr #3

declare zeroext i1 @_ZNK5blink11LayoutTheme22SupportsCalendarPickerERKN3WTF12AtomicStringE(%"class.blink::LayoutTheme"*, %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #3

declare void @_ZN5blink18LayoutThemeDefault18SetSelectionColorsENS_5ColorES1_S1_S1_(%"class.blink::LayoutThemeDefault"*, i32, i32, i32, i32) unnamed_addr #3

declare i32 @_ZNK5blink11LayoutTheme36PlatformSpellingMarkerUnderlineColorEv(%"class.blink::LayoutTheme"*) unnamed_addr #3

declare i32 @_ZNK5blink11LayoutTheme35PlatformGrammarMarkerUnderlineColorEv(%"class.blink::LayoutTheme"*) unnamed_addr #3

declare i32 @_ZNK5blink11LayoutTheme14FocusRingColorENS_5mojom11ColorSchemeE(%"class.blink::LayoutTheme"*, i32) unnamed_addr #3

declare i32 @_ZNK5blink18LayoutThemeDefault22PlatformFocusRingColorEv(%"class.blink::LayoutThemeDefault"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink18LayoutThemeDefault25PlatformTapHighlightColorEv(%"class.blink::LayoutThemeDefault"*) unnamed_addr #0 comdat align 2 {
  ret i32 771751936
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink11LayoutTheme41PlatformDefaultCompositionBackgroundColorEv(%"class.blink::LayoutTheme"*) unnamed_addr #0 comdat align 2 {
  ret i32 -8875
}

declare void @_ZN5blink11LayoutTheme20ColorSchemeDidChangeEv(%"class.blink::LayoutTheme"*) unnamed_addr #3

declare i64 @_ZNK5blink11LayoutTheme18CaretBlinkIntervalEv(%"class.blink::LayoutTheme"*) unnamed_addr #3

declare i32 @_ZNK5blink11LayoutTheme11SystemColorENS_10CSSValueIDENS_5mojom11ColorSchemeE(%"class.blink::LayoutTheme"*, i32, i32) unnamed_addr #3

declare void @_ZNK5blink18LayoutThemeDefault21AdjustSliderThumbSizeERNS_13ComputedStyleE(%"class.blink::LayoutThemeDefault"*, %"class.blink::ComputedStyle"*) unnamed_addr #3

declare i32 @_ZNK5blink18LayoutThemeDefault25PopupInternalPaddingStartERKNS_13ComputedStyleE(%"class.blink::LayoutThemeDefault"*, %"class.blink::ComputedStyle"*) unnamed_addr #3

declare i32 @_ZNK5blink18LayoutThemeDefault23PopupInternalPaddingEndEPNS_10LocalFrameERKNS_13ComputedStyleE(%"class.blink::LayoutThemeDefault"*, %"class.blink::LocalFrame"*, %"class.blink::ComputedStyle"*) unnamed_addr #3

declare i32 @_ZNK5blink18LayoutThemeDefault23PopupInternalPaddingTopERKNS_13ComputedStyleE(%"class.blink::LayoutThemeDefault"*, %"class.blink::ComputedStyle"*) unnamed_addr #3

declare i32 @_ZNK5blink18LayoutThemeDefault26PopupInternalPaddingBottomERKNS_13ComputedStyleE(%"class.blink::LayoutThemeDefault"*, %"class.blink::ComputedStyle"*) unnamed_addr #3

declare i64 @_ZNK5blink18LayoutThemeDefault14SliderTickSizeEv(%"class.blink::LayoutThemeDefault"*) unnamed_addr #3

declare i32 @_ZNK5blink18LayoutThemeDefault31SliderTickOffsetFromTrackCenterEv(%"class.blink::LayoutThemeDefault"*) unnamed_addr #3

declare zeroext i1 @_ZNK5blink11LayoutTheme26DelegatesMenuListRenderingEv(%"class.blink::LayoutTheme"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11LayoutTheme19PopsMenuByArrowKeysEv(%"class.blink::LayoutTheme"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11LayoutTheme19PopsMenuByReturnKeyEv(%"class.blink::LayoutTheme"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare %"class.WTF::StringImpl"* @_ZNK5blink11LayoutTheme18DisplayNameForFileERKNS_4FileE(%"class.blink::LayoutTheme"*, %"class.blink::File"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11LayoutTheme33SupportsSelectionForegroundColorsEv(%"class.blink::LayoutTheme"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare void @_ZN5blink11LayoutTheme22AdjustControlPartStyleERNS_13ComputedStyleE(%"class.blink::LayoutTheme"*, %"class.blink::ComputedStyle"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11LayoutTheme23IsAccentColorCustomizedENS_5mojom11ColorSchemeE(%"class.blink::LayoutTheme"*, i32) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink11LayoutTheme14GetAccentColorENS_5mojom11ColorSchemeE(%"class.blink::LayoutTheme"*, i32) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

declare i32 @_ZNK5blink18LayoutThemeDefault38PlatformActiveSelectionBackgroundColorENS_5mojom11ColorSchemeE(%"class.blink::LayoutThemeDefault"*, i32) unnamed_addr #3

declare i32 @_ZNK5blink18LayoutThemeDefault40PlatformInactiveSelectionBackgroundColorENS_5mojom11ColorSchemeE(%"class.blink::LayoutThemeDefault"*, i32) unnamed_addr #3

declare i32 @_ZNK5blink18LayoutThemeDefault38PlatformActiveSelectionForegroundColorENS_5mojom11ColorSchemeE(%"class.blink::LayoutThemeDefault"*, i32) unnamed_addr #3

declare i32 @_ZNK5blink18LayoutThemeDefault40PlatformInactiveSelectionForegroundColorENS_5mojom11ColorSchemeE(%"class.blink::LayoutThemeDefault"*, i32) unnamed_addr #3

declare i32 @_ZNK5blink11LayoutTheme45PlatformActiveListBoxSelectionBackgroundColorENS_5mojom11ColorSchemeE(%"class.blink::LayoutTheme"*, i32) unnamed_addr #3

declare i32 @_ZNK5blink11LayoutTheme47PlatformInactiveListBoxSelectionBackgroundColorENS_5mojom11ColorSchemeE(%"class.blink::LayoutTheme"*, i32) unnamed_addr #3

declare i32 @_ZNK5blink11LayoutTheme45PlatformActiveListBoxSelectionForegroundColorENS_5mojom11ColorSchemeE(%"class.blink::LayoutTheme"*, i32) unnamed_addr #3

declare i32 @_ZNK5blink11LayoutTheme47PlatformInactiveListBoxSelectionForegroundColorENS_5mojom11ColorSchemeE(%"class.blink::LayoutTheme"*, i32) unnamed_addr #3

declare void @_ZNK5blink11LayoutTheme19AdjustCheckboxStyleERNS_13ComputedStyleE(%"class.blink::LayoutTheme"*, %"class.blink::ComputedStyle"*) unnamed_addr #3

declare void @_ZNK5blink18LayoutThemeDefault15SetCheckboxSizeERNS_13ComputedStyleE(%"class.blink::LayoutThemeDefault"*, %"class.blink::ComputedStyle"*) unnamed_addr #3

declare void @_ZNK5blink11LayoutTheme16AdjustRadioStyleERNS_13ComputedStyleE(%"class.blink::LayoutTheme"*, %"class.blink::ComputedStyle"*) unnamed_addr #3

declare void @_ZNK5blink18LayoutThemeDefault12SetRadioSizeERNS_13ComputedStyleE(%"class.blink::LayoutThemeDefault"*, %"class.blink::ComputedStyle"*) unnamed_addr #3

declare void @_ZNK5blink18LayoutThemeDefault17AdjustButtonStyleERNS_13ComputedStyleE(%"class.blink::LayoutThemeDefault"*, %"class.blink::ComputedStyle"*) unnamed_addr #3

declare void @_ZNK5blink18LayoutThemeDefault26AdjustInnerSpinButtonStyleERNS_13ComputedStyleE(%"class.blink::LayoutThemeDefault"*, %"class.blink::ComputedStyle"*) unnamed_addr #3

declare void @_ZNK5blink18LayoutThemeDefault19AdjustMenuListStyleERNS_13ComputedStyleE(%"class.blink::LayoutThemeDefault"*, %"class.blink::ComputedStyle"*) unnamed_addr #3

declare void @_ZNK5blink18LayoutThemeDefault25AdjustMenuListButtonStyleERNS_13ComputedStyleE(%"class.blink::LayoutThemeDefault"*, %"class.blink::ComputedStyle"*) unnamed_addr #3

declare void @_ZNK5blink11LayoutTheme26AdjustSliderContainerStyleERKNS_7ElementERNS_13ComputedStyleE(%"class.blink::LayoutTheme"*, %"class.blink::Element"*, %"class.blink::ComputedStyle"*) unnamed_addr #3

declare void @_ZNK5blink11LayoutTheme22AdjustSliderThumbStyleERNS_13ComputedStyleE(%"class.blink::LayoutTheme"*, %"class.blink::ComputedStyle"*) unnamed_addr #3

declare void @_ZNK5blink18LayoutThemeDefault22AdjustSearchFieldStyleERNS_13ComputedStyleE(%"class.blink::LayoutThemeDefault"*, %"class.blink::ComputedStyle"*) unnamed_addr #3

declare void @_ZNK5blink18LayoutThemeDefault34AdjustSearchFieldCancelButtonStyleERNS_13ComputedStyleE(%"class.blink::LayoutThemeDefault"*, %"class.blink::ComputedStyle"*) unnamed_addr #3

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #6

declare void @_ZN5blink18LayoutThemeDefaultC2Ev(%"class.blink::LayoutThemeDefault"*) unnamed_addr #3

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_(%"class.WTF::StringAppend"*, %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %4, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %23

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i33
  %15 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %14, i33 1) #9
  %16 = extractvalue { i33, i1 } %15, 1
  %17 = extractvalue { i33, i1 } %15, 0
  %18 = icmp slt i33 %17, 0
  %19 = or i1 %16, %18
  br i1 %19, label %20, label %21, !prof !3

20:                                               ; preds = %11
  tail call void @llvm.trap() #9
  unreachable

21:                                               ; preds = %11
  %22 = trunc i33 %17 to i32
  store i32 %22, i32* %12, align 4
  br label %23

23:                                               ; preds = %3, %6, %21
  %24 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %24, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %25, label %55, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %43

33:                                               ; preds = %26
  %34 = zext i32 %32 to i33
  %35 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #9
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !3

40:                                               ; preds = %33
  tail call void @llvm.trap() #9
  unreachable

41:                                               ; preds = %33
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %31, align 4
  br label %43

43:                                               ; preds = %26, %41
  %44 = phi i32 [ %42, %41 ], [ %32, %26 ]
  %45 = load atomic i32, i32* %27 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %50 = add i32 %44, -1
  store i32 %50, i32* %49, align 4
  br label %51

51:                                               ; preds = %48, %43
  %52 = phi i32 [ %50, %48 ], [ %44, %43 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #9
  br label %55

55:                                               ; preds = %23, %51, %54
  br i1 %5, label %69, label %56

56:                                               ; preds = %55
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #9
  br label %69

69:                                               ; preds = %55, %65, %68
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  br label %14

14:                                               ; preds = %1, %11
  %15 = phi i32 [ %13, %11 ], [ 0, %1 ]
  %16 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  br label %22

22:                                               ; preds = %14, %19
  %23 = phi i32 [ %21, %19 ], [ 0, %14 ]
  %24 = add i32 %23, %15
  %25 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #9
  %26 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %26, align 8
  %27 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27)
  %28 = icmp ult i32 %24, %15
  br i1 %28, label %30, label %29

29:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  store i8* null, i8** %26, align 8
  br label %39

30:                                               ; preds = %22
  %31 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %24) #9
  %32 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %15) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str, i64 0, i64 0), i8* %31, i8* %32) #9
  %33 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %34 = load i8*, i8** %33, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  store i8* %34, i8** %26, align 8
  %35 = icmp eq i8* %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %30
  %37 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #9
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #9
  br label %39

39:                                               ; preds = %29, %30, %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #9
  %40 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #9
  %41 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %41, align 8
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp ult i32 %24, %23
  br i1 %43, label %45, label %44

44:                                               ; preds = %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %41, align 8
  br label %54

45:                                               ; preds = %39
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %24) #9
  %47 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2, i64 0, i64 0), i8* %46, i8* %47) #9
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %41, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #9
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #9
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #9
  ret i32 %24
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.3"*, i8*) local_unnamed_addr #3

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3"*, i16*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{!"branch_weights", i32 1, i32 2000}
