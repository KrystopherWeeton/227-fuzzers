; ModuleID = '../../third_party/blink/renderer/bindings/core/v8/source_location.cc'
source_filename = "../../third_party/blink/renderer/bindings/core/v8/source_location.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::SourceLocation" = type <{ %"class.WTF::String", i32, i32, %"class.std::__1::unique_ptr.1", i32, [4 x i8] }>
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.v8_inspector::V8StackTrace"* }
%"class.v8_inspector::V8StackTrace" = type { i32 (...)** }
%"class.v8::Isolate" = type { i8 }
%"class.blink::ThreadDebugger" = type { %"class.v8_inspector::V8InspectorClient", %"class.blink::V8PerIsolateData::Data", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.1577", %"class.WTF::Vector.1583", %"class.WTF::Vector.1589", %"class.WTF::Vector.1594" }
%"class.v8_inspector::V8InspectorClient" = type { i32 (...)** }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1577" = type { %"class.std::__1::__compressed_pair.1578" }
%"class.std::__1::__compressed_pair.1578" = type { %"struct.std::__1::__compressed_pair_elem.1579" }
%"struct.std::__1::__compressed_pair_elem.1579" = type { %"class.v8_inspector::V8Inspector"* }
%"class.v8_inspector::V8Inspector" = type { i32 (...)** }
%"class.WTF::Vector.1583" = type { %"class.WTF::VectorBuffer.1584" }
%"class.WTF::VectorBuffer.1584" = type { %"class.WTF::VectorBufferBase.1585" }
%"class.WTF::VectorBufferBase.1585" = type { %"class.std::__1::unique_ptr.1586"*, i32, i32 }
%"class.std::__1::unique_ptr.1586" = type opaque
%"class.WTF::Vector.1589" = type { %"class.WTF::VectorBuffer.1590" }
%"class.WTF::VectorBuffer.1590" = type { %"class.WTF::VectorBufferBase.1591" }
%"class.WTF::VectorBufferBase.1591" = type { void (i8*)**, i32, i32 }
%"class.WTF::Vector.1594" = type { %"class.WTF::VectorBuffer.1595" }
%"class.WTF::VectorBuffer.1595" = type { %"class.WTF::VectorBufferBase.1596" }
%"class.WTF::VectorBufferBase.1596" = type { i8**, i32, i32 }
%"class.v8_inspector::StringView" = type { i8, i64, %union.anon.1603 }
%union.anon.1603 = type { i8* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.59", i32, i8, [3 x i8], %"class.blink::HeapVector", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.65", %"class.blink::Member.67", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.76", %"class.blink::Member.217", %"class.blink::Member.219", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.12" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.10" }
%"class.WTF::HashTable.10" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::Supplementable.12" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.13" }
%"class.blink::HeapHashMap.13" = type { %"class.WTF::HashMap.16" }
%"class.WTF::HashMap.16" = type { %"class.WTF::HashTable.17" }
%"class.WTF::HashTable.17" = type <{ %"struct.WTF::KeyValuePair.19"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.19" = type { i8*, %"class.blink::Member.1633" }
%"class.blink::Member.1633" = type { %"class.blink::MemberBase.1634" }
%"class.blink::MemberBase.1634" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1635" }
%"class.blink::Member.1635" = type { %"class.blink::MemberBase.1636" }
%"class.blink::MemberBase.1636" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.20, %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50", %"class.blink::Member", i32, [4 x i8], %"class.WTF::HashSet.56", i32, i32 }
%class.scoped_refptr.20 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.21 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.21 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.37", %"class.std::__1::map.46"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.27 }
%union.anon.27 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.29", %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { i64 }
%"class.std::__1::map.37" = type { %"class.std::__1::__tree.38" }
%"class.std::__1::__tree.38" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.39", %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::map.46" = type opaque
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.56" = type { %"class.WTF::HashTable.57" }
%"class.WTF::HashTable.57" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.59" = type { %"class.blink::MemberBase.60" }
%"class.blink::MemberBase.60" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member.63"*, i32, i32 }
%"class.blink::Member.63" = type opaque
%"class.blink::Member.65" = type { %"class.blink::MemberBase.66" }
%"class.blink::MemberBase.66" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.67" = type { %"class.blink::MemberBase.68" }
%"class.blink::MemberBase.68" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.69", i32, i32 }
%"class.blink::HeapHashMap.69" = type { %"class.WTF::HashMap.72" }
%"class.WTF::HashMap.72" = type { %"class.WTF::HashTable.73" }
%"class.WTF::HashTable.73" = type <{ %"struct.WTF::KeyValuePair.75"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.75" = type opaque
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.79" }
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.82" }
%"class.WTF::Vector.82" = type { %"class.WTF::VectorBuffer.83" }
%"class.WTF::VectorBuffer.83" = type { %"class.WTF::VectorBufferBase.84" }
%"class.WTF::VectorBufferBase.84" = type { %"class.mojo::StructPtr.85"*, i32, i32 }
%"class.mojo::StructPtr.85" = type { %"class.std::__1::unique_ptr.86" }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.89", %"class.WTF::HashMap.96", %"class.WTF::HashMap.101", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.106", i32, %"class.mojo::StructPtr.111", %"class.WTF::Vector.106" }
%"class.mojo::StructPtr.89" = type { %"class.std::__1::unique_ptr.90" }
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.96" = type { %"class.WTF::HashTable.97" }
%"class.WTF::HashTable.97" = type <{ %"struct.WTF::KeyValuePair.100"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.100" = type opaque
%"class.WTF::HashMap.101" = type { %"class.WTF::HashTable.102" }
%"class.WTF::HashTable.102" = type <{ %"struct.WTF::KeyValuePair.105"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.105" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.111" = type { %"class.std::__1::unique_ptr.112" }
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.106", i8, i8, [6 x i8] }>
%"class.WTF::Vector.106" = type { %"class.WTF::VectorBuffer.107" }
%"class.WTF::VectorBuffer.107" = type { %"class.WTF::VectorBufferBase.108" }
%"class.WTF::VectorBufferBase.108" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.208" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.126", i32 }>
%"class.std::__1::unique_ptr.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback", %"class.absl::optional.135", %"class.absl::optional.140", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.161", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.183", %"class.std::__1::map.194", i64, %"class.base::OnceCallback.154", %"class.base::OnceCallback.203", i8, %class.scoped_refptr.145, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.204" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.129 }
%class.scoped_refptr.129 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.130" }
%"struct.std::__1::atomic.130" = type { %"struct.std::__1::__atomic_base.131" }
%"struct.std::__1::__atomic_base.131" = type { %"struct.std::__1::__atomic_base.132" }
%"struct.std::__1::__atomic_base.132" = type { %"struct.std::__1::__cxx_atomic_impl.133" }
%"struct.std::__1::__cxx_atomic_impl.133" = type { %"struct.std::__1::__cxx_atomic_base_impl.134" }
%"struct.std::__1::__cxx_atomic_base_impl.134" = type { i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.135" = type { %"class.absl::optional_internal::optional_data.136" }
%"class.absl::optional_internal::optional_data.136" = type { %"class.absl::optional_internal::optional_data_base.137" }
%"class.absl::optional_internal::optional_data_base.137" = type { %"class.absl::optional_internal::optional_data_dtor_base.138" }
%"class.absl::optional_internal::optional_data_dtor_base.138" = type { i8, %union.anon.139 }
%union.anon.139 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.140" = type { %"class.absl::optional_internal::optional_data.141" }
%"class.absl::optional_internal::optional_data.141" = type { %"class.absl::optional_internal::optional_data_base.142" }
%"class.absl::optional_internal::optional_data_base.142" = type { %"class.absl::optional_internal::optional_data_dtor_base.143" }
%"class.absl::optional_internal::optional_data_dtor_base.143" = type { i8, %union.anon.144 }
%union.anon.144 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback.154" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.145, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.147 }
%class.scoped_refptr.147 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.148", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.148" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.149" }
%"struct.std::__1::atomic.149" = type { %"struct.std::__1::__atomic_base.150" }
%"struct.std::__1::__atomic_base.150" = type { %"struct.std::__1::__atomic_base.151" }
%"struct.std::__1::__atomic_base.151" = type { %"struct.std::__1::__cxx_atomic_impl.152" }
%"struct.std::__1::__cxx_atomic_impl.152" = type { %"struct.std::__1::__cxx_atomic_base_impl.153" }
%"struct.std::__1::__cxx_atomic_base_impl.153" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.159 }
%class.scoped_refptr.159 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.221", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.145, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.221" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.160 }
%class.scoped_refptr.160 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.164", %class.scoped_refptr.165 }
%"class.base::RepeatingCallback.164" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.165 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.166", [4 x i8] }>
%"class.base::RefCountedThreadSafe.166" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.170", %"class.std::__1::unique_ptr.176", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.182" }
%"class.std::__1::unique_ptr.170" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.176" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.182" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.183" = type { %"class.std::__1::__tree.184" }
%"class.std::__1::__tree.184" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.185", %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::map.194" = type { %"class.std::__1::__tree.195" }
%"class.std::__1::__tree.195" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.196", %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.base::OnceCallback.154" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.203" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.145 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.146" }>
%"class.base::RefCountedThreadSafe.146" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback.154" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.204" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.217" = type { %"class.blink::MemberBase.218" }
%"class.blink::MemberBase.218" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.219" = type { %"class.blink::MemberBase.220" }
%"class.blink::MemberBase.220" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::LocalDOMWindow" = type { %"class.blink::DOMWindow", %"class.blink::ExecutionContext.base", %"class.blink::Supplementable.359", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.367", %"class.blink::Member.369", %"class.blink::Member.371", i8, %"class.blink::Member.373", %"class.blink::Member.375", %"class.blink::Member.377", %"class.blink::Member.377", %"class.blink::Member.377", %"class.blink::Member.377", %"class.blink::Member.377", %"class.blink::Member.377", %"class.blink::Member.379", %"class.blink::Member.381", %"class.blink::Member.383", %"class.blink::Member.385", %"class.blink::Member.387", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.106", %"class.blink::Member.389", %class.scoped_refptr.391, %"class.blink::HeapHashSet.453", %"class.blink::Member.460", %"class.blink::HeapHashMap.473", %"class.std::__1::unique_ptr.480", %"class.blink::Member.492", %"class.blink::Member.521", %"class.blink::Member.531", %"class.blink::Member.537", %"class.WTF::Vector.540", %"class.util::TokenType", %"class.WTF::HashSet.545", %"class.WTF::Deque" }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.244", %"class.blink::Member.246", %"class.blink::Member.248", %"class.blink::Member.250", i8, %"class.WTF::Vector.252" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.237" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.226" }
%"class.blink::HeapVector.226" = type { %"class.WTF::Vector.229" }
%"class.WTF::Vector.229" = type { %"class.WTF::VectorBuffer.230" }
%"class.WTF::VectorBuffer.230" = type { %"class.WTF::VectorBufferBase.231", [32 x i8] }
%"class.WTF::VectorBufferBase.231" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member.232" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::Member.232" = type { %"class.blink::MemberBase.233" }
%"class.blink::MemberBase.233" = type { %"class.blink::HeapVector.234"* }
%"class.blink::HeapVector.234" = type opaque
%"class.std::__1::unique_ptr.237" = type { %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"class.WTF::Vector.240"* }
%"class.WTF::Vector.240" = type opaque
%"class.blink::Member.244" = type { %"class.blink::MemberBase.245" }
%"class.blink::MemberBase.245" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.654", %"class.blink::Member.656", %"class.blink::Member.658", i8, i32, i8, i32, %"class.blink::Member.660", %"class.blink::Member.246", %"class.blink::FrameLifecycle", %"class.blink::Member.244", %"class.blink::Member.244", %"class.blink::Member.244", %"class.blink::Member.244", %"class.blink::Member.244", %"class.blink::Member.244", %"class.blink::Member.498", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.668", i8, %"class.base::UnguessableToken", %"class.absl::optional.670", %"class.absl::optional.675", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.244", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.654" = type { %"class.blink::MemberBase.655" }
%"class.blink::MemberBase.655" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.656" = type { %"class.blink::MemberBase.657" }
%"class.blink::MemberBase.657" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.658" = type { %"class.blink::MemberBase.659" }
%"class.blink::MemberBase.659" = type { %"class.blink::DOMWindow"* }
%"class.blink::Member.660" = type { %"class.blink::MemberBase.661" }
%"class.blink::MemberBase.661" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.498" = type { %"class.blink::MemberBase.499" }
%"class.blink::MemberBase.499" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.688", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.696", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.704", %"class.blink::FrameLoader", %"class.blink::Member.731", %"class.blink::Member.570", %"class.blink::Member.733", %"class.blink::Member.735", %"class.blink::Member.737", %"class.blink::Member.739", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.741", %class.scoped_refptr.743, %"class.blink::Member.744", %"class.blink::Member.746", %"class.blink::Member.748", %"class.blink::Member.750", %"class.blink::Member.752", %"class.blink::Member.754", %"class.blink::Member.756", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote.758", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.761", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.767", %"class.std::__1::unique_ptr.768", %"class.absl::optional.675", i32, [4 x i8], %"class.std::__1::unique_ptr.774", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.782", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.787", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.792", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.795", %"class.blink::Member.797", %"class.blink::Member.799", %"class.blink::Member.801", %"class.mojo::StructPtr.804", %"class.blink::Member.813", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.815", i8, [7 x i8] }>
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.688" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.689" }
%"class.blink::HeapHashMap.689" = type { %"class.WTF::HashMap.692" }
%"class.WTF::HashMap.692" = type { %"class.WTF::HashTable.693" }
%"class.WTF::HashTable.693" = type <{ %"struct.WTF::KeyValuePair.695"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.695" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.696" = type { %"class.std::__1::__compressed_pair.697" }
%"class.std::__1::__compressed_pair.697" = type { %"struct.std::__1::__compressed_pair_elem.698" }
%"struct.std::__1::__compressed_pair_elem.698" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.483", %"class.base::WeakPtrFactory.488" }
%"class.WTF::HashMap.483" = type { %"class.WTF::HashTable.484" }
%"class.WTF::HashTable.484" = type <{ %"struct.WTF::KeyValuePair.487"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.487" = type opaque
%"class.base::WeakPtrFactory.488" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.702" }
%"class.blink::Member.702" = type { %"class.blink::MemberBase.703" }
%"class.blink::MemberBase.703" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.496" }
%"class.blink::WeakMember.496" = type { %"class.blink::MemberBase.497" }
%"class.blink::MemberBase.497" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.1645", i64, %"class.std::__1::map.1646", i8*, i64, %"class.base::WeakPtrFactory.1655" }
%"class.base::RepeatingCallback.1645" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.1646" = type { %"class.std::__1::__tree.1647" }
%"class.std::__1::__tree.1647" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1648", %"class.std::__1::__compressed_pair.1652" }
%"class.std::__1::__compressed_pair.1648" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.1652" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.base::WeakPtrFactory.1655" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.704" = type { %"class.WTF::HashSet.707" }
%"class.WTF::HashSet.707" = type { %"class.WTF::HashTable.708" }
%"class.WTF::HashTable.708" = type <{ %"class.blink::WeakMember.710"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.710" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.498", %"class.blink::Member.711", %"class.blink::Member.713", %"class.std::__1::unique_ptr.715", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.727" }
%"class.blink::Member.711" = type { %"class.blink::MemberBase.712" }
%"class.blink::MemberBase.712" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.713" = type { %"class.blink::MemberBase.714" }
%"class.blink::MemberBase.714" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.715" = type { %"class.std::__1::__compressed_pair.716" }
%"class.std::__1::__compressed_pair.716" = type { %"struct.std::__1::__compressed_pair_elem.717" }
%"struct.std::__1::__compressed_pair_elem.717" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.718" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.718" = type { %"class.std::__1::__compressed_pair.719" }
%"class.std::__1::__compressed_pair.719" = type { %"struct.std::__1::__compressed_pair_elem.720" }
%"struct.std::__1::__compressed_pair_elem.720" = type { %"class.blink::KURL"* }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.WTF::HashSet.727" = type { %"class.WTF::HashTable.728" }
%"class.WTF::HashTable.728" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.731" = type { %"class.blink::MemberBase.732" }
%"class.blink::MemberBase.732" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.822", %"class.blink::Member.498", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer", i8, i32, %"class.blink::Color", %"class.absl::optional.830", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.835", %"class.blink::Member.837", %"class.blink::Member.837", %"class.std::__1::unique_ptr.840", i32, [4 x i8], %"class.WTF::HashSet.843", %"class.blink::Member.850", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.852", %"class.blink::HeapHashSet.859", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.867", i8, %"class.blink::Member.873", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.885", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.899", i8, %"class.std::__1::unique_ptr.905", %"class.std::__1::unique_ptr.1022", %"class.WTF::Vector.1028", i32, %class.scoped_refptr.1033, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1034", %"class.blink::Member.1036", %"class.blink::Member.1038", %"class.blink::HeapHashSet.1040", %"class.blink::HeapHashSet.1047", %"class.std::__1::unique_ptr.1054", %"class.std::__1::unique_ptr.1061", %"class.WTF::Vector.1072" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.822" = type { %"class.WTF::HashTable.823" }
%"class.WTF::HashTable.823" = type <{ %class.scoped_refptr.826*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.826 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.829", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.827, %"class.base::WeakPtrFactory.828" }
%class.scoped_refptr.827 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory.828" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.829" = type { %"class.blink::MemberBase.732" }
%"class.blink::Color" = type { i32 }
%"class.absl::optional.830" = type { %"class.absl::optional_internal::optional_data.831" }
%"class.absl::optional_internal::optional_data.831" = type { %"class.absl::optional_internal::optional_data_base.832" }
%"class.absl::optional_internal::optional_data_base.832" = type { %"class.absl::optional_internal::optional_data_dtor_base.833" }
%"class.absl::optional_internal::optional_data_dtor_base.833" = type { i8, %union.anon.834 }
%union.anon.834 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.835" = type { %"class.blink::MemberBase.836" }
%"class.blink::MemberBase.836" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.837" = type { %"class.blink::MemberBase.838" }
%"class.blink::MemberBase.838" = type { %"class.blink::HeapHashSet.839"* }
%"class.blink::HeapHashSet.839" = type opaque
%"class.std::__1::unique_ptr.840" = type { %"class.std::__1::__compressed_pair.841" }
%"class.std::__1::__compressed_pair.841" = type { %"struct.std::__1::__compressed_pair_elem.842" }
%"struct.std::__1::__compressed_pair_elem.842" = type { %"class.WTF::HashSet.843"* }
%"class.WTF::HashSet.843" = type { %"class.WTF::HashTable.844" }
%"class.WTF::HashTable.844" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.850" = type { %"class.blink::MemberBase.851" }
%"class.blink::MemberBase.851" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.852" = type { %"class.WTF::HashSet.855" }
%"class.WTF::HashSet.855" = type { %"class.WTF::HashTable.856" }
%"class.WTF::HashTable.856" = type <{ %"class.blink::Member.858"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.858" = type opaque
%"class.blink::HeapHashSet.859" = type { %"class.WTF::HashSet.862" }
%"class.WTF::HashSet.862" = type { %"class.WTF::HashTable.863" }
%"class.WTF::HashTable.863" = type <{ %"class.blink::Member.865"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.865" = type { %"class.blink::MemberBase.866" }
%"class.blink::MemberBase.866" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1100", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1111", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.570" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::Member.1100" = type { %"class.blink::MemberBase.1101" }
%"class.blink::MemberBase.1101" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.1102", %"class.blink::Member.1103", %"class.blink::Member.1105", %"class.blink::Member.1107", %"class.blink::Member.1109", %"class.WTF::Vector.1072", i16, %class.scoped_refptr.827 }
%"class.blink::ThreadState::PrefinalizerRegistration.1102" = type { i8 }
%"class.blink::Member.1103" = type { %"class.blink::MemberBase.1104" }
%"class.blink::MemberBase.1104" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.1105" = type { %"class.blink::MemberBase.1106" }
%"class.blink::MemberBase.1106" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.1107" = type { %"class.blink::MemberBase.1108" }
%"class.blink::MemberBase.1108" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.1109" = type { %"class.blink::MemberBase.1110" }
%"class.blink::MemberBase.1110" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type opaque
%"class.blink::HeapTaskRunnerTimer.1111" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1112", { i64, i64 } }
%"class.blink::WeakMember.1112" = type { %"class.blink::MemberBase.866" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.867" = type { %"class.std::__1::__compressed_pair.868" }
%"class.std::__1::__compressed_pair.868" = type { %"struct.std::__1::__compressed_pair_elem.869" }
%"struct.std::__1::__compressed_pair_elem.869" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.873" = type { %"class.blink::MemberBase.874" }
%"class.blink::MemberBase.874" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.877", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.877" = type { %"class.WTF::HashTable.878" }
%"class.WTF::HashTable.878" = type <{ %"struct.WTF::KeyValuePair.880"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.880" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.881", i32, i32 }
%"class.WTF::Vector.881" = type { %"class.WTF::VectorBuffer.882" }
%"class.WTF::VectorBuffer.882" = type { %"class.WTF::VectorBufferBase.883" }
%"class.WTF::VectorBufferBase.883" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.885" = type { %"class.WTF::LinkedHashSet.888" }
%"class.WTF::LinkedHashSet.888" = type { %"class.WTF::HashMap.889", %"class.WTF::VectorBackedLinkedList.893" }
%"class.WTF::HashMap.889" = type { %"class.WTF::HashTable.890" }
%"class.WTF::HashTable.890" = type <{ %"struct.WTF::KeyValuePair.892"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.892" = type opaque
%"class.WTF::VectorBackedLinkedList.893" = type { %"class.WTF::Vector.894", i32, i32 }
%"class.WTF::Vector.894" = type { %"class.WTF::VectorBuffer.895" }
%"class.WTF::VectorBuffer.895" = type { %"class.WTF::VectorBufferBase.896" }
%"class.WTF::VectorBufferBase.896" = type { %"class.WTF::VectorBackedLinkedListNode.897"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.897" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.899" = type { %"class.std::__1::__compressed_pair.900" }
%"class.std::__1::__compressed_pair.900" = type { %"struct.std::__1::__compressed_pair_elem.901" }
%"struct.std::__1::__compressed_pair_elem.901" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.905" = type { %"class.std::__1::__compressed_pair.906" }
%"class.std::__1::__compressed_pair.906" = type { %"struct.std::__1::__compressed_pair_elem.907" }
%"struct.std::__1::__compressed_pair_elem.907" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.908, %class.scoped_refptr.908, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.999", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1004", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.908 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.909", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.916" }
%"class.WTF::RefCounted.909" = type { %"class.base::RefCounted.910" }
%"class.base::RefCounted.910" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.911", i32, [4 x i8] }>
%"class.WTF::Vector.911" = type { %"class.WTF::VectorBuffer.912" }
%"class.WTF::VectorBuffer.912" = type { %"class.WTF::VectorBufferBase.913" }
%"class.WTF::VectorBufferBase.913" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.916" = type { %"class.WTF::VectorBuffer.917" }
%"class.WTF::VectorBuffer.917" = type { %"class.WTF::VectorBufferBase.918" }
%"class.WTF::VectorBufferBase.918" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.922", %"class.std::__1::unique_ptr.971", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.919, %class.scoped_refptr.920, %class.scoped_refptr.921 }
%class.scoped_refptr.919 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.935", i8, i8, %class.scoped_refptr.919, i32, i32 }
%"class.WTF::RefCounted.935" = type { %"class.base::RefCounted.936" }
%"class.base::RefCounted.936" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.920 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1095" }
%"class.blink::PaintPropertyNode.1095" = type { %"class.WTF::RefCounted.1096", i8, i8, %class.scoped_refptr.920, i32, i32 }
%"class.WTF::RefCounted.1096" = type { %"class.base::RefCounted.1097" }
%"class.base::RefCounted.1097" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.921 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1092" }
%"class.blink::PaintPropertyNode.1092" = type { %"class.WTF::RefCounted.1093", i8, i8, %class.scoped_refptr.921, i32, i32 }
%"class.WTF::RefCounted.1093" = type { %"class.base::RefCounted.1094" }
%"class.base::RefCounted.1094" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.922" = type { %"class.std::__1::__compressed_pair.923" }
%"class.std::__1::__compressed_pair.923" = type { %"struct.std::__1::__compressed_pair_elem.924" }
%"struct.std::__1::__compressed_pair_elem.924" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.925", %"class.WTF::Vector.930", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.925" = type { %"class.WTF::VectorBuffer.926" }
%"class.WTF::VectorBuffer.926" = type { %"class.WTF::VectorBufferBase.927" }
%"class.WTF::VectorBufferBase.927" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.930" = type { %"class.WTF::VectorBuffer.931" }
%"class.WTF::VectorBuffer.931" = type { %"class.WTF::VectorBufferBase.932" }
%"class.WTF::VectorBufferBase.932" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.950" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.943, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.944", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.937" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.937" = type { %"class.std::__1::__compressed_pair.938" }
%"class.std::__1::__compressed_pair.938" = type { %"struct.std::__1::__compressed_pair_elem.939" }
%"struct.std::__1::__compressed_pair_elem.939" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.943 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1077", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1077" = type { %"class.WTF::RefCounted.1078", i8, i8, %class.scoped_refptr.943, i32, i32 }
%"class.WTF::RefCounted.1078" = type { %"class.base::RefCounted.1079" }
%"class.base::RefCounted.1079" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1080" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1080" = type { %"class.absl::optional_internal::optional_data.1081" }
%"class.absl::optional_internal::optional_data.1081" = type { %"class.absl::optional_internal::optional_data_base.1082" }
%"class.absl::optional_internal::optional_data_base.1082" = type { %"class.absl::optional_internal::optional_data_dtor_base.1083" }
%"class.absl::optional_internal::optional_data_dtor_base.1083" = type { i8, %union.anon.1084 }
%union.anon.1084 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1085", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1085" = type { %"class.std::__1::__vector_base.1086" }
%"class.std::__1::__vector_base.1086" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1087" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1087" = type { %"struct.std::__1::__compressed_pair_elem.1088" }
%"struct.std::__1::__compressed_pair_elem.1088" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.944" = type { %"class.std::__1::__compressed_pair.945" }
%"class.std::__1::__compressed_pair.945" = type { %"struct.std::__1::__compressed_pair_elem.946" }
%"struct.std::__1::__compressed_pair_elem.946" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.950" = type { %"class.std::__1::__compressed_pair.951" }
%"class.std::__1::__compressed_pair.951" = type { %"struct.std::__1::__compressed_pair_elem.952" }
%"struct.std::__1::__compressed_pair_elem.952" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.953", %"class.std::__1::unique_ptr.959", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.953" = type { %"class.std::__1::__compressed_pair.954" }
%"class.std::__1::__compressed_pair.954" = type { %"struct.std::__1::__compressed_pair_elem.955" }
%"struct.std::__1::__compressed_pair_elem.955" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.959" = type { %"class.std::__1::__compressed_pair.960" }
%"class.std::__1::__compressed_pair.960" = type { %"struct.std::__1::__compressed_pair_elem.961" }
%"struct.std::__1::__compressed_pair_elem.961" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.971" = type { %"class.std::__1::__compressed_pair.972" }
%"class.std::__1::__compressed_pair.972" = type { %"struct.std::__1::__compressed_pair_elem.973" }
%"struct.std::__1::__compressed_pair_elem.973" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.974", %"class.absl::optional.974" }
%"class.absl::optional.974" = type { %"class.absl::optional_internal::optional_data.975" }
%"class.absl::optional_internal::optional_data.975" = type { %"class.absl::optional_internal::optional_data_base.976" }
%"class.absl::optional_internal::optional_data_base.976" = type { %"class.absl::optional_internal::optional_data_dtor_base.977" }
%"class.absl::optional_internal::optional_data_dtor_base.977" = type { i8, [3 x i8], %union.anon.978 }
%union.anon.978 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.916"*, %"class.absl::optional.984", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.984" = type { %"class.absl::optional_internal::optional_data.985" }
%"class.absl::optional_internal::optional_data.985" = type { %"class.absl::optional_internal::optional_data_base.986" }
%"class.absl::optional_internal::optional_data_base.986" = type { %"class.absl::optional_internal::optional_data_dtor_base.987" }
%"class.absl::optional_internal::optional_data_dtor_base.987" = type { i8, %union.anon.988 }
%union.anon.988 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.989", %"class.WTF::Vector.994" }
%"class.WTF::Vector.989" = type { %"class.WTF::VectorBuffer.990" }
%"class.WTF::VectorBuffer.990" = type { %"class.WTF::VectorBufferBase.991", [128 x i8] }
%"class.WTF::VectorBufferBase.991" = type { i32*, i32, i32 }
%"class.WTF::Vector.994" = type { %"class.WTF::VectorBuffer.995" }
%"class.WTF::VectorBuffer.995" = type { %"class.WTF::VectorBufferBase.996", [128 x i8] }
%"class.WTF::VectorBufferBase.996" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.999" = type { %"class.WTF::VectorBuffer.1000" }
%"class.WTF::VectorBuffer.1000" = type { %"class.WTF::VectorBufferBase.1001" }
%"class.WTF::VectorBufferBase.1001" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1004" = type { %"class.WTF::HashTable.1005" }
%"class.WTF::HashTable.1005" = type <{ %"struct.WTF::KeyValuePair.1008"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1008" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1009", %"class.WTF::Vector.1014" }
%"class.WTF::HashMap.1009" = type { %"class.WTF::HashTable.1010" }
%"class.WTF::HashTable.1010" = type <{ %"struct.WTF::KeyValuePair.1013"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1013" = type opaque
%"class.WTF::Vector.1014" = type { %"class.WTF::VectorBuffer.1015" }
%"class.WTF::VectorBuffer.1015" = type { %"class.WTF::VectorBufferBase.1016" }
%"class.WTF::VectorBufferBase.1016" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1022" = type { %"class.std::__1::__compressed_pair.1023" }
%"class.std::__1::__compressed_pair.1023" = type { %"struct.std::__1::__compressed_pair_elem.1024" }
%"struct.std::__1::__compressed_pair_elem.1024" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1028" = type { %"class.WTF::VectorBuffer.1029" }
%"class.WTF::VectorBuffer.1029" = type { %"class.WTF::VectorBufferBase.1030" }
%"class.WTF::VectorBufferBase.1030" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1033 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1034" = type { %"class.blink::MemberBase.1035" }
%"class.blink::MemberBase.1035" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1036" = type { %"class.blink::MemberBase.1037" }
%"class.blink::MemberBase.1037" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1038" = type { %"class.blink::MemberBase.1039" }
%"class.blink::MemberBase.1039" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1040" = type { %"class.WTF::HashSet.1043" }
%"class.WTF::HashSet.1043" = type { %"class.WTF::HashTable.1044" }
%"class.WTF::HashTable.1044" = type <{ %"class.blink::WeakMember.1046"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1046" = type opaque
%"class.blink::HeapHashSet.1047" = type { %"class.WTF::HashSet.1050" }
%"class.WTF::HashSet.1050" = type { %"class.WTF::HashTable.1051" }
%"class.WTF::HashTable.1051" = type <{ %"class.blink::WeakMember.1053"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1053" = type opaque
%"class.std::__1::unique_ptr.1054" = type { %"class.std::__1::__compressed_pair.1055" }
%"class.std::__1::__compressed_pair.1055" = type { %"struct.std::__1::__compressed_pair_elem.1056" }
%"struct.std::__1::__compressed_pair_elem.1056" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1057" }
%"class.base::time_internal::TimeBase.1057" = type { i64 }
%"class.std::__1::unique_ptr.1061" = type { %"class.std::__1::__compressed_pair.1062" }
%"class.std::__1::__compressed_pair.1062" = type { %"struct.std::__1::__compressed_pair_elem.1063" }
%"struct.std::__1::__compressed_pair_elem.1063" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1064", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.1064" = type { %"class.absl::optional_internal::optional_data.1065" }
%"class.absl::optional_internal::optional_data.1065" = type { %"class.absl::optional_internal::optional_data_base.1066" }
%"class.absl::optional_internal::optional_data_base.1066" = type { %"class.absl::optional_internal::optional_data_dtor_base.1067" }
%"class.absl::optional_internal::optional_data_dtor_base.1067" = type { i8, %union.anon.1068 }
%union.anon.1068 = type { %"class.base::Time" }
%"class.WTF::Vector.1072" = type { %"class.WTF::VectorBuffer.1073" }
%"class.WTF::VectorBuffer.1073" = type { %"class.WTF::VectorBufferBase.1074" }
%"class.WTF::VectorBufferBase.1074" = type { %"class.base::OnceCallback.154"*, i32, i32 }
%"class.blink::Member.570" = type { %"class.blink::MemberBase.571" }
%"class.blink::MemberBase.571" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.575" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.502", %"class.blink::Member.502" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.502", %"class.blink::Member.504", %"class.blink::Member.502", %"class.blink::Member.502", %"class.blink::Member.506" }
%"class.blink::Member.504" = type { %"class.blink::MemberBase.505" }
%"class.blink::MemberBase.505" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.553", %"class.blink::Member.369", %"class.blink::Member.504", %"class.blink::Member.555", %"class.blink::Member.555", %"class.blink::Member.598", %"class.blink::Member.600", %"class.blink::Member.602", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.607", %"class.blink::HeapVector.609" }
%"class.blink::Member.553" = type { %"class.blink::MemberBase.554" }
%"class.blink::MemberBase.554" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.555" = type { %"class.blink::MemberBase.556" }
%"class.blink::MemberBase.556" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.559" }
%"class.blink::HeapHashMap.559" = type { %"class.WTF::HashMap.562" }
%"class.WTF::HashMap.562" = type { %"class.WTF::HashTable.563" }
%"class.WTF::HashTable.563" = type <{ %"struct.WTF::KeyValuePair.565"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.565" = type { %"class.WTF::AtomicString", %"class.blink::Member.566" }
%"class.blink::Member.566" = type { %"class.blink::MemberBase.567" }
%"class.blink::MemberBase.567" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.570", i32, %"class.blink::HeapVector.591" }
%"class.blink::HeapVector.591" = type { %"class.WTF::Vector.594" }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { %"class.blink::Member.570"*, i32, i32 }
%"class.blink::Member.598" = type { %"class.blink::MemberBase.599" }
%"class.blink::MemberBase.599" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.600" = type { %"class.blink::MemberBase.601" }
%"class.blink::MemberBase.601" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.602" = type { %"class.blink::MemberBase.603" }
%"class.blink::MemberBase.603" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.604" }
%"class.blink::Member.604" = type { %"class.blink::MemberBase.605" }
%"class.blink::MemberBase.605" = type { %"class.blink::HeapHashMap.606"* }
%"class.blink::HeapHashMap.606" = type opaque
%"class.blink::Member.607" = type { %"class.blink::MemberBase.608" }
%"class.blink::MemberBase.608" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.609" = type { %"class.WTF::Vector.612" }
%"class.WTF::Vector.612" = type { %"class.WTF::VectorBuffer.613" }
%"class.WTF::VectorBuffer.613" = type { %"class.WTF::VectorBufferBase.614" }
%"class.WTF::VectorBufferBase.614" = type { %"class.blink::Member.615"*, i32, i32 }
%"class.blink::Member.615" = type { %"class.blink::MemberBase.616" }
%"class.blink::MemberBase.616" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.617", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.619, %"class.WTF::Vector.620", %"class.WTF::Vector.620", %"class.blink::Member.502", %"class.blink::Member.625", %"class.blink::HeapHashSet.629", %"class.blink::Member.369", %"class.WTF::HashSet.636", %"class.WTF::TextPosition", %"class.blink::Member.640", %"class.blink::HeapVector.642", %"class.blink::Member.649" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.617" = type { %"class.blink::MemberBase.618" }
%"class.blink::MemberBase.618" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.619 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.620" = type { %"class.WTF::VectorBuffer.621" }
%"class.WTF::VectorBuffer.621" = type { %"class.WTF::VectorBufferBase.622" }
%"class.WTF::VectorBufferBase.622" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.625" = type { %"class.blink::MemberBase.626" }
%"class.blink::MemberBase.626" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.627" }
%"class.blink::Member.627" = type { %"class.blink::MemberBase.628" }
%"class.blink::MemberBase.628" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.629" = type { %"class.WTF::HashSet.632" }
%"class.WTF::HashSet.632" = type { %"class.WTF::HashTable.633" }
%"class.WTF::HashTable.633" = type <{ %"class.blink::WeakMember.635"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.635" = type { %"class.blink::MemberBase.505" }
%"class.WTF::HashSet.636" = type { %"class.WTF::HashTable.637" }
%"class.WTF::HashTable.637" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.640" = type { %"class.blink::MemberBase.641" }
%"class.blink::MemberBase.641" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.642" = type { %"class.WTF::Vector.645" }
%"class.WTF::Vector.645" = type { %"class.WTF::VectorBuffer.646" }
%"class.WTF::VectorBuffer.646" = type { %"class.WTF::VectorBufferBase.647" }
%"class.WTF::VectorBufferBase.647" = type { %"class.blink::Member.625"*, i32, i32 }
%"class.blink::Member.649" = type { %"class.blink::MemberBase.650" }
%"class.blink::MemberBase.650" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::Member.506" = type { %"class.blink::MemberBase.507" }
%"class.blink::MemberBase.507" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.502" = type { %"class.blink::MemberBase.503" }
%"class.blink::MemberBase.503" = type { %"class.blink::Node"* }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.572 }
%class.scoped_refptr.572 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.573", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.573" = type { %"class.base::RefCounted.574" }
%"class.base::RefCounted.574" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.575" = type { %"class.blink::MemberBase.576" }
%"class.blink::MemberBase.576" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.579", %"class.blink::Member.581", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.579" = type { %"class.WTF::SingleThreadedBitField.580" }
%"class.WTF::SingleThreadedBitField.580" = type { i32 }
%"class.blink::Member.581" = type { %"class.blink::MemberBase.582" }
%"class.blink::MemberBase.582" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.583 }
%class.scoped_refptr.583 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.584", %"class.WTF::AtomicString", %"class.WTF::Vector.586" }
%"class.WTF::RefCounted.584" = type { %"class.base::RefCounted.585" }
%"class.base::RefCounted.585" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.586" = type { %"class.WTF::VectorBuffer.587" }
%"class.WTF::VectorBuffer.587" = type { %"class.WTF::VectorBufferBase.588", [32 x i8] }
%"class.WTF::VectorBufferBase.588" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::Member.733" = type { %"class.blink::MemberBase.734" }
%"class.blink::MemberBase.734" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.735" = type { %"class.blink::MemberBase.736" }
%"class.blink::MemberBase.736" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.737" = type { %"class.blink::MemberBase.738" }
%"class.blink::MemberBase.738" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.739" = type { %"class.blink::MemberBase.740" }
%"class.blink::MemberBase.740" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.741" = type { %"class.blink::MemberBase.742" }
%"class.blink::MemberBase.742" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type opaque
%class.scoped_refptr.743 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.744" = type { %"class.blink::MemberBase.745" }
%"class.blink::MemberBase.745" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.746" = type { %"class.blink::MemberBase.747" }
%"class.blink::MemberBase.747" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.748" = type { %"class.blink::MemberBase.749" }
%"class.blink::MemberBase.749" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.750" = type { %"class.blink::MemberBase.751" }
%"class.blink::MemberBase.751" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.752" = type { %"class.blink::MemberBase.753" }
%"class.blink::MemberBase.753" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.754" = type { %"class.blink::MemberBase.755" }
%"class.blink::MemberBase.755" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.756" = type { %"class.blink::MemberBase.757" }
%"class.blink::MemberBase.757" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote.758" = type { %"class.blink::Member.759" }
%"class.blink::Member.759" = type { %"class.blink::MemberBase.760" }
%"class.blink::MemberBase.760" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.1658" }
%"class.mojo::Remote.1658" = type { %"class.mojo::internal::InterfacePtrState.1659" }
%"class.mojo::internal::InterfacePtrState.1659" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1660" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.255, %"class.std::__1::unique_ptr.126", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.145, i32 }>
%class.scoped_refptr.255 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.145, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.317", %"class.absl::optional.322", %"class.absl::optional.276", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.342", i8, [7 x i8], %class.scoped_refptr.145, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.166" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback.154", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.145, %"class.std::__1::unique_ptr.256", %"class.absl::optional.266", %"struct.std::__1::atomic.272", i8, i8, i8, i8, i32, i32, %"class.absl::optional.276", %"class.std::__1::unique_ptr.281", i8, i64, %class.scoped_refptr.314, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.316" }
%"class.std::__1::unique_ptr.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.145, i8, %"class.mojo::ScopedHandleBase.259", %class.scoped_refptr.260, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.261", i8*, %"class.base::WeakPtrFactory.262" }
%"class.mojo::ScopedHandleBase.259" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.260 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.261" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.262" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.266" = type { %"class.absl::optional_internal::optional_data.267" }
%"class.absl::optional_internal::optional_data.267" = type { %"class.absl::optional_internal::optional_data_base.268" }
%"class.absl::optional_internal::optional_data_base.268" = type { %"class.absl::optional_internal::optional_data_dtor_base.269" }
%"class.absl::optional_internal::optional_data_dtor_base.269" = type { i8, %union.anon.270 }
%union.anon.270 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.271", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.271" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"struct.std::__1::atomic.272" = type { %"struct.std::__1::__atomic_base.273" }
%"struct.std::__1::__atomic_base.273" = type { %"struct.std::__1::__cxx_atomic_impl.274" }
%"struct.std::__1::__cxx_atomic_impl.274" = type { %"struct.std::__1::__cxx_atomic_base_impl.275" }
%"struct.std::__1::__cxx_atomic_base_impl.275" = type { i8 }
%"class.std::__1::unique_ptr.281" = type { %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.284", i8, i64, %class.scoped_refptr.285, %class.scoped_refptr.310 }
%"class.base::RepeatingCallback.284" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.285 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.286", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.288", %"class.std::__1::map.299", i8, [7 x i8] }>
%"class.base::RefCounted.286" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.287 }
%class.scoped_refptr.287 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.288" = type { %"class.std::__1::__tree.289" }
%"class.std::__1::__tree.289" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.290", %"class.std::__1::__compressed_pair.294" }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::map.299" = type { %"class.std::__1::__tree.300" }
%"class.std::__1::__tree.300" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.301", %"class.std::__1::__compressed_pair.305" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%class.scoped_refptr.310 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.314 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.315 }
%class.scoped_refptr.315 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.316" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.317" = type { %"class.absl::optional_internal::optional_data.318" }
%"class.absl::optional_internal::optional_data.318" = type { %"class.absl::optional_internal::optional_data_base.319" }
%"class.absl::optional_internal::optional_data_base.319" = type { %"class.absl::optional_internal::optional_data_dtor_base.320" }
%"class.absl::optional_internal::optional_data_dtor_base.320" = type { i8, %union.anon.321 }
%union.anon.321 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.322" = type { %"class.absl::optional_internal::optional_data.323" }
%"class.absl::optional_internal::optional_data.323" = type { %"class.absl::optional_internal::optional_data_base.324" }
%"class.absl::optional_internal::optional_data_base.324" = type { %"class.absl::optional_internal::optional_data_dtor_base.325" }
%"class.absl::optional_internal::optional_data_dtor_base.325" = type { i8, [7 x i8], %union.anon.326 }
%union.anon.326 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.276" = type { %"class.absl::optional_internal::optional_data.277" }
%"class.absl::optional_internal::optional_data.277" = type { %"class.absl::optional_internal::optional_data_base.278" }
%"class.absl::optional_internal::optional_data_base.278" = type { %"class.absl::optional_internal::optional_data_dtor_base.279" }
%"class.absl::optional_internal::optional_data_dtor_base.279" = type { i8, %union.anon.280 }
%union.anon.280 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.327 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.327 = type { %"class.std::__1::map.330" }
%"class.std::__1::map.330" = type { %"class.std::__1::__tree.331" }
%"class.std::__1::__tree.331" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.332", %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.341"*, i64 }
%"class.std::__1::unique_ptr.341" = type opaque
%"class.std::__1::map.342" = type { %"class.std::__1::__tree.343" }
%"class.std::__1::__tree.343" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.344", %"class.std::__1::__compressed_pair.348" }
%"class.std::__1::__compressed_pair.344" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.1660" = type { %"class.std::__1::__compressed_pair.1661" }
%"class.std::__1::__compressed_pair.1661" = type { %"struct.std::__1::__compressed_pair_elem.1662" }
%"struct.std::__1::__compressed_pair_elem.1662" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.761" = type { %"class.std::__1::__compressed_pair.762" }
%"class.std::__1::__compressed_pair.762" = type { %"struct.std::__1::__compressed_pair_elem.763" }
%"struct.std::__1::__compressed_pair_elem.763" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.767" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.768" = type { %"class.std::__1::__compressed_pair.769" }
%"class.std::__1::__compressed_pair.769" = type { %"struct.std::__1::__compressed_pair_elem.770" }
%"struct.std::__1::__compressed_pair_elem.770" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.std::__1::unique_ptr.774" = type { %"class.std::__1::__compressed_pair.775" }
%"class.std::__1::__compressed_pair.775" = type { %"struct.std::__1::__compressed_pair_elem.776" }
%"struct.std::__1::__compressed_pair_elem.776" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.780" }
%"class.blink::Member.780" = type { %"class.blink::MemberBase.781" }
%"class.blink::MemberBase.781" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.1668" }
%"class.mojo::AssociatedRemote.1668" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1669" }
%"class.mojo::internal::AssociatedInterfacePtrState.1669" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1670" }
%"class.std::__1::unique_ptr.1670" = type { %"class.std::__1::__compressed_pair.1671" }
%"class.std::__1::__compressed_pair.1671" = type { %"struct.std::__1::__compressed_pair_elem.1672" }
%"struct.std::__1::__compressed_pair_elem.1672" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.782" = type { %"class.blink::Member.783" }
%"class.blink::Member.783" = type { %"class.blink::MemberBase.784" }
%"class.blink::MemberBase.784" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.1678" }
%"class.mojo::AssociatedRemote.1678" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1679" }
%"class.mojo::internal::AssociatedInterfacePtrState.1679" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1680" }
%"class.std::__1::unique_ptr.1680" = type { %"class.std::__1::__compressed_pair.1681" }
%"class.std::__1::__compressed_pair.1681" = type { %"struct.std::__1::__compressed_pair_elem.1682" }
%"struct.std::__1::__compressed_pair_elem.1682" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.785" }
%"class.blink::Member.785" = type { %"class.blink::MemberBase.786" }
%"class.blink::MemberBase.786" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1688", %"class.blink::Member.498", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.1688" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.1689" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.126" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.1689" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.787" = type { %"class.blink::Member.788" }
%"class.blink::Member.788" = type { %"class.blink::MemberBase.789" }
%"class.blink::MemberBase.789" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1692", %"class.blink::Member.498", %"class.mojo::AssociatedReceiver.1693" }
%"class.blink::ThreadState::PrefinalizerRegistration.1692" = type { i8 }
%"class.mojo::AssociatedReceiver.1693" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.1694" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.1694" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.790" }
%"class.blink::Member.790" = type { %"class.blink::MemberBase.791" }
%"class.blink::MemberBase.791" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1697", %"class.blink::Member.498", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.1697" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.255, %"class.std::__1::unique_ptr.126", %"class.base::WeakPtrFactory.1698" }
%"class.base::WeakPtrFactory.1698" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.792" = type { %"class.blink::Member.793" }
%"class.blink::Member.793" = type { %"class.blink::MemberBase.794" }
%"class.blink::MemberBase.794" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1701", %"class.blink::Member.498", %"class.mojo::AssociatedReceiver.1702" }
%"class.blink::ThreadState::PrefinalizerRegistration.1701" = type { i8 }
%"class.mojo::AssociatedReceiver.1702" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.1703" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.1703" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.795" = type { %"class.blink::MemberBase.796" }
%"class.blink::MemberBase.796" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.797" = type { %"class.blink::MemberBase.798" }
%"class.blink::MemberBase.798" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.799" = type { %"class.blink::MemberBase.800" }
%"class.blink::MemberBase.800" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.801" = type { %"class.blink::MemberBase.802" }
%"class.blink::MemberBase.802" = type { %"class.blink::HeapHashMap.803"* }
%"class.blink::HeapHashMap.803" = type opaque
%"class.mojo::StructPtr.804" = type { %"class.std::__1::unique_ptr.805" }
%"class.std::__1::unique_ptr.805" = type { %"class.std::__1::__compressed_pair.806" }
%"class.std::__1::__compressed_pair.806" = type { %"struct.std::__1::__compressed_pair_elem.807" }
%"struct.std::__1::__compressed_pair_elem.807" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.808", %"class.mojo::InlinedStructPtr.809" }
%"class.mojo::InlinedStructPtr.808" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.809" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.813" = type { %"class.blink::MemberBase.814" }
%"class.blink::MemberBase.814" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.815" = type { %"class.absl::optional_internal::optional_data.816" }
%"class.absl::optional_internal::optional_data.816" = type { %"class.absl::optional_internal::optional_data_base.817" }
%"class.absl::optional_internal::optional_data_base.817" = type { %"class.absl::optional_internal::optional_data_dtor_base.818" }
%"class.absl::optional_internal::optional_data_dtor_base.818" = type { i8, %union.anon.819 }
%union.anon.819 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.244", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair.662"*, %"struct.std::__1::pair.662"*, %"class.std::__1::__compressed_pair.663" }
%"struct.std::__1::pair.662" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.663" = type { %"struct.std::__1::__compressed_pair_elem.664" }
%"struct.std::__1::__compressed_pair_elem.664" = type { %"struct.std::__1::pair.662"* }
%"class.blink::Member.668" = type { %"class.blink::MemberBase.669" }
%"class.blink::MemberBase.669" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.670" = type { %"class.absl::optional_internal::optional_data.671" }
%"class.absl::optional_internal::optional_data.671" = type { %"class.absl::optional_internal::optional_data_base.672" }
%"class.absl::optional_internal::optional_data_base.672" = type { %"class.absl::optional_internal::optional_data_dtor_base.673" }
%"class.absl::optional_internal::optional_data_dtor_base.673" = type { i8, %union.anon.674 }
%union.anon.674 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.675" = type { %"class.absl::optional_internal::optional_data.676" }
%"class.absl::optional_internal::optional_data.676" = type { %"class.absl::optional_internal::optional_data_base.677" }
%"class.absl::optional_internal::optional_data_base.677" = type { %"class.absl::optional_internal::optional_data_dtor_base.678" }
%"class.absl::optional_internal::optional_data_dtor_base.678" = type { i8, %union.anon.679 }
%union.anon.679 = type { %"class.base::UnguessableToken" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::TaskHandle" = type { %class.scoped_refptr.680 }
%class.scoped_refptr.680 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.681" }
%"class.blink::HeapHashSet.681" = type { %"class.WTF::HashSet.684" }
%"class.WTF::HashSet.684" = type { %"class.WTF::HashTable.685" }
%"class.WTF::HashTable.685" = type <{ %"class.blink::WeakMember.687"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.687" = type opaque
%"class.blink::Member.246" = type { %"class.blink::MemberBase.247" }
%"class.blink::MemberBase.247" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::Member.248" = type { %"class.blink::MemberBase.249" }
%"class.blink::MemberBase.249" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.250" = type { %"class.blink::MemberBase.251" }
%"class.blink::MemberBase.251" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.252" = type { %"class.WTF::VectorBuffer.253" }
%"class.WTF::VectorBuffer.253" = type { %"class.WTF::VectorBufferBase.254" }
%"class.WTF::VectorBufferBase.254" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.351" }
%"class.std::__1::unique_ptr.351" = type { %"class.std::__1::__compressed_pair.352" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.353" }
%"struct.std::__1::__compressed_pair_elem.353" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.59", i32, i8, [3 x i8], %"class.blink::HeapVector", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.65", %"class.blink::Member.67", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.76", %"class.blink::Member.217", %"class.blink::Member.219", i8 }>
%"class.blink::Supplementable.359" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.360" }
%"class.blink::HeapHashMap.360" = type { %"class.WTF::HashMap.363" }
%"class.WTF::HashMap.363" = type { %"class.WTF::HashTable.364" }
%"class.WTF::HashTable.364" = type <{ %"struct.WTF::KeyValuePair.366"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.366" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.367" = type { %"class.blink::MemberBase.368" }
%"class.blink::MemberBase.368" = type { %"class.blink::ScriptController"* }
%"class.blink::ScriptController" = type opaque
%"class.blink::Member.369" = type { %"class.blink::MemberBase.370" }
%"class.blink::MemberBase.370" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.1113", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.1072", %"class.WTF::Vector.1072", i8, i32, %"class.blink::Member.525", %"class.blink::Member", %"class.blink::Member.1121", %"class.blink::Member.1123", %"class.blink::Member.1134", %"class.blink::Member.1136", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1138", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1144", %"class.blink::Member.1146", %"class.blink::Member.615", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1148", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1348", %"class.blink::HeapVector.591", %"class.blink::Member.570", %"class.blink::Member.517", %"class.blink::Member.570", %"class.blink::Member.570", %"class.blink::Member.570", %"class.blink::UserActionElementSet", %"class.blink::Member.1357", double, double, i64, i64, %"class.blink::HeapHashSet.1359", %"class.blink::HeapHashSet.1366", i16, i8, %"class.blink::Member.1373", %"class.blink::Member.1375", %"class.blink::Member.1377", %"class.blink::Member.1379", %"class.blink::TextLinkColors", %"class.blink::Member.1381", i8, [7 x i8], %"class.blink::HeapHashMap.1383", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.570", %"class.WTF::Vector.1390", %"class.blink::Member.1395", %"class.blink::Member.1397", i8, %"class.blink::Member.570", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1399", %"class.blink::HeapVector.1401", %"class.std::__1::unique_ptr.1409", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1415", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1428", %"class.WTF::Vector.1430", i8, i8, %"class.std::__1::unique_ptr.1435", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.591", %"class.blink::HeapVector.1441", i32, i8, %"class.blink::HeapTaskRunnerTimer.1348", %"class.blink::HeapTaskRunnerTimer.1348", %"class.blink::DocumentTiming", %"class.blink::Member.1449", i8, i32, %"class.blink::Member.1451", %"class.blink::Member.1453", %"class.blink::Member.1455", %"class.blink::HeapTaskRunnerTimer.1348", %"class.blink::Member.1457", %"class.WTF::HashMap.1459", %"class.blink::Member.1464", %"class.blink::Member.1466", %"class.blink::Member.1468", %"class.blink::Member.1470", %"class.blink::Member.369", %"class.blink::Member.369", %"class.blink::HeapTaskRunnerTimer.1348", %"class.blink::HeapHashSet.1472", i8, i32, %"class.blink::Member.1479", %"class.blink::Member.1481", i32, %"class.blink::Member.1483", %"class.blink::Member.1485", %"class.blink::Member.1487", %"class.std::__1::unique_ptr.1489", i64, %"class.std::__1::unique_ptr.1495", i32, i32, %"class.blink::Member.1501", %"class.blink::Member.1503", %"class.blink::Member.1505", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1507", %"class.WTF::Vector.540", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1509", %"class.blink::Member.1516", %"class.std::__1::unique_ptr.1518", %"class.blink::Member.1524", i8, i8, %"class.WTF::String", %"class.blink::Member.1526", i8, [7 x i8], %"class.blink::HeapHashMap.1528", %"class.blink::HeapObserverSet.1535", %"class.blink::Member.1543", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1545", i32, i8, i8, %"class.blink::WeakMember.1547", %"class.blink::Member.1548" }
%"class.blink::Supplementable.1113" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1114" }
%"class.blink::HeapHashMap.1114" = type { %"class.WTF::HashMap.1117" }
%"class.WTF::HashMap.1117" = type { %"class.WTF::HashTable.1118" }
%"class.WTF::HashTable.1118" = type <{ %"struct.WTF::KeyValuePair.1120"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1120" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.blink::Member.525" = type { %"class.blink::MemberBase.526" }
%"class.blink::MemberBase.526" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::Member.1121" = type { %"class.blink::MemberBase.1122" }
%"class.blink::MemberBase.1122" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.1123" = type { %"class.blink::MemberBase.1124" }
%"class.blink::MemberBase.1124" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type { %"class.blink::NameClient", i32, i8, %"class.blink::Member.369", %"class.blink::HeapHashSet.1127" }
%"class.blink::HeapHashSet.1127" = type { %"class.WTF::HashSet.1130" }
%"class.WTF::HashSet.1130" = type { %"class.WTF::HashTable.1131" }
%"class.WTF::HashTable.1131" = type <{ %"class.blink::WeakMember.1133"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1133" = type opaque
%"class.blink::Member.1134" = type { %"class.blink::MemberBase.1135" }
%"class.blink::MemberBase.1135" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1136" = type { %"class.blink::MemberBase.1137" }
%"class.blink::MemberBase.1137" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1138" = type { %"class.std::__1::__compressed_pair.1139" }
%"class.std::__1::__compressed_pair.1139" = type { %"struct.std::__1::__compressed_pair_elem.1140" }
%"struct.std::__1::__compressed_pair_elem.1140" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.1144" = type { %"class.blink::MemberBase.1145" }
%"class.blink::MemberBase.1145" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1146" = type { %"class.blink::MemberBase.1147" }
%"class.blink::MemberBase.1147" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.WTF::Vector.1148" = type { %"class.WTF::VectorBuffer.1149" }
%"class.WTF::VectorBuffer.1149" = type { %"class.WTF::VectorBufferBase.1150" }
%"class.WTF::VectorBufferBase.1150" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.1151 }
%class.scoped_refptr.1151 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.1152", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.1152" = type { %"class.base::RefCounted.1153" }
%"class.base::RefCounted.1153" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.1156" }
%"class.blink::HeapHashMap.1156" = type { %"class.WTF::HashMap.1159" }
%"class.WTF::HashMap.1159" = type { %"class.WTF::HashTable.1160" }
%"class.WTF::HashTable.1160" = type <{ %"struct.WTF::KeyValuePair.1162"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1162" = type { %"class.blink::WeakMember.1163", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.1163" = type { %"class.blink::MemberBase.1164" }
%"class.blink::MemberBase.1164" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.1165", i32, [4 x i8], %"class.std::__1::unique_ptr.1303", %"class.std::__1::unique_ptr.1303", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque.1309", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.1315", %"class.std::__1::unique_ptr.1321", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.1333", %"class.std::__1::unique_ptr.1339", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.272", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1165" = type { %"class.std::__1::__compressed_pair.1166" }
%"class.std::__1::__compressed_pair.1166" = type { %"struct.std::__1::__compressed_pair_elem.1167" }
%"struct.std::__1::__compressed_pair_elem.1167" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.1168", %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1180", %"class.std::__1::unique_ptr.1186", %"class.std::__1::unique_ptr.1192", %"class.std::__1::unique_ptr.1198", %"class.std::__1::unique_ptr.1209", %"class.std::__1::unique_ptr.1216", %"class.std::__1::unique_ptr.1216", %"class.std::__1::unique_ptr.1223", %"class.std::__1::unique_ptr.1230", %"class.std::__1::unique_ptr.1237", %"class.std::__1::unique_ptr.1237", %"class.std::__1::unique_ptr.1244", %"class.std::__1::unique_ptr.1251", %"class.std::__1::unique_ptr.1258", %"class.std::__1::unique_ptr.1283", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.1168" = type { %"class.std::__1::__compressed_pair.1169" }
%"class.std::__1::__compressed_pair.1169" = type { %"struct.std::__1::__compressed_pair_elem.1170" }
%"struct.std::__1::__compressed_pair_elem.1170" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.1174" = type { %"class.std::__1::__compressed_pair.1175" }
%"class.std::__1::__compressed_pair.1175" = type { %"struct.std::__1::__compressed_pair_elem.1176" }
%"struct.std::__1::__compressed_pair_elem.1176" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.1180" = type { %"class.std::__1::__compressed_pair.1181" }
%"class.std::__1::__compressed_pair.1181" = type { %"struct.std::__1::__compressed_pair_elem.1182" }
%"struct.std::__1::__compressed_pair_elem.1182" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.1186" = type { %"class.std::__1::__compressed_pair.1187" }
%"class.std::__1::__compressed_pair.1187" = type { %"struct.std::__1::__compressed_pair_elem.1188" }
%"struct.std::__1::__compressed_pair_elem.1188" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.1192" = type { %"class.std::__1::__compressed_pair.1193" }
%"class.std::__1::__compressed_pair.1193" = type { %"struct.std::__1::__compressed_pair_elem.1194" }
%"struct.std::__1::__compressed_pair_elem.1194" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.1198" = type { %"class.std::__1::__compressed_pair.1199" }
%"class.std::__1::__compressed_pair.1199" = type { %"struct.std::__1::__compressed_pair_elem.1200" }
%"struct.std::__1::__compressed_pair_elem.1200" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.1201" }
%"struct.std::__1::atomic.1201" = type { %"struct.std::__1::__atomic_base.1202" }
%"struct.std::__1::__atomic_base.1202" = type { %"struct.std::__1::__atomic_base.1203" }
%"struct.std::__1::__atomic_base.1203" = type { %"struct.std::__1::__cxx_atomic_impl.1204" }
%"struct.std::__1::__cxx_atomic_impl.1204" = type { %"struct.std::__1::__cxx_atomic_base_impl.1205" }
%"struct.std::__1::__cxx_atomic_base_impl.1205" = type { i64 }
%"class.std::__1::unique_ptr.1209" = type { %"class.std::__1::__compressed_pair.1210" }
%"class.std::__1::__compressed_pair.1210" = type { %"struct.std::__1::__compressed_pair_elem.1211" }
%"struct.std::__1::__compressed_pair_elem.1211" = type { %"class.blink::Worklist.1212"* }
%"class.blink::Worklist.1212" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.1201" }
%"class.std::__1::unique_ptr.1216" = type { %"class.std::__1::__compressed_pair.1217" }
%"class.std::__1::__compressed_pair.1217" = type { %"struct.std::__1::__compressed_pair_elem.1218" }
%"struct.std::__1::__compressed_pair_elem.1218" = type { %"class.blink::Worklist.1219"* }
%"class.blink::Worklist.1219" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.1201" }
%"class.std::__1::unique_ptr.1223" = type { %"class.std::__1::__compressed_pair.1224" }
%"class.std::__1::__compressed_pair.1224" = type { %"struct.std::__1::__compressed_pair_elem.1225" }
%"struct.std::__1::__compressed_pair_elem.1225" = type { %"class.blink::Worklist.1226"* }
%"class.blink::Worklist.1226" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.1201" }
%"class.std::__1::unique_ptr.1230" = type { %"class.std::__1::__compressed_pair.1231" }
%"class.std::__1::__compressed_pair.1231" = type { %"struct.std::__1::__compressed_pair_elem.1232" }
%"struct.std::__1::__compressed_pair_elem.1232" = type { %"class.blink::Worklist.1233"* }
%"class.blink::Worklist.1233" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.1201" }
%"class.std::__1::unique_ptr.1237" = type { %"class.std::__1::__compressed_pair.1238" }
%"class.std::__1::__compressed_pair.1238" = type { %"struct.std::__1::__compressed_pair_elem.1239" }
%"struct.std::__1::__compressed_pair_elem.1239" = type { %"class.blink::Worklist.1240"* }
%"class.blink::Worklist.1240" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.1201" }
%"class.std::__1::unique_ptr.1244" = type { %"class.std::__1::__compressed_pair.1245" }
%"class.std::__1::__compressed_pair.1245" = type { %"struct.std::__1::__compressed_pair_elem.1246" }
%"struct.std::__1::__compressed_pair_elem.1246" = type { %"class.blink::Worklist.1247"* }
%"class.blink::Worklist.1247" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.1201" }
%"class.std::__1::unique_ptr.1251" = type { %"class.std::__1::__compressed_pair.1252" }
%"class.std::__1::__compressed_pair.1252" = type { %"struct.std::__1::__compressed_pair_elem.1253" }
%"struct.std::__1::__compressed_pair_elem.1253" = type { %"class.blink::Worklist.1254"* }
%"class.blink::Worklist.1254" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.1201" }
%"class.std::__1::unique_ptr.1258" = type { %"class.std::__1::__compressed_pair.1259" }
%"class.std::__1::__compressed_pair.1259" = type { %"struct.std::__1::__compressed_pair_elem.1260" }
%"struct.std::__1::__compressed_pair_elem.1260" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.1261", %"class.std::__1::__compressed_pair.1269", %"class.std::__1::__compressed_pair.1274", %"class.std::__1::__compressed_pair.1276", [4 x i8] }>
%"class.std::__1::unique_ptr.1261" = type { %"class.std::__1::__compressed_pair.1262" }
%"class.std::__1::__compressed_pair.1262" = type { %"struct.std::__1::__compressed_pair_elem.1263", %"struct.std::__1::__compressed_pair_elem.1264" }
%"struct.std::__1::__compressed_pair_elem.1263" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.1264" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.1265" }
%"class.std::__1::__compressed_pair.1265" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::__compressed_pair.1269" = type { %"struct.std::__1::__compressed_pair_elem.1270" }
%"struct.std::__1::__compressed_pair_elem.1270" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::__compressed_pair.1276" = type { %"struct.std::__1::__compressed_pair_elem.1277" }
%"struct.std::__1::__compressed_pair_elem.1277" = type { float }
%"class.std::__1::unique_ptr.1283" = type { %"class.std::__1::__compressed_pair.1284" }
%"class.std::__1::__compressed_pair.1284" = type { %"struct.std::__1::__compressed_pair_elem.1285" }
%"struct.std::__1::__compressed_pair_elem.1285" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.1286", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1286" = type { %"class.std::__1::__compressed_pair.1287" }
%"class.std::__1::__compressed_pair.1287" = type { %"struct.std::__1::__compressed_pair_elem.1288" }
%"struct.std::__1::__compressed_pair_elem.1288" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.1295" }
%"class.WTF::Vector.1295" = type { %"class.WTF::VectorBuffer.1296" }
%"class.WTF::VectorBuffer.1296" = type { %"class.WTF::VectorBufferBase.1297" }
%"class.WTF::VectorBufferBase.1297" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.1303" = type { %"class.std::__1::__compressed_pair.1304" }
%"class.std::__1::__compressed_pair.1304" = type { %"struct.std::__1::__compressed_pair_elem.1305" }
%"struct.std::__1::__compressed_pair_elem.1305" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque.1309" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.1312" }
%"class.WTF::VectorBuffer.1312" = type { %"class.WTF::VectorBufferBase.1313" }
%"class.WTF::VectorBufferBase.1313" = type { %"struct.std::__1::pair.1314"*, i32, i32 }
%"struct.std::__1::pair.1314" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.1315" = type { %"class.std::__1::__compressed_pair.1316" }
%"class.std::__1::__compressed_pair.1316" = type { %"struct.std::__1::__compressed_pair_elem.1317" }
%"struct.std::__1::__compressed_pair_elem.1317" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.1321" = type { %"class.std::__1::__compressed_pair.1322" }
%"class.std::__1::__compressed_pair.1322" = type { %"struct.std::__1::__compressed_pair_elem.1323" }
%"struct.std::__1::__compressed_pair_elem.1323" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.1327" }
%"class.std::__1::unique_ptr.1327" = type { %"class.std::__1::__compressed_pair.1328" }
%"class.std::__1::__compressed_pair.1328" = type { %"struct.std::__1::__compressed_pair_elem.1329" }
%"struct.std::__1::__compressed_pair_elem.1329" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.1212"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.1219"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.1226"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.1233"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.1240"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1561", i64 }
%"class.std::__1::vector.1561" = type { %"class.std::__1::__vector_base.1562" }
%"class.std::__1::__vector_base.1562" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1563" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1563" = type { %"struct.std::__1::__compressed_pair_elem.1564" }
%"struct.std::__1::__compressed_pair_elem.1564" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.1333" = type { %"class.std::__1::__compressed_pair.1334" }
%"class.std::__1::__compressed_pair.1334" = type { %"struct.std::__1::__compressed_pair_elem.1335" }
%"struct.std::__1::__compressed_pair_elem.1335" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.1339" = type { %"class.std::__1::__compressed_pair.1340" }
%"class.std::__1::__compressed_pair.1340" = type { %"struct.std::__1::__compressed_pair_elem.1341" }
%"struct.std::__1::__compressed_pair_elem.1341" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.1345 }
%class.scoped_refptr.1345 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"class.blink::Member.517" = type { %"class.blink::MemberBase.518" }
%"class.blink::MemberBase.518" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.369", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.502", %"class.blink::Member.502", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1350" }
%"class.blink::HeapHashMap.1350" = type { %"class.WTF::HashMap.1353" }
%"class.WTF::HashMap.1353" = type { %"class.WTF::HashTable.1354" }
%"class.WTF::HashTable.1354" = type <{ %"struct.WTF::KeyValuePair.1356"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1356" = type opaque
%"class.blink::Member.1357" = type { %"class.blink::MemberBase.1358" }
%"class.blink::MemberBase.1358" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1359" = type { %"class.WTF::HashSet.1362" }
%"class.WTF::HashSet.1362" = type { %"class.WTF::HashTable.1363" }
%"class.WTF::HashTable.1363" = type <{ %"class.blink::WeakMember.1365"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1365" = type opaque
%"class.blink::HeapHashSet.1366" = type { %"class.WTF::HashSet.1369" }
%"class.WTF::HashSet.1369" = type { %"class.WTF::HashTable.1370" }
%"class.WTF::HashTable.1370" = type <{ %"class.blink::WeakMember.1372"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1372" = type opaque
%"class.blink::Member.1373" = type { %"class.blink::MemberBase.1374" }
%"class.blink::MemberBase.1374" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1375" = type { %"class.blink::MemberBase.1376" }
%"class.blink::MemberBase.1376" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.1377" = type { %"class.blink::MemberBase.1378" }
%"class.blink::MemberBase.1378" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.504", %"class.blink::HeapVector.609" }
%"class.blink::Member.1379" = type { %"class.blink::MemberBase.1380" }
%"class.blink::MemberBase.1380" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1381" = type { %"class.blink::MemberBase.1382" }
%"class.blink::MemberBase.1382" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1383" = type { %"class.WTF::HashMap.1386" }
%"class.WTF::HashMap.1386" = type { %"class.WTF::HashTable.1387" }
%"class.WTF::HashTable.1387" = type <{ %"struct.WTF::KeyValuePair.1389"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1389" = type opaque
%"class.WTF::Vector.1390" = type { %"class.WTF::VectorBuffer.1391" }
%"class.WTF::VectorBuffer.1391" = type { %"class.WTF::VectorBufferBase.1392" }
%"class.WTF::VectorBufferBase.1392" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1395" = type { %"class.blink::MemberBase.1396" }
%"class.blink::MemberBase.1396" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1397" = type { %"class.blink::MemberBase.1398" }
%"class.blink::MemberBase.1398" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1399" = type { %"class.blink::MemberBase.1400" }
%"class.blink::MemberBase.1400" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1401" = type { %"class.WTF::Vector.1404" }
%"class.WTF::Vector.1404" = type { %"class.WTF::VectorBuffer.1405" }
%"class.WTF::VectorBuffer.1405" = type { %"class.WTF::VectorBufferBase.1406" }
%"class.WTF::VectorBufferBase.1406" = type { %"class.blink::Member.1407"*, i32, i32 }
%"class.blink::Member.1407" = type opaque
%"class.std::__1::unique_ptr.1409" = type { %"class.std::__1::__compressed_pair.1410" }
%"class.std::__1::__compressed_pair.1410" = type { %"struct.std::__1::__compressed_pair_elem.1411" }
%"struct.std::__1::__compressed_pair_elem.1411" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.1415" = type { %"class.WTF::HashSet.1418" }
%"class.WTF::HashSet.1418" = type { %"class.WTF::HashTable.1419" }
%"class.WTF::HashTable.1419" = type <{ %"class.blink::WeakMember.1421"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1421" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1422", i32, [4 x i8] }>
%"class.WTF::Vector.1422" = type { %"class.WTF::VectorBuffer.1423" }
%"class.WTF::VectorBuffer.1423" = type { %"class.WTF::VectorBufferBase.1424" }
%"class.WTF::VectorBufferBase.1424" = type { %"struct.std::__1::pair.1425"*, i32, i32 }
%"struct.std::__1::pair.1425" = type opaque
%"class.blink::Member.1428" = type { %"class.blink::MemberBase.1429" }
%"class.blink::MemberBase.1429" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1430" = type { %"class.WTF::VectorBuffer.1431" }
%"class.WTF::VectorBuffer.1431" = type { %"class.WTF::VectorBufferBase.1432" }
%"class.WTF::VectorBufferBase.1432" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1435" = type { %"class.std::__1::__compressed_pair.1436" }
%"class.std::__1::__compressed_pair.1436" = type { %"struct.std::__1::__compressed_pair_elem.1437" }
%"struct.std::__1::__compressed_pair_elem.1437" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.1441" = type { %"class.WTF::Vector.1444" }
%"class.WTF::Vector.1444" = type { %"class.WTF::VectorBuffer.1445" }
%"class.WTF::VectorBuffer.1445" = type { %"class.WTF::VectorBufferBase.1446" }
%"class.WTF::VectorBufferBase.1446" = type { %"class.blink::Member.1447"*, i32, i32 }
%"class.blink::Member.1447" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.369" }
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1455" = type { %"class.blink::MemberBase.1456" }
%"class.blink::MemberBase.1456" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1457" = type { %"class.blink::MemberBase.1458" }
%"class.blink::MemberBase.1458" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1459" = type { %"class.WTF::HashTable.1460" }
%"class.WTF::HashTable.1460" = type <{ %"struct.WTF::KeyValuePair.1463"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1463" = type opaque
%"class.blink::Member.1464" = type { %"class.blink::MemberBase.1465" }
%"class.blink::MemberBase.1465" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1466" = type { %"class.blink::MemberBase.1467" }
%"class.blink::MemberBase.1467" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1468" = type { %"class.blink::MemberBase.1469" }
%"class.blink::MemberBase.1469" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1470" = type { %"class.blink::MemberBase.1471" }
%"class.blink::MemberBase.1471" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer.1348" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1349", { i64, i64 } }
%"class.blink::WeakMember.1349" = type { %"class.blink::MemberBase.370" }
%"class.blink::HeapHashSet.1472" = type { %"class.WTF::HashSet.1475" }
%"class.WTF::HashSet.1475" = type { %"class.WTF::HashTable.1476" }
%"class.WTF::HashTable.1476" = type <{ %"class.blink::Member.1478"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1478" = type opaque
%"class.blink::Member.1479" = type { %"class.blink::MemberBase.1480" }
%"class.blink::MemberBase.1480" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1481" = type { %"class.blink::MemberBase.1482" }
%"class.blink::MemberBase.1482" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1483" = type { %"class.blink::MemberBase.1484" }
%"class.blink::MemberBase.1484" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1485" = type { %"class.blink::MemberBase.1486" }
%"class.blink::MemberBase.1486" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1487" = type { %"class.blink::MemberBase.1488" }
%"class.blink::MemberBase.1488" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1489" = type { %"class.std::__1::__compressed_pair.1490" }
%"class.std::__1::__compressed_pair.1490" = type { %"struct.std::__1::__compressed_pair_elem.1491" }
%"struct.std::__1::__compressed_pair_elem.1491" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1495" = type { %"class.std::__1::__compressed_pair.1496" }
%"class.std::__1::__compressed_pair.1496" = type { %"struct.std::__1::__compressed_pair_elem.1497" }
%"struct.std::__1::__compressed_pair_elem.1497" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.1501" = type { %"class.blink::MemberBase.1502" }
%"class.blink::MemberBase.1502" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1503" = type { %"class.blink::MemberBase.1504" }
%"class.blink::MemberBase.1504" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1505" = type { %"class.blink::MemberBase.1506" }
%"class.blink::MemberBase.1506" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1507" = type { %"class.blink::MemberBase.1508" }
%"class.blink::MemberBase.1508" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.blink::HeapHashMap.1509" = type { %"class.WTF::HashMap.1512" }
%"class.WTF::HashMap.1512" = type { %"class.WTF::HashTable.1513" }
%"class.WTF::HashTable.1513" = type <{ %"struct.WTF::KeyValuePair.1515"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1515" = type opaque
%"class.blink::Member.1516" = type { %"class.blink::MemberBase.1517" }
%"class.blink::MemberBase.1517" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1518" = type { %"class.std::__1::__compressed_pair.1519" }
%"class.std::__1::__compressed_pair.1519" = type { %"struct.std::__1::__compressed_pair_elem.1520" }
%"struct.std::__1::__compressed_pair_elem.1520" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1524" = type { %"class.blink::MemberBase.1525" }
%"class.blink::MemberBase.1525" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1526" = type { %"class.blink::MemberBase.1527" }
%"class.blink::MemberBase.1527" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1528" = type { %"class.WTF::HashMap.1531" }
%"class.WTF::HashMap.1531" = type { %"class.WTF::HashTable.1532" }
%"class.WTF::HashTable.1532" = type <{ %"struct.WTF::KeyValuePair.1534"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1534" = type opaque
%"class.blink::HeapObserverSet.1535" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1536" }
%"class.blink::HeapHashSet.1536" = type { %"class.WTF::HashSet.1539" }
%"class.WTF::HashSet.1539" = type { %"class.WTF::HashTable.1540" }
%"class.WTF::HashTable.1540" = type <{ %"class.blink::WeakMember.1542"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1542" = type opaque
%"class.blink::Member.1543" = type { %"class.blink::MemberBase.1544" }
%"class.blink::MemberBase.1544" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1545" = type { %"class.blink::MemberBase.1546" }
%"class.blink::MemberBase.1546" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.369", %"class.blink::HeapHashSet.1552", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1559", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1552" = type { %"class.WTF::HashSet.1555" }
%"class.WTF::HashSet.1555" = type { %"class.WTF::HashTable.1556" }
%"class.WTF::HashTable.1556" = type <{ %"class.blink::Member.1558"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1558" = type opaque
%"class.blink::HeapTaskRunnerTimer.1559" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1560", { i64, i64 } }
%"class.blink::WeakMember.1560" = type { %"class.blink::MemberBase.1546" }
%"class.blink::WeakMember.1547" = type { %"class.blink::MemberBase.503" }
%"class.blink::Member.1548" = type { %"class.blink::MemberBase.1549" }
%"class.blink::MemberBase.1549" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.371" = type { %"class.blink::MemberBase.372" }
%"class.blink::MemberBase.372" = type { %"class.blink::DOMVisualViewport"* }
%"class.blink::DOMVisualViewport" = type opaque
%"class.blink::Member.373" = type { %"class.blink::MemberBase.374" }
%"class.blink::MemberBase.374" = type { %"class.blink::Screen"* }
%"class.blink::Screen" = type opaque
%"class.blink::Member.375" = type { %"class.blink::MemberBase.376" }
%"class.blink::MemberBase.376" = type { %"class.blink::History"* }
%"class.blink::History" = type opaque
%"class.blink::Member.377" = type { %"class.blink::MemberBase.378" }
%"class.blink::MemberBase.378" = type { %"class.blink::BarProp"* }
%"class.blink::BarProp" = type opaque
%"class.blink::Member.379" = type { %"class.blink::MemberBase.380" }
%"class.blink::MemberBase.380" = type { %"class.blink::Navigator"* }
%"class.blink::Navigator" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::StyleMedia"* }
%"class.blink::StyleMedia" = type opaque
%"class.blink::Member.383" = type { %"class.blink::MemberBase.384" }
%"class.blink::MemberBase.384" = type { %"class.blink::CustomElementRegistry"* }
%"class.blink::CustomElementRegistry" = type opaque
%"class.blink::Member.385" = type { %"class.blink::MemberBase.386" }
%"class.blink::MemberBase.386" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type opaque
%"class.blink::Member.387" = type { %"class.blink::MemberBase.388" }
%"class.blink::MemberBase.388" = type { %"class.blink::External"* }
%"class.blink::External" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::ApplicationCache"* }
%"class.blink::ApplicationCache" = type opaque
%class.scoped_refptr.391 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.393", i64, %"class.WTF::Vector.397", %"class.WTF::Vector.402", %"class.WTF::Vector.408", %"class.WTF::Vector.426", %class.scoped_refptr.20, %"class.WTF::HashMap.432", %"class.WTF::Vector.437", %"class.WTF::Vector.397", %"class.WTF::Vector.443", %"class.WTF::HashMap.448", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.392" }
%"class.base::RefCountedThreadSafe.392" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.393" = type { %"class.std::__1::__compressed_pair.394" }
%"class.std::__1::__compressed_pair.394" = type { %"struct.std::__1::__compressed_pair_elem.395" }
%"struct.std::__1::__compressed_pair_elem.395" = type { i8* }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404", [8 x i8] }
%"class.WTF::VectorBufferBase.404" = type { %class.scoped_refptr.405*, i32, i32 }
%class.scoped_refptr.405 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.408" = type { %"class.WTF::VectorBuffer.409" }
%"class.WTF::VectorBuffer.409" = type { %"class.WTF::VectorBufferBase.410" }
%"class.WTF::VectorBufferBase.410" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.412", %"class.std::__1::unique_ptr.418" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.411 }
%class.scoped_refptr.411 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.412" = type { %"class.std::__1::__compressed_pair.413" }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"struct.std::__1::__compressed_pair_elem.414" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.418" = type { %"class.std::__1::__compressed_pair.419" }
%"class.std::__1::__compressed_pair.419" = type { %"struct.std::__1::__compressed_pair_elem.420" }
%"struct.std::__1::__compressed_pair_elem.420" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.426" = type { %"class.WTF::VectorBuffer.427" }
%"class.WTF::VectorBuffer.427" = type { %"class.WTF::VectorBufferBase.428" }
%"class.WTF::VectorBufferBase.428" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.429", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.429" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.432" = type { %"class.WTF::HashTable.433" }
%"class.WTF::HashTable.433" = type <{ %"struct.WTF::KeyValuePair.436"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.436" = type opaque
%"class.WTF::Vector.437" = type { %"class.WTF::VectorBuffer.438" }
%"class.WTF::VectorBuffer.438" = type { %"class.WTF::VectorBufferBase.439" }
%"class.WTF::VectorBufferBase.439" = type { %"class.mojo::ScopedHandleBase.440"*, i32, i32 }
%"class.mojo::ScopedHandleBase.440" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.397" = type { %"class.WTF::VectorBuffer.398" }
%"class.WTF::VectorBuffer.398" = type { %"class.WTF::VectorBufferBase.399", [16 x i8] }
%"class.WTF::VectorBufferBase.399" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.443" = type { %"class.WTF::VectorBuffer.444" }
%"class.WTF::VectorBuffer.444" = type { %"class.WTF::VectorBufferBase.445" }
%"class.WTF::VectorBufferBase.445" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.WTF::HashMap.448" = type { %"class.WTF::HashTable.449" }
%"class.WTF::HashTable.449" = type <{ %"struct.WTF::KeyValuePair.452"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.452" = type { i8**, %"class.std::__1::unique_ptr.1637" }
%"class.std::__1::unique_ptr.1637" = type { %"class.std::__1::__compressed_pair.1638" }
%"class.std::__1::__compressed_pair.1638" = type { %"struct.std::__1::__compressed_pair_elem.1639" }
%"struct.std::__1::__compressed_pair_elem.1639" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::HeapHashSet.453" = type { %"class.WTF::HashSet.456" }
%"class.WTF::HashSet.456" = type { %"class.WTF::HashTable.457" }
%"class.WTF::HashTable.457" = type <{ %"class.blink::WeakMember.459"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.459" = type opaque
%"class.blink::Member.460" = type { %"class.blink::MemberBase.461" }
%"class.blink::MemberBase.461" = type { %"class.blink::Event"* }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.467", %"class.blink::Member.467", %"class.blink::Member.469", %"class.blink::Member.471", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.462" }
%"class.absl::optional.462" = type { %"class.absl::optional_internal::optional_data.463" }
%"class.absl::optional_internal::optional_data.463" = type { %"class.absl::optional_internal::optional_data_base.464" }
%"class.absl::optional_internal::optional_data_base.464" = type { %"class.absl::optional_internal::optional_data_dtor_base.465" }
%"class.absl::optional_internal::optional_data_dtor_base.465" = type { i8, %union.anon.466 }
%union.anon.466 = type { i64 }
%"class.blink::Member.467" = type { %"class.blink::MemberBase.468" }
%"class.blink::MemberBase.468" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.469" = type { %"class.blink::MemberBase.470" }
%"class.blink::MemberBase.470" = type { %"class.blink::Event"* }
%"class.blink::Member.471" = type { %"class.blink::MemberBase.472" }
%"class.blink::MemberBase.472" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::HeapHashMap.473" = type { %"class.WTF::HashMap.476" }
%"class.WTF::HashMap.476" = type { %"class.WTF::HashTable.477" }
%"class.WTF::HashTable.477" = type <{ %"struct.WTF::KeyValuePair.479"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.479" = type opaque
%"class.std::__1::unique_ptr.480" = type { %"class.std::__1::__compressed_pair.481" }
%"class.std::__1::__compressed_pair.481" = type { %"struct.std::__1::__compressed_pair_elem.482" }
%"struct.std::__1::__compressed_pair_elem.482" = type { %"class.blink::FrameOrWorkerScheduler"* }
%"class.blink::Member.492" = type { %"class.blink::MemberBase.493" }
%"class.blink::MemberBase.493" = type { %"class.blink::InputMethodController"* }
%"class.blink::InputMethodController" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.498", %"class.blink::CachedTextInputInfo", %"class.blink::Member.517", %"class.blink::Member.519", i8, i32 }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::CachedTextInputInfo" = type { %"class.blink::Member.500", %"class.blink::LayoutObject"*, %"class.blink::HeapHashMap.510", %"class.WTF::String", %"class.blink::CachedTextInputInfo::CachedPlainTextRange", %"class.blink::CachedTextInputInfo::CachedPlainTextRange" }
%"class.blink::Member.500" = type { %"class.blink::MemberBase.501" }
%"class.blink::MemberBase.501" = type { %"class.blink::ContainerNode"* }
%"class.blink::HeapHashMap.510" = type { %"class.WTF::HashMap.513" }
%"class.WTF::HashMap.513" = type { %"class.WTF::HashTable.514" }
%"class.WTF::HashTable.514" = type <{ %"struct.WTF::KeyValuePair.516"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.516" = type opaque
%"class.blink::CachedTextInputInfo::CachedPlainTextRange" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i32 }
%"class.blink::PositionTemplate" = type { %"class.blink::Member.502", i32, i32 }
%"class.blink::Member.519" = type { %"class.blink::MemberBase.520" }
%"class.blink::MemberBase.520" = type { %"class.blink::EditContext"* }
%"class.blink::EditContext" = type opaque
%"class.blink::Member.521" = type { %"class.blink::MemberBase.522" }
%"class.blink::MemberBase.522" = type { %"class.blink::SpellChecker"* }
%"class.blink::SpellChecker" = type { %"class.blink::Member.525", %"class.blink::Member.527", %"class.blink::Member.529" }
%"class.blink::Member.527" = type { %"class.blink::MemberBase.528" }
%"class.blink::MemberBase.528" = type { %"class.blink::SpellCheckRequester"* }
%"class.blink::SpellCheckRequester" = type opaque
%"class.blink::Member.529" = type { %"class.blink::MemberBase.530" }
%"class.blink::MemberBase.530" = type { %"class.blink::IdleSpellCheckController"* }
%"class.blink::IdleSpellCheckController" = type opaque
%"class.blink::Member.531" = type { %"class.blink::MemberBase.532" }
%"class.blink::MemberBase.532" = type { %"class.blink::TextSuggestionController"* }
%"class.blink::TextSuggestionController" = type { i32 (...)**, i8, %"class.blink::Member.525", %"class.blink::HeapMojoRemote" }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.535" }
%"class.blink::Member.535" = type { %"class.blink::MemberBase.536" }
%"class.blink::MemberBase.536" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.537" = type { %"class.blink::MemberBase.538" }
%"class.blink::MemberBase.538" = type { %"class.blink::HeapHashMap.539"* }
%"class.blink::HeapHashMap.539" = type opaque
%"class.WTF::Vector.540" = type { %"class.WTF::VectorBuffer.541" }
%"class.WTF::VectorBuffer.541" = type { %"class.WTF::VectorBufferBase.542" }
%"class.WTF::VectorBufferBase.542" = type { i8*, i32, i32 }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.WTF::HashSet.545" = type { %"class.WTF::HashTable.546" }
%"class.WTF::HashTable.546" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Deque" = type { %"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.551" }
%"class.WTF::VectorBuffer.551" = type { %"class.WTF::VectorBufferBase.552" }
%"class.WTF::VectorBufferBase.552" = type { i64*, i32, i32 }
%"class.blink::ScriptableDocumentParser" = type { %"class.blink::DecodedDataDocumentParser", %"class.blink::Member.1574", i8, i32 }
%"class.blink::DecodedDataDocumentParser" = type { %"class.blink::DocumentParser", i8, %"class.std::__1::unique_ptr.1568" }
%"class.std::__1::unique_ptr.1568" = type { %"class.std::__1::__compressed_pair.1569" }
%"class.std::__1::__compressed_pair.1569" = type { %"struct.std::__1::__compressed_pair_elem.1570" }
%"struct.std::__1::__compressed_pair_elem.1570" = type { %"class.blink::TextResourceDecoder"* }
%"class.blink::TextResourceDecoder" = type opaque
%"class.blink::Member.1574" = type { %"class.blink::MemberBase.1575" }
%"class.blink::MemberBase.1575" = type { %"class.blink::SourceKeyedCachedMetadataHandler"* }
%"class.blink::SourceKeyedCachedMetadataHandler" = type opaque
%"class.v8::Message" = type { i8 }
%"class.v8::ScriptOrigin" = type { %"class.v8::Isolate"*, %"class.v8::Local.1599", i32, i32, %"class.v8::ScriptOriginOptions", i32, %"class.v8::Local.1599", %"class.v8::Local.1600" }
%"class.v8::ScriptOriginOptions" = type { i32 }
%"class.v8::Local.1599" = type { %"class.v8::Value"* }
%"class.v8::Value" = type { i8 }
%"class.v8::Local.1600" = type { %"class.v8::PrimitiveArray"* }
%"class.v8::PrimitiveArray" = type { i8 }
%"class.v8::StackTrace" = type { i8 }
%"class.v8::StackFrame" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::String" = type { i8 }
%"class.v8::Function" = type { i8 }
%"class.blink::TracedValue" = type { %"class.base::trace_event::ConvertableToTraceFormat", %"class.std::__1::unique_ptr.1605" }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1605" = type { %"class.std::__1::__compressed_pair.1606" }
%"class.std::__1::__compressed_pair.1606" = type { %"struct.std::__1::__compressed_pair_elem.1607" }
%"struct.std::__1::__compressed_pair_elem.1607" = type { %"class.base::trace_event::TracedValue"* }
%"class.base::trace_event::TracedValue" = type { %"class.base::trace_event::ConvertableToTraceFormat", %"class.std::__1::unique_ptr.1608" }
%"class.std::__1::unique_ptr.1608" = type { %"class.std::__1::__compressed_pair.1609" }
%"class.std::__1::__compressed_pair.1609" = type { %"struct.std::__1::__compressed_pair_elem.1610" }
%"struct.std::__1::__compressed_pair_elem.1610" = type { %"class.base::trace_event::TracedValue::Writer"* }
%"class.base::trace_event::TracedValue::Writer" = type { i32 (...)** }
%"class.perfetto::TracedValue" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.perfetto::protos::pbzero::DebugAnnotation" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.1617" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.1617" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.perfetto::internal::CheckedScope" = type { i8 }
%"class.perfetto::TracedArray" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.perfetto::TracedDictionary" = type <{ %"class.protozero::Message"*, i32, %"class.perfetto::internal::CheckedScope", [3 x i8] }>
%"class.v8_inspector::protocol::Runtime::API::StackTrace" = type { %"class.v8_inspector::protocol::Exported" }
%"class.v8_inspector::protocol::Exported" = type { i32 (...)** }
%"class.v8_inspector::StringBuffer" = type { i32 (...)** }

@.str = private unnamed_addr constant [13 x i8] c"functionName\00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c"scriptId\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"url\00", align 1
@.str.3 = private unnamed_addr constant [11 x i8] c"lineNumber\00", align 1
@.str.4 = private unnamed_addr constant [13 x i8] c"columnNumber\00", align 1

@_ZN5blink14SourceLocationC1ERKN3WTF6StringEjjNSt3__110unique_ptrIN12v8_inspector12V8StackTraceENS5_14default_deleteIS8_EEEEi = hidden unnamed_addr alias void (%"class.blink::SourceLocation"*, %"class.WTF::String"*, i32, i32, %"class.v8_inspector::V8StackTrace"*, i32), void (%"class.blink::SourceLocation"*, %"class.WTF::String"*, i32, i32, %"class.v8_inspector::V8StackTrace"*, i32)* @_ZN5blink14SourceLocationC2ERKN3WTF6StringEjjNSt3__110unique_ptrIN12v8_inspector12V8StackTraceENS5_14default_deleteIS8_EEEEi
@_ZN5blink14SourceLocationD1Ev = hidden unnamed_addr alias void (%"class.blink::SourceLocation"*), void (%"class.blink::SourceLocation"*)* @_ZN5blink14SourceLocationD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden noalias %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureERKN3WTF6StringEjj(%"class.WTF::String"* nocapture readonly dereferenceable(8), i32, i32) local_unnamed_addr #0 align 2 {
  %4 = tail call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #6
  %5 = tail call %"class.blink::ThreadDebugger"* @_ZN5blink14ThreadDebugger4FromEPN2v87IsolateE(%"class.v8::Isolate"* %4) #6
  %6 = icmp eq %"class.blink::ThreadDebugger"* %5, null
  br i1 %6, label %29, label %7

7:                                                ; preds = %3
  %8 = tail call zeroext i1 @_ZN2v87Isolate9InContextEv(%"class.v8::Isolate"* %4) #6
  br i1 %8, label %9, label %29

9:                                                ; preds = %7
  %10 = tail call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #6
  %11 = load i32, i32* %10, align 4
  store i32 0, i32* %10, align 4
  %12 = getelementptr inbounds %"class.blink::ThreadDebugger", %"class.blink::ThreadDebugger"* %5, i64 0, i32 3, i32 0, i32 0, i32 0
  %13 = load %"class.v8_inspector::V8Inspector"*, %"class.v8_inspector::V8Inspector"** %12, align 8
  %14 = bitcast %"class.v8_inspector::V8Inspector"* %13 to %"class.v8_inspector::V8StackTrace"* (%"class.v8_inspector::V8Inspector"*, i1)***
  %15 = load %"class.v8_inspector::V8StackTrace"* (%"class.v8_inspector::V8Inspector"*, i1)**, %"class.v8_inspector::V8StackTrace"* (%"class.v8_inspector::V8Inspector"*, i1)*** %14, align 8
  %16 = getelementptr inbounds %"class.v8_inspector::V8StackTrace"* (%"class.v8_inspector::V8Inspector"*, i1)*, %"class.v8_inspector::V8StackTrace"* (%"class.v8_inspector::V8Inspector"*, i1)** %15, i64 20
  %17 = load %"class.v8_inspector::V8StackTrace"* (%"class.v8_inspector::V8Inspector"*, i1)*, %"class.v8_inspector::V8StackTrace"* (%"class.v8_inspector::V8Inspector"*, i1)** %16, align 8
  %18 = tail call %"class.v8_inspector::V8StackTrace"* %17(%"class.v8_inspector::V8Inspector"* %13, i1 zeroext false) #6
  %19 = ptrtoint %"class.v8_inspector::V8StackTrace"* %18 to i64
  store i32 %11, i32* %10, align 4
  %20 = icmp eq %"class.v8_inspector::V8StackTrace"* %18, null
  br i1 %20, label %29, label %21

21:                                               ; preds = %9
  %22 = bitcast %"class.v8_inspector::V8StackTrace"* %18 to i1 (%"class.v8_inspector::V8StackTrace"*)***
  %23 = load i1 (%"class.v8_inspector::V8StackTrace"*)**, i1 (%"class.v8_inspector::V8StackTrace"*)*** %22, align 8
  %24 = getelementptr inbounds i1 (%"class.v8_inspector::V8StackTrace"*)*, i1 (%"class.v8_inspector::V8StackTrace"*)** %23, i64 1
  %25 = load i1 (%"class.v8_inspector::V8StackTrace"*)*, i1 (%"class.v8_inspector::V8StackTrace"*)** %24, align 8
  %26 = tail call zeroext i1 %25(%"class.v8_inspector::V8StackTrace"* nonnull %18) #6
  br i1 %26, label %29, label %27

27:                                               ; preds = %21
  %28 = tail call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation30CreateFromNonEmptyV8StackTraceENSt3__110unique_ptrIN12v8_inspector12V8StackTraceENS1_14default_deleteIS4_EEEE(%"class.v8_inspector::V8StackTrace"* nonnull %18)
  br label %63

29:                                               ; preds = %9, %7, %3, %21
  %30 = phi i64 [ %19, %21 ], [ %19, %9 ], [ 0, %3 ], [ 0, %7 ]
  %31 = tail call noalias i8* @malloc(i64 32) #6
  %32 = bitcast i8* %31 to %"class.blink::SourceLocation"*
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = bitcast i8* %31 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %34, %"class.WTF::StringImpl"** %35, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %36, label %54, label %37

37:                                               ; preds = %29
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %54

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i33
  %46 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %45, i33 1) #6
  %47 = extractvalue { i33, i1 } %46, 1
  %48 = extractvalue { i33, i1 } %46, 0
  %49 = icmp slt i33 %48, 0
  %50 = or i1 %47, %49
  br i1 %50, label %51, label %52, !prof !2

51:                                               ; preds = %42
  tail call void @llvm.trap() #6
  unreachable

52:                                               ; preds = %42
  %53 = trunc i33 %48 to i32
  store i32 %53, i32* %43, align 4
  br label %54

54:                                               ; preds = %29, %37, %52
  %55 = getelementptr inbounds i8, i8* %31, i64 8
  %56 = bitcast i8* %55 to i32*
  store i32 %1, i32* %56, align 8
  %57 = getelementptr inbounds i8, i8* %31, i64 12
  %58 = bitcast i8* %57 to i32*
  store i32 %2, i32* %58, align 4
  %59 = getelementptr inbounds i8, i8* %31, i64 16
  %60 = bitcast i8* %59 to i64*
  store i64 %30, i64* %60, align 8
  %61 = getelementptr inbounds i8, i8* %31, i64 24
  %62 = bitcast i8* %61 to i32*
  store i32 0, i32* %62, align 8
  br label %63

63:                                               ; preds = %27, %54
  %64 = phi %"class.blink::SourceLocation"* [ %32, %54 ], [ %28, %27 ]
  ret %"class.blink::SourceLocation"* %64
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden noalias %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation30CreateFromNonEmptyV8StackTraceENSt3__110unique_ptrIN12v8_inspector12V8StackTraceENS1_14default_deleteIS4_EEEE(%"class.v8_inspector::V8StackTrace"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8_inspector::StringView", align 8
  %3 = ptrtoint %"class.v8_inspector::V8StackTrace"* %0 to i64
  %4 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #6
  %5 = bitcast %"class.v8_inspector::V8StackTrace"* %0 to void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::V8StackTrace"*)***
  %6 = load void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::V8StackTrace"*)**, void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::V8StackTrace"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::V8StackTrace"*)*, void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::V8StackTrace"*)** %6, i64 2
  %8 = load void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::V8StackTrace"*)*, void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::V8StackTrace"*)** %7, align 8
  call void %8(%"class.v8_inspector::StringView"* nonnull sret %2, %"class.v8_inspector::V8StackTrace"* %0) #6
  %9 = call %"class.WTF::StringImpl"* @_ZN5blink12ToCoreStringERKN12v8_inspector10StringViewE(%"class.v8_inspector::StringView"* nonnull dereferenceable(24) %2) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #6
  %10 = bitcast %"class.v8_inspector::V8StackTrace"* %0 to i32 (%"class.v8_inspector::V8StackTrace"*)***
  %11 = load i32 (%"class.v8_inspector::V8StackTrace"*)**, i32 (%"class.v8_inspector::V8StackTrace"*)*** %10, align 8
  %12 = getelementptr inbounds i32 (%"class.v8_inspector::V8StackTrace"*)*, i32 (%"class.v8_inspector::V8StackTrace"*)** %11, i64 3
  %13 = load i32 (%"class.v8_inspector::V8StackTrace"*)*, i32 (%"class.v8_inspector::V8StackTrace"*)** %12, align 8
  %14 = call i32 %13(%"class.v8_inspector::V8StackTrace"* %0) #6
  %15 = load i32 (%"class.v8_inspector::V8StackTrace"*)**, i32 (%"class.v8_inspector::V8StackTrace"*)*** %10, align 8
  %16 = getelementptr inbounds i32 (%"class.v8_inspector::V8StackTrace"*)*, i32 (%"class.v8_inspector::V8StackTrace"*)** %15, i64 4
  %17 = load i32 (%"class.v8_inspector::V8StackTrace"*)*, i32 (%"class.v8_inspector::V8StackTrace"*)** %16, align 8
  %18 = call i32 %17(%"class.v8_inspector::V8StackTrace"* %0) #6
  %19 = load i32 (%"class.v8_inspector::V8StackTrace"*)**, i32 (%"class.v8_inspector::V8StackTrace"*)*** %10, align 8
  %20 = getelementptr inbounds i32 (%"class.v8_inspector::V8StackTrace"*)*, i32 (%"class.v8_inspector::V8StackTrace"*)** %19, i64 5
  %21 = load i32 (%"class.v8_inspector::V8StackTrace"*)*, i32 (%"class.v8_inspector::V8StackTrace"*)** %20, align 8
  %22 = call i32 %21(%"class.v8_inspector::V8StackTrace"* %0) #6
  %23 = call noalias i8* @malloc(i64 32) #6
  %24 = bitcast i8* %23 to %"class.blink::SourceLocation"*
  %25 = bitcast i8* %23 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %25, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %26, label %64, label %27

27:                                               ; preds = %1
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %44

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = zext i32 %34 to i33
  %36 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #6
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !2

41:                                               ; preds = %32
  call void @llvm.trap() #6
  unreachable

42:                                               ; preds = %32
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %33, align 4
  br label %44

44:                                               ; preds = %42, %27
  %45 = getelementptr inbounds i8, i8* %23, i64 8
  %46 = bitcast i8* %45 to i32*
  store i32 %14, i32* %46, align 8
  %47 = getelementptr inbounds i8, i8* %23, i64 12
  %48 = bitcast i8* %47 to i32*
  store i32 %18, i32* %48, align 4
  %49 = getelementptr inbounds i8, i8* %23, i64 16
  %50 = bitcast i8* %49 to i64*
  store i64 %3, i64* %50, align 8
  %51 = getelementptr inbounds i8, i8* %23, i64 24
  %52 = bitcast i8* %51 to i32*
  store i32 %22, i32* %52, align 8
  %53 = load atomic i32, i32* %28 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %44
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %44
  %61 = phi i32 [ %59, %58 ], [ %57, %44 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %73

63:                                               ; preds = %60
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %9) #6
  br label %73

64:                                               ; preds = %1
  %65 = getelementptr inbounds i8, i8* %23, i64 8
  %66 = bitcast i8* %65 to i32*
  store i32 %14, i32* %66, align 8
  %67 = getelementptr inbounds i8, i8* %23, i64 12
  %68 = bitcast i8* %67 to i32*
  store i32 %18, i32* %68, align 4
  %69 = getelementptr inbounds i8, i8* %23, i64 16
  %70 = bitcast i8* %69 to i64*
  store i64 %3, i64* %70, align 8
  %71 = getelementptr inbounds i8, i8* %23, i64 24
  %72 = bitcast i8* %71 to i32*
  store i32 %22, i32* %72, align 8
  br label %73

73:                                               ; preds = %64, %63, %60
  ret %"class.blink::SourceLocation"* %24
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden noalias %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #0 align 2 {
  %2 = tail call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #6
  %3 = tail call %"class.blink::ThreadDebugger"* @_ZN5blink14ThreadDebugger4FromEPN2v87IsolateE(%"class.v8::Isolate"* %2) #6
  %4 = icmp eq %"class.blink::ThreadDebugger"* %3, null
  br i1 %4, label %27, label %5

5:                                                ; preds = %1
  %6 = tail call zeroext i1 @_ZN2v87Isolate9InContextEv(%"class.v8::Isolate"* %2) #6
  br i1 %6, label %7, label %27

7:                                                ; preds = %5
  %8 = tail call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #6
  %9 = load i32, i32* %8, align 4
  store i32 0, i32* %8, align 4
  %10 = getelementptr inbounds %"class.blink::ThreadDebugger", %"class.blink::ThreadDebugger"* %3, i64 0, i32 3, i32 0, i32 0, i32 0
  %11 = load %"class.v8_inspector::V8Inspector"*, %"class.v8_inspector::V8Inspector"** %10, align 8
  %12 = bitcast %"class.v8_inspector::V8Inspector"* %11 to %"class.v8_inspector::V8StackTrace"* (%"class.v8_inspector::V8Inspector"*, i1)***
  %13 = load %"class.v8_inspector::V8StackTrace"* (%"class.v8_inspector::V8Inspector"*, i1)**, %"class.v8_inspector::V8StackTrace"* (%"class.v8_inspector::V8Inspector"*, i1)*** %12, align 8
  %14 = getelementptr inbounds %"class.v8_inspector::V8StackTrace"* (%"class.v8_inspector::V8Inspector"*, i1)*, %"class.v8_inspector::V8StackTrace"* (%"class.v8_inspector::V8Inspector"*, i1)** %13, i64 20
  %15 = load %"class.v8_inspector::V8StackTrace"* (%"class.v8_inspector::V8Inspector"*, i1)*, %"class.v8_inspector::V8StackTrace"* (%"class.v8_inspector::V8Inspector"*, i1)** %14, align 8
  %16 = tail call %"class.v8_inspector::V8StackTrace"* %15(%"class.v8_inspector::V8Inspector"* %11, i1 zeroext false) #6
  %17 = ptrtoint %"class.v8_inspector::V8StackTrace"* %16 to i64
  store i32 %9, i32* %8, align 4
  %18 = icmp eq %"class.v8_inspector::V8StackTrace"* %16, null
  br i1 %18, label %27, label %19

19:                                               ; preds = %7
  %20 = bitcast %"class.v8_inspector::V8StackTrace"* %16 to i1 (%"class.v8_inspector::V8StackTrace"*)***
  %21 = load i1 (%"class.v8_inspector::V8StackTrace"*)**, i1 (%"class.v8_inspector::V8StackTrace"*)*** %20, align 8
  %22 = getelementptr inbounds i1 (%"class.v8_inspector::V8StackTrace"*)*, i1 (%"class.v8_inspector::V8StackTrace"*)** %21, i64 1
  %23 = load i1 (%"class.v8_inspector::V8StackTrace"*)*, i1 (%"class.v8_inspector::V8StackTrace"*)** %22, align 8
  %24 = tail call zeroext i1 %23(%"class.v8_inspector::V8StackTrace"* nonnull %16) #6
  br i1 %24, label %27, label %25

25:                                               ; preds = %19
  %26 = tail call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation30CreateFromNonEmptyV8StackTraceENSt3__110unique_ptrIN12v8_inspector12V8StackTraceENS1_14default_deleteIS4_EEEE(%"class.v8_inspector::V8StackTrace"* nonnull %16)
  br label %170

27:                                               ; preds = %7, %5, %1, %19
  %28 = phi i64 [ %17, %19 ], [ %17, %7 ], [ 0, %1 ], [ 0, %5 ]
  %29 = icmp eq %"class.blink::ExecutionContext"* %0, null
  br i1 %29, label %124, label %30

30:                                               ; preds = %27
  %31 = bitcast %"class.blink::ExecutionContext"* %0 to i1 (%"class.blink::ExecutionContext"*)***
  %32 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %31, align 8
  %33 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %32, i64 1
  %34 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %33, align 8
  %35 = tail call zeroext i1 %34(%"class.blink::ExecutionContext"* nonnull %0) #6
  br i1 %35, label %36, label %97

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 -1, i32 8
  %38 = icmp eq i32* %37, null
  br i1 %38, label %97, label %39

39:                                               ; preds = %36
  %40 = bitcast i32* %37 to %"class.blink::LocalDOMWindow"*
  %41 = tail call %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"* nonnull %40) #6
  %42 = tail call %"class.blink::ScriptableDocumentParser"* @_ZNK5blink8Document27GetScriptableDocumentParserEv(%"class.blink::Document"* %41) #6
  %43 = icmp eq %"class.blink::ScriptableDocumentParser"* %42, null
  br i1 %43, label %63, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %41, i64 0, i32 123
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %63

48:                                               ; preds = %44
  %49 = tail call %"class.blink::ScriptableDocumentParser"* @_ZNK5blink8Document27GetScriptableDocumentParserEv(%"class.blink::Document"* %41) #6
  %50 = bitcast %"class.blink::ScriptableDocumentParser"* %49 to i1 (%"class.blink::ScriptableDocumentParser"*)***
  %51 = load i1 (%"class.blink::ScriptableDocumentParser"*)**, i1 (%"class.blink::ScriptableDocumentParser"*)*** %50, align 8
  %52 = getelementptr inbounds i1 (%"class.blink::ScriptableDocumentParser"*)*, i1 (%"class.blink::ScriptableDocumentParser"*)** %51, i64 25
  %53 = load i1 (%"class.blink::ScriptableDocumentParser"*)*, i1 (%"class.blink::ScriptableDocumentParser"*)** %52, align 8
  %54 = tail call zeroext i1 %53(%"class.blink::ScriptableDocumentParser"* %49) #6
  br i1 %54, label %55, label %63

55:                                               ; preds = %48
  %56 = tail call %"class.blink::ScriptableDocumentParser"* @_ZNK5blink8Document27GetScriptableDocumentParserEv(%"class.blink::Document"* %41) #6
  %57 = bitcast %"class.blink::ScriptableDocumentParser"* %56 to i32 (%"class.blink::ScriptableDocumentParser"*)***
  %58 = load i32 (%"class.blink::ScriptableDocumentParser"*)**, i32 (%"class.blink::ScriptableDocumentParser"*)*** %57, align 8
  %59 = getelementptr inbounds i32 (%"class.blink::ScriptableDocumentParser"*)*, i32 (%"class.blink::ScriptableDocumentParser"*)** %58, i64 26
  %60 = load i32 (%"class.blink::ScriptableDocumentParser"*)*, i32 (%"class.blink::ScriptableDocumentParser"*)** %59, align 8
  %61 = tail call i32 %60(%"class.blink::ScriptableDocumentParser"* %56) #6
  %62 = add nsw i32 %61, 1
  br label %63

63:                                               ; preds = %44, %39, %48, %55
  %64 = phi i32 [ 0, %39 ], [ 0, %44 ], [ %62, %55 ], [ 0, %48 ]
  %65 = tail call noalias i8* @malloc(i64 32) #6
  %66 = bitcast i8* %65 to %"class.blink::SourceLocation"*
  %67 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %41, i64 0, i32 19, i32 4, i32 0, i32 0
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  %69 = bitcast i8* %65 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %68, %"class.WTF::StringImpl"** %69, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %70, label %88, label %71

71:                                               ; preds = %63
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %88

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = zext i32 %78 to i33
  %80 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %79, i33 1) #6
  %81 = extractvalue { i33, i1 } %80, 1
  %82 = extractvalue { i33, i1 } %80, 0
  %83 = icmp slt i33 %82, 0
  %84 = or i1 %81, %83
  br i1 %84, label %85, label %86, !prof !2

85:                                               ; preds = %76
  tail call void @llvm.trap() #6
  unreachable

86:                                               ; preds = %76
  %87 = trunc i33 %82 to i32
  store i32 %87, i32* %77, align 4
  br label %88

88:                                               ; preds = %86, %71, %63
  %89 = getelementptr inbounds i8, i8* %65, i64 8
  %90 = bitcast i8* %89 to i32*
  store i32 %64, i32* %90, align 8
  %91 = getelementptr inbounds i8, i8* %65, i64 12
  %92 = bitcast i8* %91 to i32*
  store i32 0, i32* %92, align 4
  %93 = getelementptr inbounds i8, i8* %65, i64 16
  %94 = bitcast i8* %93 to i64*
  store i64 %28, i64* %94, align 8
  %95 = getelementptr inbounds i8, i8* %65, i64 24
  %96 = bitcast i8* %95 to i32*
  store i32 0, i32* %96, align 8
  br label %170

97:                                               ; preds = %36, %30
  %98 = bitcast %"class.blink::ExecutionContext"* %0 to %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)***
  %99 = load %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)**, %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)*** %98, align 8
  %100 = getelementptr inbounds %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)*, %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)** %99, i64 18
  %101 = load %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)*, %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)** %100, align 8
  %102 = tail call dereferenceable(112) %"class.blink::KURL"* %101(%"class.blink::ExecutionContext"* nonnull %0) #6
  %103 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %102, i64 0, i32 4, i32 0, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %105 = ptrtoint %"class.WTF::StringImpl"* %104 to i64
  %106 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %106, label %124, label %107

107:                                              ; preds = %97
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = and i32 %109, 2
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %124

112:                                              ; preds = %107
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %114 = load i32, i32* %113, align 4
  %115 = zext i32 %114 to i33
  %116 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %115, i33 1) #6
  %117 = extractvalue { i33, i1 } %116, 1
  %118 = extractvalue { i33, i1 } %116, 0
  %119 = icmp slt i33 %118, 0
  %120 = or i1 %117, %119
  br i1 %120, label %121, label %122, !prof !2

121:                                              ; preds = %112
  tail call void @llvm.trap() #6
  unreachable

122:                                              ; preds = %112
  %123 = trunc i33 %118 to i32
  store i32 %123, i32* %113, align 4
  br label %124

124:                                              ; preds = %27, %122, %107, %97
  %125 = phi i64 [ %105, %97 ], [ %105, %107 ], [ %105, %122 ], [ 0, %27 ]
  %126 = tail call noalias i8* @malloc(i64 32) #6
  %127 = bitcast i8* %126 to %"class.blink::SourceLocation"*
  %128 = inttoptr i64 %125 to %"class.WTF::StringImpl"*
  %129 = bitcast i8* %126 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %128, %"class.WTF::StringImpl"** %129, align 8
  %130 = icmp eq i64 %125, 0
  br i1 %130, label %148, label %131

131:                                              ; preds = %124
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load atomic i32, i32* %132 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %148

136:                                              ; preds = %131
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 0
  %138 = load i32, i32* %137, align 4
  %139 = zext i32 %138 to i33
  %140 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %139, i33 1) #6
  %141 = extractvalue { i33, i1 } %140, 1
  %142 = extractvalue { i33, i1 } %140, 0
  %143 = icmp slt i33 %142, 0
  %144 = or i1 %141, %143
  br i1 %144, label %145, label %146, !prof !2

145:                                              ; preds = %136
  tail call void @llvm.trap() #6
  unreachable

146:                                              ; preds = %136
  %147 = trunc i33 %142 to i32
  store i32 %147, i32* %137, align 4
  br label %148

148:                                              ; preds = %124, %131, %146
  %149 = getelementptr inbounds i8, i8* %126, i64 8
  %150 = bitcast i8* %149 to i32*
  store i32 0, i32* %150, align 8
  %151 = getelementptr inbounds i8, i8* %126, i64 12
  %152 = bitcast i8* %151 to i32*
  store i32 0, i32* %152, align 4
  %153 = getelementptr inbounds i8, i8* %126, i64 16
  %154 = bitcast i8* %153 to i64*
  store i64 %28, i64* %154, align 8
  %155 = getelementptr inbounds i8, i8* %126, i64 24
  %156 = bitcast i8* %155 to i32*
  store i32 0, i32* %156, align 8
  br i1 %130, label %170, label %157

157:                                              ; preds = %148
  %158 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = load atomic i32, i32* %158 monotonic, align 4
  %160 = and i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 0
  %163 = load i32, i32* %162, align 4
  br i1 %161, label %164, label %166

164:                                              ; preds = %157
  %165 = add i32 %163, -1
  store i32 %165, i32* %162, align 4
  br label %166

166:                                              ; preds = %164, %157
  %167 = phi i32 [ %165, %164 ], [ %163, %157 ]
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %169, label %170

169:                                              ; preds = %166
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %128) #6
  br label %170

170:                                              ; preds = %25, %88, %148, %166, %169
  %171 = phi %"class.blink::SourceLocation"* [ %66, %88 ], [ %26, %25 ], [ %127, %148 ], [ %127, %166 ], [ %127, %169 ]
  ret %"class.blink::SourceLocation"* %171
}

declare %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"*) local_unnamed_addr #2

declare %"class.blink::ScriptableDocumentParser"* @_ZNK5blink8Document27GetScriptableDocumentParserEv(%"class.blink::Document"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden noalias %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation11FromMessageEPN2v87IsolateENS1_5LocalINS1_7MessageEEEPNS_16ExecutionContextE(%"class.v8::Isolate"*, %"class.v8::Message"*, %"class.blink::ExecutionContext"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::ScriptOrigin", align 8
  %5 = alloca %"class.v8::ScriptOrigin", align 8
  %6 = tail call %"class.v8::StackTrace"* @_ZNK2v87Message13GetStackTraceEv(%"class.v8::Message"* %1) #6
  %7 = tail call %"class.blink::ThreadDebugger"* @_ZN5blink14ThreadDebugger4FromEPN2v87IsolateE(%"class.v8::Isolate"* %0) #6
  %8 = icmp eq %"class.blink::ThreadDebugger"* %7, null
  br i1 %8, label %18, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::ThreadDebugger", %"class.blink::ThreadDebugger"* %7, i64 0, i32 3, i32 0, i32 0, i32 0
  %11 = load %"class.v8_inspector::V8Inspector"*, %"class.v8_inspector::V8Inspector"** %10, align 8
  %12 = bitcast %"class.v8_inspector::V8Inspector"* %11 to %"class.v8_inspector::V8StackTrace"* (%"class.v8_inspector::V8Inspector"*, %"class.v8::StackTrace"*)***
  %13 = load %"class.v8_inspector::V8StackTrace"* (%"class.v8_inspector::V8Inspector"*, %"class.v8::StackTrace"*)**, %"class.v8_inspector::V8StackTrace"* (%"class.v8_inspector::V8Inspector"*, %"class.v8::StackTrace"*)*** %12, align 8
  %14 = getelementptr inbounds %"class.v8_inspector::V8StackTrace"* (%"class.v8_inspector::V8Inspector"*, %"class.v8::StackTrace"*)*, %"class.v8_inspector::V8StackTrace"* (%"class.v8_inspector::V8Inspector"*, %"class.v8::StackTrace"*)** %13, i64 19
  %15 = load %"class.v8_inspector::V8StackTrace"* (%"class.v8_inspector::V8Inspector"*, %"class.v8::StackTrace"*)*, %"class.v8_inspector::V8StackTrace"* (%"class.v8_inspector::V8Inspector"*, %"class.v8::StackTrace"*)** %14, align 8
  %16 = tail call %"class.v8_inspector::V8StackTrace"* %15(%"class.v8_inspector::V8Inspector"* %11, %"class.v8::StackTrace"* %6) #6
  %17 = ptrtoint %"class.v8_inspector::V8StackTrace"* %16 to i64
  br label %18

18:                                               ; preds = %3, %9
  %19 = phi i64 [ 0, %3 ], [ %17, %9 ]
  %20 = bitcast %"class.v8::ScriptOrigin"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %20) #6
  call void @_ZNK2v87Message15GetScriptOriginEv(%"class.v8::ScriptOrigin"* nonnull sret %4, %"class.v8::Message"* %1) #6
  %21 = getelementptr inbounds %"class.v8::ScriptOrigin", %"class.v8::ScriptOrigin"* %4, i64 0, i32 5
  %22 = load i32, i32* %21, align 4
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %20) #6
  %23 = icmp eq %"class.v8::StackTrace"* %6, null
  br i1 %23, label %32, label %24

24:                                               ; preds = %18
  %25 = call i32 @_ZNK2v810StackTrace13GetFrameCountEv(%"class.v8::StackTrace"* nonnull %6) #6
  %26 = icmp sgt i32 %25, 0
  br i1 %26, label %27, label %32

27:                                               ; preds = %24
  %28 = call %"class.v8::StackFrame"* @_ZNK2v810StackTrace8GetFrameEPNS_7IsolateEj(%"class.v8::StackTrace"* nonnull %6, %"class.v8::Isolate"* %0, i32 0) #6
  %29 = call i32 @_ZNK2v810StackFrame11GetScriptIdEv(%"class.v8::StackFrame"* %28) #6
  %30 = icmp eq i32 %29, %22
  %31 = select i1 %30, i32 0, i32 %22
  br label %32

32:                                               ; preds = %27, %24, %18
  %33 = phi i32 [ %22, %18 ], [ %22, %24 ], [ %31, %27 ]
  %34 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #6
  %35 = call i64 @_ZNK2v87Message13GetLineNumberENS_5LocalINS_7ContextEEE(%"class.v8::Message"* %1, %"class.v8::Context"* %34) #6
  %36 = trunc i64 %35 to i8
  %37 = lshr i64 %35, 32
  %38 = trunc i64 %37 to i32
  %39 = icmp eq i8 %36, 0
  br i1 %39, label %52, label %40, !prof !2

40:                                               ; preds = %32
  %41 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #6
  %42 = call i64 @_ZNK2v87Message14GetStartColumnENS_5LocalINS_7ContextEEE(%"class.v8::Message"* %1, %"class.v8::Context"* %41) #6
  %43 = trunc i64 %42 to i8
  %44 = lshr i64 %42, 32
  %45 = trunc i64 %44 to i32
  %46 = icmp eq i8 %43, 0
  %47 = add nsw i32 %45, 1
  %48 = select i1 %46, i32 0, i32 %47, !prof !2
  %49 = icmp ne i32 %33, 0
  %50 = icmp ne i32 %38, 0
  %51 = and i1 %49, %50
  br i1 %51, label %65, label %52

52:                                               ; preds = %32, %40
  %53 = phi i32 [ %48, %40 ], [ 0, %32 ]
  %54 = phi i32 [ %38, %40 ], [ 0, %32 ]
  %55 = inttoptr i64 %19 to %"class.v8_inspector::V8StackTrace"*
  %56 = icmp eq i64 %19, 0
  br i1 %56, label %65, label %57

57:                                               ; preds = %52
  %58 = inttoptr i64 %19 to i1 (%"class.v8_inspector::V8StackTrace"*)***
  %59 = load i1 (%"class.v8_inspector::V8StackTrace"*)**, i1 (%"class.v8_inspector::V8StackTrace"*)*** %58, align 8
  %60 = getelementptr inbounds i1 (%"class.v8_inspector::V8StackTrace"*)*, i1 (%"class.v8_inspector::V8StackTrace"*)** %59, i64 1
  %61 = load i1 (%"class.v8_inspector::V8StackTrace"*)*, i1 (%"class.v8_inspector::V8StackTrace"*)** %60, align 8
  %62 = call zeroext i1 %61(%"class.v8_inspector::V8StackTrace"* nonnull %55) #6
  br i1 %62, label %65, label %63

63:                                               ; preds = %57
  %64 = call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation30CreateFromNonEmptyV8StackTraceENSt3__110unique_ptrIN12v8_inspector12V8StackTraceENS1_14default_deleteIS4_EEEE(%"class.v8_inspector::V8StackTrace"* nonnull %55)
  br label %193

65:                                               ; preds = %52, %40, %57
  %66 = phi i32 [ %48, %40 ], [ %53, %57 ], [ %53, %52 ]
  %67 = phi i32 [ %38, %40 ], [ %54, %57 ], [ %54, %52 ]
  %68 = bitcast %"class.v8::ScriptOrigin"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %68) #6
  call void @_ZNK2v87Message15GetScriptOriginEv(%"class.v8::ScriptOrigin"* nonnull sret %5, %"class.v8::Message"* %1) #6
  %69 = getelementptr inbounds %"class.v8::ScriptOrigin", %"class.v8::ScriptOrigin"* %5, i64 0, i32 1, i32 0
  %70 = load %"class.v8::Value"*, %"class.v8::Value"** %69, align 8
  %71 = icmp eq %"class.v8::Value"* %70, null
  br i1 %71, label %88, label %72

72:                                               ; preds = %65
  %73 = bitcast %"class.v8::Value"* %70 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = and i64 %74, 3
  %76 = icmp eq i64 %75, 1
  br i1 %76, label %77, label %88

77:                                               ; preds = %72
  %78 = add i64 %74, -1
  %79 = inttoptr i64 %78 to i32*
  %80 = load i32, i32* %79, align 4
  %81 = and i64 %74, -4294967296
  %82 = zext i32 %80 to i64
  %83 = or i64 %81, %82
  %84 = add i64 %83, 7
  %85 = inttoptr i64 %84 to i16*
  %86 = load i16, i16* %85, align 2
  %87 = icmp ult i16 %86, 64
  br i1 %87, label %89, label %88

88:                                               ; preds = %77, %65, %72
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %68) #6
  br label %101

89:                                               ; preds = %77
  %90 = bitcast %"class.v8::Value"* %70 to %"class.v8::String"*
  %91 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %90, i32 0) #6
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %68) #6
  %92 = icmp eq %"class.WTF::StringImpl"* %91, null
  br i1 %92, label %101, label %93

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 1
  %95 = load i32, i32* %94, align 4
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %101, label %97

97:                                               ; preds = %93
  %98 = call noalias i8* @malloc(i64 32) #6
  %99 = bitcast i8* %98 to %"class.blink::SourceLocation"*
  %100 = bitcast i8* %98 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %91, %"class.WTF::StringImpl"** %100, align 8
  br label %147

101:                                              ; preds = %88, %89, %93
  %102 = phi %"class.WTF::StringImpl"* [ %91, %93 ], [ null, %88 ], [ null, %89 ]
  %103 = phi i1 [ false, %93 ], [ true, %88 ], [ true, %89 ]
  %104 = bitcast %"class.blink::ExecutionContext"* %2 to %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)***
  %105 = load %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)**, %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)*** %104, align 8
  %106 = getelementptr inbounds %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)*, %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)** %105, i64 18
  %107 = load %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)*, %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)** %106, align 8
  %108 = call dereferenceable(112) %"class.blink::KURL"* %107(%"class.blink::ExecutionContext"* %2) #6
  %109 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %108, i64 0, i32 4, i32 0, i32 0
  %110 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %109, align 8
  %111 = icmp eq %"class.WTF::StringImpl"* %110, null
  br i1 %111, label %129, label %112

112:                                              ; preds = %101
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load atomic i32, i32* %113 monotonic, align 4
  %115 = and i32 %114, 2
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %129

117:                                              ; preds = %112
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  %120 = zext i32 %119 to i33
  %121 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %120, i33 1) #6
  %122 = extractvalue { i33, i1 } %121, 1
  %123 = extractvalue { i33, i1 } %121, 0
  %124 = icmp slt i33 %123, 0
  %125 = or i1 %122, %124
  br i1 %125, label %126, label %127, !prof !2

126:                                              ; preds = %117
  call void @llvm.trap() #6
  unreachable

127:                                              ; preds = %117
  %128 = trunc i33 %123 to i32
  store i32 %128, i32* %118, align 4
  br label %129

129:                                              ; preds = %127, %112, %101
  br i1 %103, label %143, label %130

130:                                              ; preds = %129
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load atomic i32, i32* %131 monotonic, align 4
  %133 = and i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 0
  %136 = load i32, i32* %135, align 4
  br i1 %134, label %137, label %139

137:                                              ; preds = %130
  %138 = add i32 %136, -1
  store i32 %138, i32* %135, align 4
  br label %139

139:                                              ; preds = %137, %130
  %140 = phi i32 [ %138, %137 ], [ %136, %130 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %102) #6
  br label %143

143:                                              ; preds = %142, %139, %129
  %144 = call noalias i8* @malloc(i64 32) #6
  %145 = bitcast i8* %144 to %"class.blink::SourceLocation"*
  %146 = bitcast i8* %144 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %110, %"class.WTF::StringImpl"** %146, align 8
  br i1 %111, label %167, label %147

147:                                              ; preds = %97, %143
  %148 = phi %"class.blink::SourceLocation"* [ %99, %97 ], [ %145, %143 ]
  %149 = phi i8* [ %98, %97 ], [ %144, %143 ]
  %150 = phi %"class.WTF::StringImpl"* [ %91, %97 ], [ %110, %143 ]
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %150, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = load atomic i32, i32* %151 monotonic, align 4
  %153 = and i32 %152, 2
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %167

155:                                              ; preds = %147
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %150, i64 0, i32 0
  %157 = load i32, i32* %156, align 4
  %158 = zext i32 %157 to i33
  %159 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %158, i33 1) #6
  %160 = extractvalue { i33, i1 } %159, 1
  %161 = extractvalue { i33, i1 } %159, 0
  %162 = icmp slt i33 %161, 0
  %163 = or i1 %160, %162
  br i1 %163, label %164, label %165, !prof !2

164:                                              ; preds = %155
  call void @llvm.trap() #6
  unreachable

165:                                              ; preds = %155
  %166 = trunc i33 %161 to i32
  store i32 %166, i32* %156, align 4
  br label %167

167:                                              ; preds = %143, %147, %165
  %168 = phi i1 [ true, %143 ], [ false, %147 ], [ false, %165 ]
  %169 = phi %"class.blink::SourceLocation"* [ %145, %143 ], [ %148, %147 ], [ %148, %165 ]
  %170 = phi i8* [ %144, %143 ], [ %149, %147 ], [ %149, %165 ]
  %171 = phi %"class.WTF::StringImpl"* [ null, %143 ], [ %150, %147 ], [ %150, %165 ]
  %172 = getelementptr inbounds i8, i8* %170, i64 8
  %173 = bitcast i8* %172 to i32*
  store i32 %67, i32* %173, align 8
  %174 = getelementptr inbounds i8, i8* %170, i64 12
  %175 = bitcast i8* %174 to i32*
  store i32 %66, i32* %175, align 4
  %176 = getelementptr inbounds i8, i8* %170, i64 16
  %177 = bitcast i8* %176 to i64*
  store i64 %19, i64* %177, align 8
  %178 = getelementptr inbounds i8, i8* %170, i64 24
  %179 = bitcast i8* %178 to i32*
  store i32 %33, i32* %179, align 8
  br i1 %168, label %193, label %180

180:                                              ; preds = %167
  %181 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %171, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %182 = load atomic i32, i32* %181 monotonic, align 4
  %183 = and i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %171, i64 0, i32 0
  %186 = load i32, i32* %185, align 4
  br i1 %184, label %187, label %189

187:                                              ; preds = %180
  %188 = add i32 %186, -1
  store i32 %188, i32* %185, align 4
  br label %189

189:                                              ; preds = %187, %180
  %190 = phi i32 [ %188, %187 ], [ %186, %180 ]
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %192, label %193

192:                                              ; preds = %189
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %171) #6
  br label %193

193:                                              ; preds = %63, %167, %189, %192
  %194 = phi %"class.blink::SourceLocation"* [ %64, %63 ], [ %169, %167 ], [ %169, %189 ], [ %169, %192 ]
  ret %"class.blink::SourceLocation"* %194
}

declare %"class.v8::StackTrace"* @_ZNK2v87Message13GetStackTraceEv(%"class.v8::Message"*) local_unnamed_addr #2

declare %"class.blink::ThreadDebugger"* @_ZN5blink14ThreadDebugger4FromEPN2v87IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZNK2v87Message15GetScriptOriginEv(%"class.v8::ScriptOrigin"* sret, %"class.v8::Message"*) local_unnamed_addr #2

declare i32 @_ZNK2v810StackTrace13GetFrameCountEv(%"class.v8::StackTrace"*) local_unnamed_addr #2

declare %"class.v8::StackFrame"* @_ZNK2v810StackTrace8GetFrameEPNS_7IsolateEj(%"class.v8::StackTrace"*, %"class.v8::Isolate"*, i32) local_unnamed_addr #2

declare i32 @_ZNK2v810StackFrame11GetScriptIdEv(%"class.v8::StackFrame"*) local_unnamed_addr #2

declare i64 @_ZNK2v87Message13GetLineNumberENS_5LocalINS_7ContextEEE(%"class.v8::Message"*, %"class.v8::Context"*) local_unnamed_addr #2

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare i64 @_ZNK2v87Message14GetStartColumnENS_5LocalINS_7ContextEEE(%"class.v8::Message"*, %"class.v8::Context"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink12ToCoreStringERKN12v8_inspector10StringViewE(%"class.v8_inspector::StringView"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden noalias %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation12FromFunctionEN2v85LocalINS1_8FunctionEEE(%"class.v8::Function"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::ScriptOrigin", align 8
  %3 = icmp eq %"class.v8::Function"* %0, null
  br i1 %3, label %78, label %4

4:                                                ; preds = %1
  %5 = bitcast %"class.v8::ScriptOrigin"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %5) #6
  call void @_ZNK2v88Function15GetScriptOriginEv(%"class.v8::ScriptOrigin"* nonnull sret %2, %"class.v8::Function"* nonnull %0) #6
  %6 = getelementptr inbounds %"class.v8::ScriptOrigin", %"class.v8::ScriptOrigin"* %2, i64 0, i32 1, i32 0
  %7 = load %"class.v8::Value"*, %"class.v8::Value"** %6, align 8
  %8 = icmp eq %"class.v8::Value"* %7, null
  br i1 %8, label %28, label %9

9:                                                ; preds = %4
  %10 = bitcast %"class.v8::Value"* %7 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = and i64 %11, 3
  %13 = icmp eq i64 %12, 1
  br i1 %13, label %14, label %28

14:                                               ; preds = %9
  %15 = add i64 %11, -1
  %16 = inttoptr i64 %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = and i64 %11, -4294967296
  %19 = zext i32 %17 to i64
  %20 = or i64 %18, %19
  %21 = add i64 %20, 7
  %22 = inttoptr i64 %21 to i16*
  %23 = load i16, i16* %22, align 2
  %24 = icmp ult i16 %23, 64
  br i1 %24, label %25, label %28

25:                                               ; preds = %14
  %26 = bitcast %"class.v8::Value"* %7 to %"class.v8::String"*
  %27 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %26, i32 0) #6
  br label %28

28:                                               ; preds = %4, %9, %14, %25
  %29 = phi %"class.WTF::StringImpl"* [ %27, %25 ], [ null, %14 ], [ null, %4 ], [ null, %9 ]
  %30 = call i32 @_ZNK2v88Function19GetScriptLineNumberEv(%"class.v8::Function"* nonnull %0) #6
  %31 = add nsw i32 %30, 1
  %32 = call i32 @_ZNK2v88Function21GetScriptColumnNumberEv(%"class.v8::Function"* nonnull %0) #6
  %33 = add nsw i32 %32, 1
  %34 = call i32 @_ZNK2v88Function8ScriptIdEv(%"class.v8::Function"* nonnull %0) #6
  %35 = call noalias i8* @malloc(i64 32) #6
  %36 = bitcast i8* %35 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %29, %"class.WTF::StringImpl"** %36, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %28
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %55

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #6
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !2

52:                                               ; preds = %43
  call void @llvm.trap() #6
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %55

55:                                               ; preds = %28, %38, %53
  %56 = getelementptr inbounds i8, i8* %35, i64 8
  %57 = bitcast i8* %56 to i32*
  store i32 %31, i32* %57, align 8
  %58 = getelementptr inbounds i8, i8* %35, i64 12
  %59 = bitcast i8* %58 to i32*
  store i32 %33, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %35, i64 16
  %61 = bitcast i8* %60 to i64*
  store i64 0, i64* %61, align 8
  %62 = getelementptr inbounds i8, i8* %35, i64 24
  %63 = bitcast i8* %62 to i32*
  store i32 %34, i32* %63, align 8
  br i1 %37, label %77, label %64

64:                                               ; preds = %55
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %64
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %64
  %74 = phi i32 [ %72, %71 ], [ %70, %64 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #6
  br label %77

77:                                               ; preds = %55, %73, %76
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %5) #6
  br label %80

78:                                               ; preds = %1
  %79 = tail call noalias i8* @malloc(i64 32) #6
  call void @llvm.memset.p0i8.i64(i8* align 8 %79, i8 0, i64 28, i1 false)
  br label %80

80:                                               ; preds = %78, %77
  %81 = phi i8* [ %79, %78 ], [ %35, %77 ]
  %82 = bitcast i8* %81 to %"class.blink::SourceLocation"*
  ret %"class.blink::SourceLocation"* %82
}

declare void @_ZNK2v88Function15GetScriptOriginEv(%"class.v8::ScriptOrigin"* sret, %"class.v8::Function"*) local_unnamed_addr #2

declare i32 @_ZNK2v88Function19GetScriptLineNumberEv(%"class.v8::Function"*) local_unnamed_addr #2

declare i32 @_ZNK2v88Function21GetScriptColumnNumberEv(%"class.v8::Function"*) local_unnamed_addr #2

declare i32 @_ZNK2v88Function8ScriptIdEv(%"class.v8::Function"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden noalias %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation25CaptureWithFullStackTraceEv() local_unnamed_addr #0 align 2 {
  %1 = tail call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #6
  %2 = tail call %"class.blink::ThreadDebugger"* @_ZN5blink14ThreadDebugger4FromEPN2v87IsolateE(%"class.v8::Isolate"* %1) #6
  %3 = icmp eq %"class.blink::ThreadDebugger"* %2, null
  br i1 %3, label %26, label %4

4:                                                ; preds = %0
  %5 = tail call zeroext i1 @_ZN2v87Isolate9InContextEv(%"class.v8::Isolate"* %1) #6
  br i1 %5, label %6, label %26

6:                                                ; preds = %4
  %7 = tail call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #6
  %8 = load i32, i32* %7, align 4
  store i32 0, i32* %7, align 4
  %9 = getelementptr inbounds %"class.blink::ThreadDebugger", %"class.blink::ThreadDebugger"* %2, i64 0, i32 3, i32 0, i32 0, i32 0
  %10 = load %"class.v8_inspector::V8Inspector"*, %"class.v8_inspector::V8Inspector"** %9, align 8
  %11 = bitcast %"class.v8_inspector::V8Inspector"* %10 to %"class.v8_inspector::V8StackTrace"* (%"class.v8_inspector::V8Inspector"*, i1)***
  %12 = load %"class.v8_inspector::V8StackTrace"* (%"class.v8_inspector::V8Inspector"*, i1)**, %"class.v8_inspector::V8StackTrace"* (%"class.v8_inspector::V8Inspector"*, i1)*** %11, align 8
  %13 = getelementptr inbounds %"class.v8_inspector::V8StackTrace"* (%"class.v8_inspector::V8Inspector"*, i1)*, %"class.v8_inspector::V8StackTrace"* (%"class.v8_inspector::V8Inspector"*, i1)** %12, i64 20
  %14 = load %"class.v8_inspector::V8StackTrace"* (%"class.v8_inspector::V8Inspector"*, i1)*, %"class.v8_inspector::V8StackTrace"* (%"class.v8_inspector::V8Inspector"*, i1)** %13, align 8
  %15 = tail call %"class.v8_inspector::V8StackTrace"* %14(%"class.v8_inspector::V8Inspector"* %10, i1 zeroext true) #6
  %16 = ptrtoint %"class.v8_inspector::V8StackTrace"* %15 to i64
  store i32 %8, i32* %7, align 4
  %17 = icmp eq %"class.v8_inspector::V8StackTrace"* %15, null
  br i1 %17, label %26, label %18

18:                                               ; preds = %6
  %19 = bitcast %"class.v8_inspector::V8StackTrace"* %15 to i1 (%"class.v8_inspector::V8StackTrace"*)***
  %20 = load i1 (%"class.v8_inspector::V8StackTrace"*)**, i1 (%"class.v8_inspector::V8StackTrace"*)*** %19, align 8
  %21 = getelementptr inbounds i1 (%"class.v8_inspector::V8StackTrace"*)*, i1 (%"class.v8_inspector::V8StackTrace"*)** %20, i64 1
  %22 = load i1 (%"class.v8_inspector::V8StackTrace"*)*, i1 (%"class.v8_inspector::V8StackTrace"*)** %21, align 8
  %23 = tail call zeroext i1 %22(%"class.v8_inspector::V8StackTrace"* nonnull %15) #6
  br i1 %23, label %26, label %24

24:                                               ; preds = %18
  %25 = tail call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation30CreateFromNonEmptyV8StackTraceENSt3__110unique_ptrIN12v8_inspector12V8StackTraceENS1_14default_deleteIS4_EEEE(%"class.v8_inspector::V8StackTrace"* nonnull %15)
  br label %37

26:                                               ; preds = %6, %4, %0, %18
  %27 = phi i64 [ %16, %18 ], [ %16, %6 ], [ 0, %0 ], [ 0, %4 ]
  %28 = tail call noalias i8* @malloc(i64 32) #6
  %29 = bitcast i8* %28 to %"class.blink::SourceLocation"*
  %30 = icmp eq i64 %27, 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 28, i1 false)
  br i1 %30, label %37, label %31

31:                                               ; preds = %26
  %32 = inttoptr i64 %27 to %"class.v8_inspector::V8StackTrace"*
  %33 = inttoptr i64 %27 to void (%"class.v8_inspector::V8StackTrace"*)***
  %34 = load void (%"class.v8_inspector::V8StackTrace"*)**, void (%"class.v8_inspector::V8StackTrace"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.v8_inspector::V8StackTrace"*)*, void (%"class.v8_inspector::V8StackTrace"*)** %34, i64 8
  %36 = load void (%"class.v8_inspector::V8StackTrace"*)*, void (%"class.v8_inspector::V8StackTrace"*)** %35, align 8
  tail call void %36(%"class.v8_inspector::V8StackTrace"* nonnull %32) #6
  br label %37

37:                                               ; preds = %24, %26, %31
  %38 = phi %"class.blink::SourceLocation"* [ %25, %24 ], [ %29, %26 ], [ %29, %31 ]
  ret %"class.blink::SourceLocation"* %38
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SourceLocationC2ERKN3WTF6StringEjjNSt3__110unique_ptrIN12v8_inspector12V8StackTraceENS5_14default_deleteIS8_EEEEi(%"class.blink::SourceLocation"* nocapture, %"class.WTF::String"* nocapture readonly dereferenceable(8), i32, i32, %"class.v8_inspector::V8StackTrace"*, i32) unnamed_addr #0 align 2 {
  %7 = ptrtoint %"class.v8_inspector::V8StackTrace"* %4 to i64
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::SourceLocation", %"class.blink::SourceLocation"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #6
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !2

26:                                               ; preds = %17
  tail call void @llvm.trap() #6
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %27, %12, %6
  %30 = getelementptr inbounds %"class.blink::SourceLocation", %"class.blink::SourceLocation"* %0, i64 0, i32 1
  store i32 %2, i32* %30, align 8
  %31 = getelementptr inbounds %"class.blink::SourceLocation", %"class.blink::SourceLocation"* %0, i64 0, i32 2
  store i32 %3, i32* %31, align 4
  %32 = getelementptr inbounds %"class.blink::SourceLocation", %"class.blink::SourceLocation"* %0, i64 0, i32 3
  %33 = bitcast %"class.std::__1::unique_ptr.1"* %32 to i64*
  store i64 %7, i64* %33, align 8
  %34 = getelementptr inbounds %"class.blink::SourceLocation", %"class.blink::SourceLocation"* %0, i64 0, i32 4
  store i32 %5, i32* %34, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SourceLocationD2Ev(%"class.blink::SourceLocation"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SourceLocation", %"class.blink::SourceLocation"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.v8_inspector::V8StackTrace"*, %"class.v8_inspector::V8StackTrace"** %2, align 8
  store %"class.v8_inspector::V8StackTrace"* null, %"class.v8_inspector::V8StackTrace"** %2, align 8
  %4 = icmp eq %"class.v8_inspector::V8StackTrace"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.v8_inspector::V8StackTrace"* %3 to void (%"class.v8_inspector::V8StackTrace"*)***
  %7 = load void (%"class.v8_inspector::V8StackTrace"*)**, void (%"class.v8_inspector::V8StackTrace"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.v8_inspector::V8StackTrace"*)*, void (%"class.v8_inspector::V8StackTrace"*)** %7, i64 8
  %9 = load void (%"class.v8_inspector::V8StackTrace"*)*, void (%"class.v8_inspector::V8StackTrace"*)** %8, align 8
  tail call void %9(%"class.v8_inspector::V8StackTrace"* nonnull %3) #6
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"class.blink::SourceLocation", %"class.blink::SourceLocation"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  br i1 %18, label %21, label %23

21:                                               ; preds = %14
  %22 = add i32 %20, -1
  store i32 %22, i32* %19, align 4
  br label %23

23:                                               ; preds = %21, %14
  %24 = phi i32 [ %22, %21 ], [ %20, %14 ]
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %23
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %12) #6
  br label %27

27:                                               ; preds = %10, %23, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14SourceLocation13ToTracedValueEPNS_11TracedValueEPKc(%"class.blink::SourceLocation"* nocapture readonly, %"class.blink::TracedValue"*, i8*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.v8_inspector::StringView", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.v8_inspector::StringView", align 8
  %8 = getelementptr inbounds %"class.blink::SourceLocation", %"class.blink::SourceLocation"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %9 = load %"class.v8_inspector::V8StackTrace"*, %"class.v8_inspector::V8StackTrace"** %8, align 8
  %10 = icmp eq %"class.v8_inspector::V8StackTrace"* %9, null
  br i1 %10, label %86, label %11

11:                                               ; preds = %3
  %12 = bitcast %"class.v8_inspector::V8StackTrace"* %9 to i1 (%"class.v8_inspector::V8StackTrace"*)***
  %13 = load i1 (%"class.v8_inspector::V8StackTrace"*)**, i1 (%"class.v8_inspector::V8StackTrace"*)*** %12, align 8
  %14 = getelementptr inbounds i1 (%"class.v8_inspector::V8StackTrace"*)*, i1 (%"class.v8_inspector::V8StackTrace"*)** %13, i64 1
  %15 = load i1 (%"class.v8_inspector::V8StackTrace"*)*, i1 (%"class.v8_inspector::V8StackTrace"*)** %14, align 8
  %16 = tail call zeroext i1 %15(%"class.v8_inspector::V8StackTrace"* nonnull %9) #6
  br i1 %16, label %86, label %17

17:                                               ; preds = %11
  tail call void @_ZN5blink11TracedValue10BeginArrayEPKc(%"class.blink::TracedValue"* %1, i8* %2) #6
  tail call void @_ZN5blink11TracedValue15BeginDictionaryEv(%"class.blink::TracedValue"* %1) #6
  %18 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #6
  %19 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #6
  %20 = load %"class.v8_inspector::V8StackTrace"*, %"class.v8_inspector::V8StackTrace"** %8, align 8
  %21 = bitcast %"class.v8_inspector::V8StackTrace"* %20 to void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::V8StackTrace"*)***
  %22 = load void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::V8StackTrace"*)**, void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::V8StackTrace"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::V8StackTrace"*)*, void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::V8StackTrace"*)** %22, i64 6
  %24 = load void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::V8StackTrace"*)*, void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::V8StackTrace"*)** %23, align 8
  call void %24(%"class.v8_inspector::StringView"* nonnull sret %5, %"class.v8_inspector::V8StackTrace"* %20) #6
  %25 = call %"class.WTF::StringImpl"* @_ZN5blink12ToCoreStringERKN12v8_inspector10StringViewE(%"class.v8_inspector::StringView"* nonnull dereferenceable(24) %5) #6
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink11TracedValue9SetStringEPKcRKN3WTF6StringE(%"class.blink::TracedValue"* %1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), %"class.WTF::String"* nonnull dereferenceable(8) %4) #6
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %17
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #6
  br label %42

42:                                               ; preds = %17, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #6
  %43 = load %"class.v8_inspector::V8StackTrace"*, %"class.v8_inspector::V8StackTrace"** %8, align 8
  %44 = bitcast %"class.v8_inspector::V8StackTrace"* %43 to i32 (%"class.v8_inspector::V8StackTrace"*)***
  %45 = load i32 (%"class.v8_inspector::V8StackTrace"*)**, i32 (%"class.v8_inspector::V8StackTrace"*)*** %44, align 8
  %46 = getelementptr inbounds i32 (%"class.v8_inspector::V8StackTrace"*)*, i32 (%"class.v8_inspector::V8StackTrace"*)** %45, i64 5
  %47 = load i32 (%"class.v8_inspector::V8StackTrace"*)*, i32 (%"class.v8_inspector::V8StackTrace"*)** %46, align 8
  %48 = call i32 %47(%"class.v8_inspector::V8StackTrace"* %43) #6
  call void @_ZN5blink11TracedValue10SetIntegerEPKci(%"class.blink::TracedValue"* %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i32 %48) #6
  %49 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #6
  %50 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #6
  %51 = load %"class.v8_inspector::V8StackTrace"*, %"class.v8_inspector::V8StackTrace"** %8, align 8
  %52 = bitcast %"class.v8_inspector::V8StackTrace"* %51 to void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::V8StackTrace"*)***
  %53 = load void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::V8StackTrace"*)**, void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::V8StackTrace"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::V8StackTrace"*)*, void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::V8StackTrace"*)** %53, i64 2
  %55 = load void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::V8StackTrace"*)*, void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::V8StackTrace"*)** %54, align 8
  call void %55(%"class.v8_inspector::StringView"* nonnull sret %7, %"class.v8_inspector::V8StackTrace"* %51) #6
  %56 = call %"class.WTF::StringImpl"* @_ZN5blink12ToCoreStringERKN12v8_inspector10StringViewE(%"class.v8_inspector::StringView"* nonnull dereferenceable(24) %7) #6
  %57 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %56, %"class.WTF::StringImpl"** %57, align 8
  call void @_ZN5blink11TracedValue9SetStringEPKcRKN3WTF6StringE(%"class.blink::TracedValue"* %1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), %"class.WTF::String"* nonnull dereferenceable(8) %6) #6
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %59, label %73, label %60

60:                                               ; preds = %42
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  br i1 %64, label %67, label %69

67:                                               ; preds = %60
  %68 = add i32 %66, -1
  store i32 %68, i32* %65, align 4
  br label %69

69:                                               ; preds = %67, %60
  %70 = phi i32 [ %68, %67 ], [ %66, %60 ]
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %69
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %58) #6
  br label %73

73:                                               ; preds = %42, %69, %72
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #6
  %74 = load %"class.v8_inspector::V8StackTrace"*, %"class.v8_inspector::V8StackTrace"** %8, align 8
  %75 = bitcast %"class.v8_inspector::V8StackTrace"* %74 to i32 (%"class.v8_inspector::V8StackTrace"*)***
  %76 = load i32 (%"class.v8_inspector::V8StackTrace"*)**, i32 (%"class.v8_inspector::V8StackTrace"*)*** %75, align 8
  %77 = getelementptr inbounds i32 (%"class.v8_inspector::V8StackTrace"*)*, i32 (%"class.v8_inspector::V8StackTrace"*)** %76, i64 3
  %78 = load i32 (%"class.v8_inspector::V8StackTrace"*)*, i32 (%"class.v8_inspector::V8StackTrace"*)** %77, align 8
  %79 = call i32 %78(%"class.v8_inspector::V8StackTrace"* %74) #6
  call void @_ZN5blink11TracedValue10SetIntegerEPKci(%"class.blink::TracedValue"* %1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i32 %79) #6
  %80 = load %"class.v8_inspector::V8StackTrace"*, %"class.v8_inspector::V8StackTrace"** %8, align 8
  %81 = bitcast %"class.v8_inspector::V8StackTrace"* %80 to i32 (%"class.v8_inspector::V8StackTrace"*)***
  %82 = load i32 (%"class.v8_inspector::V8StackTrace"*)**, i32 (%"class.v8_inspector::V8StackTrace"*)*** %81, align 8
  %83 = getelementptr inbounds i32 (%"class.v8_inspector::V8StackTrace"*)*, i32 (%"class.v8_inspector::V8StackTrace"*)** %82, i64 4
  %84 = load i32 (%"class.v8_inspector::V8StackTrace"*)*, i32 (%"class.v8_inspector::V8StackTrace"*)** %83, align 8
  %85 = call i32 %84(%"class.v8_inspector::V8StackTrace"* %80) #6
  call void @_ZN5blink11TracedValue10SetIntegerEPKci(%"class.blink::TracedValue"* %1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i32 %85) #6
  call void @_ZN5blink11TracedValue13EndDictionaryEv(%"class.blink::TracedValue"* %1) #6
  call void @_ZN5blink11TracedValue8EndArrayEv(%"class.blink::TracedValue"* %1) #6
  br label %86

86:                                               ; preds = %3, %11, %73
  ret void
}

declare void @_ZN5blink11TracedValue10BeginArrayEPKc(%"class.blink::TracedValue"*, i8*) local_unnamed_addr #2

declare void @_ZN5blink11TracedValue15BeginDictionaryEv(%"class.blink::TracedValue"*) local_unnamed_addr #2

declare void @_ZN5blink11TracedValue9SetStringEPKcRKN3WTF6StringE(%"class.blink::TracedValue"*, i8*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink11TracedValue10SetIntegerEPKci(%"class.blink::TracedValue"*, i8*, i32) local_unnamed_addr #2

declare void @_ZN5blink11TracedValue13EndDictionaryEv(%"class.blink::TracedValue"*) local_unnamed_addr #2

declare void @_ZN5blink11TracedValue8EndArrayEv(%"class.blink::TracedValue"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14SourceLocation14WriteIntoTraceEN8perfetto11TracedValueE(%"class.blink::SourceLocation"* nocapture readonly, %"class.perfetto::TracedValue"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.perfetto::TracedValue", align 8
  %4 = alloca %"class.perfetto::TracedValue", align 8
  %5 = alloca %"class.perfetto::TracedValue", align 8
  %6 = alloca %"class.perfetto::TracedValue", align 8
  %7 = alloca %"class.perfetto::TracedValue", align 8
  %8 = alloca %"class.perfetto::TracedValue", align 8
  %9 = alloca %"class.perfetto::TracedValue", align 8
  %10 = alloca %"class.perfetto::TracedValue", align 8
  %11 = alloca %"class.perfetto::TracedValue", align 8
  %12 = alloca %"class.perfetto::TracedValue", align 8
  %13 = alloca %"class.perfetto::TracedArray", align 8
  %14 = alloca %"class.perfetto::TracedDictionary", align 8
  %15 = alloca %"class.WTF::String", align 8
  %16 = alloca %"class.v8_inspector::StringView", align 8
  %17 = alloca %"class.WTF::String", align 8
  %18 = alloca %"class.v8_inspector::StringView", align 8
  %19 = bitcast %"class.perfetto::TracedArray"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #6
  %20 = bitcast %"class.perfetto::TracedArray"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  call void @_ZNO8perfetto11TracedValue10WriteArrayEv(%"class.perfetto::TracedArray"* nonnull sret %13, %"class.perfetto::TracedValue"* %1) #6
  %21 = bitcast %"class.perfetto::TracedDictionary"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #6
  %22 = bitcast %"class.perfetto::TracedDictionary"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 16, i1 false)
  call void @_ZN8perfetto11TracedArray16AppendDictionaryEv(%"class.perfetto::TracedDictionary"* nonnull sret %14, %"class.perfetto::TracedArray"* nonnull %13) #6
  %23 = bitcast %"class.WTF::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #6
  %24 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %16, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #6
  %25 = getelementptr inbounds %"class.blink::SourceLocation", %"class.blink::SourceLocation"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %26 = load %"class.v8_inspector::V8StackTrace"*, %"class.v8_inspector::V8StackTrace"** %25, align 8
  %27 = bitcast %"class.v8_inspector::V8StackTrace"* %26 to void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::V8StackTrace"*)***
  %28 = load void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::V8StackTrace"*)**, void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::V8StackTrace"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::V8StackTrace"*)*, void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::V8StackTrace"*)** %28, i64 6
  %30 = load void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::V8StackTrace"*)*, void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::V8StackTrace"*)** %29, align 8
  call void %30(%"class.v8_inspector::StringView"* nonnull sret %16, %"class.v8_inspector::V8StackTrace"* %26) #6
  %31 = call %"class.WTF::StringImpl"* @_ZN5blink12ToCoreStringERKN12v8_inspector10StringViewE(%"class.v8_inspector::StringView"* nonnull dereferenceable(24) %16) #6
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %31, %"class.WTF::StringImpl"** %32, align 8
  %33 = bitcast %"class.perfetto::TracedValue"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33)
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %10, %"class.perfetto::TracedDictionary"* nonnull %14, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0)) #6
  %34 = bitcast %"class.perfetto::TracedValue"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %34, i8* nonnull align 8 %33, i64 16, i1 false) #6
  call void @_ZNK3WTF6String14WriteIntoTraceEN8perfetto11TracedValueE(%"class.WTF::String"* nonnull %15, %"class.perfetto::TracedValue"* nonnull %9) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33)
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %50, label %37

37:                                               ; preds = %2
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  br i1 %41, label %44, label %46

44:                                               ; preds = %37
  %45 = add i32 %43, -1
  store i32 %45, i32* %42, align 4
  br label %46

46:                                               ; preds = %44, %37
  %47 = phi i32 [ %45, %44 ], [ %43, %37 ]
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %46
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #6
  br label %50

50:                                               ; preds = %2, %46, %49
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #6
  %51 = load %"class.v8_inspector::V8StackTrace"*, %"class.v8_inspector::V8StackTrace"** %25, align 8
  %52 = bitcast %"class.v8_inspector::V8StackTrace"* %51 to i32 (%"class.v8_inspector::V8StackTrace"*)***
  %53 = load i32 (%"class.v8_inspector::V8StackTrace"*)**, i32 (%"class.v8_inspector::V8StackTrace"*)*** %52, align 8
  %54 = getelementptr inbounds i32 (%"class.v8_inspector::V8StackTrace"*)*, i32 (%"class.v8_inspector::V8StackTrace"*)** %53, i64 5
  %55 = load i32 (%"class.v8_inspector::V8StackTrace"*)*, i32 (%"class.v8_inspector::V8StackTrace"*)** %54, align 8
  %56 = call i32 %55(%"class.v8_inspector::V8StackTrace"* %51) #6
  %57 = bitcast %"class.perfetto::TracedValue"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %57)
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %6, %"class.perfetto::TracedDictionary"* nonnull %14, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0)) #6
  %58 = bitcast %"class.perfetto::TracedValue"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %58) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %58, i8* nonnull align 8 %57, i64 16, i1 false) #6
  %59 = sext i32 %56 to i64
  call void @_ZNO8perfetto11TracedValue10WriteInt64El(%"class.perfetto::TracedValue"* nonnull %5, i64 %59) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %58) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %57)
  %60 = bitcast %"class.WTF::String"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #6
  %61 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %18, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #6
  %62 = load %"class.v8_inspector::V8StackTrace"*, %"class.v8_inspector::V8StackTrace"** %25, align 8
  %63 = bitcast %"class.v8_inspector::V8StackTrace"* %62 to void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::V8StackTrace"*)***
  %64 = load void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::V8StackTrace"*)**, void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::V8StackTrace"*)*** %63, align 8
  %65 = getelementptr inbounds void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::V8StackTrace"*)*, void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::V8StackTrace"*)** %64, i64 2
  %66 = load void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::V8StackTrace"*)*, void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::V8StackTrace"*)** %65, align 8
  call void %66(%"class.v8_inspector::StringView"* nonnull sret %18, %"class.v8_inspector::V8StackTrace"* %62) #6
  %67 = call %"class.WTF::StringImpl"* @_ZN5blink12ToCoreStringERKN12v8_inspector10StringViewE(%"class.v8_inspector::StringView"* nonnull dereferenceable(24) %18) #6
  %68 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %67, %"class.WTF::StringImpl"** %68, align 8
  %69 = bitcast %"class.perfetto::TracedValue"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %69)
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %4, %"class.perfetto::TracedDictionary"* nonnull %14, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0)) #6
  %70 = bitcast %"class.perfetto::TracedValue"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %70) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %70, i8* nonnull align 8 %69, i64 16, i1 false) #6
  call void @_ZNK3WTF6String14WriteIntoTraceEN8perfetto11TracedValueE(%"class.WTF::String"* nonnull %17, %"class.perfetto::TracedValue"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %70) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %69)
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %72, label %86, label %73

73:                                               ; preds = %50
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %82

80:                                               ; preds = %73
  %81 = add i32 %79, -1
  store i32 %81, i32* %78, align 4
  br label %82

82:                                               ; preds = %80, %73
  %83 = phi i32 [ %81, %80 ], [ %79, %73 ]
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %86

85:                                               ; preds = %82
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %71) #6
  br label %86

86:                                               ; preds = %50, %82, %85
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #6
  %87 = load %"class.v8_inspector::V8StackTrace"*, %"class.v8_inspector::V8StackTrace"** %25, align 8
  %88 = bitcast %"class.v8_inspector::V8StackTrace"* %87 to i32 (%"class.v8_inspector::V8StackTrace"*)***
  %89 = load i32 (%"class.v8_inspector::V8StackTrace"*)**, i32 (%"class.v8_inspector::V8StackTrace"*)*** %88, align 8
  %90 = getelementptr inbounds i32 (%"class.v8_inspector::V8StackTrace"*)*, i32 (%"class.v8_inspector::V8StackTrace"*)** %89, i64 3
  %91 = load i32 (%"class.v8_inspector::V8StackTrace"*)*, i32 (%"class.v8_inspector::V8StackTrace"*)** %90, align 8
  %92 = call i32 %91(%"class.v8_inspector::V8StackTrace"* %87) #6
  %93 = bitcast %"class.perfetto::TracedValue"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %93)
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %8, %"class.perfetto::TracedDictionary"* nonnull %14, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0)) #6
  %94 = bitcast %"class.perfetto::TracedValue"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %94) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %94, i8* nonnull align 8 %93, i64 16, i1 false) #6
  %95 = sext i32 %92 to i64
  call void @_ZNO8perfetto11TracedValue10WriteInt64El(%"class.perfetto::TracedValue"* nonnull %7, i64 %95) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %94) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %93)
  %96 = load %"class.v8_inspector::V8StackTrace"*, %"class.v8_inspector::V8StackTrace"** %25, align 8
  %97 = bitcast %"class.v8_inspector::V8StackTrace"* %96 to i32 (%"class.v8_inspector::V8StackTrace"*)***
  %98 = load i32 (%"class.v8_inspector::V8StackTrace"*)**, i32 (%"class.v8_inspector::V8StackTrace"*)*** %97, align 8
  %99 = getelementptr inbounds i32 (%"class.v8_inspector::V8StackTrace"*)*, i32 (%"class.v8_inspector::V8StackTrace"*)** %98, i64 4
  %100 = load i32 (%"class.v8_inspector::V8StackTrace"*)*, i32 (%"class.v8_inspector::V8StackTrace"*)** %99, align 8
  %101 = call i32 %100(%"class.v8_inspector::V8StackTrace"* %96) #6
  %102 = bitcast %"class.perfetto::TracedValue"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %102)
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %12, %"class.perfetto::TracedDictionary"* nonnull %14, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0)) #6
  %103 = bitcast %"class.perfetto::TracedValue"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %103) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %103, i8* nonnull align 8 %102, i64 16, i1 false) #6
  %104 = sext i32 %101 to i64
  call void @_ZNO8perfetto11TracedValue10WriteInt64El(%"class.perfetto::TracedValue"* nonnull %11, i64 %104) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %103) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %102)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #6
  ret void
}

declare void @_ZNO8perfetto11TracedValue10WriteArrayEv(%"class.perfetto::TracedArray"* sret, %"class.perfetto::TracedValue"*) local_unnamed_addr #2

declare void @_ZN8perfetto11TracedArray16AppendDictionaryEv(%"class.perfetto::TracedDictionary"* sret, %"class.perfetto::TracedArray"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden noalias %"class.blink::SourceLocation"* @_ZNK5blink14SourceLocation5CloneEv(%"class.blink::SourceLocation"*) local_unnamed_addr #0 align 2 {
  %2 = tail call noalias i8* @malloc(i64 32) #6
  %3 = bitcast i8* %2 to %"class.blink::SourceLocation"*
  %4 = getelementptr inbounds %"class.blink::SourceLocation", %"class.blink::SourceLocation"* %0, i64 0, i32 0
  %5 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"* %4) #6
  %6 = getelementptr inbounds %"class.blink::SourceLocation", %"class.blink::SourceLocation"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.blink::SourceLocation", %"class.blink::SourceLocation"* %0, i64 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %"class.blink::SourceLocation", %"class.blink::SourceLocation"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %11 = load %"class.v8_inspector::V8StackTrace"*, %"class.v8_inspector::V8StackTrace"** %10, align 8
  %12 = icmp eq %"class.v8_inspector::V8StackTrace"* %11, null
  br i1 %12, label %20, label %13

13:                                               ; preds = %1
  %14 = bitcast %"class.v8_inspector::V8StackTrace"* %11 to %"class.v8_inspector::V8StackTrace"* (%"class.v8_inspector::V8StackTrace"*)***
  %15 = load %"class.v8_inspector::V8StackTrace"* (%"class.v8_inspector::V8StackTrace"*)**, %"class.v8_inspector::V8StackTrace"* (%"class.v8_inspector::V8StackTrace"*)*** %14, align 8
  %16 = getelementptr inbounds %"class.v8_inspector::V8StackTrace"* (%"class.v8_inspector::V8StackTrace"*)*, %"class.v8_inspector::V8StackTrace"* (%"class.v8_inspector::V8StackTrace"*)** %15, i64 12
  %17 = load %"class.v8_inspector::V8StackTrace"* (%"class.v8_inspector::V8StackTrace"*)*, %"class.v8_inspector::V8StackTrace"* (%"class.v8_inspector::V8StackTrace"*)** %16, align 8
  %18 = tail call %"class.v8_inspector::V8StackTrace"* %17(%"class.v8_inspector::V8StackTrace"* nonnull %11) #6
  %19 = ptrtoint %"class.v8_inspector::V8StackTrace"* %18 to i64
  br label %20

20:                                               ; preds = %1, %13
  %21 = phi i64 [ %19, %13 ], [ 0, %1 ]
  %22 = getelementptr inbounds %"class.blink::SourceLocation", %"class.blink::SourceLocation"* %0, i64 0, i32 4
  %23 = load i32, i32* %22, align 8
  %24 = bitcast i8* %2 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"** %24, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %25, label %63, label %26

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %43

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i33
  %35 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #6
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !2

40:                                               ; preds = %31
  tail call void @llvm.trap() #6
  unreachable

41:                                               ; preds = %31
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %32, align 4
  br label %43

43:                                               ; preds = %41, %26
  %44 = getelementptr inbounds i8, i8* %2, i64 8
  %45 = bitcast i8* %44 to i32*
  store i32 %7, i32* %45, align 8
  %46 = getelementptr inbounds i8, i8* %2, i64 12
  %47 = bitcast i8* %46 to i32*
  store i32 %9, i32* %47, align 4
  %48 = getelementptr inbounds i8, i8* %2, i64 16
  %49 = bitcast i8* %48 to i64*
  store i64 %21, i64* %49, align 8
  %50 = getelementptr inbounds i8, i8* %2, i64 24
  %51 = bitcast i8* %50 to i32*
  store i32 %23, i32* %51, align 8
  %52 = load atomic i32, i32* %27 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %43
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %43
  %60 = phi i32 [ %58, %57 ], [ %56, %43 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %72

62:                                               ; preds = %59
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %5) #6
  br label %72

63:                                               ; preds = %20
  %64 = getelementptr inbounds i8, i8* %2, i64 8
  %65 = bitcast i8* %64 to i32*
  store i32 %7, i32* %65, align 8
  %66 = getelementptr inbounds i8, i8* %2, i64 12
  %67 = bitcast i8* %66 to i32*
  store i32 %9, i32* %67, align 4
  %68 = getelementptr inbounds i8, i8* %2, i64 16
  %69 = bitcast i8* %68 to i64*
  store i64 %21, i64* %69, align 8
  %70 = getelementptr inbounds i8, i8* %2, i64 24
  %71 = bitcast i8* %70 to i32*
  store i32 %23, i32* %71, align 8
  br label %72

72:                                               ; preds = %63, %59, %62
  ret %"class.blink::SourceLocation"* %3
}

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8_inspector::protocol::Runtime::API::StackTrace"* @_ZNK5blink14SourceLocation20BuildInspectorObjectEv(%"class.blink::SourceLocation"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SourceLocation", %"class.blink::SourceLocation"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.v8_inspector::V8StackTrace"*, %"class.v8_inspector::V8StackTrace"** %2, align 8
  %4 = icmp eq %"class.v8_inspector::V8StackTrace"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.v8_inspector::V8StackTrace"* %3 to %"class.v8_inspector::protocol::Runtime::API::StackTrace"* (%"class.v8_inspector::V8StackTrace"*, i32)***
  %7 = load %"class.v8_inspector::protocol::Runtime::API::StackTrace"* (%"class.v8_inspector::V8StackTrace"*, i32)**, %"class.v8_inspector::protocol::Runtime::API::StackTrace"* (%"class.v8_inspector::V8StackTrace"*, i32)*** %6, align 8
  %8 = getelementptr inbounds %"class.v8_inspector::protocol::Runtime::API::StackTrace"* (%"class.v8_inspector::V8StackTrace"*, i32)*, %"class.v8_inspector::protocol::Runtime::API::StackTrace"* (%"class.v8_inspector::V8StackTrace"*, i32)** %7, i64 10
  %9 = load %"class.v8_inspector::protocol::Runtime::API::StackTrace"* (%"class.v8_inspector::V8StackTrace"*, i32)*, %"class.v8_inspector::protocol::Runtime::API::StackTrace"* (%"class.v8_inspector::V8StackTrace"*, i32)** %8, align 8
  %10 = tail call %"class.v8_inspector::protocol::Runtime::API::StackTrace"* %9(%"class.v8_inspector::V8StackTrace"* nonnull %3, i32 2147483647) #6
  br label %11

11:                                               ; preds = %1, %5
  %12 = phi %"class.v8_inspector::protocol::Runtime::API::StackTrace"* [ %10, %5 ], [ null, %1 ]
  ret %"class.v8_inspector::protocol::Runtime::API::StackTrace"* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8_inspector::protocol::Runtime::API::StackTrace"* @_ZNK5blink14SourceLocation20BuildInspectorObjectEi(%"class.blink::SourceLocation"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SourceLocation", %"class.blink::SourceLocation"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.v8_inspector::V8StackTrace"*, %"class.v8_inspector::V8StackTrace"** %3, align 8
  %5 = icmp eq %"class.v8_inspector::V8StackTrace"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.v8_inspector::V8StackTrace"* %4 to %"class.v8_inspector::protocol::Runtime::API::StackTrace"* (%"class.v8_inspector::V8StackTrace"*, i32)***
  %8 = load %"class.v8_inspector::protocol::Runtime::API::StackTrace"* (%"class.v8_inspector::V8StackTrace"*, i32)**, %"class.v8_inspector::protocol::Runtime::API::StackTrace"* (%"class.v8_inspector::V8StackTrace"*, i32)*** %7, align 8
  %9 = getelementptr inbounds %"class.v8_inspector::protocol::Runtime::API::StackTrace"* (%"class.v8_inspector::V8StackTrace"*, i32)*, %"class.v8_inspector::protocol::Runtime::API::StackTrace"* (%"class.v8_inspector::V8StackTrace"*, i32)** %8, i64 10
  %10 = load %"class.v8_inspector::protocol::Runtime::API::StackTrace"* (%"class.v8_inspector::V8StackTrace"*, i32)*, %"class.v8_inspector::protocol::Runtime::API::StackTrace"* (%"class.v8_inspector::V8StackTrace"*, i32)** %9, align 8
  %11 = tail call %"class.v8_inspector::protocol::Runtime::API::StackTrace"* %10(%"class.v8_inspector::V8StackTrace"* nonnull %4, i32 %1) #6
  br label %12

12:                                               ; preds = %2, %6
  %13 = phi %"class.v8_inspector::protocol::Runtime::API::StackTrace"* [ %11, %6 ], [ null, %2 ]
  ret %"class.v8_inspector::protocol::Runtime::API::StackTrace"* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink14SourceLocation8ToStringEv(%"class.blink::SourceLocation"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SourceLocation", %"class.blink::SourceLocation"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.v8_inspector::V8StackTrace"*, %"class.v8_inspector::V8StackTrace"** %2, align 8
  %4 = icmp eq %"class.v8_inspector::V8StackTrace"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.v8_inspector::V8StackTrace"* %3 to %"class.v8_inspector::StringBuffer"* (%"class.v8_inspector::V8StackTrace"*)***
  %7 = load %"class.v8_inspector::StringBuffer"* (%"class.v8_inspector::V8StackTrace"*)**, %"class.v8_inspector::StringBuffer"* (%"class.v8_inspector::V8StackTrace"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.v8_inspector::StringBuffer"* (%"class.v8_inspector::V8StackTrace"*)*, %"class.v8_inspector::StringBuffer"* (%"class.v8_inspector::V8StackTrace"*)** %7, i64 11
  %9 = load %"class.v8_inspector::StringBuffer"* (%"class.v8_inspector::V8StackTrace"*)*, %"class.v8_inspector::StringBuffer"* (%"class.v8_inspector::V8StackTrace"*)** %8, align 8
  %10 = tail call %"class.v8_inspector::StringBuffer"* %9(%"class.v8_inspector::V8StackTrace"* nonnull %3) #6
  %11 = tail call %"class.WTF::StringImpl"* @_ZN5blink12ToCoreStringENSt3__110unique_ptrIN12v8_inspector12StringBufferENS0_14default_deleteIS3_EEEE(%"class.v8_inspector::StringBuffer"* %10) #6
  br label %12

12:                                               ; preds = %1, %5
  %13 = phi %"class.WTF::StringImpl"* [ %11, %5 ], [ null, %1 ]
  ret %"class.WTF::StringImpl"* %13
}

declare %"class.WTF::StringImpl"* @_ZN5blink12ToCoreStringENSt3__110unique_ptrIN12v8_inspector12StringBufferENS0_14default_deleteIS3_EEEE(%"class.v8_inspector::StringBuffer"*) local_unnamed_addr #2

declare %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() local_unnamed_addr #2

declare zeroext i1 @_ZN2v87Isolate9InContextEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #5

declare void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* sret, %"class.perfetto::TracedDictionary"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF6String14WriteIntoTraceEN8perfetto11TracedValueE(%"class.WTF::String"*, %"class.perfetto::TracedValue"*) local_unnamed_addr #2

declare void @_ZNO8perfetto11TracedValue10WriteInt64El(%"class.perfetto::TracedValue"*, i64) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
