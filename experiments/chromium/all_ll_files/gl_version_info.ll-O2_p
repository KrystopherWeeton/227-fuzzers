; ModuleID = '../../ui/gl/gl_version_info.cc'
source_filename = "../../ui/gl/gl_version_info.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::pair" = type { %"class.base::BasicStringPiece", %"class.base::BasicStringPiece" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"struct.gl::GLVersionInfo" = type { i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.base::BasicStringPiece"* }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::Version" = type { %"class.std::__1::vector.6" }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { i32*, i32*, %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i32* }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.13", %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { i64 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }

$_ZNSt3__16__treeINS_12__value_typeIN4base16BasicStringPieceIcNS_11char_traitsIcEEEES6_EENS_19__map_value_compareIS6_S7_NS_4lessIS6_EELb1EEENS_9allocatorIS7_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS7_PNS_11__tree_nodeIS7_SH_EElEERPNS_15__tree_end_nodeISJ_EESK_RKT_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN4base16BasicStringPieceIcNS_11char_traitsIcEEEES6_EENS_19__map_value_compareIS6_S7_NS_4lessIS6_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE = comdat any

@.str = private unnamed_addr constant [6 x i8] c"ANGLE\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"Mesa\00", align 1
@.str.2 = private unnamed_addr constant [19 x i8] c"SwiftShader Device\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"Vulkan\00", align 1
@.str.4 = private unnamed_addr constant [12 x i8] c"ANGLE Metal\00", align 1
@.str.5 = private unnamed_addr constant [19 x i8] c"Google SwiftShader\00", align 1
@.str.6 = private unnamed_addr constant [9 x i8] c"Direct3D\00", align 1
@.str.7 = private unnamed_addr constant [21 x i8] c"GL_ARB_compatibility\00", align 1
@_ZN12_GLOBAL__N_123disable_es3_for_testingE = internal unnamed_addr global i1 false, align 1
@.str.8 = private unnamed_addr constant [11 x i8] c"OpenGL ES \00", align 1
@.str.9 = private unnamed_addr constant [6 x i8] c" -()@\00", align 1
@.str.10 = private unnamed_addr constant [6 x i8] c"INTEL\00", align 1
@.str.11 = private unnamed_addr constant [7 x i8] c"NVIDIA\00", align 1
@.str.12 = private unnamed_addr constant [4 x i8] c"ATI\00", align 1
@.str.13 = private unnamed_addr constant [7 x i8] c"FireGL\00", align 1
@.str.14 = private unnamed_addr constant [9 x i8] c"Chromium\00", align 1
@.str.15 = private unnamed_addr constant [6 x i8] c"APPLE\00", align 1
@.str.16 = private unnamed_addr constant [4 x i8] c"AMD\00", align 1
@.str.17 = private unnamed_addr constant [6 x i8] c"Metal\00", align 1
@.str.18 = private unnamed_addr constant [6 x i8] c"Apple\00", align 1
@.ref.tmp = private constant [10 x %"struct.std::__1::pair"] [%"struct.std::__1::pair" { %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i32 0, i32 0), i64 5 }, %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i32 0, i32 0), i64 5 } }, %"struct.std::__1::pair" { %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0), i64 4 }, %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0), i64 4 } }, %"struct.std::__1::pair" { %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i32 0, i32 0), i64 5 }, %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i32 0, i32 0), i64 5 } }, %"struct.std::__1::pair" { %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11, i32 0, i32 0), i64 6 }, %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11, i32 0, i32 0), i64 6 } }, %"struct.std::__1::pair" { %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i32 0, i32 0), i64 3 }, %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i32 0, i32 0), i64 3 } }, %"struct.std::__1::pair" { %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.13, i32 0, i32 0), i64 6 }, %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.13, i32 0, i32 0), i64 6 } }, %"struct.std::__1::pair" { %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14, i32 0, i32 0), i64 8 }, %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14, i32 0, i32 0), i64 8 } }, %"struct.std::__1::pair" { %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i32 0, i32 0), i64 5 }, %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i32 0, i32 0), i64 5 } }, %"struct.std::__1::pair" { %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.16, i32 0, i32 0), i64 3 }, %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.16, i32 0, i32 0), i64 3 } }, %"struct.std::__1::pair" { %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i32 0, i32 0), i64 5 }, %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18, i32 0, i32 0), i64 5 } }], align 8
@.str.19 = private unnamed_addr constant [5 x i8] c"v1.r\00", align 1
@.str.20 = private unnamed_addr constant [2 x i8] c"p\00", align 1
@.str.21 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.22 = private unnamed_addr constant [4 x i8] c"ARM\00", align 1
@.str.23 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.24 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.25 = private unnamed_addr constant [8 x i8] c"Vulkan \00", align 1
@.str.26 = private unnamed_addr constant [15 x i8] c"ANGLE (Google)\00", align 1
@.str.27 = private unnamed_addr constant [8 x i8] c"NVIDIA \00", align 1
@.str.28 = private unnamed_addr constant [15 x i8] c"ANGLE (NVIDIA)\00", align 1
@.str.29 = private unnamed_addr constant [8 x i8] c"Radeon \00", align 1
@.str.30 = private unnamed_addr constant [12 x i8] c"ANGLE (AMD)\00", align 1
@.str.31 = private unnamed_addr constant [6 x i8] c"Intel\00", align 1
@.str.32 = private unnamed_addr constant [10 x i8] c"Intel(R) \00", align 1
@.str.33 = private unnamed_addr constant [14 x i8] c"ANGLE (Intel)\00", align 1
@.str.34 = private unnamed_addr constant [27 x i8] c"GL_ARB_transform_feedback2\00", align 1
@.str.35 = private unnamed_addr constant [23 x i8] c"GL_ARB_texture_storage\00", align 1
@.str.36 = private unnamed_addr constant [14 x i8] c"OpenGL ES 2.0\00", align 1
@.str.37 = private unnamed_addr constant [23 x i8] c"OpenGL ES GLSL ES 1.00\00", align 1
@.str.38 = private unnamed_addr constant [14 x i8] c"OpenGL ES 3.0\00", align 1
@.str.39 = private unnamed_addr constant [23 x i8] c"OpenGL ES GLSL ES 3.00\00", align 1
@.str.40 = private unnamed_addr constant [4 x i8] c"4.1\00", align 1
@.str.41 = private unnamed_addr constant [5 x i8] c"4.10\00", align 1
@.str.42 = private unnamed_addr constant [4 x i8] c"4.0\00", align 1
@.str.43 = private unnamed_addr constant [5 x i8] c"4.00\00", align 1
@.str.44 = private unnamed_addr constant [4 x i8] c"3.3\00", align 1
@.str.45 = private unnamed_addr constant [5 x i8] c"3.30\00", align 1
@.str.46 = private unnamed_addr constant [4 x i8] c"3.2\00", align 1
@.str.47 = private unnamed_addr constant [5 x i8] c"1.50\00", align 1
@.str.48 = private unnamed_addr constant [4 x i8] c"3.1\00", align 1
@.str.49 = private unnamed_addr constant [5 x i8] c"1.40\00", align 1
@.str.50 = private unnamed_addr constant [4 x i8] c"3.0\00", align 1
@.str.51 = private unnamed_addr constant [5 x i8] c"1.30\00", align 1
@.str.52 = private unnamed_addr constant [4 x i8] c"2.1\00", align 1
@.str.53 = private unnamed_addr constant [5 x i8] c"1.20\00", align 1
@.str.54 = private unnamed_addr constant [4 x i8] c"2.0\00", align 1
@.str.55 = private unnamed_addr constant [5 x i8] c"1.10\00", align 1
@.str.56 = private unnamed_addr constant [34 x i8] c"../../base/strings/string_piece.h\00", align 1
@.str.57 = private unnamed_addr constant [2 x i8] c"s\00", align 1

@_ZN2gl13GLVersionInfoC1EPKcS2_RKN4base8internal9flat_treeINS3_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS3_8identityENS7_4lessIvEENS7_6vectorISA_NS7_9allocatorISA_EEEEEE = hidden unnamed_addr alias void (%"struct.gl::GLVersionInfo"*, i8*, i8*, %"class.base::internal::flat_tree"*), void (%"struct.gl::GLVersionInfo"*, i8*, i8*, %"class.base::internal::flat_tree"*)* @_ZN2gl13GLVersionInfoC2EPKcS2_RKN4base8internal9flat_treeINS3_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS3_8identityENS7_4lessIvEENS7_6vectorISA_NS7_9allocatorISA_EEEEEE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl13GLVersionInfoC2EPKcS2_RKN4base8internal9flat_treeINS3_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS3_8identityENS7_4lessIvEENS7_6vectorISA_NS7_9allocatorISA_EEEEEE(%"struct.gl::GLVersionInfo"*, i8*, i8*, %"class.base::internal::flat_tree"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %0, i64 0, i32 14
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 20, i1 false)
  %7 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 48, i1 false)
  tail call void @_ZN2gl13GLVersionInfo10InitializeEPKcS2_RKN4base8internal9flat_treeINS3_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS3_8identityENS7_4lessIvEENS7_6vectorISA_NS7_9allocatorISA_EEEEEE(%"struct.gl::GLVersionInfo"* %0, i8* %1, i8* %2, %"class.base::internal::flat_tree"* dereferenceable(24) %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl13GLVersionInfo10InitializeEPKcS2_RKN4base8internal9flat_treeINS3_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS3_8identityENS7_4lessIvEENS7_6vectorISA_NS7_9allocatorISA_EEEEEE(%"struct.gl::GLVersionInfo"*, i8*, i8*, %"class.base::internal::flat_tree"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::BasicStringPiece", align 8
  %6 = alloca %"class.base::BasicStringPiece", align 8
  %7 = alloca %"class.base::BasicStringPiece", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = icmp eq i8* %1, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %4
  tail call void @_ZN2gl13GLVersionInfo18ParseVersionStringEPKc(%"struct.gl::GLVersionInfo"* %0, i8* nonnull %1)
  tail call void @_ZN2gl13GLVersionInfo15ParseDriverInfoEPKc(%"struct.gl::GLVersionInfo"* %0, i8* nonnull %1)
  br label %11

11:                                               ; preds = %4, %10
  %12 = icmp eq i8* %2, null
  br i1 %12, label %213, label %13

13:                                               ; preds = %11
  %14 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #13
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %18 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 24, i1 false)
  %19 = tail call i64 @strlen(i8* nonnull %2) #13
  %20 = icmp ugt i64 %19, -17
  br i1 %20, label %21, label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %22) #14
  unreachable

23:                                               ; preds = %13
  %24 = icmp ult i64 %19, 23
  br i1 %24, label %30, label %25

25:                                               ; preds = %23
  %26 = add nuw i64 %19, 16
  %27 = and i64 %26, -16
  %28 = tail call i8* @_Znwm(i64 %27) #15
  store i8* %28, i8** %15, align 8
  %29 = or i64 %27, -9223372036854775808
  store i64 %29, i64* %17, align 8
  store i64 %19, i64* %16, align 8
  br label %35

30:                                               ; preds = %23
  %31 = trunc i64 %19 to i8
  %32 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  store i8 %31, i8* %33, align 1
  %34 = icmp eq i64 %19, 0
  br i1 %34, label %37, label %35

35:                                               ; preds = %30, %25
  %36 = phi i8* [ %28, %25 ], [ %14, %30 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %36, i8* nonnull align 1 %2, i64 %19, i1 false) #13
  br label %37

37:                                               ; preds = %30, %35
  %38 = phi i8* [ %14, %30 ], [ %36, %35 ]
  %39 = getelementptr inbounds i8, i8* %38, i64 %19
  store i8 0, i8* %39, align 1
  %40 = tail call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* nonnull %2, i64 %19, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i64 5, i32 0) #13
  %41 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %0, i64 0, i32 1
  %42 = zext i1 %40 to i8
  store i8 %42, i8* %41, align 1
  %43 = tail call i64 @strlen(i8* nonnull %2) #13
  %44 = tail call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* nonnull %2, i64 %43, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i64 4, i32 0) #13
  %45 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %0, i64 0, i32 3
  %46 = zext i1 %44 to i8
  store i8 %46, i8* %45, align 1
  %47 = load i8, i8* %41, align 1, !range !2
  %48 = icmp eq i8 %47, 0
  %49 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br i1 %48, label %146, label %50

50:                                               ; preds = %37
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %15, align 8
  %55 = select i1 %53, i8* %54, i8* %14
  %56 = load i64, i64* %16, align 8
  %57 = zext i8 %52 to i64
  %58 = select i1 %53, i64 %56, i64 %57
  %59 = getelementptr inbounds i8, i8* %55, i64 %58
  %60 = ptrtoint i8* %59 to i64
  %61 = ptrtoint i8* %55 to i64
  %62 = icmp slt i64 %58, 18
  br i1 %62, label %81, label %63

63:                                               ; preds = %50, %76
  %64 = phi i64 [ %79, %76 ], [ %58, %50 ]
  %65 = phi i8* [ %77, %76 ], [ %55, %50 ]
  %66 = add nsw i64 %64, -17
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %81, label %68

68:                                               ; preds = %63
  %69 = call i8* @memchr(i8* %65, i32 83, i64 %66) #13
  %70 = icmp eq i8* %69, null
  br i1 %70, label %81, label %71

71:                                               ; preds = %68
  %72 = call i32 @bcmp(i8* nonnull %69, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 18) #13
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %76

74:                                               ; preds = %71
  %75 = ptrtoint i8* %69 to i64
  br label %81

76:                                               ; preds = %71
  %77 = getelementptr inbounds i8, i8* %69, i64 1
  %78 = ptrtoint i8* %77 to i64
  %79 = sub i64 %60, %78
  %80 = icmp slt i64 %79, 18
  br i1 %80, label %81, label %63

81:                                               ; preds = %76, %68, %63, %74, %50
  %82 = phi i64 [ %60, %50 ], [ %75, %74 ], [ %60, %63 ], [ %60, %68 ], [ %60, %76 ]
  %83 = phi i8* [ %59, %50 ], [ %69, %74 ], [ %59, %63 ], [ %59, %68 ], [ %59, %76 ]
  %84 = icmp ne i8* %83, %59
  %85 = sub i64 %82, %61
  %86 = icmp ne i64 %85, -1
  %87 = and i1 %86, %84
  %88 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %0, i64 0, i32 6
  %89 = zext i1 %87 to i8
  store i8 %89, i8* %88, align 2
  %90 = icmp slt i64 %58, 6
  br i1 %90, label %109, label %91

91:                                               ; preds = %81, %104
  %92 = phi i64 [ %107, %104 ], [ %58, %81 ]
  %93 = phi i8* [ %105, %104 ], [ %55, %81 ]
  %94 = add nsw i64 %92, -5
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %109, label %96

96:                                               ; preds = %91
  %97 = call i8* @memchr(i8* %93, i32 86, i64 %94) #13
  %98 = icmp eq i8* %97, null
  br i1 %98, label %109, label %99

99:                                               ; preds = %96
  %100 = call i32 @bcmp(i8* nonnull %97, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0), i64 6) #13
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %104

102:                                              ; preds = %99
  %103 = ptrtoint i8* %97 to i64
  br label %109

104:                                              ; preds = %99
  %105 = getelementptr inbounds i8, i8* %97, i64 1
  %106 = ptrtoint i8* %105 to i64
  %107 = sub i64 %60, %106
  %108 = icmp slt i64 %107, 6
  br i1 %108, label %109, label %91

109:                                              ; preds = %104, %96, %91, %102, %81
  %110 = phi i64 [ %60, %81 ], [ %103, %102 ], [ %60, %91 ], [ %60, %96 ], [ %60, %104 ]
  %111 = phi i8* [ %59, %81 ], [ %97, %102 ], [ %59, %91 ], [ %59, %96 ], [ %59, %104 ]
  %112 = icmp ne i8* %111, %59
  %113 = sub i64 %110, %61
  %114 = icmp ne i64 %113, -1
  %115 = and i1 %114, %112
  %116 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %0, i64 0, i32 7
  %117 = zext i1 %115 to i8
  store i8 %117, i8* %116, align 1
  %118 = icmp slt i64 %58, 11
  br i1 %118, label %137, label %119

119:                                              ; preds = %109, %132
  %120 = phi i64 [ %135, %132 ], [ %58, %109 ]
  %121 = phi i8* [ %133, %132 ], [ %55, %109 ]
  %122 = add nsw i64 %120, -10
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %137, label %124

124:                                              ; preds = %119
  %125 = call i8* @memchr(i8* %121, i32 65, i64 %122) #13
  %126 = icmp eq i8* %125, null
  br i1 %126, label %137, label %127

127:                                              ; preds = %124
  %128 = call i32 @bcmp(i8* nonnull %125, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0), i64 11) #13
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %132

130:                                              ; preds = %127
  %131 = ptrtoint i8* %125 to i64
  br label %137

132:                                              ; preds = %127
  %133 = getelementptr inbounds i8, i8* %125, i64 1
  %134 = ptrtoint i8* %133 to i64
  %135 = sub i64 %60, %134
  %136 = icmp slt i64 %135, 11
  br i1 %136, label %137, label %119

137:                                              ; preds = %132, %124, %119, %130, %109
  %138 = phi i64 [ %60, %109 ], [ %131, %130 ], [ %60, %119 ], [ %60, %124 ], [ %60, %132 ]
  %139 = phi i8* [ %59, %109 ], [ %125, %130 ], [ %59, %119 ], [ %59, %124 ], [ %59, %132 ]
  %140 = icmp ne i8* %139, %59
  %141 = sub i64 %138, %61
  %142 = icmp ne i64 %141, -1
  %143 = and i1 %142, %140
  %144 = zext i1 %143 to i8
  %145 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %0, i64 0, i32 5
  store i8 %144, i8* %145, align 1
  br label %146

146:                                              ; preds = %37, %137
  %147 = call i64 @strlen(i8* nonnull %2) #13
  %148 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* nonnull %2, i64 %147, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i64 0, i64 0), i64 18, i32 0) #13
  %149 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %0, i64 0, i32 4
  %150 = zext i1 %148 to i8
  store i8 %150, i8* %149, align 4
  %151 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %152 = load i8, i8* %151, align 1
  %153 = icmp slt i8 %152, 0
  %154 = load i8*, i8** %15, align 8
  %155 = select i1 %153, i8* %154, i8* %14
  %156 = load i64, i64* %16, align 8
  %157 = zext i8 %152 to i64
  %158 = select i1 %153, i64 %156, i64 %157
  %159 = getelementptr inbounds i8, i8* %155, i64 %158
  %160 = ptrtoint i8* %159 to i64
  %161 = ptrtoint i8* %155 to i64
  %162 = icmp slt i64 %158, 8
  br i1 %162, label %181, label %163

163:                                              ; preds = %146, %176
  %164 = phi i64 [ %179, %176 ], [ %158, %146 ]
  %165 = phi i8* [ %177, %176 ], [ %155, %146 ]
  %166 = add nsw i64 %164, -7
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %181, label %168

168:                                              ; preds = %163
  %169 = call i8* @memchr(i8* %165, i32 68, i64 %166) #13
  %170 = icmp eq i8* %169, null
  br i1 %170, label %181, label %171

171:                                              ; preds = %168
  %172 = call i32 @bcmp(i8* nonnull %169, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i64 8) #13
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %176

174:                                              ; preds = %171
  %175 = ptrtoint i8* %169 to i64
  br label %181

176:                                              ; preds = %171
  %177 = getelementptr inbounds i8, i8* %169, i64 1
  %178 = ptrtoint i8* %177 to i64
  %179 = sub i64 %160, %178
  %180 = icmp slt i64 %179, 8
  br i1 %180, label %181, label %163

181:                                              ; preds = %176, %168, %163, %174, %146
  %182 = phi i64 [ %160, %146 ], [ %175, %174 ], [ %160, %163 ], [ %160, %168 ], [ %160, %176 ]
  %183 = phi i8* [ %159, %146 ], [ %169, %174 ], [ %159, %163 ], [ %159, %168 ], [ %159, %176 ]
  %184 = icmp ne i8* %183, %159
  %185 = sub i64 %182, %161
  %186 = icmp ne i64 %185, -1
  %187 = and i1 %186, %184
  %188 = zext i1 %187 to i8
  %189 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %0, i64 0, i32 2
  store i8 %188, i8* %189, align 2
  %190 = load i8, i8* %41, align 1, !range !2
  %191 = icmp eq i8 %190, 0
  br i1 %191, label %207, label %192

192:                                              ; preds = %181
  %193 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %0, i64 0, i32 14
  %194 = bitcast %"class.std::__1::basic_string"* %193 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %195 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %194, i64 0, i32 1, i32 0
  %196 = load i8, i8* %195, align 1
  %197 = icmp slt i8 %196, 0
  %198 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %199 = load i64, i64* %198, align 8
  %200 = zext i8 %196 to i64
  %201 = select i1 %197, i64 %199, i64 %200
  %202 = icmp eq i64 %201, 5
  br i1 %202, label %203, label %207

203:                                              ; preds = %192
  %204 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %193, i64 0, i64 -1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i64 5) #13
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %207

206:                                              ; preds = %203
  call void @_ZN2gl13GLVersionInfo24ExtractDriverVendorANGLEEPKc(%"struct.gl::GLVersionInfo"* %0, i8* nonnull %2)
  br label %207

207:                                              ; preds = %192, %181, %206, %203
  %208 = load i8, i8* %151, align 1
  %209 = icmp slt i8 %208, 0
  br i1 %209, label %210, label %212

210:                                              ; preds = %207
  %211 = load i8*, i8** %15, align 8
  call void @_ZdlPv(i8* %211) #15
  br label %212

212:                                              ; preds = %207, %210
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #13
  br label %213

213:                                              ; preds = %11, %212
  %214 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %0, i64 0, i32 0
  %215 = load i8, i8* %214, align 8, !range !2
  %216 = icmp eq i8 %215, 0
  %217 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %0, i64 0, i32 8
  %218 = load i32, i32* %217, align 8
  %219 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %0, i64 0, i32 9
  br i1 %216, label %222, label %220

220:                                              ; preds = %213
  %221 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %0, i64 0, i32 12
  store i8 0, i8* %221, align 2
  br label %242

222:                                              ; preds = %213
  %223 = load i32, i32* %219, align 4
  %224 = icmp eq i32 %218, 3
  %225 = icmp ugt i32 %223, 1
  %226 = and i1 %224, %225
  %227 = icmp ugt i32 %218, 3
  %228 = or i1 %227, %226
  br i1 %228, label %231, label %229

229:                                              ; preds = %222
  %230 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %0, i64 0, i32 12
  store i8 0, i8* %230, align 2
  br label %247

231:                                              ; preds = %222
  %232 = bitcast %"class.base::BasicStringPiece"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %232) #13
  %233 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %7, i64 0, i32 0
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.7, i64 0, i64 0), i8** %233, align 8
  %234 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %7, i64 0, i32 1
  store i64 20, i64* %234, align 8
  %235 = call zeroext i1 @_ZN3gfx12HasExtensionERKN4base8internal9flat_treeINS0_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_8identityENS4_4lessIvEENS4_6vectorIS7_NS4_9allocatorIS7_EEEEEERKS7_(%"class.base::internal::flat_tree"* dereferenceable(24) %3, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %7) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %232) #13
  %236 = xor i1 %235, true
  %237 = zext i1 %236 to i8
  %238 = load i32, i32* %217, align 8
  %239 = load i8, i8* %214, align 8, !range !2
  %240 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %0, i64 0, i32 12
  store i8 %237, i8* %240, align 2
  %241 = icmp eq i8 %239, 0
  br i1 %241, label %245, label %242

242:                                              ; preds = %220, %231
  %243 = phi i32 [ %218, %220 ], [ %238, %231 ]
  %244 = icmp ugt i32 %243, 2
  br label %267

245:                                              ; preds = %231
  %246 = icmp ugt i32 %238, 4
  br i1 %246, label %267, label %247

247:                                              ; preds = %229, %245
  %248 = phi i32 [ %218, %229 ], [ %238, %245 ]
  switch i32 %248, label %267 [
    i32 4, label %249
    i32 3, label %252
  ]

249:                                              ; preds = %247
  %250 = load i32, i32* %219, align 4
  %251 = icmp ugt i32 %250, 1
  br i1 %251, label %267, label %260

252:                                              ; preds = %247
  %253 = load i32, i32* %219, align 4
  %254 = icmp ugt i32 %253, 2
  br i1 %254, label %255, label %267

255:                                              ; preds = %252
  %256 = bitcast %"class.base::BasicStringPiece"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %256) #13
  %257 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 0
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.34, i64 0, i64 0), i8** %257, align 8
  %258 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 1
  store i64 26, i64* %258, align 8
  %259 = call zeroext i1 @_ZN3gfx12HasExtensionERKN4base8internal9flat_treeINS0_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_8identityENS4_4lessIvEENS4_6vectorIS7_NS4_9allocatorIS7_EEEEEERKS7_(%"class.base::internal::flat_tree"* dereferenceable(24) %3, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %5) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %256) #13
  br label %260

260:                                              ; preds = %255, %249
  %261 = phi i1 [ %259, %255 ], [ true, %249 ]
  %262 = bitcast %"class.base::BasicStringPiece"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %262) #13
  %263 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 0
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.35, i64 0, i64 0), i8** %263, align 8
  %264 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 1
  store i64 22, i64* %264, align 8
  %265 = call zeroext i1 @_ZN3gfx12HasExtensionERKN4base8internal9flat_treeINS0_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_8identityENS4_4lessIvEENS4_6vectorIS7_NS4_9allocatorIS7_EEEEEERKS7_(%"class.base::internal::flat_tree"* dereferenceable(24) %3, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %6) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %262) #13
  %266 = and i1 %261, %265
  br label %267

267:                                              ; preds = %242, %245, %247, %249, %252, %260
  %268 = phi i1 [ %266, %260 ], [ true, %249 ], [ false, %252 ], [ true, %245 ], [ false, %247 ], [ %244, %242 ]
  %269 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %0, i64 0, i32 13
  %270 = zext i1 %268 to i8
  store i8 %270, i8* %269, align 1
  %271 = load i1, i1* @_ZN12_GLOBAL__N_123disable_es3_for_testingE, align 1
  br i1 %271, label %272, label %279

272:                                              ; preds = %267
  store i8 0, i8* %269, align 1
  %273 = load i8, i8* %214, align 8, !range !2
  %274 = icmp eq i8 %273, 0
  br i1 %274, label %278, label %275

275:                                              ; preds = %272
  store i32 2, i32* %217, align 8
  store i32 0, i32* %219, align 4
  %276 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %0, i64 0, i32 10
  store i8 1, i8* %276, align 8
  %277 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %0, i64 0, i32 11
  store i8 0, i8* %277, align 1
  br label %279

278:                                              ; preds = %272
  store i32 3, i32* %217, align 8
  store i32 2, i32* %219, align 4
  br label %279

279:                                              ; preds = %275, %278, %267
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl13GLVersionInfo18ParseVersionStringEPKc(%"struct.gl::GLVersionInfo"* nocapture, i8*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::BasicStringPiece", align 8
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.base::Version", align 8
  %7 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %0, i64 0, i32 8
  %8 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %0, i64 0, i32 9
  %9 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %0, i64 0, i32 0
  store i8 0, i8* %9, align 8
  %10 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %0, i64 0, i32 10
  %11 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %0, i64 0, i32 11
  %12 = icmp eq i8* %1, null
  %13 = bitcast i32* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 10, i1 false)
  br i1 %12, label %132, label %14

14:                                               ; preds = %2
  %15 = bitcast %"class.base::BasicStringPiece"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #13
  %16 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 0
  %17 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 1
  store i8* %1, i8** %16, align 8
  %18 = tail call i64 @strlen(i8* nonnull %1) #13
  store i64 %18, i64* %17, align 8
  %19 = tail call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* nonnull %1, i64 %18, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0), i64 10, i32 0) #13
  br i1 %19, label %20, label %23

20:                                               ; preds = %14
  store i8 1, i8* %9, align 8
  call void @_ZN4base16BasicStringPieceIcNSt3__111char_traitsIcEEE13remove_prefixEm(%"class.base::BasicStringPiece"* nonnull %3, i64 10)
  %21 = load i8*, i8** %16, align 8
  %22 = load i64, i64* %17, align 8
  br label %23

23:                                               ; preds = %20, %14
  %24 = phi i64 [ %22, %20 ], [ %18, %14 ]
  %25 = phi i8* [ %21, %20 ], [ %1, %14 ]
  %26 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #13
  %27 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %29 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 24, i1 false)
  call void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector"* nonnull sret %4, i8* %25, i64 %24, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i64 0, i64 0), i64 5, i32 1, i32 1) #13
  %30 = bitcast %"class.base::BasicStringPiece"** %28 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::vector"* %4 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = icmp eq i64 %31, %33
  %35 = inttoptr i64 %33 to %"class.base::BasicStringPiece"*
  br i1 %34, label %125, label %36

36:                                               ; preds = %23
  %37 = load i8, i8* %9, align 8, !range !2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %50, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %35, i64 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %50, label %43

43:                                               ; preds = %39
  %44 = add i64 %41, -1
  %45 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* %35, i64 %44) #13
  %46 = load i8, i8* %45, align 1
  %47 = icmp eq i8 %46, 86
  br i1 %47, label %48, label %50

48:                                               ; preds = %43
  %49 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %27, align 8
  call void @_ZN4base16BasicStringPieceIcNSt3__111char_traitsIcEEE13remove_suffixEm(%"class.base::BasicStringPiece"* %49, i64 1)
  br label %50

50:                                               ; preds = %39, %36, %43, %48
  %51 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #13
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %55 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 -86, i64 24, i1 false)
  %56 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %27, align 8
  %57 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %56, i64 0, i32 0
  %58 = load i8*, i8** %57, align 8, !noalias !3
  %59 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %56, i64 0, i32 1
  %60 = load i64, i64* %59, align 8, !noalias !3
  %61 = icmp ugt i64 %60, -17
  br i1 %61, label %62, label %64

62:                                               ; preds = %50
  %63 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %63) #14
  unreachable

64:                                               ; preds = %50
  %65 = icmp ult i64 %60, 23
  br i1 %65, label %72, label %66

66:                                               ; preds = %64
  %67 = add nuw i64 %60, 16
  %68 = and i64 %67, -16
  %69 = call i8* @_Znwm(i64 %68) #15
  store i8* %69, i8** %52, align 8, !alias.scope !3
  %70 = or i64 %68, -9223372036854775808
  store i64 %70, i64* %54, align 8, !alias.scope !3
  store i64 %60, i64* %53, align 8, !alias.scope !3
  %71 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %77

72:                                               ; preds = %64
  %73 = trunc i64 %60 to i8
  %74 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  store i8 %73, i8* %75, align 1, !alias.scope !3
  %76 = icmp eq i64 %60, 0
  br i1 %76, label %80, label %77

77:                                               ; preds = %72, %66
  %78 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %74, %72 ], [ %71, %66 ]
  %79 = phi i8* [ %51, %72 ], [ %69, %66 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %79, i8* align 1 %58, i64 %60, i1 false) #13
  br label %80

80:                                               ; preds = %72, %77
  %81 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %74, %72 ], [ %78, %77 ]
  %82 = phi i8* [ %51, %72 ], [ %79, %77 ]
  %83 = getelementptr inbounds i8, i8* %82, i64 %60
  store i8 0, i8* %83, align 1
  %84 = bitcast %"class.base::Version"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %84) #13
  %85 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %81, i64 0, i32 1, i32 0
  %86 = bitcast %"class.base::Version"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 -86, i64 24, i1 false)
  %87 = load i8, i8* %85, align 1
  %88 = icmp slt i8 %87, 0
  %89 = load i8*, i8** %52, align 8
  %90 = select i1 %88, i8* %89, i8* %51
  %91 = load i64, i64* %53, align 8
  %92 = zext i8 %87 to i64
  %93 = select i1 %88, i64 %91, i64 %92
  call void @_ZN4base7VersionC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Version"* nonnull %6, i8* %90, i64 %93) #13
  %94 = call zeroext i1 @_ZNK4base7Version7IsValidEv(%"class.base::Version"* nonnull %6) #13
  br i1 %94, label %95, label %118

95:                                               ; preds = %80
  %96 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %6, i64 0, i32 0, i32 0, i32 1
  %97 = bitcast i32** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"class.base::Version"* %6 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = sub i64 %98, %100
  %102 = icmp eq i64 %101, 0
  %103 = inttoptr i64 %100 to i32*
  br i1 %102, label %111, label %104

104:                                              ; preds = %95
  %105 = ashr exact i64 %101, 2
  %106 = load i32, i32* %103, align 4
  store i32 %106, i32* %7, align 8
  %107 = icmp ugt i64 %105, 1
  br i1 %107, label %108, label %111

108:                                              ; preds = %104
  %109 = getelementptr inbounds i32, i32* %103, i64 1
  %110 = load i32, i32* %109, align 4
  store i32 %110, i32* %8, align 4
  br label %111

111:                                              ; preds = %95, %108, %104
  %112 = load i8, i8* %9, align 8, !range !2
  %113 = icmp eq i8 %112, 0
  br i1 %113, label %118, label %114

114:                                              ; preds = %111
  %115 = load i32, i32* %7, align 8
  switch i32 %115, label %118 [
    i32 2, label %116
    i32 3, label %117
  ]

116:                                              ; preds = %114
  store i8 1, i8* %10, align 8
  br label %118

117:                                              ; preds = %114
  store i8 1, i8* %11, align 1
  br label %118

118:                                              ; preds = %114, %116, %111, %117, %80
  call void @_ZN4base7VersionD1Ev(%"class.base::Version"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %84) #13
  %119 = load i8, i8* %85, align 1
  %120 = icmp slt i8 %119, 0
  br i1 %120, label %121, label %123

121:                                              ; preds = %118
  %122 = load i8*, i8** %52, align 8
  call void @_ZdlPv(i8* %122) #15
  br label %123

123:                                              ; preds = %118, %121
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #13
  %124 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %27, align 8
  br label %125

125:                                              ; preds = %23, %123
  %126 = phi %"class.base::BasicStringPiece"* [ %35, %23 ], [ %124, %123 ]
  %127 = icmp eq %"class.base::BasicStringPiece"* %126, null
  br i1 %127, label %131, label %128

128:                                              ; preds = %125
  %129 = ptrtoint %"class.base::BasicStringPiece"* %126 to i64
  store i64 %129, i64* %30, align 8
  %130 = bitcast %"class.base::BasicStringPiece"* %126 to i8*
  call void @_ZdlPv(i8* %130) #15
  br label %131

131:                                              ; preds = %125, %128
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #13
  br label %132

132:                                              ; preds = %2, %131
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl13GLVersionInfo15ParseDriverInfoEPKc(%"struct.gl::GLVersionInfo"*, i8*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %4 = alloca %"class.std::__1::__tree_node_base"*, align 8
  %5 = alloca %"class.base::BasicStringPiece", align 8
  %6 = alloca %"class.std::__1::vector", align 8
  %7 = alloca %"class.std::__1::map", align 8
  %8 = alloca %"class.std::__1::vector", align 8
  %9 = alloca %"class.std::__1::vector", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca [5 x %"class.base::BasicStringPiece"], align 8
  %12 = icmp eq i8* %1, null
  br i1 %12, label %428, label %13

13:                                               ; preds = %2
  %14 = bitcast %"class.base::BasicStringPiece"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #13
  %15 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 0
  %16 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 1
  store i8* %1, i8** %15, align 8
  %17 = tail call i64 @strlen(i8* nonnull %1) #13
  store i64 %17, i64* %16, align 8
  %18 = tail call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* nonnull %1, i64 %17, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0), i64 10, i32 0) #13
  br i1 %18, label %19, label %22

19:                                               ; preds = %13
  call void @_ZN4base16BasicStringPieceIcNSt3__111char_traitsIcEEE13remove_prefixEm(%"class.base::BasicStringPiece"* nonnull %5, i64 10)
  %20 = load i8*, i8** %15, align 8
  %21 = load i64, i64* %16, align 8
  br label %22

22:                                               ; preds = %19, %13
  %23 = phi i64 [ %21, %19 ], [ %17, %13 ]
  %24 = phi i8* [ %20, %19 ], [ %1, %13 ]
  %25 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #13
  %26 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %28 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 24, i1 false)
  call void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector"* nonnull sret %6, i8* %24, i64 %23, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i64 0, i64 0), i64 5, i32 1, i32 1) #13
  %29 = bitcast %"class.base::BasicStringPiece"** %27 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.std::__1::vector"* %6 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = icmp eq i64 %30, %32
  %34 = inttoptr i64 %32 to %"class.base::BasicStringPiece"*
  br i1 %33, label %421, label %35

35:                                               ; preds = %22
  %36 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %0, i64 0, i32 0
  %37 = load i8, i8* %36, align 8, !range !2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %50, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %34, i64 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %50, label %43

43:                                               ; preds = %39
  %44 = add i64 %41, -1
  %45 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* %34, i64 %44) #13
  %46 = load i8, i8* %45, align 1
  %47 = icmp eq i8 %46, 86
  br i1 %47, label %48, label %50

48:                                               ; preds = %43
  %49 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %26, align 8
  call void @_ZN4base16BasicStringPieceIcNSt3__111char_traitsIcEEE13remove_suffixEm(%"class.base::BasicStringPiece"* %49, i64 1)
  br label %50

50:                                               ; preds = %39, %35, %43, %48
  %51 = load i64, i64* %29, align 8
  %52 = load i64, i64* %31, align 8
  %53 = sub i64 %51, %52
  %54 = icmp eq i64 %53, 16
  %55 = inttoptr i64 %52 to %"class.base::BasicStringPiece"*
  br i1 %54, label %421, label %56

56:                                               ; preds = %50
  %57 = bitcast %"class.std::__1::map"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57) #13
  %58 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %7, i64 0, i32 0, i32 0
  %59 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %7, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %60 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %61 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %7, i64 0, i32 0
  %62 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  %63 = bitcast %"class.std::__1::__tree_node_base"** %59 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %62, %"class.std::__1::__tree_end_node"** %58, align 8
  %64 = bitcast %"class.std::__1::__tree_end_node"** %3 to i8*
  %65 = bitcast %"class.std::__1::__tree_node_base"** %4 to i8*
  %66 = bitcast %"class.std::__1::__tree_end_node"** %3 to i64*
  %67 = bitcast %"class.std::__1::map"* %7 to i64*
  br label %68

68:                                               ; preds = %96, %56
  %69 = phi %"struct.std::__1::pair"* [ getelementptr inbounds ([10 x %"struct.std::__1::pair"], [10 x %"struct.std::__1::pair"]* @.ref.tmp, i64 0, i64 0), %56 ], [ %97, %96 ]
  %70 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %69, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #13
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %3, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #13
  store %"class.std::__1::__tree_node_base"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_node_base"*), %"class.std::__1::__tree_node_base"** %4, align 8
  %71 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeIN4base16BasicStringPieceIcNS_11char_traitsIcEEEES6_EENS_19__map_value_compareIS6_S7_NS_4lessIS6_EELb1EEENS_9allocatorIS7_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS7_PNS_11__tree_nodeIS7_SH_EElEERPNS_15__tree_end_nodeISJ_EESK_RKT_(%"class.std::__1::__tree"* nonnull %61, %"class.std::__1::__tree_end_node"* %62, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %3, %"class.std::__1::__tree_node_base"** nonnull dereferenceable(8) %4, %"class.base::BasicStringPiece"* dereferenceable(16) %70) #13
  %72 = bitcast %"class.std::__1::__tree_node_base"** %71 to %"class.std::__1::__tree_node"**
  %73 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %72, align 8
  %74 = icmp eq %"class.std::__1::__tree_node"* %73, null
  br i1 %74, label %75, label %96

75:                                               ; preds = %68
  %76 = call i8* @_Znwm(i64 64) #15, !noalias !6
  %77 = getelementptr inbounds i8, i8* %76, i64 32
  %78 = bitcast %"struct.std::__1::pair"* %69 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %78, i64 32, i1 false) #13, !noalias !6
  %79 = load i64, i64* %66, align 8
  %80 = bitcast i8* %76 to %"class.std::__1::__tree_node_base"*
  %81 = getelementptr inbounds i8, i8* %76, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %76, i8 0, i64 16, i1 false) #13
  %82 = bitcast i8* %81 to i64*
  store i64 %79, i64* %82, align 8
  %83 = bitcast %"class.std::__1::__tree_node_base"** %71 to i8**
  store i8* %76, i8** %83, align 8
  %84 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %58, align 8
  %85 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %84, i64 0, i32 0
  %86 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %85, align 8
  %87 = icmp eq %"class.std::__1::__tree_node_base"* %86, null
  br i1 %87, label %91, label %88

88:                                               ; preds = %75
  %89 = ptrtoint %"class.std::__1::__tree_node_base"* %86 to i64
  store i64 %89, i64* %67, align 8
  %90 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %71, align 8
  br label %91

91:                                               ; preds = %88, %75
  %92 = phi %"class.std::__1::__tree_node_base"* [ %80, %75 ], [ %90, %88 ]
  %93 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %93, %"class.std::__1::__tree_node_base"* %92) #13
  %94 = load i64, i64* %60, align 8
  %95 = add i64 %94, 1
  store i64 %95, i64* %60, align 8
  br label %96

96:                                               ; preds = %91, %68
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #13
  %97 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %69, i64 1
  %98 = icmp eq %"struct.std::__1::pair"* %97, getelementptr inbounds ([10 x %"struct.std::__1::pair"], [10 x %"struct.std::__1::pair"]* @.ref.tmp, i64 1, i64 0)
  br i1 %98, label %99, label %68

99:                                               ; preds = %96
  %100 = load i64, i64* %29, align 8
  %101 = load i64, i64* %31, align 8
  %102 = sub i64 %100, %101
  %103 = ashr exact i64 %102, 4
  %104 = icmp ugt i64 %103, 1
  %105 = inttoptr i64 %101 to %"class.base::BasicStringPiece"*
  br i1 %104, label %106, label %230

106:                                              ; preds = %99
  %107 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %58, align 8
  %108 = icmp eq %"class.std::__1::__tree_end_node"* %107, %62
  br label %109

109:                                              ; preds = %106, %227
  %110 = phi i64 [ 1, %106 ], [ %228, %227 ]
  br i1 %108, label %227, label %111

111:                                              ; preds = %109
  %112 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %105, i64 %110, i32 1
  %113 = load i64, i64* %112, align 8
  %114 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %105, i64 %110, i32 0
  br label %115

115:                                              ; preds = %111, %224
  %116 = phi %"class.std::__1::__tree_end_node"* [ %107, %111 ], [ %225, %224 ]
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %116, i64 5
  %118 = bitcast %"class.std::__1::__tree_end_node"* %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = icmp eq i64 %113, %119
  br i1 %120, label %121, label %196

121:                                              ; preds = %115
  %122 = load i8*, i8** %114, align 8
  %123 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %116, i64 4
  %124 = bitcast %"class.std::__1::__tree_end_node"* %123 to i8**
  %125 = load i8*, i8** %124, align 8
  %126 = call i32 @bcmp(i8* %122, i8* %125, i64 %113) #13
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %196

128:                                              ; preds = %121
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %116, i64 6
  %130 = bitcast %"class.std::__1::__tree_end_node"* %129 to i8**
  %131 = load i8*, i8** %130, align 8
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %116, i64 7
  %133 = bitcast %"class.std::__1::__tree_end_node"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %0, i64 0, i32 14
  %136 = call i1 @llvm.is.constant.i64(i64 %134) #13
  %137 = icmp ult i64 %134, 23
  %138 = and i1 %137, %136
  br i1 %138, label %139, label %157

139:                                              ; preds = %128
  %140 = bitcast %"class.std::__1::basic_string"* %135 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %141 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %140, i64 0, i32 1, i32 0
  %142 = load i8, i8* %141, align 1
  %143 = icmp slt i8 %142, 0
  br i1 %143, label %144, label %148

144:                                              ; preds = %139
  %145 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %134, i64* %145, align 8
  %146 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %135, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load i8*, i8** %146, align 8
  br label %151

148:                                              ; preds = %139
  %149 = trunc i64 %134 to i8
  store i8 %149, i8* %141, align 1
  %150 = bitcast %"class.std::__1::basic_string"* %135 to i8*
  br label %151

151:                                              ; preds = %148, %144
  %152 = phi i8* [ %147, %144 ], [ %150, %148 ]
  %153 = icmp eq i64 %134, 0
  br i1 %153, label %155, label %154

154:                                              ; preds = %151
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %152, i8* align 1 %131, i64 %134, i1 false) #13
  br label %155

155:                                              ; preds = %154, %151
  %156 = getelementptr inbounds i8, i8* %152, i64 %134
  store i8 0, i8* %156, align 1
  br label %159

157:                                              ; preds = %128
  %158 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %135, i8* %131, i64 %134) #13
  br label %159

159:                                              ; preds = %155, %157
  %160 = add i64 %110, 1
  %161 = load i64, i64* %29, align 8
  %162 = load i64, i64* %31, align 8
  %163 = sub i64 %161, %162
  %164 = ashr exact i64 %163, 4
  %165 = icmp ult i64 %160, %164
  %166 = inttoptr i64 %162 to %"class.base::BasicStringPiece"*
  br i1 %165, label %167, label %417

167:                                              ; preds = %159
  %168 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %0, i64 0, i32 15
  %169 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %166, i64 %160, i32 0
  %170 = load i8*, i8** %169, align 8
  %171 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %166, i64 %160, i32 1
  %172 = load i64, i64* %171, align 8
  %173 = call i1 @llvm.is.constant.i64(i64 %172) #13
  %174 = icmp ult i64 %172, 23
  %175 = and i1 %174, %173
  br i1 %175, label %176, label %194

176:                                              ; preds = %167
  %177 = bitcast %"class.std::__1::basic_string"* %168 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %178 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %177, i64 0, i32 1, i32 0
  %179 = load i8, i8* %178, align 1
  %180 = icmp slt i8 %179, 0
  br i1 %180, label %181, label %185

181:                                              ; preds = %176
  %182 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %172, i64* %182, align 8
  %183 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %168, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = load i8*, i8** %183, align 8
  br label %188

185:                                              ; preds = %176
  %186 = trunc i64 %172 to i8
  store i8 %186, i8* %178, align 1
  %187 = bitcast %"class.std::__1::basic_string"* %168 to i8*
  br label %188

188:                                              ; preds = %185, %181
  %189 = phi i8* [ %184, %181 ], [ %187, %185 ]
  %190 = icmp eq i64 %172, 0
  br i1 %190, label %192, label %191

191:                                              ; preds = %188
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %189, i8* align 1 %170, i64 %172, i1 false) #13
  br label %192

192:                                              ; preds = %191, %188
  %193 = getelementptr inbounds i8, i8* %189, i64 %172
  store i8 0, i8* %193, align 1
  br label %417

194:                                              ; preds = %167
  %195 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %168, i8* %170, i64 %172) #13
  br label %417

196:                                              ; preds = %115, %121
  %197 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %116, i64 1, i32 0
  %198 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %197, align 8
  %199 = icmp eq %"class.std::__1::__tree_node_base"* %198, null
  br i1 %199, label %200, label %208

200:                                              ; preds = %196
  %201 = bitcast %"class.std::__1::__tree_end_node"* %116 to %"class.std::__1::__tree_node_base"*
  %202 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %116, i64 2
  %203 = bitcast %"class.std::__1::__tree_end_node"* %202 to %"class.std::__1::__tree_end_node"**
  %204 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %203, align 8
  %205 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %204, i64 0, i32 0
  %206 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %205, align 8
  %207 = icmp eq %"class.std::__1::__tree_node_base"* %206, %201
  br i1 %207, label %224, label %215

208:                                              ; preds = %196, %208
  %209 = phi %"class.std::__1::__tree_node_base"* [ %211, %208 ], [ %198, %196 ]
  %210 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %209, i64 0, i32 0, i32 0
  %211 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %210, align 8
  %212 = icmp eq %"class.std::__1::__tree_node_base"* %211, null
  br i1 %212, label %213, label %208

213:                                              ; preds = %208
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %209, i64 0, i32 0
  br label %224

215:                                              ; preds = %200, %215
  %216 = phi %"class.std::__1::__tree_end_node"** [ %219, %215 ], [ %203, %200 ]
  %217 = bitcast %"class.std::__1::__tree_end_node"** %216 to %"class.std::__1::__tree_node_base"**
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %218, i64 0, i32 2
  %220 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %219, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %220, i64 0, i32 0
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = icmp eq %"class.std::__1::__tree_node_base"* %222, %218
  br i1 %223, label %224, label %215

224:                                              ; preds = %215, %200, %213
  %225 = phi %"class.std::__1::__tree_end_node"* [ %214, %213 ], [ %204, %200 ], [ %220, %215 ]
  %226 = icmp eq %"class.std::__1::__tree_end_node"* %225, %62
  br i1 %226, label %227, label %115

227:                                              ; preds = %224, %109
  %228 = add nuw i64 %110, 1
  %229 = icmp ult i64 %228, %103
  br i1 %229, label %109, label %230

230:                                              ; preds = %227, %99
  %231 = icmp eq i64 %102, 32
  %232 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %105, i64 1
  br i1 %231, label %233, label %270

233:                                              ; preds = %230
  %234 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* %232, i64 0) #13
  %235 = load i8, i8* %234, align 1
  %236 = icmp eq i8 %235, 86
  br i1 %236, label %237, label %240

237:                                              ; preds = %233
  %238 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %26, align 8
  %239 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %238, i64 1
  call void @_ZN4base16BasicStringPieceIcNSt3__111char_traitsIcEEE13remove_prefixEm(%"class.base::BasicStringPiece"* %239, i64 1)
  br label %240

240:                                              ; preds = %237, %233
  %241 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %0, i64 0, i32 15
  %242 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %26, align 8
  %243 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %242, i64 1, i32 0
  %244 = load i8*, i8** %243, align 8
  %245 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %242, i64 1, i32 1
  %246 = load i64, i64* %245, align 8
  %247 = call i1 @llvm.is.constant.i64(i64 %246) #13
  %248 = icmp ult i64 %246, 23
  %249 = and i1 %248, %247
  br i1 %249, label %250, label %268

250:                                              ; preds = %240
  %251 = bitcast %"class.std::__1::basic_string"* %241 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %252 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %251, i64 0, i32 1, i32 0
  %253 = load i8, i8* %252, align 1
  %254 = icmp slt i8 %253, 0
  br i1 %254, label %255, label %259

255:                                              ; preds = %250
  %256 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %246, i64* %256, align 8
  %257 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %241, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %258 = load i8*, i8** %257, align 8
  br label %262

259:                                              ; preds = %250
  %260 = trunc i64 %246 to i8
  store i8 %260, i8* %252, align 1
  %261 = bitcast %"class.std::__1::basic_string"* %241 to i8*
  br label %262

262:                                              ; preds = %259, %255
  %263 = phi i8* [ %258, %255 ], [ %261, %259 ]
  %264 = icmp eq i64 %246, 0
  br i1 %264, label %266, label %265

265:                                              ; preds = %262
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %263, i8* align 1 %244, i64 %246, i1 false) #13
  br label %266

266:                                              ; preds = %265, %262
  %267 = getelementptr inbounds i8, i8* %263, i64 %246
  store i8 0, i8* %267, align 1
  br label %417

268:                                              ; preds = %240
  %269 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %241, i8* %244, i64 %246) #13
  br label %417

270:                                              ; preds = %230
  %271 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %232, i64 0, i32 0
  %272 = load i8*, i8** %271, align 8
  %273 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %105, i64 1, i32 1
  %274 = load i64, i64* %273, align 8
  %275 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %272, i64 %274, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19, i64 0, i64 0), i64 4, i32 0) #13
  br i1 %275, label %283, label %276

276:                                              ; preds = %270
  %277 = load i64, i64* %29, align 8
  %278 = load i64, i64* %31, align 8
  %279 = sub i64 %277, %278
  %280 = ashr exact i64 %279, 4
  %281 = icmp ugt i64 %280, 1
  %282 = inttoptr i64 %278 to %"class.base::BasicStringPiece"*
  br i1 %281, label %377, label %417

283:                                              ; preds = %270
  %284 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %26, align 8
  %285 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %284, i64 1
  call void @_ZN4base16BasicStringPieceIcNSt3__111char_traitsIcEEE13remove_prefixEm(%"class.base::BasicStringPiece"* %285, i64 4)
  %286 = bitcast %"class.std::__1::vector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %286) #13
  %287 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %288 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 1
  %289 = bitcast %"class.std::__1::vector"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %289, i8 -86, i64 24, i1 false)
  %290 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %26, align 8
  %291 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %290, i64 1, i32 0
  %292 = load i8*, i8** %291, align 8
  %293 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %290, i64 1, i32 1
  %294 = load i64, i64* %293, align 8
  call void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector"* nonnull sret %8, i8* %292, i64 %294, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i64 0, i64 0), i64 1, i32 1, i32 1) #13
  %295 = bitcast %"class.base::BasicStringPiece"** %288 to i64*
  %296 = load i64, i64* %295, align 8
  %297 = bitcast %"class.std::__1::vector"* %8 to i64*
  %298 = load i64, i64* %297, align 8
  %299 = sub i64 %296, %298
  %300 = icmp eq i64 %299, 32
  %301 = inttoptr i64 %298 to %"class.base::BasicStringPiece"*
  br i1 %300, label %302, label %370

302:                                              ; preds = %283
  %303 = bitcast %"class.std::__1::vector"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %303) #13
  %304 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 0
  %305 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 1
  %306 = bitcast %"class.std::__1::vector"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %306, i8 -86, i64 24, i1 false)
  %307 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %26, align 8
  %308 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %307, i64 2, i32 0
  %309 = load i8*, i8** %308, align 8
  %310 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %307, i64 2, i32 1
  %311 = load i64, i64* %310, align 8
  call void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector"* nonnull sret %9, i8* %309, i64 %311, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i64 0, i64 0), i64 1, i32 1, i32 1) #13
  %312 = bitcast %"class.base::BasicStringPiece"** %305 to i64*
  %313 = load i64, i64* %312, align 8
  %314 = bitcast %"class.std::__1::vector"* %9 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = sub i64 %313, %315
  %317 = icmp eq i64 %316, 32
  %318 = inttoptr i64 %315 to %"class.base::BasicStringPiece"*
  br i1 %317, label %319, label %362

319:                                              ; preds = %302
  %320 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %0, i64 0, i32 14
  %321 = bitcast %"class.std::__1::basic_string"* %320 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %322 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %321, i64 0, i32 1, i32 0
  %323 = load i8, i8* %322, align 1
  %324 = icmp slt i8 %323, 0
  br i1 %324, label %325, label %329

325:                                              ; preds = %319
  %326 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 3, i64* %326, align 8
  %327 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %320, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %328 = load i8*, i8** %327, align 8
  br label %331

329:                                              ; preds = %319
  store i8 3, i8* %322, align 1
  %330 = bitcast %"class.std::__1::basic_string"* %320 to i8*
  br label %331

331:                                              ; preds = %325, %329
  %332 = phi i8* [ %328, %325 ], [ %330, %329 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %332, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.22, i64 0, i64 0), i64 3, i1 false) #13
  %333 = getelementptr inbounds i8, i8* %332, i64 3
  store i8 0, i8* %333, align 1
  %334 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %334) #13
  %335 = bitcast [5 x %"class.base::BasicStringPiece"]* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %335) #13
  %336 = getelementptr inbounds [5 x %"class.base::BasicStringPiece"], [5 x %"class.base::BasicStringPiece"]* %11, i64 0, i64 0
  %337 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %287, align 8
  %338 = bitcast %"class.base::BasicStringPiece"* %337 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %335, i8* align 8 %338, i64 16, i1 false)
  %339 = getelementptr inbounds [5 x %"class.base::BasicStringPiece"], [5 x %"class.base::BasicStringPiece"]* %11, i64 0, i64 1, i32 0
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i64 0, i64 0), i8** %339, align 8
  %340 = getelementptr inbounds [5 x %"class.base::BasicStringPiece"], [5 x %"class.base::BasicStringPiece"]* %11, i64 0, i64 1, i32 1
  store i64 1, i64* %340, align 8
  %341 = getelementptr inbounds [5 x %"class.base::BasicStringPiece"], [5 x %"class.base::BasicStringPiece"]* %11, i64 0, i64 2
  %342 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %337, i64 1
  %343 = bitcast %"class.base::BasicStringPiece"* %341 to i8*
  %344 = bitcast %"class.base::BasicStringPiece"* %342 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %343, i8* align 8 %344, i64 16, i1 false)
  %345 = getelementptr inbounds [5 x %"class.base::BasicStringPiece"], [5 x %"class.base::BasicStringPiece"]* %11, i64 0, i64 3, i32 0
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i64 0, i64 0), i8** %345, align 8
  %346 = getelementptr inbounds [5 x %"class.base::BasicStringPiece"], [5 x %"class.base::BasicStringPiece"]* %11, i64 0, i64 3, i32 1
  store i64 1, i64* %346, align 8
  %347 = getelementptr inbounds [5 x %"class.base::BasicStringPiece"], [5 x %"class.base::BasicStringPiece"]* %11, i64 0, i64 4
  %348 = bitcast %"class.std::__1::vector"* %9 to i8**
  %349 = load i8*, i8** %348, align 8
  %350 = bitcast %"class.base::BasicStringPiece"* %347 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %350, i8* align 8 %349, i64 16, i1 false)
  call void @_ZN4base6StrCatENS_4spanIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEELm18446744073709551615EEE(%"class.std::__1::basic_string"* nonnull sret %10, i64 5, %"class.base::BasicStringPiece"* nonnull %336) #13
  %351 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %0, i64 0, i32 15
  %352 = bitcast %"class.std::__1::basic_string"* %351 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %353 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %352, i64 0, i32 1, i32 0
  %354 = load i8, i8* %353, align 1
  %355 = icmp slt i8 %354, 0
  br i1 %355, label %356, label %359

356:                                              ; preds = %331
  %357 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %351, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %358 = load i8*, i8** %357, align 8
  call void @_ZdlPv(i8* %358) #15
  br label %359

359:                                              ; preds = %356, %331
  %360 = bitcast %"class.std::__1::basic_string"* %351 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %360, i8* nonnull align 8 %334, i64 24, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %335) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %334) #13
  %361 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %304, align 8
  br label %362

362:                                              ; preds = %302, %359
  %363 = phi %"class.base::BasicStringPiece"* [ %318, %302 ], [ %361, %359 ]
  %364 = icmp eq %"class.base::BasicStringPiece"* %363, null
  br i1 %364, label %368, label %365

365:                                              ; preds = %362
  %366 = ptrtoint %"class.base::BasicStringPiece"* %363 to i64
  store i64 %366, i64* %312, align 8
  %367 = bitcast %"class.base::BasicStringPiece"* %363 to i8*
  call void @_ZdlPv(i8* %367) #15
  br label %368

368:                                              ; preds = %362, %365
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %303) #13
  %369 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %287, align 8
  br label %370

370:                                              ; preds = %283, %368
  %371 = phi %"class.base::BasicStringPiece"* [ %301, %283 ], [ %369, %368 ]
  %372 = icmp eq %"class.base::BasicStringPiece"* %371, null
  br i1 %372, label %376, label %373

373:                                              ; preds = %370
  %374 = ptrtoint %"class.base::BasicStringPiece"* %371 to i64
  store i64 %374, i64* %295, align 8
  %375 = bitcast %"class.base::BasicStringPiece"* %371 to i8*
  call void @_ZdlPv(i8* %375) #15
  br label %376

376:                                              ; preds = %370, %373
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %286) #13
  br label %417

377:                                              ; preds = %276, %414
  %378 = phi i64 [ %415, %414 ], [ 1, %276 ]
  %379 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %282, i64 %378, i32 1
  %380 = load i64, i64* %379, align 8
  %381 = icmp eq i64 %380, 0
  br i1 %381, label %414, label %382

382:                                              ; preds = %377
  %383 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %282, i64 %378, i32 0
  %384 = load i8*, i8** %383, align 8
  %385 = call i8* @memchr(i8* %384, i32 46, i64 %380) #13
  %386 = icmp eq i8* %385, null
  br i1 %386, label %414, label %387

387:                                              ; preds = %382
  %388 = ptrtoint i8* %385 to i64
  %389 = ptrtoint i8* %384 to i64
  %390 = sub i64 %388, %389
  %391 = icmp eq i64 %390, -1
  br i1 %391, label %414, label %392

392:                                              ; preds = %387
  %393 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %0, i64 0, i32 15
  %394 = call i1 @llvm.is.constant.i64(i64 %380) #13
  %395 = icmp ult i64 %380, 23
  %396 = and i1 %395, %394
  br i1 %396, label %397, label %412

397:                                              ; preds = %392
  %398 = bitcast %"class.std::__1::basic_string"* %393 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %399 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %398, i64 0, i32 1, i32 0
  %400 = load i8, i8* %399, align 1
  %401 = icmp slt i8 %400, 0
  br i1 %401, label %402, label %406

402:                                              ; preds = %397
  %403 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %380, i64* %403, align 8
  %404 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %393, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %405 = load i8*, i8** %404, align 8
  br label %409

406:                                              ; preds = %397
  %407 = trunc i64 %380 to i8
  store i8 %407, i8* %399, align 1
  %408 = bitcast %"class.std::__1::basic_string"* %393 to i8*
  br label %409

409:                                              ; preds = %406, %402
  %410 = phi i8* [ %405, %402 ], [ %408, %406 ]
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %410, i8* align 1 %384, i64 %380, i1 false) #13
  %411 = getelementptr inbounds i8, i8* %410, i64 %380
  store i8 0, i8* %411, align 1
  br label %417

412:                                              ; preds = %392
  %413 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %393, i8* %384, i64 %380) #13
  br label %417

414:                                              ; preds = %377, %382, %387
  %415 = add nuw i64 %378, 1
  %416 = icmp ult i64 %415, %280
  br i1 %416, label %377, label %417

417:                                              ; preds = %414, %276, %194, %192, %159, %412, %409, %268, %266, %376
  %418 = bitcast %"class.std::__1::__tree_end_node"* %62 to %"class.std::__1::__tree_node"**
  %419 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %418, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIN4base16BasicStringPieceIcNS_11char_traitsIcEEEES6_EENS_19__map_value_compareIS6_S7_NS_4lessIS6_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree"* nonnull %61, %"class.std::__1::__tree_node"* %419) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #13
  %420 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %26, align 8
  br label %421

421:                                              ; preds = %50, %22, %417
  %422 = phi %"class.base::BasicStringPiece"* [ %55, %50 ], [ %34, %22 ], [ %420, %417 ]
  %423 = icmp eq %"class.base::BasicStringPiece"* %422, null
  br i1 %423, label %427, label %424

424:                                              ; preds = %421
  %425 = ptrtoint %"class.base::BasicStringPiece"* %422 to i64
  store i64 %425, i64* %29, align 8
  %426 = bitcast %"class.base::BasicStringPiece"* %422 to i8*
  call void @_ZdlPv(i8* %426) #15
  br label %427

427:                                              ; preds = %421, %424
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #13
  br label %428

428:                                              ; preds = %2, %427
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8*, i64, i8*, i64, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl13GLVersionInfo24ExtractDriverVendorANGLEEPKc(%"struct.gl::GLVersionInfo"*, i8*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.base::BasicStringPiece", align 8
  %5 = alloca %"class.std::__1::vector", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::vector", align 8
  %8 = bitcast %"class.base::BasicStringPiece"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #13
  %9 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 0
  %10 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 1
  store i64 -6148914691236517206, i64* %11, align 8
  store i8* %1, i8** %9, align 8
  %12 = icmp eq i8* %1, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %2
  %14 = tail call i64 @strlen(i8* nonnull %1) #13
  store i64 %14, i64* %10, align 8
  br label %19

15:                                               ; preds = %2
  store i64 0, i64* %10, align 8
  %16 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.56, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.57, i64 0, i64 0)) #13
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  %18 = load i64, i64* %10, align 8
  br label %19

19:                                               ; preds = %13, %15
  %20 = phi i64 [ %14, %13 ], [ %18, %15 ]
  %21 = add i64 %20, -8
  %22 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %4, i64 7, i64 %21)
  %23 = extractvalue { i8*, i64 } %22, 0
  %24 = extractvalue { i8*, i64 } %22, 1
  store i8* %23, i8** %9, align 8
  store i64 %24, i64* %10, align 8
  %25 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #13
  %26 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %28 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 24, i1 false)
  call void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector"* nonnull sret %5, i8* %23, i64 %24, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0), i64 1, i32 1, i32 1) #13
  %29 = bitcast %"class.base::BasicStringPiece"** %27 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.std::__1::vector"* %5 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %30, %32
  %34 = ashr exact i64 %33, 4
  %35 = icmp ugt i64 %34, 2
  %36 = inttoptr i64 %32 to %"class.base::BasicStringPiece"*
  br i1 %35, label %37, label %86

37:                                               ; preds = %19
  %38 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %0, i64 0, i32 14
  %39 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %36, i64 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %36, i64 0, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = call i1 @llvm.is.constant.i64(i64 %42) #13
  %44 = icmp ult i64 %42, 23
  %45 = and i1 %44, %43
  br i1 %45, label %46, label %64

46:                                               ; preds = %37
  %47 = bitcast %"class.std::__1::basic_string"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  br i1 %50, label %51, label %55

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %42, i64* %52, align 8
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  br label %58

55:                                               ; preds = %46
  %56 = trunc i64 %42 to i8
  store i8 %56, i8* %48, align 1
  %57 = bitcast %"class.std::__1::basic_string"* %38 to i8*
  br label %58

58:                                               ; preds = %55, %51
  %59 = phi i8* [ %54, %51 ], [ %57, %55 ]
  %60 = icmp eq i64 %42, 0
  br i1 %60, label %62, label %61

61:                                               ; preds = %58
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %59, i8* align 1 %40, i64 %42, i1 false) #13
  br label %62

62:                                               ; preds = %61, %58
  %63 = getelementptr inbounds i8, i8* %59, i64 %42
  store i8 0, i8* %63, align 1
  br label %66

64:                                               ; preds = %37
  %65 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %38, i8* %40, i64 %42) #13
  br label %66

66:                                               ; preds = %62, %64
  %67 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %67) #13
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %67, i8 0, i64 24, i1 false) #13
  %69 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %26, align 8
  %70 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %69, i64 2, i32 0
  %71 = load i8*, i8** %70, align 8
  %72 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %69, i64 2, i32 1
  %73 = load i64, i64* %72, align 8
  %74 = call zeroext i1 @_ZN4base10TrimStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_PNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(i8* %71, i64 %73, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24, i64 0, i64 0), i64 1, %"class.std::__1::basic_string"* nonnull %6) #13
  %75 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %75, i64 0, i32 1, i32 0
  %77 = load i8, i8* %76, align 1
  %78 = icmp slt i8 %77, 0
  %79 = load i8*, i8** %68, align 8
  %80 = select i1 %78, i8* %79, i8* %67
  call void @_ZN2gl13GLVersionInfo15ParseDriverInfoEPKc(%"struct.gl::GLVersionInfo"* %0, i8* %80)
  %81 = load i8, i8* %76, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %85

83:                                               ; preds = %66
  %84 = load i8*, i8** %68, align 8
  call void @_ZdlPv(i8* %84) #15
  br label %85

85:                                               ; preds = %66, %83
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %67) #13
  br label %223

86:                                               ; preds = %19
  %87 = load i8*, i8** %9, align 8
  %88 = load i64, i64* %10, align 8
  %89 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %87, i64 %88, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.25, i64 0, i64 0), i64 7, i32 0) #13
  br i1 %89, label %90, label %108

90:                                               ; preds = %86
  %91 = load i64, i64* %10, align 8
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %108, label %93

93:                                               ; preds = %90
  %94 = load i8*, i8** %9, align 8
  %95 = call i8* @memchr(i8* %94, i32 40, i64 %91) #13
  %96 = icmp eq i8* %95, null
  br i1 %96, label %108, label %97

97:                                               ; preds = %93
  %98 = ptrtoint i8* %95 to i64
  %99 = ptrtoint i8* %94 to i64
  %100 = sub i64 %98, %99
  %101 = icmp eq i64 %100, -1
  br i1 %101, label %108, label %102

102:                                              ; preds = %97
  %103 = add nuw i64 %100, 1
  %104 = add i64 %91, -2
  %105 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %4, i64 %103, i64 %104)
  %106 = extractvalue { i8*, i64 } %105, 0
  %107 = extractvalue { i8*, i64 } %105, 1
  store i8* %106, i8** %9, align 8
  store i64 %107, i64* %10, align 8
  br label %108

108:                                              ; preds = %90, %93, %102, %97, %86
  %109 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %0, i64 0, i32 6
  %110 = load i8, i8* %109, align 2, !range !2
  %111 = icmp eq i8 %110, 0
  br i1 %111, label %127, label %112

112:                                              ; preds = %108
  %113 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %0, i64 0, i32 14
  %114 = bitcast %"class.std::__1::basic_string"* %113 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %115 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %114, i64 0, i32 1, i32 0
  %116 = load i8, i8* %115, align 1
  %117 = icmp slt i8 %116, 0
  br i1 %117, label %118, label %122

118:                                              ; preds = %112
  %119 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 14, i64* %119, align 8
  %120 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %113, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load i8*, i8** %120, align 8
  br label %124

122:                                              ; preds = %112
  store i8 14, i8* %115, align 1
  %123 = bitcast %"class.std::__1::basic_string"* %113 to i8*
  br label %124

124:                                              ; preds = %118, %122
  %125 = phi i8* [ %121, %118 ], [ %123, %122 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %125, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @.str.26, i64 0, i64 0), i64 14, i1 false) #13
  %126 = getelementptr inbounds i8, i8* %125, i64 14
  store i8 0, i8* %126, align 1
  br label %127

127:                                              ; preds = %124, %108
  %128 = load i8*, i8** %9, align 8
  %129 = load i64, i64* %10, align 8
  %130 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %128, i64 %129, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.27, i64 0, i64 0), i64 7, i32 0) #13
  br i1 %130, label %131, label %146

131:                                              ; preds = %127
  %132 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %0, i64 0, i32 14
  %133 = bitcast %"class.std::__1::basic_string"* %132 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %134 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %133, i64 0, i32 1, i32 0
  %135 = load i8, i8* %134, align 1
  %136 = icmp slt i8 %135, 0
  br i1 %136, label %137, label %141

137:                                              ; preds = %131
  %138 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 14, i64* %138, align 8
  %139 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %132, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = load i8*, i8** %139, align 8
  br label %143

141:                                              ; preds = %131
  store i8 14, i8* %134, align 1
  %142 = bitcast %"class.std::__1::basic_string"* %132 to i8*
  br label %143

143:                                              ; preds = %137, %141
  %144 = phi i8* [ %140, %137 ], [ %142, %141 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %144, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @.str.28, i64 0, i64 0), i64 14, i1 false) #13
  %145 = getelementptr inbounds i8, i8* %144, i64 14
  store i8 0, i8* %145, align 1
  br label %223

146:                                              ; preds = %127
  %147 = load i8*, i8** %9, align 8
  %148 = load i64, i64* %10, align 8
  %149 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %147, i64 %148, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.29, i64 0, i64 0), i64 7, i32 0) #13
  br i1 %149, label %150, label %165

150:                                              ; preds = %146
  %151 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %0, i64 0, i32 14
  %152 = bitcast %"class.std::__1::basic_string"* %151 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %153 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %152, i64 0, i32 1, i32 0
  %154 = load i8, i8* %153, align 1
  %155 = icmp slt i8 %154, 0
  br i1 %155, label %156, label %160

156:                                              ; preds = %150
  %157 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 11, i64* %157, align 8
  %158 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %151, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = load i8*, i8** %158, align 8
  br label %162

160:                                              ; preds = %150
  store i8 11, i8* %153, align 1
  %161 = bitcast %"class.std::__1::basic_string"* %151 to i8*
  br label %162

162:                                              ; preds = %156, %160
  %163 = phi i8* [ %159, %156 ], [ %161, %160 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %163, i8* align 1 getelementptr inbounds ([12 x i8], [12 x i8]* @.str.30, i64 0, i64 0), i64 11, i1 false) #13
  %164 = getelementptr inbounds i8, i8* %163, i64 11
  store i8 0, i8* %164, align 1
  br label %223

165:                                              ; preds = %146
  %166 = load i8*, i8** %9, align 8
  %167 = load i64, i64* %10, align 8
  %168 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %166, i64 %167, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.31, i64 0, i64 0), i64 5, i32 0) #13
  br i1 %168, label %169, label %223

169:                                              ; preds = %165
  %170 = bitcast %"class.std::__1::vector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %170) #13
  %171 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 0
  %172 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 1
  %173 = bitcast %"class.std::__1::vector"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %173, i8 -86, i64 24, i1 false)
  %174 = load i8*, i8** %9, align 8
  %175 = load i64, i64* %10, align 8
  call void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector"* nonnull sret %7, i8* %174, i64 %175, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0), i64 1, i32 1, i32 1) #13
  %176 = bitcast %"class.base::BasicStringPiece"** %172 to i64*
  %177 = load i64, i64* %176, align 8
  %178 = bitcast %"class.std::__1::vector"* %7 to i64*
  %179 = load i64, i64* %178, align 8
  %180 = icmp eq i64 %177, %179
  %181 = inttoptr i64 %179 to %"class.base::BasicStringPiece"*
  br i1 %180, label %216, label %189

182:                                              ; preds = %189
  %183 = load i64, i64* %176, align 8
  %184 = load i64, i64* %178, align 8
  %185 = sub i64 %183, %184
  %186 = ashr exact i64 %185, 4
  %187 = icmp ult i64 %197, %186
  %188 = inttoptr i64 %184 to %"class.base::BasicStringPiece"*
  br i1 %187, label %189, label %214

189:                                              ; preds = %169, %182
  %190 = phi %"class.base::BasicStringPiece"* [ %188, %182 ], [ %181, %169 ]
  %191 = phi i64 [ %197, %182 ], [ 0, %169 ]
  %192 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %190, i64 %191, i32 0
  %193 = load i8*, i8** %192, align 8
  %194 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %190, i64 %191, i32 1
  %195 = load i64, i64* %194, align 8
  %196 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %193, i64 %195, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0), i64 9, i32 0) #13
  %197 = add nuw i64 %191, 1
  br i1 %196, label %198, label %182

198:                                              ; preds = %189
  %199 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %0, i64 0, i32 14
  %200 = bitcast %"class.std::__1::basic_string"* %199 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %201 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %200, i64 0, i32 1, i32 0
  %202 = load i8, i8* %201, align 1
  %203 = icmp slt i8 %202, 0
  br i1 %203, label %204, label %208

204:                                              ; preds = %198
  %205 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 13, i64* %205, align 8
  %206 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %199, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %207 = load i8*, i8** %206, align 8
  br label %210

208:                                              ; preds = %198
  store i8 13, i8* %201, align 1
  %209 = bitcast %"class.std::__1::basic_string"* %199 to i8*
  br label %210

210:                                              ; preds = %204, %208
  %211 = phi i8* [ %207, %204 ], [ %209, %208 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %211, i8* align 1 getelementptr inbounds ([14 x i8], [14 x i8]* @.str.33, i64 0, i64 0), i64 13, i1 false) #13
  %212 = getelementptr inbounds i8, i8* %211, i64 13
  store i8 0, i8* %212, align 1
  %213 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %171, align 8
  br label %216

214:                                              ; preds = %182
  %215 = inttoptr i64 %184 to %"class.base::BasicStringPiece"*
  br label %216

216:                                              ; preds = %214, %169, %210
  %217 = phi %"class.base::BasicStringPiece"* [ %213, %210 ], [ %181, %169 ], [ %215, %214 ]
  %218 = icmp eq %"class.base::BasicStringPiece"* %217, null
  br i1 %218, label %222, label %219

219:                                              ; preds = %216
  %220 = ptrtoint %"class.base::BasicStringPiece"* %217 to i64
  store i64 %220, i64* %176, align 8
  %221 = bitcast %"class.base::BasicStringPiece"* %217 to i8*
  call void @_ZdlPv(i8* %221) #15
  br label %222

222:                                              ; preds = %216, %219
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %170) #13
  br label %223

223:                                              ; preds = %162, %143, %165, %222, %85
  %224 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %26, align 8
  %225 = icmp eq %"class.base::BasicStringPiece"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %223
  %227 = ptrtoint %"class.base::BasicStringPiece"* %224 to i64
  store i64 %227, i64* %29, align 8
  %228 = bitcast %"class.base::BasicStringPiece"* %224 to i8*
  call void @_ZdlPv(i8* %228) #15
  br label %229

229:                                              ; preds = %223, %226
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #13
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2gl13GLVersionInfo12IsES3CapableERKN4base8internal9flat_treeINS1_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS1_8identityENS5_4lessIvEENS5_6vectorIS8_NS5_9allocatorIS8_EEEEEE(%"struct.gl::GLVersionInfo"* nocapture readonly, %"class.base::internal::flat_tree"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::BasicStringPiece", align 8
  %4 = alloca %"class.base::BasicStringPiece", align 8
  %5 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %0, i64 0, i32 0
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  %8 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %0, i64 0, i32 8
  %9 = load i32, i32* %8, align 8
  br i1 %7, label %14, label %10

10:                                               ; preds = %2
  %11 = icmp ugt i32 %9, 3
  br i1 %11, label %37, label %12

12:                                               ; preds = %10
  %13 = icmp eq i32 %9, 3
  ret i1 %13

14:                                               ; preds = %2
  %15 = icmp ugt i32 %9, 4
  br i1 %15, label %37, label %16

16:                                               ; preds = %14
  switch i32 %9, label %37 [
    i32 4, label %17
    i32 3, label %21
  ]

17:                                               ; preds = %16
  %18 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %0, i64 0, i32 9
  %19 = load i32, i32* %18, align 4
  %20 = icmp ugt i32 %19, 1
  br i1 %20, label %37, label %30

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %0, i64 0, i32 9
  %23 = load i32, i32* %22, align 4
  %24 = icmp ugt i32 %23, 2
  br i1 %24, label %25, label %37

25:                                               ; preds = %21
  %26 = bitcast %"class.base::BasicStringPiece"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #13
  %27 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 0
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.34, i64 0, i64 0), i8** %27, align 8
  %28 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 1
  store i64 26, i64* %28, align 8
  %29 = call zeroext i1 @_ZN3gfx12HasExtensionERKN4base8internal9flat_treeINS0_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_8identityENS4_4lessIvEENS4_6vectorIS7_NS4_9allocatorIS7_EEEEEERKS7_(%"class.base::internal::flat_tree"* dereferenceable(24) %1, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %3) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #13
  br label %30

30:                                               ; preds = %17, %25
  %31 = phi i1 [ %29, %25 ], [ true, %17 ]
  %32 = bitcast %"class.base::BasicStringPiece"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #13
  %33 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 0
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.35, i64 0, i64 0), i8** %33, align 8
  %34 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 1
  store i64 22, i64* %34, align 8
  %35 = call zeroext i1 @_ZN3gfx12HasExtensionERKN4base8internal9flat_treeINS0_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_8identityENS4_4lessIvEENS4_6vectorIS7_NS4_9allocatorIS7_EEEEEERKS7_(%"class.base::internal::flat_tree"* dereferenceable(24) %1, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %4) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #13
  %36 = and i1 %31, %35
  br label %37

37:                                               ; preds = %16, %14, %10, %21, %17, %30
  %38 = phi i1 [ %36, %30 ], [ true, %17 ], [ false, %21 ], [ true, %10 ], [ true, %14 ], [ false, %16 ]
  ret i1 %38
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
declare void @_ZN4base16BasicStringPieceIcNSt3__111char_traitsIcEEE13remove_prefixEm(%"class.base::BasicStringPiece"*, i64) local_unnamed_addr #0 align 2

declare void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector"* sret, i8*, i64, i8*, i64, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
declare void @_ZN4base16BasicStringPieceIcNSt3__111char_traitsIcEEE13remove_suffixEm(%"class.base::BasicStringPiece"*, i64) local_unnamed_addr #0 align 2

declare void @_ZN4base7VersionC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Version"*, i8*, i64) unnamed_addr #2

declare zeroext i1 @_ZNK4base7Version7IsValidEv(%"class.base::Version"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base7VersionD1Ev(%"class.base::Version"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"*, i64, i64) local_unnamed_addr #0 align 2

declare zeroext i1 @_ZN4base10TrimStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_PNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(i8*, i64, i8*, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2gl13GLVersionInfo20DisableES3ForTestingEv() local_unnamed_addr #4 align 2 {
  store i1 true, i1* @_ZN12_GLOBAL__N_123disable_es3_for_testingE, align 1
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2gl13GLVersionInfo20IsVersionSubstitutedEv(%"struct.gl::GLVersionInfo"* nocapture readnone) local_unnamed_addr #5 align 2 {
  %2 = load i1, i1* @_ZN12_GLOBAL__N_123disable_es3_for_testingE, align 1
  ret i1 %2
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { i8*, i8* } @_ZNK2gl13GLVersionInfo21GetFakeVersionStringsEjj(%"struct.gl::GLVersionInfo"* nocapture readonly, i32, i32) local_unnamed_addr #5 align 2 {
  %4 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %0, i64 0, i32 0
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  switch i32 %1, label %33 [
    i32 2, label %34
    i32 3, label %8
  ]

8:                                                ; preds = %7
  br label %34

9:                                                ; preds = %3
  %10 = icmp eq i32 %1, 4
  %11 = icmp eq i32 %2, 1
  %12 = and i1 %10, %11
  br i1 %12, label %34, label %13

13:                                               ; preds = %9
  %14 = icmp eq i32 %2, 0
  %15 = and i1 %10, %14
  br i1 %15, label %34, label %16

16:                                               ; preds = %13
  %17 = icmp eq i32 %1, 3
  %18 = icmp eq i32 %2, 3
  %19 = and i1 %17, %18
  br i1 %19, label %34, label %20

20:                                               ; preds = %16
  %21 = icmp eq i32 %2, 2
  %22 = and i1 %17, %21
  br i1 %22, label %34, label %23

23:                                               ; preds = %20
  %24 = and i1 %17, %11
  br i1 %24, label %34, label %25

25:                                               ; preds = %23
  %26 = and i1 %17, %14
  br i1 %26, label %34, label %27

27:                                               ; preds = %25
  %28 = icmp eq i32 %1, 2
  %29 = and i1 %28, %11
  br i1 %29, label %34, label %30

30:                                               ; preds = %27
  %31 = and i1 %28, %14
  br i1 %31, label %32, label %34

32:                                               ; preds = %30
  br label %34

33:                                               ; preds = %7
  br label %34

34:                                               ; preds = %27, %25, %23, %20, %16, %13, %9, %7, %33, %30, %32, %8
  %35 = phi i8* [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.38, i64 0, i64 0), %8 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i64 0, i64 0), %32 ], [ inttoptr (i64 -6148914691236517206 to i8*), %30 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.36, i64 0, i64 0), %7 ], [ inttoptr (i64 -6148914691236517206 to i8*), %33 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.40, i64 0, i64 0), %9 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.42, i64 0, i64 0), %13 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.44, i64 0, i64 0), %16 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.46, i64 0, i64 0), %20 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.48, i64 0, i64 0), %23 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.50, i64 0, i64 0), %25 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.52, i64 0, i64 0), %27 ]
  %36 = phi i8* [ getelementptr inbounds ([23 x i8], [23 x i8]* @.str.39, i64 0, i64 0), %8 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.55, i64 0, i64 0), %32 ], [ inttoptr (i64 -6148914691236517206 to i8*), %30 ], [ getelementptr inbounds ([23 x i8], [23 x i8]* @.str.37, i64 0, i64 0), %7 ], [ inttoptr (i64 -6148914691236517206 to i8*), %33 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.41, i64 0, i64 0), %9 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.43, i64 0, i64 0), %13 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.45, i64 0, i64 0), %16 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.47, i64 0, i64 0), %20 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i64 0, i64 0), %23 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.51, i64 0, i64 0), %25 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53, i64 0, i64 0), %27 ]
  %37 = insertvalue { i8*, i8* } undef, i8* %35, 0
  %38 = insertvalue { i8*, i8* } %37, i8* %36, 1
  ret { i8*, i8* } %38
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"*, i64) local_unnamed_addr #0 align 2

declare void @_ZN4base6StrCatENS_4spanIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEELm18446744073709551615EEE(%"class.std::__1::basic_string"* sret, i64, %"class.base::BasicStringPiece"*) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN3gfx12HasExtensionERKN4base8internal9flat_treeINS0_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_8identityENS4_4lessIvEENS4_6vectorIS7_NS4_9allocatorIS7_EEEEEERKS7_(%"class.base::internal::flat_tree"* dereferenceable(24), %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeIN4base16BasicStringPieceIcNS_11char_traitsIcEEEES6_EENS_19__map_value_compareIS6_S7_NS_4lessIS6_EELb1EEENS_9allocatorIS7_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS7_PNS_11__tree_nodeIS7_SH_EElEERPNS_15__tree_end_nodeISJ_EESK_RKT_(%"class.std::__1::__tree"*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.std::__1::__tree_node_base"** dereferenceable(8), %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %6 = ptrtoint %"class.std::__1::__tree_end_node"* %1 to i64
  %7 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = icmp eq %"class.std::__1::__tree_end_node"* %7, %1
  br i1 %8, label %28, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 4
  %11 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::__tree_end_node"* %10 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 5
  %18 = bitcast %"class.std::__1::__tree_end_node"* %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = icmp ugt i64 %14, %19
  %21 = select i1 %20, i64 %19, i64 %14
  %22 = tail call i32 @memcmp(i8* %12, i8* %16, i64 %21) #13
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %9
  %25 = icmp ult i64 %14, %19
  br i1 %25, label %28, label %132

26:                                               ; preds = %9
  %27 = icmp slt i32 %22, 0
  br i1 %27, label %28, label %132

28:                                               ; preds = %24, %5, %26
  %29 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %30 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %29, align 8
  %31 = icmp eq %"class.std::__1::__tree_end_node"* %30, %1
  %32 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  br i1 %31, label %73, label %34

34:                                               ; preds = %28
  %35 = icmp eq %"class.std::__1::__tree_node_base"* %33, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %34, %36
  %37 = phi %"class.std::__1::__tree_node_base"* [ %39, %36 ], [ %33, %34 ]
  %38 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %37, i64 0, i32 1
  %39 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %38, align 8
  %40 = icmp eq %"class.std::__1::__tree_node_base"* %39, null
  br i1 %40, label %52, label %36

41:                                               ; preds = %34, %41
  %42 = phi %"class.std::__1::__tree_end_node"* [ %46, %41 ], [ %1, %34 ]
  %43 = bitcast %"class.std::__1::__tree_end_node"* %42 to %"class.std::__1::__tree_node_base"*
  %44 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %42, i64 2
  %45 = bitcast %"class.std::__1::__tree_end_node"* %44 to %"class.std::__1::__tree_end_node"**
  %46 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %46, i64 0, i32 0
  %48 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %47, align 8
  %49 = icmp eq %"class.std::__1::__tree_node_base"* %48, %43
  br i1 %49, label %41, label %50

50:                                               ; preds = %41
  %51 = bitcast %"class.std::__1::__tree_end_node"* %46 to %"class.std::__1::__tree_node_base"*
  br label %52

52:                                               ; preds = %36, %50
  %53 = phi %"class.std::__1::__tree_node_base"* [ %51, %50 ], [ %37, %36 ]
  %54 = ptrtoint %"class.std::__1::__tree_node_base"* %53 to i64
  %55 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %53, i64 1
  %56 = bitcast %"class.std::__1::__tree_node_base"* %55 to i8**
  %57 = load i8*, i8** %56, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %53, i64 1, i32 1
  %59 = bitcast %"class.std::__1::__tree_node_base"** %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 0
  %62 = load i8*, i8** %61, align 8
  %63 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 1
  %64 = load i64, i64* %63, align 8
  %65 = icmp ugt i64 %60, %64
  %66 = select i1 %65, i64 %64, i64 %60
  %67 = tail call i32 @memcmp(i8* %57, i8* %62, i64 %66) #13
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %71

69:                                               ; preds = %52
  %70 = icmp ult i64 %60, %64
  br i1 %70, label %73, label %82

71:                                               ; preds = %52
  %72 = icmp slt i32 %67, 0
  br i1 %72, label %73, label %82

73:                                               ; preds = %28, %69, %71
  %74 = phi i64 [ %54, %71 ], [ %54, %69 ], [ %6, %28 ]
  %75 = icmp eq %"class.std::__1::__tree_node_base"* %33, null
  br i1 %75, label %76, label %78

76:                                               ; preds = %73
  %77 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %1, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %245

78:                                               ; preds = %73
  %79 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  store i64 %74, i64* %79, align 8
  %80 = inttoptr i64 %74 to %"class.std::__1::__tree_node_base"*
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 0, i32 1
  br label %245

82:                                               ; preds = %69, %71
  %83 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node"**
  %84 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %83, align 8
  %85 = icmp eq %"class.std::__1::__tree_node"* %84, null
  br i1 %85, label %130, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %88

88:                                               ; preds = %126, %86
  %89 = phi %"class.std::__1::__tree_node"* [ %129, %126 ], [ %84, %86 ]
  %90 = phi %"class.std::__1::__tree_node_base"** [ %128, %126 ], [ %87, %86 ]
  %91 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %89, i64 0, i32 1, i32 0, i32 0, i32 0
  %92 = load i8*, i8** %91, align 8
  %93 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %89, i64 0, i32 1, i32 0, i32 0, i32 1
  %94 = load i64, i64* %93, align 8
  %95 = icmp ugt i64 %64, %94
  %96 = select i1 %95, i64 %94, i64 %64
  %97 = tail call i32 @memcmp(i8* %62, i8* %92, i64 %96) #13
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %101

99:                                               ; preds = %88
  %100 = icmp ult i64 %64, %94
  br i1 %100, label %103, label %109

101:                                              ; preds = %88
  %102 = icmp slt i32 %97, 0
  br i1 %102, label %103, label %109

103:                                              ; preds = %101, %99
  %104 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %89, i64 0, i32 0, i32 0, i32 0
  %105 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %104, align 8
  %106 = icmp eq %"class.std::__1::__tree_node_base"* %105, null
  br i1 %106, label %107, label %126

107:                                              ; preds = %103
  %108 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %89, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %108, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %245

109:                                              ; preds = %101, %99
  %110 = tail call i32 @memcmp(i8* %92, i8* %62, i64 %96) #13
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %116

112:                                              ; preds = %109
  %113 = icmp eq i64 %94, %64
  %114 = xor i1 %95, true
  %115 = or i1 %113, %114
  br i1 %115, label %124, label %118

116:                                              ; preds = %109
  %117 = icmp slt i32 %110, 0
  br i1 %117, label %118, label %124

118:                                              ; preds = %116, %112
  %119 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %89, i64 0, i32 0, i32 1
  %120 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %119, align 8
  %121 = icmp eq %"class.std::__1::__tree_node_base"* %120, null
  br i1 %121, label %122, label %126

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %89, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %123, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %245

124:                                              ; preds = %116, %112
  %125 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %89, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %125, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %245

126:                                              ; preds = %118, %103
  %127 = phi %"class.std::__1::__tree_node_base"* [ %105, %103 ], [ %120, %118 ]
  %128 = phi %"class.std::__1::__tree_node_base"** [ %104, %103 ], [ %119, %118 ]
  %129 = bitcast %"class.std::__1::__tree_node_base"* %127 to %"class.std::__1::__tree_node"*
  br label %88

130:                                              ; preds = %82
  store %"class.std::__1::__tree_end_node"* %7, %"class.std::__1::__tree_end_node"** %2, align 8
  %131 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %7, i64 0, i32 0
  br label %245

132:                                              ; preds = %24, %26
  %133 = tail call i32 @memcmp(i8* %16, i8* %12, i64 %21) #13
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %139

135:                                              ; preds = %132
  %136 = icmp eq i64 %19, %14
  %137 = xor i1 %20, true
  %138 = or i1 %136, %137
  br i1 %138, label %242, label %141

139:                                              ; preds = %132
  %140 = icmp slt i32 %133, 0
  br i1 %140, label %141, label %242

141:                                              ; preds = %135, %139
  %142 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 1, i32 0
  %143 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %142, align 8
  %144 = icmp eq %"class.std::__1::__tree_node_base"* %143, null
  br i1 %144, label %145, label %153

145:                                              ; preds = %141
  %146 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  %147 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 2
  %148 = bitcast %"class.std::__1::__tree_end_node"* %147 to %"class.std::__1::__tree_end_node"**
  %149 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %148, align 8
  %150 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %149, i64 0, i32 0
  %151 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %150, align 8
  %152 = icmp eq %"class.std::__1::__tree_node_base"* %151, %146
  br i1 %152, label %169, label %160

153:                                              ; preds = %141, %153
  %154 = phi %"class.std::__1::__tree_node_base"* [ %156, %153 ], [ %143, %141 ]
  %155 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %154, i64 0, i32 0, i32 0
  %156 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %155, align 8
  %157 = icmp eq %"class.std::__1::__tree_node_base"* %156, null
  br i1 %157, label %158, label %153

158:                                              ; preds = %153
  %159 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %154, i64 0, i32 0
  br label %169

160:                                              ; preds = %145, %160
  %161 = phi %"class.std::__1::__tree_end_node"** [ %164, %160 ], [ %148, %145 ]
  %162 = bitcast %"class.std::__1::__tree_end_node"** %161 to %"class.std::__1::__tree_node_base"**
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 2
  %165 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %164, align 8
  %166 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %165, i64 0, i32 0
  %167 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %166, align 8
  %168 = icmp eq %"class.std::__1::__tree_node_base"* %167, %163
  br i1 %168, label %169, label %160

169:                                              ; preds = %160, %158, %145
  %170 = phi %"class.std::__1::__tree_end_node"* [ %159, %158 ], [ %149, %145 ], [ %165, %160 ]
  %171 = icmp eq %"class.std::__1::__tree_end_node"* %170, %7
  br i1 %171, label %187, label %172

172:                                              ; preds = %169
  %173 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %170, i64 4
  %174 = bitcast %"class.std::__1::__tree_end_node"* %173 to i8**
  %175 = load i8*, i8** %174, align 8
  %176 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %170, i64 5
  %177 = bitcast %"class.std::__1::__tree_end_node"* %176 to i64*
  %178 = load i64, i64* %177, align 8
  %179 = icmp ugt i64 %14, %178
  %180 = select i1 %179, i64 %178, i64 %14
  %181 = tail call i32 @memcmp(i8* %12, i8* %175, i64 %180) #13
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %185

183:                                              ; preds = %172
  %184 = icmp ult i64 %14, %178
  br i1 %184, label %187, label %192

185:                                              ; preds = %172
  %186 = icmp slt i32 %181, 0
  br i1 %186, label %187, label %192

187:                                              ; preds = %183, %169, %185
  br i1 %144, label %188, label %190

188:                                              ; preds = %187
  %189 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  store i64 %6, i64* %189, align 8
  br label %245

190:                                              ; preds = %187
  store %"class.std::__1::__tree_end_node"* %170, %"class.std::__1::__tree_end_node"** %2, align 8
  %191 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %170, i64 0, i32 0
  br label %245

192:                                              ; preds = %183, %185
  %193 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node"**
  %194 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %193, align 8
  %195 = icmp eq %"class.std::__1::__tree_node"* %194, null
  br i1 %195, label %240, label %196

196:                                              ; preds = %192
  %197 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %198

198:                                              ; preds = %236, %196
  %199 = phi %"class.std::__1::__tree_node"* [ %239, %236 ], [ %194, %196 ]
  %200 = phi %"class.std::__1::__tree_node_base"** [ %238, %236 ], [ %197, %196 ]
  %201 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %199, i64 0, i32 1, i32 0, i32 0, i32 0
  %202 = load i8*, i8** %201, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %199, i64 0, i32 1, i32 0, i32 0, i32 1
  %204 = load i64, i64* %203, align 8
  %205 = icmp ugt i64 %14, %204
  %206 = select i1 %205, i64 %204, i64 %14
  %207 = tail call i32 @memcmp(i8* %12, i8* %202, i64 %206) #13
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %209, label %211

209:                                              ; preds = %198
  %210 = icmp ult i64 %14, %204
  br i1 %210, label %213, label %219

211:                                              ; preds = %198
  %212 = icmp slt i32 %207, 0
  br i1 %212, label %213, label %219

213:                                              ; preds = %211, %209
  %214 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %199, i64 0, i32 0, i32 0, i32 0
  %215 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %214, align 8
  %216 = icmp eq %"class.std::__1::__tree_node_base"* %215, null
  br i1 %216, label %217, label %236

217:                                              ; preds = %213
  %218 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %199, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %218, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %245

219:                                              ; preds = %211, %209
  %220 = tail call i32 @memcmp(i8* %202, i8* %12, i64 %206) #13
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %222, label %226

222:                                              ; preds = %219
  %223 = icmp eq i64 %204, %14
  %224 = xor i1 %205, true
  %225 = or i1 %223, %224
  br i1 %225, label %234, label %228

226:                                              ; preds = %219
  %227 = icmp slt i32 %220, 0
  br i1 %227, label %228, label %234

228:                                              ; preds = %226, %222
  %229 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %199, i64 0, i32 0, i32 1
  %230 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %229, align 8
  %231 = icmp eq %"class.std::__1::__tree_node_base"* %230, null
  br i1 %231, label %232, label %236

232:                                              ; preds = %228
  %233 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %199, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %233, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %245

234:                                              ; preds = %226, %222
  %235 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %199, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %235, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %245

236:                                              ; preds = %228, %213
  %237 = phi %"class.std::__1::__tree_node_base"* [ %215, %213 ], [ %230, %228 ]
  %238 = phi %"class.std::__1::__tree_node_base"** [ %214, %213 ], [ %229, %228 ]
  %239 = bitcast %"class.std::__1::__tree_node_base"* %237 to %"class.std::__1::__tree_node"*
  br label %198

240:                                              ; preds = %192
  store %"class.std::__1::__tree_end_node"* %7, %"class.std::__1::__tree_end_node"** %2, align 8
  %241 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %7, i64 0, i32 0
  br label %245

242:                                              ; preds = %135, %139
  %243 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  store i64 %6, i64* %243, align 8
  %244 = bitcast %"class.std::__1::__tree_node_base"** %3 to i64*
  store i64 %6, i64* %244, align 8
  br label %245

245:                                              ; preds = %188, %190, %217, %232, %234, %240, %76, %78, %107, %122, %124, %130, %242
  %246 = phi %"class.std::__1::__tree_node_base"** [ %3, %242 ], [ %77, %76 ], [ %81, %78 ], [ %104, %107 ], [ %119, %122 ], [ %90, %124 ], [ %131, %130 ], [ %142, %188 ], [ %191, %190 ], [ %214, %217 ], [ %229, %232 ], [ %200, %234 ], [ %241, %240 ]
  ret %"class.std::__1::__tree_node_base"** %246
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIN4base16BasicStringPieceIcNS_11char_traitsIcEEEES6_EENS_19__map_value_compareIS6_S7_NS_4lessIS6_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN4base16BasicStringPieceIcNS_11char_traitsIcEEEES6_EENS_19__map_value_compareIS6_S7_NS_4lessIS6_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #13
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN4base16BasicStringPieceIcNS_11char_traitsIcEEEES6_EENS_19__map_value_compareIS6_S7_NS_4lessIS6_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #13
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #15
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #11

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #12

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone }
attributes #12 = { nofree nounwind readonly }
attributes #13 = { nounwind }
attributes #14 = { noreturn nounwind }
attributes #15 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!5 = distinct !{!5, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNSt3__16__treeINS_12__value_typeIN4base16BasicStringPieceIcNS_11char_traitsIcEEEES6_EENS_19__map_value_compareIS6_S7_NS_4lessIS6_EELb1EEENS_9allocatorIS7_EEE16__construct_nodeIJRKNS_4pairIKS6_S6_EEEEENS_10unique_ptrINS_11__tree_nodeIS7_PvEENS_22__tree_node_destructorINSC_ISO_EEEEEEDpOT_: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__16__treeINS_12__value_typeIN4base16BasicStringPieceIcNS_11char_traitsIcEEEES6_EENS_19__map_value_compareIS6_S7_NS_4lessIS6_EELb1EEENS_9allocatorIS7_EEE16__construct_nodeIJRKNS_4pairIKS6_S6_EEEEENS_10unique_ptrINS_11__tree_nodeIS7_PvEENS_22__tree_node_destructorINSC_ISO_EEEEEEDpOT_"}
