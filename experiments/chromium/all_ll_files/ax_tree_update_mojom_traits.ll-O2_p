; ModuleID = '../../ui/accessibility/mojom/ax_tree_update_mojom_traits.cc'
source_filename = "../../ui/accessibility/mojom/ax_tree_update_mojom_traits.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ax::mojom::internal::AXTreeUpdate_Data" = type { %"struct.mojo::internal::StructHeader", i8, [3 x i8], i32, %"struct.mojo::internal::Pointer", i32, i32, %"struct.mojo::internal::Pointer.0", i32, [4 x i8], %"struct.mojo::internal::Pointer.1" }
%"struct.mojo::internal::StructHeader" = type { i32, i32 }
%"struct.mojo::internal::Pointer" = type { i64 }
%"struct.mojo::internal::Pointer.0" = type { i64 }
%"struct.mojo::internal::Pointer.1" = type { i64 }
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::internal::Buffer", %"class.std::__1::vector", %"class.std::__1::vector.4", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::ScopedHandleBase.2"*, %"class.mojo::ScopedHandleBase.2"*, %"class.std::__1::__compressed_pair" }
%"class.mojo::ScopedHandleBase.2" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.mojo::ScopedHandleBase.2"* }
%"class.std::__1::vector.4" = type { %"class.std::__1::__vector_base.5" }
%"class.std::__1::__vector_base.5" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.6" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.11 }
%class.scoped_refptr.11 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.15, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.17", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.13 }
%class.scoped_refptr.13 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.14", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.14" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.15 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.16" }>
%"class.base::RefCountedThreadSafe.16" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.17" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__atomic_base.19" }
%"struct.std::__1::__atomic_base.19" = type { %"struct.std::__1::__cxx_atomic_impl.20" }
%"struct.std::__1::__cxx_atomic_impl.20" = type { %"struct.std::__1::__cxx_atomic_base_impl.21" }
%"struct.std::__1::__cxx_atomic_base_impl.21" = type { i32 }
%"struct.ui::AXTreeUpdate" = type { i8, [7 x i8], %"struct.ui::AXTreeData", i32, i32, %"class.std::__1::vector.28", i32, i32, %"class.std::__1::vector.100" }
%"struct.ui::AXTreeData" = type <{ i32 (...)**, %"class.ui::AXTreeID", %"class.ui::AXTreeID", %"class.ui::AXTreeID", %"class.std::__1::basic_string", i8, [3 x i8], float, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.ui::AXTreeID" = type { i32, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.24 }
%union.anon.24 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.28" = type { %"class.std::__1::__vector_base.29" }
%"class.std::__1::__vector_base.29" = type { %"struct.ui::AXNodeData"*, %"struct.ui::AXNodeData"*, %"class.std::__1::__compressed_pair.95" }
%"struct.ui::AXNodeData" = type { i32 (...)**, i32, i32, i32, i64, %"class.std::__1::vector.30", %"class.std::__1::vector.37", %"class.std::__1::vector.45", %"class.std::__1::vector.53", %"class.std::__1::vector.61", %"class.std::__1::vector.69", %"class.std::__1::vector.77", %"class.std::__1::vector.85", %"struct.ui::AXRelativeBounds" }
%"class.std::__1::vector.30" = type { %"class.std::__1::__vector_base.31" }
%"class.std::__1::__vector_base.31" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.32" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector.37" = type { %"class.std::__1::__vector_base.38" }
%"class.std::__1::__vector_base.38" = type { %"struct.std::__1::pair.39"*, %"struct.std::__1::pair.39"*, %"class.std::__1::__compressed_pair.40" }
%"struct.std::__1::pair.39" = type opaque
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.std::__1::pair.39"* }
%"class.std::__1::vector.45" = type { %"class.std::__1::__vector_base.46" }
%"class.std::__1::__vector_base.46" = type { %"struct.std::__1::pair.47"*, %"struct.std::__1::pair.47"*, %"class.std::__1::__compressed_pair.48" }
%"struct.std::__1::pair.47" = type opaque
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"struct.std::__1::pair.47"* }
%"class.std::__1::vector.53" = type { %"class.std::__1::__vector_base.54" }
%"class.std::__1::__vector_base.54" = type { %"struct.std::__1::pair.55"*, %"struct.std::__1::pair.55"*, %"class.std::__1::__compressed_pair.56" }
%"struct.std::__1::pair.55" = type opaque
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"struct.std::__1::pair.55"* }
%"class.std::__1::vector.61" = type { %"class.std::__1::__vector_base.62" }
%"class.std::__1::__vector_base.62" = type { %"struct.std::__1::pair.63"*, %"struct.std::__1::pair.63"*, %"class.std::__1::__compressed_pair.64" }
%"struct.std::__1::pair.63" = type opaque
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"struct.std::__1::pair.63"* }
%"class.std::__1::vector.69" = type { %"class.std::__1::__vector_base.70" }
%"class.std::__1::__vector_base.70" = type { %"struct.std::__1::pair.71"*, %"struct.std::__1::pair.71"*, %"class.std::__1::__compressed_pair.72" }
%"struct.std::__1::pair.71" = type opaque
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"struct.std::__1::pair.71"* }
%"class.std::__1::vector.77" = type { %"class.std::__1::__vector_base.78" }
%"class.std::__1::__vector_base.78" = type { %"struct.std::__1::pair.79"*, %"struct.std::__1::pair.79"*, %"class.std::__1::__compressed_pair.80" }
%"struct.std::__1::pair.79" = type opaque
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"struct.std::__1::pair.79"* }
%"class.std::__1::vector.85" = type { %"class.std::__1::__vector_base.86" }
%"class.std::__1::__vector_base.86" = type { i32*, i32*, %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { i32* }
%"struct.ui::AXRelativeBounds" = type { i32 (...)**, i32, %"class.gfx::RectF", %"class.std::__1::unique_ptr" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.gfx::Transform"* }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"struct.ui::AXNodeData"* }
%"class.std::__1::vector.100" = type { %"class.std::__1::__vector_base.101" }
%"class.std::__1::__vector_base.101" = type { %"struct.ui::AXEventIntent"*, %"struct.ui::AXEventIntent"*, %"class.std::__1::__compressed_pair.102" }
%"struct.ui::AXEventIntent" = type { i32 (...)**, i32, i32, i32, i32 }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"struct.ui::AXEventIntent"* }
%"class.ax::mojom::internal::AXTreeData_Data" = type { %"struct.mojo::internal::StructHeader", %"class.ax::mojom::internal::AXTreeID_Data", %"class.ax::mojom::internal::AXTreeID_Data", %"class.ax::mojom::internal::AXTreeID_Data", %"struct.mojo::internal::Pointer.108", i8, [3 x i8], float, %"struct.mojo::internal::Pointer.108", %"struct.mojo::internal::Pointer.108", %"struct.mojo::internal::Pointer.108", i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.ax::mojom::internal::AXTreeID_Data" = type { i32, i32, %"union.ax::mojom::internal::AXTreeID_Data::Union_" }
%"union.ax::mojom::internal::AXTreeID_Data::Union_" = type { %"struct.mojo::internal::Pointer.107" }
%"struct.mojo::internal::Pointer.107" = type { i64 }
%"struct.mojo::internal::Pointer.108" = type { i64 }
%"class.mojo::internal::Array_Data" = type { %"struct.mojo::internal::ArrayHeader" }
%"struct.mojo::internal::ArrayHeader" = type { i32, i32 }
%"class.mojo::internal::Array_Data.119" = type { %"struct.mojo::internal::ArrayHeader" }
%"class.ax::mojom::internal::AXNodeData_Data" = type { %"struct.mojo::internal::StructHeader", i32, i32, i32, [4 x i8], i64, %"struct.mojo::internal::Pointer.109", %"struct.mojo::internal::Pointer.110", %"struct.mojo::internal::Pointer.111", %"struct.mojo::internal::Pointer.112", %"struct.mojo::internal::Pointer.113", %"struct.mojo::internal::Pointer.114", %"struct.mojo::internal::Pointer.115", %"struct.mojo::internal::Pointer.116", %"struct.mojo::internal::Pointer.117" }
%"struct.mojo::internal::Pointer.109" = type { i64 }
%"struct.mojo::internal::Pointer.110" = type { i64 }
%"struct.mojo::internal::Pointer.111" = type { i64 }
%"struct.mojo::internal::Pointer.112" = type { i64 }
%"struct.mojo::internal::Pointer.113" = type { i64 }
%"struct.mojo::internal::Pointer.114" = type { i64 }
%"struct.mojo::internal::Pointer.115" = type { i64 }
%"struct.mojo::internal::Pointer.116" = type { i64 }
%"struct.mojo::internal::Pointer.117" = type { i64 }
%"class.ax::mojom::internal::EventIntent_Data" = type { %"struct.mojo::internal::StructHeader", i32, i32, i32, i32 }

$_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewIN2ax5mojom18AXNodeDataDataViewEEENSt3__16vectorIN2ui10AXNodeDataENS7_9allocatorISA_EEEENS0_13ArrayIteratorINS_11ArrayTraitsISD_EESD_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINS4_8internal15AXNodeData_DataEEEEEPSD_PNS_7MessageE = comdat any

$_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewIN2ax5mojom19EventIntentDataViewEEENSt3__16vectorIN2ui13AXEventIntentENS7_9allocatorISA_EEEENS0_13ArrayIteratorINS_11ArrayTraitsISD_EESD_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINS4_8internal16EventIntent_DataEEEEEPSD_PNS_7MessageE = comdat any

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN2ax5mojom20AXTreeUpdateDataViewEN2ui12AXTreeUpdateEE4ReadES3_PS5_(%"class.ax::mojom::internal::AXTreeUpdate_Data"*, %"class.mojo::Message"*, %"struct.ui::AXTreeUpdate"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.ax::mojom::internal::AXTreeUpdate_Data", %"class.ax::mojom::internal::AXTreeUpdate_Data"* %0, i64 0, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = and i8 %5, 1
  %7 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %2, i64 0, i32 0
  store i8 %6, i8* %7, align 8
  %8 = getelementptr inbounds %"class.ax::mojom::internal::AXTreeUpdate_Data", %"class.ax::mojom::internal::AXTreeUpdate_Data"* %0, i64 0, i32 4
  %9 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %8, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %18, label %12

12:                                               ; preds = %3
  %13 = bitcast %"struct.mojo::internal::Pointer"* %8 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 %10
  %15 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %2, i64 0, i32 2
  %16 = bitcast i8* %14 to %"class.ax::mojom::internal::AXTreeData_Data"*
  %17 = tail call zeroext i1 @_ZN4mojo12StructTraitsIN2ax5mojom18AXTreeDataDataViewEN2ui10AXTreeDataEE4ReadES3_PS5_(%"class.ax::mojom::internal::AXTreeData_Data"* nonnull %16, %"class.mojo::Message"* %1, %"struct.ui::AXTreeData"* %15) #5
  br i1 %17, label %18, label %81

18:                                               ; preds = %3, %12
  %19 = getelementptr inbounds %"class.ax::mojom::internal::AXTreeUpdate_Data", %"class.ax::mojom::internal::AXTreeUpdate_Data"* %0, i64 0, i32 3
  %20 = load i32, i32* %19, align 1
  %21 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %2, i64 0, i32 3
  store i32 %20, i32* %21, align 8
  %22 = getelementptr inbounds %"class.ax::mojom::internal::AXTreeUpdate_Data", %"class.ax::mojom::internal::AXTreeUpdate_Data"* %0, i64 0, i32 5
  %23 = load i32, i32* %22, align 1
  %24 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %2, i64 0, i32 4
  store i32 %23, i32* %24, align 4
  %25 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %2, i64 0, i32 5
  %26 = getelementptr inbounds %"class.ax::mojom::internal::AXTreeUpdate_Data", %"class.ax::mojom::internal::AXTreeUpdate_Data"* %0, i64 0, i32 7
  %27 = getelementptr inbounds %"struct.mojo::internal::Pointer.0", %"struct.mojo::internal::Pointer.0"* %26, i64 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %30, label %44

30:                                               ; preds = %18
  %31 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %25, i64 0, i32 0, i32 0
  %32 = load %"struct.ui::AXNodeData"*, %"struct.ui::AXNodeData"** %31, align 8
  %33 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %2, i64 0, i32 5, i32 0, i32 1
  %34 = load %"struct.ui::AXNodeData"*, %"struct.ui::AXNodeData"** %33, align 8
  %35 = icmp eq %"struct.ui::AXNodeData"* %34, %32
  br i1 %35, label %43, label %36

36:                                               ; preds = %30, %36
  %37 = phi %"struct.ui::AXNodeData"* [ %38, %36 ], [ %34, %30 ]
  %38 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %37, i64 -1
  %39 = bitcast %"struct.ui::AXNodeData"* %38 to void (%"struct.ui::AXNodeData"*)***
  %40 = load void (%"struct.ui::AXNodeData"*)**, void (%"struct.ui::AXNodeData"*)*** %39, align 8
  %41 = load void (%"struct.ui::AXNodeData"*)*, void (%"struct.ui::AXNodeData"*)** %40, align 8
  tail call void %41(%"struct.ui::AXNodeData"* %38) #5
  %42 = icmp eq %"struct.ui::AXNodeData"* %38, %32
  br i1 %42, label %43, label %36

43:                                               ; preds = %36, %30
  store %"struct.ui::AXNodeData"* %32, %"struct.ui::AXNodeData"** %33, align 8
  br label %49

44:                                               ; preds = %18
  %45 = bitcast %"struct.mojo::internal::Pointer.0"* %26 to i8*
  %46 = getelementptr inbounds i8, i8* %45, i64 %28
  %47 = bitcast i8* %46 to %"class.mojo::internal::Array_Data"*
  %48 = tail call zeroext i1 @_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewIN2ax5mojom18AXNodeDataDataViewEEENSt3__16vectorIN2ui10AXNodeDataENS7_9allocatorISA_EEEENS0_13ArrayIteratorINS_11ArrayTraitsISD_EESD_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINS4_8internal15AXNodeData_DataEEEEEPSD_PNS_7MessageE(%"class.mojo::internal::Array_Data"* nonnull %47, %"class.std::__1::vector.28"* %25, %"class.mojo::Message"* %1) #5
  br i1 %48, label %49, label %81

49:                                               ; preds = %43, %44
  %50 = getelementptr inbounds %"class.ax::mojom::internal::AXTreeUpdate_Data", %"class.ax::mojom::internal::AXTreeUpdate_Data"* %0, i64 0, i32 6
  %51 = load i32, i32* %50, align 1
  %52 = icmp ult i32 %51, 4
  %53 = select i1 %52, i32 %51, i32 0
  %54 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %2, i64 0, i32 6
  store i32 %53, i32* %54, align 8
  %55 = getelementptr inbounds %"class.ax::mojom::internal::AXTreeUpdate_Data", %"class.ax::mojom::internal::AXTreeUpdate_Data"* %0, i64 0, i32 8
  %56 = load i32, i32* %55, align 1
  %57 = icmp ult i32 %56, 38
  %58 = select i1 %57, i32 %56, i32 0
  %59 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %2, i64 0, i32 7
  store i32 %58, i32* %59, align 4
  %60 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %2, i64 0, i32 8
  %61 = getelementptr inbounds %"class.ax::mojom::internal::AXTreeUpdate_Data", %"class.ax::mojom::internal::AXTreeUpdate_Data"* %0, i64 0, i32 10
  %62 = getelementptr inbounds %"struct.mojo::internal::Pointer.1", %"struct.mojo::internal::Pointer.1"* %61, i64 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %76

65:                                               ; preds = %49
  %66 = getelementptr inbounds %"class.std::__1::vector.100", %"class.std::__1::vector.100"* %60, i64 0, i32 0, i32 0
  %67 = load %"struct.ui::AXEventIntent"*, %"struct.ui::AXEventIntent"** %66, align 8
  %68 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %2, i64 0, i32 8, i32 0, i32 1
  %69 = load %"struct.ui::AXEventIntent"*, %"struct.ui::AXEventIntent"** %68, align 8
  %70 = icmp eq %"struct.ui::AXEventIntent"* %69, %67
  br i1 %70, label %75, label %71

71:                                               ; preds = %65, %71
  %72 = phi %"struct.ui::AXEventIntent"* [ %73, %71 ], [ %69, %65 ]
  %73 = getelementptr inbounds %"struct.ui::AXEventIntent", %"struct.ui::AXEventIntent"* %72, i64 -1
  tail call void @_ZN2ui13AXEventIntentD1Ev(%"struct.ui::AXEventIntent"* %73) #5
  %74 = icmp eq %"struct.ui::AXEventIntent"* %73, %67
  br i1 %74, label %75, label %71

75:                                               ; preds = %71, %65
  store %"struct.ui::AXEventIntent"* %67, %"struct.ui::AXEventIntent"** %68, align 8
  br label %81

76:                                               ; preds = %49
  %77 = bitcast %"struct.mojo::internal::Pointer.1"* %61 to i8*
  %78 = getelementptr inbounds i8, i8* %77, i64 %63
  %79 = bitcast i8* %78 to %"class.mojo::internal::Array_Data.119"*
  %80 = tail call zeroext i1 @_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewIN2ax5mojom19EventIntentDataViewEEENSt3__16vectorIN2ui13AXEventIntentENS7_9allocatorISA_EEEENS0_13ArrayIteratorINS_11ArrayTraitsISD_EESD_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINS4_8internal16EventIntent_DataEEEEEPSD_PNS_7MessageE(%"class.mojo::internal::Array_Data.119"* nonnull %79, %"class.std::__1::vector.100"* %60, %"class.mojo::Message"* %1) #5
  br label %81

81:                                               ; preds = %76, %75, %44, %12
  %82 = phi i1 [ false, %12 ], [ false, %44 ], [ %80, %76 ], [ true, %75 ]
  ret i1 %82
}

declare zeroext i1 @_ZN4mojo12StructTraitsIN2ax5mojom18AXTreeDataDataViewEN2ui10AXTreeDataEE4ReadES3_PS5_(%"class.ax::mojom::internal::AXTreeData_Data"*, %"class.mojo::Message"*, %"struct.ui::AXTreeData"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewIN2ax5mojom18AXNodeDataDataViewEEENSt3__16vectorIN2ui10AXNodeDataENS7_9allocatorISA_EEEENS0_13ArrayIteratorINS_11ArrayTraitsISD_EESD_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINS4_8internal15AXNodeData_DataEEEEEPSD_PNS_7MessageE(%"class.mojo::internal::Array_Data"*, %"class.std::__1::vector.28"*, %"class.mojo::Message"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.mojo::internal::Array_Data", %"class.mojo::internal::Array_Data"* %0, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 1
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"struct.ui::AXNodeData"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.28"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = sdiv exact i64 %12, 264
  %14 = icmp eq i64 %13, %6
  br i1 %14, label %52, label %15

15:                                               ; preds = %3
  %16 = icmp eq i32 %5, 0
  br i1 %16, label %31, label %17

17:                                               ; preds = %15
  %18 = mul nuw nsw i64 %6, 264
  %19 = tail call i8* @_Znwm(i64 %18) #6
  %20 = bitcast i8* %19 to %"struct.ui::AXNodeData"*
  %21 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %20, i64 %6
  %22 = ptrtoint i8* %19 to i64
  br label %23

23:                                               ; preds = %23, %17
  %24 = phi %"struct.ui::AXNodeData"* [ %25, %23 ], [ %20, %17 ]
  tail call void @_ZN2ui10AXNodeDataC1Ev(%"struct.ui::AXNodeData"* %24) #5
  %25 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %24, i64 1
  %26 = icmp eq %"struct.ui::AXNodeData"* %25, %21
  br i1 %26, label %27, label %23

27:                                               ; preds = %23
  %28 = ptrtoint %"struct.ui::AXNodeData"* %21 to i64
  %29 = load i64, i64* %10, align 8
  %30 = load i64, i64* %8, align 8
  br label %31

31:                                               ; preds = %15, %27
  %32 = phi i64 [ %28, %27 ], [ 0, %15 ]
  %33 = phi i64 [ %30, %27 ], [ %9, %15 ]
  %34 = phi i64 [ %22, %27 ], [ 0, %15 ]
  %35 = phi i64 [ %29, %27 ], [ %11, %15 ]
  store i64 %34, i64* %10, align 8
  store i64 %32, i64* %8, align 8
  %36 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %37 = bitcast %"struct.ui::AXNodeData"** %36 to i64*
  store i64 %32, i64* %37, align 8
  %38 = inttoptr i64 %35 to %"struct.ui::AXNodeData"*
  %39 = icmp eq i64 %35, 0
  %40 = inttoptr i64 %33 to %"struct.ui::AXNodeData"*
  br i1 %39, label %52, label %41

41:                                               ; preds = %31
  %42 = icmp eq %"struct.ui::AXNodeData"* %40, %38
  br i1 %42, label %50, label %43

43:                                               ; preds = %41, %43
  %44 = phi %"struct.ui::AXNodeData"* [ %45, %43 ], [ %40, %41 ]
  %45 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %44, i64 -1
  %46 = bitcast %"struct.ui::AXNodeData"* %45 to void (%"struct.ui::AXNodeData"*)***
  %47 = load void (%"struct.ui::AXNodeData"*)**, void (%"struct.ui::AXNodeData"*)*** %46, align 8
  %48 = load void (%"struct.ui::AXNodeData"*)*, void (%"struct.ui::AXNodeData"*)** %47, align 8
  tail call void %48(%"struct.ui::AXNodeData"* %45) #5
  %49 = icmp eq %"struct.ui::AXNodeData"* %45, %38
  br i1 %49, label %50, label %43

50:                                               ; preds = %43, %41
  %51 = inttoptr i64 %35 to i8*
  tail call void @_ZdlPv(i8* %51) #6
  br label %52

52:                                               ; preds = %3, %50, %31
  %53 = load i32, i32* %4, align 1
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %81, label %55

55:                                               ; preds = %52
  %56 = getelementptr inbounds %"class.mojo::internal::Array_Data", %"class.mojo::internal::Array_Data"* %0, i64 1
  %57 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %1, i64 0, i32 0, i32 0
  br label %58

58:                                               ; preds = %55, %77
  %59 = phi i32 [ %53, %55 ], [ %78, %77 ]
  %60 = phi i64 [ 0, %55 ], [ %67, %77 ]
  %61 = getelementptr inbounds %"class.mojo::internal::Array_Data", %"class.mojo::internal::Array_Data"* %56, i64 %60
  %62 = bitcast %"class.mojo::internal::Array_Data"* %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = icmp eq i64 %63, 0
  %65 = bitcast %"class.mojo::internal::Array_Data"* %61 to i8*
  %66 = getelementptr inbounds i8, i8* %65, i64 %63
  %67 = add nuw nsw i64 %60, 1
  %68 = icmp eq i8* %66, null
  %69 = or i1 %64, %68
  br i1 %69, label %77, label %70

70:                                               ; preds = %58
  %71 = bitcast i8* %66 to %"class.ax::mojom::internal::AXNodeData_Data"*
  %72 = load %"struct.ui::AXNodeData"*, %"struct.ui::AXNodeData"** %57, align 8
  %73 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %72, i64 %60
  %74 = tail call zeroext i1 @_ZN4mojo12StructTraitsIN2ax5mojom18AXNodeDataDataViewEN2ui10AXNodeDataEE4ReadES3_PS5_(%"class.ax::mojom::internal::AXNodeData_Data"* nonnull %71, %"class.mojo::Message"* %2, %"struct.ui::AXNodeData"* %73) #5
  br i1 %74, label %75, label %81

75:                                               ; preds = %70
  %76 = load i32, i32* %4, align 1
  br label %77

77:                                               ; preds = %75, %58
  %78 = phi i32 [ %76, %75 ], [ %59, %58 ]
  %79 = zext i32 %78 to i64
  %80 = icmp ult i64 %67, %79
  br i1 %80, label %58, label %81

81:                                               ; preds = %77, %70, %52
  %82 = phi i1 [ true, %52 ], [ false, %70 ], [ true, %77 ]
  ret i1 %82
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

declare void @_ZN2ui10AXNodeDataC1Ev(%"struct.ui::AXNodeData"*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

declare zeroext i1 @_ZN4mojo12StructTraitsIN2ax5mojom18AXNodeDataDataViewEN2ui10AXNodeDataEE4ReadES3_PS5_(%"class.ax::mojom::internal::AXNodeData_Data"*, %"class.mojo::Message"*, %"struct.ui::AXNodeData"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewIN2ax5mojom19EventIntentDataViewEEENSt3__16vectorIN2ui13AXEventIntentENS7_9allocatorISA_EEEENS0_13ArrayIteratorINS_11ArrayTraitsISD_EESD_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINS4_8internal16EventIntent_DataEEEEEPSD_PNS_7MessageE(%"class.mojo::internal::Array_Data.119"*, %"class.std::__1::vector.100"*, %"class.mojo::Message"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.mojo::internal::Array_Data.119", %"class.mojo::internal::Array_Data.119"* %0, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 1
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"class.std::__1::vector.100", %"class.std::__1::vector.100"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"struct.ui::AXEventIntent"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.100"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = sdiv exact i64 %12, 24
  %14 = icmp eq i64 %13, %6
  br i1 %14, label %49, label %15

15:                                               ; preds = %3
  %16 = icmp eq i32 %5, 0
  br i1 %16, label %31, label %17

17:                                               ; preds = %15
  %18 = mul nuw nsw i64 %6, 24
  %19 = tail call i8* @_Znwm(i64 %18) #6
  %20 = bitcast i8* %19 to %"struct.ui::AXEventIntent"*
  %21 = getelementptr inbounds %"struct.ui::AXEventIntent", %"struct.ui::AXEventIntent"* %20, i64 %6
  %22 = ptrtoint i8* %19 to i64
  br label %23

23:                                               ; preds = %23, %17
  %24 = phi %"struct.ui::AXEventIntent"* [ %25, %23 ], [ %20, %17 ]
  tail call void @_ZN2ui13AXEventIntentC1Ev(%"struct.ui::AXEventIntent"* %24) #5
  %25 = getelementptr inbounds %"struct.ui::AXEventIntent", %"struct.ui::AXEventIntent"* %24, i64 1
  %26 = icmp eq %"struct.ui::AXEventIntent"* %25, %21
  br i1 %26, label %27, label %23

27:                                               ; preds = %23
  %28 = ptrtoint %"struct.ui::AXEventIntent"* %21 to i64
  %29 = load i64, i64* %10, align 8
  %30 = load i64, i64* %8, align 8
  br label %31

31:                                               ; preds = %15, %27
  %32 = phi i64 [ %28, %27 ], [ 0, %15 ]
  %33 = phi i64 [ %30, %27 ], [ %9, %15 ]
  %34 = phi i64 [ %22, %27 ], [ 0, %15 ]
  %35 = phi i64 [ %29, %27 ], [ %11, %15 ]
  store i64 %34, i64* %10, align 8
  store i64 %32, i64* %8, align 8
  %36 = getelementptr inbounds %"class.std::__1::vector.100", %"class.std::__1::vector.100"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %37 = bitcast %"struct.ui::AXEventIntent"** %36 to i64*
  store i64 %32, i64* %37, align 8
  %38 = inttoptr i64 %35 to %"struct.ui::AXEventIntent"*
  %39 = icmp eq i64 %35, 0
  %40 = inttoptr i64 %33 to %"struct.ui::AXEventIntent"*
  br i1 %39, label %49, label %41

41:                                               ; preds = %31
  %42 = icmp eq %"struct.ui::AXEventIntent"* %40, %38
  br i1 %42, label %47, label %43

43:                                               ; preds = %41, %43
  %44 = phi %"struct.ui::AXEventIntent"* [ %45, %43 ], [ %40, %41 ]
  %45 = getelementptr inbounds %"struct.ui::AXEventIntent", %"struct.ui::AXEventIntent"* %44, i64 -1
  tail call void @_ZN2ui13AXEventIntentD1Ev(%"struct.ui::AXEventIntent"* %45) #5
  %46 = icmp eq %"struct.ui::AXEventIntent"* %45, %38
  br i1 %46, label %47, label %43

47:                                               ; preds = %43, %41
  %48 = inttoptr i64 %35 to i8*
  tail call void @_ZdlPv(i8* %48) #6
  br label %49

49:                                               ; preds = %3, %47, %31
  %50 = load i32, i32* %4, align 1
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %78, label %52

52:                                               ; preds = %49
  %53 = getelementptr inbounds %"class.mojo::internal::Array_Data.119", %"class.mojo::internal::Array_Data.119"* %0, i64 1
  %54 = getelementptr inbounds %"class.std::__1::vector.100", %"class.std::__1::vector.100"* %1, i64 0, i32 0, i32 0
  br label %55

55:                                               ; preds = %52, %74
  %56 = phi i32 [ %50, %52 ], [ %75, %74 ]
  %57 = phi i64 [ 0, %52 ], [ %64, %74 ]
  %58 = getelementptr inbounds %"class.mojo::internal::Array_Data.119", %"class.mojo::internal::Array_Data.119"* %53, i64 %57
  %59 = bitcast %"class.mojo::internal::Array_Data.119"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = icmp eq i64 %60, 0
  %62 = bitcast %"class.mojo::internal::Array_Data.119"* %58 to i8*
  %63 = getelementptr inbounds i8, i8* %62, i64 %60
  %64 = add nuw nsw i64 %57, 1
  %65 = icmp eq i8* %63, null
  %66 = or i1 %61, %65
  br i1 %66, label %74, label %67

67:                                               ; preds = %55
  %68 = bitcast i8* %63 to %"class.ax::mojom::internal::EventIntent_Data"*
  %69 = load %"struct.ui::AXEventIntent"*, %"struct.ui::AXEventIntent"** %54, align 8
  %70 = getelementptr inbounds %"struct.ui::AXEventIntent", %"struct.ui::AXEventIntent"* %69, i64 %57
  %71 = tail call zeroext i1 @_ZN4mojo12StructTraitsIN2ax5mojom19EventIntentDataViewEN2ui13AXEventIntentEE4ReadES3_PS5_(%"class.ax::mojom::internal::EventIntent_Data"* nonnull %68, %"struct.ui::AXEventIntent"* %70) #5
  br i1 %71, label %72, label %78

72:                                               ; preds = %67
  %73 = load i32, i32* %4, align 1
  br label %74

74:                                               ; preds = %72, %55
  %75 = phi i32 [ %73, %72 ], [ %56, %55 ]
  %76 = zext i32 %75 to i64
  %77 = icmp ult i64 %64, %76
  br i1 %77, label %55, label %78

78:                                               ; preds = %74, %67, %49
  %79 = phi i1 [ true, %49 ], [ false, %67 ], [ true, %74 ]
  ret i1 %79
}

; Function Attrs: nounwind
declare void @_ZN2ui13AXEventIntentD1Ev(%"struct.ui::AXEventIntent"*) unnamed_addr #4

declare void @_ZN2ui13AXEventIntentC1Ev(%"struct.ui::AXEventIntent"*) unnamed_addr #1

declare zeroext i1 @_ZN4mojo12StructTraitsIN2ax5mojom19EventIntentDataViewEN2ui13AXEventIntentEE4ReadES3_PS5_(%"class.ax::mojom::internal::EventIntent_Data"*, %"struct.ui::AXEventIntent"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
