; ModuleID = '../../third_party/pdfium/xfa/fgas/graphics/cfgas_gegraphics.cpp'
source_filename = "../../third_party/pdfium/xfa/fgas/graphics/cfgas_gegraphics.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.(anonymous namespace)::FX_HATCHDATA" = type { i32, i32, [64 x i8] }
%class.CFGAS_GEGraphics = type { %"class.fxcrt::UnownedPtr", %"struct.CFGAS_GEGraphics::TInfo", %"class.std::__1::vector.10" }
%"class.fxcrt::UnownedPtr" = type { %class.CFX_RenderDevice* }
%"struct.CFGAS_GEGraphics::TInfo" = type { %class.CFX_GraphStateData, %class.CFX_Matrix, i8, %class.CFGAS_GEColor, %class.CFGAS_GEColor }
%class.CFX_GraphStateData = type { i8, i8, float, float, float, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { float*, float*, %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { float* }
%class.CFX_Matrix = type { float, float, float, float, float, float }
%class.CFGAS_GEColor = type { i32, i32, %"class.fxcrt::UnownedPtr.8", %"class.fxcrt::UnownedPtr.9" }
%"class.fxcrt::UnownedPtr.8" = type { %class.CFGAS_GEPattern* }
%class.CFGAS_GEPattern = type { i32, i32, i32 }
%"class.fxcrt::UnownedPtr.9" = type { %class.CFGAS_GEShading* }
%class.CFGAS_GEShading = type { i32, %class.CFX_PTemplate, %class.CFX_PTemplate, float, float, i8, i8, [256 x i32] }
%class.CFX_PTemplate = type { float, float }
%"class.std::__1::vector.10" = type { %"class.std::__1::__vector_base.11" }
%"class.std::__1::__vector_base.11" = type { %"class.std::__1::unique_ptr.12"*, %"class.std::__1::unique_ptr.12"*, %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"struct.CFGAS_GEGraphics::TInfo"* }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.std::__1::unique_ptr.12"* }
%class.CFX_RenderDevice = type { i32 (...)**, %"class.fxcrt::RetainPtr", i32, i32, i32, i32, i8, %struct.FX_RECT, %"class.std::__1::unique_ptr.1" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.CFX_DIBitmap* }
%class.CFX_DIBitmap = type { %class.CFX_DIBBase, %"class.fxcrt::MaybeOwned" }
%class.CFX_DIBBase = type { %"class.fxcrt::Retainable", i16, i32, i32, i32, %"class.fxcrt::RetainPtr", %"class.std::__1::vector.18" }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.std::__1::vector.18" = type { %"class.std::__1::__vector_base.19" }
%"class.std::__1::__vector_base.19" = type { i32*, i32*, %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { i32* }
%"class.fxcrt::MaybeOwned" = type { %"class.std::__1::unique_ptr.23", %"class.fxcrt::UnownedPtr.27" }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { i8* }
%"class.fxcrt::UnownedPtr.27" = type { i8* }
%struct.FX_RECT = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %class.RenderDeviceDriverIface* }
%class.RenderDeviceDriverIface = type { i32 (...)** }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr.33", i64 }
%"class.fxcrt::UnownedPtr.33" = type { float* }
%class.CFGAS_GEPath = type { %class.CFX_PathData }
%class.CFX_PathData = type { %"class.std::__1::vector.34" }
%"class.std::__1::vector.34" = type { %"class.std::__1::__vector_base.35" }
%"class.std::__1::__vector_base.35" = type { %class.FX_PATHPOINT*, %class.FX_PATHPOINT*, %"class.std::__1::__compressed_pair.36" }
%class.FX_PATHPOINT = type <{ %class.CFX_PTemplate, i8, i8, [2 x i8] }>
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %class.FX_PATHPOINT* }
%struct.CFX_FillRenderOptions = type { i8, i8 }
%class.CFX_RectF = type { float, float, float, float }
%class.CFX_FloatRect = type { float, float, float, float }
%class.CFX_DefaultRenderDevice = type { %class.CFX_RenderDevice }
%"class.fxcrt::RetainPtr.41" = type { %"class.std::__1::unique_ptr.42" }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %class.CFX_DIBBase* }
%"class.CFX_RenderDevice::StateRestorer" = type { %"class.fxcrt::UnownedPtr" }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorINS_10unique_ptrIN16CFGAS_GEGraphics5TInfoENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZNSt3__16vectorIfNS_9allocatorIfEEE8__appendEm = comdat any

@_ZN12_GLOBAL__N_117kHatchPlaceHolderE = internal unnamed_addr constant %"struct.(anonymous namespace)::FX_HATCHDATA" zeroinitializer, align 4
@_ZN12_GLOBAL__N_116kHatchBitmapDataE = internal unnamed_addr constant <{ { i32, i32, <{ [34 x i8], [30 x i8] }> }, %"struct.(anonymous namespace)::FX_HATCHDATA", %"struct.(anonymous namespace)::FX_HATCHDATA", %"struct.(anonymous namespace)::FX_HATCHDATA", %"struct.(anonymous namespace)::FX_HATCHDATA", %"struct.(anonymous namespace)::FX_HATCHDATA" }> <{ { i32, i32, <{ [34 x i8], [30 x i8] }> } { i32 16, i32 16, <{ [34 x i8], [30 x i8] }> <{ [34 x i8] c"\FF\FF\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\FF\FF", [30 x i8] zeroinitializer }> }, %"struct.(anonymous namespace)::FX_HATCHDATA" { i32 16, i32 16, [64 x i8] c"\80\80\00\00\80\80\00\00\80\80\00\00\80\80\00\00\80\80\00\00\80\80\00\00\80\80\00\00\80\80\00\00\80\80\00\00\80\80\00\00\80\80\00\00\80\80\00\00\80\80\00\00\80\80\00\00\80\80\00\00\80\80\00\00" }, %"struct.(anonymous namespace)::FX_HATCHDATA" { i32 16, i32 16, [64 x i8] c"\80\80\00\00@@\00\00  \00\00\10\10\00\00\08\08\00\00\04\04\00\00\02\02\00\00\01\01\00\00\80\80\00\00@@\00\00  \00\00\10\10\00\00\08\08\00\00\04\04\00\00\02\02\00\00\01\01\00\00" }, %"struct.(anonymous namespace)::FX_HATCHDATA" { i32 16, i32 16, [64 x i8] c"\01\01\00\00\02\02\00\00\04\04\00\00\08\08\00\00\10\10\00\00  \00\00@@\00\00\80\80\00\00\01\01\00\00\02\02\00\00\04\04\00\00\08\08\00\00\10\10\00\00  \00\00@@\00\00\80\80\00\00" }, %"struct.(anonymous namespace)::FX_HATCHDATA" { i32 16, i32 16, [64 x i8] c"\FF\FF\00\00\80\80\00\00\80\80\00\00\80\80\00\00\80\80\00\00\80\80\00\00\80\80\00\00\80\80\00\00\FF\FF\00\00\80\80\00\00\80\80\00\00\80\80\00\00\80\80\00\00\80\80\00\00\80\80\00\00\80\80\00\00" }, %"struct.(anonymous namespace)::FX_HATCHDATA" { i32 16, i32 16, [64 x i8] c"\81\81\00\00BB\00\00$$\00\00\18\18\00\00\18\18\00\00$$\00\00BB\00\00\81\81\00\00\81\81\00\00BB\00\00$$\00\00\18\18\00\00\18\18\00\00$$\00\00BB\00\00\81\81\00\00" } }>, align 16

@_ZN16CFGAS_GEGraphicsC1EP16CFX_RenderDevice = hidden unnamed_addr alias void (%class.CFGAS_GEGraphics*, %class.CFX_RenderDevice*), void (%class.CFGAS_GEGraphics*, %class.CFX_RenderDevice*)* @_ZN16CFGAS_GEGraphicsC2EP16CFX_RenderDevice
@_ZN16CFGAS_GEGraphicsD1Ev = hidden unnamed_addr alias void (%class.CFGAS_GEGraphics*), void (%class.CFGAS_GEGraphics*)* @_ZN16CFGAS_GEGraphicsD2Ev
@_ZN16CFGAS_GEGraphics5TInfoC1Ev = hidden unnamed_addr alias void (%"struct.CFGAS_GEGraphics::TInfo"*), void (%"struct.CFGAS_GEGraphics::TInfo"*)* @_ZN16CFGAS_GEGraphics5TInfoC2Ev
@_ZN16CFGAS_GEGraphics5TInfoC1ERKS0_ = hidden unnamed_addr alias void (%"struct.CFGAS_GEGraphics::TInfo"*, %"struct.CFGAS_GEGraphics::TInfo"*), void (%"struct.CFGAS_GEGraphics::TInfo"*, %"struct.CFGAS_GEGraphics::TInfo"*)* @_ZN16CFGAS_GEGraphics5TInfoC2ERKS0_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFGAS_GEGraphicsC2EP16CFX_RenderDevice(%class.CFGAS_GEGraphics*, %class.CFX_RenderDevice*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 0, i32 0
  store %class.CFX_RenderDevice* %1, %class.CFX_RenderDevice** %3, align 8
  %4 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 1, i32 0
  tail call void @_ZN18CFX_GraphStateDataC1Ev(%class.CFX_GraphStateData* %4) #14
  %5 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 1, i32 1, i32 0
  %6 = bitcast float* %5 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, <4 x float>* %6, align 4
  %7 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 1, i32 1, i32 4
  %8 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 1, i32 3
  %9 = bitcast float* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %9, i8 0, i64 9, i1 false) #14
  tail call void @_ZN13CFGAS_GEColorC1EP15CFGAS_GEShading(%class.CFGAS_GEColor* %8, %class.CFGAS_GEShading* null) #14
  %10 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 1, i32 4
  tail call void @_ZN13CFGAS_GEColorC1EP15CFGAS_GEShading(%class.CFGAS_GEColor* %10, %class.CFGAS_GEShading* null) #14
  %11 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 2
  %12 = bitcast %"class.std::__1::vector.10"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFGAS_GEGraphicsD2Ev(%class.CFGAS_GEGraphics*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr.12"*, %"class.std::__1::unique_ptr.12"** %3, align 8
  %5 = icmp eq %"class.std::__1::unique_ptr.12"* %4, null
  br i1 %5, label %29, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::unique_ptr.12"* %4 to i8*
  %8 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 2, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr.12"*, %"class.std::__1::unique_ptr.12"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr.12"* %9, %4
  br i1 %10, label %27, label %11

11:                                               ; preds = %6, %22
  %12 = phi %"class.std::__1::unique_ptr.12"* [ %13, %22 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.12"* %12, i64 -1
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.12"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"struct.CFGAS_GEGraphics::TInfo"*, %"struct.CFGAS_GEGraphics::TInfo"** %14, align 8
  store %"struct.CFGAS_GEGraphics::TInfo"* null, %"struct.CFGAS_GEGraphics::TInfo"** %14, align 8
  %16 = icmp eq %"struct.CFGAS_GEGraphics::TInfo"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"struct.CFGAS_GEGraphics::TInfo", %"struct.CFGAS_GEGraphics::TInfo"* %15, i64 0, i32 4
  tail call void @_ZN13CFGAS_GEColorD1Ev(%class.CFGAS_GEColor* %18) #14
  %19 = getelementptr inbounds %"struct.CFGAS_GEGraphics::TInfo", %"struct.CFGAS_GEGraphics::TInfo"* %15, i64 0, i32 3
  tail call void @_ZN13CFGAS_GEColorD1Ev(%class.CFGAS_GEColor* %19) #14
  %20 = getelementptr inbounds %"struct.CFGAS_GEGraphics::TInfo", %"struct.CFGAS_GEGraphics::TInfo"* %15, i64 0, i32 0
  tail call void @_ZN18CFX_GraphStateDataD1Ev(%class.CFX_GraphStateData* %20) #14
  %21 = getelementptr inbounds %"struct.CFGAS_GEGraphics::TInfo", %"struct.CFGAS_GEGraphics::TInfo"* %15, i64 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* %21) #15
  br label %22

22:                                               ; preds = %17, %11
  %23 = icmp eq %"class.std::__1::unique_ptr.12"* %13, %4
  br i1 %23, label %24, label %11

24:                                               ; preds = %22
  %25 = bitcast %"class.std::__1::vector.10"* %2 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %6
  %28 = phi i8* [ %26, %24 ], [ %7, %6 ]
  store %"class.std::__1::unique_ptr.12"* %4, %"class.std::__1::unique_ptr.12"** %8, align 8
  tail call void @_ZdlPv(i8* %28) #15
  br label %29

29:                                               ; preds = %1, %27
  %30 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 1, i32 4
  tail call void @_ZN13CFGAS_GEColorD1Ev(%class.CFGAS_GEColor* %30) #14
  %31 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 1, i32 3
  tail call void @_ZN13CFGAS_GEColorD1Ev(%class.CFGAS_GEColor* %31) #14
  %32 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 1, i32 0
  tail call void @_ZN18CFX_GraphStateDataD1Ev(%class.CFX_GraphStateData* %32) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFGAS_GEGraphics14SaveGraphStateEv(%class.CFGAS_GEGraphics*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::unique_ptr.12", align 8
  %3 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 0, i32 0
  %4 = load %class.CFX_RenderDevice*, %class.CFX_RenderDevice** %3, align 8
  tail call void @_ZN16CFX_RenderDevice9SaveStateEv(%class.CFX_RenderDevice* %4) #14
  %5 = bitcast %"class.std::__1::unique_ptr.12"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = tail call i8* @_Znwm(i64 120) #15
  %7 = bitcast i8* %6 to %class.CFX_GraphStateData*
  %8 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 1, i32 0
  tail call void @_ZN18CFX_GraphStateDataC1ERKS_(%class.CFX_GraphStateData* nonnull %7, %class.CFX_GraphStateData* dereferenceable(40) %8) #14
  %9 = getelementptr inbounds i8, i8* %6, i64 40
  %10 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 1, i32 1
  %11 = bitcast %class.CFX_Matrix* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %11, i64 24, i1 false) #14
  %12 = getelementptr inbounds i8, i8* %6, i64 64
  %13 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 1, i32 2
  %14 = load i8, i8* %13, align 8, !range !2
  store i8 %14, i8* %12, align 8
  %15 = getelementptr inbounds i8, i8* %6, i64 72
  %16 = bitcast i8* %15 to %class.CFGAS_GEColor*
  %17 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 1, i32 3
  tail call void @_ZN13CFGAS_GEColorC1ERKS_(%class.CFGAS_GEColor* %16, %class.CFGAS_GEColor* dereferenceable(24) %17) #14
  %18 = getelementptr inbounds i8, i8* %6, i64 96
  %19 = bitcast i8* %18 to %class.CFGAS_GEColor*
  %20 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 1, i32 4
  tail call void @_ZN13CFGAS_GEColorC1ERKS_(%class.CFGAS_GEColor* %19, %class.CFGAS_GEColor* dereferenceable(24) %20) #14
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.12"* %2, i64 0, i32 0, i32 0, i32 0
  %22 = bitcast %"class.std::__1::unique_ptr.12"* %2 to i8**
  store i8* %6, i8** %22, align 8
  %23 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 2, i32 0, i32 1
  %24 = load %"class.std::__1::unique_ptr.12"*, %"class.std::__1::unique_ptr.12"** %23, align 8
  %25 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %26 = load %"class.std::__1::unique_ptr.12"*, %"class.std::__1::unique_ptr.12"** %25, align 8
  %27 = icmp ult %"class.std::__1::unique_ptr.12"* %24, %26
  br i1 %27, label %28, label %34

28:                                               ; preds = %1
  %29 = ptrtoint i8* %6 to i64
  store %"struct.CFGAS_GEGraphics::TInfo"* null, %"struct.CFGAS_GEGraphics::TInfo"** %21, align 8
  %30 = bitcast %"class.std::__1::unique_ptr.12"* %24 to i64*
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.12"* %24, i64 1
  %32 = ptrtoint %"class.std::__1::unique_ptr.12"* %31 to i64
  %33 = bitcast %"class.std::__1::unique_ptr.12"** %23 to i64*
  store i64 %32, i64* %33, align 8
  br label %36

34:                                               ; preds = %1
  %35 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 2
  call void @_ZNSt3__16vectorINS_10unique_ptrIN16CFGAS_GEGraphics5TInfoENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.10"* %35, %"class.std::__1::unique_ptr.12"* nonnull dereferenceable(8) %2) #14
  br label %36

36:                                               ; preds = %28, %34
  %37 = load %"struct.CFGAS_GEGraphics::TInfo"*, %"struct.CFGAS_GEGraphics::TInfo"** %21, align 8
  store %"struct.CFGAS_GEGraphics::TInfo"* null, %"struct.CFGAS_GEGraphics::TInfo"** %21, align 8
  %38 = icmp eq %"struct.CFGAS_GEGraphics::TInfo"* %37, null
  br i1 %38, label %44, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"struct.CFGAS_GEGraphics::TInfo", %"struct.CFGAS_GEGraphics::TInfo"* %37, i64 0, i32 4
  call void @_ZN13CFGAS_GEColorD1Ev(%class.CFGAS_GEColor* %40) #14
  %41 = getelementptr inbounds %"struct.CFGAS_GEGraphics::TInfo", %"struct.CFGAS_GEGraphics::TInfo"* %37, i64 0, i32 3
  call void @_ZN13CFGAS_GEColorD1Ev(%class.CFGAS_GEColor* %41) #14
  %42 = getelementptr inbounds %"struct.CFGAS_GEGraphics::TInfo", %"struct.CFGAS_GEGraphics::TInfo"* %37, i64 0, i32 0
  call void @_ZN18CFX_GraphStateDataD1Ev(%class.CFX_GraphStateData* %42) #14
  %43 = getelementptr inbounds %"struct.CFGAS_GEGraphics::TInfo", %"struct.CFGAS_GEGraphics::TInfo"* %37, i64 0, i32 0, i32 0
  call void @_ZdlPv(i8* %43) #15
  br label %44

44:                                               ; preds = %36, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  ret void
}

declare void @_ZN16CFX_RenderDevice9SaveStateEv(%class.CFX_RenderDevice*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFGAS_GEGraphics17RestoreGraphStateEv(%class.CFGAS_GEGraphics*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 0, i32 0
  %3 = load %class.CFX_RenderDevice*, %class.CFX_RenderDevice** %2, align 8
  tail call void @_ZN16CFX_RenderDevice12RestoreStateEb(%class.CFX_RenderDevice* %3, i1 zeroext false) #14
  %4 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr.12"*, %"class.std::__1::unique_ptr.12"** %4, align 8
  %6 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 2, i32 0, i32 1
  %7 = load %"class.std::__1::unique_ptr.12"*, %"class.std::__1::unique_ptr.12"** %6, align 8
  %8 = icmp eq %"class.std::__1::unique_ptr.12"* %5, %7
  br i1 %8, label %39, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.12"* %7, i64 -1, i32 0, i32 0, i32 0
  %11 = load %"struct.CFGAS_GEGraphics::TInfo"*, %"struct.CFGAS_GEGraphics::TInfo"** %10, align 8
  %12 = getelementptr inbounds %"struct.CFGAS_GEGraphics::TInfo", %"struct.CFGAS_GEGraphics::TInfo"* %11, i64 0, i32 0
  %13 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 1, i32 0
  %14 = tail call dereferenceable(40) %class.CFX_GraphStateData* @_ZN18CFX_GraphStateDataaSERKS_(%class.CFX_GraphStateData* %13, %class.CFX_GraphStateData* dereferenceable(40) %12) #14
  %15 = getelementptr inbounds %"struct.CFGAS_GEGraphics::TInfo", %"struct.CFGAS_GEGraphics::TInfo"* %11, i64 0, i32 1
  %16 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 1, i32 1
  %17 = bitcast %class.CFX_Matrix* %16 to i8*
  %18 = bitcast %class.CFX_Matrix* %15 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 4 %18, i64 24, i1 false) #14
  %19 = getelementptr inbounds %"struct.CFGAS_GEGraphics::TInfo", %"struct.CFGAS_GEGraphics::TInfo"* %11, i64 0, i32 2
  %20 = load i8, i8* %19, align 8, !range !2
  %21 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 1, i32 2
  store i8 %20, i8* %21, align 8
  %22 = getelementptr inbounds %"struct.CFGAS_GEGraphics::TInfo", %"struct.CFGAS_GEGraphics::TInfo"* %11, i64 0, i32 3
  %23 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 1, i32 3
  %24 = tail call dereferenceable(24) %class.CFGAS_GEColor* @_ZN13CFGAS_GEColoraSERKS_(%class.CFGAS_GEColor* %23, %class.CFGAS_GEColor* dereferenceable(24) %22) #14
  %25 = getelementptr inbounds %"struct.CFGAS_GEGraphics::TInfo", %"struct.CFGAS_GEGraphics::TInfo"* %11, i64 0, i32 4
  %26 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 1, i32 4
  %27 = tail call dereferenceable(24) %class.CFGAS_GEColor* @_ZN13CFGAS_GEColoraSERKS_(%class.CFGAS_GEColor* %26, %class.CFGAS_GEColor* dereferenceable(24) %25) #14
  %28 = load %"class.std::__1::unique_ptr.12"*, %"class.std::__1::unique_ptr.12"** %6, align 8
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.12"* %28, i64 -1
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.12"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = load %"struct.CFGAS_GEGraphics::TInfo"*, %"struct.CFGAS_GEGraphics::TInfo"** %30, align 8
  store %"struct.CFGAS_GEGraphics::TInfo"* null, %"struct.CFGAS_GEGraphics::TInfo"** %30, align 8
  %32 = icmp eq %"struct.CFGAS_GEGraphics::TInfo"* %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %9
  %34 = getelementptr inbounds %"struct.CFGAS_GEGraphics::TInfo", %"struct.CFGAS_GEGraphics::TInfo"* %31, i64 0, i32 4
  tail call void @_ZN13CFGAS_GEColorD1Ev(%class.CFGAS_GEColor* %34) #14
  %35 = getelementptr inbounds %"struct.CFGAS_GEGraphics::TInfo", %"struct.CFGAS_GEGraphics::TInfo"* %31, i64 0, i32 3
  tail call void @_ZN13CFGAS_GEColorD1Ev(%class.CFGAS_GEColor* %35) #14
  %36 = getelementptr inbounds %"struct.CFGAS_GEGraphics::TInfo", %"struct.CFGAS_GEGraphics::TInfo"* %31, i64 0, i32 0
  tail call void @_ZN18CFX_GraphStateDataD1Ev(%class.CFX_GraphStateData* %36) #14
  %37 = getelementptr inbounds %"struct.CFGAS_GEGraphics::TInfo", %"struct.CFGAS_GEGraphics::TInfo"* %31, i64 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* %37) #15
  br label %38

38:                                               ; preds = %9, %33
  store %"class.std::__1::unique_ptr.12"* %29, %"class.std::__1::unique_ptr.12"** %6, align 8
  br label %39

39:                                               ; preds = %1, %38
  ret void
}

declare void @_ZN16CFX_RenderDevice12RestoreStateEb(%class.CFX_RenderDevice*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(120) %"struct.CFGAS_GEGraphics::TInfo"* @_ZN16CFGAS_GEGraphics5TInfoaSERKS0_(%"struct.CFGAS_GEGraphics::TInfo"* returned, %"struct.CFGAS_GEGraphics::TInfo"* dereferenceable(120)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.CFGAS_GEGraphics::TInfo", %"struct.CFGAS_GEGraphics::TInfo"* %1, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.CFGAS_GEGraphics::TInfo", %"struct.CFGAS_GEGraphics::TInfo"* %0, i64 0, i32 0
  %5 = tail call dereferenceable(40) %class.CFX_GraphStateData* @_ZN18CFX_GraphStateDataaSERKS_(%class.CFX_GraphStateData* %4, %class.CFX_GraphStateData* dereferenceable(40) %3) #14
  %6 = getelementptr inbounds %"struct.CFGAS_GEGraphics::TInfo", %"struct.CFGAS_GEGraphics::TInfo"* %1, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.CFGAS_GEGraphics::TInfo", %"struct.CFGAS_GEGraphics::TInfo"* %0, i64 0, i32 1
  %8 = bitcast %class.CFX_Matrix* %7 to i8*
  %9 = bitcast %class.CFX_Matrix* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 4 %9, i64 24, i1 false)
  %10 = getelementptr inbounds %"struct.CFGAS_GEGraphics::TInfo", %"struct.CFGAS_GEGraphics::TInfo"* %1, i64 0, i32 2
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = getelementptr inbounds %"struct.CFGAS_GEGraphics::TInfo", %"struct.CFGAS_GEGraphics::TInfo"* %0, i64 0, i32 2
  store i8 %11, i8* %12, align 8
  %13 = getelementptr inbounds %"struct.CFGAS_GEGraphics::TInfo", %"struct.CFGAS_GEGraphics::TInfo"* %1, i64 0, i32 3
  %14 = getelementptr inbounds %"struct.CFGAS_GEGraphics::TInfo", %"struct.CFGAS_GEGraphics::TInfo"* %0, i64 0, i32 3
  %15 = tail call dereferenceable(24) %class.CFGAS_GEColor* @_ZN13CFGAS_GEColoraSERKS_(%class.CFGAS_GEColor* %14, %class.CFGAS_GEColor* dereferenceable(24) %13) #14
  %16 = getelementptr inbounds %"struct.CFGAS_GEGraphics::TInfo", %"struct.CFGAS_GEGraphics::TInfo"* %1, i64 0, i32 4
  %17 = getelementptr inbounds %"struct.CFGAS_GEGraphics::TInfo", %"struct.CFGAS_GEGraphics::TInfo"* %0, i64 0, i32 4
  %18 = tail call dereferenceable(24) %class.CFGAS_GEColor* @_ZN13CFGAS_GEColoraSERKS_(%class.CFGAS_GEColor* %17, %class.CFGAS_GEColor* dereferenceable(24) %16) #14
  ret %"struct.CFGAS_GEGraphics::TInfo"* %0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN16CFGAS_GEGraphics10SetLineCapEN18CFX_GraphStateData7LineCapE(%class.CFGAS_GEGraphics* nocapture, i8 zeroext) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 1, i32 0, i32 0
  store i8 %1, i8* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFGAS_GEGraphics11SetLineDashEfN6pdfium4spanIKfEE(%class.CFGAS_GEGraphics*, float, %"class.pdfium::span"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 1, i32 2
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 1, i32 0, i32 4
  %9 = load float, float* %8, align 4
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi float [ %9, %7 ], [ 1.000000e+00, %3 ]
  %12 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 1, i32 0, i32 2
  store float %1, float* %12, align 4
  %13 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 1, i32 0, i32 5
  %14 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %2, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 1, i32 0, i32 5, i32 0, i32 1
  %17 = bitcast float** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.std::__1::vector"* %13 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %18, %20
  %22 = ashr exact i64 %21, 2
  %23 = icmp ugt i64 %15, %22
  %24 = inttoptr i64 %20 to float*
  br i1 %23, label %25, label %27

25:                                               ; preds = %10
  %26 = sub i64 %15, %22
  tail call void @_ZNSt3__16vectorIfNS_9allocatorIfEEE8__appendEm(%"class.std::__1::vector"* %13, i64 %26) #14
  br label %31

27:                                               ; preds = %10
  %28 = icmp ult i64 %15, %22
  br i1 %28, label %29, label %31

29:                                               ; preds = %27
  %30 = getelementptr inbounds float, float* %24, i64 %15
  store float* %30, float** %16, align 8
  br label %31

31:                                               ; preds = %25, %27, %29
  %32 = load i64, i64* %14, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %2, i64 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %13, i64 0, i32 0, i32 0
  br label %38

37:                                               ; preds = %38, %31
  ret void

38:                                               ; preds = %34, %38
  %39 = phi i64 [ 0, %34 ], [ %46, %38 ]
  %40 = load float*, float** %35, align 8
  %41 = getelementptr inbounds float, float* %40, i64 %39
  %42 = load float, float* %41, align 4
  %43 = fmul float %11, %42
  %44 = load float*, float** %36, align 8
  %45 = getelementptr inbounds float, float* %44, i64 %39
  store float %43, float* %45, align 4
  %46 = add nuw i64 %39, 1
  %47 = load i64, i64* %14, align 8
  %48 = icmp ult i64 %46, %47
  br i1 %48, label %38, label %37
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN16CFGAS_GEGraphics16SetSolidLineDashEv(%class.CFGAS_GEGraphics* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 1, i32 0, i32 5
  %3 = bitcast %"class.std::__1::vector"* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 1, i32 0, i32 5, i32 0, i32 1
  %6 = bitcast float** %5 to i64*
  store i64 %4, i64* %6, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN16CFGAS_GEGraphics12SetLineWidthEf(%class.CFGAS_GEGraphics* nocapture, float) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 1, i32 0, i32 4
  store float %1, float* %3, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN16CFGAS_GEGraphics15EnableActOnDashEv(%class.CFGAS_GEGraphics* nocapture) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 1, i32 2
  store i8 1, i8* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFGAS_GEGraphics14SetStrokeColorERK13CFGAS_GEColor(%class.CFGAS_GEGraphics*, %class.CFGAS_GEColor* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 1, i32 3
  %4 = tail call dereferenceable(24) %class.CFGAS_GEColor* @_ZN13CFGAS_GEColoraSERKS_(%class.CFGAS_GEColor* %3, %class.CFGAS_GEColor* dereferenceable(24) %1) #14
  ret void
}

declare dereferenceable(24) %class.CFGAS_GEColor* @_ZN13CFGAS_GEColoraSERKS_(%class.CFGAS_GEColor*, %class.CFGAS_GEColor* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFGAS_GEGraphics12SetFillColorERK13CFGAS_GEColor(%class.CFGAS_GEGraphics*, %class.CFGAS_GEColor* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 1, i32 4
  %4 = tail call dereferenceable(24) %class.CFGAS_GEColor* @_ZN13CFGAS_GEColoraSERKS_(%class.CFGAS_GEColor* %3, %class.CFGAS_GEColor* dereferenceable(24) %1) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFGAS_GEGraphics10StrokePathERK12CFGAS_GEPathRK10CFX_Matrix(%class.CFGAS_GEGraphics*, %class.CFGAS_GEPath* dereferenceable(24), %class.CFX_Matrix* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN16CFGAS_GEGraphics22RenderDeviceStrokePathERK12CFGAS_GEPathRK10CFX_Matrix(%class.CFGAS_GEGraphics* %0, %class.CFGAS_GEPath* dereferenceable(24) %1, %class.CFX_Matrix* dereferenceable(24) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFGAS_GEGraphics22RenderDeviceStrokePathERK12CFGAS_GEPathRK10CFX_Matrix(%class.CFGAS_GEGraphics*, %class.CFGAS_GEPath* dereferenceable(24), %class.CFX_Matrix* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.CFX_Matrix, align 16
  %5 = alloca %struct.CFX_FillRenderOptions, align 1
  %6 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 1, i32 3, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %75

9:                                                ; preds = %3
  %10 = bitcast %class.CFX_Matrix* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #14
  %11 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %4, i64 0, i32 0
  %12 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %4, i64 0, i32 1
  %13 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %4, i64 0, i32 2
  %14 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %4, i64 0, i32 3
  %15 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %4, i64 0, i32 4
  %16 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %4, i64 0, i32 5
  %17 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 1, i32 1
  %18 = bitcast %class.CFX_Matrix* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %10, i8* align 8 %18, i64 24, i1 false)
  %19 = load float, float* %11, align 16, !noalias !3
  %20 = load float, float* %12, align 4, !noalias !3
  %21 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %2, i64 0, i32 2
  %22 = bitcast %class.CFX_Matrix* %2 to <2 x float>*
  %23 = load <2 x float>, <2 x float>* %22, align 4, !noalias !3
  %24 = shufflevector <2 x float> %23, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %25 = bitcast float* %21 to <2 x float>*
  %26 = load <2 x float>, <2 x float>* %25, align 4, !noalias !3
  %27 = shufflevector <2 x float> %26, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %28 = load float, float* %13, align 8, !noalias !3
  %29 = load float, float* %14, align 4, !noalias !3
  %30 = insertelement <4 x float> undef, float %19, i32 0
  %31 = shufflevector <4 x float> %30, <4 x float> undef, <4 x i32> <i32 0, i32 0, i32 undef, i32 undef>
  %32 = extractelement <2 x float> %23, i32 0
  %33 = extractelement <2 x float> %23, i32 1
  %34 = shufflevector <4 x float> %31, <4 x float> %24, <4 x i32> <i32 0, i32 1, i32 4, i32 5>
  %35 = insertelement <4 x float> undef, float %32, i32 0
  %36 = insertelement <4 x float> %35, float %33, i32 1
  %37 = insertelement <4 x float> %36, float %28, i32 2
  %38 = insertelement <4 x float> %37, float %28, i32 3
  %39 = fmul <4 x float> %34, %38
  %40 = insertelement <4 x float> undef, float %20, i32 0
  %41 = shufflevector <4 x float> %40, <4 x float> undef, <4 x i32> <i32 0, i32 0, i32 undef, i32 undef>
  %42 = extractelement <2 x float> %26, i32 0
  %43 = extractelement <2 x float> %26, i32 1
  %44 = shufflevector <4 x float> %41, <4 x float> %27, <4 x i32> <i32 0, i32 1, i32 4, i32 5>
  %45 = insertelement <4 x float> undef, float %42, i32 0
  %46 = insertelement <4 x float> %45, float %43, i32 1
  %47 = insertelement <4 x float> %46, float %29, i32 2
  %48 = insertelement <4 x float> %47, float %29, i32 3
  %49 = fmul <4 x float> %44, %48
  %50 = fadd <4 x float> %39, %49
  %51 = load float, float* %15, align 16, !noalias !3
  %52 = fmul float %32, %51
  %53 = load float, float* %16, align 4, !noalias !3
  %54 = fmul float %42, %53
  %55 = fadd float %52, %54
  %56 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %2, i64 0, i32 4
  %57 = load float, float* %56, align 4, !noalias !3
  %58 = fadd float %57, %55
  %59 = fmul float %33, %51
  %60 = fmul float %43, %53
  %61 = fadd float %59, %60
  %62 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %2, i64 0, i32 5
  %63 = load float, float* %62, align 4, !noalias !3
  %64 = fadd float %61, %63
  %65 = bitcast %class.CFX_Matrix* %4 to <4 x float>*
  store <4 x float> %50, <4 x float>* %65, align 16
  store float %58, float* %15, align 16
  store float %64, float* %16, align 4
  %66 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 0, i32 0
  %67 = load %class.CFX_RenderDevice*, %class.CFX_RenderDevice** %66, align 8
  %68 = getelementptr inbounds %class.CFGAS_GEPath, %class.CFGAS_GEPath* %1, i64 0, i32 0
  %69 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 1, i32 0
  %70 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 1, i32 3, i32 1
  %71 = load i32, i32* %70, align 4
  %72 = getelementptr inbounds %struct.CFX_FillRenderOptions, %struct.CFX_FillRenderOptions* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %72) #14
  store i8 0, i8* %72, align 1
  %73 = getelementptr inbounds %struct.CFX_FillRenderOptions, %struct.CFX_FillRenderOptions* %5, i64 0, i32 1
  store i8 0, i8* %73, align 1
  %74 = call zeroext i1 @_ZN16CFX_RenderDevice8DrawPathEPK12CFX_PathDataPK10CFX_MatrixPK18CFX_GraphStateDatajjRK21CFX_FillRenderOptions(%class.CFX_RenderDevice* %67, %class.CFX_PathData* %68, %class.CFX_Matrix* nonnull %4, %class.CFX_GraphStateData* %69, i32 0, i32 %71, %struct.CFX_FillRenderOptions* nonnull dereferenceable(2) %5) #14
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %72) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #14
  br label %75

75:                                               ; preds = %3, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFGAS_GEGraphics8FillPathERK12CFGAS_GEPathN21CFX_FillRenderOptions8FillTypeERK10CFX_Matrix(%class.CFGAS_GEGraphics*, %class.CFGAS_GEPath* dereferenceable(24), i8 zeroext, %class.CFX_Matrix* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN16CFGAS_GEGraphics20RenderDeviceFillPathERK12CFGAS_GEPathN21CFX_FillRenderOptions8FillTypeERK10CFX_Matrix(%class.CFGAS_GEGraphics* %0, %class.CFGAS_GEPath* dereferenceable(24) %1, i8 zeroext %2, %class.CFX_Matrix* dereferenceable(24) %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFGAS_GEGraphics20RenderDeviceFillPathERK12CFGAS_GEPathN21CFX_FillRenderOptions8FillTypeERK10CFX_Matrix(%class.CFGAS_GEGraphics*, %class.CFGAS_GEPath* dereferenceable(24), i8 zeroext, %class.CFX_Matrix* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.CFX_Matrix, align 16
  %6 = alloca %struct.CFX_FillRenderOptions, align 1
  %7 = bitcast %class.CFX_Matrix* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #14
  %8 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %5, i64 0, i32 0
  %9 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %5, i64 0, i32 1
  %10 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %5, i64 0, i32 2
  %11 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %5, i64 0, i32 3
  %12 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %5, i64 0, i32 4
  %13 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %5, i64 0, i32 5
  %14 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 1, i32 1
  %15 = bitcast %class.CFX_Matrix* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %7, i8* align 8 %15, i64 24, i1 false)
  %16 = load float, float* %8, align 16, !noalias !6
  %17 = load float, float* %9, align 4, !noalias !6
  %18 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %3, i64 0, i32 2
  %19 = bitcast %class.CFX_Matrix* %3 to <2 x float>*
  %20 = load <2 x float>, <2 x float>* %19, align 4, !noalias !6
  %21 = shufflevector <2 x float> %20, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %22 = bitcast float* %18 to <2 x float>*
  %23 = load <2 x float>, <2 x float>* %22, align 4, !noalias !6
  %24 = shufflevector <2 x float> %23, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %25 = load float, float* %10, align 8, !noalias !6
  %26 = load float, float* %11, align 4, !noalias !6
  %27 = insertelement <4 x float> undef, float %16, i32 0
  %28 = shufflevector <4 x float> %27, <4 x float> undef, <4 x i32> <i32 0, i32 0, i32 undef, i32 undef>
  %29 = extractelement <2 x float> %20, i32 0
  %30 = extractelement <2 x float> %20, i32 1
  %31 = shufflevector <4 x float> %28, <4 x float> %21, <4 x i32> <i32 0, i32 1, i32 4, i32 5>
  %32 = insertelement <4 x float> undef, float %29, i32 0
  %33 = insertelement <4 x float> %32, float %30, i32 1
  %34 = insertelement <4 x float> %33, float %25, i32 2
  %35 = insertelement <4 x float> %34, float %25, i32 3
  %36 = fmul <4 x float> %31, %35
  %37 = insertelement <4 x float> undef, float %17, i32 0
  %38 = shufflevector <4 x float> %37, <4 x float> undef, <4 x i32> <i32 0, i32 0, i32 undef, i32 undef>
  %39 = extractelement <2 x float> %23, i32 0
  %40 = extractelement <2 x float> %23, i32 1
  %41 = shufflevector <4 x float> %38, <4 x float> %24, <4 x i32> <i32 0, i32 1, i32 4, i32 5>
  %42 = insertelement <4 x float> undef, float %39, i32 0
  %43 = insertelement <4 x float> %42, float %40, i32 1
  %44 = insertelement <4 x float> %43, float %26, i32 2
  %45 = insertelement <4 x float> %44, float %26, i32 3
  %46 = fmul <4 x float> %41, %45
  %47 = fadd <4 x float> %36, %46
  %48 = load float, float* %12, align 16, !noalias !6
  %49 = fmul float %29, %48
  %50 = load float, float* %13, align 4, !noalias !6
  %51 = fmul float %39, %50
  %52 = fadd float %49, %51
  %53 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %3, i64 0, i32 4
  %54 = load float, float* %53, align 4, !noalias !6
  %55 = fadd float %54, %52
  %56 = fmul float %30, %48
  %57 = fmul float %40, %50
  %58 = fadd float %56, %57
  %59 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %3, i64 0, i32 5
  %60 = load float, float* %59, align 4, !noalias !6
  %61 = fadd float %58, %60
  %62 = bitcast %class.CFX_Matrix* %5 to <4 x float>*
  store <4 x float> %47, <4 x float>* %62, align 16
  store float %55, float* %12, align 16
  store float %61, float* %13, align 4
  %63 = getelementptr inbounds %struct.CFX_FillRenderOptions, %struct.CFX_FillRenderOptions* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %63) #14
  %64 = getelementptr inbounds %struct.CFX_FillRenderOptions, %struct.CFX_FillRenderOptions* %6, i64 0, i32 1
  store i8 %2, i8* %63, align 1
  store i8 0, i8* %64, align 1
  %65 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 1, i32 4, i32 0
  %66 = load i32, i32* %65, align 8
  switch i32 %66, label %77 [
    i32 1, label %67
    i32 2, label %75
    i32 3, label %76
  ]

67:                                               ; preds = %4
  %68 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 0, i32 0
  %69 = load %class.CFX_RenderDevice*, %class.CFX_RenderDevice** %68, align 8
  %70 = getelementptr inbounds %class.CFGAS_GEPath, %class.CFGAS_GEPath* %1, i64 0, i32 0
  %71 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 1, i32 0
  %72 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 1, i32 4, i32 1
  %73 = load i32, i32* %72, align 4
  %74 = call zeroext i1 @_ZN16CFX_RenderDevice8DrawPathEPK12CFX_PathDataPK10CFX_MatrixPK18CFX_GraphStateDatajjRK21CFX_FillRenderOptions(%class.CFX_RenderDevice* %69, %class.CFX_PathData* %70, %class.CFX_Matrix* nonnull %5, %class.CFX_GraphStateData* %71, i32 %73, i32 0, %struct.CFX_FillRenderOptions* nonnull dereferenceable(2) %6) #14
  br label %77

75:                                               ; preds = %4
  call void @_ZN16CFGAS_GEGraphics19FillPathWithPatternERK12CFGAS_GEPathRK21CFX_FillRenderOptionsRK10CFX_Matrix(%class.CFGAS_GEGraphics* %0, %class.CFGAS_GEPath* dereferenceable(24) %1, %struct.CFX_FillRenderOptions* nonnull dereferenceable(2) %6, %class.CFX_Matrix* nonnull dereferenceable(24) %5)
  br label %77

76:                                               ; preds = %4
  call void @_ZN16CFGAS_GEGraphics19FillPathWithShadingERK12CFGAS_GEPathRK21CFX_FillRenderOptionsRK10CFX_Matrix(%class.CFGAS_GEGraphics* %0, %class.CFGAS_GEPath* dereferenceable(24) %1, %struct.CFX_FillRenderOptions* nonnull dereferenceable(2) %6, %class.CFX_Matrix* nonnull dereferenceable(24) %5)
  br label %77

77:                                               ; preds = %4, %76, %75, %67
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %63) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #14
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN16CFGAS_GEGraphics12ConcatMatrixERK10CFX_Matrix(%class.CFGAS_GEGraphics* nocapture, %class.CFX_Matrix* nocapture readonly dereferenceable(24)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 1, i32 1, i32 0
  %4 = load float, float* %3, align 4, !noalias !9
  %5 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 1, i32 1, i32 1
  %6 = load float, float* %5, align 4, !noalias !9
  %7 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %1, i64 0, i32 2
  %8 = bitcast %class.CFX_Matrix* %1 to <2 x float>*
  %9 = load <2 x float>, <2 x float>* %8, align 4, !noalias !9
  %10 = shufflevector <2 x float> %9, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %11 = bitcast float* %7 to <2 x float>*
  %12 = load <2 x float>, <2 x float>* %11, align 4, !noalias !9
  %13 = shufflevector <2 x float> %12, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %14 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 1, i32 1, i32 2
  %15 = load float, float* %14, align 4, !noalias !9
  %16 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 1, i32 1, i32 3
  %17 = load float, float* %16, align 4, !noalias !9
  %18 = insertelement <4 x float> undef, float %4, i32 0
  %19 = shufflevector <4 x float> %18, <4 x float> undef, <4 x i32> <i32 0, i32 0, i32 undef, i32 undef>
  %20 = extractelement <2 x float> %9, i32 0
  %21 = extractelement <2 x float> %9, i32 1
  %22 = shufflevector <4 x float> %19, <4 x float> %10, <4 x i32> <i32 0, i32 1, i32 4, i32 5>
  %23 = insertelement <4 x float> undef, float %20, i32 0
  %24 = insertelement <4 x float> %23, float %21, i32 1
  %25 = insertelement <4 x float> %24, float %15, i32 2
  %26 = insertelement <4 x float> %25, float %15, i32 3
  %27 = fmul <4 x float> %22, %26
  %28 = insertelement <4 x float> undef, float %6, i32 0
  %29 = shufflevector <4 x float> %28, <4 x float> undef, <4 x i32> <i32 0, i32 0, i32 undef, i32 undef>
  %30 = extractelement <2 x float> %12, i32 0
  %31 = extractelement <2 x float> %12, i32 1
  %32 = shufflevector <4 x float> %29, <4 x float> %13, <4 x i32> <i32 0, i32 1, i32 4, i32 5>
  %33 = insertelement <4 x float> undef, float %30, i32 0
  %34 = insertelement <4 x float> %33, float %31, i32 1
  %35 = insertelement <4 x float> %34, float %17, i32 2
  %36 = insertelement <4 x float> %35, float %17, i32 3
  %37 = fmul <4 x float> %32, %36
  %38 = fadd <4 x float> %27, %37
  %39 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 1, i32 1, i32 4
  %40 = load float, float* %39, align 4, !noalias !9
  %41 = fmul float %20, %40
  %42 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 1, i32 1, i32 5
  %43 = load float, float* %42, align 4, !noalias !9
  %44 = fmul float %30, %43
  %45 = fadd float %41, %44
  %46 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %1, i64 0, i32 4
  %47 = load float, float* %46, align 4, !noalias !9
  %48 = fadd float %47, %45
  %49 = fmul float %21, %40
  %50 = fmul float %31, %43
  %51 = fadd float %49, %50
  %52 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %1, i64 0, i32 5
  %53 = load float, float* %52, align 4, !noalias !9
  %54 = fadd float %51, %53
  %55 = bitcast float* %3 to <4 x float>*
  store <4 x float> %38, <4 x float>* %55, align 4
  store float %48, float* %39, align 4
  store float %54, float* %42, align 4
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %class.CFX_Matrix* @_ZNK16CFGAS_GEGraphics9GetMatrixEv(%class.CFGAS_GEGraphics* readnone) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 1, i32 1
  ret %class.CFX_Matrix* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK16CFGAS_GEGraphics11GetClipRectEv(%class.CFGAS_GEGraphics* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 0, i32 0
  %3 = load %class.CFX_RenderDevice*, %class.CFX_RenderDevice** %2, align 8
  %4 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %3, i64 0, i32 7, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %3, i64 0, i32 7, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %3, i64 0, i32 7, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %3, i64 0, i32 7, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = sitofp i32 %5 to float
  %13 = sitofp i32 %7 to float
  %14 = sub nsw i32 %9, %5
  %15 = sitofp i32 %14 to float
  %16 = sub nsw i32 %11, %7
  %17 = sitofp i32 %16 to float
  %18 = insertelement <2 x float> undef, float %12, i32 0
  %19 = insertelement <2 x float> %18, float %13, i32 1
  %20 = insertelement <2 x float> undef, float %15, i32 0
  %21 = insertelement <2 x float> %20, float %17, i32 1
  %22 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %19, 0
  %23 = insertvalue { <2 x float>, <2 x float> } %22, <2 x float> %21, 1
  ret { <2 x float>, <2 x float> } %23
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFGAS_GEGraphics11SetClipRectERK9CFX_RectF(%class.CFGAS_GEGraphics* nocapture readonly, %class.CFX_RectF* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %struct.FX_RECT, align 4
  %4 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 0, i32 0
  %5 = load %class.CFX_RenderDevice*, %class.CFX_RenderDevice** %4, align 8
  %6 = bitcast %struct.FX_RECT* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #14
  %7 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %1, i64 0, i32 0
  %8 = load float, float* %7, align 4
  %9 = tail call i32 @FXSYS_roundf(float %8) #14
  %10 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %1, i64 0, i32 1
  %11 = load float, float* %10, align 4
  %12 = tail call i32 @FXSYS_roundf(float %11) #14
  %13 = load float, float* %7, align 4
  %14 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %1, i64 0, i32 2
  %15 = load float, float* %14, align 4
  %16 = fadd float %13, %15
  %17 = tail call i32 @FXSYS_roundf(float %16) #14
  %18 = load float, float* %10, align 4
  %19 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %1, i64 0, i32 3
  %20 = load float, float* %19, align 4
  %21 = fadd float %18, %20
  %22 = tail call i32 @FXSYS_roundf(float %21) #14
  %23 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %3, i64 0, i32 0
  store i32 %9, i32* %23, align 4
  %24 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %3, i64 0, i32 1
  store i32 %12, i32* %24, align 4
  %25 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %3, i64 0, i32 2
  store i32 %17, i32* %25, align 4
  %26 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %3, i64 0, i32 3
  store i32 %22, i32* %26, align 4
  %27 = call zeroext i1 @_ZN16CFX_RenderDevice12SetClip_RectERK7FX_RECT(%class.CFX_RenderDevice* %5, %struct.FX_RECT* nonnull dereferenceable(16) %3) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #14
  ret void
}

declare zeroext i1 @_ZN16CFX_RenderDevice12SetClip_RectERK7FX_RECT(%class.CFX_RenderDevice*, %struct.FX_RECT* dereferenceable(16)) local_unnamed_addr #1

declare i32 @FXSYS_roundf(float) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %class.CFX_RenderDevice* @_ZN16CFGAS_GEGraphics15GetRenderDeviceEv(%class.CFGAS_GEGraphics* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 0, i32 0
  %3 = load %class.CFX_RenderDevice*, %class.CFX_RenderDevice** %2, align 8
  ret %class.CFX_RenderDevice* %3
}

declare zeroext i1 @_ZN16CFX_RenderDevice8DrawPathEPK12CFX_PathDataPK10CFX_MatrixPK18CFX_GraphStateDatajjRK21CFX_FillRenderOptions(%class.CFX_RenderDevice*, %class.CFX_PathData*, %class.CFX_Matrix*, %class.CFX_GraphStateData*, i32, i32, %struct.CFX_FillRenderOptions* dereferenceable(2)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFGAS_GEGraphics19FillPathWithPatternERK12CFGAS_GEPathRK21CFX_FillRenderOptionsRK10CFX_Matrix(%class.CFGAS_GEGraphics* nocapture readonly, %class.CFGAS_GEPath* dereferenceable(24), %struct.CFX_FillRenderOptions* dereferenceable(2), %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.fxcrt::RetainPtr", align 8
  %6 = alloca %"class.fxcrt::RetainPtr", align 8
  %7 = alloca { <2 x float>, <2 x float> }, align 8
  %8 = bitcast { <2 x float>, <2 x float> }* %7 to %class.CFX_FloatRect*
  %9 = alloca { <2 x float>, <2 x float> }, align 8
  %10 = bitcast { <2 x float>, <2 x float> }* %9 to %class.CFX_FloatRect*
  %11 = alloca { i64, i64 }, align 8
  %12 = bitcast { i64, i64 }* %11 to %struct.FX_RECT*
  %13 = alloca %class.CFX_DefaultRenderDevice, align 8
  %14 = alloca %"class.fxcrt::RetainPtr", align 8
  %15 = alloca %"class.fxcrt::RetainPtr.41", align 8
  %16 = alloca %"class.CFX_RenderDevice::StateRestorer", align 8
  %17 = alloca %"class.fxcrt::RetainPtr.41", align 8
  %18 = alloca %class.CFX_Matrix, align 16
  %19 = bitcast %"class.fxcrt::RetainPtr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #14
  %20 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_DIBitmap* inttoptr (i64 -6148914691236517206 to %class.CFX_DIBitmap*), %class.CFX_DIBitmap** %20, align 8
  %21 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 0, i32 0
  %22 = load %class.CFX_RenderDevice*, %class.CFX_RenderDevice** %21, align 8
  call void @_ZNK16CFX_RenderDevice9GetBitmapEv(%"class.fxcrt::RetainPtr"* nonnull sret %5, %class.CFX_RenderDevice* %22) #14
  %23 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %20, align 8
  %24 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %23, i64 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %23, i64 0, i32 0, i32 3
  %27 = load i32, i32* %26, align 8
  %28 = bitcast %"class.fxcrt::RetainPtr"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #14
  %29 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %30 = call i8* @_Znwm(i64 80) #15, !noalias !12
  %31 = bitcast i8* %30 to %class.CFX_DIBitmap*
  call void @_ZN12CFX_DIBitmapC1Ev(%class.CFX_DIBitmap* nonnull %31) #14, !noalias !12
  %32 = ptrtoint i8* %30 to i64
  %33 = bitcast %"class.fxcrt::RetainPtr"* %6 to i64*
  store i64 %32, i64* %33, align 8, !alias.scope !12
  %34 = getelementptr inbounds i8, i8* %30, i64 8
  %35 = bitcast i8* %34 to i64*
  %36 = load i64, i64* %35, align 8, !noalias !12
  %37 = add nsw i64 %36, 1
  store i64 %37, i64* %35, align 8, !noalias !12
  %38 = call zeroext i1 @_ZN12CFX_DIBitmap6CreateEii12FXDIB_Format(%class.CFX_DIBitmap* nonnull %31, i32 %25, i32 %27, i16 zeroext 544) #14
  %39 = load %class.CFX_RenderDevice*, %class.CFX_RenderDevice** %21, align 8
  %40 = call zeroext i1 @_ZN16CFX_RenderDevice9GetDIBitsERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEii(%class.CFX_RenderDevice* %39, %"class.fxcrt::RetainPtr"* nonnull dereferenceable(8) %6, i32 0, i32 0) #14
  %41 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 1, i32 4, i32 2, i32 0
  %42 = load %class.CFGAS_GEPattern*, %class.CFGAS_GEPattern** %41, align 8
  %43 = getelementptr inbounds %class.CFGAS_GEPattern, %class.CFGAS_GEPattern* %42, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = sext i32 %44 to i64
  %46 = icmp ult i32 %44, 6
  %47 = getelementptr inbounds [6 x %"struct.(anonymous namespace)::FX_HATCHDATA"], [6 x %"struct.(anonymous namespace)::FX_HATCHDATA"]* bitcast (<{ { i32, i32, <{ [34 x i8], [30 x i8] }> }, %"struct.(anonymous namespace)::FX_HATCHDATA", %"struct.(anonymous namespace)::FX_HATCHDATA", %"struct.(anonymous namespace)::FX_HATCHDATA", %"struct.(anonymous namespace)::FX_HATCHDATA", %"struct.(anonymous namespace)::FX_HATCHDATA" }>* @_ZN12_GLOBAL__N_116kHatchBitmapDataE to [6 x %"struct.(anonymous namespace)::FX_HATCHDATA"]*), i64 0, i64 %45
  %48 = select i1 %46, %"struct.(anonymous namespace)::FX_HATCHDATA"* %47, %"struct.(anonymous namespace)::FX_HATCHDATA"* @_ZN12_GLOBAL__N_117kHatchPlaceHolderE
  %49 = call i8* @_Znwm(i64 80) #15, !noalias !15
  %50 = bitcast i8* %49 to %class.CFX_DIBitmap*
  call void @_ZN12CFX_DIBitmapC1Ev(%class.CFX_DIBitmap* nonnull %50) #14, !noalias !15
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds i8, i8* %49, i64 8
  %53 = bitcast i8* %52 to i64*
  %54 = load i64, i64* %53, align 8, !noalias !15
  %55 = add nsw i64 %54, 1
  store i64 %55, i64* %53, align 8, !noalias !15
  %56 = getelementptr inbounds %"struct.(anonymous namespace)::FX_HATCHDATA", %"struct.(anonymous namespace)::FX_HATCHDATA"* %48, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %"struct.(anonymous namespace)::FX_HATCHDATA", %"struct.(anonymous namespace)::FX_HATCHDATA"* %48, i64 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = call zeroext i1 @_ZN12CFX_DIBitmap6CreateEii12FXDIB_Format(%class.CFX_DIBitmap* nonnull %50, i32 %57, i32 %59, i16 zeroext 257) #14
  %61 = bitcast i8* %49 to i8* (%class.CFX_DIBitmap*)***
  %62 = load i8* (%class.CFX_DIBitmap*)**, i8* (%class.CFX_DIBitmap*)*** %61, align 8
  %63 = getelementptr inbounds i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %62, i64 2
  %64 = load i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %63, align 8
  %65 = call i8* %64(%class.CFX_DIBitmap* nonnull %50) #14
  %66 = getelementptr inbounds %"struct.(anonymous namespace)::FX_HATCHDATA", %"struct.(anonymous namespace)::FX_HATCHDATA"* %48, i64 0, i32 2, i64 0
  %67 = getelementptr inbounds i8, i8* %49, i64 28
  %68 = bitcast i8* %67 to i32*
  %69 = load i32, i32* %68, align 4
  %70 = mul i32 %69, %59
  %71 = zext i32 %70 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %65, i8* align 4 %66, i64 %71, i1 false)
  %72 = bitcast { <2 x float>, <2 x float> }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %72) #14
  %73 = bitcast { <2 x float>, <2 x float> }* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %73) #14
  %74 = getelementptr inbounds %class.CFGAS_GEPath, %class.CFGAS_GEPath* %1, i64 0, i32 0
  %75 = call { <2 x float>, <2 x float> } @_ZNK12CFX_PathData14GetBoundingBoxEv(%class.CFX_PathData* %74) #14
  %76 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 0
  %77 = extractvalue { <2 x float>, <2 x float> } %75, 0
  store <2 x float> %77, <2 x float>* %76, align 8
  %78 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 1
  %79 = extractvalue { <2 x float>, <2 x float> } %75, 1
  store <2 x float> %79, <2 x float>* %78, align 8
  %80 = call { <2 x float>, <2 x float> } @_ZNK10CFX_Matrix13TransformRectERK13CFX_FloatRect(%class.CFX_Matrix* %3, %class.CFX_FloatRect* nonnull dereferenceable(16) %10) #14
  %81 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 0
  %82 = extractvalue { <2 x float>, <2 x float> } %80, 0
  store <2 x float> %82, <2 x float>* %81, align 8
  %83 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 1
  %84 = extractvalue { <2 x float>, <2 x float> } %80, 1
  store <2 x float> %84, <2 x float>* %83, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %73) #14
  %85 = bitcast { i64, i64 }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %85) #14
  %86 = bitcast { i64, i64 }* %11 to i32*
  %87 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %12, i64 0, i32 1
  %88 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i64 0, i32 1
  %89 = bitcast i64* %88 to i32*
  %90 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %12, i64 0, i32 3
  %91 = call { i64, i64 } @_ZNK13CFX_FloatRect15ToRoundedFxRectEv(%class.CFX_FloatRect* nonnull %8) #14
  %92 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i64 0, i32 0
  %93 = extractvalue { i64, i64 } %91, 0
  store i64 %93, i64* %92, align 8
  %94 = extractvalue { i64, i64 } %91, 1
  store i64 %94, i64* %88, align 8
  %95 = bitcast %class.CFX_DefaultRenderDevice* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %95) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %95, i8 -86, i64 64, i1 false)
  call void @_ZN23CFX_DefaultRenderDeviceC1Ev(%class.CFX_DefaultRenderDevice* nonnull %13) #14
  %96 = bitcast %"class.fxcrt::RetainPtr"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %96) #14
  %97 = bitcast %"class.fxcrt::RetainPtr"* %14 to i64*
  store i64 0, i64* %97, align 8
  %98 = call zeroext i1 @_ZN23CFX_DefaultRenderDevice6AttachERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEbS5_b(%class.CFX_DefaultRenderDevice* nonnull %13, %"class.fxcrt::RetainPtr"* nonnull dereferenceable(8) %6, i1 zeroext false, %"class.fxcrt::RetainPtr"* nonnull dereferenceable(8) %14, i1 zeroext false) #14
  %99 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %100 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %99, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %99, align 8
  %101 = icmp eq %class.CFX_DIBitmap* %100, null
  br i1 %101, label %113, label %102

102:                                              ; preds = %4
  %103 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %100, i64 0, i32 0, i32 0, i32 1
  %104 = load i64, i64* %103, align 8
  %105 = add nsw i64 %104, -1
  store i64 %105, i64* %103, align 8
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %107, label %113

107:                                              ; preds = %102
  %108 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %100, i64 0, i32 0, i32 0
  %109 = bitcast %class.CFX_DIBitmap* %100 to void (%"class.fxcrt::Retainable"*)***
  %110 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %109, align 8
  %111 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %110, i64 1
  %112 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %111, align 8
  call void %112(%"class.fxcrt::Retainable"* nonnull %108) #14
  br label %113

113:                                              ; preds = %4, %102, %107
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %96) #14
  %114 = getelementptr inbounds %class.CFX_DefaultRenderDevice, %class.CFX_DefaultRenderDevice* %13, i64 0, i32 0
  %115 = load %class.CFGAS_GEPattern*, %class.CFGAS_GEPattern** %41, align 8
  %116 = getelementptr inbounds %class.CFGAS_GEPattern, %class.CFGAS_GEPattern* %115, i64 0, i32 2
  %117 = load i32, i32* %116, align 4
  %118 = call zeroext i1 @_ZN16CFX_RenderDevice17FillRectWithBlendERK7FX_RECTj9BlendMode(%class.CFX_RenderDevice* nonnull %114, %struct.FX_RECT* nonnull dereferenceable(16) %12, i32 %117, i32 0) #14
  %119 = load i32, i32* %90, align 4
  %120 = load i32, i32* %87, align 4
  %121 = icmp slt i32 %119, %120
  br i1 %121, label %122, label %131

122:                                              ; preds = %113
  %123 = bitcast %"class.fxcrt::RetainPtr.41"* %15 to i8*
  %124 = bitcast %"class.fxcrt::RetainPtr.41"* %15 to i64*
  %125 = getelementptr inbounds %"class.fxcrt::RetainPtr.41", %"class.fxcrt::RetainPtr.41"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %126 = getelementptr inbounds i8, i8* %49, i64 20
  %127 = bitcast i8* %126 to i32*
  %128 = getelementptr inbounds i8, i8* %49, i64 24
  %129 = bitcast i8* %128 to i32*
  %130 = load i32, i32* %89, align 8
  br label %204

131:                                              ; preds = %212, %113
  %132 = bitcast %"class.CFX_RenderDevice::StateRestorer"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %132) #14
  %133 = getelementptr inbounds %"class.CFX_RenderDevice::StateRestorer", %"class.CFX_RenderDevice::StateRestorer"* %16, i64 0, i32 0, i32 0
  store %class.CFX_RenderDevice* inttoptr (i64 -6148914691236517206 to %class.CFX_RenderDevice*), %class.CFX_RenderDevice** %133, align 8
  %134 = load %class.CFX_RenderDevice*, %class.CFX_RenderDevice** %21, align 8
  call void @_ZN16CFX_RenderDevice13StateRestorerC1EPS_(%"class.CFX_RenderDevice::StateRestorer"* nonnull %16, %class.CFX_RenderDevice* %134) #14
  %135 = load %class.CFX_RenderDevice*, %class.CFX_RenderDevice** %21, align 8
  %136 = call zeroext i1 @_ZN16CFX_RenderDevice16SetClip_PathFillEPK12CFX_PathDataPK10CFX_MatrixRK21CFX_FillRenderOptions(%class.CFX_RenderDevice* %135, %class.CFX_PathData* %74, %class.CFX_Matrix* %3, %struct.CFX_FillRenderOptions* dereferenceable(2) %2) #14
  %137 = bitcast %"class.fxcrt::RetainPtr.41"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %137) #14
  %138 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %29, align 8
  %139 = ptrtoint %class.CFX_DIBitmap* %138 to i64
  %140 = bitcast %"class.fxcrt::RetainPtr.41"* %17 to i64*
  store i64 %139, i64* %140, align 8
  %141 = icmp eq %class.CFX_DIBitmap* %138, null
  br i1 %141, label %146, label %142

142:                                              ; preds = %131
  %143 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %138, i64 0, i32 0, i32 0, i32 1
  %144 = load i64, i64* %143, align 8
  %145 = add nsw i64 %144, 1
  store i64 %145, i64* %143, align 8
  br label %146

146:                                              ; preds = %131, %142
  %147 = bitcast %class.CFX_Matrix* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %147) #14
  %148 = bitcast %class.CFX_Matrix* %18 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, <4 x float>* %148, align 16
  %149 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %18, i64 0, i32 4
  store float 0.000000e+00, float* %149, align 16
  %150 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %18, i64 0, i32 5
  store float 0.000000e+00, float* %150, align 4
  call void @_ZN16CFGAS_GEGraphics19SetDIBitsWithMatrixERKN5fxcrt9RetainPtrI11CFX_DIBBaseEERK10CFX_Matrix(%class.CFGAS_GEGraphics* %0, %"class.fxcrt::RetainPtr.41"* nonnull dereferenceable(8) %17, %class.CFX_Matrix* nonnull dereferenceable(24) %18)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %147) #14
  %151 = getelementptr inbounds %"class.fxcrt::RetainPtr.41", %"class.fxcrt::RetainPtr.41"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %152 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %151, align 8
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %151, align 8
  %153 = icmp eq %class.CFX_DIBBase* %152, null
  br i1 %153, label %165, label %154

154:                                              ; preds = %146
  %155 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %152, i64 0, i32 0, i32 1
  %156 = load i64, i64* %155, align 8
  %157 = add nsw i64 %156, -1
  store i64 %157, i64* %155, align 8
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %159, label %165

159:                                              ; preds = %154
  %160 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %152, i64 0, i32 0
  %161 = bitcast %class.CFX_DIBBase* %152 to void (%"class.fxcrt::Retainable"*)***
  %162 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %161, align 8
  %163 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %162, i64 1
  %164 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %163, align 8
  call void %164(%"class.fxcrt::Retainable"* nonnull %160) #14
  br label %165

165:                                              ; preds = %159, %154, %146
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %137) #14
  call void @_ZN16CFX_RenderDevice13StateRestorerD1Ev(%"class.CFX_RenderDevice::StateRestorer"* nonnull %16) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %132) #14
  call void @_ZN23CFX_DefaultRenderDeviceD1Ev(%class.CFX_DefaultRenderDevice* nonnull %13) #14
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %95) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %85) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %72) #14
  %166 = load i64, i64* %53, align 8
  %167 = add nsw i64 %166, -1
  store i64 %167, i64* %53, align 8
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %169, label %175

169:                                              ; preds = %165
  %170 = bitcast i8* %49 to %"class.fxcrt::Retainable"*
  %171 = bitcast i8* %49 to void (%"class.fxcrt::Retainable"*)***
  %172 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %171, align 8
  %173 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %172, i64 1
  %174 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %173, align 8
  call void %174(%"class.fxcrt::Retainable"* nonnull %170) #14
  br label %175

175:                                              ; preds = %165, %169
  %176 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %29, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %29, align 8
  %177 = icmp eq %class.CFX_DIBitmap* %176, null
  br i1 %177, label %189, label %178

178:                                              ; preds = %175
  %179 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %176, i64 0, i32 0, i32 0, i32 1
  %180 = load i64, i64* %179, align 8
  %181 = add nsw i64 %180, -1
  store i64 %181, i64* %179, align 8
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %183, label %189

183:                                              ; preds = %178
  %184 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %176, i64 0, i32 0, i32 0
  %185 = bitcast %class.CFX_DIBitmap* %176 to void (%"class.fxcrt::Retainable"*)***
  %186 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %185, align 8
  %187 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %186, i64 1
  %188 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %187, align 8
  call void %188(%"class.fxcrt::Retainable"* nonnull %184) #14
  br label %189

189:                                              ; preds = %175, %178, %183
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #14
  %190 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %20, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %20, align 8
  %191 = icmp eq %class.CFX_DIBitmap* %190, null
  br i1 %191, label %203, label %192

192:                                              ; preds = %189
  %193 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %190, i64 0, i32 0, i32 0, i32 1
  %194 = load i64, i64* %193, align 8
  %195 = add nsw i64 %194, -1
  store i64 %195, i64* %193, align 8
  %196 = icmp eq i64 %195, 0
  br i1 %196, label %197, label %203

197:                                              ; preds = %192
  %198 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %190, i64 0, i32 0, i32 0
  %199 = bitcast %class.CFX_DIBitmap* %190 to void (%"class.fxcrt::Retainable"*)***
  %200 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %199, align 8
  %201 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %200, i64 1
  %202 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %201, align 8
  call void %202(%"class.fxcrt::Retainable"* nonnull %198) #14
  br label %203

203:                                              ; preds = %189, %192, %197
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #14
  ret void

204:                                              ; preds = %122, %212
  %205 = phi i32 [ %120, %122 ], [ %213, %212 ]
  %206 = phi i32 [ %130, %122 ], [ %214, %212 ]
  %207 = phi i32 [ %119, %122 ], [ %216, %212 ]
  %208 = load i32, i32* %86, align 8
  %209 = icmp slt i32 %208, %206
  br i1 %209, label %218, label %212

210:                                              ; preds = %239
  %211 = load i32, i32* %87, align 4
  br label %212

212:                                              ; preds = %210, %204
  %213 = phi i32 [ %211, %210 ], [ %205, %204 ]
  %214 = phi i32 [ %242, %210 ], [ %206, %204 ]
  %215 = load i32, i32* %129, align 8
  %216 = add nsw i32 %215, %207
  %217 = icmp slt i32 %216, %213
  br i1 %217, label %204, label %131

218:                                              ; preds = %204, %239
  %219 = phi i32 [ %241, %239 ], [ %208, %204 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %123) #14
  store i64 %51, i64* %124, align 8
  %220 = load i64, i64* %53, align 8
  %221 = add nsw i64 %220, 1
  store i64 %221, i64* %53, align 8
  %222 = load %class.CFGAS_GEPattern*, %class.CFGAS_GEPattern** %41, align 8
  %223 = getelementptr inbounds %class.CFGAS_GEPattern, %class.CFGAS_GEPattern* %222, i64 0, i32 1
  %224 = load i32, i32* %223, align 4
  %225 = call zeroext i1 @_ZN16CFX_RenderDevice10SetBitMaskERKN5fxcrt9RetainPtrI11CFX_DIBBaseEEiij(%class.CFX_RenderDevice* nonnull %114, %"class.fxcrt::RetainPtr.41"* nonnull dereferenceable(8) %15, i32 %219, i32 %207, i32 %224) #14
  %226 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %125, align 8
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %125, align 8
  %227 = icmp eq %class.CFX_DIBBase* %226, null
  br i1 %227, label %239, label %228

228:                                              ; preds = %218
  %229 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %226, i64 0, i32 0, i32 1
  %230 = load i64, i64* %229, align 8
  %231 = add nsw i64 %230, -1
  store i64 %231, i64* %229, align 8
  %232 = icmp eq i64 %231, 0
  br i1 %232, label %233, label %239

233:                                              ; preds = %228
  %234 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %226, i64 0, i32 0
  %235 = bitcast %class.CFX_DIBBase* %226 to void (%"class.fxcrt::Retainable"*)***
  %236 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %235, align 8
  %237 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %236, i64 1
  %238 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %237, align 8
  call void %238(%"class.fxcrt::Retainable"* nonnull %234) #14
  br label %239

239:                                              ; preds = %218, %228, %233
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %123) #14
  %240 = load i32, i32* %127, align 4
  %241 = add nsw i32 %240, %219
  %242 = load i32, i32* %89, align 8
  %243 = icmp slt i32 %241, %242
  br i1 %243, label %218, label %210
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFGAS_GEGraphics19FillPathWithShadingERK12CFGAS_GEPathRK21CFX_FillRenderOptionsRK10CFX_Matrix(%class.CFGAS_GEGraphics* nocapture readonly, %class.CFGAS_GEPath* dereferenceable(24), %struct.CFX_FillRenderOptions* dereferenceable(2), %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.fxcrt::RetainPtr", align 8
  %6 = alloca %"class.fxcrt::RetainPtr", align 8
  %7 = alloca %"class.CFX_RenderDevice::StateRestorer", align 8
  %8 = alloca %"class.fxcrt::RetainPtr.41", align 8
  %9 = bitcast %"class.fxcrt::RetainPtr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #14
  %10 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_DIBitmap* inttoptr (i64 -6148914691236517206 to %class.CFX_DIBitmap*), %class.CFX_DIBitmap** %10, align 8
  %11 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 0, i32 0
  %12 = load %class.CFX_RenderDevice*, %class.CFX_RenderDevice** %11, align 8
  call void @_ZNK16CFX_RenderDevice9GetBitmapEv(%"class.fxcrt::RetainPtr"* nonnull sret %5, %class.CFX_RenderDevice* %12) #14
  %13 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %10, align 8
  %14 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %13, i64 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %13, i64 0, i32 0, i32 3
  %17 = load i32, i32* %16, align 8
  %18 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 1, i32 4, i32 3, i32 0
  %19 = load %class.CFGAS_GEShading*, %class.CFGAS_GEShading** %18, align 8
  %20 = getelementptr inbounds %class.CFGAS_GEShading, %class.CFGAS_GEShading* %19, i64 0, i32 1, i32 0
  %21 = load float, float* %20, align 4, !noalias !18
  %22 = getelementptr inbounds %class.CFGAS_GEShading, %class.CFGAS_GEShading* %19, i64 0, i32 1, i32 1
  %23 = load float, float* %22, align 4, !noalias !21
  %24 = getelementptr inbounds %class.CFGAS_GEShading, %class.CFGAS_GEShading* %19, i64 0, i32 2, i32 0
  %25 = load float, float* %24, align 4, !noalias !24
  %26 = getelementptr inbounds %class.CFGAS_GEShading, %class.CFGAS_GEShading* %19, i64 0, i32 2, i32 1
  %27 = load float, float* %26, align 4, !noalias !27
  %28 = bitcast %"class.fxcrt::RetainPtr"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #14
  %29 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %30 = call i8* @_Znwm(i64 80) #15, !noalias !30
  %31 = bitcast i8* %30 to %class.CFX_DIBitmap*
  call void @_ZN12CFX_DIBitmapC1Ev(%class.CFX_DIBitmap* nonnull %31) #14, !noalias !30
  %32 = ptrtoint i8* %30 to i64
  %33 = bitcast %"class.fxcrt::RetainPtr"* %6 to i64*
  store i64 %32, i64* %33, align 8, !alias.scope !30
  %34 = getelementptr inbounds i8, i8* %30, i64 8
  %35 = bitcast i8* %34 to i64*
  %36 = load i64, i64* %35, align 8, !noalias !30
  %37 = add nsw i64 %36, 1
  store i64 %37, i64* %35, align 8, !noalias !30
  %38 = call zeroext i1 @_ZN12CFX_DIBitmap6CreateEii12FXDIB_Format(%class.CFX_DIBitmap* nonnull %31, i32 %15, i32 %17, i16 zeroext 544) #14
  %39 = load %class.CFX_RenderDevice*, %class.CFX_RenderDevice** %11, align 8
  %40 = call zeroext i1 @_ZN16CFX_RenderDevice9GetDIBitsERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEii(%class.CFX_RenderDevice* %39, %"class.fxcrt::RetainPtr"* nonnull dereferenceable(8) %6, i32 0, i32 0) #14
  %41 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %29, align 8
  %42 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %41, i64 0, i32 0, i32 4
  %43 = load i32, i32* %42, align 4
  %44 = load %class.CFGAS_GEShading*, %class.CFGAS_GEShading** %18, align 8
  %45 = getelementptr inbounds %class.CFGAS_GEShading, %class.CFGAS_GEShading* %44, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  switch i32 %46, label %266 [
    i32 1, label %47
    i32 2, label %115
  ]

47:                                               ; preds = %4
  %48 = fsub float %25, %21
  %49 = fsub float %27, %23
  %50 = fmul float %48, %48
  %51 = fmul float %49, %49
  %52 = fadd float %50, %51
  %53 = icmp sgt i32 %17, 0
  br i1 %53, label %54, label %233

54:                                               ; preds = %47
  %55 = icmp sgt i32 %15, 0
  %56 = fcmp une float %52, 0.000000e+00
  %57 = sext i32 %43 to i64
  %58 = zext i32 %17 to i64
  %59 = zext i32 %15 to i64
  br label %60

60:                                               ; preds = %79, %54
  %61 = phi %class.CFX_DIBitmap* [ %41, %54 ], [ %80, %79 ]
  %62 = phi i64 [ 0, %54 ], [ %77, %79 ]
  %63 = bitcast %class.CFX_DIBitmap* %61 to i8* (%class.CFX_DIBitmap*)***
  %64 = load i8* (%class.CFX_DIBitmap*)**, i8* (%class.CFX_DIBitmap*)*** %63, align 8
  %65 = getelementptr inbounds i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %64, i64 2
  %66 = load i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %65, align 8
  %67 = call i8* %66(%class.CFX_DIBitmap* %61) #14
  %68 = mul nsw i64 %62, %57
  %69 = getelementptr inbounds i8, i8* %67, i64 %68
  %70 = bitcast i8* %69 to i32*
  br i1 %55, label %71, label %76

71:                                               ; preds = %60
  %72 = trunc i64 %62 to i32
  %73 = sitofp i32 %72 to float
  %74 = fsub float %73, %23
  %75 = fmul float %49, %74
  br label %81

76:                                               ; preds = %112, %60
  %77 = add nuw nsw i64 %62, 1
  %78 = icmp eq i64 %77, %58
  br i1 %78, label %233, label %79

79:                                               ; preds = %76
  %80 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %29, align 8
  br label %60

81:                                               ; preds = %112, %71
  %82 = phi i64 [ 0, %71 ], [ %113, %112 ]
  br i1 %56, label %83, label %103

83:                                               ; preds = %81
  %84 = trunc i64 %82 to i32
  %85 = sitofp i32 %84 to float
  %86 = fsub float %85, %21
  %87 = fmul float %48, %86
  %88 = fadd float %75, %87
  %89 = fdiv float %88, %52
  %90 = fcmp ult float %89, 0.000000e+00
  br i1 %90, label %91, label %96

91:                                               ; preds = %83
  %92 = load %class.CFGAS_GEShading*, %class.CFGAS_GEShading** %18, align 8
  %93 = getelementptr inbounds %class.CFGAS_GEShading, %class.CFGAS_GEShading* %92, i64 0, i32 5
  %94 = load i8, i8* %93, align 4, !range !2
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %112, label %103

96:                                               ; preds = %83
  %97 = fcmp ogt float %89, 1.000000e+00
  br i1 %97, label %98, label %103

98:                                               ; preds = %96
  %99 = load %class.CFGAS_GEShading*, %class.CFGAS_GEShading** %18, align 8
  %100 = getelementptr inbounds %class.CFGAS_GEShading, %class.CFGAS_GEShading* %99, i64 0, i32 6
  %101 = load i8, i8* %100, align 1, !range !2
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %112, label %103

103:                                              ; preds = %91, %98, %96, %81
  %104 = phi float [ 0.000000e+00, %81 ], [ %89, %96 ], [ 0.000000e+00, %91 ], [ 1.000000e+00, %98 ]
  %105 = fmul float %104, 2.550000e+02
  %106 = fptosi float %105 to i32
  %107 = load %class.CFGAS_GEShading*, %class.CFGAS_GEShading** %18, align 8
  %108 = sext i32 %106 to i64
  %109 = getelementptr inbounds %class.CFGAS_GEShading, %class.CFGAS_GEShading* %107, i64 0, i32 7, i64 %108
  %110 = load i32, i32* %109, align 4
  %111 = getelementptr inbounds i32, i32* %70, i64 %82
  store i32 %110, i32* %111, align 4
  br label %112

112:                                              ; preds = %91, %98, %103
  %113 = add nuw nsw i64 %82, 1
  %114 = icmp eq i64 %113, %59
  br i1 %114, label %76, label %81

115:                                              ; preds = %4
  %116 = getelementptr inbounds %class.CFGAS_GEShading, %class.CFGAS_GEShading* %44, i64 0, i32 3
  %117 = load float, float* %116, align 4
  %118 = getelementptr inbounds %class.CFGAS_GEShading, %class.CFGAS_GEShading* %44, i64 0, i32 4
  %119 = load float, float* %118, align 4
  %120 = fsub float %21, %25
  %121 = fmul float %120, %120
  %122 = fsub float %23, %27
  %123 = fmul float %122, %122
  %124 = fadd float %121, %123
  %125 = fsub float %117, %119
  %126 = fmul float %125, %125
  %127 = fsub float %124, %126
  %128 = icmp sgt i32 %17, 0
  br i1 %128, label %129, label %233

129:                                              ; preds = %115
  %130 = icmp sgt i32 %15, 0
  %131 = fsub float %25, %21
  %132 = fsub float %27, %23
  %133 = fsub float %119, %117
  %134 = fmul float %117, %133
  %135 = fmul float %117, %117
  %136 = fcmp oeq float %127, 0.000000e+00
  %137 = fcmp ogt float %127, 0.000000e+00
  %138 = fmul float %127, 2.000000e+00
  %139 = sext i32 %43 to i64
  %140 = zext i32 %17 to i64
  %141 = zext i32 %15 to i64
  br label %142

142:                                              ; preds = %162, %129
  %143 = phi %class.CFX_DIBitmap* [ %41, %129 ], [ %163, %162 ]
  %144 = phi i64 [ 0, %129 ], [ %160, %162 ]
  %145 = bitcast %class.CFX_DIBitmap* %143 to i8* (%class.CFX_DIBitmap*)***
  %146 = load i8* (%class.CFX_DIBitmap*)**, i8* (%class.CFX_DIBitmap*)*** %145, align 8
  %147 = getelementptr inbounds i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %146, i64 2
  %148 = load i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %147, align 8
  %149 = call i8* %148(%class.CFX_DIBitmap* %143) #14
  %150 = mul nsw i64 %144, %139
  %151 = getelementptr inbounds i8, i8* %149, i64 %150
  %152 = bitcast i8* %151 to i32*
  br i1 %130, label %153, label %159

153:                                              ; preds = %142
  %154 = trunc i64 %144 to i32
  %155 = sitofp i32 %154 to float
  %156 = fsub float %155, %23
  %157 = fmul float %132, %156
  %158 = fmul float %156, %156
  br label %164

159:                                              ; preds = %230, %142
  %160 = add nuw nsw i64 %144, 1
  %161 = icmp eq i64 %160, %140
  br i1 %161, label %233, label %162

162:                                              ; preds = %159
  %163 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %29, align 8
  br label %142

164:                                              ; preds = %230, %153
  %165 = phi i64 [ 0, %153 ], [ %231, %230 ]
  %166 = trunc i64 %165 to i32
  %167 = sitofp i32 %166 to float
  %168 = fsub float %167, %21
  %169 = fmul float %131, %168
  %170 = fadd float %157, %169
  %171 = fadd float %134, %170
  %172 = fmul float %171, -2.000000e+00
  %173 = fmul float %168, %168
  %174 = fadd float %158, %173
  %175 = fsub float %174, %135
  br i1 %136, label %176, label %179

176:                                              ; preds = %164
  %177 = fsub float -0.000000e+00, %175
  %178 = fdiv float %177, %172
  br label %206

179:                                              ; preds = %164
  %180 = fmul float %172, %172
  %181 = fmul float %127, %175
  %182 = fmul float %181, 4.000000e+00
  %183 = fsub float %180, %182
  %184 = fcmp olt float %183, 0.000000e+00
  br i1 %184, label %230, label %185

185:                                              ; preds = %179
  %186 = call float @sqrtf(float %183) #14
  %187 = fsub float -0.000000e+00, %172
  %188 = fsub float %187, %186
  %189 = fdiv float %188, %138
  %190 = fsub float %186, %172
  %191 = fdiv float %190, %138
  %192 = select i1 %137, float %191, float %189
  %193 = fcmp ugt float %192, 1.000000e+00
  br i1 %193, label %194, label %201

194:                                              ; preds = %185
  %195 = select i1 %137, float %189, float %191
  %196 = load %class.CFGAS_GEShading*, %class.CFGAS_GEShading** %18, align 8
  %197 = getelementptr inbounds %class.CFGAS_GEShading, %class.CFGAS_GEShading* %196, i64 0, i32 6
  %198 = load i8, i8* %197, align 1, !range !2
  %199 = icmp eq i8 %198, 0
  %200 = select i1 %199, float %195, float %192
  br label %201

201:                                              ; preds = %194, %185
  %202 = phi float [ %192, %185 ], [ %200, %194 ]
  %203 = fmul float %133, %202
  %204 = fadd float %117, %203
  %205 = fcmp olt float %204, 0.000000e+00
  br i1 %205, label %230, label %206

206:                                              ; preds = %201, %176
  %207 = phi float [ %178, %176 ], [ %202, %201 ]
  %208 = fcmp ult float %207, 0.000000e+00
  br i1 %208, label %209, label %214

209:                                              ; preds = %206
  %210 = load %class.CFGAS_GEShading*, %class.CFGAS_GEShading** %18, align 8
  %211 = getelementptr inbounds %class.CFGAS_GEShading, %class.CFGAS_GEShading* %210, i64 0, i32 5
  %212 = load i8, i8* %211, align 4, !range !2
  %213 = icmp eq i8 %212, 0
  br i1 %213, label %230, label %221

214:                                              ; preds = %206
  %215 = fcmp ogt float %207, 1.000000e+00
  %216 = load %class.CFGAS_GEShading*, %class.CFGAS_GEShading** %18, align 8
  br i1 %215, label %217, label %221

217:                                              ; preds = %214
  %218 = getelementptr inbounds %class.CFGAS_GEShading, %class.CFGAS_GEShading* %216, i64 0, i32 6
  %219 = load i8, i8* %218, align 1, !range !2
  %220 = icmp eq i8 %219, 0
  br i1 %220, label %230, label %221

221:                                              ; preds = %214, %209, %217
  %222 = phi %class.CFGAS_GEShading* [ %216, %217 ], [ %210, %209 ], [ %216, %214 ]
  %223 = phi float [ 1.000000e+00, %217 ], [ 0.000000e+00, %209 ], [ %207, %214 ]
  %224 = fmul float %223, 2.550000e+02
  %225 = fptosi float %224 to i32
  %226 = sext i32 %225 to i64
  %227 = getelementptr inbounds %class.CFGAS_GEShading, %class.CFGAS_GEShading* %222, i64 0, i32 7, i64 %226
  %228 = load i32, i32* %227, align 4
  %229 = getelementptr inbounds i32, i32* %152, i64 %165
  store i32 %228, i32* %229, align 4
  br label %230

230:                                              ; preds = %209, %217, %201, %179, %221
  %231 = add nuw nsw i64 %165, 1
  %232 = icmp eq i64 %231, %141
  br i1 %232, label %159, label %164

233:                                              ; preds = %159, %76, %115, %47
  %234 = bitcast %"class.CFX_RenderDevice::StateRestorer"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %234) #14
  %235 = getelementptr inbounds %"class.CFX_RenderDevice::StateRestorer", %"class.CFX_RenderDevice::StateRestorer"* %7, i64 0, i32 0, i32 0
  store %class.CFX_RenderDevice* inttoptr (i64 -6148914691236517206 to %class.CFX_RenderDevice*), %class.CFX_RenderDevice** %235, align 8
  %236 = load %class.CFX_RenderDevice*, %class.CFX_RenderDevice** %11, align 8
  call void @_ZN16CFX_RenderDevice13StateRestorerC1EPS_(%"class.CFX_RenderDevice::StateRestorer"* nonnull %7, %class.CFX_RenderDevice* %236) #14
  %237 = load %class.CFX_RenderDevice*, %class.CFX_RenderDevice** %11, align 8
  %238 = getelementptr inbounds %class.CFGAS_GEPath, %class.CFGAS_GEPath* %1, i64 0, i32 0
  %239 = call zeroext i1 @_ZN16CFX_RenderDevice16SetClip_PathFillEPK12CFX_PathDataPK10CFX_MatrixRK21CFX_FillRenderOptions(%class.CFX_RenderDevice* %237, %class.CFX_PathData* %238, %class.CFX_Matrix* %3, %struct.CFX_FillRenderOptions* dereferenceable(2) %2) #14
  %240 = bitcast %"class.fxcrt::RetainPtr.41"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %240) #14
  %241 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %29, align 8
  %242 = ptrtoint %class.CFX_DIBitmap* %241 to i64
  %243 = bitcast %"class.fxcrt::RetainPtr.41"* %8 to i64*
  store i64 %242, i64* %243, align 8
  %244 = icmp eq %class.CFX_DIBitmap* %241, null
  br i1 %244, label %249, label %245

245:                                              ; preds = %233
  %246 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %241, i64 0, i32 0, i32 0, i32 1
  %247 = load i64, i64* %246, align 8
  %248 = add nsw i64 %247, 1
  store i64 %248, i64* %246, align 8
  br label %249

249:                                              ; preds = %233, %245
  call void @_ZN16CFGAS_GEGraphics19SetDIBitsWithMatrixERKN5fxcrt9RetainPtrI11CFX_DIBBaseEERK10CFX_Matrix(%class.CFGAS_GEGraphics* %0, %"class.fxcrt::RetainPtr.41"* nonnull dereferenceable(8) %8, %class.CFX_Matrix* dereferenceable(24) %3)
  %250 = getelementptr inbounds %"class.fxcrt::RetainPtr.41", %"class.fxcrt::RetainPtr.41"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %251 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %250, align 8
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %250, align 8
  %252 = icmp eq %class.CFX_DIBBase* %251, null
  br i1 %252, label %264, label %253

253:                                              ; preds = %249
  %254 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %251, i64 0, i32 0, i32 1
  %255 = load i64, i64* %254, align 8
  %256 = add nsw i64 %255, -1
  store i64 %256, i64* %254, align 8
  %257 = icmp eq i64 %256, 0
  br i1 %257, label %258, label %264

258:                                              ; preds = %253
  %259 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %251, i64 0, i32 0
  %260 = bitcast %class.CFX_DIBBase* %251 to void (%"class.fxcrt::Retainable"*)***
  %261 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %260, align 8
  %262 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %261, i64 1
  %263 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %262, align 8
  call void %263(%"class.fxcrt::Retainable"* nonnull %259) #14
  br label %264

264:                                              ; preds = %249, %253, %258
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %240) #14
  call void @_ZN16CFX_RenderDevice13StateRestorerD1Ev(%"class.CFX_RenderDevice::StateRestorer"* nonnull %7) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %234) #14
  %265 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %29, align 8
  br label %266

266:                                              ; preds = %4, %264
  %267 = phi %class.CFX_DIBitmap* [ %41, %4 ], [ %265, %264 ]
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %29, align 8
  %268 = icmp eq %class.CFX_DIBitmap* %267, null
  br i1 %268, label %280, label %269

269:                                              ; preds = %266
  %270 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %267, i64 0, i32 0, i32 0, i32 1
  %271 = load i64, i64* %270, align 8
  %272 = add nsw i64 %271, -1
  store i64 %272, i64* %270, align 8
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %280

274:                                              ; preds = %269
  %275 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %267, i64 0, i32 0, i32 0
  %276 = bitcast %class.CFX_DIBitmap* %267 to void (%"class.fxcrt::Retainable"*)***
  %277 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %276, align 8
  %278 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %277, i64 1
  %279 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %278, align 8
  call void %279(%"class.fxcrt::Retainable"* nonnull %275) #14
  br label %280

280:                                              ; preds = %266, %269, %274
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #14
  %281 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %10, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %10, align 8
  %282 = icmp eq %class.CFX_DIBitmap* %281, null
  br i1 %282, label %294, label %283

283:                                              ; preds = %280
  %284 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %281, i64 0, i32 0, i32 0, i32 1
  %285 = load i64, i64* %284, align 8
  %286 = add nsw i64 %285, -1
  store i64 %286, i64* %284, align 8
  %287 = icmp eq i64 %286, 0
  br i1 %287, label %288, label %294

288:                                              ; preds = %283
  %289 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %281, i64 0, i32 0, i32 0
  %290 = bitcast %class.CFX_DIBitmap* %281 to void (%"class.fxcrt::Retainable"*)***
  %291 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %290, align 8
  %292 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %291, i64 1
  %293 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %292, align 8
  call void %293(%"class.fxcrt::Retainable"* nonnull %289) #14
  br label %294

294:                                              ; preds = %280, %283, %288
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #14
  ret void
}

declare void @_ZNK16CFX_RenderDevice9GetBitmapEv(%"class.fxcrt::RetainPtr"* sret, %class.CFX_RenderDevice*) local_unnamed_addr #1

declare zeroext i1 @_ZN12CFX_DIBitmap6CreateEii12FXDIB_Format(%class.CFX_DIBitmap*, i32, i32, i16 zeroext) local_unnamed_addr #1

declare zeroext i1 @_ZN16CFX_RenderDevice9GetDIBitsERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEii(%class.CFX_RenderDevice*, %"class.fxcrt::RetainPtr"* dereferenceable(8), i32, i32) local_unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK10CFX_Matrix13TransformRectERK13CFX_FloatRect(%class.CFX_Matrix*, %class.CFX_FloatRect* dereferenceable(16)) local_unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK12CFX_PathData14GetBoundingBoxEv(%class.CFX_PathData*) local_unnamed_addr #1

declare { i64, i64 } @_ZNK13CFX_FloatRect15ToRoundedFxRectEv(%class.CFX_FloatRect*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN23CFX_DefaultRenderDeviceC1Ev(%class.CFX_DefaultRenderDevice*) unnamed_addr #1

declare zeroext i1 @_ZN23CFX_DefaultRenderDevice6AttachERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEbS5_b(%class.CFX_DefaultRenderDevice*, %"class.fxcrt::RetainPtr"* dereferenceable(8), i1 zeroext, %"class.fxcrt::RetainPtr"* dereferenceable(8), i1 zeroext) local_unnamed_addr #1

declare zeroext i1 @_ZN16CFX_RenderDevice10SetBitMaskERKN5fxcrt9RetainPtrI11CFX_DIBBaseEEiij(%class.CFX_RenderDevice*, %"class.fxcrt::RetainPtr.41"* dereferenceable(8), i32, i32, i32) local_unnamed_addr #1

declare void @_ZN16CFX_RenderDevice13StateRestorerC1EPS_(%"class.CFX_RenderDevice::StateRestorer"*, %class.CFX_RenderDevice*) unnamed_addr #1

declare zeroext i1 @_ZN16CFX_RenderDevice16SetClip_PathFillEPK12CFX_PathDataPK10CFX_MatrixRK21CFX_FillRenderOptions(%class.CFX_RenderDevice*, %class.CFX_PathData*, %class.CFX_Matrix*, %struct.CFX_FillRenderOptions* dereferenceable(2)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFGAS_GEGraphics19SetDIBitsWithMatrixERKN5fxcrt9RetainPtrI11CFX_DIBBaseEERK10CFX_Matrix(%class.CFGAS_GEGraphics* nocapture readonly, %"class.fxcrt::RetainPtr.41"* dereferenceable(8), %class.CFX_Matrix* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.CFX_Matrix, align 16
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %"class.fxcrt::RetainPtr", align 8
  %8 = alloca %"class.fxcrt::RetainPtr", align 8
  %9 = alloca %"class.fxcrt::RetainPtr.41", align 8
  %10 = bitcast %class.CFX_Matrix* %2 to <2 x float>*
  %11 = load <2 x float>, <2 x float>* %10, align 4
  %12 = shufflevector <2 x float> %11, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %13 = extractelement <2 x float> %11, i32 0
  %14 = fcmp oeq float %13, 1.000000e+00
  %15 = extractelement <2 x float> %11, i32 1
  %16 = fcmp oeq float %15, 0.000000e+00
  %17 = and i1 %14, %16
  br i1 %17, label %18, label %38

18:                                               ; preds = %3
  %19 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %2, i64 0, i32 2
  %20 = load float, float* %19, align 4
  %21 = fcmp oeq float %20, 0.000000e+00
  br i1 %21, label %22, label %38

22:                                               ; preds = %18
  %23 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %2, i64 0, i32 3
  %24 = load float, float* %23, align 4
  %25 = fcmp oeq float %24, 1.000000e+00
  br i1 %25, label %26, label %38

26:                                               ; preds = %22
  %27 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %2, i64 0, i32 4
  %28 = load float, float* %27, align 4
  %29 = fcmp oeq float %28, 0.000000e+00
  br i1 %29, label %30, label %38

30:                                               ; preds = %26
  %31 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %2, i64 0, i32 5
  %32 = load float, float* %31, align 4
  %33 = fcmp oeq float %32, 0.000000e+00
  br i1 %33, label %34, label %38

34:                                               ; preds = %30
  %35 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 0, i32 0
  %36 = load %class.CFX_RenderDevice*, %class.CFX_RenderDevice** %35, align 8
  %37 = tail call zeroext i1 @_ZN16CFX_RenderDevice18SetDIBitsWithBlendERKN5fxcrt9RetainPtrI11CFX_DIBBaseEEii9BlendMode(%class.CFX_RenderDevice* %36, %"class.fxcrt::RetainPtr.41"* dereferenceable(8) %1, i32 0, i32 0, i32 0) #14
  br label %142

38:                                               ; preds = %3, %18, %22, %26, %30
  %39 = bitcast %class.CFX_Matrix* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #14
  %40 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %4, i64 0, i32 4
  %41 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %4, i64 0, i32 5
  %42 = getelementptr inbounds %"class.fxcrt::RetainPtr.41", %"class.fxcrt::RetainPtr.41"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %43 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %4, i64 0, i32 5
  %44 = bitcast float* %43 to i32*
  store i32 -1, i32* %44, align 4
  %45 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %42, align 8
  %46 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %45, i64 0, i32 2
  %47 = load i32, i32* %46, align 4
  %48 = sitofp i32 %47 to float
  %49 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %45, i64 0, i32 3
  %50 = load i32, i32* %49, align 8
  %51 = sitofp i32 %50 to float
  %52 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %2, i64 0, i32 2
  %53 = bitcast float* %52 to <2 x float>*
  %54 = load <2 x float>, <2 x float>* %53, align 4, !noalias !33
  %55 = shufflevector <2 x float> %54, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %56 = insertelement <4 x float> <float undef, float undef, float 0.000000e+00, float 0.000000e+00>, float %48, i32 0
  %57 = insertelement <4 x float> %56, float %48, i32 1
  %58 = fmul <4 x float> %12, %57
  %59 = insertelement <4 x float> <float 0.000000e+00, float 0.000000e+00, float undef, float undef>, float %51, i32 2
  %60 = insertelement <4 x float> %59, float %51, i32 3
  %61 = fmul <4 x float> %55, %60
  %62 = fadd <4 x float> %58, %61
  %63 = extractelement <4 x float> %58, i32 2
  %64 = extractelement <4 x float> %61, i32 0
  %65 = fadd float %63, %64
  %66 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %2, i64 0, i32 4
  %67 = load float, float* %66, align 4, !noalias !33
  %68 = fadd float %65, %67
  %69 = extractelement <4 x float> %58, i32 3
  %70 = extractelement <4 x float> %61, i32 1
  %71 = fadd float %69, %70
  %72 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %2, i64 0, i32 5
  %73 = load float, float* %72, align 4, !noalias !33
  %74 = fadd float %71, %73
  %75 = bitcast %class.CFX_Matrix* %4 to <4 x float>*
  store <4 x float> %62, <4 x float>* %75, align 16
  store float %68, float* %40, align 16
  store float %74, float* %41, align 4
  %76 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %76) #14
  store i32 -1431655766, i32* %5, align 4
  %77 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %77) #14
  store i32 -1431655766, i32* %6, align 4
  %78 = bitcast %"class.fxcrt::RetainPtr"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #14
  %79 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_DIBitmap* inttoptr (i64 -6148914691236517206 to %class.CFX_DIBitmap*), %class.CFX_DIBitmap** %79, align 8
  call void @_ZNK11CFX_DIBBase9FlipImageEbb(%"class.fxcrt::RetainPtr"* nonnull sret %7, %class.CFX_DIBBase* %45, i1 zeroext false, i1 zeroext true) #14
  %80 = bitcast %"class.fxcrt::RetainPtr"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #14
  %81 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_DIBitmap* inttoptr (i64 -6148914691236517206 to %class.CFX_DIBitmap*), %class.CFX_DIBitmap** %81, align 8
  %82 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %79, align 8
  %83 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %82, i64 0, i32 0
  call void @_ZN11CFX_DIBBase11TransformToERK10CFX_MatrixPiS3_(%"class.fxcrt::RetainPtr"* nonnull sret %8, %class.CFX_DIBBase* %83, %class.CFX_Matrix* nonnull dereferenceable(24) %4, i32* nonnull %5, i32* nonnull %6) #14
  %84 = getelementptr inbounds %class.CFGAS_GEGraphics, %class.CFGAS_GEGraphics* %0, i64 0, i32 0, i32 0
  %85 = load %class.CFX_RenderDevice*, %class.CFX_RenderDevice** %84, align 8
  %86 = bitcast %"class.fxcrt::RetainPtr.41"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #14
  %87 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %81, align 8
  %88 = ptrtoint %class.CFX_DIBitmap* %87 to i64
  %89 = bitcast %"class.fxcrt::RetainPtr.41"* %9 to i64*
  store i64 %88, i64* %89, align 8
  %90 = icmp eq %class.CFX_DIBitmap* %87, null
  br i1 %90, label %95, label %91

91:                                               ; preds = %38
  %92 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %87, i64 0, i32 0, i32 0, i32 1
  %93 = load i64, i64* %92, align 8
  %94 = add nsw i64 %93, 1
  store i64 %94, i64* %92, align 8
  br label %95

95:                                               ; preds = %38, %91
  %96 = load i32, i32* %5, align 4
  %97 = load i32, i32* %6, align 4
  %98 = call zeroext i1 @_ZN16CFX_RenderDevice18SetDIBitsWithBlendERKN5fxcrt9RetainPtrI11CFX_DIBBaseEEii9BlendMode(%class.CFX_RenderDevice* %85, %"class.fxcrt::RetainPtr.41"* nonnull dereferenceable(8) %9, i32 %96, i32 %97, i32 0) #14
  %99 = getelementptr inbounds %"class.fxcrt::RetainPtr.41", %"class.fxcrt::RetainPtr.41"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %100 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %99, align 8
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %99, align 8
  %101 = icmp eq %class.CFX_DIBBase* %100, null
  br i1 %101, label %113, label %102

102:                                              ; preds = %95
  %103 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %100, i64 0, i32 0, i32 1
  %104 = load i64, i64* %103, align 8
  %105 = add nsw i64 %104, -1
  store i64 %105, i64* %103, align 8
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %107, label %113

107:                                              ; preds = %102
  %108 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %100, i64 0, i32 0
  %109 = bitcast %class.CFX_DIBBase* %100 to void (%"class.fxcrt::Retainable"*)***
  %110 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %109, align 8
  %111 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %110, i64 1
  %112 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %111, align 8
  call void %112(%"class.fxcrt::Retainable"* nonnull %108) #14
  br label %113

113:                                              ; preds = %95, %102, %107
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #14
  %114 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %81, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %81, align 8
  %115 = icmp eq %class.CFX_DIBitmap* %114, null
  br i1 %115, label %127, label %116

116:                                              ; preds = %113
  %117 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %114, i64 0, i32 0, i32 0, i32 1
  %118 = load i64, i64* %117, align 8
  %119 = add nsw i64 %118, -1
  store i64 %119, i64* %117, align 8
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %127

121:                                              ; preds = %116
  %122 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %114, i64 0, i32 0, i32 0
  %123 = bitcast %class.CFX_DIBitmap* %114 to void (%"class.fxcrt::Retainable"*)***
  %124 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %123, align 8
  %125 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %124, i64 1
  %126 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %125, align 8
  call void %126(%"class.fxcrt::Retainable"* nonnull %122) #14
  br label %127

127:                                              ; preds = %113, %116, %121
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #14
  %128 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %79, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %79, align 8
  %129 = icmp eq %class.CFX_DIBitmap* %128, null
  br i1 %129, label %141, label %130

130:                                              ; preds = %127
  %131 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %128, i64 0, i32 0, i32 0, i32 1
  %132 = load i64, i64* %131, align 8
  %133 = add nsw i64 %132, -1
  store i64 %133, i64* %131, align 8
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %135, label %141

135:                                              ; preds = %130
  %136 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %128, i64 0, i32 0, i32 0
  %137 = bitcast %class.CFX_DIBitmap* %128 to void (%"class.fxcrt::Retainable"*)***
  %138 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %137, align 8
  %139 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %138, i64 1
  %140 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %139, align 8
  call void %140(%"class.fxcrt::Retainable"* nonnull %136) #14
  br label %141

141:                                              ; preds = %127, %130, %135
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %77) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %76) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #14
  br label %142

142:                                              ; preds = %141, %34
  ret void
}

; Function Attrs: nounwind
declare void @_ZN16CFX_RenderDevice13StateRestorerD1Ev(%"class.CFX_RenderDevice::StateRestorer"*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN23CFX_DefaultRenderDeviceD1Ev(%class.CFX_DefaultRenderDevice*) unnamed_addr #7

declare void @_ZNK11CFX_DIBBase9FlipImageEbb(%"class.fxcrt::RetainPtr"* sret, %class.CFX_DIBBase*, i1 zeroext, i1 zeroext) local_unnamed_addr #1

declare void @_ZN11CFX_DIBBase11TransformToERK10CFX_MatrixPiS3_(%"class.fxcrt::RetainPtr"* sret, %class.CFX_DIBBase*, %class.CFX_Matrix* dereferenceable(24), i32*, i32*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFGAS_GEGraphics5TInfoC2Ev(%"struct.CFGAS_GEGraphics::TInfo"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.CFGAS_GEGraphics::TInfo", %"struct.CFGAS_GEGraphics::TInfo"* %0, i64 0, i32 0
  tail call void @_ZN18CFX_GraphStateDataC1Ev(%class.CFX_GraphStateData* %2) #14
  %3 = getelementptr inbounds %"struct.CFGAS_GEGraphics::TInfo", %"struct.CFGAS_GEGraphics::TInfo"* %0, i64 0, i32 1, i32 0
  %4 = bitcast float* %3 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, <4 x float>* %4, align 4
  %5 = getelementptr inbounds %"struct.CFGAS_GEGraphics::TInfo", %"struct.CFGAS_GEGraphics::TInfo"* %0, i64 0, i32 1, i32 4
  %6 = getelementptr inbounds %"struct.CFGAS_GEGraphics::TInfo", %"struct.CFGAS_GEGraphics::TInfo"* %0, i64 0, i32 3
  %7 = bitcast float* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %7, i8 0, i64 9, i1 false)
  tail call void @_ZN13CFGAS_GEColorC1EP15CFGAS_GEShading(%class.CFGAS_GEColor* %6, %class.CFGAS_GEShading* null) #14
  %8 = getelementptr inbounds %"struct.CFGAS_GEGraphics::TInfo", %"struct.CFGAS_GEGraphics::TInfo"* %0, i64 0, i32 4
  tail call void @_ZN13CFGAS_GEColorC1EP15CFGAS_GEShading(%class.CFGAS_GEColor* %8, %class.CFGAS_GEShading* null) #14
  ret void
}

declare void @_ZN18CFX_GraphStateDataC1Ev(%class.CFX_GraphStateData*) unnamed_addr #1

declare void @_ZN13CFGAS_GEColorC1EP15CFGAS_GEShading(%class.CFGAS_GEColor*, %class.CFGAS_GEShading*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFGAS_GEGraphics5TInfoC2ERKS0_(%"struct.CFGAS_GEGraphics::TInfo"*, %"struct.CFGAS_GEGraphics::TInfo"* dereferenceable(120)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.CFGAS_GEGraphics::TInfo", %"struct.CFGAS_GEGraphics::TInfo"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.CFGAS_GEGraphics::TInfo", %"struct.CFGAS_GEGraphics::TInfo"* %1, i64 0, i32 0
  tail call void @_ZN18CFX_GraphStateDataC1ERKS_(%class.CFX_GraphStateData* %3, %class.CFX_GraphStateData* dereferenceable(40) %4) #14
  %5 = getelementptr inbounds %"struct.CFGAS_GEGraphics::TInfo", %"struct.CFGAS_GEGraphics::TInfo"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.CFGAS_GEGraphics::TInfo", %"struct.CFGAS_GEGraphics::TInfo"* %1, i64 0, i32 1
  %7 = bitcast %class.CFX_Matrix* %5 to i8*
  %8 = bitcast %class.CFX_Matrix* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false)
  %9 = getelementptr inbounds %"struct.CFGAS_GEGraphics::TInfo", %"struct.CFGAS_GEGraphics::TInfo"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"struct.CFGAS_GEGraphics::TInfo", %"struct.CFGAS_GEGraphics::TInfo"* %1, i64 0, i32 2
  %11 = load i8, i8* %10, align 8, !range !2
  store i8 %11, i8* %9, align 8
  %12 = getelementptr inbounds %"struct.CFGAS_GEGraphics::TInfo", %"struct.CFGAS_GEGraphics::TInfo"* %0, i64 0, i32 3
  %13 = getelementptr inbounds %"struct.CFGAS_GEGraphics::TInfo", %"struct.CFGAS_GEGraphics::TInfo"* %1, i64 0, i32 3
  tail call void @_ZN13CFGAS_GEColorC1ERKS_(%class.CFGAS_GEColor* %12, %class.CFGAS_GEColor* dereferenceable(24) %13) #14
  %14 = getelementptr inbounds %"struct.CFGAS_GEGraphics::TInfo", %"struct.CFGAS_GEGraphics::TInfo"* %0, i64 0, i32 4
  %15 = getelementptr inbounds %"struct.CFGAS_GEGraphics::TInfo", %"struct.CFGAS_GEGraphics::TInfo"* %1, i64 0, i32 4
  tail call void @_ZN13CFGAS_GEColorC1ERKS_(%class.CFGAS_GEColor* %14, %class.CFGAS_GEColor* dereferenceable(24) %15) #14
  ret void
}

declare void @_ZN18CFX_GraphStateDataC1ERKS_(%class.CFX_GraphStateData*, %class.CFX_GraphStateData* dereferenceable(40)) unnamed_addr #1

declare void @_ZN13CFGAS_GEColorC1ERKS_(%class.CFGAS_GEColor*, %class.CFGAS_GEColor* dereferenceable(24)) unnamed_addr #1

declare dereferenceable(40) %class.CFX_GraphStateData* @_ZN18CFX_GraphStateDataaSERKS_(%class.CFX_GraphStateData*, %class.CFX_GraphStateData* dereferenceable(40)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN13CFGAS_GEColorD1Ev(%class.CFGAS_GEColor*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN18CFX_GraphStateDataD1Ev(%class.CFX_GraphStateData*) unnamed_addr #7

declare zeroext i1 @_ZN16CFX_RenderDevice17FillRectWithBlendERK7FX_RECTj9BlendMode(%class.CFX_RenderDevice*, %struct.FX_RECT* dereferenceable(16), i32, i32) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare float @sqrtf(float) local_unnamed_addr #8

declare zeroext i1 @_ZN16CFX_RenderDevice18SetDIBitsWithBlendERKN5fxcrt9RetainPtrI11CFX_DIBBaseEEii9BlendMode(%class.CFX_RenderDevice*, %"class.fxcrt::RetainPtr.41"* dereferenceable(8), i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN16CFGAS_GEGraphics5TInfoENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.10"*, %"class.std::__1::unique_ptr.12"* dereferenceable(8)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.12"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.10"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.10"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #16
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.12"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #16
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #15
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.12"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.12"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.12"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.12"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.12"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.12"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.12"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"struct.CFGAS_GEGraphics::TInfo"* null, %"struct.CFGAS_GEGraphics::TInfo"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.12"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.12"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.12"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.12"*, %"class.std::__1::unique_ptr.12"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.12"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.12"*, %"class.std::__1::unique_ptr.12"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.12"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.12"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"struct.CFGAS_GEGraphics::TInfo"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.12"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.12"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.12"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.12"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.12"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.12"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"struct.CFGAS_GEGraphics::TInfo"* null, %"struct.CFGAS_GEGraphics::TInfo"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.12"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !36

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.12"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.12"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.12"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.12"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.12"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.12"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.12"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.12"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.12"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"struct.CFGAS_GEGraphics::TInfo"* null, %"struct.CFGAS_GEGraphics::TInfo"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.12"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.12"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.12"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.12"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.12"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"struct.CFGAS_GEGraphics::TInfo"* null, %"struct.CFGAS_GEGraphics::TInfo"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.12"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.12"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.12"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.12"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.12"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"struct.CFGAS_GEGraphics::TInfo"* null, %"struct.CFGAS_GEGraphics::TInfo"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.12"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.12"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.12"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.12"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.12"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"struct.CFGAS_GEGraphics::TInfo"* null, %"struct.CFGAS_GEGraphics::TInfo"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.12"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.12"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.12"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.12"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.12"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"struct.CFGAS_GEGraphics::TInfo"* null, %"struct.CFGAS_GEGraphics::TInfo"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.12"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.12"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.12"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.12"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.12"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"struct.CFGAS_GEGraphics::TInfo"* null, %"struct.CFGAS_GEGraphics::TInfo"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.12"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.12"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.12"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.12"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.12"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"struct.CFGAS_GEGraphics::TInfo"* null, %"struct.CFGAS_GEGraphics::TInfo"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.12"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.12"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.12"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.12"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.12"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"struct.CFGAS_GEGraphics::TInfo"* null, %"struct.CFGAS_GEGraphics::TInfo"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.12"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.12"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.12"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.12"*, %"class.std::__1::unique_ptr.12"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.12"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.12"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.12"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.12"*
  %138 = icmp eq %"class.std::__1::unique_ptr.12"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.12"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.12"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.12"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"struct.CFGAS_GEGraphics::TInfo"*, %"struct.CFGAS_GEGraphics::TInfo"** %142, align 8
  store %"struct.CFGAS_GEGraphics::TInfo"* null, %"struct.CFGAS_GEGraphics::TInfo"** %142, align 8
  %144 = icmp eq %"struct.CFGAS_GEGraphics::TInfo"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"struct.CFGAS_GEGraphics::TInfo", %"struct.CFGAS_GEGraphics::TInfo"* %143, i64 0, i32 4
  tail call void @_ZN13CFGAS_GEColorD1Ev(%class.CFGAS_GEColor* %146) #14
  %147 = getelementptr inbounds %"struct.CFGAS_GEGraphics::TInfo", %"struct.CFGAS_GEGraphics::TInfo"* %143, i64 0, i32 3
  tail call void @_ZN13CFGAS_GEColorD1Ev(%class.CFGAS_GEColor* %147) #14
  %148 = getelementptr inbounds %"struct.CFGAS_GEGraphics::TInfo", %"struct.CFGAS_GEGraphics::TInfo"* %143, i64 0, i32 0
  tail call void @_ZN18CFX_GraphStateDataD1Ev(%class.CFX_GraphStateData* %148) #14
  %149 = getelementptr inbounds %"struct.CFGAS_GEGraphics::TInfo", %"struct.CFGAS_GEGraphics::TInfo"* %143, i64 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* %149) #15
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.12"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #15
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #12

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIfNS_9allocatorIfEEE8__appendEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast float** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = bitcast float** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 2
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to float*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds float, float* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr float, float* %13, i64 %18
  %20 = bitcast float* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 4
  %25 = and i64 %24, -4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #14
  %26 = ptrtoint float* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 2
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 4611686018427387903
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #16
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 2
  %41 = icmp ult i64 %40, 2305843009213693951
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 1
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 4611686018427387903
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #16
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 4611686018427387903, %38 ]
  %52 = shl i64 %51, 2
  %53 = tail call i8* @_Znwm(i64 %52) #15
  %54 = bitcast i8* %53 to float*
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi float* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds float, float* %57, i64 %33
  %59 = getelementptr inbounds float, float* %57, i64 %56
  %60 = getelementptr inbounds float, float* %58, i64 %1
  %61 = bitcast float* %58 to i8*
  %62 = shl i64 %1, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %61, i8 0, i64 %62, i1 false) #14
  %63 = ptrtoint float* %59 to i64
  %64 = ptrtoint float* %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %66 = load float*, float** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint float* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 2
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds float, float* %58, i64 %71
  %73 = ptrtoint float* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast float* %72 to i8*
  %77 = bitcast float* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #14
  %78 = load float*, float** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi float* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq float* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast float* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #15
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

declare void @_ZN12CFX_DIBitmapC1Ev(%class.CFX_DIBitmap*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind }
attributes #15 = { builtin nounwind }
attributes #16 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK10CFX_MatrixmlERKS_: argument 0"}
!5 = distinct !{!5, !"_ZNK10CFX_MatrixmlERKS_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK10CFX_MatrixmlERKS_: argument 0"}
!8 = distinct !{!8, !"_ZNK10CFX_MatrixmlERKS_"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNK10CFX_MatrixmlERKS_: argument 0"}
!11 = distinct !{!11, !"_ZNK10CFX_MatrixmlERKS_"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN6pdfium10MakeRetainI12CFX_DIBitmapJEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!14 = distinct !{!14, !"_ZN6pdfium10MakeRetainI12CFX_DIBitmapJEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN6pdfium10MakeRetainI12CFX_DIBitmapJEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!17 = distinct !{!17, !"_ZN6pdfium10MakeRetainI12CFX_DIBitmapJEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNK15CFGAS_GEShading13GetBeginPointEv: argument 0"}
!20 = distinct !{!20, !"_ZNK15CFGAS_GEShading13GetBeginPointEv"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZNK15CFGAS_GEShading13GetBeginPointEv: argument 0"}
!23 = distinct !{!23, !"_ZNK15CFGAS_GEShading13GetBeginPointEv"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZNK15CFGAS_GEShading11GetEndPointEv: argument 0"}
!26 = distinct !{!26, !"_ZNK15CFGAS_GEShading11GetEndPointEv"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZNK15CFGAS_GEShading11GetEndPointEv: argument 0"}
!29 = distinct !{!29, !"_ZNK15CFGAS_GEShading11GetEndPointEv"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZN6pdfium10MakeRetainI12CFX_DIBitmapJEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!32 = distinct !{!32, !"_ZN6pdfium10MakeRetainI12CFX_DIBitmapJEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_ZNK10CFX_MatrixmlERKS_: argument 0"}
!35 = distinct !{!35, !"_ZNK10CFX_MatrixmlERKS_"}
!36 = distinct !{!36, !37}
!37 = !{!"llvm.loop.unroll.disable"}
