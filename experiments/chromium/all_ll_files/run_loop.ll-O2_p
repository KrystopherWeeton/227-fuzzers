; ModuleID = '../../base/run_loop.cc'
source_filename = "../../base/run_loop.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.base::NoDestructor" = type { [8 x i8] }
%"class.base::NoDestructor.39" = type { [8 x i8] }
%"class.base::RunLoop::Delegate" = type <{ i32 (...)**, %"class.std::__1::stack", %"class.base::ObserverList", i8, [7 x i8] }>
%"class.std::__1::stack" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::RunLoop"**, %"class.base::RunLoop"**, %"class.std::__1::__compressed_pair" }
%"class.base::RunLoop" = type { %"class.base::RunLoop::Delegate"*, i32, i8, i8, i8, i8, i8, %class.scoped_refptr, %"class.base::WeakPtrFactory" }
%class.scoped_refptr = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.1 }
%class.scoped_refptr.1 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.2", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.2" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.3" }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i8 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::RunLoop"** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.9", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.11" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::RunLoop::ScopedDisallowRunning" = type { i8 }
%"struct.base::RunLoop::RunLoopTimeout" = type { %"class.base::TimeDelta", %"class.base::RepeatingCallback" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.16 }
%class.scoped_refptr.16 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.17", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.17" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CancelableCallbackImpl" = type { %"class.base::OnceCallback", %"class.base::WeakPtrFactory.18" }
%"class.base::WeakPtrFactory.18" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::ObserverList<base::RunLoop::NestingObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter" = type { %"class.base::internal::WeakLinkNode", i64, i64 }
%"class.base::internal::WeakLinkNode" = type { %"class.base::LinkNode", %"class.base::ObserverList"* }
%"class.base::RunLoop::NestingObserver" = type { i32 (...)** }
%"class.base::OnceCallback.19" = type { %"class.base::internal::CallbackBase" }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::RepeatingCallback.20" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.22 }
%class.scoped_refptr.22 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.base::WeakPtr.45" = type { %"class.base::internal::WeakPtrBase" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZNSt3__15stackIPN4base7RunLoopENS_6vectorIS3_NS_9allocatorIS3_EEEEE4pushEOS3_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvPNS_7RunLoopERKNS_8LocationENS_12OnceCallbackIFvS7_EEEEJNS0_17UnretainedWrapperIS3_EES5_NS_17RepeatingCallbackIS9_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFvPNS_7RunLoopERKNS_8LocationENS_12OnceCallbackIFvS6_EEEEJNS0_17UnretainedWrapperIS2_EES4_NS_17RepeatingCallbackIS8_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNK4base8internal22CancelableCallbackImplINS_12OnceCallbackIFvvEEEE13MakeForwarderIJEEEvPNS2_IFvDpT_EEE = comdat any

$_ZN4base8internal22CancelableCallbackImplINS_12OnceCallbackIFvvEEEE11ForwardOnceIJEEEvDpT_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMNS0_22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS7_EEEEES5_E7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMNS0_22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS6_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMNS0_22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS7_EEEEEEEbPKNS0_13BindStateBaseENSD_21CancellationQueryModeE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMNS_7RunLoopEFvvEJNS0_17UnretainedWrapperIS3_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMNS_7RunLoopEFvvEJNS0_17UnretainedWrapperIS2_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMNS_7RunLoopEFvvEJNS_7WeakPtrIS3_EEEEEFvvEE3RunEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMNS_7RunLoopEFvvEJNS_7WeakPtrIS2_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMNS_7RunLoopEFvvEJNS_7WeakPtrIS3_EEEEEEEbPKNS0_13BindStateBaseENS9_21CancellationQueryModeE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFv13scoped_refptrINS_19SequencedTaskRunnerEENS_12OnceCallbackIFvvEEEEJS3_INS_22SingleThreadTaskRunnerEENS_17RepeatingCallbackIS7_EEEEES7_E3RunEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFv13scoped_refptrINS_19SequencedTaskRunnerEENS_12OnceCallbackIFvvEEEEJS2_INS_22SingleThreadTaskRunnerEENS_17RepeatingCallbackIS6_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvvEJEEES3_E3RunEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFvvEJEE7DestroyEPKNS0_13BindStateBaseE = comdat any

@_ZTVN4base7RunLoop8DelegateE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::RunLoop::Delegate"*)* @_ZN4base7RunLoop8DelegateD2Ev to i8*), i8* bitcast (void (%"class.base::RunLoop::Delegate"*)* @_ZN4base7RunLoop8DelegateD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [21 x i8] c"RunLoop_ExitedOnIdle\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"Run\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"../../base/run_loop.cc\00", align 1
@.str.3 = private unnamed_addr constant [13 x i8] c"RunUntilIdle\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"Quit\00", align 1
@.str.5 = private unnamed_addr constant [14 x i8] c"RunLoop::Quit\00", align 1
@.str.6 = private unnamed_addr constant [13 x i8] c"QuitWhenIdle\00", align 1
@.str.7 = private unnamed_addr constant [22 x i8] c"RunLoop::QuitWhenIdle\00", align 1
@.str.8 = private unnamed_addr constant [20 x i8] c"RunLoop_ExitedEarly\00", align 1
@.str.9 = private unnamed_addr constant [15 x i8] c"RunLoop_Exited\00", align 1
@_ZZN4base12_GLOBAL__N_114GetTlsDelegateEvE8instance = internal global %"class.base::NoDestructor" zeroinitializer, align 8
@_ZGVZN4base12_GLOBAL__N_114GetTlsDelegateEvE8instance = internal global i64 0, align 8
@.str.10 = private unnamed_addr constant [18 x i8] c"ProxyToTaskRunner\00", align 1
@_ZZN4base12_GLOBAL__N_117RunLoopTimeoutTLSEvE3tls = internal global %"class.base::NoDestructor.39" zeroinitializer, align 8
@_ZGVZN4base12_GLOBAL__N_117RunLoopTimeoutTLSEvE3tls = internal global i64 0, align 8
@.str.11 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.12 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1

@_ZN4base7RunLoop8DelegateD1Ev = hidden unnamed_addr alias void (%"class.base::RunLoop::Delegate"*), void (%"class.base::RunLoop::Delegate"*)* @_ZN4base7RunLoop8DelegateD2Ev
@_ZN4base7RunLoopC1ENS0_4TypeE = hidden unnamed_addr alias void (%"class.base::RunLoop"*, i32), void (%"class.base::RunLoop"*, i32)* @_ZN4base7RunLoopC2ENS0_4TypeE
@_ZN4base7RunLoopD1Ev = hidden unnamed_addr alias void (%"class.base::RunLoop"*), void (%"class.base::RunLoop"*)* @_ZN4base7RunLoopD2Ev
@_ZN4base7RunLoop21ScopedDisallowRunningC1Ev = hidden unnamed_addr alias void (%"class.base::RunLoop::ScopedDisallowRunning"*), void (%"class.base::RunLoop::ScopedDisallowRunning"*)* @_ZN4base7RunLoop21ScopedDisallowRunningC2Ev
@_ZN4base7RunLoop21ScopedDisallowRunningD1Ev = hidden unnamed_addr alias void (%"class.base::RunLoop::ScopedDisallowRunning"*), void (%"class.base::RunLoop::ScopedDisallowRunning"*)* @_ZN4base7RunLoop21ScopedDisallowRunningD2Ev
@_ZN4base7RunLoop14RunLoopTimeoutC1Ev = hidden unnamed_addr alias void (%"struct.base::RunLoop::RunLoopTimeout"*), void (%"struct.base::RunLoop::RunLoopTimeout"*)* @_ZN4base7RunLoop14RunLoopTimeoutC2Ev
@_ZN4base7RunLoop14RunLoopTimeoutD1Ev = hidden unnamed_addr alias void (%"struct.base::RunLoop::RunLoopTimeout"*), void (%"struct.base::RunLoop::RunLoopTimeout"*)* @_ZN4base7RunLoop14RunLoopTimeoutD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base7RunLoop8DelegateC2Ev(%"class.base::RunLoop::Delegate"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::RunLoop::Delegate", %"class.base::RunLoop::Delegate"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4base7RunLoop8DelegateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::RunLoop::Delegate", %"class.base::RunLoop::Delegate"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.base::RunLoop::Delegate", %"class.base::RunLoop::Delegate"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::stack"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 48, i1 false)
  tail call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* %4, %"class.base::internal::LinkNodeBase"* %4, %"class.base::internal::LinkNodeBase"* %4) #14
  %6 = getelementptr inbounds %"class.base::RunLoop::Delegate", %"class.base::RunLoop::Delegate"* %0, i64 0, i32 2, i32 2
  store i64 0, i64* %6, align 8
  %7 = getelementptr inbounds %"class.base::RunLoop::Delegate", %"class.base::RunLoop::Delegate"* %0, i64 0, i32 2, i32 3
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %"class.base::RunLoop::Delegate", %"class.base::RunLoop::Delegate"* %0, i64 0, i32 3
  store i8 0, i8* %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base7RunLoop8DelegateD2Ev(%"class.base::RunLoop::Delegate"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::RunLoop::Delegate", %"class.base::RunLoop::Delegate"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4base7RunLoop8DelegateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::RunLoop::Delegate", %"class.base::RunLoop::Delegate"* %0, i64 0, i32 3
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  %7 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base12_GLOBAL__N_114GetTlsDelegateEvE8instance to i8*) acquire, align 8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %13, !prof !3

9:                                                ; preds = %6
  %10 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base12_GLOBAL__N_114GetTlsDelegateEvE8instance) #14
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %9
  store i64 0, i64* bitcast (%"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_114GetTlsDelegateEvE8instance to i64*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_114GetTlsDelegateEvE8instance to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #14
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base12_GLOBAL__N_114GetTlsDelegateEvE8instance) #14
  br label %13

13:                                               ; preds = %6, %9, %12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_114GetTlsDelegateEvE8instance to %"class.base::ThreadLocalStorage::Slot"*), i8* null) #14
  br label %14

14:                                               ; preds = %1, %13
  %15 = getelementptr inbounds %"class.base::RunLoop::Delegate", %"class.base::RunLoop::Delegate"* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 1
  %16 = bitcast %"class.base::internal::LinkNodeBase"** %15 to %"class.base::LinkNode"**
  %17 = getelementptr inbounds %"class.base::RunLoop::Delegate", %"class.base::RunLoop::Delegate"* %0, i64 0, i32 2, i32 1, i32 0
  %18 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %16, align 8
  %19 = icmp eq %"class.base::LinkNode"* %18, %17
  br i1 %19, label %32, label %20

20:                                               ; preds = %14, %29
  %21 = phi %"class.base::LinkNode"* [ %30, %29 ], [ %18, %14 ]
  %22 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %21, i64 1
  %23 = bitcast %"class.base::LinkNode"* %22 to %"class.base::ObserverList"**
  %24 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %23, align 8
  %25 = icmp eq %"class.base::ObserverList"* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %20
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %23, align 8
  %27 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %21, i64 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* %27) #14
  %28 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %16, align 8
  br label %29

29:                                               ; preds = %26, %20
  %30 = phi %"class.base::LinkNode"* [ %21, %20 ], [ %28, %26 ]
  %31 = icmp eq %"class.base::LinkNode"* %30, %17
  br i1 %31, label %32, label %20

32:                                               ; preds = %29, %14
  %33 = getelementptr inbounds %"class.base::RunLoop::Delegate", %"class.base::RunLoop::Delegate"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %34 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %33, align 8
  %35 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %34, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %32
  %37 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %34 to i64
  %38 = getelementptr inbounds %"class.base::RunLoop::Delegate", %"class.base::RunLoop::Delegate"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %39 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %38 to i64*
  store i64 %37, i64* %39, align 8
  %40 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %34 to i8*
  tail call void @_ZdlPv(i8* %40) #15
  br label %41

41:                                               ; preds = %32, %36
  %42 = getelementptr inbounds %"class.base::RunLoop::Delegate", %"class.base::RunLoop::Delegate"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %43 = load %"class.base::RunLoop"**, %"class.base::RunLoop"*** %42, align 8
  %44 = icmp eq %"class.base::RunLoop"** %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %41
  %46 = ptrtoint %"class.base::RunLoop"** %43 to i64
  %47 = getelementptr inbounds %"class.base::RunLoop::Delegate", %"class.base::RunLoop::Delegate"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %48 = bitcast %"class.base::RunLoop"*** %47 to i64*
  store i64 %46, i64* %48, align 8
  %49 = bitcast %"class.base::RunLoop"** %43 to i8*
  tail call void @_ZdlPv(i8* %49) #15
  br label %50

50:                                               ; preds = %41, %45
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN4base7RunLoop8DelegateD0Ev(%"class.base::RunLoop::Delegate"* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @llvm.trap() #16
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base7RunLoop8Delegate18ShouldQuitWhenIdleEv(%"class.base::RunLoop::Delegate"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::TimeTicks", align 8
  %3 = getelementptr inbounds %"class.base::RunLoop::Delegate", %"class.base::RunLoop::Delegate"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %4 = load %"class.base::RunLoop"**, %"class.base::RunLoop"*** %3, align 8
  %5 = getelementptr inbounds %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, i64 -1
  %6 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %5, align 8
  %7 = getelementptr inbounds %"class.base::RunLoop", %"class.base::RunLoop"* %6, i64 0, i32 5
  %8 = load i8, i8* %7, align 1, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %24, label %10

10:                                               ; preds = %1
  %11 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 128, i32 0), align 16
  %12 = and i8 %11, 25
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %24, label %14, !prof !4

14:                                               ; preds = %10
  %15 = ptrtoint %"class.base::RunLoop"* %6 to i64
  %16 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #14
  %17 = bitcast %"class.base::TimeTicks"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  %18 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 0, i32 0, i32 0
  %19 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #14
  store i64 %19, i64* %18, align 8
  %20 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 128, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i64 %15, i32 %16, %"class.base::TimeTicks"* nonnull dereferenceable(8) %2, %"class.base::trace_event::TraceArguments"* null, i32 2176) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  %21 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 128, i32 0), align 16
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %24, label %23

23:                                               ; preds = %14
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 128, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0), i64 %20) #14
  br label %24

24:                                               ; preds = %10, %23, %14, %1
  %25 = phi i1 [ false, %1 ], [ true, %14 ], [ true, %23 ], [ true, %10 ]
  ret i1 %25
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base7RunLoop32RegisterDelegateForCurrentThreadEPNS0_8DelegateE(%"class.base::RunLoop::Delegate"*) local_unnamed_addr #0 align 2 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base12_GLOBAL__N_114GetTlsDelegateEvE8instance to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %8, !prof !3

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base12_GLOBAL__N_114GetTlsDelegateEvE8instance) #14
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  store i64 0, i64* bitcast (%"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_114GetTlsDelegateEvE8instance to i64*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_114GetTlsDelegateEvE8instance to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #14
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base12_GLOBAL__N_114GetTlsDelegateEvE8instance) #14
  br label %8

8:                                                ; preds = %1, %4, %7
  %9 = bitcast %"class.base::RunLoop::Delegate"* %0 to i8*
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_114GetTlsDelegateEvE8instance to %"class.base::ThreadLocalStorage::Slot"*), i8* %9) #14
  %10 = getelementptr inbounds %"class.base::RunLoop::Delegate", %"class.base::RunLoop::Delegate"* %0, i64 0, i32 3
  store i8 1, i8* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base7RunLoopC2ENS0_4TypeE(%"class.base::RunLoop"*, i32) unnamed_addr #0 align 2 {
  %3 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base12_GLOBAL__N_114GetTlsDelegateEvE8instance to i8*) acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %9, !prof !3

5:                                                ; preds = %2
  %6 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base12_GLOBAL__N_114GetTlsDelegateEvE8instance) #14
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %5
  store i64 0, i64* bitcast (%"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_114GetTlsDelegateEvE8instance to i64*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_114GetTlsDelegateEvE8instance to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #14
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base12_GLOBAL__N_114GetTlsDelegateEvE8instance) #14
  br label %9

9:                                                ; preds = %2, %5, %8
  %10 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_114GetTlsDelegateEvE8instance to %"class.base::ThreadLocalStorage::Slot"*)) #14
  %11 = bitcast %"class.base::RunLoop"* %0 to i8**
  store i8* %10, i8** %11, align 8
  %12 = getelementptr inbounds %"class.base::RunLoop", %"class.base::RunLoop"* %0, i64 0, i32 1
  store i32 %1, i32* %12, align 8
  %13 = getelementptr inbounds %"class.base::RunLoop", %"class.base::RunLoop"* %0, i64 0, i32 2
  %14 = getelementptr inbounds %"class.base::RunLoop", %"class.base::RunLoop"* %0, i64 0, i32 6
  %15 = bitcast i8* %13 to i32*
  store i32 0, i32* %15, align 4
  store i8 1, i8* %14, align 8
  %16 = tail call dereferenceable(8) %class.scoped_refptr* @_ZN4base22ThreadTaskRunnerHandle3GetEv() #14
  %17 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %16, i64 0, i32 0
  %18 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %17, align 8
  %19 = getelementptr inbounds %"class.base::RunLoop", %"class.base::RunLoop"* %0, i64 0, i32 7, i32 0
  store %"class.base::SingleThreadTaskRunner"* %18, %"class.base::SingleThreadTaskRunner"** %19, align 8
  %20 = icmp eq %"class.base::SingleThreadTaskRunner"* %18, null
  br i1 %20, label %24, label %21

21:                                               ; preds = %9
  %22 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %18, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i32* %22, i32 1 monotonic
  br label %24

24:                                               ; preds = %9, %21
  %25 = getelementptr inbounds %"class.base::RunLoop", %"class.base::RunLoop"* %0, i64 0, i32 8, i32 0
  %26 = ptrtoint %"class.base::RunLoop"* %0 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %25, i64 %26) #14
  ret void
}

declare dereferenceable(8) %class.scoped_refptr* @_ZN4base22ThreadTaskRunnerHandle3GetEv() local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base7RunLoopD2Ev(%"class.base::RunLoop"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::RunLoop", %"class.base::RunLoop"* %0, i64 0, i32 8, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %2) #14
  %3 = getelementptr inbounds %"class.base::RunLoop", %"class.base::RunLoop"* %0, i64 0, i32 7, i32 0
  %4 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %3, align 8
  %5 = icmp eq %"class.base::SingleThreadTaskRunner"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %4, i64 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %14

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %13) #14
  br label %14

14:                                               ; preds = %1, %6, %11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"*, %"class.base::Location"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.base::internal::CancelableCallbackImpl", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.base::Location", align 8
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = tail call zeroext i1 @_ZN4base7RunLoop9BeforeRunEv(%"class.base::RunLoop"* %0)
  br i1 %8, label %9, label %89

9:                                                ; preds = %2
  %10 = bitcast %"class.base::internal::CancelableCallbackImpl"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #14
  %11 = getelementptr inbounds %"class.base::internal::CancelableCallbackImpl", %"class.base::internal::CancelableCallbackImpl"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.base::internal::CancelableCallbackImpl", %"class.base::internal::CancelableCallbackImpl"* %4, i64 0, i32 1
  %13 = bitcast %"class.base::WeakPtrFactory.18"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %11, align 8
  %14 = getelementptr inbounds %"class.base::internal::CancelableCallbackImpl", %"class.base::internal::CancelableCallbackImpl"* %4, i64 0, i32 1, i32 0
  %15 = ptrtoint %"class.base::internal::CancelableCallbackImpl"* %4 to i64
  call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %14, i64 %15) #14
  %16 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base12_GLOBAL__N_117RunLoopTimeoutTLSEvE3tls to i8*) acquire, align 8
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %22, !prof !3

18:                                               ; preds = %9
  %19 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base12_GLOBAL__N_117RunLoopTimeoutTLSEvE3tls) #14
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %22, label %21

21:                                               ; preds = %18
  store i64 0, i64* bitcast (%"class.base::NoDestructor.39"* @_ZZN4base12_GLOBAL__N_117RunLoopTimeoutTLSEvE3tls to i64*), align 8
  call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor.39"* @_ZZN4base12_GLOBAL__N_117RunLoopTimeoutTLSEvE3tls to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #14
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base12_GLOBAL__N_117RunLoopTimeoutTLSEvE3tls) #14
  br label %22

22:                                               ; preds = %9, %18, %21
  %23 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor.39"* @_ZZN4base12_GLOBAL__N_117RunLoopTimeoutTLSEvE3tls to %"class.base::ThreadLocalStorage::Slot"*)) #14
  %24 = icmp eq i8* %23, null
  br i1 %24, label %67, label %25

25:                                               ; preds = %22
  %26 = ptrtoint %"class.base::RunLoop"* %0 to i64
  %27 = getelementptr inbounds i8, i8* %23, i64 8
  %28 = call i8* @_Znwm(i64 88) #15, !noalias !5
  %29 = bitcast i8* %28 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %29, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvPNS_7RunLoopERKNS_8LocationENS_12OnceCallbackIFvS7_EEEEJNS0_17UnretainedWrapperIS3_EES5_NS_17RepeatingCallbackIS9_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvPNS_7RunLoopERKNS_8LocationENS_12OnceCallbackIFvS6_EEEEJNS0_17UnretainedWrapperIS2_EES4_NS_17RepeatingCallbackIS8_EEEE7DestroyEPKNS0_13BindStateBaseE) #14, !noalias !5
  %30 = getelementptr inbounds i8, i8* %28, i64 32
  %31 = bitcast i8* %30 to i64*
  store i64 ptrtoint (void (%"class.base::RunLoop"*, %"class.base::Location"*, %"class.base::OnceCallback.19"*)* @_ZN4base12_GLOBAL__N_116OnRunLoopTimeoutEPNS_7RunLoopERKNS_8LocationENS_12OnceCallbackIFvS5_EEE to i64), i64* %31, align 8, !noalias !5
  %32 = getelementptr inbounds i8, i8* %28, i64 40
  %33 = bitcast i8* %32 to i64*
  store i64 %26, i64* %33, align 8, !noalias !5
  %34 = getelementptr inbounds i8, i8* %28, i64 48
  %35 = bitcast i8* %34 to %"class.base::Location"*
  call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* %35, %"class.base::Location"* dereferenceable(32) %1) #14, !noalias !5
  %36 = getelementptr inbounds i8, i8* %28, i64 80
  %37 = bitcast i8* %36 to %"class.base::internal::CallbackBaseCopyable"*
  %38 = bitcast i8* %27 to %"class.base::internal::CallbackBaseCopyable"*
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* %37, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %38) #14, !noalias !5
  %39 = bitcast %"class.base::OnceCallback"* %5 to i8**
  store i8* %28, i8** %39, align 8, !alias.scope !5
  %40 = getelementptr inbounds %"class.base::internal::CancelableCallbackImpl", %"class.base::internal::CancelableCallbackImpl"* %4, i64 0, i32 1, i32 0, i32 0
  call void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"* %40) #14
  %41 = getelementptr inbounds %"class.base::internal::CancelableCallbackImpl", %"class.base::internal::CancelableCallbackImpl"* %4, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* nonnull %41) #14
  %42 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  %43 = call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* nonnull %41, %"class.base::internal::CallbackBase"* nonnull dereferenceable(8) %42) #14
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %42) #14
  %44 = getelementptr inbounds %"class.base::RunLoop", %"class.base::RunLoop"* %0, i64 0, i32 7, i32 0
  %45 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %44, align 8
  %46 = bitcast %"class.base::SingleThreadTaskRunner"* %45 to %"class.base::TaskRunner"*
  %47 = bitcast %"class.base::Location"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %47) #14
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %6, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 127) #14
  %48 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %11, align 8, !noalias !10
  %49 = icmp eq %"class.base::internal::BindStateBase"* %48, null
  br i1 %49, label %50, label %52

50:                                               ; preds = %25
  %51 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %51, align 8, !alias.scope !10
  br label %59

52:                                               ; preds = %25
  %53 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #14, !noalias !10
  %54 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %54, align 8, !noalias !10
  call void @_ZNK4base8internal22CancelableCallbackImplINS_12OnceCallbackIFvvEEEE13MakeForwarderIJEEEvPNS2_IFvDpT_EEE(%"class.base::internal::CancelableCallbackImpl"* nonnull %4, %"class.base::OnceCallback"* nonnull %3) #14, !noalias !10
  %55 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %56 = load i64, i64* %55, align 8, !noalias !10
  %57 = bitcast %"class.base::OnceCallback"* %7 to i64*
  store i64 %56, i64* %57, align 8, !alias.scope !10
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %54, align 8, !noalias !10
  %58 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %58) #14, !noalias !10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #14, !noalias !10
  br label %59

59:                                               ; preds = %50, %52
  %60 = bitcast i8* %23 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = bitcast %"class.base::SingleThreadTaskRunner"* %45 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %63 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %62, align 8
  %64 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %63, align 8
  %65 = call zeroext i1 %64(%"class.base::TaskRunner"* %46, %"class.base::Location"* nonnull dereferenceable(32) %6, %"class.base::OnceCallback"* nonnull %7, i64 %61) #14
  %66 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %66) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %47) #14
  br label %67

67:                                               ; preds = %22, %59
  %68 = getelementptr inbounds %"class.base::RunLoop", %"class.base::RunLoop"* %0, i64 0, i32 0
  %69 = load %"class.base::RunLoop::Delegate"*, %"class.base::RunLoop::Delegate"** %68, align 8
  %70 = getelementptr inbounds %"class.base::RunLoop::Delegate", %"class.base::RunLoop::Delegate"* %69, i64 0, i32 1
  %71 = getelementptr inbounds %"class.base::RunLoop::Delegate", %"class.base::RunLoop::Delegate"* %69, i64 0, i32 1, i32 0, i32 0, i32 1
  %72 = bitcast %"class.base::RunLoop"*** %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = bitcast %"class.std::__1::stack"* %70 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = sub i64 %73, %75
  %77 = icmp eq i64 %76, 8
  br i1 %77, label %82, label %78

78:                                               ; preds = %67
  %79 = getelementptr inbounds %"class.base::RunLoop", %"class.base::RunLoop"* %0, i64 0, i32 1
  %80 = load i32, i32* %79, align 8
  %81 = icmp eq i32 %80, 1
  br label %82

82:                                               ; preds = %78, %67
  %83 = phi i1 [ true, %67 ], [ %81, %78 ]
  %84 = bitcast %"class.base::RunLoop::Delegate"* %69 to void (%"class.base::RunLoop::Delegate"*, i1, i64)***
  %85 = load void (%"class.base::RunLoop::Delegate"*, i1, i64)**, void (%"class.base::RunLoop::Delegate"*, i1, i64)*** %84, align 8
  %86 = getelementptr inbounds void (%"class.base::RunLoop::Delegate"*, i1, i64)*, void (%"class.base::RunLoop::Delegate"*, i1, i64)** %85, i64 2
  %87 = load void (%"class.base::RunLoop::Delegate"*, i1, i64)*, void (%"class.base::RunLoop::Delegate"*, i1, i64)** %86, align 8
  call void %87(%"class.base::RunLoop::Delegate"* %69, i1 zeroext %83, i64 9223372036854775807) #14
  call void @_ZN4base7RunLoop8AfterRunEv(%"class.base::RunLoop"* %0)
  call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %14) #14
  %88 = getelementptr inbounds %"class.base::internal::CancelableCallbackImpl", %"class.base::internal::CancelableCallbackImpl"* %4, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %88) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #14
  br label %89

89:                                               ; preds = %2, %82
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base7RunLoop9BeforeRunEv(%"class.base::RunLoop"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::TimeTicks", align 8
  %3 = alloca %"class.base::RunLoop"*, align 8
  %4 = alloca %"class.base::ObserverList<base::RunLoop::NestingObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %5 = alloca %"class.base::ObserverList<base::RunLoop::NestingObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %6 = getelementptr inbounds %"class.base::RunLoop", %"class.base::RunLoop"* %0, i64 0, i32 2
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %23, label %9

9:                                                ; preds = %1
  %10 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 128, i32 0), align 16
  %11 = and i8 %10, 25
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %381, label %13, !prof !4

13:                                               ; preds = %9
  %14 = ptrtoint %"class.base::RunLoop"* %0 to i64
  %15 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #14
  %16 = bitcast %"class.base::TimeTicks"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #14
  %17 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 0, i32 0, i32 0
  %18 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #14
  store i64 %18, i64* %17, align 8
  %19 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 128, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.8, i64 0, i64 0), i8* null, i64 0, i64 %14, i32 %15, %"class.base::TimeTicks"* nonnull dereferenceable(8) %2, %"class.base::trace_event::TraceArguments"* null, i32 2176) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #14
  %20 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 128, i32 0), align 16
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %381, label %22

22:                                               ; preds = %13
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 128, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.8, i64 0, i64 0), i64 %19) #14
  br label %381

23:                                               ; preds = %1
  %24 = getelementptr inbounds %"class.base::RunLoop", %"class.base::RunLoop"* %0, i64 0, i32 0
  %25 = load %"class.base::RunLoop::Delegate"*, %"class.base::RunLoop::Delegate"** %24, align 8
  %26 = getelementptr inbounds %"class.base::RunLoop::Delegate", %"class.base::RunLoop::Delegate"* %25, i64 0, i32 1
  %27 = bitcast %"class.base::RunLoop"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #14
  store %"class.base::RunLoop"* %0, %"class.base::RunLoop"** %3, align 8
  call void @_ZNSt3__15stackIPN4base7RunLoopENS_6vectorIS3_NS_9allocatorIS3_EEEEE4pushEOS3_(%"class.std::__1::stack"* %26, %"class.base::RunLoop"** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #14
  %28 = getelementptr inbounds %"class.base::RunLoop::Delegate", %"class.base::RunLoop::Delegate"* %25, i64 0, i32 1, i32 0, i32 0, i32 1
  %29 = bitcast %"class.base::RunLoop"*** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.std::__1::stack"* %26 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %30, %32
  %34 = ashr exact i64 %33, 3
  %35 = icmp ugt i64 %34, 1
  br i1 %35, label %36, label %379

36:                                               ; preds = %23
  %37 = load %"class.base::RunLoop::Delegate"*, %"class.base::RunLoop::Delegate"** %24, align 8
  %38 = getelementptr inbounds %"class.base::RunLoop::Delegate", %"class.base::RunLoop::Delegate"* %37, i64 0, i32 2
  %39 = bitcast %"class.base::ObserverList<base::RunLoop::NestingObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %39) #14
  %40 = getelementptr inbounds %"class.base::ObserverList<base::RunLoop::NestingObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<base::RunLoop::NestingObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %41 = getelementptr inbounds %"class.base::ObserverList<base::RunLoop::NestingObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<base::RunLoop::NestingObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %42 = getelementptr inbounds %"class.base::ObserverList<base::RunLoop::NestingObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<base::RunLoop::NestingObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %43 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %38, i64 0, i32 0, i32 0, i32 0
  %44 = bitcast %"class.base::ObserverList<base::RunLoop::NestingObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 40, i1 false)
  %45 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %43, align 8, !noalias !13
  %46 = getelementptr inbounds %"class.base::RunLoop::Delegate", %"class.base::RunLoop::Delegate"* %37, i64 0, i32 2, i32 0, i32 0, i32 1
  %47 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %46, align 8, !noalias !13
  %48 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %45, %47
  %49 = getelementptr inbounds %"class.base::ObserverList<base::RunLoop::NestingObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<base::RunLoop::NestingObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %49) #14
  br i1 %48, label %50, label %52

50:                                               ; preds = %36
  %51 = bitcast %"class.base::ObserverList"** %40 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 24, i1 false) #14, !alias.scope !13
  br label %92

52:                                               ; preds = %36
  store %"class.base::ObserverList"* %38, %"class.base::ObserverList"** %40, align 8
  %53 = getelementptr inbounds %"class.base::RunLoop::Delegate", %"class.base::RunLoop::Delegate"* %37, i64 0, i32 2, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %49, %"class.base::internal::LinkNodeBase"* %53) #14
  store i64 0, i64* %41, align 8
  %54 = getelementptr inbounds %"class.base::RunLoop::Delegate", %"class.base::RunLoop::Delegate"* %37, i64 0, i32 2, i32 3
  %55 = load i32, i32* %54, align 8
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %64, label %57

57:                                               ; preds = %52
  %58 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %46 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = bitcast %"class.base::ObserverList"* %38 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = sub i64 %59, %61
  %63 = ashr exact i64 %62, 3
  br label %64

64:                                               ; preds = %57, %52
  %65 = phi i64 [ %63, %57 ], [ -1, %52 ]
  store i64 %65, i64* %42, align 8
  %66 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %40, align 8
  %67 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %66, i64 0, i32 0, i32 0, i32 1
  %68 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = bitcast %"class.base::ObserverList"* %66 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = sub i64 %69, %71
  %73 = ashr exact i64 %72, 3
  %74 = icmp ult i64 %73, %65
  %75 = select i1 %74, i64 %73, i64 %65
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %92, label %77

77:                                               ; preds = %64
  %78 = inttoptr i64 %71 to %"class.base::internal::UncheckedObserverAdapter"*
  %79 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %66, i64 0, i32 0, i32 0, i32 0
  %80 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %78, i64 0, i32 0
  %81 = load i8*, i8** %80, align 8
  %82 = icmp eq i8* %81, null
  br i1 %82, label %83, label %92

83:                                               ; preds = %77, %87
  %84 = phi i64 [ %85, %87 ], [ 0, %77 ]
  %85 = add nuw i64 %84, 1
  store i64 %85, i64* %41, align 8
  %86 = icmp ult i64 %85, %75
  br i1 %86, label %87, label %92

87:                                               ; preds = %83
  %88 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %79, align 8
  %89 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %88, i64 %85, i32 0
  %90 = load i8*, i8** %89, align 8
  %91 = icmp eq i8* %90, null
  br i1 %91, label %83, label %92

92:                                               ; preds = %87, %83, %77, %64, %50
  %93 = bitcast %"class.base::ObserverList<base::RunLoop::NestingObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %93) #14
  %94 = getelementptr inbounds %"class.base::ObserverList<base::RunLoop::NestingObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<base::RunLoop::NestingObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 1
  %95 = getelementptr inbounds %"class.base::ObserverList<base::RunLoop::NestingObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<base::RunLoop::NestingObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 1
  %96 = getelementptr inbounds %"class.base::ObserverList<base::RunLoop::NestingObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<base::RunLoop::NestingObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 2
  %97 = getelementptr inbounds %"class.base::ObserverList<base::RunLoop::NestingObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<base::RunLoop::NestingObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 0, i32 0
  %98 = bitcast %"class.base::ObserverList<base::RunLoop::NestingObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %98, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %97) #14
  %99 = bitcast %"class.base::ObserverList"** %94 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %99, i8 0, i64 24, i1 false) #14, !alias.scope !16
  %100 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %40, align 8
  br label %101

101:                                              ; preds = %343, %92
  %102 = phi %"class.base::ObserverList"* [ %100, %92 ], [ %341, %343 ]
  %103 = icmp eq %"class.base::ObserverList"* %102, null
  br i1 %103, label %119, label %104

104:                                              ; preds = %101
  %105 = load i64, i64* %41, align 8
  %106 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %102, i64 0, i32 0, i32 0, i32 1
  %107 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.base::ObserverList"* %102 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = sub i64 %108, %110
  %112 = ashr exact i64 %111, 3
  %113 = load i64, i64* %42, align 8
  %114 = icmp ult i64 %112, %113
  %115 = select i1 %114, i64 %112, i64 %113
  %116 = icmp eq i64 %105, %115
  br i1 %116, label %119, label %117

117:                                              ; preds = %104
  %118 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %94, align 8
  br label %135

119:                                              ; preds = %104, %101
  %120 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %94, align 8
  %121 = icmp eq %"class.base::ObserverList"* %120, null
  br i1 %121, label %235, label %122

122:                                              ; preds = %119
  %123 = load i64, i64* %95, align 8
  %124 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %120, i64 0, i32 0, i32 0, i32 1
  %125 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast %"class.base::ObserverList"* %120 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = sub i64 %126, %128
  %130 = ashr exact i64 %129, 3
  %131 = load i64, i64* %96, align 8
  %132 = icmp ult i64 %130, %131
  %133 = select i1 %132, i64 %130, i64 %131
  %134 = icmp eq i64 %123, %133
  br i1 %134, label %144, label %135

135:                                              ; preds = %122, %117
  %136 = phi %"class.base::ObserverList"* [ %118, %117 ], [ %120, %122 ]
  %137 = icmp eq %"class.base::ObserverList"* %102, %136
  %138 = load i64, i64* %41, align 8
  %139 = load i64, i64* %95, align 8
  %140 = icmp eq i64 %138, %139
  %141 = and i1 %137, %140
  br i1 %141, label %142, label %332

142:                                              ; preds = %135
  %143 = icmp eq %"class.base::ObserverList"* %102, null
  br i1 %143, label %235, label %144

144:                                              ; preds = %122, %142
  %145 = phi %"class.base::ObserverList"* [ %102, %142 ], [ %120, %122 ]
  %146 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %145, i64 0, i32 1
  %147 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %145, i64 0, i32 1, i32 0, i32 0, i32 1
  %148 = bitcast %"class.base::internal::LinkNodeBase"** %147 to %"class.base::LinkNode"**
  %149 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %148, align 8
  %150 = bitcast %"class.base::LinkedList"* %146 to %"class.base::LinkNode"**
  %151 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %150, align 8
  %152 = icmp eq %"class.base::LinkNode"* %149, %151
  br i1 %152, label %153, label %231

153:                                              ; preds = %144
  %154 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %145, i64 0, i32 0, i32 0, i32 0
  %155 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %154, align 8
  %156 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %145, i64 0, i32 0, i32 0, i32 1
  %157 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %156, align 8
  %158 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %155, %157
  br i1 %158, label %167, label %159

159:                                              ; preds = %153, %164
  %160 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %165, %164 ], [ %155, %153 ]
  %161 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %160, i64 0, i32 0
  %162 = load i8*, i8** %161, align 8
  %163 = icmp eq i8* %162, null
  br i1 %163, label %167, label %164

164:                                              ; preds = %159
  %165 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %160, i64 1
  %166 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %165, %157
  br i1 %166, label %231, label %159

167:                                              ; preds = %159, %153
  %168 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %155, %153 ], [ %160, %159 ]
  %169 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %168 to i64
  %170 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %168, %157
  br i1 %170, label %231, label %171

171:                                              ; preds = %167
  %172 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %168, i64 1
  %173 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %172, %157
  br i1 %173, label %226, label %174

174:                                              ; preds = %171
  %175 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %157, i64 -2, i32 0
  %176 = ptrtoint i8** %175 to i64
  %177 = sub i64 %176, %169
  %178 = lshr i64 %177, 3
  %179 = add nuw nsw i64 %178, 1
  %180 = and i64 %179, 3
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %200, label %182

182:                                              ; preds = %174, %195
  %183 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %197, %195 ], [ %172, %174 ]
  %184 = phi i64 [ %196, %195 ], [ %169, %174 ]
  %185 = phi i64 [ %198, %195 ], [ %180, %174 ]
  %186 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %183, i64 0, i32 0
  %187 = load i8*, i8** %186, align 8
  %188 = icmp eq i8* %187, null
  br i1 %188, label %195, label %189

189:                                              ; preds = %182
  %190 = ptrtoint i8* %187 to i64
  %191 = inttoptr i64 %184 to %"class.base::internal::UncheckedObserverAdapter"*
  %192 = inttoptr i64 %184 to i64*
  store i64 %190, i64* %192, align 8
  %193 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %191, i64 1
  %194 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %193 to i64
  br label %195

195:                                              ; preds = %189, %182
  %196 = phi i64 [ %184, %182 ], [ %194, %189 ]
  %197 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %183, i64 1
  %198 = add i64 %185, -1
  %199 = icmp eq i64 %198, 0
  br i1 %199, label %200, label %182, !llvm.loop !19

200:                                              ; preds = %195, %174
  %201 = phi i64 [ undef, %174 ], [ %196, %195 ]
  %202 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %172, %174 ], [ %197, %195 ]
  %203 = phi i64 [ %169, %174 ], [ %196, %195 ]
  %204 = icmp ult i64 %177, 24
  br i1 %204, label %222, label %205

205:                                              ; preds = %200, %443
  %206 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %445, %443 ], [ %202, %200 ]
  %207 = phi i64 [ %444, %443 ], [ %203, %200 ]
  %208 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %206, i64 0, i32 0
  %209 = load i8*, i8** %208, align 8
  %210 = icmp eq i8* %209, null
  br i1 %210, label %217, label %211

211:                                              ; preds = %205
  %212 = ptrtoint i8* %209 to i64
  %213 = inttoptr i64 %207 to %"class.base::internal::UncheckedObserverAdapter"*
  %214 = inttoptr i64 %207 to i64*
  store i64 %212, i64* %214, align 8
  %215 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %213, i64 1
  %216 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %215 to i64
  br label %217

217:                                              ; preds = %211, %205
  %218 = phi i64 [ %207, %205 ], [ %216, %211 ]
  %219 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %206, i64 1, i32 0
  %220 = load i8*, i8** %219, align 8
  %221 = icmp eq i8* %220, null
  br i1 %221, label %421, label %415

222:                                              ; preds = %443, %200
  %223 = phi i64 [ %201, %200 ], [ %444, %443 ]
  %224 = inttoptr i64 %223 to %"class.base::internal::UncheckedObserverAdapter"*
  %225 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %156, align 8
  br label %226

226:                                              ; preds = %222, %171
  %227 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %157, %171 ], [ %225, %222 ]
  %228 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %168, %171 ], [ %224, %222 ]
  %229 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %228, %227
  br i1 %229, label %231, label %230

230:                                              ; preds = %226
  store %"class.base::internal::UncheckedObserverAdapter"* %228, %"class.base::internal::UncheckedObserverAdapter"** %156, align 8
  br label %231

231:                                              ; preds = %164, %230, %226, %167, %144
  %232 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %94, align 8
  %233 = icmp eq %"class.base::ObserverList"* %232, null
  br i1 %233, label %235, label %234

234:                                              ; preds = %231
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %94, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %97) #14
  br label %235

235:                                              ; preds = %119, %142, %231, %234
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %93) #14
  %236 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %40, align 8
  %237 = icmp eq %"class.base::ObserverList"* %236, null
  br i1 %237, label %328, label %238

238:                                              ; preds = %235
  %239 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %236, i64 0, i32 1
  %240 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %236, i64 0, i32 1, i32 0, i32 0, i32 1
  %241 = bitcast %"class.base::internal::LinkNodeBase"** %240 to %"class.base::LinkNode"**
  %242 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %241, align 8
  %243 = bitcast %"class.base::LinkedList"* %239 to %"class.base::LinkNode"**
  %244 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %243, align 8
  %245 = icmp eq %"class.base::LinkNode"* %242, %244
  br i1 %245, label %246, label %324

246:                                              ; preds = %238
  %247 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %236, i64 0, i32 0, i32 0, i32 0
  %248 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %247, align 8
  %249 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %236, i64 0, i32 0, i32 0, i32 1
  %250 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %249, align 8
  %251 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %248, %250
  br i1 %251, label %260, label %252

252:                                              ; preds = %246, %257
  %253 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %258, %257 ], [ %248, %246 ]
  %254 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %253, i64 0, i32 0
  %255 = load i8*, i8** %254, align 8
  %256 = icmp eq i8* %255, null
  br i1 %256, label %260, label %257

257:                                              ; preds = %252
  %258 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %253, i64 1
  %259 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %258, %250
  br i1 %259, label %324, label %252

260:                                              ; preds = %252, %246
  %261 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %248, %246 ], [ %253, %252 ]
  %262 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %261 to i64
  %263 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %261, %250
  br i1 %263, label %324, label %264

264:                                              ; preds = %260
  %265 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %261, i64 1
  %266 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %265, %250
  br i1 %266, label %319, label %267

267:                                              ; preds = %264
  %268 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %250, i64 -2, i32 0
  %269 = ptrtoint i8** %268 to i64
  %270 = sub i64 %269, %262
  %271 = lshr i64 %270, 3
  %272 = add nuw nsw i64 %271, 1
  %273 = and i64 %272, 3
  %274 = icmp eq i64 %273, 0
  br i1 %274, label %293, label %275

275:                                              ; preds = %267, %288
  %276 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %290, %288 ], [ %265, %267 ]
  %277 = phi i64 [ %289, %288 ], [ %262, %267 ]
  %278 = phi i64 [ %291, %288 ], [ %273, %267 ]
  %279 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %276, i64 0, i32 0
  %280 = load i8*, i8** %279, align 8
  %281 = icmp eq i8* %280, null
  br i1 %281, label %288, label %282

282:                                              ; preds = %275
  %283 = ptrtoint i8* %280 to i64
  %284 = inttoptr i64 %277 to %"class.base::internal::UncheckedObserverAdapter"*
  %285 = inttoptr i64 %277 to i64*
  store i64 %283, i64* %285, align 8
  %286 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %284, i64 1
  %287 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %286 to i64
  br label %288

288:                                              ; preds = %282, %275
  %289 = phi i64 [ %277, %275 ], [ %287, %282 ]
  %290 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %276, i64 1
  %291 = add i64 %278, -1
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %293, label %275, !llvm.loop !21

293:                                              ; preds = %288, %267
  %294 = phi i64 [ undef, %267 ], [ %289, %288 ]
  %295 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %265, %267 ], [ %290, %288 ]
  %296 = phi i64 [ %262, %267 ], [ %289, %288 ]
  %297 = icmp ult i64 %270, 24
  br i1 %297, label %315, label %298

298:                                              ; preds = %293, %411
  %299 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %413, %411 ], [ %295, %293 ]
  %300 = phi i64 [ %412, %411 ], [ %296, %293 ]
  %301 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %299, i64 0, i32 0
  %302 = load i8*, i8** %301, align 8
  %303 = icmp eq i8* %302, null
  br i1 %303, label %310, label %304

304:                                              ; preds = %298
  %305 = ptrtoint i8* %302 to i64
  %306 = inttoptr i64 %300 to %"class.base::internal::UncheckedObserverAdapter"*
  %307 = inttoptr i64 %300 to i64*
  store i64 %305, i64* %307, align 8
  %308 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %306, i64 1
  %309 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %308 to i64
  br label %310

310:                                              ; preds = %304, %298
  %311 = phi i64 [ %300, %298 ], [ %309, %304 ]
  %312 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %299, i64 1, i32 0
  %313 = load i8*, i8** %312, align 8
  %314 = icmp eq i8* %313, null
  br i1 %314, label %389, label %383

315:                                              ; preds = %411, %293
  %316 = phi i64 [ %294, %293 ], [ %412, %411 ]
  %317 = inttoptr i64 %316 to %"class.base::internal::UncheckedObserverAdapter"*
  %318 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %249, align 8
  br label %319

319:                                              ; preds = %315, %264
  %320 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %250, %264 ], [ %318, %315 ]
  %321 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %261, %264 ], [ %317, %315 ]
  %322 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %321, %320
  br i1 %322, label %324, label %323

323:                                              ; preds = %319
  store %"class.base::internal::UncheckedObserverAdapter"* %321, %"class.base::internal::UncheckedObserverAdapter"** %249, align 8
  br label %324

324:                                              ; preds = %257, %323, %319, %260, %238
  %325 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %40, align 8
  %326 = icmp eq %"class.base::ObserverList"* %325, null
  br i1 %326, label %328, label %327

327:                                              ; preds = %324
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %40, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %49) #14
  br label %328

328:                                              ; preds = %235, %324, %327
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %39) #14
  %329 = getelementptr inbounds %"class.base::RunLoop", %"class.base::RunLoop"* %0, i64 0, i32 1
  %330 = load i32, i32* %329, align 8
  %331 = icmp eq i32 %330, 1
  br i1 %331, label %373, label %379

332:                                              ; preds = %135
  %333 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %102, i64 0, i32 0, i32 0, i32 0
  %334 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %333, align 8
  %335 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %334, i64 %138
  %336 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %335 to %"class.base::RunLoop::NestingObserver"**
  %337 = load %"class.base::RunLoop::NestingObserver"*, %"class.base::RunLoop::NestingObserver"** %336, align 8
  %338 = bitcast %"class.base::RunLoop::NestingObserver"* %337 to void (%"class.base::RunLoop::NestingObserver"*)***
  %339 = load void (%"class.base::RunLoop::NestingObserver"*)**, void (%"class.base::RunLoop::NestingObserver"*)*** %338, align 8
  %340 = load void (%"class.base::RunLoop::NestingObserver"*)*, void (%"class.base::RunLoop::NestingObserver"*)** %339, align 8
  call void %340(%"class.base::RunLoop::NestingObserver"* %337) #14
  %341 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %40, align 8
  %342 = icmp eq %"class.base::ObserverList"* %341, null
  br i1 %342, label %343, label %344

343:                                              ; preds = %368, %364, %332, %344, %358
  br label %101

344:                                              ; preds = %332
  %345 = load i64, i64* %41, align 8
  %346 = add i64 %345, 1
  store i64 %346, i64* %41, align 8
  %347 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %341, i64 0, i32 0, i32 0, i32 1
  %348 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %347 to i64*
  %349 = load i64, i64* %348, align 8
  %350 = bitcast %"class.base::ObserverList"* %341 to i64*
  %351 = load i64, i64* %350, align 8
  %352 = sub i64 %349, %351
  %353 = ashr exact i64 %352, 3
  %354 = load i64, i64* %42, align 8
  %355 = icmp ult i64 %353, %354
  %356 = select i1 %355, i64 %353, i64 %354
  %357 = icmp ult i64 %346, %356
  br i1 %357, label %358, label %343

358:                                              ; preds = %344
  %359 = inttoptr i64 %351 to %"class.base::internal::UncheckedObserverAdapter"*
  %360 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %341, i64 0, i32 0, i32 0, i32 0
  %361 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %359, i64 %346, i32 0
  %362 = load i8*, i8** %361, align 8
  %363 = icmp eq i8* %362, null
  br i1 %363, label %364, label %343

364:                                              ; preds = %358, %368
  %365 = phi i64 [ %366, %368 ], [ %346, %358 ]
  %366 = add nuw i64 %365, 1
  store i64 %366, i64* %41, align 8
  %367 = icmp ult i64 %366, %356
  br i1 %367, label %368, label %343

368:                                              ; preds = %364
  %369 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %360, align 8
  %370 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %369, i64 %366, i32 0
  %371 = load i8*, i8** %370, align 8
  %372 = icmp eq i8* %371, null
  br i1 %372, label %364, label %343

373:                                              ; preds = %328
  %374 = load %"class.base::RunLoop::Delegate"*, %"class.base::RunLoop::Delegate"** %24, align 8
  %375 = bitcast %"class.base::RunLoop::Delegate"* %374 to void (%"class.base::RunLoop::Delegate"*)***
  %376 = load void (%"class.base::RunLoop::Delegate"*)**, void (%"class.base::RunLoop::Delegate"*)*** %375, align 8
  %377 = getelementptr inbounds void (%"class.base::RunLoop::Delegate"*)*, void (%"class.base::RunLoop::Delegate"*)** %376, i64 4
  %378 = load void (%"class.base::RunLoop::Delegate"*)*, void (%"class.base::RunLoop::Delegate"*)** %377, align 8
  call void %378(%"class.base::RunLoop::Delegate"* %374) #14
  br label %379

379:                                              ; preds = %328, %373, %23
  %380 = getelementptr inbounds %"class.base::RunLoop", %"class.base::RunLoop"* %0, i64 0, i32 3
  store i8 1, i8* %380, align 1
  br label %381

381:                                              ; preds = %9, %22, %13, %379
  %382 = phi i1 [ true, %379 ], [ false, %13 ], [ false, %22 ], [ false, %9 ]
  ret i1 %382

383:                                              ; preds = %310
  %384 = ptrtoint i8* %313 to i64
  %385 = inttoptr i64 %311 to %"class.base::internal::UncheckedObserverAdapter"*
  %386 = inttoptr i64 %311 to i64*
  store i64 %384, i64* %386, align 8
  %387 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %385, i64 1
  %388 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %387 to i64
  br label %389

389:                                              ; preds = %383, %310
  %390 = phi i64 [ %311, %310 ], [ %388, %383 ]
  %391 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %299, i64 2, i32 0
  %392 = load i8*, i8** %391, align 8
  %393 = icmp eq i8* %392, null
  br i1 %393, label %400, label %394

394:                                              ; preds = %389
  %395 = ptrtoint i8* %392 to i64
  %396 = inttoptr i64 %390 to %"class.base::internal::UncheckedObserverAdapter"*
  %397 = inttoptr i64 %390 to i64*
  store i64 %395, i64* %397, align 8
  %398 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %396, i64 1
  %399 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %398 to i64
  br label %400

400:                                              ; preds = %394, %389
  %401 = phi i64 [ %390, %389 ], [ %399, %394 ]
  %402 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %299, i64 3, i32 0
  %403 = load i8*, i8** %402, align 8
  %404 = icmp eq i8* %403, null
  br i1 %404, label %411, label %405

405:                                              ; preds = %400
  %406 = ptrtoint i8* %403 to i64
  %407 = inttoptr i64 %401 to %"class.base::internal::UncheckedObserverAdapter"*
  %408 = inttoptr i64 %401 to i64*
  store i64 %406, i64* %408, align 8
  %409 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %407, i64 1
  %410 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %409 to i64
  br label %411

411:                                              ; preds = %405, %400
  %412 = phi i64 [ %401, %400 ], [ %410, %405 ]
  %413 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %299, i64 4
  %414 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %413, %250
  br i1 %414, label %315, label %298

415:                                              ; preds = %217
  %416 = ptrtoint i8* %220 to i64
  %417 = inttoptr i64 %218 to %"class.base::internal::UncheckedObserverAdapter"*
  %418 = inttoptr i64 %218 to i64*
  store i64 %416, i64* %418, align 8
  %419 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %417, i64 1
  %420 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %419 to i64
  br label %421

421:                                              ; preds = %415, %217
  %422 = phi i64 [ %218, %217 ], [ %420, %415 ]
  %423 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %206, i64 2, i32 0
  %424 = load i8*, i8** %423, align 8
  %425 = icmp eq i8* %424, null
  br i1 %425, label %432, label %426

426:                                              ; preds = %421
  %427 = ptrtoint i8* %424 to i64
  %428 = inttoptr i64 %422 to %"class.base::internal::UncheckedObserverAdapter"*
  %429 = inttoptr i64 %422 to i64*
  store i64 %427, i64* %429, align 8
  %430 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %428, i64 1
  %431 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %430 to i64
  br label %432

432:                                              ; preds = %426, %421
  %433 = phi i64 [ %422, %421 ], [ %431, %426 ]
  %434 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %206, i64 3, i32 0
  %435 = load i8*, i8** %434, align 8
  %436 = icmp eq i8* %435, null
  br i1 %436, label %443, label %437

437:                                              ; preds = %432
  %438 = ptrtoint i8* %435 to i64
  %439 = inttoptr i64 %433 to %"class.base::internal::UncheckedObserverAdapter"*
  %440 = inttoptr i64 %433 to i64*
  store i64 %438, i64* %440, align 8
  %441 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %439, i64 1
  %442 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %441 to i64
  br label %443

443:                                              ; preds = %437, %432
  %444 = phi i64 [ %433, %432 ], [ %442, %437 ]
  %445 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %206, i64 4
  %446 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %445, %157
  br i1 %446, label %222, label %205
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.base::RunLoop::RunLoopTimeout"* @_ZN4base7RunLoop26GetTimeoutForCurrentThreadEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base12_GLOBAL__N_117RunLoopTimeoutTLSEvE3tls to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %7, !prof !3

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base12_GLOBAL__N_117RunLoopTimeoutTLSEvE3tls) #14
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  store i64 0, i64* bitcast (%"class.base::NoDestructor.39"* @_ZZN4base12_GLOBAL__N_117RunLoopTimeoutTLSEvE3tls to i64*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor.39"* @_ZZN4base12_GLOBAL__N_117RunLoopTimeoutTLSEvE3tls to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #14
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base12_GLOBAL__N_117RunLoopTimeoutTLSEvE3tls) #14
  br label %7

7:                                                ; preds = %0, %3, %6
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor.39"* @_ZZN4base12_GLOBAL__N_117RunLoopTimeoutTLSEvE3tls to %"class.base::ThreadLocalStorage::Slot"*)) #14
  %9 = bitcast i8* %8 to %"struct.base::RunLoop::RunLoopTimeout"*
  ret %"struct.base::RunLoop::RunLoopTimeout"* %9
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base12_GLOBAL__N_116OnRunLoopTimeoutEPNS_7RunLoopERKNS_8LocationENS_12OnceCallbackIFvS5_EEE(%"class.base::RunLoop"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback.19"* nocapture) #0 {
  %4 = alloca %"class.base::OnceCallback.19", align 8
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %0)
  %5 = bitcast %"class.base::OnceCallback.19"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.base::OnceCallback.19", %"class.base::OnceCallback.19"* %2, i64 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.base::OnceCallback.19"* %2 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.base::OnceCallback.19"* %4 to i64*
  store i64 %8, i64* %9, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %6, align 8
  %10 = getelementptr inbounds %"class.base::OnceCallback.19", %"class.base::OnceCallback.19"* %4, i64 0, i32 0
  %11 = inttoptr i64 %8 to %"class.base::internal::BindStateBase"*
  %12 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %11, i64 0, i32 1
  %13 = bitcast void ()** %12 to void (%"class.base::internal::BindStateBase"*, %"class.base::Location"*)**
  %14 = load void (%"class.base::internal::BindStateBase"*, %"class.base::Location"*)*, void (%"class.base::internal::BindStateBase"*, %"class.base::Location"*)** %13, align 8
  tail call void %14(%"class.base::internal::BindStateBase"* %11, %"class.base::Location"* dereferenceable(32) %1) #14
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %10) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  ret void
}

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base7RunLoop8AfterRunEv(%"class.base::RunLoop"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::TimeTicks", align 8
  %3 = alloca %"class.base::ObserverList<base::RunLoop::NestingObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = alloca %"class.base::ObserverList<base::RunLoop::NestingObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %5 = getelementptr inbounds %"class.base::RunLoop", %"class.base::RunLoop"* %0, i64 0, i32 3
  store i8 0, i8* %5, align 1
  %6 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 128, i32 0), align 16
  %7 = and i8 %6, 25
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %16, label %9, !prof !4

9:                                                ; preds = %1
  %10 = ptrtoint %"class.base::RunLoop"* %0 to i64
  %11 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #14
  %12 = bitcast %"class.base::TimeTicks"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #14
  %13 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 0, i32 0, i32 0
  %14 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #14
  store i64 %14, i64* %13, align 8
  %15 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 128, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0), i8* null, i64 0, i64 %10, i32 %11, %"class.base::TimeTicks"* nonnull dereferenceable(8) %2, %"class.base::trace_event::TraceArguments"* null, i32 2176) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #14
  br label %16

16:                                               ; preds = %1, %9
  %17 = phi i8* [ null, %1 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 128, i32 0), %9 ]
  %18 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %1 ], [ getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0), %9 ]
  %19 = phi i64 [ -6148914691236517206, %1 ], [ %15, %9 ]
  %20 = getelementptr inbounds %"class.base::RunLoop", %"class.base::RunLoop"* %0, i64 0, i32 0
  %21 = load %"class.base::RunLoop::Delegate"*, %"class.base::RunLoop::Delegate"** %20, align 8
  %22 = getelementptr inbounds %"class.base::RunLoop::Delegate", %"class.base::RunLoop::Delegate"* %21, i64 0, i32 1, i32 0, i32 0, i32 1
  %23 = load %"class.base::RunLoop"**, %"class.base::RunLoop"*** %22, align 8
  %24 = getelementptr inbounds %"class.base::RunLoop"*, %"class.base::RunLoop"** %23, i64 -1
  store %"class.base::RunLoop"** %24, %"class.base::RunLoop"*** %22, align 8
  %25 = getelementptr inbounds %"class.base::RunLoop::Delegate", %"class.base::RunLoop::Delegate"* %21, i64 0, i32 1, i32 0, i32 0, i32 0
  %26 = load %"class.base::RunLoop"**, %"class.base::RunLoop"*** %25, align 8
  %27 = icmp eq %"class.base::RunLoop"** %26, %24
  br i1 %27, label %375, label %28

28:                                               ; preds = %16
  %29 = load %"class.base::RunLoop::Delegate"*, %"class.base::RunLoop::Delegate"** %20, align 8
  %30 = getelementptr inbounds %"class.base::RunLoop::Delegate", %"class.base::RunLoop::Delegate"* %29, i64 0, i32 2
  %31 = bitcast %"class.base::ObserverList<base::RunLoop::NestingObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %31) #14
  %32 = getelementptr inbounds %"class.base::ObserverList<base::RunLoop::NestingObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<base::RunLoop::NestingObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.base::ObserverList<base::RunLoop::NestingObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<base::RunLoop::NestingObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %34 = getelementptr inbounds %"class.base::ObserverList<base::RunLoop::NestingObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<base::RunLoop::NestingObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %35 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %30, i64 0, i32 0, i32 0, i32 0
  %36 = bitcast %"class.base::ObserverList<base::RunLoop::NestingObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 40, i1 false)
  %37 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %35, align 8, !noalias !22
  %38 = getelementptr inbounds %"class.base::RunLoop::Delegate", %"class.base::RunLoop::Delegate"* %29, i64 0, i32 2, i32 0, i32 0, i32 1
  %39 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %38, align 8, !noalias !22
  %40 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %37, %39
  %41 = getelementptr inbounds %"class.base::ObserverList<base::RunLoop::NestingObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<base::RunLoop::NestingObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %41) #14
  br i1 %40, label %42, label %44

42:                                               ; preds = %28
  %43 = bitcast %"class.base::ObserverList"** %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 24, i1 false) #14, !alias.scope !22
  br label %84

44:                                               ; preds = %28
  store %"class.base::ObserverList"* %30, %"class.base::ObserverList"** %32, align 8
  %45 = getelementptr inbounds %"class.base::RunLoop::Delegate", %"class.base::RunLoop::Delegate"* %29, i64 0, i32 2, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %41, %"class.base::internal::LinkNodeBase"* %45) #14
  store i64 0, i64* %33, align 8
  %46 = getelementptr inbounds %"class.base::RunLoop::Delegate", %"class.base::RunLoop::Delegate"* %29, i64 0, i32 2, i32 3
  %47 = load i32, i32* %46, align 8
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %56, label %49

49:                                               ; preds = %44
  %50 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %38 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = bitcast %"class.base::ObserverList"* %30 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = sub i64 %51, %53
  %55 = ashr exact i64 %54, 3
  br label %56

56:                                               ; preds = %49, %44
  %57 = phi i64 [ %55, %49 ], [ -1, %44 ]
  store i64 %57, i64* %34, align 8
  %58 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %32, align 8
  %59 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %58, i64 0, i32 0, i32 0, i32 1
  %60 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = bitcast %"class.base::ObserverList"* %58 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = sub i64 %61, %63
  %65 = ashr exact i64 %64, 3
  %66 = icmp ult i64 %65, %57
  %67 = select i1 %66, i64 %65, i64 %57
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %56
  %70 = inttoptr i64 %63 to %"class.base::internal::UncheckedObserverAdapter"*
  %71 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %58, i64 0, i32 0, i32 0, i32 0
  %72 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %70, i64 0, i32 0
  %73 = load i8*, i8** %72, align 8
  %74 = icmp eq i8* %73, null
  br i1 %74, label %75, label %84

75:                                               ; preds = %69, %79
  %76 = phi i64 [ %77, %79 ], [ 0, %69 ]
  %77 = add nuw i64 %76, 1
  store i64 %77, i64* %33, align 8
  %78 = icmp ult i64 %77, %67
  br i1 %78, label %79, label %84

79:                                               ; preds = %75
  %80 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %71, align 8
  %81 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %80, i64 %77, i32 0
  %82 = load i8*, i8** %81, align 8
  %83 = icmp eq i8* %82, null
  br i1 %83, label %75, label %84

84:                                               ; preds = %79, %75, %69, %56, %42
  %85 = bitcast %"class.base::ObserverList<base::RunLoop::NestingObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %85) #14
  %86 = getelementptr inbounds %"class.base::ObserverList<base::RunLoop::NestingObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<base::RunLoop::NestingObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %87 = getelementptr inbounds %"class.base::ObserverList<base::RunLoop::NestingObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<base::RunLoop::NestingObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %88 = getelementptr inbounds %"class.base::ObserverList<base::RunLoop::NestingObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<base::RunLoop::NestingObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %89 = getelementptr inbounds %"class.base::ObserverList<base::RunLoop::NestingObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<base::RunLoop::NestingObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  %90 = bitcast %"class.base::ObserverList<base::RunLoop::NestingObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %89) #14
  %91 = bitcast %"class.base::ObserverList"** %86 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %91, i8 0, i64 24, i1 false) #14, !alias.scope !25
  %92 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %32, align 8
  br label %93

93:                                               ; preds = %339, %84
  %94 = phi %"class.base::ObserverList"* [ %92, %84 ], [ %337, %339 ]
  %95 = icmp eq %"class.base::ObserverList"* %94, null
  br i1 %95, label %111, label %96

96:                                               ; preds = %93
  %97 = load i64, i64* %33, align 8
  %98 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %94, i64 0, i32 0, i32 0, i32 1
  %99 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %98 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = bitcast %"class.base::ObserverList"* %94 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = sub i64 %100, %102
  %104 = ashr exact i64 %103, 3
  %105 = load i64, i64* %34, align 8
  %106 = icmp ult i64 %104, %105
  %107 = select i1 %106, i64 %104, i64 %105
  %108 = icmp eq i64 %97, %107
  br i1 %108, label %111, label %109

109:                                              ; preds = %96
  %110 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %86, align 8
  br label %127

111:                                              ; preds = %96, %93
  %112 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %86, align 8
  %113 = icmp eq %"class.base::ObserverList"* %112, null
  br i1 %113, label %227, label %114

114:                                              ; preds = %111
  %115 = load i64, i64* %87, align 8
  %116 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %112, i64 0, i32 0, i32 0, i32 1
  %117 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.base::ObserverList"* %112 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = sub i64 %118, %120
  %122 = ashr exact i64 %121, 3
  %123 = load i64, i64* %88, align 8
  %124 = icmp ult i64 %122, %123
  %125 = select i1 %124, i64 %122, i64 %123
  %126 = icmp eq i64 %115, %125
  br i1 %126, label %136, label %127

127:                                              ; preds = %114, %109
  %128 = phi %"class.base::ObserverList"* [ %110, %109 ], [ %112, %114 ]
  %129 = icmp eq %"class.base::ObserverList"* %94, %128
  %130 = load i64, i64* %33, align 8
  %131 = load i64, i64* %87, align 8
  %132 = icmp eq i64 %130, %131
  %133 = and i1 %129, %132
  br i1 %133, label %134, label %327

134:                                              ; preds = %127
  %135 = icmp eq %"class.base::ObserverList"* %94, null
  br i1 %135, label %227, label %136

136:                                              ; preds = %114, %134
  %137 = phi %"class.base::ObserverList"* [ %94, %134 ], [ %112, %114 ]
  %138 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %137, i64 0, i32 1
  %139 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %137, i64 0, i32 1, i32 0, i32 0, i32 1
  %140 = bitcast %"class.base::internal::LinkNodeBase"** %139 to %"class.base::LinkNode"**
  %141 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %140, align 8
  %142 = bitcast %"class.base::LinkedList"* %138 to %"class.base::LinkNode"**
  %143 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %142, align 8
  %144 = icmp eq %"class.base::LinkNode"* %141, %143
  br i1 %144, label %145, label %223

145:                                              ; preds = %136
  %146 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %137, i64 0, i32 0, i32 0, i32 0
  %147 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %146, align 8
  %148 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %137, i64 0, i32 0, i32 0, i32 1
  %149 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %148, align 8
  %150 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %147, %149
  br i1 %150, label %159, label %151

151:                                              ; preds = %145, %156
  %152 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %157, %156 ], [ %147, %145 ]
  %153 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %152, i64 0, i32 0
  %154 = load i8*, i8** %153, align 8
  %155 = icmp eq i8* %154, null
  br i1 %155, label %159, label %156

156:                                              ; preds = %151
  %157 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %152, i64 1
  %158 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %157, %149
  br i1 %158, label %223, label %151

159:                                              ; preds = %151, %145
  %160 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %147, %145 ], [ %152, %151 ]
  %161 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %160 to i64
  %162 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %160, %149
  br i1 %162, label %223, label %163

163:                                              ; preds = %159
  %164 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %160, i64 1
  %165 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %164, %149
  br i1 %165, label %218, label %166

166:                                              ; preds = %163
  %167 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %149, i64 -2, i32 0
  %168 = ptrtoint i8** %167 to i64
  %169 = sub i64 %168, %161
  %170 = lshr i64 %169, 3
  %171 = add nuw nsw i64 %170, 1
  %172 = and i64 %171, 3
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %192, label %174

174:                                              ; preds = %166, %187
  %175 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %189, %187 ], [ %164, %166 ]
  %176 = phi i64 [ %188, %187 ], [ %161, %166 ]
  %177 = phi i64 [ %190, %187 ], [ %172, %166 ]
  %178 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %175, i64 0, i32 0
  %179 = load i8*, i8** %178, align 8
  %180 = icmp eq i8* %179, null
  br i1 %180, label %187, label %181

181:                                              ; preds = %174
  %182 = ptrtoint i8* %179 to i64
  %183 = inttoptr i64 %176 to %"class.base::internal::UncheckedObserverAdapter"*
  %184 = inttoptr i64 %176 to i64*
  store i64 %182, i64* %184, align 8
  %185 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %183, i64 1
  %186 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %185 to i64
  br label %187

187:                                              ; preds = %181, %174
  %188 = phi i64 [ %176, %174 ], [ %186, %181 ]
  %189 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %175, i64 1
  %190 = add i64 %177, -1
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %192, label %174, !llvm.loop !28

192:                                              ; preds = %187, %166
  %193 = phi i64 [ undef, %166 ], [ %188, %187 ]
  %194 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %164, %166 ], [ %189, %187 ]
  %195 = phi i64 [ %161, %166 ], [ %188, %187 ]
  %196 = icmp ult i64 %169, 24
  br i1 %196, label %214, label %197

197:                                              ; preds = %192, %442
  %198 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %444, %442 ], [ %194, %192 ]
  %199 = phi i64 [ %443, %442 ], [ %195, %192 ]
  %200 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %198, i64 0, i32 0
  %201 = load i8*, i8** %200, align 8
  %202 = icmp eq i8* %201, null
  br i1 %202, label %209, label %203

203:                                              ; preds = %197
  %204 = ptrtoint i8* %201 to i64
  %205 = inttoptr i64 %199 to %"class.base::internal::UncheckedObserverAdapter"*
  %206 = inttoptr i64 %199 to i64*
  store i64 %204, i64* %206, align 8
  %207 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %205, i64 1
  %208 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %207 to i64
  br label %209

209:                                              ; preds = %203, %197
  %210 = phi i64 [ %199, %197 ], [ %208, %203 ]
  %211 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %198, i64 1, i32 0
  %212 = load i8*, i8** %211, align 8
  %213 = icmp eq i8* %212, null
  br i1 %213, label %420, label %414

214:                                              ; preds = %442, %192
  %215 = phi i64 [ %193, %192 ], [ %443, %442 ]
  %216 = inttoptr i64 %215 to %"class.base::internal::UncheckedObserverAdapter"*
  %217 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %148, align 8
  br label %218

218:                                              ; preds = %214, %163
  %219 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %149, %163 ], [ %217, %214 ]
  %220 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %160, %163 ], [ %216, %214 ]
  %221 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %220, %219
  br i1 %221, label %223, label %222

222:                                              ; preds = %218
  store %"class.base::internal::UncheckedObserverAdapter"* %220, %"class.base::internal::UncheckedObserverAdapter"** %148, align 8
  br label %223

223:                                              ; preds = %156, %222, %218, %159, %136
  %224 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %86, align 8
  %225 = icmp eq %"class.base::ObserverList"* %224, null
  br i1 %225, label %227, label %226

226:                                              ; preds = %223
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %86, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %89) #14
  br label %227

227:                                              ; preds = %111, %134, %223, %226
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %85) #14
  %228 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %32, align 8
  %229 = icmp eq %"class.base::ObserverList"* %228, null
  br i1 %229, label %320, label %230

230:                                              ; preds = %227
  %231 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %228, i64 0, i32 1
  %232 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %228, i64 0, i32 1, i32 0, i32 0, i32 1
  %233 = bitcast %"class.base::internal::LinkNodeBase"** %232 to %"class.base::LinkNode"**
  %234 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %233, align 8
  %235 = bitcast %"class.base::LinkedList"* %231 to %"class.base::LinkNode"**
  %236 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %235, align 8
  %237 = icmp eq %"class.base::LinkNode"* %234, %236
  br i1 %237, label %238, label %316

238:                                              ; preds = %230
  %239 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %228, i64 0, i32 0, i32 0, i32 0
  %240 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %239, align 8
  %241 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %228, i64 0, i32 0, i32 0, i32 1
  %242 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %241, align 8
  %243 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %240, %242
  br i1 %243, label %252, label %244

244:                                              ; preds = %238, %249
  %245 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %250, %249 ], [ %240, %238 ]
  %246 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %245, i64 0, i32 0
  %247 = load i8*, i8** %246, align 8
  %248 = icmp eq i8* %247, null
  br i1 %248, label %252, label %249

249:                                              ; preds = %244
  %250 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %245, i64 1
  %251 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %250, %242
  br i1 %251, label %316, label %244

252:                                              ; preds = %244, %238
  %253 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %240, %238 ], [ %245, %244 ]
  %254 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %253 to i64
  %255 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %253, %242
  br i1 %255, label %316, label %256

256:                                              ; preds = %252
  %257 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %253, i64 1
  %258 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %257, %242
  br i1 %258, label %311, label %259

259:                                              ; preds = %256
  %260 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %242, i64 -2, i32 0
  %261 = ptrtoint i8** %260 to i64
  %262 = sub i64 %261, %254
  %263 = lshr i64 %262, 3
  %264 = add nuw nsw i64 %263, 1
  %265 = and i64 %264, 3
  %266 = icmp eq i64 %265, 0
  br i1 %266, label %285, label %267

267:                                              ; preds = %259, %280
  %268 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %282, %280 ], [ %257, %259 ]
  %269 = phi i64 [ %281, %280 ], [ %254, %259 ]
  %270 = phi i64 [ %283, %280 ], [ %265, %259 ]
  %271 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %268, i64 0, i32 0
  %272 = load i8*, i8** %271, align 8
  %273 = icmp eq i8* %272, null
  br i1 %273, label %280, label %274

274:                                              ; preds = %267
  %275 = ptrtoint i8* %272 to i64
  %276 = inttoptr i64 %269 to %"class.base::internal::UncheckedObserverAdapter"*
  %277 = inttoptr i64 %269 to i64*
  store i64 %275, i64* %277, align 8
  %278 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %276, i64 1
  %279 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %278 to i64
  br label %280

280:                                              ; preds = %274, %267
  %281 = phi i64 [ %269, %267 ], [ %279, %274 ]
  %282 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %268, i64 1
  %283 = add i64 %270, -1
  %284 = icmp eq i64 %283, 0
  br i1 %284, label %285, label %267, !llvm.loop !29

285:                                              ; preds = %280, %259
  %286 = phi i64 [ undef, %259 ], [ %281, %280 ]
  %287 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %257, %259 ], [ %282, %280 ]
  %288 = phi i64 [ %254, %259 ], [ %281, %280 ]
  %289 = icmp ult i64 %262, 24
  br i1 %289, label %307, label %290

290:                                              ; preds = %285, %410
  %291 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %412, %410 ], [ %287, %285 ]
  %292 = phi i64 [ %411, %410 ], [ %288, %285 ]
  %293 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %291, i64 0, i32 0
  %294 = load i8*, i8** %293, align 8
  %295 = icmp eq i8* %294, null
  br i1 %295, label %302, label %296

296:                                              ; preds = %290
  %297 = ptrtoint i8* %294 to i64
  %298 = inttoptr i64 %292 to %"class.base::internal::UncheckedObserverAdapter"*
  %299 = inttoptr i64 %292 to i64*
  store i64 %297, i64* %299, align 8
  %300 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %298, i64 1
  %301 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %300 to i64
  br label %302

302:                                              ; preds = %296, %290
  %303 = phi i64 [ %292, %290 ], [ %301, %296 ]
  %304 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %291, i64 1, i32 0
  %305 = load i8*, i8** %304, align 8
  %306 = icmp eq i8* %305, null
  br i1 %306, label %388, label %382

307:                                              ; preds = %410, %285
  %308 = phi i64 [ %286, %285 ], [ %411, %410 ]
  %309 = inttoptr i64 %308 to %"class.base::internal::UncheckedObserverAdapter"*
  %310 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %241, align 8
  br label %311

311:                                              ; preds = %307, %256
  %312 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %242, %256 ], [ %310, %307 ]
  %313 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %253, %256 ], [ %309, %307 ]
  %314 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %313, %312
  br i1 %314, label %316, label %315

315:                                              ; preds = %311
  store %"class.base::internal::UncheckedObserverAdapter"* %313, %"class.base::internal::UncheckedObserverAdapter"** %241, align 8
  br label %316

316:                                              ; preds = %249, %315, %311, %252, %230
  %317 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %32, align 8
  %318 = icmp eq %"class.base::ObserverList"* %317, null
  br i1 %318, label %320, label %319

319:                                              ; preds = %316
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %32, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %41) #14
  br label %320

320:                                              ; preds = %227, %316, %319
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %31) #14
  %321 = load %"class.base::RunLoop"**, %"class.base::RunLoop"*** %22, align 8
  %322 = getelementptr inbounds %"class.base::RunLoop"*, %"class.base::RunLoop"** %321, i64 -1
  %323 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %322, align 8
  %324 = getelementptr inbounds %"class.base::RunLoop", %"class.base::RunLoop"* %323, i64 0, i32 2
  %325 = load i8, i8* %324, align 4, !range !2
  %326 = icmp eq i8 %325, 0
  br i1 %326, label %375, label %369

327:                                              ; preds = %127
  %328 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %94, i64 0, i32 0, i32 0, i32 0
  %329 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %328, align 8
  %330 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %329, i64 %130
  %331 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %330 to %"class.base::RunLoop::NestingObserver"**
  %332 = load %"class.base::RunLoop::NestingObserver"*, %"class.base::RunLoop::NestingObserver"** %331, align 8
  %333 = bitcast %"class.base::RunLoop::NestingObserver"* %332 to void (%"class.base::RunLoop::NestingObserver"*)***
  %334 = load void (%"class.base::RunLoop::NestingObserver"*)**, void (%"class.base::RunLoop::NestingObserver"*)*** %333, align 8
  %335 = getelementptr inbounds void (%"class.base::RunLoop::NestingObserver"*)*, void (%"class.base::RunLoop::NestingObserver"*)** %334, i64 1
  %336 = load void (%"class.base::RunLoop::NestingObserver"*)*, void (%"class.base::RunLoop::NestingObserver"*)** %335, align 8
  call void %336(%"class.base::RunLoop::NestingObserver"* %332) #14
  %337 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %32, align 8
  %338 = icmp eq %"class.base::ObserverList"* %337, null
  br i1 %338, label %339, label %340

339:                                              ; preds = %364, %360, %327, %340, %354
  br label %93

340:                                              ; preds = %327
  %341 = load i64, i64* %33, align 8
  %342 = add i64 %341, 1
  store i64 %342, i64* %33, align 8
  %343 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %337, i64 0, i32 0, i32 0, i32 1
  %344 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %343 to i64*
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.base::ObserverList"* %337 to i64*
  %347 = load i64, i64* %346, align 8
  %348 = sub i64 %345, %347
  %349 = ashr exact i64 %348, 3
  %350 = load i64, i64* %34, align 8
  %351 = icmp ult i64 %349, %350
  %352 = select i1 %351, i64 %349, i64 %350
  %353 = icmp ult i64 %342, %352
  br i1 %353, label %354, label %339

354:                                              ; preds = %340
  %355 = inttoptr i64 %347 to %"class.base::internal::UncheckedObserverAdapter"*
  %356 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %337, i64 0, i32 0, i32 0, i32 0
  %357 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %355, i64 %342, i32 0
  %358 = load i8*, i8** %357, align 8
  %359 = icmp eq i8* %358, null
  br i1 %359, label %360, label %339

360:                                              ; preds = %354, %364
  %361 = phi i64 [ %362, %364 ], [ %342, %354 ]
  %362 = add nuw i64 %361, 1
  store i64 %362, i64* %33, align 8
  %363 = icmp ult i64 %362, %352
  br i1 %363, label %364, label %339

364:                                              ; preds = %360
  %365 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %356, align 8
  %366 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %365, i64 %362, i32 0
  %367 = load i8*, i8** %366, align 8
  %368 = icmp eq i8* %367, null
  br i1 %368, label %360, label %339

369:                                              ; preds = %320
  %370 = load %"class.base::RunLoop::Delegate"*, %"class.base::RunLoop::Delegate"** %20, align 8
  %371 = bitcast %"class.base::RunLoop::Delegate"* %370 to void (%"class.base::RunLoop::Delegate"*)***
  %372 = load void (%"class.base::RunLoop::Delegate"*)**, void (%"class.base::RunLoop::Delegate"*)*** %371, align 8
  %373 = getelementptr inbounds void (%"class.base::RunLoop::Delegate"*)*, void (%"class.base::RunLoop::Delegate"*)** %372, i64 3
  %374 = load void (%"class.base::RunLoop::Delegate"*)*, void (%"class.base::RunLoop::Delegate"*)** %373, align 8
  call void %374(%"class.base::RunLoop::Delegate"* %370) #14
  br label %375

375:                                              ; preds = %320, %369, %16
  %376 = icmp eq i8* %17, null
  br i1 %376, label %381, label %377

377:                                              ; preds = %375
  %378 = load i8, i8* %17, align 1
  %379 = icmp eq i8 %378, 0
  br i1 %379, label %381, label %380

380:                                              ; preds = %377
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %17, i8* %18, i64 %19) #14
  br label %381

381:                                              ; preds = %375, %377, %380
  ret void

382:                                              ; preds = %302
  %383 = ptrtoint i8* %305 to i64
  %384 = inttoptr i64 %303 to %"class.base::internal::UncheckedObserverAdapter"*
  %385 = inttoptr i64 %303 to i64*
  store i64 %383, i64* %385, align 8
  %386 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %384, i64 1
  %387 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %386 to i64
  br label %388

388:                                              ; preds = %382, %302
  %389 = phi i64 [ %303, %302 ], [ %387, %382 ]
  %390 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %291, i64 2, i32 0
  %391 = load i8*, i8** %390, align 8
  %392 = icmp eq i8* %391, null
  br i1 %392, label %399, label %393

393:                                              ; preds = %388
  %394 = ptrtoint i8* %391 to i64
  %395 = inttoptr i64 %389 to %"class.base::internal::UncheckedObserverAdapter"*
  %396 = inttoptr i64 %389 to i64*
  store i64 %394, i64* %396, align 8
  %397 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %395, i64 1
  %398 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %397 to i64
  br label %399

399:                                              ; preds = %393, %388
  %400 = phi i64 [ %389, %388 ], [ %398, %393 ]
  %401 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %291, i64 3, i32 0
  %402 = load i8*, i8** %401, align 8
  %403 = icmp eq i8* %402, null
  br i1 %403, label %410, label %404

404:                                              ; preds = %399
  %405 = ptrtoint i8* %402 to i64
  %406 = inttoptr i64 %400 to %"class.base::internal::UncheckedObserverAdapter"*
  %407 = inttoptr i64 %400 to i64*
  store i64 %405, i64* %407, align 8
  %408 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %406, i64 1
  %409 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %408 to i64
  br label %410

410:                                              ; preds = %404, %399
  %411 = phi i64 [ %400, %399 ], [ %409, %404 ]
  %412 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %291, i64 4
  %413 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %412, %242
  br i1 %413, label %307, label %290

414:                                              ; preds = %209
  %415 = ptrtoint i8* %212 to i64
  %416 = inttoptr i64 %210 to %"class.base::internal::UncheckedObserverAdapter"*
  %417 = inttoptr i64 %210 to i64*
  store i64 %415, i64* %417, align 8
  %418 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %416, i64 1
  %419 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %418 to i64
  br label %420

420:                                              ; preds = %414, %209
  %421 = phi i64 [ %210, %209 ], [ %419, %414 ]
  %422 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %198, i64 2, i32 0
  %423 = load i8*, i8** %422, align 8
  %424 = icmp eq i8* %423, null
  br i1 %424, label %431, label %425

425:                                              ; preds = %420
  %426 = ptrtoint i8* %423 to i64
  %427 = inttoptr i64 %421 to %"class.base::internal::UncheckedObserverAdapter"*
  %428 = inttoptr i64 %421 to i64*
  store i64 %426, i64* %428, align 8
  %429 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %427, i64 1
  %430 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %429 to i64
  br label %431

431:                                              ; preds = %425, %420
  %432 = phi i64 [ %421, %420 ], [ %430, %425 ]
  %433 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %198, i64 3, i32 0
  %434 = load i8*, i8** %433, align 8
  %435 = icmp eq i8* %434, null
  br i1 %435, label %442, label %436

436:                                              ; preds = %431
  %437 = ptrtoint i8* %434 to i64
  %438 = inttoptr i64 %432 to %"class.base::internal::UncheckedObserverAdapter"*
  %439 = inttoptr i64 %432 to i64*
  store i64 %437, i64* %439, align 8
  %440 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %438, i64 1
  %441 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %440 to i64
  br label %442

442:                                              ; preds = %436, %431
  %443 = phi i64 [ %432, %431 ], [ %441, %436 ]
  %444 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %198, i64 4
  %445 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %444, %149
  br i1 %445, label %214, label %197
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base7RunLoop12RunUntilIdleEv(%"class.base::RunLoop"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::Location", align 8
  %3 = getelementptr inbounds %"class.base::RunLoop", %"class.base::RunLoop"* %0, i64 0, i32 5
  store i8 1, i8* %3, align 1
  %4 = bitcast %"class.base::Location"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #14
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 143) #14
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* %0, %"class.base::Location"* nonnull dereferenceable(32) %2)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #14
  %5 = getelementptr inbounds %"class.base::RunLoop", %"class.base::RunLoop"* %0, i64 0, i32 2
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %13

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.base::RunLoop", %"class.base::RunLoop"* %0, i64 0, i32 4
  %10 = load i8, i8* %9, align 2, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %13

12:                                               ; preds = %8
  store i8 0, i8* %3, align 1
  br label %13

13:                                               ; preds = %8, %1, %12
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN4base7RunLoop13AnyQuitCalledEv(%"class.base::RunLoop"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.base::RunLoop", %"class.base::RunLoop"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.base::RunLoop", %"class.base::RunLoop"* %0, i64 0, i32 4
  %7 = load i8, i8* %6, align 2, !range !2
  %8 = icmp ne i8 %7, 0
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i1 [ true, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"*) #0 align 2 {
  %2 = alloca %"class.base::TimeTicks", align 8
  %3 = alloca %"class.base::Location", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = getelementptr inbounds %"class.base::RunLoop", %"class.base::RunLoop"* %0, i64 0, i32 7, i32 0
  %6 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %5, align 8
  %7 = bitcast %"class.base::SingleThreadTaskRunner"* %6 to %"class.base::SequencedTaskRunner"*
  %8 = bitcast %"class.base::SingleThreadTaskRunner"* %6 to i1 (%"class.base::SequencedTaskRunner"*)***
  %9 = load i1 (%"class.base::SequencedTaskRunner"*)**, i1 (%"class.base::SequencedTaskRunner"*)*** %8, align 8
  %10 = getelementptr inbounds i1 (%"class.base::SequencedTaskRunner"*)*, i1 (%"class.base::SequencedTaskRunner"*)** %9, i64 5
  %11 = load i1 (%"class.base::SequencedTaskRunner"*)*, i1 (%"class.base::SequencedTaskRunner"*)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.base::SequencedTaskRunner"* %7) #14
  br i1 %12, label %27, label %13

13:                                               ; preds = %1
  %14 = bitcast %"class.base::SingleThreadTaskRunner"** %5 to %"class.base::TaskRunner"**
  %15 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %14, align 8
  %16 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #14
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 160) #14
  %17 = ptrtoint %"class.base::RunLoop"* %0 to i64
  %18 = call i8* @_Znwm(i64 56) #15, !noalias !30
  %19 = bitcast i8* %18 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %19, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMNS_7RunLoopEFvvEJNS0_17UnretainedWrapperIS3_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMNS_7RunLoopEFvvEJNS0_17UnretainedWrapperIS2_EEEE7DestroyEPKNS0_13BindStateBaseE) #14, !noalias !30
  %20 = getelementptr inbounds i8, i8* %18, i64 32
  %21 = bitcast i8* %20 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.base::RunLoop"*)* @_ZN4base7RunLoop4QuitEv to i64), i64 0>, <2 x i64>* %21, align 8, !noalias !30
  %22 = getelementptr inbounds i8, i8* %18, i64 48
  %23 = bitcast i8* %22 to i64*
  store i64 %17, i64* %23, align 8, !noalias !30
  %24 = bitcast %"class.base::OnceCallback"* %4 to i8**
  store i8* %18, i8** %24, align 8, !alias.scope !30
  %25 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %15, %"class.base::Location"* nonnull dereferenceable(32) %3, %"class.base::OnceCallback"* nonnull %4) #14
  %26 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %26) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #14
  br label %65

27:                                               ; preds = %1
  %28 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 128, i32 0), align 16
  %29 = and i8 %28, 25
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %38, label %31, !prof !4

31:                                               ; preds = %27
  %32 = ptrtoint %"class.base::RunLoop"* %0 to i64
  %33 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #14
  %34 = bitcast %"class.base::TimeTicks"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #14
  %35 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 0, i32 0, i32 0
  %36 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #14
  store i64 %36, i64* %35, align 8
  %37 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 128, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i64 0, i64 0), i8* null, i64 0, i64 %32, i32 %33, %"class.base::TimeTicks"* nonnull dereferenceable(8) %2, %"class.base::trace_event::TraceArguments"* null, i32 2432) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #14
  br label %38

38:                                               ; preds = %27, %31
  %39 = phi i8* [ null, %27 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 128, i32 0), %31 ]
  %40 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %27 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i64 0, i64 0), %31 ]
  %41 = phi i64 [ -6148914691236517206, %27 ], [ %37, %31 ]
  %42 = getelementptr inbounds %"class.base::RunLoop", %"class.base::RunLoop"* %0, i64 0, i32 2
  store i8 1, i8* %42, align 4
  %43 = getelementptr inbounds %"class.base::RunLoop", %"class.base::RunLoop"* %0, i64 0, i32 3
  %44 = load i8, i8* %43, align 1, !range !2
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %59, label %46

46:                                               ; preds = %38
  %47 = getelementptr inbounds %"class.base::RunLoop", %"class.base::RunLoop"* %0, i64 0, i32 0
  %48 = load %"class.base::RunLoop::Delegate"*, %"class.base::RunLoop::Delegate"** %47, align 8
  %49 = getelementptr inbounds %"class.base::RunLoop::Delegate", %"class.base::RunLoop::Delegate"* %48, i64 0, i32 1, i32 0, i32 0, i32 1
  %50 = load %"class.base::RunLoop"**, %"class.base::RunLoop"*** %49, align 8
  %51 = getelementptr inbounds %"class.base::RunLoop"*, %"class.base::RunLoop"** %50, i64 -1
  %52 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %51, align 8
  %53 = icmp eq %"class.base::RunLoop"* %52, %0
  br i1 %53, label %54, label %59

54:                                               ; preds = %46
  %55 = bitcast %"class.base::RunLoop::Delegate"* %48 to void (%"class.base::RunLoop::Delegate"*)***
  %56 = load void (%"class.base::RunLoop::Delegate"*)**, void (%"class.base::RunLoop::Delegate"*)*** %55, align 8
  %57 = getelementptr inbounds void (%"class.base::RunLoop::Delegate"*)*, void (%"class.base::RunLoop::Delegate"*)** %56, i64 3
  %58 = load void (%"class.base::RunLoop::Delegate"*)*, void (%"class.base::RunLoop::Delegate"*)** %57, align 8
  call void %58(%"class.base::RunLoop::Delegate"* %48) #14
  br label %59

59:                                               ; preds = %38, %54, %46
  %60 = icmp eq i8* %39, null
  br i1 %60, label %65, label %61

61:                                               ; preds = %59
  %62 = load i8, i8* %39, align 1
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %65, label %64

64:                                               ; preds = %61
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %39, i8* %40, i64 %41) #14
  br label %65

65:                                               ; preds = %64, %61, %59, %13
  ret void
}

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base7RunLoop12QuitWhenIdleEv(%"class.base::RunLoop"*) #0 align 2 {
  %2 = alloca %"class.base::TimeTicks", align 8
  %3 = alloca %"class.base::Location", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = getelementptr inbounds %"class.base::RunLoop", %"class.base::RunLoop"* %0, i64 0, i32 7, i32 0
  %6 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %5, align 8
  %7 = bitcast %"class.base::SingleThreadTaskRunner"* %6 to %"class.base::SequencedTaskRunner"*
  %8 = bitcast %"class.base::SingleThreadTaskRunner"* %6 to i1 (%"class.base::SequencedTaskRunner"*)***
  %9 = load i1 (%"class.base::SequencedTaskRunner"*)**, i1 (%"class.base::SequencedTaskRunner"*)*** %8, align 8
  %10 = getelementptr inbounds i1 (%"class.base::SequencedTaskRunner"*)*, i1 (%"class.base::SequencedTaskRunner"*)** %9, i64 5
  %11 = load i1 (%"class.base::SequencedTaskRunner"*)*, i1 (%"class.base::SequencedTaskRunner"*)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.base::SequencedTaskRunner"* %7) #14
  br i1 %12, label %27, label %13

13:                                               ; preds = %1
  %14 = bitcast %"class.base::SingleThreadTaskRunner"** %5 to %"class.base::TaskRunner"**
  %15 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %14, align 8
  %16 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #14
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 186) #14
  %17 = ptrtoint %"class.base::RunLoop"* %0 to i64
  %18 = call i8* @_Znwm(i64 56) #15, !noalias !35
  %19 = bitcast i8* %18 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %19, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMNS_7RunLoopEFvvEJNS0_17UnretainedWrapperIS3_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMNS_7RunLoopEFvvEJNS0_17UnretainedWrapperIS2_EEEE7DestroyEPKNS0_13BindStateBaseE) #14, !noalias !35
  %20 = getelementptr inbounds i8, i8* %18, i64 32
  %21 = bitcast i8* %20 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.base::RunLoop"*)* @_ZN4base7RunLoop12QuitWhenIdleEv to i64), i64 0>, <2 x i64>* %21, align 8, !noalias !35
  %22 = getelementptr inbounds i8, i8* %18, i64 48
  %23 = bitcast i8* %22 to i64*
  store i64 %17, i64* %23, align 8, !noalias !35
  %24 = bitcast %"class.base::OnceCallback"* %4 to i8**
  store i8* %18, i8** %24, align 8, !alias.scope !35
  %25 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %15, %"class.base::Location"* nonnull dereferenceable(32) %3, %"class.base::OnceCallback"* nonnull %4) #14
  %26 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %26) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #14
  br label %46

27:                                               ; preds = %1
  %28 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 128, i32 0), align 16
  %29 = and i8 %28, 25
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %34, !prof !4

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.base::RunLoop", %"class.base::RunLoop"* %0, i64 0, i32 5
  store i8 1, i8* %32, align 1
  %33 = getelementptr inbounds %"class.base::RunLoop", %"class.base::RunLoop"* %0, i64 0, i32 4
  store i8 1, i8* %33, align 2
  br label %46

34:                                               ; preds = %27
  %35 = ptrtoint %"class.base::RunLoop"* %0 to i64
  %36 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #14
  %37 = bitcast %"class.base::TimeTicks"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #14
  %38 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 0, i32 0, i32 0
  %39 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #14
  store i64 %39, i64* %38, align 8
  %40 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 128, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7, i64 0, i64 0), i8* null, i64 0, i64 %35, i32 %36, %"class.base::TimeTicks"* nonnull dereferenceable(8) %2, %"class.base::trace_event::TraceArguments"* null, i32 2432) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #14
  %41 = getelementptr inbounds %"class.base::RunLoop", %"class.base::RunLoop"* %0, i64 0, i32 5
  store i8 1, i8* %41, align 1
  %42 = getelementptr inbounds %"class.base::RunLoop", %"class.base::RunLoop"* %0, i64 0, i32 4
  store i8 1, i8* %42, align 2
  %43 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 128, i32 0), align 16
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %46, label %45

45:                                               ; preds = %34
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 128, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7, i64 0, i64 0), i64 %40) #14
  br label %46

46:                                               ; preds = %45, %34, %31, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base7RunLoop11QuitClosureEv(%"class.base::RepeatingCallback.20"* noalias nocapture sret, %"class.base::RunLoop"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::internal::WeakReference", align 8
  %4 = alloca %"class.base::RepeatingCallback.20", align 8
  %5 = alloca %"class.base::WeakPtr", align 8
  %6 = getelementptr inbounds %"class.base::RunLoop", %"class.base::RunLoop"* %1, i64 0, i32 6
  store i8 0, i8* %6, align 8
  %7 = bitcast %"class.base::RepeatingCallback.20"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #14
  %8 = bitcast %"class.base::WeakPtr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #14
  %9 = bitcast %"class.base::internal::WeakReference"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #14, !noalias !40
  %10 = getelementptr inbounds %"class.base::RunLoop", %"class.base::RunLoop"* %1, i64 0, i32 8, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %3, %"class.base::internal::WeakReferenceOwner"* %10) #14, !noalias !40
  %11 = getelementptr inbounds %"class.base::RunLoop", %"class.base::RunLoop"* %1, i64 0, i32 8, i32 0, i32 1
  %12 = load i64, i64* %11, align 8, !noalias !40
  %13 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %5, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %13, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %3, i64 %12) #14
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #14, !noalias !40
  %14 = call i8* @_Znwm(i64 64) #15, !noalias !43
  %15 = bitcast i8* %14 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %15, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMNS_7RunLoopEFvvEJNS_7WeakPtrIS3_EEEEEFvvEE3RunEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMNS_7RunLoopEFvvEJNS_7WeakPtrIS2_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMNS_7RunLoopEFvvEJNS_7WeakPtrIS3_EEEEEEEbPKNS0_13BindStateBaseENS9_21CancellationQueryModeE) #14, !noalias !43
  %16 = getelementptr inbounds i8, i8* %14, i64 32
  %17 = bitcast i8* %16 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.base::RunLoop"*)* @_ZN4base7RunLoop4QuitEv to i64), i64 0>, <2 x i64>* %17, align 8, !noalias !43
  %18 = getelementptr inbounds i8, i8* %14, i64 48
  %19 = bitcast i8* %18 to %"class.base::internal::WeakReference"*
  %20 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %19, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %20) #14, !noalias !43
  %21 = getelementptr inbounds i8, i8* %14, i64 56
  %22 = bitcast i8* %21 to i64*
  %23 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %5, i64 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8, !noalias !43
  store i64 %24, i64* %22, align 8, !noalias !43
  %25 = bitcast %"class.base::RepeatingCallback.20"* %4 to i8**
  store i8* %14, i8** %25, align 8, !alias.scope !43
  %26 = call i8* @_Znwm(i64 56) #15, !noalias !48
  %27 = bitcast i8* %26 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %27, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFv13scoped_refptrINS_19SequencedTaskRunnerEENS_12OnceCallbackIFvvEEEEJS3_INS_22SingleThreadTaskRunnerEENS_17RepeatingCallbackIS7_EEEEES7_E3RunEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFv13scoped_refptrINS_19SequencedTaskRunnerEENS_12OnceCallbackIFvvEEEEJS2_INS_22SingleThreadTaskRunnerEENS_17RepeatingCallbackIS6_EEEE7DestroyEPKNS0_13BindStateBaseE) #14, !noalias !48
  %28 = getelementptr inbounds i8, i8* %26, i64 32
  %29 = bitcast i8* %28 to i64*
  store i64 ptrtoint (void (%"class.base::SequencedTaskRunner"*, %"class.base::OnceCallback"*)* @_ZN4base12_GLOBAL__N_117ProxyToTaskRunnerE13scoped_refptrINS_19SequencedTaskRunnerEENS_12OnceCallbackIFvvEEE to i64), i64* %29, align 8, !noalias !48
  %30 = getelementptr inbounds %"class.base::RunLoop", %"class.base::RunLoop"* %1, i64 0, i32 7, i32 0
  %31 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %30, align 8, !noalias !48
  %32 = getelementptr inbounds i8, i8* %26, i64 40
  %33 = bitcast i8* %32 to %"class.base::SingleThreadTaskRunner"**
  store %"class.base::SingleThreadTaskRunner"* %31, %"class.base::SingleThreadTaskRunner"** %33, align 8, !noalias !48
  %34 = icmp eq %"class.base::SingleThreadTaskRunner"* %31, null
  %35 = ptrtoint i8* %14 to i64
  br i1 %34, label %39, label %36

36:                                               ; preds = %2
  %37 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %31, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw add i32* %37, i32 1 monotonic, !noalias !48
  br label %39

39:                                               ; preds = %2, %36
  %40 = getelementptr inbounds i8, i8* %26, i64 48
  %41 = getelementptr inbounds %"class.base::RepeatingCallback.20", %"class.base::RepeatingCallback.20"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %42 = bitcast i8* %40 to i64*
  store i64 %35, i64* %42, align 8, !noalias !48
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %41, align 8, !noalias !48
  %43 = bitcast %"class.base::RepeatingCallback.20"* %0 to i8**
  store i8* %26, i8** %43, align 8, !alias.scope !48
  %44 = getelementptr inbounds %"class.base::RepeatingCallback.20", %"class.base::RepeatingCallback.20"* %4, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %44) #14
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %13) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base12_GLOBAL__N_117ProxyToTaskRunnerE13scoped_refptrINS_19SequencedTaskRunnerEENS_12OnceCallbackIFvvEEE(%"class.base::SequencedTaskRunner"*, %"class.base::OnceCallback"* nocapture) #0 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.base::Location", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = bitcast %"class.base::SequencedTaskRunner"* %0 to i1 (%"class.base::SequencedTaskRunner"*)***
  %7 = load i1 (%"class.base::SequencedTaskRunner"*)**, i1 (%"class.base::SequencedTaskRunner"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.base::SequencedTaskRunner"*)*, i1 (%"class.base::SequencedTaskRunner"*)** %7, i64 5
  %9 = load i1 (%"class.base::SequencedTaskRunner"*)*, i1 (%"class.base::SequencedTaskRunner"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.base::SequencedTaskRunner"* %0) #14
  br i1 %10, label %11, label %22

11:                                               ; preds = %2
  %12 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #14
  %13 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %15, i64* %16, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %13, align 8
  %17 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %18 = inttoptr i64 %15 to %"class.base::internal::BindStateBase"*
  %19 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %18, i64 0, i32 1
  %20 = bitcast void ()** %19 to void (%"class.base::internal::BindStateBase"*)**
  %21 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %20, align 8
  tail call void %21(%"class.base::internal::BindStateBase"* %18) #14
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %17) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #14
  br label %31

22:                                               ; preds = %2
  %23 = bitcast %"class.base::SequencedTaskRunner"* %0 to %"class.base::TaskRunner"*
  %24 = bitcast %"class.base::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #14
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 35) #14
  %25 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %26 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %27, i64* %28, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %25, align 8
  %29 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %23, %"class.base::Location"* nonnull dereferenceable(32) %4, %"class.base::OnceCallback"* nonnull %5) #14
  %30 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %30) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #14
  br label %31

31:                                               ; preds = %22, %11
  %32 = icmp eq %"class.base::SequencedTaskRunner"* %0, null
  br i1 %32, label %41, label %33

33:                                               ; preds = %31
  %34 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %0, i64 0, i32 0, i32 1
  %35 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw sub i32* %35, i32 1 acq_rel
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %41

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %34, i64 -2
  %40 = bitcast %"class.base::RefCountedThreadSafe"* %39 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %40) #14
  br label %41

41:                                               ; preds = %31, %33, %38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base7RunLoop19QuitWhenIdleClosureEv(%"class.base::RepeatingCallback.20"* noalias nocapture sret, %"class.base::RunLoop"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::internal::WeakReference", align 8
  %4 = alloca %"class.base::RepeatingCallback.20", align 8
  %5 = alloca %"class.base::WeakPtr", align 8
  %6 = getelementptr inbounds %"class.base::RunLoop", %"class.base::RunLoop"* %1, i64 0, i32 6
  store i8 0, i8* %6, align 8
  %7 = bitcast %"class.base::RepeatingCallback.20"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #14
  %8 = bitcast %"class.base::WeakPtr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #14
  %9 = bitcast %"class.base::internal::WeakReference"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #14, !noalias !53
  %10 = getelementptr inbounds %"class.base::RunLoop", %"class.base::RunLoop"* %1, i64 0, i32 8, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %3, %"class.base::internal::WeakReferenceOwner"* %10) #14, !noalias !53
  %11 = getelementptr inbounds %"class.base::RunLoop", %"class.base::RunLoop"* %1, i64 0, i32 8, i32 0, i32 1
  %12 = load i64, i64* %11, align 8, !noalias !53
  %13 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %5, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %13, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %3, i64 %12) #14
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #14, !noalias !53
  %14 = call i8* @_Znwm(i64 64) #15, !noalias !56
  %15 = bitcast i8* %14 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %15, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMNS_7RunLoopEFvvEJNS_7WeakPtrIS3_EEEEEFvvEE3RunEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMNS_7RunLoopEFvvEJNS_7WeakPtrIS2_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMNS_7RunLoopEFvvEJNS_7WeakPtrIS3_EEEEEEEbPKNS0_13BindStateBaseENS9_21CancellationQueryModeE) #14, !noalias !56
  %16 = getelementptr inbounds i8, i8* %14, i64 32
  %17 = bitcast i8* %16 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.base::RunLoop"*)* @_ZN4base7RunLoop12QuitWhenIdleEv to i64), i64 0>, <2 x i64>* %17, align 8, !noalias !56
  %18 = getelementptr inbounds i8, i8* %14, i64 48
  %19 = bitcast i8* %18 to %"class.base::internal::WeakReference"*
  %20 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %19, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %20) #14, !noalias !56
  %21 = getelementptr inbounds i8, i8* %14, i64 56
  %22 = bitcast i8* %21 to i64*
  %23 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %5, i64 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8, !noalias !56
  store i64 %24, i64* %22, align 8, !noalias !56
  %25 = bitcast %"class.base::RepeatingCallback.20"* %4 to i8**
  store i8* %14, i8** %25, align 8, !alias.scope !56
  %26 = call i8* @_Znwm(i64 56) #15, !noalias !61
  %27 = bitcast i8* %26 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %27, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFv13scoped_refptrINS_19SequencedTaskRunnerEENS_12OnceCallbackIFvvEEEEJS3_INS_22SingleThreadTaskRunnerEENS_17RepeatingCallbackIS7_EEEEES7_E3RunEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFv13scoped_refptrINS_19SequencedTaskRunnerEENS_12OnceCallbackIFvvEEEEJS2_INS_22SingleThreadTaskRunnerEENS_17RepeatingCallbackIS6_EEEE7DestroyEPKNS0_13BindStateBaseE) #14, !noalias !61
  %28 = getelementptr inbounds i8, i8* %26, i64 32
  %29 = bitcast i8* %28 to i64*
  store i64 ptrtoint (void (%"class.base::SequencedTaskRunner"*, %"class.base::OnceCallback"*)* @_ZN4base12_GLOBAL__N_117ProxyToTaskRunnerE13scoped_refptrINS_19SequencedTaskRunnerEENS_12OnceCallbackIFvvEEE to i64), i64* %29, align 8, !noalias !61
  %30 = getelementptr inbounds %"class.base::RunLoop", %"class.base::RunLoop"* %1, i64 0, i32 7, i32 0
  %31 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %30, align 8, !noalias !61
  %32 = getelementptr inbounds i8, i8* %26, i64 40
  %33 = bitcast i8* %32 to %"class.base::SingleThreadTaskRunner"**
  store %"class.base::SingleThreadTaskRunner"* %31, %"class.base::SingleThreadTaskRunner"** %33, align 8, !noalias !61
  %34 = icmp eq %"class.base::SingleThreadTaskRunner"* %31, null
  %35 = ptrtoint i8* %14 to i64
  br i1 %34, label %39, label %36

36:                                               ; preds = %2
  %37 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %31, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw add i32* %37, i32 1 monotonic, !noalias !61
  br label %39

39:                                               ; preds = %2, %36
  %40 = getelementptr inbounds i8, i8* %26, i64 48
  %41 = getelementptr inbounds %"class.base::RepeatingCallback.20", %"class.base::RepeatingCallback.20"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %42 = bitcast i8* %40 to i64*
  store i64 %35, i64* %42, align 8, !noalias !61
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %41, align 8, !noalias !61
  %43 = bitcast %"class.base::RepeatingCallback.20"* %0 to i8**
  store i8* %26, i8** %43, align 8, !alias.scope !61
  %44 = getelementptr inbounds %"class.base::RepeatingCallback.20", %"class.base::RepeatingCallback.20"* %4, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %44) #14
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %13) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base7RunLoop24IsRunningOnCurrentThreadEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base12_GLOBAL__N_114GetTlsDelegateEvE8instance to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %7, !prof !3

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base12_GLOBAL__N_114GetTlsDelegateEvE8instance) #14
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  store i64 0, i64* bitcast (%"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_114GetTlsDelegateEvE8instance to i64*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_114GetTlsDelegateEvE8instance to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #14
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base12_GLOBAL__N_114GetTlsDelegateEvE8instance) #14
  br label %7

7:                                                ; preds = %0, %3, %6
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_114GetTlsDelegateEvE8instance to %"class.base::ThreadLocalStorage::Slot"*)) #14
  %9 = icmp eq i8* %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds i8, i8* %8, i64 8
  %12 = bitcast i8* %11 to %"class.base::RunLoop"***
  %13 = load %"class.base::RunLoop"**, %"class.base::RunLoop"*** %12, align 8
  %14 = getelementptr inbounds i8, i8* %8, i64 16
  %15 = bitcast i8* %14 to %"class.base::RunLoop"***
  %16 = load %"class.base::RunLoop"**, %"class.base::RunLoop"*** %15, align 8
  %17 = icmp ne %"class.base::RunLoop"** %13, %16
  br label %18

18:                                               ; preds = %7, %10
  %19 = phi i1 [ false, %7 ], [ %17, %10 ]
  ret i1 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base7RunLoop23IsNestedOnCurrentThreadEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base12_GLOBAL__N_114GetTlsDelegateEvE8instance to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %7, !prof !3

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base12_GLOBAL__N_114GetTlsDelegateEvE8instance) #14
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  store i64 0, i64* bitcast (%"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_114GetTlsDelegateEvE8instance to i64*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_114GetTlsDelegateEvE8instance to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #14
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base12_GLOBAL__N_114GetTlsDelegateEvE8instance) #14
  br label %7

7:                                                ; preds = %0, %3, %6
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_114GetTlsDelegateEvE8instance to %"class.base::ThreadLocalStorage::Slot"*)) #14
  %9 = icmp eq i8* %8, null
  br i1 %9, label %20, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds i8, i8* %8, i64 8
  %12 = getelementptr inbounds i8, i8* %8, i64 16
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast i8* %11 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = ashr exact i64 %17, 3
  %19 = icmp ugt i64 %18, 1
  br label %20

20:                                               ; preds = %7, %10
  %21 = phi i1 [ false, %7 ], [ %19, %10 ]
  ret i1 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base7RunLoop33AddNestingObserverOnCurrentThreadEPNS0_15NestingObserverE(%"class.base::RunLoop::NestingObserver"*) local_unnamed_addr #0 align 2 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base12_GLOBAL__N_114GetTlsDelegateEvE8instance to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %8, !prof !3

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base12_GLOBAL__N_114GetTlsDelegateEvE8instance) #14
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  store i64 0, i64* bitcast (%"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_114GetTlsDelegateEvE8instance to i64*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_114GetTlsDelegateEvE8instance to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #14
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base12_GLOBAL__N_114GetTlsDelegateEvE8instance) #14
  br label %8

8:                                                ; preds = %1, %4, %7
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_114GetTlsDelegateEvE8instance to %"class.base::ThreadLocalStorage::Slot"*)) #14
  %10 = getelementptr inbounds i8, i8* %9, i64 32
  %11 = icmp eq %"class.base::RunLoop::NestingObserver"* %0, null
  br i1 %11, label %12, label %16

12:                                               ; preds = %8
  %13 = getelementptr inbounds i8, i8* %9, i64 40
  %14 = bitcast i8* %13 to %"class.base::internal::UncheckedObserverAdapter"**
  %15 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %14, align 8
  br label %35

16:                                               ; preds = %8
  %17 = bitcast i8* %10 to %"class.base::internal::UncheckedObserverAdapter"**
  %18 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %17, align 8
  %19 = getelementptr inbounds i8, i8* %9, i64 40
  %20 = bitcast i8* %19 to %"class.base::internal::UncheckedObserverAdapter"**
  %21 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %20, align 8
  %22 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %18, %21
  %23 = bitcast %"class.base::RunLoop::NestingObserver"* %0 to i8*
  br i1 %22, label %32, label %24

24:                                               ; preds = %16, %29
  %25 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %30, %29 ], [ %18, %16 ]
  %26 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %25, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = icmp eq i8* %27, %23
  br i1 %28, label %32, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %25, i64 1
  %31 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %30, %21
  br i1 %31, label %35, label %24

32:                                               ; preds = %24, %16
  %33 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %18, %16 ], [ %25, %24 ]
  %34 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %33, %21
  br i1 %34, label %35, label %110

35:                                               ; preds = %29, %12, %32
  %36 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %15, %12 ], [ %21, %32 ], [ %21, %29 ]
  %37 = getelementptr inbounds i8, i8* %9, i64 72
  %38 = bitcast i8* %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %38, align 8
  %41 = ptrtoint %"class.base::RunLoop::NestingObserver"* %0 to i64
  %42 = getelementptr inbounds i8, i8* %9, i64 40
  %43 = getelementptr inbounds i8, i8* %9, i64 48
  %44 = bitcast i8* %43 to %"class.base::internal::UncheckedObserverAdapter"**
  %45 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %44, align 8
  %46 = icmp ult %"class.base::internal::UncheckedObserverAdapter"* %36, %45
  %47 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %45 to i64
  br i1 %46, label %48, label %53

48:                                               ; preds = %35
  %49 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %36 to i64*
  store i64 %41, i64* %49, align 8
  %50 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %36, i64 1
  %51 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %50 to i64
  %52 = bitcast i8* %42 to i64*
  store i64 %51, i64* %52, align 8
  br label %110

53:                                               ; preds = %35
  %54 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %36 to i64
  %55 = bitcast i8* %42 to i64*
  %56 = bitcast i8* %10 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = sub i64 %54, %57
  %59 = ashr exact i64 %58, 3
  %60 = add nsw i64 %59, 1
  %61 = icmp ugt i64 %60, 2305843009213693951
  br i1 %61, label %62, label %64

62:                                               ; preds = %53
  %63 = bitcast i8* %10 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %63) #16
  unreachable

64:                                               ; preds = %53
  %65 = bitcast i8* %43 to i64*
  %66 = sub i64 %47, %57
  %67 = ashr exact i64 %66, 3
  %68 = icmp ult i64 %67, 1152921504606846975
  br i1 %68, label %69, label %77

69:                                               ; preds = %64
  %70 = ashr exact i64 %66, 2
  %71 = icmp ult i64 %70, %60
  %72 = select i1 %71, i64 %60, i64 %70
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %82, label %74

74:                                               ; preds = %69
  %75 = icmp ugt i64 %72, 2305843009213693951
  br i1 %75, label %76, label %77

76:                                               ; preds = %74
  tail call void @abort() #16
  unreachable

77:                                               ; preds = %74, %64
  %78 = phi i64 [ %72, %74 ], [ 2305843009213693951, %64 ]
  %79 = shl i64 %78, 3
  %80 = tail call i8* @_Znwm(i64 %79) #15
  %81 = bitcast i8* %80 to %"class.base::internal::UncheckedObserverAdapter"*
  br label %82

82:                                               ; preds = %77, %69
  %83 = phi i64 [ %78, %77 ], [ 0, %69 ]
  %84 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %81, %77 ], [ null, %69 ]
  %85 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %84, i64 %59
  %86 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %84, i64 %83
  %87 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %86 to i64
  %88 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %85 to i64*
  store i64 %41, i64* %88, align 8
  %89 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %85, i64 1
  %90 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %89 to i64
  %91 = bitcast i8* %10 to %"class.base::internal::UncheckedObserverAdapter"**
  %92 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %91, align 8
  %93 = load i64, i64* %55, align 8
  %94 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %92 to i64
  %95 = sub i64 %93, %94
  %96 = ashr exact i64 %95, 3
  %97 = sub nsw i64 0, %96
  %98 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %85, i64 %97
  %99 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %98 to i64
  %100 = icmp sgt i64 %95, 0
  br i1 %100, label %101, label %105

101:                                              ; preds = %82
  %102 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %98 to i8*
  %103 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %92 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %102, i8* align 8 %103, i64 %95, i1 false) #14
  %104 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %91, align 8
  br label %105

105:                                              ; preds = %101, %82
  %106 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %92, %82 ], [ %104, %101 ]
  store i64 %99, i64* %56, align 8
  store i64 %90, i64* %55, align 8
  store i64 %87, i64* %65, align 8
  %107 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %106, null
  br i1 %107, label %110, label %108

108:                                              ; preds = %105
  %109 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %106 to i8*
  tail call void @_ZdlPv(i8* %109) #15
  br label %110

110:                                              ; preds = %108, %105, %48, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base7RunLoop36RemoveNestingObserverOnCurrentThreadEPNS0_15NestingObserverE(%"class.base::RunLoop::NestingObserver"* readnone) local_unnamed_addr #0 align 2 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base12_GLOBAL__N_114GetTlsDelegateEvE8instance to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %8, !prof !3

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base12_GLOBAL__N_114GetTlsDelegateEvE8instance) #14
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  store i64 0, i64* bitcast (%"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_114GetTlsDelegateEvE8instance to i64*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_114GetTlsDelegateEvE8instance to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #14
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base12_GLOBAL__N_114GetTlsDelegateEvE8instance) #14
  br label %8

8:                                                ; preds = %1, %4, %7
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_114GetTlsDelegateEvE8instance to %"class.base::ThreadLocalStorage::Slot"*)) #14
  %10 = getelementptr inbounds i8, i8* %9, i64 32
  %11 = bitcast i8* %10 to %"class.base::internal::UncheckedObserverAdapter"**
  %12 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %11, align 8
  %13 = getelementptr inbounds i8, i8* %9, i64 40
  %14 = bitcast i8* %13 to %"class.base::internal::UncheckedObserverAdapter"**
  %15 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %14, align 8
  %16 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %12, %15
  %17 = bitcast %"class.base::RunLoop::NestingObserver"* %0 to i8*
  %18 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %15 to i64
  br i1 %16, label %27, label %19

19:                                               ; preds = %8, %24
  %20 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %25, %24 ], [ %12, %8 ]
  %21 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %20, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %22, %17
  br i1 %23, label %27, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %20, i64 1
  %26 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %25, %15
  br i1 %26, label %58, label %19

27:                                               ; preds = %19, %8
  %28 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %12, %8 ], [ %20, %19 ]
  %29 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %28, %15
  br i1 %29, label %58, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %28, i64 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds i8, i8* %9, i64 72
  %36 = bitcast i8* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = add i64 %37, -1
  store i64 %38, i64* %36, align 8
  br label %39

39:                                               ; preds = %34, %30
  %40 = getelementptr inbounds i8, i8* %9, i64 64
  %41 = bitcast i8* %40 to %"class.base::LinkNode"**
  %42 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %41, align 8
  %43 = getelementptr inbounds i8, i8* %9, i64 56
  %44 = bitcast i8* %43 to %"class.base::LinkNode"*
  %45 = icmp eq %"class.base::LinkNode"* %42, %44
  br i1 %45, label %46, label %57

46:                                               ; preds = %39
  %47 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %28, i64 1
  %48 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %47 to i64
  %49 = sub i64 %18, %48
  %50 = ashr exact i64 %49, 3
  %51 = icmp eq i64 %49, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %46
  %53 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %28 to i8*
  %54 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %47 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %54, i64 %49, i1 false) #14
  br label %55

55:                                               ; preds = %52, %46
  %56 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %28, i64 %50
  store %"class.base::internal::UncheckedObserverAdapter"* %56, %"class.base::internal::UncheckedObserverAdapter"** %14, align 8
  br label %58

57:                                               ; preds = %39
  store i8* null, i8** %31, align 8
  br label %58

58:                                               ; preds = %24, %27, %55, %57
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base7RunLoop21QuitCurrentDeprecatedEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base12_GLOBAL__N_114GetTlsDelegateEvE8instance to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %7, !prof !3

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base12_GLOBAL__N_114GetTlsDelegateEvE8instance) #14
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  store i64 0, i64* bitcast (%"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_114GetTlsDelegateEvE8instance to i64*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_114GetTlsDelegateEvE8instance to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #14
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base12_GLOBAL__N_114GetTlsDelegateEvE8instance) #14
  br label %7

7:                                                ; preds = %0, %3, %6
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_114GetTlsDelegateEvE8instance to %"class.base::ThreadLocalStorage::Slot"*)) #14
  %9 = getelementptr inbounds i8, i8* %8, i64 16
  %10 = bitcast i8* %9 to %"class.base::RunLoop"***
  %11 = load %"class.base::RunLoop"**, %"class.base::RunLoop"*** %10, align 8
  %12 = getelementptr inbounds %"class.base::RunLoop"*, %"class.base::RunLoop"** %11, i64 -1
  %13 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %12, align 8
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %13)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base7RunLoop29QuitCurrentWhenIdleDeprecatedEv() #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base12_GLOBAL__N_114GetTlsDelegateEvE8instance to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %7, !prof !3

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base12_GLOBAL__N_114GetTlsDelegateEvE8instance) #14
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  store i64 0, i64* bitcast (%"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_114GetTlsDelegateEvE8instance to i64*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_114GetTlsDelegateEvE8instance to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #14
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base12_GLOBAL__N_114GetTlsDelegateEvE8instance) #14
  br label %7

7:                                                ; preds = %0, %3, %6
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_114GetTlsDelegateEvE8instance to %"class.base::ThreadLocalStorage::Slot"*)) #14
  %9 = getelementptr inbounds i8, i8* %8, i64 16
  %10 = bitcast i8* %9 to %"class.base::RunLoop"***
  %11 = load %"class.base::RunLoop"**, %"class.base::RunLoop"*** %10, align 8
  %12 = getelementptr inbounds %"class.base::RunLoop"*, %"class.base::RunLoop"** %11, i64 -1
  %13 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %12, align 8
  tail call void @_ZN4base7RunLoop12QuitWhenIdleEv(%"class.base::RunLoop"* %13)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base7RunLoop36QuitCurrentWhenIdleClosureDeprecatedEv(%"class.base::RepeatingCallback.20"* noalias nocapture sret) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 48) #15, !noalias !66
  %3 = bitcast i8* %2 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %3, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvvEJEEES3_E3RunEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvvEJEE7DestroyEPKNS0_13BindStateBaseE) #14, !noalias !66
  %4 = getelementptr inbounds i8, i8* %2, i64 32
  %5 = bitcast i8* %4 to i64*
  store i64 ptrtoint (void ()* @_ZN4base7RunLoop29QuitCurrentWhenIdleDeprecatedEv to i64), i64* %5, align 8, !noalias !66
  %6 = bitcast %"class.base::RepeatingCallback.20"* %0 to i8**
  store i8* %2, i8** %6, align 8, !alias.scope !66
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN4base7RunLoop21ScopedDisallowRunningC2Ev(%"class.base::RunLoop::ScopedDisallowRunning"* nocapture) unnamed_addr #7 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN4base7RunLoop21ScopedDisallowRunningD2Ev(%"class.base::RunLoop::ScopedDisallowRunning"* nocapture) unnamed_addr #7 align 2 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4base7RunLoop14RunLoopTimeoutC2Ev(%"struct.base::RunLoop::RunLoopTimeout"* nocapture) unnamed_addr #8 align 2 {
  %2 = bitcast %"struct.base::RunLoop::RunLoopTimeout"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base7RunLoop14RunLoopTimeoutD2Ev(%"struct.base::RunLoop::RunLoopTimeout"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.base::RunLoop::RunLoopTimeout", %"struct.base::RunLoop::RunLoopTimeout"* %0, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base7RunLoop26SetTimeoutForCurrentThreadEPKNS0_14RunLoopTimeoutE(%"struct.base::RunLoop::RunLoopTimeout"*) local_unnamed_addr #0 align 2 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base12_GLOBAL__N_117RunLoopTimeoutTLSEvE3tls to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %8, !prof !3

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base12_GLOBAL__N_117RunLoopTimeoutTLSEvE3tls) #14
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  store i64 0, i64* bitcast (%"class.base::NoDestructor.39"* @_ZZN4base12_GLOBAL__N_117RunLoopTimeoutTLSEvE3tls to i64*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor.39"* @_ZZN4base12_GLOBAL__N_117RunLoopTimeoutTLSEvE3tls to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #14
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base12_GLOBAL__N_117RunLoopTimeoutTLSEvE3tls) #14
  br label %8

8:                                                ; preds = %1, %4, %7
  %9 = bitcast %"struct.base::RunLoop::RunLoopTimeout"* %0 to i8*
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor.39"* @_ZZN4base12_GLOBAL__N_117RunLoopTimeoutTLSEvE3tls to %"class.base::ThreadLocalStorage::Slot"*), i8* %9) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15stackIPN4base7RunLoopENS_6vectorIS3_NS_9allocatorIS3_EEEEE4pushEOS3_(%"class.std::__1::stack"*, %"class.base::RunLoop"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load %"class.base::RunLoop"**, %"class.base::RunLoop"*** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %6 = load %"class.base::RunLoop"**, %"class.base::RunLoop"*** %5, align 8
  %7 = icmp ult %"class.base::RunLoop"** %4, %6
  %8 = ptrtoint %"class.base::RunLoop"** %6 to i64
  br i1 %7, label %9, label %16

9:                                                ; preds = %2
  %10 = bitcast %"class.base::RunLoop"** %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::RunLoop"** %4 to i64*
  store i64 %11, i64* %12, align 8
  %13 = getelementptr inbounds %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, i64 1
  %14 = ptrtoint %"class.base::RunLoop"** %13 to i64
  %15 = bitcast %"class.base::RunLoop"*** %3 to i64*
  store i64 %14, i64* %15, align 8
  br label %75

16:                                               ; preds = %2
  %17 = ptrtoint %"class.base::RunLoop"** %4 to i64
  %18 = bitcast %"class.base::RunLoop"*** %3 to i64*
  %19 = bitcast %"class.std::__1::stack"* %0 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %17, %20
  %22 = ashr exact i64 %21, 3
  %23 = add nsw i64 %22, 1
  %24 = icmp ugt i64 %23, 2305843009213693951
  br i1 %24, label %25, label %27

25:                                               ; preds = %16
  %26 = bitcast %"class.std::__1::stack"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %26) #16
  unreachable

27:                                               ; preds = %16
  %28 = bitcast %"class.base::RunLoop"*** %5 to i64*
  %29 = sub i64 %8, %20
  %30 = ashr exact i64 %29, 3
  %31 = icmp ult i64 %30, 1152921504606846975
  br i1 %31, label %32, label %40

32:                                               ; preds = %27
  %33 = ashr exact i64 %29, 2
  %34 = icmp ult i64 %33, %23
  %35 = select i1 %34, i64 %23, i64 %33
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %45, label %37

37:                                               ; preds = %32
  %38 = icmp ugt i64 %35, 2305843009213693951
  br i1 %38, label %39, label %40

39:                                               ; preds = %37
  tail call void @abort() #16
  unreachable

40:                                               ; preds = %37, %27
  %41 = phi i64 [ %35, %37 ], [ 2305843009213693951, %27 ]
  %42 = shl i64 %41, 3
  %43 = tail call i8* @_Znwm(i64 %42) #15
  %44 = bitcast i8* %43 to %"class.base::RunLoop"**
  br label %45

45:                                               ; preds = %40, %32
  %46 = phi i64 [ %41, %40 ], [ 0, %32 ]
  %47 = phi %"class.base::RunLoop"** [ %44, %40 ], [ null, %32 ]
  %48 = getelementptr inbounds %"class.base::RunLoop"*, %"class.base::RunLoop"** %47, i64 %22
  %49 = getelementptr inbounds %"class.base::RunLoop"*, %"class.base::RunLoop"** %47, i64 %46
  %50 = ptrtoint %"class.base::RunLoop"** %49 to i64
  %51 = bitcast %"class.base::RunLoop"** %1 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %"class.base::RunLoop"** %48 to i64*
  store i64 %52, i64* %53, align 8
  %54 = getelementptr inbounds %"class.base::RunLoop"*, %"class.base::RunLoop"** %48, i64 1
  %55 = ptrtoint %"class.base::RunLoop"** %54 to i64
  %56 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %0, i64 0, i32 0, i32 0, i32 0
  %57 = load %"class.base::RunLoop"**, %"class.base::RunLoop"*** %56, align 8
  %58 = load i64, i64* %18, align 8
  %59 = ptrtoint %"class.base::RunLoop"** %57 to i64
  %60 = sub i64 %58, %59
  %61 = ashr exact i64 %60, 3
  %62 = sub nsw i64 0, %61
  %63 = getelementptr inbounds %"class.base::RunLoop"*, %"class.base::RunLoop"** %48, i64 %62
  %64 = ptrtoint %"class.base::RunLoop"** %63 to i64
  %65 = icmp sgt i64 %60, 0
  br i1 %65, label %66, label %70

66:                                               ; preds = %45
  %67 = bitcast %"class.base::RunLoop"** %63 to i8*
  %68 = bitcast %"class.base::RunLoop"** %57 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* align 8 %68, i64 %60, i1 false) #14
  %69 = load %"class.base::RunLoop"**, %"class.base::RunLoop"*** %56, align 8
  br label %70

70:                                               ; preds = %66, %45
  %71 = phi %"class.base::RunLoop"** [ %57, %45 ], [ %69, %66 ]
  store i64 %64, i64* %19, align 8
  store i64 %55, i64* %18, align 8
  store i64 %50, i64* %28, align 8
  %72 = icmp eq %"class.base::RunLoop"** %71, null
  br i1 %72, label %75, label %73

73:                                               ; preds = %70
  %74 = bitcast %"class.base::RunLoop"** %71 to i8*
  tail call void @_ZdlPv(i8* %74) #15
  br label %75

75:                                               ; preds = %9, %70, %73
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #9

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #9

declare void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"*, void (i8*)*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #4

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #4

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #4

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #4

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #5

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #4

declare void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) unnamed_addr #4

declare void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"*) local_unnamed_addr #4

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #4

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #4

declare void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"*) local_unnamed_addr #4

declare void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBase"* dereferenceable(8)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvPNS_7RunLoopERKNS_8LocationENS_12OnceCallbackIFvS7_EEEEJNS0_17UnretainedWrapperIS3_EES5_NS_17RepeatingCallbackIS9_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.base::OnceCallback.19", align 8
  %3 = alloca %"class.base::RepeatingCallback", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to void (%"class.base::RunLoop"*, %"class.base::Location"*, %"class.base::OnceCallback.19"*)**
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to %"class.base::RunLoop"**
  %8 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %7, align 8
  %9 = getelementptr inbounds void ()*, void ()** %6, i64 1
  %10 = bitcast void ()** %9 to %"class.base::Location"*
  %11 = getelementptr inbounds void ()*, void ()** %6, i64 5
  %12 = bitcast %"class.base::OnceCallback.19"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #14
  %13 = bitcast %"class.base::RepeatingCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #14
  %14 = load void (%"class.base::RunLoop"*, %"class.base::Location"*, %"class.base::OnceCallback.19"*)*, void (%"class.base::RunLoop"*, %"class.base::Location"*, %"class.base::OnceCallback.19"*)** %5, align 8
  %15 = bitcast void ()** %11 to %"class.base::internal::BindStateBase"**
  %16 = bitcast void ()** %11 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.base::RepeatingCallback"* %3 to i64*
  store i64 %17, i64* %18, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %15, align 8
  %19 = getelementptr inbounds %"class.base::OnceCallback.19", %"class.base::OnceCallback.19"* %2, i64 0, i32 0
  %20 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseC2EONS0_20CallbackBaseCopyableE(%"class.base::internal::CallbackBase"* nonnull %19, %"class.base::internal::CallbackBaseCopyable"* nonnull dereferenceable(8) %20) #14
  call void %14(%"class.base::RunLoop"* %8, %"class.base::Location"* dereferenceable(32) %10, %"class.base::OnceCallback.19"* nonnull %2) #14
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %19) #14
  %21 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %3, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %21) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #14
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseC2EONS0_20CallbackBaseCopyableE(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvPNS_7RunLoopERKNS_8LocationENS_12OnceCallbackIFvS6_EEEEJNS0_17UnretainedWrapperIS2_EES4_NS_17RepeatingCallbackIS8_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #14
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #15
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #4

declare void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"*, %"class.base::Location"* dereferenceable(32)) unnamed_addr #4

declare void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4base8internal22CancelableCallbackImplINS_12OnceCallbackIFvvEEEE13MakeForwarderIJEEEvPNS2_IFvDpT_EEE(%"class.base::internal::CancelableCallbackImpl"*, %"class.base::OnceCallback"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.base::internal::WeakReference", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.base::WeakPtr.45", align 8
  %6 = bitcast %"class.base::OnceCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  %7 = bitcast %"class.base::WeakPtr.45"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #14
  %8 = bitcast %"class.base::internal::WeakReference"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #14, !noalias !71
  %9 = getelementptr inbounds %"class.base::internal::CancelableCallbackImpl", %"class.base::internal::CancelableCallbackImpl"* %0, i64 0, i32 1, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %3, %"class.base::internal::WeakReferenceOwner"* %9) #14, !noalias !71
  %10 = getelementptr inbounds %"class.base::internal::CancelableCallbackImpl", %"class.base::internal::CancelableCallbackImpl"* %0, i64 0, i32 1, i32 0, i32 1
  %11 = load i64, i64* %10, align 8, !noalias !71
  %12 = getelementptr inbounds %"class.base::WeakPtr.45", %"class.base::WeakPtr.45"* %5, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %12, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %3, i64 %11) #14
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #14, !noalias !71
  %13 = call i8* @_Znwm(i64 64) #15, !noalias !74
  %14 = bitcast i8* %13 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %14, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMNS0_22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS7_EEEEES5_E7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMNS0_22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS6_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMNS0_22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS7_EEEEEEEbPKNS0_13BindStateBaseENSD_21CancellationQueryModeE) #14, !noalias !74
  %15 = getelementptr inbounds i8, i8* %13, i64 32
  %16 = bitcast i8* %15 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.base::internal::CancelableCallbackImpl"*)* @_ZN4base8internal22CancelableCallbackImplINS_12OnceCallbackIFvvEEEE11ForwardOnceIJEEEvDpT_ to i64), i64 0>, <2 x i64>* %16, align 8, !noalias !74
  %17 = getelementptr inbounds i8, i8* %13, i64 48
  %18 = bitcast i8* %17 to %"class.base::internal::WeakReference"*
  %19 = getelementptr inbounds %"class.base::WeakPtr.45", %"class.base::WeakPtr.45"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %18, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %19) #14, !noalias !74
  %20 = getelementptr inbounds i8, i8* %13, i64 56
  %21 = bitcast i8* %20 to i64*
  %22 = getelementptr inbounds %"class.base::WeakPtr.45", %"class.base::WeakPtr.45"* %5, i64 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8, !noalias !74
  store i64 %23, i64* %21, align 8, !noalias !74
  %24 = bitcast %"class.base::OnceCallback"* %4 to i8**
  store i8* %13, i8** %24, align 8, !alias.scope !74
  %25 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0
  %26 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  %27 = call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %25, %"class.base::internal::CallbackBase"* nonnull dereferenceable(8) %26) #14
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %26) #14
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %12) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal22CancelableCallbackImplINS_12OnceCallbackIFvvEEEE11ForwardOnceIJEEEvDpT_(%"class.base::internal::CancelableCallbackImpl"*) #0 comdat align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = getelementptr inbounds %"class.base::internal::CancelableCallbackImpl", %"class.base::internal::CancelableCallbackImpl"* %0, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"* %3) #14
  %4 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #14
  %5 = getelementptr inbounds %"class.base::internal::CancelableCallbackImpl", %"class.base::internal::CancelableCallbackImpl"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = bitcast %"class.base::internal::CancelableCallbackImpl"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %7, i64* %8, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %5, align 8
  %9 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  %10 = inttoptr i64 %7 to %"class.base::internal::BindStateBase"*
  %11 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %10, i64 0, i32 1
  %12 = bitcast void ()** %11 to void (%"class.base::internal::BindStateBase"*)**
  %13 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %12, align 8
  tail call void %13(%"class.base::internal::BindStateBase"* %10) #14
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %9) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #14
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMNS0_22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS7_EEEEES5_E7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #14
  br i1 %6, label %7, label %42

7:                                                ; preds = %1
  %8 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to %"class.base::internal::CancelableCallbackImpl"**
  %10 = load %"class.base::internal::CancelableCallbackImpl"*, %"class.base::internal::CancelableCallbackImpl"** %9, align 8
  %11 = icmp eq %"class.base::internal::CancelableCallbackImpl"* %10, null
  br i1 %11, label %42, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %16 = bitcast void ()** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #14
  br i1 %18, label %22, label %19

19:                                               ; preds = %12
  %20 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #14
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.11, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12, i64 0, i64 0)) #14
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #14
  br label %22

22:                                               ; preds = %19, %12
  %23 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #14
  %24 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = select i1 %23, i8* %25, i8* null
  %27 = getelementptr inbounds i8, i8* %26, i64 %17
  %28 = bitcast i8* %27 to %"class.base::internal::CancelableCallbackImpl"*
  %29 = and i64 %14, 1
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %22
  %32 = bitcast i8* %27 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = add i64 %14, -1
  %35 = getelementptr i8, i8* %33, i64 %34
  %36 = bitcast i8* %35 to void (%"class.base::internal::CancelableCallbackImpl"*)**
  %37 = load void (%"class.base::internal::CancelableCallbackImpl"*)*, void (%"class.base::internal::CancelableCallbackImpl"*)** %36, align 8
  br label %40

38:                                               ; preds = %22
  %39 = inttoptr i64 %14 to void (%"class.base::internal::CancelableCallbackImpl"*)*
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi void (%"class.base::internal::CancelableCallbackImpl"*)* [ %37, %31 ], [ %39, %38 ]
  call void %41(%"class.base::internal::CancelableCallbackImpl"* %28) #14
  br label %42

42:                                               ; preds = %1, %7, %40
  ret void
}

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #4

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMNS0_22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS6_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #14
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #15
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMNS0_22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS7_EEEEEEEbPKNS0_13BindStateBaseENSD_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #14
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.base::internal::CancelableCallbackImpl"**
  %9 = load %"class.base::internal::CancelableCallbackImpl"*, %"class.base::internal::CancelableCallbackImpl"** %8, align 8
  %10 = icmp ne %"class.base::internal::CancelableCallbackImpl"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #14
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #4

declare zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #5

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #5

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMNS_7RunLoopEFvvEJNS0_17UnretainedWrapperIS3_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 %10
  %12 = bitcast i8* %11 to %"class.base::RunLoop"*
  %13 = and i64 %7, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %7, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.base::RunLoop"*)**
  %21 = load void (%"class.base::RunLoop"*)*, void (%"class.base::RunLoop"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %7 to void (%"class.base::RunLoop"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.base::RunLoop"*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%"class.base::RunLoop"* %12) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMNS_7RunLoopEFvvEJNS0_17UnretainedWrapperIS2_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #15
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMNS_7RunLoopEFvvEJNS_7WeakPtrIS3_EEEEEFvvEE3RunEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #14
  br i1 %6, label %7, label %42

7:                                                ; preds = %1
  %8 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to %"class.base::RunLoop"**
  %10 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %9, align 8
  %11 = icmp eq %"class.base::RunLoop"* %10, null
  br i1 %11, label %42, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %16 = bitcast void ()** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #14
  br i1 %18, label %22, label %19

19:                                               ; preds = %12
  %20 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #14
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.11, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12, i64 0, i64 0)) #14
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #14
  br label %22

22:                                               ; preds = %19, %12
  %23 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #14
  %24 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = select i1 %23, i8* %25, i8* null
  %27 = getelementptr inbounds i8, i8* %26, i64 %17
  %28 = bitcast i8* %27 to %"class.base::RunLoop"*
  %29 = and i64 %14, 1
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %22
  %32 = bitcast i8* %27 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = add i64 %14, -1
  %35 = getelementptr i8, i8* %33, i64 %34
  %36 = bitcast i8* %35 to void (%"class.base::RunLoop"*)**
  %37 = load void (%"class.base::RunLoop"*)*, void (%"class.base::RunLoop"*)** %36, align 8
  br label %40

38:                                               ; preds = %22
  %39 = inttoptr i64 %14 to void (%"class.base::RunLoop"*)*
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi void (%"class.base::RunLoop"*)* [ %37, %31 ], [ %39, %38 ]
  call void %41(%"class.base::RunLoop"* %28) #14
  br label %42

42:                                               ; preds = %1, %7, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMNS_7RunLoopEFvvEJNS_7WeakPtrIS2_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #14
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #15
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMNS_7RunLoopEFvvEJNS_7WeakPtrIS3_EEEEEEEbPKNS0_13BindStateBaseENS9_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #14
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.base::RunLoop"**
  %9 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %8, align 8
  %10 = icmp ne %"class.base::RunLoop"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #14
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFv13scoped_refptrINS_19SequencedTaskRunnerEENS_12OnceCallbackIFvvEEEEJS3_INS_22SingleThreadTaskRunnerEENS_17RepeatingCallbackIS7_EEEEES7_E3RunEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = alloca %"class.base::RepeatingCallback.20", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to void (%"class.base::SequencedTaskRunner"*, %"class.base::OnceCallback"*)**
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #14
  %8 = bitcast %"class.base::RepeatingCallback.20"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #14
  %9 = load void (%"class.base::SequencedTaskRunner"*, %"class.base::OnceCallback"*)*, void (%"class.base::SequencedTaskRunner"*, %"class.base::OnceCallback"*)** %5, align 8
  %10 = bitcast void ()** %6 to %"class.base::SequencedTaskRunner"**
  %11 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %10, align 8
  %12 = icmp eq %"class.base::SequencedTaskRunner"* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %11, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw add i32* %14, i32 1 monotonic
  br label %16

16:                                               ; preds = %1, %13
  %17 = getelementptr inbounds %"class.base::RepeatingCallback.20", %"class.base::RepeatingCallback.20"* %3, i64 0, i32 0
  %18 = getelementptr inbounds void ()*, void ()** %6, i64 1
  %19 = bitcast void ()** %18 to %"class.base::internal::CallbackBaseCopyable"*
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* nonnull %17, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %19) #14
  %20 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseC2EONS0_20CallbackBaseCopyableE(%"class.base::internal::CallbackBase"* nonnull %20, %"class.base::internal::CallbackBaseCopyable"* nonnull dereferenceable(8) %17) #14
  call void %9(%"class.base::SequencedTaskRunner"* %11, %"class.base::OnceCallback"* nonnull %2) #14
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %20) #14
  %21 = getelementptr inbounds %"class.base::RepeatingCallback.20", %"class.base::RepeatingCallback.20"* %3, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %21) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFv13scoped_refptrINS_19SequencedTaskRunnerEENS_12OnceCallbackIFvvEEEEJS2_INS_22SingleThreadTaskRunnerEENS_17RepeatingCallbackIS6_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %20, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #14
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to %"class.base::SingleThreadTaskRunner"**
  %8 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %7, align 8
  %9 = icmp eq %"class.base::SingleThreadTaskRunner"* %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %8, i64 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw sub i32* %12, i32 1 acq_rel
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %18

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %11, i64 -2
  %17 = bitcast %"class.base::RefCountedThreadSafe"* %16 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %17) #14
  br label %18

18:                                               ; preds = %3, %10, %15
  %19 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %19) #15
  br label %20

20:                                               ; preds = %18, %1
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #12

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #13

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvvEJEEES3_E3RunEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = bitcast %"class.base::internal::BindStateBase"* %2 to void ()**
  %4 = load void ()*, void ()** %3, align 8
  tail call void %4() #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvvEJEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #15
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"*) unnamed_addr #4

declare void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind }
attributes #15 = { builtin nounwind }
attributes #16 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 1048575}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!6, !8}
!6 = distinct !{!6, !7, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvPNS_7RunLoopERKNS_8LocationENS2_IFvS7_EEEEJNS0_17UnretainedWrapperIS3_EES7_RKNS_17RepeatingCallbackIS8_EEEEEDcOT0_DpOT1_: argument 0"}
!7 = distinct !{!7, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvPNS_7RunLoopERKNS_8LocationENS2_IFvS7_EEEEJNS0_17UnretainedWrapperIS3_EES7_RKNS_17RepeatingCallbackIS8_EEEEEDcOT0_DpOT1_"}
!8 = distinct !{!8, !9, !"_ZN4base8BindOnceIPFvPNS_7RunLoopERKNS_8LocationENS_12OnceCallbackIFvS5_EEEEJNS_8internal17UnretainedWrapperIS1_EES5_RKNS_17RepeatingCallbackIS7_EEEEENS6_INSB_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_: argument 0"}
!9 = distinct !{!9, !"_ZN4base8BindOnceIPFvPNS_7RunLoopERKNS_8LocationENS_12OnceCallbackIFvS5_EEEEJNS_8internal17UnretainedWrapperIS1_EES5_RKNS_17RepeatingCallbackIS7_EEEEENS6_INSB_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZNK4base8internal22CancelableCallbackImplINS_12OnceCallbackIFvvEEEE8callbackEv: argument 0"}
!12 = distinct !{!12, !"_ZNK4base8internal22CancelableCallbackImplINS_12OnceCallbackIFvvEEEE8callbackEv"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNK4base12ObserverListINS_7RunLoop15NestingObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!15 = distinct !{!15, !"_ZNK4base12ObserverListINS_7RunLoop15NestingObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNK4base12ObserverListINS_7RunLoop15NestingObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!18 = distinct !{!18, !"_ZNK4base12ObserverListINS_7RunLoop15NestingObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!19 = distinct !{!19, !20}
!20 = !{!"llvm.loop.unroll.disable"}
!21 = distinct !{!21, !20}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZNK4base12ObserverListINS_7RunLoop15NestingObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!24 = distinct !{!24, !"_ZNK4base12ObserverListINS_7RunLoop15NestingObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZNK4base12ObserverListINS_7RunLoop15NestingObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!27 = distinct !{!27, !"_ZNK4base12ObserverListINS_7RunLoop15NestingObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!28 = distinct !{!28, !20}
!29 = distinct !{!29, !20}
!30 = !{!31, !33}
!31 = distinct !{!31, !32, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMNS_7RunLoopEFvvEJNS0_17UnretainedWrapperIS3_EEEEEDcOT0_DpOT1_: argument 0"}
!32 = distinct !{!32, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMNS_7RunLoopEFvvEJNS0_17UnretainedWrapperIS3_EEEEEDcOT0_DpOT1_"}
!33 = distinct !{!33, !34, !"_ZN4base8BindOnceIMNS_7RunLoopEFvvEJNS_8internal17UnretainedWrapperIS1_EEEEENS_12OnceCallbackINS4_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_: argument 0"}
!34 = distinct !{!34, !"_ZN4base8BindOnceIMNS_7RunLoopEFvvEJNS_8internal17UnretainedWrapperIS1_EEEEENS_12OnceCallbackINS4_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_"}
!35 = !{!36, !38}
!36 = distinct !{!36, !37, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMNS_7RunLoopEFvvEJNS0_17UnretainedWrapperIS3_EEEEEDcOT0_DpOT1_: argument 0"}
!37 = distinct !{!37, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMNS_7RunLoopEFvvEJNS0_17UnretainedWrapperIS3_EEEEEDcOT0_DpOT1_"}
!38 = distinct !{!38, !39, !"_ZN4base8BindOnceIMNS_7RunLoopEFvvEJNS_8internal17UnretainedWrapperIS1_EEEEENS_12OnceCallbackINS4_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_: argument 0"}
!39 = distinct !{!39, !"_ZN4base8BindOnceIMNS_7RunLoopEFvvEJNS_8internal17UnretainedWrapperIS1_EEEEENS_12OnceCallbackINS4_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_"}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_ZNK4base14WeakPtrFactoryINS_7RunLoopEE10GetWeakPtrEv: argument 0"}
!42 = distinct !{!42, !"_ZNK4base14WeakPtrFactoryINS_7RunLoopEE10GetWeakPtrEv"}
!43 = !{!44, !46}
!44 = distinct !{!44, !45, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMNS_7RunLoopEFvvEJNS_7WeakPtrIS3_EEEEEDcOT0_DpOT1_: argument 0"}
!45 = distinct !{!45, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMNS_7RunLoopEFvvEJNS_7WeakPtrIS3_EEEEEDcOT0_DpOT1_"}
!46 = distinct !{!46, !47, !"_ZN4base13BindRepeatingIMNS_7RunLoopEFvvEJNS_7WeakPtrIS1_EEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_: argument 0"}
!47 = distinct !{!47, !"_ZN4base13BindRepeatingIMNS_7RunLoopEFvvEJNS_7WeakPtrIS1_EEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_"}
!48 = !{!49, !51}
!49 = distinct !{!49, !50, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEPFv13scoped_refptrINS_19SequencedTaskRunnerEENS_12OnceCallbackIFvvEEEEJRKS3_INS_22SingleThreadTaskRunnerEENS2_IS7_EEEEEDcOT0_DpOT1_: argument 0"}
!50 = distinct !{!50, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEPFv13scoped_refptrINS_19SequencedTaskRunnerEENS_12OnceCallbackIFvvEEEEJRKS3_INS_22SingleThreadTaskRunnerEENS2_IS7_EEEEEDcOT0_DpOT1_"}
!51 = distinct !{!51, !52, !"_ZN4base13BindRepeatingIPFv13scoped_refptrINS_19SequencedTaskRunnerEENS_12OnceCallbackIFvvEEEEJRKS1_INS_22SingleThreadTaskRunnerEENS_17RepeatingCallbackIS5_EEEEENSD_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_: argument 0"}
!52 = distinct !{!52, !"_ZN4base13BindRepeatingIPFv13scoped_refptrINS_19SequencedTaskRunnerEENS_12OnceCallbackIFvvEEEEJRKS1_INS_22SingleThreadTaskRunnerEENS_17RepeatingCallbackIS5_EEEEENSD_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_"}
!53 = !{!54}
!54 = distinct !{!54, !55, !"_ZNK4base14WeakPtrFactoryINS_7RunLoopEE10GetWeakPtrEv: argument 0"}
!55 = distinct !{!55, !"_ZNK4base14WeakPtrFactoryINS_7RunLoopEE10GetWeakPtrEv"}
!56 = !{!57, !59}
!57 = distinct !{!57, !58, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMNS_7RunLoopEFvvEJNS_7WeakPtrIS3_EEEEEDcOT0_DpOT1_: argument 0"}
!58 = distinct !{!58, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMNS_7RunLoopEFvvEJNS_7WeakPtrIS3_EEEEEDcOT0_DpOT1_"}
!59 = distinct !{!59, !60, !"_ZN4base13BindRepeatingIMNS_7RunLoopEFvvEJNS_7WeakPtrIS1_EEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_: argument 0"}
!60 = distinct !{!60, !"_ZN4base13BindRepeatingIMNS_7RunLoopEFvvEJNS_7WeakPtrIS1_EEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_"}
!61 = !{!62, !64}
!62 = distinct !{!62, !63, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEPFv13scoped_refptrINS_19SequencedTaskRunnerEENS_12OnceCallbackIFvvEEEEJRKS3_INS_22SingleThreadTaskRunnerEENS2_IS7_EEEEEDcOT0_DpOT1_: argument 0"}
!63 = distinct !{!63, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEPFv13scoped_refptrINS_19SequencedTaskRunnerEENS_12OnceCallbackIFvvEEEEJRKS3_INS_22SingleThreadTaskRunnerEENS2_IS7_EEEEEDcOT0_DpOT1_"}
!64 = distinct !{!64, !65, !"_ZN4base13BindRepeatingIPFv13scoped_refptrINS_19SequencedTaskRunnerEENS_12OnceCallbackIFvvEEEEJRKS1_INS_22SingleThreadTaskRunnerEENS_17RepeatingCallbackIS5_EEEEENSD_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_: argument 0"}
!65 = distinct !{!65, !"_ZN4base13BindRepeatingIPFv13scoped_refptrINS_19SequencedTaskRunnerEENS_12OnceCallbackIFvvEEEEJRKS1_INS_22SingleThreadTaskRunnerEENS_17RepeatingCallbackIS5_EEEEENSD_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_"}
!66 = !{!67, !69}
!67 = distinct !{!67, !68, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEPFvvEJEEEDcOT0_DpOT1_: argument 0"}
!68 = distinct !{!68, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEPFvvEJEEEDcOT0_DpOT1_"}
!69 = distinct !{!69, !70, !"_ZN4base13BindRepeatingIPFvvEJEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS6_DpOS7_: argument 0"}
!70 = distinct !{!70, !"_ZN4base13BindRepeatingIPFvvEJEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS6_DpOS7_"}
!71 = !{!72}
!72 = distinct !{!72, !73, !"_ZNK4base14WeakPtrFactoryINS_8internal22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEE10GetWeakPtrEv: argument 0"}
!73 = distinct !{!73, !"_ZNK4base14WeakPtrFactoryINS_8internal22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEE10GetWeakPtrEv"}
!74 = !{!75, !77}
!75 = distinct !{!75, !76, !"_ZN4base8internal8BindImplINS_12OnceCallbackERMNS0_22CancelableCallbackImplINS2_IFvvEEEEEFvvEJNS_7WeakPtrIS6_EEEEEDcOT0_DpOT1_: argument 0"}
!76 = distinct !{!76, !"_ZN4base8internal8BindImplINS_12OnceCallbackERMNS0_22CancelableCallbackImplINS2_IFvvEEEEEFvvEJNS_7WeakPtrIS6_EEEEEDcOT0_DpOT1_"}
!77 = distinct !{!77, !78, !"_ZN4base8BindOnceIRMNS_8internal22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS6_EEEEENS3_INS1_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_: argument 0"}
!78 = distinct !{!78, !"_ZN4base8BindOnceIRMNS_8internal22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS6_EEEEENS3_INS1_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_"}
