; ModuleID = '../../net/cert/test_root_certs.cc'
source_filename = "../../net/cert/test_root_certs.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::LazyInstance" = type { i64, [48 x i8] }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.net::TestRootCerts" = type { %"class.net::TrustStoreInMemory" }
%"class.net::TrustStoreInMemory" = type { %"class.net::TrustStore", %"class.std::__1::unordered_multimap" }
%"class.net::TrustStore" = type { %"class.net::CertIssuerSource" }
%"class.net::CertIssuerSource" = type { i32 (...)** }
%"class.std::__1::unordered_multimap" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.11", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.0" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { float }
%"class.net::ScopedTestRoot" = type { %"class.std::__1::vector.105" }
%"class.std::__1::vector.105" = type { %"class.std::__1::__vector_base.106" }
%"class.std::__1::__vector_base.106" = type { %class.scoped_refptr.107*, %class.scoped_refptr.107*, %"class.std::__1::__compressed_pair.108" }
%class.scoped_refptr.107 = type { %"class.net::X509Certificate"* }
%"class.net::X509Certificate" = type { %"class.base::RefCountedThreadSafe", %"struct.net::CertPrincipal", %"struct.net::CertPrincipal", %"class.base::Time", %"class.base::Time", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.25", %"class.std::__1::vector.29" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.14" }
%"struct.std::__1::__atomic_base.14" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.net::CertPrincipal" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.std::__1::basic_string"* }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { %"class.std::__1::unique_ptr.25"*, %"class.std::__1::unique_ptr.25"*, %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.std::__1::unique_ptr.25"* }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %class.scoped_refptr.107* }
%"class.net::CertErrors" = type { %"class.std::__1::vector.36" }
%"class.std::__1::vector.36" = type { %"class.std::__1::__vector_base.37" }
%"class.std::__1::__vector_base.37" = type { %"struct.net::CertError"*, %"struct.net::CertError"*, %"class.std::__1::__compressed_pair.42" }
%"struct.net::CertError" = type { i32, i8*, %"class.std::__1::unique_ptr.38" }
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.net::CertErrorParams"* }
%"class.net::CertErrorParams" = type opaque
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"struct.net::CertError"* }
%"struct.net::ParseCertificateOptions" = type { i8 }
%"class.net::ParsedCertificate" = type { %"class.base::RefCountedThreadSafe.47", %"class.std::__1::unique_ptr.25", %"class.net::der::Input", %"class.net::der::Input", %"class.net::der::Input", %"class.net::der::BitString", %"struct.net::ParsedTbsCertificate", %"class.std::__1::unique_ptr.48", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"struct.net::ParsedBasicConstraints", i8, [3 x i8], %"class.net::der::BitString", i8, %"class.std::__1::vector.54", %"struct.net::ParsedExtension", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.67", i8, [7 x i8], %"struct.net::ParsedExtension", %"class.std::__1::vector.73", %"class.std::__1::vector.73", i8, %"class.std::__1::vector.54", i8, %"struct.net::ParsedPolicyConstraints", i8, %"class.std::__1::vector.80", i8, i8, %"class.absl::optional", %"class.absl::optional.88", %"class.std::__1::map" }
%"class.base::RefCountedThreadSafe.47" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.net::der::Input" = type { i8*, i64 }
%"struct.net::ParsedTbsCertificate" = type { i32, %"class.net::der::Input", %"class.net::der::Input", %"class.net::der::Input", %"struct.net::der::GeneralizedTime", %"struct.net::der::GeneralizedTime", %"class.net::der::Input", %"class.net::der::Input", i8, [7 x i8], %"class.net::der::BitString", i8, [7 x i8], %"class.net::der::BitString", i8, %"class.net::der::Input" }
%"struct.net::der::GeneralizedTime" = type { i16, i8, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.net::SignatureAlgorithm"* }
%"class.net::SignatureAlgorithm" = type opaque
%"struct.net::ParsedBasicConstraints" = type { i8, i8, i8 }
%"class.net::der::BitString" = type <{ %"class.net::der::Input", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"struct.net::GeneralNames"* }
%"struct.net::GeneralNames" = type opaque
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.net::NameConstraints"* }
%"class.net::NameConstraints" = type opaque
%"struct.net::ParsedExtension" = type <{ %"class.net::der::Input", %"class.net::der::Input", i8, [7 x i8] }>
%"class.std::__1::vector.73" = type { %"class.std::__1::__vector_base.74" }
%"class.std::__1::__vector_base.74" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.75" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.base::BasicStringPiece"* }
%"class.std::__1::vector.54" = type { %"class.std::__1::__vector_base.55" }
%"class.std::__1::__vector_base.55" = type { %"class.net::der::Input"*, %"class.net::der::Input"*, %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.net::der::Input"* }
%"struct.net::ParsedPolicyConstraints" = type { i8, i8, i8, i8 }
%"class.std::__1::vector.80" = type { %"class.std::__1::__vector_base.81" }
%"class.std::__1::__vector_base.81" = type { %"struct.net::ParsedPolicyMapping"*, %"struct.net::ParsedPolicyMapping"*, %"class.std::__1::__compressed_pair.82" }
%"struct.net::ParsedPolicyMapping" = type { %"class.net::der::Input", %"class.net::der::Input" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"struct.net::ParsedPolicyMapping"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.87 }
%union.anon.87 = type { %"struct.net::ParsedAuthorityKeyIdentifier" }
%"struct.net::ParsedAuthorityKeyIdentifier" = type { %"class.absl::optional.88", %"class.absl::optional.88", %"class.absl::optional.88" }
%"class.absl::optional.88" = type { %"class.absl::optional_internal::optional_data.89" }
%"class.absl::optional_internal::optional_data.89" = type { %"class.absl::optional_internal::optional_data_base.90" }
%"class.absl::optional_internal::optional_data_base.90" = type { %"class.absl::optional_internal::optional_data_dtor_base.91" }
%"class.absl::optional_internal::optional_data_dtor_base.91" = type { i8, %union.anon.92 }
%union.anon.92 = type { %"class.net::der::Input" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.97", %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.base::ThreadRestrictions::ScopedAllowIO" = type { i8 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__16vectorI13scoped_refptrIN3net15X509CertificateEENS_9allocatorIS4_EEE6assignIPS4_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_ = comdat any

@_ZN3net12_GLOBAL__N_117g_test_root_certsE = internal global %"class.base::LazyInstance" zeroinitializer, align 8
@_ZN3net12_GLOBAL__N_114g_has_instanceE = internal unnamed_addr global i1 false, align 1
@.str = private unnamed_addr constant [12 x i8] c"AddFromFile\00", align 1
@.str.1 = private unnamed_addr constant [34 x i8] c"../../net/cert/test_root_certs.cc\00", align 1
@.str.2 = private unnamed_addr constant [24 x i8] c"Can't load certificate \00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN3net13TestRootCertsC1Ev = hidden unnamed_addr alias void (%"class.net::TestRootCerts"*), void (%"class.net::TestRootCerts"*)* @_ZN3net13TestRootCertsC2Ev
@_ZN3net14ScopedTestRootC1Ev = hidden unnamed_addr alias void (%"class.net::ScopedTestRoot"*), void (%"class.net::ScopedTestRoot"*)* @_ZN3net14ScopedTestRootC2Ev
@_ZN3net14ScopedTestRootC1EPNS_15X509CertificateE = hidden unnamed_addr alias void (%"class.net::ScopedTestRoot"*, %"class.net::X509Certificate"*), void (%"class.net::ScopedTestRoot"*, %"class.net::X509Certificate"*)* @_ZN3net14ScopedTestRootC2EPNS_15X509CertificateE
@_ZN3net14ScopedTestRootC1ENSt3__16vectorI13scoped_refptrINS_15X509CertificateEENS1_9allocatorIS5_EEEE = hidden unnamed_addr alias void (%"class.net::ScopedTestRoot"*, %"class.std::__1::vector.105"*), void (%"class.net::ScopedTestRoot"*, %"class.std::__1::vector.105"*)* @_ZN3net14ScopedTestRootC2ENSt3__16vectorI13scoped_refptrINS_15X509CertificateEENS1_9allocatorIS5_EEEE
@_ZN3net14ScopedTestRootD1Ev = hidden unnamed_addr alias void (%"class.net::ScopedTestRoot"*), void (%"class.net::ScopedTestRoot"*)* @_ZN3net14ScopedTestRootD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::TestRootCerts"* @_ZN3net13TestRootCerts11GetInstanceEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net12_GLOBAL__N_117g_test_root_certsE, i64 0, i32 0) acquire, align 8
  %2 = icmp ugt i64 %1, 1
  br i1 %2, label %8, label %3

3:                                                ; preds = %0
  %4 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net12_GLOBAL__N_117g_test_root_certsE, i64 0, i32 0)) #8
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  tail call void @_ZN3net18TrustStoreInMemoryC1Ev(%"class.net::TrustStoreInMemory"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net12_GLOBAL__N_117g_test_root_certsE, i64 0, i32 1, i64 0) to %"class.net::TrustStoreInMemory"*)) #8
  tail call void @_ZN3net13TestRootCerts4InitEv(%"class.net::TestRootCerts"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net12_GLOBAL__N_117g_test_root_certsE, i64 0, i32 1, i64 0) to %"class.net::TestRootCerts"*)) #8
  store i1 true, i1* @_ZN3net12_GLOBAL__N_114g_has_instanceE, align 1
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net12_GLOBAL__N_117g_test_root_certsE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net12_GLOBAL__N_117g_test_root_certsE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN3net12_GLOBAL__N_117g_test_root_certsE to i8*)) #8
  br label %8

6:                                                ; preds = %3
  %7 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net12_GLOBAL__N_117g_test_root_certsE, i64 0, i32 0) acquire, align 8
  br label %8

8:                                                ; preds = %0, %5, %6
  %9 = phi i64 [ %1, %0 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net12_GLOBAL__N_117g_test_root_certsE, i64 0, i32 1, i64 0) to i64), %5 ], [ %7, %6 ]
  %10 = inttoptr i64 %9 to %"class.net::TestRootCerts"*
  ret %"class.net::TestRootCerts"* %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN3net13TestRootCerts11HasInstanceEv() local_unnamed_addr #1 align 2 {
  %1 = load i1, i1* @_ZN3net12_GLOBAL__N_114g_has_instanceE, align 1
  ret i1 %1
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net13TestRootCerts3AddEPNS_15X509CertificateE(%"class.net::TestRootCerts"*, %"class.net::X509Certificate"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.net::CertErrors", align 8
  %4 = alloca %"struct.net::ParseCertificateOptions", align 1
  %5 = bitcast %"class.net::CertErrors"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #8
  %6 = bitcast %"class.net::CertErrors"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 24, i1 false)
  call void @_ZN3net10CertErrorsC1Ev(%"class.net::CertErrors"* nonnull %3) #8
  %7 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %1, i64 0, i32 6, i32 0, i32 0, i32 0
  %8 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %7, align 8
  %9 = icmp eq %struct.crypto_buffer_st* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %2
  %11 = call i32 @CRYPTO_BUFFER_up_ref(%struct.crypto_buffer_st* nonnull %8) #8
  br label %12

12:                                               ; preds = %2, %10
  %13 = getelementptr inbounds %"struct.net::ParseCertificateOptions", %"struct.net::ParseCertificateOptions"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %13) #8
  %14 = call i8 @_ZN3net9x509_util30DefaultParseCertificateOptionsEv() #8
  store i8 %14, i8* %13, align 1
  %15 = call %"class.net::ParsedCertificate"* @_ZN3net17ParsedCertificate6CreateENSt3__110unique_ptrI16crypto_buffer_stN4bssl8internal7DeleterIS3_EEEERKNS_23ParseCertificateOptionsEPNS_10CertErrorsE(%struct.crypto_buffer_st* %8, %"struct.net::ParseCertificateOptions"* nonnull dereferenceable(1) %4, %"class.net::CertErrors"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13) #8
  %16 = icmp eq %"class.net::ParsedCertificate"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.net::TestRootCerts", %"class.net::TestRootCerts"* %0, i64 0, i32 0
  call void @_ZN3net18TrustStoreInMemory14AddTrustAnchorE13scoped_refptrINS_17ParsedCertificateEE(%"class.net::TrustStoreInMemory"* %18, %"class.net::ParsedCertificate"* nonnull %15) #8
  %19 = call zeroext i1 @_ZN3net13TestRootCerts7AddImplEPNS_15X509CertificateE(%"class.net::TestRootCerts"* %0, %"class.net::X509Certificate"* %1) #8
  br label %20

20:                                               ; preds = %12, %17
  %21 = phi i1 [ %19, %17 ], [ false, %12 ]
  call void @_ZN3net10CertErrorsD1Ev(%"class.net::CertErrors"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #8
  ret i1 %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN3net10CertErrorsC1Ev(%"class.net::CertErrors"*) unnamed_addr #3

declare %"class.net::ParsedCertificate"* @_ZN3net17ParsedCertificate6CreateENSt3__110unique_ptrI16crypto_buffer_stN4bssl8internal7DeleterIS3_EEEERKNS_23ParseCertificateOptionsEPNS_10CertErrorsE(%struct.crypto_buffer_st*, %"struct.net::ParseCertificateOptions"* dereferenceable(1), %"class.net::CertErrors"*) local_unnamed_addr #3

declare i8 @_ZN3net9x509_util30DefaultParseCertificateOptionsEv() local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN3net18TrustStoreInMemory14AddTrustAnchorE13scoped_refptrINS_17ParsedCertificateEE(%"class.net::TrustStoreInMemory"*, %"class.net::ParsedCertificate"*) local_unnamed_addr #3

declare zeroext i1 @_ZN3net13TestRootCerts7AddImplEPNS_15X509CertificateE(%"class.net::TestRootCerts"*, %"class.net::X509Certificate"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net10CertErrorsD1Ev(%"class.net::CertErrors"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net13TestRootCerts11AddFromFileERKN4base8FilePathE(%"class.net::TestRootCerts"*, %"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.logging::LogMessage", align 8
  %5 = alloca %"class.base::ThreadRestrictions::ScopedAllowIO", align 1
  %6 = alloca %"class.base::Location", align 8
  %7 = alloca %"class.std::__1::vector.105", align 8
  %8 = getelementptr inbounds %"class.base::ThreadRestrictions::ScopedAllowIO", %"class.base::ThreadRestrictions::ScopedAllowIO"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #8
  store i8 -86, i8* %8, align 1
  %9 = bitcast %"class.base::Location"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #8
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %6, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.1, i64 0, i64 0), i32 64) #8
  call void @_ZN4base18ThreadRestrictions13ScopedAllowIOC1ERKNS_8LocationE(%"class.base::ThreadRestrictions::ScopedAllowIO"* nonnull %5, %"class.base::Location"* nonnull dereferenceable(32) %6) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #8
  %10 = bitcast %"class.std::__1::vector.105"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #8
  %11 = getelementptr inbounds %"class.std::__1::vector.105", %"class.std::__1::vector.105"* %7, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::vector.105", %"class.std::__1::vector.105"* %7, i64 0, i32 0, i32 1
  %13 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %14 = bitcast %"class.std::__1::vector.105"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #8, !noalias !2
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 24, i1 false) #8, !noalias !2
  %16 = call zeroext i1 @_ZN4base16ReadFileToStringERKNS_8FilePathEPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.base::FilePath"* dereferenceable(24) %1, %"class.std::__1::basic_string"* nonnull %3) #8, !noalias !2
  br i1 %16, label %39, label %17

17:                                               ; preds = %2
  %18 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #8
  br i1 %18, label %19, label %37

19:                                               ; preds = %17
  %20 = bitcast %"class.logging::LogMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %20) #8, !noalias !2
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.1, i64 0, i64 0), i32 31, i32 2) #8
  %21 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %4, i64 0, i32 2
  %22 = bitcast %"class.std::__1::basic_ostringstream"* %21 to %"class.std::__1::basic_ostream"*
  %23 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %22, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0), i64 23) #8
  %24 = bitcast %"class.base::FilePath"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1, !noalias !2
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8, !noalias !2
  %30 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8, !noalias !2
  %32 = bitcast %"class.base::FilePath"* %1 to i8*
  %33 = zext i8 %26 to i64
  %34 = select i1 %27, i8* %29, i8* %32
  %35 = select i1 %27, i64 %31, i64 %33
  %36 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %23, i8* %34, i64 %35) #8
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %20) #8, !noalias !2
  br label %37

37:                                               ; preds = %19, %17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 24, i1 false) #8, !alias.scope !2
  %38 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %50

39:                                               ; preds = %2
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %41 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1, !noalias !2
  %44 = icmp slt i8 %43, 0
  %45 = load i8*, i8** %15, align 8, !noalias !2
  %46 = load i64, i64* %40, align 8, !noalias !2
  %47 = zext i8 %43 to i64
  %48 = select i1 %44, i8* %45, i8* %13
  %49 = select i1 %44, i64 %46, i64 %47
  call void @_ZN3net15X509Certificate30CreateCertificateListFromBytesEPKcmi(%"class.std::__1::vector.105"* nonnull sret %7, i8* %48, i64 %49, i32 7) #8
  br label %50

50:                                               ; preds = %39, %37
  %51 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %41, %39 ], [ %38, %37 ]
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %53 = load i8, i8* %52, align 1, !noalias !2
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %55, label %57

55:                                               ; preds = %50
  %56 = load i8*, i8** %15, align 8, !noalias !2
  call void @_ZdlPv(i8* %56) #9
  br label %57

57:                                               ; preds = %50, %55
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #8, !noalias !2
  %58 = load %class.scoped_refptr.107*, %class.scoped_refptr.107** %11, align 8
  %59 = load %class.scoped_refptr.107*, %class.scoped_refptr.107** %12, align 8
  %60 = icmp eq %class.scoped_refptr.107* %58, %59
  br i1 %60, label %72, label %61

61:                                               ; preds = %57
  %62 = ptrtoint %class.scoped_refptr.107* %58 to i64
  %63 = ptrtoint %class.scoped_refptr.107* %59 to i64
  %64 = sub i64 %63, %62
  %65 = ashr exact i64 %64, 3
  %66 = icmp ugt i64 %65, 1
  br i1 %66, label %72, label %67

67:                                               ; preds = %61
  %68 = getelementptr inbounds %class.scoped_refptr.107, %class.scoped_refptr.107* %58, i64 0, i32 0
  %69 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %68, align 8
  %70 = call zeroext i1 @_ZN3net13TestRootCerts3AddEPNS_15X509CertificateE(%"class.net::TestRootCerts"* %0, %"class.net::X509Certificate"* %69)
  %71 = load %class.scoped_refptr.107*, %class.scoped_refptr.107** %11, align 8
  br label %72

72:                                               ; preds = %57, %61, %67
  %73 = phi %class.scoped_refptr.107* [ %58, %57 ], [ %58, %61 ], [ %71, %67 ]
  %74 = phi i1 [ false, %57 ], [ false, %61 ], [ %70, %67 ]
  %75 = icmp eq %class.scoped_refptr.107* %73, null
  br i1 %75, label %99, label %76

76:                                               ; preds = %72
  %77 = bitcast %class.scoped_refptr.107* %73 to i8*
  %78 = load %class.scoped_refptr.107*, %class.scoped_refptr.107** %12, align 8
  %79 = icmp eq %class.scoped_refptr.107* %78, %73
  br i1 %79, label %97, label %80

80:                                               ; preds = %76, %92
  %81 = phi %class.scoped_refptr.107* [ %82, %92 ], [ %78, %76 ]
  %82 = getelementptr inbounds %class.scoped_refptr.107, %class.scoped_refptr.107* %81, i64 -1
  %83 = getelementptr inbounds %class.scoped_refptr.107, %class.scoped_refptr.107* %82, i64 0, i32 0
  %84 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %83, align 8
  %85 = icmp eq %"class.net::X509Certificate"* %84, null
  br i1 %85, label %92, label %86

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %84, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = atomicrmw sub i32* %87, i32 1 acq_rel
  %89 = icmp eq i32 %88, 1
  br i1 %89, label %90, label %92

90:                                               ; preds = %86
  call void @_ZN3net15X509CertificateD1Ev(%"class.net::X509Certificate"* nonnull %84) #8
  %91 = bitcast %"class.net::X509Certificate"* %84 to i8*
  call void @_ZdlPv(i8* %91) #9
  br label %92

92:                                               ; preds = %90, %86, %80
  %93 = icmp eq %class.scoped_refptr.107* %82, %73
  br i1 %93, label %94, label %80

94:                                               ; preds = %92
  %95 = bitcast %"class.std::__1::vector.105"* %7 to i8**
  %96 = load i8*, i8** %95, align 8
  br label %97

97:                                               ; preds = %94, %76
  %98 = phi i8* [ %96, %94 ], [ %77, %76 ]
  store %class.scoped_refptr.107* %73, %class.scoped_refptr.107** %12, align 8
  call void @_ZdlPv(i8* %98) #9
  br label %99

99:                                               ; preds = %72, %97
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #8
  call void @_ZN4base18ThreadRestrictions13ScopedAllowIOD1Ev(%"class.base::ThreadRestrictions::ScopedAllowIO"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #8
  ret i1 %74
}

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #3

declare void @_ZN4base18ThreadRestrictions13ScopedAllowIOC1ERKNS_8LocationE(%"class.base::ThreadRestrictions::ScopedAllowIO"*, %"class.base::Location"* dereferenceable(32)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base18ThreadRestrictions13ScopedAllowIOD1Ev(%"class.base::ThreadRestrictions::ScopedAllowIO"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13TestRootCerts5ClearEv(%"class.net::TestRootCerts"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN3net13TestRootCerts9ClearImplEv(%"class.net::TestRootCerts"* %0) #8
  %2 = getelementptr inbounds %"class.net::TestRootCerts", %"class.net::TestRootCerts"* %0, i64 0, i32 0
  tail call void @_ZN3net18TrustStoreInMemory5ClearEv(%"class.net::TrustStoreInMemory"* %2) #8
  ret void
}

declare void @_ZN3net13TestRootCerts9ClearImplEv(%"class.net::TestRootCerts"*) local_unnamed_addr #3

declare void @_ZN3net18TrustStoreInMemory5ClearEv(%"class.net::TrustStoreInMemory"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net13TestRootCerts7IsEmptyEv(%"class.net::TestRootCerts"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::TestRootCerts", %"class.net::TestRootCerts"* %0, i64 0, i32 0
  %3 = tail call zeroext i1 @_ZNK3net18TrustStoreInMemory7IsEmptyEv(%"class.net::TrustStoreInMemory"* %2) #8
  ret i1 %3
}

declare zeroext i1 @_ZNK3net18TrustStoreInMemory7IsEmptyEv(%"class.net::TrustStoreInMemory"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13TestRootCertsC2Ev(%"class.net::TestRootCerts"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::TestRootCerts", %"class.net::TestRootCerts"* %0, i64 0, i32 0
  tail call void @_ZN3net18TrustStoreInMemoryC1Ev(%"class.net::TrustStoreInMemory"* %2) #8
  tail call void @_ZN3net13TestRootCerts4InitEv(%"class.net::TestRootCerts"* %0) #8
  store i1 true, i1* @_ZN3net12_GLOBAL__N_114g_has_instanceE, align 1
  ret void
}

declare void @_ZN3net18TrustStoreInMemoryC1Ev(%"class.net::TrustStoreInMemory"*) unnamed_addr #3

declare void @_ZN3net13TestRootCerts4InitEv(%"class.net::TestRootCerts"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14ScopedTestRootC2Ev(%"class.net::ScopedTestRoot"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.net::ScopedTestRoot"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14ScopedTestRootC2EPNS_15X509CertificateE(%"class.net::ScopedTestRoot"*, %"class.net::X509Certificate"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.105", align 8
  %4 = alloca [1 x %class.scoped_refptr.107], align 8
  %5 = bitcast %"class.net::ScopedTestRoot"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #8
  %6 = bitcast [1 x %class.scoped_refptr.107]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds [1 x %class.scoped_refptr.107], [1 x %class.scoped_refptr.107]* %4, i64 0, i64 0, i32 0
  store %"class.net::X509Certificate"* %1, %"class.net::X509Certificate"** %7, align 8
  %8 = icmp eq %"class.net::X509Certificate"* %1, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw add i32* %10, i32 1 monotonic
  br label %12

12:                                               ; preds = %2, %9
  %13 = tail call i8* @_Znwm(i64 8) #9
  %14 = getelementptr inbounds %"class.std::__1::vector.105", %"class.std::__1::vector.105"* %3, i64 0, i32 0, i32 1
  %15 = bitcast %class.scoped_refptr.107** %14 to i8**
  store i8* %13, i8** %15, align 8
  %16 = bitcast %"class.std::__1::vector.105"* %3 to i8**
  store i8* %13, i8** %16, align 8
  %17 = getelementptr inbounds i8, i8* %13, i64 8
  %18 = getelementptr inbounds %"class.std::__1::vector.105", %"class.std::__1::vector.105"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %19 = bitcast %class.scoped_refptr.107** %18 to i8**
  store i8* %17, i8** %19, align 8
  %20 = bitcast i8* %13 to %"class.net::X509Certificate"**
  store %"class.net::X509Certificate"* %1, %"class.net::X509Certificate"** %20, align 8
  br i1 %8, label %24, label %21

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i32* %22, i32 1 monotonic
  br label %24

24:                                               ; preds = %21, %12
  %25 = getelementptr inbounds i8, i8* %13, i64 8
  %26 = bitcast %class.scoped_refptr.107** %14 to i64*
  %27 = ptrtoint i8* %25 to i64
  store i64 %27, i64* %26, align 8
  call void @_ZN3net14ScopedTestRoot5ResetENSt3__16vectorI13scoped_refptrINS_15X509CertificateEENS1_9allocatorIS5_EEEE(%"class.net::ScopedTestRoot"* %0, %"class.std::__1::vector.105"* nonnull %3)
  %28 = getelementptr inbounds %"class.std::__1::vector.105", %"class.std::__1::vector.105"* %3, i64 0, i32 0, i32 0
  %29 = load %class.scoped_refptr.107*, %class.scoped_refptr.107** %28, align 8
  %30 = icmp eq %class.scoped_refptr.107* %29, null
  br i1 %30, label %55, label %31

31:                                               ; preds = %24
  %32 = bitcast %class.scoped_refptr.107* %29 to i8*
  %33 = load %class.scoped_refptr.107*, %class.scoped_refptr.107** %14, align 8
  %34 = icmp eq %class.scoped_refptr.107* %33, %29
  br i1 %34, label %51, label %35

35:                                               ; preds = %31, %47
  %36 = phi %class.scoped_refptr.107* [ %37, %47 ], [ %33, %31 ]
  %37 = getelementptr inbounds %class.scoped_refptr.107, %class.scoped_refptr.107* %36, i64 -1
  %38 = getelementptr inbounds %class.scoped_refptr.107, %class.scoped_refptr.107* %37, i64 0, i32 0
  %39 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %38, align 8
  %40 = icmp eq %"class.net::X509Certificate"* %39, null
  br i1 %40, label %47, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = atomicrmw sub i32* %42, i32 1 acq_rel
  %44 = icmp eq i32 %43, 1
  br i1 %44, label %45, label %47

45:                                               ; preds = %41
  call void @_ZN3net15X509CertificateD1Ev(%"class.net::X509Certificate"* nonnull %39) #8
  %46 = bitcast %"class.net::X509Certificate"* %39 to i8*
  call void @_ZdlPv(i8* %46) #9
  br label %47

47:                                               ; preds = %45, %41, %35
  %48 = icmp eq %class.scoped_refptr.107* %37, %29
  br i1 %48, label %49, label %35

49:                                               ; preds = %47
  %50 = load i8*, i8** %16, align 8
  br label %51

51:                                               ; preds = %49, %31
  %52 = phi i8* [ %50, %49 ], [ %32, %31 ]
  store %class.scoped_refptr.107* %29, %class.scoped_refptr.107** %14, align 8
  call void @_ZdlPv(i8* %52) #9
  %53 = getelementptr inbounds [1 x %class.scoped_refptr.107], [1 x %class.scoped_refptr.107]* %4, i64 0, i64 0, i32 0
  %54 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %53, align 8
  br label %55

55:                                               ; preds = %24, %51
  %56 = phi %"class.net::X509Certificate"* [ %1, %24 ], [ %54, %51 ]
  %57 = icmp eq %"class.net::X509Certificate"* %56, null
  br i1 %57, label %64, label %58

58:                                               ; preds = %55
  %59 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = atomicrmw sub i32* %59, i32 1 acq_rel
  %61 = icmp eq i32 %60, 1
  br i1 %61, label %62, label %64

62:                                               ; preds = %58
  call void @_ZN3net15X509CertificateD1Ev(%"class.net::X509Certificate"* nonnull %56) #8
  %63 = bitcast %"class.net::X509Certificate"* %56 to i8*
  call void @_ZdlPv(i8* %63) #9
  br label %64

64:                                               ; preds = %55, %58, %62
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14ScopedTestRoot5ResetENSt3__16vectorI13scoped_refptrINS_15X509CertificateEENS1_9allocatorIS5_EEEE(%"class.net::ScopedTestRoot"*, %"class.std::__1::vector.105"* readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::ScopedTestRoot", %"class.net::ScopedTestRoot"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.net::ScopedTestRoot", %"class.net::ScopedTestRoot"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %class.scoped_refptr.107*, %class.scoped_refptr.107** %4, align 8
  %6 = getelementptr inbounds %"class.net::ScopedTestRoot", %"class.net::ScopedTestRoot"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load %class.scoped_refptr.107*, %class.scoped_refptr.107** %6, align 8
  %8 = icmp eq %class.scoped_refptr.107* %5, %7
  br i1 %8, label %21, label %9

9:                                                ; preds = %2
  %10 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net12_GLOBAL__N_117g_test_root_certsE, i64 0, i32 0) acquire, align 8
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %17, label %12

12:                                               ; preds = %9
  %13 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net12_GLOBAL__N_117g_test_root_certsE, i64 0, i32 0)) #8
  br i1 %13, label %14, label %15

14:                                               ; preds = %12
  tail call void @_ZN3net18TrustStoreInMemoryC1Ev(%"class.net::TrustStoreInMemory"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net12_GLOBAL__N_117g_test_root_certsE, i64 0, i32 1, i64 0) to %"class.net::TrustStoreInMemory"*)) #8
  tail call void @_ZN3net13TestRootCerts4InitEv(%"class.net::TestRootCerts"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net12_GLOBAL__N_117g_test_root_certsE, i64 0, i32 1, i64 0) to %"class.net::TestRootCerts"*)) #8
  store i1 true, i1* @_ZN3net12_GLOBAL__N_114g_has_instanceE, align 1
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net12_GLOBAL__N_117g_test_root_certsE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net12_GLOBAL__N_117g_test_root_certsE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN3net12_GLOBAL__N_117g_test_root_certsE to i8*)) #8
  br label %17

15:                                               ; preds = %12
  %16 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net12_GLOBAL__N_117g_test_root_certsE, i64 0, i32 0) acquire, align 8
  br label %17

17:                                               ; preds = %9, %14, %15
  %18 = phi i64 [ %10, %9 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net12_GLOBAL__N_117g_test_root_certsE, i64 0, i32 1, i64 0) to i64), %14 ], [ %16, %15 ]
  %19 = inttoptr i64 %18 to %"class.net::TestRootCerts"*
  tail call void @_ZN3net13TestRootCerts9ClearImplEv(%"class.net::TestRootCerts"* %19) #8
  %20 = getelementptr inbounds %"class.net::TestRootCerts", %"class.net::TestRootCerts"* %19, i64 0, i32 0
  tail call void @_ZN3net18TrustStoreInMemory5ClearEv(%"class.net::TrustStoreInMemory"* %20) #8
  br label %21

21:                                               ; preds = %17, %2
  %22 = getelementptr inbounds %"class.std::__1::vector.105", %"class.std::__1::vector.105"* %1, i64 0, i32 0, i32 0
  %23 = load %class.scoped_refptr.107*, %class.scoped_refptr.107** %22, align 8
  %24 = getelementptr inbounds %"class.std::__1::vector.105", %"class.std::__1::vector.105"* %1, i64 0, i32 0, i32 1
  %25 = load %class.scoped_refptr.107*, %class.scoped_refptr.107** %24, align 8
  %26 = icmp eq %class.scoped_refptr.107* %23, %25
  br i1 %26, label %27, label %33

27:                                               ; preds = %42, %21
  %28 = icmp eq %"class.std::__1::vector.105"* %3, %1
  br i1 %28, label %32, label %29

29:                                               ; preds = %27
  %30 = load %class.scoped_refptr.107*, %class.scoped_refptr.107** %22, align 8
  %31 = load %class.scoped_refptr.107*, %class.scoped_refptr.107** %24, align 8
  tail call void @_ZNSt3__16vectorI13scoped_refptrIN3net15X509CertificateEENS_9allocatorIS4_EEE6assignIPS4_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_(%"class.std::__1::vector.105"* %3, %class.scoped_refptr.107* %30, %class.scoped_refptr.107* %31) #8
  br label %32

32:                                               ; preds = %27, %29
  ret void

33:                                               ; preds = %21, %42
  %34 = phi %class.scoped_refptr.107* [ %48, %42 ], [ %23, %21 ]
  %35 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net12_GLOBAL__N_117g_test_root_certsE, i64 0, i32 0) acquire, align 8
  %36 = icmp ugt i64 %35, 1
  br i1 %36, label %42, label %37

37:                                               ; preds = %33
  %38 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net12_GLOBAL__N_117g_test_root_certsE, i64 0, i32 0)) #8
  br i1 %38, label %39, label %40

39:                                               ; preds = %37
  tail call void @_ZN3net18TrustStoreInMemoryC1Ev(%"class.net::TrustStoreInMemory"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net12_GLOBAL__N_117g_test_root_certsE, i64 0, i32 1, i64 0) to %"class.net::TrustStoreInMemory"*)) #8
  tail call void @_ZN3net13TestRootCerts4InitEv(%"class.net::TestRootCerts"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net12_GLOBAL__N_117g_test_root_certsE, i64 0, i32 1, i64 0) to %"class.net::TestRootCerts"*)) #8
  store i1 true, i1* @_ZN3net12_GLOBAL__N_114g_has_instanceE, align 1
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net12_GLOBAL__N_117g_test_root_certsE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net12_GLOBAL__N_117g_test_root_certsE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN3net12_GLOBAL__N_117g_test_root_certsE to i8*)) #8
  br label %42

40:                                               ; preds = %37
  %41 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net12_GLOBAL__N_117g_test_root_certsE, i64 0, i32 0) acquire, align 8
  br label %42

42:                                               ; preds = %33, %39, %40
  %43 = phi i64 [ %35, %33 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net12_GLOBAL__N_117g_test_root_certsE, i64 0, i32 1, i64 0) to i64), %39 ], [ %41, %40 ]
  %44 = inttoptr i64 %43 to %"class.net::TestRootCerts"*
  %45 = getelementptr inbounds %class.scoped_refptr.107, %class.scoped_refptr.107* %34, i64 0, i32 0
  %46 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %45, align 8
  %47 = tail call zeroext i1 @_ZN3net13TestRootCerts3AddEPNS_15X509CertificateE(%"class.net::TestRootCerts"* %44, %"class.net::X509Certificate"* %46)
  %48 = getelementptr inbounds %class.scoped_refptr.107, %class.scoped_refptr.107* %34, i64 1
  %49 = icmp eq %class.scoped_refptr.107* %48, %25
  br i1 %49, label %27, label %33
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14ScopedTestRootC2ENSt3__16vectorI13scoped_refptrINS_15X509CertificateEENS1_9allocatorIS5_EEEE(%"class.net::ScopedTestRoot"*, %"class.std::__1::vector.105"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.105", align 16
  %4 = bitcast %"class.net::ScopedTestRoot"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #8
  %5 = bitcast %"class.std::__1::vector.105"* %1 to <2 x i64>*
  %6 = load <2 x i64>, <2 x i64>* %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.105", %"class.std::__1::vector.105"* %3, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::vector.105"* %3 to <2 x i64>*
  store <2 x i64> %6, <2 x i64>* %8, align 16
  %9 = getelementptr inbounds %"class.std::__1::vector.105", %"class.std::__1::vector.105"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = bitcast %class.scoped_refptr.107** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::vector.105", %"class.std::__1::vector.105"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast %class.scoped_refptr.107** %12 to i64*
  store i64 %11, i64* %13, align 16
  %14 = bitcast %"class.std::__1::vector.105"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #8
  call void @_ZN3net14ScopedTestRoot5ResetENSt3__16vectorI13scoped_refptrINS_15X509CertificateEENS1_9allocatorIS5_EEEE(%"class.net::ScopedTestRoot"* %0, %"class.std::__1::vector.105"* nonnull %3)
  %15 = getelementptr inbounds %"class.std::__1::vector.105", %"class.std::__1::vector.105"* %3, i64 0, i32 0, i32 0
  %16 = load %class.scoped_refptr.107*, %class.scoped_refptr.107** %15, align 16
  %17 = icmp eq %class.scoped_refptr.107* %16, null
  br i1 %17, label %41, label %18

18:                                               ; preds = %2
  %19 = bitcast %class.scoped_refptr.107* %16 to i8*
  %20 = load %class.scoped_refptr.107*, %class.scoped_refptr.107** %7, align 8
  %21 = icmp eq %class.scoped_refptr.107* %20, %16
  br i1 %21, label %39, label %22

22:                                               ; preds = %18, %34
  %23 = phi %class.scoped_refptr.107* [ %24, %34 ], [ %20, %18 ]
  %24 = getelementptr inbounds %class.scoped_refptr.107, %class.scoped_refptr.107* %23, i64 -1
  %25 = getelementptr inbounds %class.scoped_refptr.107, %class.scoped_refptr.107* %24, i64 0, i32 0
  %26 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %25, align 8
  %27 = icmp eq %"class.net::X509Certificate"* %26, null
  br i1 %27, label %34, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw sub i32* %29, i32 1 acq_rel
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %34

32:                                               ; preds = %28
  call void @_ZN3net15X509CertificateD1Ev(%"class.net::X509Certificate"* nonnull %26) #8
  %33 = bitcast %"class.net::X509Certificate"* %26 to i8*
  call void @_ZdlPv(i8* %33) #9
  br label %34

34:                                               ; preds = %32, %28, %22
  %35 = icmp eq %class.scoped_refptr.107* %24, %16
  br i1 %35, label %36, label %22

36:                                               ; preds = %34
  %37 = bitcast %"class.std::__1::vector.105"* %3 to i8**
  %38 = load i8*, i8** %37, align 16
  br label %39

39:                                               ; preds = %36, %18
  %40 = phi i8* [ %38, %36 ], [ %19, %18 ]
  store %class.scoped_refptr.107* %16, %class.scoped_refptr.107** %7, align 8
  call void @_ZdlPv(i8* %40) #9
  br label %41

41:                                               ; preds = %2, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14ScopedTestRootD2Ev(%"class.net::ScopedTestRoot"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::vector.105", align 8
  %3 = bitcast %"class.std::__1::vector.105"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 0, i64 24, i1 false) #8
  call void @_ZN3net14ScopedTestRoot5ResetENSt3__16vectorI13scoped_refptrINS_15X509CertificateEENS1_9allocatorIS5_EEEE(%"class.net::ScopedTestRoot"* %0, %"class.std::__1::vector.105"* nonnull %2)
  %4 = getelementptr inbounds %"class.std::__1::vector.105", %"class.std::__1::vector.105"* %2, i64 0, i32 0, i32 0
  %5 = load %class.scoped_refptr.107*, %class.scoped_refptr.107** %4, align 8
  %6 = icmp eq %class.scoped_refptr.107* %5, null
  br i1 %6, label %31, label %7

7:                                                ; preds = %1
  %8 = bitcast %class.scoped_refptr.107* %5 to i8*
  %9 = getelementptr inbounds %"class.std::__1::vector.105", %"class.std::__1::vector.105"* %2, i64 0, i32 0, i32 1
  %10 = load %class.scoped_refptr.107*, %class.scoped_refptr.107** %9, align 8
  %11 = icmp eq %class.scoped_refptr.107* %10, %5
  br i1 %11, label %29, label %12

12:                                               ; preds = %7, %24
  %13 = phi %class.scoped_refptr.107* [ %14, %24 ], [ %10, %7 ]
  %14 = getelementptr inbounds %class.scoped_refptr.107, %class.scoped_refptr.107* %13, i64 -1
  %15 = getelementptr inbounds %class.scoped_refptr.107, %class.scoped_refptr.107* %14, i64 0, i32 0
  %16 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %15, align 8
  %17 = icmp eq %"class.net::X509Certificate"* %16, null
  br i1 %17, label %24, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw sub i32* %19, i32 1 acq_rel
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %24

22:                                               ; preds = %18
  call void @_ZN3net15X509CertificateD1Ev(%"class.net::X509Certificate"* nonnull %16) #8
  %23 = bitcast %"class.net::X509Certificate"* %16 to i8*
  call void @_ZdlPv(i8* %23) #9
  br label %24

24:                                               ; preds = %22, %18, %12
  %25 = icmp eq %class.scoped_refptr.107* %14, %5
  br i1 %25, label %26, label %12

26:                                               ; preds = %24
  %27 = bitcast %"class.std::__1::vector.105"* %2 to i8**
  %28 = load i8*, i8** %27, align 8
  br label %29

29:                                               ; preds = %26, %7
  %30 = phi i8* [ %28, %26 ], [ %8, %7 ]
  store %class.scoped_refptr.107* %5, %class.scoped_refptr.107** %9, align 8
  call void @_ZdlPv(i8* %30) #9
  br label %31

31:                                               ; preds = %1, %29
  %32 = getelementptr inbounds %"class.net::ScopedTestRoot", %"class.net::ScopedTestRoot"* %0, i64 0, i32 0, i32 0, i32 0
  %33 = load %class.scoped_refptr.107*, %class.scoped_refptr.107** %32, align 8
  %34 = icmp eq %class.scoped_refptr.107* %33, null
  br i1 %34, label %59, label %35

35:                                               ; preds = %31
  %36 = bitcast %class.scoped_refptr.107* %33 to i8*
  %37 = getelementptr inbounds %"class.net::ScopedTestRoot", %"class.net::ScopedTestRoot"* %0, i64 0, i32 0, i32 0, i32 1
  %38 = load %class.scoped_refptr.107*, %class.scoped_refptr.107** %37, align 8
  %39 = icmp eq %class.scoped_refptr.107* %38, %33
  br i1 %39, label %57, label %40

40:                                               ; preds = %35, %52
  %41 = phi %class.scoped_refptr.107* [ %42, %52 ], [ %38, %35 ]
  %42 = getelementptr inbounds %class.scoped_refptr.107, %class.scoped_refptr.107* %41, i64 -1
  %43 = getelementptr inbounds %class.scoped_refptr.107, %class.scoped_refptr.107* %42, i64 0, i32 0
  %44 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %43, align 8
  %45 = icmp eq %"class.net::X509Certificate"* %44, null
  br i1 %45, label %52, label %46

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw sub i32* %47, i32 1 acq_rel
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %52

50:                                               ; preds = %46
  call void @_ZN3net15X509CertificateD1Ev(%"class.net::X509Certificate"* nonnull %44) #8
  %51 = bitcast %"class.net::X509Certificate"* %44 to i8*
  call void @_ZdlPv(i8* %51) #9
  br label %52

52:                                               ; preds = %50, %46, %40
  %53 = icmp eq %class.scoped_refptr.107* %42, %33
  br i1 %53, label %54, label %40

54:                                               ; preds = %52
  %55 = bitcast %"class.net::ScopedTestRoot"* %0 to i8**
  %56 = load i8*, i8** %55, align 8
  br label %57

57:                                               ; preds = %54, %35
  %58 = phi i8* [ %56, %54 ], [ %36, %35 ]
  store %class.scoped_refptr.107* %33, %class.scoped_refptr.107** %37, align 8
  call void @_ZdlPv(i8* %58) #9
  br label %59

59:                                               ; preds = %31, %57
  ret void
}

declare i32 @CRYPTO_BUFFER_up_ref(%struct.crypto_buffer_st*) local_unnamed_addr #3

declare zeroext i1 @_ZN4base16ReadFileToStringERKNS_8FilePathEPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.base::FilePath"* dereferenceable(24), %"class.std::__1::basic_string"*) local_unnamed_addr #3

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #3

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #4

declare void @_ZN3net15X509Certificate30CreateCertificateListFromBytesEPKcmi(%"class.std::__1::vector.105"* sret, i8*, i64, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #8
  %7 = load i8, i8* %6, align 8, !range !5
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #8
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #8
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #8
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #8
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #8
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #8
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #8
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #8
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #8
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #9
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #8
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #8
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #9
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #8
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #8
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #4

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64*) local_unnamed_addr #3

declare void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64*, i64, void (i8*)*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net15X509CertificateD1Ev(%"class.net::X509Certificate"*) unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI13scoped_refptrIN3net15X509CertificateEENS_9allocatorIS4_EEE6assignIPS4_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_(%"class.std::__1::vector.105"*, %class.scoped_refptr.107*, %class.scoped_refptr.107*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %class.scoped_refptr.107* %1 to i64
  %5 = ptrtoint %class.scoped_refptr.107* %2 to i64
  %6 = sub i64 %5, %4
  %7 = ashr exact i64 %6, 3
  %8 = getelementptr inbounds %"class.std::__1::vector.105", %"class.std::__1::vector.105"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %class.scoped_refptr.107** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.105"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %class.scoped_refptr.107*
  br i1 %15, label %126, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.105", %"class.std::__1::vector.105"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %class.scoped_refptr.107** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 3
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %class.scoped_refptr.107, %class.scoped_refptr.107* %1, i64 %22
  %25 = select i1 %23, %class.scoped_refptr.107* %24, %class.scoped_refptr.107* %2
  %26 = icmp eq %class.scoped_refptr.107* %25, %1
  br i1 %26, label %52, label %27

27:                                               ; preds = %17, %48
  %28 = phi %class.scoped_refptr.107* [ %50, %48 ], [ %16, %17 ]
  %29 = phi %class.scoped_refptr.107* [ %49, %48 ], [ %1, %17 ]
  %30 = getelementptr inbounds %class.scoped_refptr.107, %class.scoped_refptr.107* %29, i64 0, i32 0
  %31 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %30, align 8
  %32 = icmp eq %"class.net::X509Certificate"* %31, null
  br i1 %32, label %36, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw add i32* %34, i32 1 monotonic
  br label %36

36:                                               ; preds = %33, %27
  %37 = ptrtoint %"class.net::X509Certificate"* %31 to i64
  %38 = bitcast %class.scoped_refptr.107* %28 to i64*
  %39 = getelementptr inbounds %class.scoped_refptr.107, %class.scoped_refptr.107* %28, i64 0, i32 0
  %40 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %39, align 8
  store i64 %37, i64* %38, align 8
  %41 = icmp eq %"class.net::X509Certificate"* %40, null
  br i1 %41, label %48, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = atomicrmw sub i32* %43, i32 1 acq_rel
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %46, label %48

46:                                               ; preds = %42
  tail call void @_ZN3net15X509CertificateD1Ev(%"class.net::X509Certificate"* nonnull %40) #8
  %47 = bitcast %"class.net::X509Certificate"* %40 to i8*
  tail call void @_ZdlPv(i8* %47) #9
  br label %48

48:                                               ; preds = %46, %42, %36
  %49 = getelementptr inbounds %class.scoped_refptr.107, %class.scoped_refptr.107* %29, i64 1
  %50 = getelementptr inbounds %class.scoped_refptr.107, %class.scoped_refptr.107* %28, i64 1
  %51 = icmp eq %class.scoped_refptr.107* %49, %25
  br i1 %51, label %52, label %27

52:                                               ; preds = %48, %17
  %53 = phi %class.scoped_refptr.107* [ %16, %17 ], [ %50, %48 ]
  br i1 %23, label %54, label %108

54:                                               ; preds = %52
  %55 = load i64, i64* %19, align 8
  %56 = icmp eq %class.scoped_refptr.107* %25, %2
  br i1 %56, label %106, label %57

57:                                               ; preds = %54
  %58 = inttoptr i64 %55 to %class.scoped_refptr.107*
  %59 = xor i64 %22, -1
  %60 = getelementptr %class.scoped_refptr.107, %class.scoped_refptr.107* %2, i64 %59, i32 0
  %61 = ptrtoint %"class.net::X509Certificate"** %60 to i64
  %62 = sub i64 %61, %4
  %63 = lshr i64 %62, 3
  %64 = add nuw nsw i64 %63, 1
  %65 = and i64 %64, 3
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %83, label %67

67:                                               ; preds = %57, %78
  %68 = phi %class.scoped_refptr.107* [ %80, %78 ], [ %58, %57 ]
  %69 = phi %class.scoped_refptr.107* [ %79, %78 ], [ %24, %57 ]
  %70 = phi i64 [ %81, %78 ], [ %65, %57 ]
  %71 = getelementptr inbounds %class.scoped_refptr.107, %class.scoped_refptr.107* %69, i64 0, i32 0
  %72 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %71, align 8
  %73 = getelementptr inbounds %class.scoped_refptr.107, %class.scoped_refptr.107* %68, i64 0, i32 0
  store %"class.net::X509Certificate"* %72, %"class.net::X509Certificate"** %73, align 8
  %74 = icmp eq %"class.net::X509Certificate"* %72, null
  br i1 %74, label %78, label %75

75:                                               ; preds = %67
  %76 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %72, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = atomicrmw add i32* %76, i32 1 monotonic
  br label %78

78:                                               ; preds = %75, %67
  %79 = getelementptr inbounds %class.scoped_refptr.107, %class.scoped_refptr.107* %69, i64 1
  %80 = getelementptr inbounds %class.scoped_refptr.107, %class.scoped_refptr.107* %68, i64 1
  %81 = add i64 %70, -1
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %83, label %67, !llvm.loop !6

83:                                               ; preds = %78, %57
  %84 = phi %class.scoped_refptr.107* [ undef, %57 ], [ %80, %78 ]
  %85 = phi %class.scoped_refptr.107* [ %58, %57 ], [ %80, %78 ]
  %86 = phi %class.scoped_refptr.107* [ %24, %57 ], [ %79, %78 ]
  %87 = icmp ult i64 %62, 24
  br i1 %87, label %103, label %88

88:                                               ; preds = %83, %272
  %89 = phi %class.scoped_refptr.107* [ %274, %272 ], [ %85, %83 ]
  %90 = phi %class.scoped_refptr.107* [ %273, %272 ], [ %86, %83 ]
  %91 = getelementptr inbounds %class.scoped_refptr.107, %class.scoped_refptr.107* %90, i64 0, i32 0
  %92 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %91, align 8
  %93 = getelementptr inbounds %class.scoped_refptr.107, %class.scoped_refptr.107* %89, i64 0, i32 0
  store %"class.net::X509Certificate"* %92, %"class.net::X509Certificate"** %93, align 8
  %94 = icmp eq %"class.net::X509Certificate"* %92, null
  br i1 %94, label %98, label %95

95:                                               ; preds = %88
  %96 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %92, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = atomicrmw add i32* %96, i32 1 monotonic
  br label %98

98:                                               ; preds = %95, %88
  %99 = getelementptr inbounds %class.scoped_refptr.107, %class.scoped_refptr.107* %90, i64 1, i32 0
  %100 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %99, align 8
  %101 = getelementptr inbounds %class.scoped_refptr.107, %class.scoped_refptr.107* %89, i64 1, i32 0
  store %"class.net::X509Certificate"* %100, %"class.net::X509Certificate"** %101, align 8
  %102 = icmp eq %"class.net::X509Certificate"* %100, null
  br i1 %102, label %256, label %253

103:                                              ; preds = %272, %83
  %104 = phi %class.scoped_refptr.107* [ %84, %83 ], [ %274, %272 ]
  %105 = ptrtoint %class.scoped_refptr.107* %104 to i64
  br label %106

106:                                              ; preds = %54, %103
  %107 = phi i64 [ %55, %54 ], [ %105, %103 ]
  store i64 %107, i64* %19, align 8
  br label %229

108:                                              ; preds = %52
  %109 = load %class.scoped_refptr.107*, %class.scoped_refptr.107** %18, align 8
  %110 = icmp eq %class.scoped_refptr.107* %109, %53
  br i1 %110, label %125, label %111

111:                                              ; preds = %108, %123
  %112 = phi %class.scoped_refptr.107* [ %113, %123 ], [ %109, %108 ]
  %113 = getelementptr inbounds %class.scoped_refptr.107, %class.scoped_refptr.107* %112, i64 -1
  %114 = getelementptr inbounds %class.scoped_refptr.107, %class.scoped_refptr.107* %113, i64 0, i32 0
  %115 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %114, align 8
  %116 = icmp eq %"class.net::X509Certificate"* %115, null
  br i1 %116, label %123, label %117

117:                                              ; preds = %111
  %118 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %115, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = atomicrmw sub i32* %118, i32 1 acq_rel
  %120 = icmp eq i32 %119, 1
  br i1 %120, label %121, label %123

121:                                              ; preds = %117
  tail call void @_ZN3net15X509CertificateD1Ev(%"class.net::X509Certificate"* nonnull %115) #8
  %122 = bitcast %"class.net::X509Certificate"* %115 to i8*
  tail call void @_ZdlPv(i8* %122) #9
  br label %123

123:                                              ; preds = %121, %117, %111
  %124 = icmp eq %class.scoped_refptr.107* %113, %53
  br i1 %124, label %125, label %111

125:                                              ; preds = %123, %108
  store %class.scoped_refptr.107* %53, %class.scoped_refptr.107** %18, align 8
  br label %229

126:                                              ; preds = %3
  %127 = icmp eq i64 %12, 0
  br i1 %127, label %153, label %128

128:                                              ; preds = %126
  %129 = inttoptr i64 %12 to i8*
  %130 = getelementptr inbounds %"class.std::__1::vector.105", %"class.std::__1::vector.105"* %0, i64 0, i32 0, i32 1
  %131 = load %class.scoped_refptr.107*, %class.scoped_refptr.107** %130, align 8
  %132 = icmp eq %class.scoped_refptr.107* %131, %16
  br i1 %132, label %150, label %133

133:                                              ; preds = %128, %145
  %134 = phi %class.scoped_refptr.107* [ %135, %145 ], [ %131, %128 ]
  %135 = getelementptr inbounds %class.scoped_refptr.107, %class.scoped_refptr.107* %134, i64 -1
  %136 = getelementptr inbounds %class.scoped_refptr.107, %class.scoped_refptr.107* %135, i64 0, i32 0
  %137 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %136, align 8
  %138 = icmp eq %"class.net::X509Certificate"* %137, null
  br i1 %138, label %145, label %139

139:                                              ; preds = %133
  %140 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %137, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %141 = atomicrmw sub i32* %140, i32 1 acq_rel
  %142 = icmp eq i32 %141, 1
  br i1 %142, label %143, label %145

143:                                              ; preds = %139
  tail call void @_ZN3net15X509CertificateD1Ev(%"class.net::X509Certificate"* nonnull %137) #8
  %144 = bitcast %"class.net::X509Certificate"* %137 to i8*
  tail call void @_ZdlPv(i8* %144) #9
  br label %145

145:                                              ; preds = %143, %139, %133
  %146 = icmp eq %class.scoped_refptr.107* %135, %16
  br i1 %146, label %147, label %133

147:                                              ; preds = %145
  %148 = bitcast %"class.std::__1::vector.105"* %0 to i8**
  %149 = load i8*, i8** %148, align 8
  br label %150

150:                                              ; preds = %147, %128
  %151 = phi i8* [ %149, %147 ], [ %129, %128 ]
  store %class.scoped_refptr.107* %16, %class.scoped_refptr.107** %130, align 8
  tail call void @_ZdlPv(i8* %151) #9
  %152 = bitcast %"class.std::__1::vector.105"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %152, i8 0, i64 24, i1 false) #8
  br label %153

153:                                              ; preds = %126, %150
  %154 = phi i64 [ %10, %126 ], [ 0, %150 ]
  %155 = icmp ugt i64 %7, 2305843009213693951
  br i1 %155, label %156, label %158

156:                                              ; preds = %153
  %157 = bitcast %"class.std::__1::vector.105"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %157) #10
  unreachable

158:                                              ; preds = %153
  %159 = ashr exact i64 %154, 3
  %160 = icmp ult i64 %159, 1152921504606846975
  br i1 %160, label %161, label %168

161:                                              ; preds = %158
  %162 = ashr exact i64 %154, 2
  %163 = icmp ult i64 %162, %7
  br i1 %163, label %168, label %164

164:                                              ; preds = %161
  %165 = icmp ugt i64 %162, 2305843009213693951
  br i1 %165, label %166, label %168

166:                                              ; preds = %164
  %167 = bitcast %"class.std::__1::vector.105"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %167) #10
  unreachable

168:                                              ; preds = %161, %158, %164
  %169 = phi i64 [ %162, %164 ], [ 2305843009213693951, %158 ], [ %7, %161 ]
  %170 = shl i64 %169, 3
  %171 = tail call i8* @_Znwm(i64 %170) #9
  %172 = bitcast i8* %171 to %class.scoped_refptr.107*
  %173 = getelementptr inbounds %"class.std::__1::vector.105", %"class.std::__1::vector.105"* %0, i64 0, i32 0, i32 1
  %174 = bitcast %class.scoped_refptr.107** %173 to i8**
  store i8* %171, i8** %174, align 8
  %175 = bitcast %"class.std::__1::vector.105"* %0 to i8**
  store i8* %171, i8** %175, align 8
  %176 = getelementptr inbounds %class.scoped_refptr.107, %class.scoped_refptr.107* %172, i64 %169
  store %class.scoped_refptr.107* %176, %class.scoped_refptr.107** %8, align 8
  %177 = bitcast %class.scoped_refptr.107** %173 to i64*
  %178 = ptrtoint i8* %171 to i64
  %179 = icmp eq %class.scoped_refptr.107* %1, %2
  br i1 %179, label %227, label %180

180:                                              ; preds = %168
  %181 = getelementptr %class.scoped_refptr.107, %class.scoped_refptr.107* %2, i64 -1, i32 0
  %182 = ptrtoint %"class.net::X509Certificate"** %181 to i64
  %183 = sub i64 %182, %4
  %184 = lshr i64 %183, 3
  %185 = add nuw nsw i64 %184, 1
  %186 = and i64 %185, 3
  %187 = icmp eq i64 %186, 0
  br i1 %187, label %204, label %188

188:                                              ; preds = %180, %199
  %189 = phi %class.scoped_refptr.107* [ %201, %199 ], [ %172, %180 ]
  %190 = phi %class.scoped_refptr.107* [ %200, %199 ], [ %1, %180 ]
  %191 = phi i64 [ %202, %199 ], [ %186, %180 ]
  %192 = getelementptr inbounds %class.scoped_refptr.107, %class.scoped_refptr.107* %190, i64 0, i32 0
  %193 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %192, align 8
  %194 = getelementptr inbounds %class.scoped_refptr.107, %class.scoped_refptr.107* %189, i64 0, i32 0
  store %"class.net::X509Certificate"* %193, %"class.net::X509Certificate"** %194, align 8
  %195 = icmp eq %"class.net::X509Certificate"* %193, null
  br i1 %195, label %199, label %196

196:                                              ; preds = %188
  %197 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %193, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %198 = atomicrmw add i32* %197, i32 1 monotonic
  br label %199

199:                                              ; preds = %196, %188
  %200 = getelementptr inbounds %class.scoped_refptr.107, %class.scoped_refptr.107* %190, i64 1
  %201 = getelementptr inbounds %class.scoped_refptr.107, %class.scoped_refptr.107* %189, i64 1
  %202 = add i64 %191, -1
  %203 = icmp eq i64 %202, 0
  br i1 %203, label %204, label %188, !llvm.loop !8

204:                                              ; preds = %199, %180
  %205 = phi %class.scoped_refptr.107* [ undef, %180 ], [ %201, %199 ]
  %206 = phi %class.scoped_refptr.107* [ %172, %180 ], [ %201, %199 ]
  %207 = phi %class.scoped_refptr.107* [ %1, %180 ], [ %200, %199 ]
  %208 = icmp ult i64 %183, 24
  br i1 %208, label %224, label %209

209:                                              ; preds = %204, %249
  %210 = phi %class.scoped_refptr.107* [ %251, %249 ], [ %206, %204 ]
  %211 = phi %class.scoped_refptr.107* [ %250, %249 ], [ %207, %204 ]
  %212 = getelementptr inbounds %class.scoped_refptr.107, %class.scoped_refptr.107* %211, i64 0, i32 0
  %213 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %212, align 8
  %214 = getelementptr inbounds %class.scoped_refptr.107, %class.scoped_refptr.107* %210, i64 0, i32 0
  store %"class.net::X509Certificate"* %213, %"class.net::X509Certificate"** %214, align 8
  %215 = icmp eq %"class.net::X509Certificate"* %213, null
  br i1 %215, label %219, label %216

216:                                              ; preds = %209
  %217 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %213, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %218 = atomicrmw add i32* %217, i32 1 monotonic
  br label %219

219:                                              ; preds = %216, %209
  %220 = getelementptr inbounds %class.scoped_refptr.107, %class.scoped_refptr.107* %211, i64 1, i32 0
  %221 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %220, align 8
  %222 = getelementptr inbounds %class.scoped_refptr.107, %class.scoped_refptr.107* %210, i64 1, i32 0
  store %"class.net::X509Certificate"* %221, %"class.net::X509Certificate"** %222, align 8
  %223 = icmp eq %"class.net::X509Certificate"* %221, null
  br i1 %223, label %233, label %230

224:                                              ; preds = %249, %204
  %225 = phi %class.scoped_refptr.107* [ %205, %204 ], [ %251, %249 ]
  %226 = ptrtoint %class.scoped_refptr.107* %225 to i64
  br label %227

227:                                              ; preds = %168, %224
  %228 = phi i64 [ %178, %168 ], [ %226, %224 ]
  store i64 %228, i64* %177, align 8
  br label %229

229:                                              ; preds = %106, %125, %227
  ret void

230:                                              ; preds = %219
  %231 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %221, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %232 = atomicrmw add i32* %231, i32 1 monotonic
  br label %233

233:                                              ; preds = %230, %219
  %234 = getelementptr inbounds %class.scoped_refptr.107, %class.scoped_refptr.107* %211, i64 2, i32 0
  %235 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %234, align 8
  %236 = getelementptr inbounds %class.scoped_refptr.107, %class.scoped_refptr.107* %210, i64 2, i32 0
  store %"class.net::X509Certificate"* %235, %"class.net::X509Certificate"** %236, align 8
  %237 = icmp eq %"class.net::X509Certificate"* %235, null
  br i1 %237, label %241, label %238

238:                                              ; preds = %233
  %239 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %235, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %240 = atomicrmw add i32* %239, i32 1 monotonic
  br label %241

241:                                              ; preds = %238, %233
  %242 = getelementptr inbounds %class.scoped_refptr.107, %class.scoped_refptr.107* %211, i64 3, i32 0
  %243 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %242, align 8
  %244 = getelementptr inbounds %class.scoped_refptr.107, %class.scoped_refptr.107* %210, i64 3, i32 0
  store %"class.net::X509Certificate"* %243, %"class.net::X509Certificate"** %244, align 8
  %245 = icmp eq %"class.net::X509Certificate"* %243, null
  br i1 %245, label %249, label %246

246:                                              ; preds = %241
  %247 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %243, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %248 = atomicrmw add i32* %247, i32 1 monotonic
  br label %249

249:                                              ; preds = %246, %241
  %250 = getelementptr inbounds %class.scoped_refptr.107, %class.scoped_refptr.107* %211, i64 4
  %251 = getelementptr inbounds %class.scoped_refptr.107, %class.scoped_refptr.107* %210, i64 4
  %252 = icmp eq %class.scoped_refptr.107* %250, %2
  br i1 %252, label %224, label %209

253:                                              ; preds = %98
  %254 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %100, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %255 = atomicrmw add i32* %254, i32 1 monotonic
  br label %256

256:                                              ; preds = %253, %98
  %257 = getelementptr inbounds %class.scoped_refptr.107, %class.scoped_refptr.107* %90, i64 2, i32 0
  %258 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %257, align 8
  %259 = getelementptr inbounds %class.scoped_refptr.107, %class.scoped_refptr.107* %89, i64 2, i32 0
  store %"class.net::X509Certificate"* %258, %"class.net::X509Certificate"** %259, align 8
  %260 = icmp eq %"class.net::X509Certificate"* %258, null
  br i1 %260, label %264, label %261

261:                                              ; preds = %256
  %262 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %258, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %263 = atomicrmw add i32* %262, i32 1 monotonic
  br label %264

264:                                              ; preds = %261, %256
  %265 = getelementptr inbounds %class.scoped_refptr.107, %class.scoped_refptr.107* %90, i64 3, i32 0
  %266 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %265, align 8
  %267 = getelementptr inbounds %class.scoped_refptr.107, %class.scoped_refptr.107* %89, i64 3, i32 0
  store %"class.net::X509Certificate"* %266, %"class.net::X509Certificate"** %267, align 8
  %268 = icmp eq %"class.net::X509Certificate"* %266, null
  br i1 %268, label %272, label %269

269:                                              ; preds = %264
  %270 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %266, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %271 = atomicrmw add i32* %270, i32 1 monotonic
  br label %272

272:                                              ; preds = %269, %264
  %273 = getelementptr inbounds %class.scoped_refptr.107, %class.scoped_refptr.107* %90, i64 4
  %274 = getelementptr inbounds %class.scoped_refptr.107, %class.scoped_refptr.107* %89, i64 4
  %275 = icmp eq %class.scoped_refptr.107* %273, %2
  br i1 %275, label %103, label %88
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN3net12_GLOBAL__N_116LoadCertificatesERKN4base8FilePathE: argument 0"}
!4 = distinct !{!4, !"_ZN3net12_GLOBAL__N_116LoadCertificatesERKN4base8FilePathE"}
!5 = !{i8 0, i8 2}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.unroll.disable"}
!8 = distinct !{!8, !7}
