; ModuleID = '../../third_party/skia/src/shaders/SkColorShader.cpp'
source_filename = "../../third_party/skia/src/shaders/SkColorShader.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.SkColorSpaceXformSteps::Flags" = type { i8, i8, i8, i8, i8 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%class.SkColorShader = type { %class.SkShaderBase.base, i32 }
%class.SkShaderBase.base = type { %class.SkShader.base, %class.SkMatrix }
%class.SkShader.base = type { %class.SkFlattenable.base }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkMatrix = type { [9 x float], i32 }
%class.SkColor4Shader = type { %class.SkShaderBase.base, %class.sk_sp.16, %struct.SkRGBA4f }
%class.sk_sp.16 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.17, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.17 = type { %"struct.std::__1::atomic" }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%struct.SkRGBA4f = type { float, float, float, float }
%class.SkShaderBase = type { %class.SkShader.base, %class.SkMatrix, [4 x i8] }
%class.sk_sp.9 = type { %class.SkFlattenable* }
%class.SkFlattenable = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkReadBuffer = type <{ i8*, i8*, i8*, %class.SkTHashMap, i32, [4 x i8], %class.sk_sp*, i32, [4 x i8], {}**, i32, [4 x i8], %struct.SkDeserialProcs, i8, [7 x i8] }>
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, void (%class.sk_sp.9*, %class.SkReadBuffer*)* }
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%struct.SkDeserialProcs = type { {}*, i8*, {}*, i8*, void (%class.sk_sp*, i8*, i64, i8*)*, i8* }
%class.SkWriteBuffer = type { i32 (...)**, %struct.SkSerialProcs }
%struct.SkSerialProcs = type { void (%class.sk_sp.15*, %class.SkPicture*, i8*)*, i8*, void (%class.sk_sp.15*, %class.SkImage*, i8*)*, i8*, void (%class.sk_sp.15*, %class.SkTypeface*, i8*)*, i8* }
%class.sk_sp.15 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.11", [7 x i8] }>
%"struct.std::__1::atomic.11" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__cxx_atomic_impl.13" }
%"struct.std::__1::__cxx_atomic_impl.13" = type { %"struct.std::__1::__cxx_atomic_base_impl.14" }
%"struct.std::__1::__cxx_atomic_base_impl.14" = type { i8 }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.16, i32, i32 }
%struct.SkISize = type { i32, i32 }
%"struct.SkShader::GradientInfo" = type { i32, i32*, float*, [2 x %struct.SkPoint], [2 x float], i32, i32 }
%struct.SkPoint = type { float, float }
%class.sk_sp.18 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%struct.SkStageRec = type { %class.SkRasterPipeline*, %class.SkArenaAlloc*, i32, %class.SkColorSpace*, %class.SkPaint*, %class.SkMatrix*, %class.SkMatrixProvider* }
%class.SkRasterPipeline = type { %class.SkArenaAlloc*, %"struct.SkRasterPipeline::StageList"*, i32, i32 }
%"struct.SkRasterPipeline::StageList" = type { %"struct.SkRasterPipeline::StageList"*, i32, i8* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%class.SkPaint = type <{ %class.sk_sp.20, %class.sk_sp.18, %class.sk_sp.21, %class.sk_sp.22, %class.sk_sp.23, %struct.SkRGBA4f, float, float, %union.anon, [4 x i8] }>
%class.sk_sp.20 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.21 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.22 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.23 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%union.anon = type { %struct.anon }
%struct.anon = type { i32 }
%class.SkMatrixProvider = type opaque
%struct.SkColorSpaceXformSteps = type { %"struct.SkColorSpaceXformSteps::Flags", %struct.skcms_TransferFunction, %struct.skcms_TransferFunction, [9 x float] }
%"class.skvm::Builder" = type <{ %class.SkTHashMap.25, %"class.std::__1::vector", %"class.std::__1::vector.37", %"struct.skvm::Features", [6 x i8] }>
%class.SkTHashMap.25 = type { %class.SkTHashTable.26 }
%class.SkTHashTable.26 = type { i32, i32, %class.SkAutoTArray.27 }
%class.SkAutoTArray.27 = type { %"class.std::__1::unique_ptr.28" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"struct.SkTHashTable<SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair, skvm::Instruction, SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair, skvm::Instruction, SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair>::Slot" = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.skvm::Instruction"*, %"struct.skvm::Instruction"*, %"class.std::__1::__compressed_pair.34" }
%"struct.skvm::Instruction" = type { i32, i32, i32, i32, i32, i32, i32 }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"struct.skvm::Instruction"* }
%"class.std::__1::vector.37" = type { %"class.std::__1::__vector_base.38" }
%"class.std::__1::__vector_base.38" = type { i32*, i32*, %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { i32* }
%"struct.skvm::Features" = type { i8, i8 }
%"struct.skvm::Coord" = type { %"struct.skvm::F32", %"struct.skvm::F32" }
%"struct.skvm::F32" = type <{ %"class.skvm::Builder"*, i32, [4 x i8] }>
%"struct.skvm::Color" = type { %"struct.skvm::F32", %"struct.skvm::F32", %"struct.skvm::F32", %"struct.skvm::F32" }
%"struct.skvm::Uniforms" = type { %"struct.skvm::Ptr", %"class.std::__1::vector.37" }
%"struct.skvm::Ptr" = type { i32 }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray = type { %"class.std::__1::unique_ptr.44"*, i64 }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %class.GrFragmentProcessor* }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%struct.GrFPArgs = type { %class.GrRecordingContext*, %class.SkMatrixProvider*, %class.SkMatrix*, i8, %class.GrColorInfo* }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.51", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.100" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.50 }
%class.sk_sp.50 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray.54, %class.SkTHashMap.56, %class.SkTHashMap.65, %class.SkTArray.74, %class.SkTArray.76, i32, i8, [3 x i8] }>
%class.SkTArray.54 = type { %"class.std::__1::unique_ptr.55"*, i64 }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.76, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.77 }
%class.sk_sp.77 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.SkTHashMap.56 = type { %class.SkTHashTable.57 }
%class.SkTHashTable.57 = type { i32, i32, %class.SkAutoTArray.58 }
%class.SkAutoTArray.58 = type { %"class.std::__1::unique_ptr.59" }
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.112" }
%"struct.std::__1::pair.112" = type { i32, i32 }
%class.SkTHashMap.65 = type { %class.SkTHashTable.66 }
%class.SkTHashTable.66 = type { i32, i32, %class.SkAutoTArray.67 }
%class.SkAutoTArray.67 = type { %"class.std::__1::unique_ptr.68" }
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.113" }
%"struct.std::__1::pair.113" = type { i32, %class.SkTArray.114* }
%class.SkTArray.114 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.74 = type { %"class.std::__1::unique_ptr.75"*, i64 }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.114, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%class.SkTArray.76 = type { %class.SkString*, i64 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.87" }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %class.SkArenaAlloc* }
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.90 }
%class.SkFibBlockSizes.90 = type { i32 }
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type opaque
%class.GrColorInfo = type { %class.sk_sp.16, %class.sk_sp.106, i32, i32 }
%class.sk_sp.106 = type { %class.GrColorSpaceXform* }
%class.GrColorSpaceXform = type { %class.SkRefCnt.base, %struct.SkColorSpaceXformSteps }
%struct.SkRGBA4f.24 = type { float, float, float, float }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkRuntimeEffect = type opaque
%"class.SkShaderBase::Context" = type <{ i32 (...)**, %class.SkShaderBase*, %class.SkMatrix, %class.SkMatrix, i8, [7 x i8] }>
%"struct.SkShaderBase::ContextRec" = type <{ %class.SkMatrix*, %class.SkMatrix*, i32, [4 x i8], %class.SkColorSpace*, i8, i8, [6 x i8] }>
%class.SkStageUpdater = type { i32 (...)** }

$_ZN13SkColorShaderD0Ev = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNK13SkColorShader10getFactoryEv = comdat any

$_ZNK13SkColorShader11getTypeNameEv = comdat any

$_ZNK12SkShaderBase18getFlattenableTypeEv = comdat any

$_ZNK13SkColorShader10isConstantEv = comdat any

$_ZNK12SkShaderBase10onIsAImageEP8SkMatrixP10SkTileMode = comdat any

$_ZNK12SkShaderBase15asRuntimeEffectEv = comdat any

$_ZNK12SkShaderBase13onMakeContextERKNS_10ContextRecEP12SkArenaAlloc = comdat any

$_ZNK13SkColorShader18onAsLuminanceColorEPj = comdat any

$_ZNK12SkShaderBase23onAppendUpdatableStagesERK10SkStageRec = comdat any

$_ZN14SkColor4ShaderD2Ev = comdat any

$_ZN14SkColor4ShaderD0Ev = comdat any

$_ZNK14SkColor4Shader10getFactoryEv = comdat any

$_ZNK14SkColor4Shader11getTypeNameEv = comdat any

$_ZNK14SkColor4Shader8isOpaqueEv = comdat any

$_ZNK14SkColor4Shader10isConstantEv = comdat any

$_ZNK12SkShaderBase18onAsLuminanceColorEPj = comdat any

@_ZTV13SkColorShader = hidden unnamed_addr constant { [21 x i8*] } { [21 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkShaderBase*)* @_ZN12SkShaderBaseD2Ev to i8*), i8* bitcast (void (%class.SkColorShader*)* @_ZN13SkColorShaderD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void (%class.sk_sp.9*, %class.SkReadBuffer*)* (%class.SkColorShader*)* @_ZNK13SkColorShader10getFactoryEv to i8*), i8* bitcast (i8* (%class.SkColorShader*)* @_ZNK13SkColorShader11getTypeNameEv to i8*), i8* bitcast (void (%class.SkColorShader*, %class.SkWriteBuffer*)* @_ZNK13SkColorShader7flattenER13SkWriteBuffer to i8*), i8* bitcast (i32 (%class.SkShaderBase*)* @_ZNK12SkShaderBase18getFlattenableTypeEv to i8*), i8* bitcast (i1 (%class.SkColorShader*)* @_ZNK13SkColorShader8isOpaqueEv to i8*), i8* bitcast (i32 (%class.SkColorShader*, %"struct.SkShader::GradientInfo"*)* @_ZNK13SkColorShader11asAGradientEPN8SkShader12GradientInfoE to i8*), i8* bitcast (i1 (%class.SkColorShader*)* @_ZNK13SkColorShader10isConstantEv to i8*), i8* bitcast (%class.GrFragmentProcessor* (%class.SkColorShader*, %struct.GrFPArgs*)* @_ZNK13SkColorShader19asFragmentProcessorERK8GrFPArgs to i8*), i8* bitcast (%class.SkImage* (%class.SkShaderBase*, %class.SkMatrix*, i32*)* @_ZNK12SkShaderBase10onIsAImageEP8SkMatrixP10SkTileMode to i8*), i8* bitcast (%class.SkRuntimeEffect* (%class.SkShaderBase*)* @_ZNK12SkShaderBase15asRuntimeEffectEv to i8*), i8* bitcast (void (%class.sk_sp.18*, %class.SkShaderBase*, %class.SkMatrix*)* @_ZNK12SkShaderBase24makeAsALocalMatrixShaderEP8SkMatrix to i8*), i8* bitcast (%"class.SkShaderBase::Context"* (%class.SkShaderBase*, %"struct.SkShaderBase::ContextRec"*, %class.SkArenaAlloc*)* @_ZNK12SkShaderBase13onMakeContextERKNS_10ContextRecEP12SkArenaAlloc to i8*), i8* bitcast (i1 (%class.SkColorShader*, i32*)* @_ZNK13SkColorShader18onAsLuminanceColorEPj to i8*), i8* bitcast (i1 (%class.SkColorShader*, %struct.SkStageRec*)* @_ZNK13SkColorShader14onAppendStagesERK10SkStageRec to i8*), i8* bitcast (%class.SkStageUpdater* (%class.SkShaderBase*, %struct.SkStageRec*)* @_ZNK12SkShaderBase23onAppendUpdatableStagesERK10SkStageRec to i8*), i8* bitcast (void (%"struct.skvm::Color"*, %class.SkColorShader*, %"class.skvm::Builder"*, %"struct.skvm::Coord"*, %"struct.skvm::Coord"*, %"struct.skvm::Color"*, %class.SkMatrixProvider*, %class.SkMatrix*, %class.SkColorInfo*, %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*)* @_ZNK13SkColorShader9onProgramEPN4skvm7BuilderENS0_5CoordES3_NS0_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS0_8UniformsEP12SkArenaAlloc to i8*)] }, align 8
@_ZTV14SkColor4Shader = hidden unnamed_addr constant { [21 x i8*] } { [21 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkColor4Shader*)* @_ZN14SkColor4ShaderD2Ev to i8*), i8* bitcast (void (%class.SkColor4Shader*)* @_ZN14SkColor4ShaderD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void (%class.sk_sp.9*, %class.SkReadBuffer*)* (%class.SkColor4Shader*)* @_ZNK14SkColor4Shader10getFactoryEv to i8*), i8* bitcast (i8* (%class.SkColor4Shader*)* @_ZNK14SkColor4Shader11getTypeNameEv to i8*), i8* bitcast (void (%class.SkColor4Shader*, %class.SkWriteBuffer*)* @_ZNK14SkColor4Shader7flattenER13SkWriteBuffer to i8*), i8* bitcast (i32 (%class.SkShaderBase*)* @_ZNK12SkShaderBase18getFlattenableTypeEv to i8*), i8* bitcast (i1 (%class.SkColor4Shader*)* @_ZNK14SkColor4Shader8isOpaqueEv to i8*), i8* bitcast (i32 (%class.SkShader*, %"struct.SkShader::GradientInfo"*)* @_ZNK8SkShader11asAGradientEPNS_12GradientInfoE to i8*), i8* bitcast (i1 (%class.SkColor4Shader*)* @_ZNK14SkColor4Shader10isConstantEv to i8*), i8* bitcast (%class.GrFragmentProcessor* (%class.SkColor4Shader*, %struct.GrFPArgs*)* @_ZNK14SkColor4Shader19asFragmentProcessorERK8GrFPArgs to i8*), i8* bitcast (%class.SkImage* (%class.SkShaderBase*, %class.SkMatrix*, i32*)* @_ZNK12SkShaderBase10onIsAImageEP8SkMatrixP10SkTileMode to i8*), i8* bitcast (%class.SkRuntimeEffect* (%class.SkShaderBase*)* @_ZNK12SkShaderBase15asRuntimeEffectEv to i8*), i8* bitcast (void (%class.sk_sp.18*, %class.SkShaderBase*, %class.SkMatrix*)* @_ZNK12SkShaderBase24makeAsALocalMatrixShaderEP8SkMatrix to i8*), i8* bitcast (%"class.SkShaderBase::Context"* (%class.SkShaderBase*, %"struct.SkShaderBase::ContextRec"*, %class.SkArenaAlloc*)* @_ZNK12SkShaderBase13onMakeContextERKNS_10ContextRecEP12SkArenaAlloc to i8*), i8* bitcast (i1 (%class.SkShaderBase*, i32*)* @_ZNK12SkShaderBase18onAsLuminanceColorEPj to i8*), i8* bitcast (i1 (%class.SkColor4Shader*, %struct.SkStageRec*)* @_ZNK14SkColor4Shader14onAppendStagesERK10SkStageRec to i8*), i8* bitcast (%class.SkStageUpdater* (%class.SkShaderBase*, %struct.SkStageRec*)* @_ZNK12SkShaderBase23onAppendUpdatableStagesERK10SkStageRec to i8*), i8* bitcast (void (%"struct.skvm::Color"*, %class.SkColor4Shader*, %"class.skvm::Builder"*, %"struct.skvm::Coord"*, %"struct.skvm::Coord"*, %"struct.skvm::Color"*, %class.SkMatrixProvider*, %class.SkMatrix*, %class.SkColorInfo*, %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*)* @_ZNK14SkColor4Shader9onProgramEPN4skvm7BuilderENS0_5CoordES3_NS0_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS0_8UniformsEP12SkArenaAlloc to i8*)] }, align 8
@__const._ZNK14SkColor4Shader19asFragmentProcessorERK8GrFPArgs.steps = private unnamed_addr constant { %"struct.SkColorSpaceXformSteps::Flags", [3 x i8], %struct.skcms_TransferFunction, %struct.skcms_TransferFunction, [9 x float] } { %"struct.SkColorSpaceXformSteps::Flags" { i8 -86, i8 -86, i8 -86, i8 -86, i8 -86 }, [3 x i8] c"\AA\AA\AA", %struct.skcms_TransferFunction { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.skcms_TransferFunction { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, align 4
@.str = private unnamed_addr constant [14 x i8] c"SkColorShader\00", align 1
@.str.1 = private unnamed_addr constant [15 x i8] c"SkColor4Shader\00", align 1

@_ZN13SkColorShaderC1Ej = hidden unnamed_addr alias void (%class.SkColorShader*, i32), void (%class.SkColorShader*, i32)* @_ZN13SkColorShaderC2Ej
@_ZN14SkColor4ShaderC1ERK8SkRGBA4fIL11SkAlphaType3EE5sk_spI12SkColorSpaceE = hidden unnamed_addr alias void (%class.SkColor4Shader*, %struct.SkRGBA4f*, %class.sk_sp.16*), void (%class.SkColor4Shader*, %struct.SkRGBA4f*, %class.sk_sp.16*)* @_ZN14SkColor4ShaderC2ERK8SkRGBA4fIL11SkAlphaType3EE5sk_spI12SkColorSpaceE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkColorShaderC2Ej(%class.SkColorShader*, i32) unnamed_addr #0 align 2 {
  %3 = bitcast %class.SkColorShader* %0 to %class.SkShaderBase*
  tail call void @_ZN12SkShaderBaseC2EPK8SkMatrix(%class.SkShaderBase* %3, %class.SkMatrix* null) #10
  %4 = getelementptr inbounds %class.SkColorShader, %class.SkColorShader* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTV13SkColorShader, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.SkColorShader, %class.SkColorShader* %0, i64 0, i32 1
  store i32 %1, i32* %5, align 4
  ret void
}

declare void @_ZN12SkShaderBaseC2EPK8SkMatrix(%class.SkShaderBase*, %class.SkMatrix*) unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK13SkColorShader8isOpaqueEv(%class.SkColorShader* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.SkColorShader, %class.SkColorShader* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = icmp ugt i32 %3, -16777217
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkColorShader10CreateProcER12SkReadBuffer(%class.sk_sp.9* noalias nocapture sret, %class.SkReadBuffer* dereferenceable(136)) #0 align 2 {
  %3 = tail call i32 @_ZN12SkReadBuffer9readColorEv(%class.SkReadBuffer* %1) #10
  %4 = tail call i8* @_Znwm(i64 56) #11, !noalias !2
  %5 = bitcast i8* %4 to %class.SkShaderBase*
  tail call void @_ZN12SkShaderBaseC2EPK8SkMatrix(%class.SkShaderBase* nonnull %5, %class.SkMatrix* null) #10, !noalias !2
  %6 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTV13SkColorShader, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !noalias !2
  %7 = getelementptr inbounds i8, i8* %4, i64 52
  %8 = bitcast i8* %7 to i32*
  store i32 %3, i32* %8, align 4, !noalias !2
  %9 = ptrtoint i8* %4 to i64
  %10 = bitcast %class.sk_sp.9* %0 to i64*
  store i64 %9, i64* %10, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare i32 @_ZN12SkReadBuffer9readColorEv(%class.SkReadBuffer*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK13SkColorShader7flattenER13SkWriteBuffer(%class.SkColorShader* nocapture readonly, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkColorShader, %class.SkColorShader* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, i32)***
  %6 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %5, align 8
  %7 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %6, i64 12
  %8 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %7, align 8
  tail call void %8(%class.SkWriteBuffer* %1, i32 %4) #10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZNK13SkColorShader11asAGradientEPN8SkShader12GradientInfoE(%class.SkColorShader* nocapture readonly, %"struct.SkShader::GradientInfo"*) unnamed_addr #4 align 2 {
  %3 = icmp eq %"struct.SkShader::GradientInfo"* %1, null
  br i1 %3, label %18, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.SkShader::GradientInfo", %"struct.SkShader::GradientInfo"* %1, i64 0, i32 1
  %6 = load i32*, i32** %5, align 8
  %7 = icmp eq i32* %6, null
  br i1 %7, label %15, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"struct.SkShader::GradientInfo", %"struct.SkShader::GradientInfo"* %1, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %8
  %13 = getelementptr inbounds %class.SkColorShader, %class.SkColorShader* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  store i32 %14, i32* %6, align 4
  br label %15

15:                                               ; preds = %4, %12, %8
  %16 = getelementptr inbounds %"struct.SkShader::GradientInfo", %"struct.SkShader::GradientInfo"* %1, i64 0, i32 0
  store i32 1, i32* %16, align 8
  %17 = getelementptr inbounds %"struct.SkShader::GradientInfo", %"struct.SkShader::GradientInfo"* %1, i64 0, i32 5
  store i32 1, i32* %17, align 8
  br label %18

18:                                               ; preds = %2, %15
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkColor4ShaderC2ERK8SkRGBA4fIL11SkAlphaType3EE5sk_spI12SkColorSpaceE(%class.SkColor4Shader*, %struct.SkRGBA4f* nocapture readonly dereferenceable(16), %class.sk_sp.16* nocapture) unnamed_addr #0 align 2 {
  %4 = bitcast %class.SkColor4Shader* %0 to %class.SkShaderBase*
  tail call void @_ZN12SkShaderBaseC2EPK8SkMatrix(%class.SkShaderBase* %4, %class.SkMatrix* null) #10
  %5 = getelementptr inbounds %class.SkColor4Shader, %class.SkColor4Shader* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTV14SkColor4Shader, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %class.SkColor4Shader, %class.SkColor4Shader* %0, i64 0, i32 1
  %7 = getelementptr inbounds %class.sk_sp.16, %class.sk_sp.16* %2, i64 0, i32 0
  %8 = bitcast %class.sk_sp.16* %2 to i64*
  %9 = load i64, i64* %8, align 8
  store %class.SkColorSpace* null, %class.SkColorSpace** %7, align 8
  %10 = bitcast %class.sk_sp.16* %6 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %class.SkColor4Shader, %class.SkColor4Shader* %0, i64 0, i32 2
  %12 = bitcast %struct.SkRGBA4f* %11 to i8*
  %13 = bitcast %struct.SkRGBA4f* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 4 %13, i64 16, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkColor4Shader10CreateProcER12SkReadBuffer(%class.sk_sp.9* noalias nocapture sret, %class.SkReadBuffer* dereferenceable(136)) #0 align 2 {
  %3 = alloca %struct.SkRGBA4f, align 4
  %4 = alloca %class.sk_sp.15, align 8
  %5 = alloca %class.sk_sp.16, align 8
  %6 = bitcast %struct.SkRGBA4f* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %3, i64 0, i32 0
  %8 = bitcast %struct.SkRGBA4f* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %8, i8 -1, i64 16, i1 false)
  call void @_ZN12SkReadBuffer11readColor4fEP8SkRGBA4fIL11SkAlphaType3EE(%class.SkReadBuffer* %1, %struct.SkRGBA4f* nonnull %3) #10
  %9 = call zeroext i1 @_ZN12SkReadBuffer8readBoolEv(%class.SkReadBuffer* %1) #10
  br i1 %9, label %10, label %34

10:                                               ; preds = %2
  %11 = bitcast %class.sk_sp.15* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #10
  %12 = getelementptr inbounds %class.sk_sp.15, %class.sk_sp.15* %4, i64 0, i32 0
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %12, align 8
  call void @_ZN12SkReadBuffer19readByteArrayAsDataEv(%class.sk_sp.15* nonnull sret %4, %class.SkReadBuffer* %1) #10
  %13 = bitcast %class.sk_sp.16* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #10
  %14 = load %class.SkData*, %class.SkData** %12, align 8
  %15 = icmp eq %class.SkData* %14, null
  br i1 %15, label %16, label %17

16:                                               ; preds = %10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #10
  br label %32

17:                                               ; preds = %10
  %18 = getelementptr inbounds %class.SkData, %class.SkData* %14, i64 0, i32 3
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds %class.SkData, %class.SkData* %14, i64 0, i32 4
  %21 = load i64, i64* %20, align 8
  call void @_ZN12SkColorSpace11DeserializeEPKvm(%class.sk_sp.16* nonnull sret %5, i8* %19, i64 %21) #10
  %22 = bitcast %class.sk_sp.16* %5 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = load %class.SkData*, %class.SkData** %12, align 8
  %25 = bitcast %class.SkData* %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #10
  %26 = icmp eq %class.SkData* %24, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %17
  %28 = getelementptr inbounds %class.SkData, %class.SkData* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = atomicrmw add i32* %28, i32 -1 acq_rel
  %30 = icmp eq i32 %29, 1
  br i1 %30, label %31, label %32

31:                                               ; preds = %27
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %24) #10
  call void @_ZN6SkDatadlEPv(i8* nonnull %25) #10
  br label %32

32:                                               ; preds = %16, %17, %27, %31
  %33 = phi i64 [ 0, %16 ], [ %23, %17 ], [ %23, %27 ], [ %23, %31 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #10
  br label %34

34:                                               ; preds = %32, %2
  %35 = phi i64 [ %33, %32 ], [ 0, %2 ]
  %36 = load float, float* %7, align 4, !noalias !5
  %37 = fmul float %36, 0.000000e+00
  %38 = getelementptr inbounds float, float* %7, i64 1
  %39 = load float, float* %38, align 4, !noalias !5
  %40 = fmul float %37, %39
  %41 = getelementptr inbounds float, float* %7, i64 2
  %42 = load float, float* %41, align 4, !noalias !5
  %43 = fmul float %40, %42
  %44 = getelementptr inbounds float, float* %7, i64 3
  %45 = load float, float* %44, align 4, !noalias !5
  %46 = fmul float %43, %45
  %47 = fcmp oeq float %46, 0.000000e+00
  br i1 %47, label %48, label %57

48:                                               ; preds = %34
  %49 = call i8* @_Znwm(i64 80) #11, !noalias !8
  %50 = bitcast i8* %49 to %class.SkShaderBase*
  call void @_ZN12SkShaderBaseC2EPK8SkMatrix(%class.SkShaderBase* nonnull %50, %class.SkMatrix* null) #10, !noalias !8
  %51 = bitcast i8* %49 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTV14SkColor4Shader, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %51, align 8, !noalias !8
  %52 = getelementptr inbounds i8, i8* %49, i64 56
  %53 = bitcast i8* %52 to i64*
  store i64 %35, i64* %53, align 8, !noalias !8
  %54 = getelementptr inbounds i8, i8* %49, i64 64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* nonnull align 4 %6, i64 16, i1 false) #10, !noalias !8
  %55 = ptrtoint i8* %49 to i64
  %56 = bitcast %class.sk_sp.9* %0 to i64*
  store i64 %55, i64* %56, align 8
  br label %67

57:                                               ; preds = %34
  %58 = bitcast %class.sk_sp.9* %0 to i64*
  store i64 0, i64* %58, align 8
  %59 = icmp eq i64 %35, 0
  br i1 %59, label %67, label %60

60:                                               ; preds = %57
  %61 = inttoptr i64 %35 to %class.SkColorSpace*
  %62 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = atomicrmw add i32* %62, i32 -1 acq_rel
  %64 = icmp eq i32 %63, 1
  br i1 %64, label %65, label %67

65:                                               ; preds = %60
  %66 = inttoptr i64 %35 to i8*
  call void @_ZdlPv(i8* %66) #11
  br label %67

67:                                               ; preds = %65, %60, %57, %48
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

declare void @_ZN12SkReadBuffer11readColor4fEP8SkRGBA4fIL11SkAlphaType3EE(%class.SkReadBuffer*, %struct.SkRGBA4f*) local_unnamed_addr #1

declare zeroext i1 @_ZN12SkReadBuffer8readBoolEv(%class.SkReadBuffer*) local_unnamed_addr #1

declare void @_ZN12SkReadBuffer19readByteArrayAsDataEv(%class.sk_sp.15* sret, %class.SkReadBuffer*) local_unnamed_addr #1

declare void @_ZN12SkColorSpace11DeserializeEPKvm(%class.sk_sp.16* sret, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9SkShaders5ColorERK8SkRGBA4fIL11SkAlphaType3EE5sk_spI12SkColorSpaceE(%class.sk_sp.18* noalias nocapture sret, %struct.SkRGBA4f* nocapture readonly dereferenceable(16), %class.sk_sp.16* nocapture) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %1, i64 0, i32 0
  %5 = load float, float* %4, align 4
  %6 = fmul float %5, 0.000000e+00
  %7 = getelementptr inbounds float, float* %4, i64 1
  %8 = load float, float* %7, align 4
  %9 = fmul float %6, %8
  %10 = getelementptr inbounds float, float* %4, i64 2
  %11 = load float, float* %10, align 4
  %12 = fmul float %9, %11
  %13 = getelementptr inbounds float, float* %4, i64 3
  %14 = load float, float* %13, align 4
  %15 = fmul float %12, %14
  %16 = fcmp oeq float %15, 0.000000e+00
  br i1 %16, label %19, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %0, i64 0, i32 0
  store %class.SkShader* null, %class.SkShader** %18, align 8
  br label %32

19:                                               ; preds = %3
  %20 = tail call i8* @_Znwm(i64 80) #11, !noalias !11
  %21 = getelementptr inbounds %class.sk_sp.16, %class.sk_sp.16* %2, i64 0, i32 0
  %22 = bitcast %class.sk_sp.16* %2 to i64*
  %23 = load i64, i64* %22, align 8, !noalias !11
  store %class.SkColorSpace* null, %class.SkColorSpace** %21, align 8, !noalias !11
  %24 = bitcast i8* %20 to %class.SkShaderBase*
  tail call void @_ZN12SkShaderBaseC2EPK8SkMatrix(%class.SkShaderBase* nonnull %24, %class.SkMatrix* null) #10, !noalias !11
  %25 = bitcast i8* %20 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTV14SkColor4Shader, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %25, align 8, !noalias !11
  %26 = getelementptr inbounds i8, i8* %20, i64 56
  %27 = bitcast i8* %26 to i64*
  store i64 %23, i64* %27, align 8, !noalias !11
  %28 = getelementptr inbounds i8, i8* %20, i64 64
  %29 = bitcast %struct.SkRGBA4f* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 4 %29, i64 16, i1 false) #10, !noalias !11
  %30 = ptrtoint i8* %20 to i64
  %31 = bitcast %class.sk_sp.18* %0 to i64*
  store i64 %30, i64* %31, align 8
  br label %32

32:                                               ; preds = %19, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK14SkColor4Shader7flattenER13SkWriteBuffer(%class.SkColor4Shader*, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = alloca %class.sk_sp.15, align 8
  %4 = getelementptr inbounds %class.SkColor4Shader, %class.SkColor4Shader* %0, i64 0, i32 2
  %5 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, %struct.SkRGBA4f*)***
  %6 = load void (%class.SkWriteBuffer*, %struct.SkRGBA4f*)**, void (%class.SkWriteBuffer*, %struct.SkRGBA4f*)*** %5, align 8
  %7 = getelementptr inbounds void (%class.SkWriteBuffer*, %struct.SkRGBA4f*)*, void (%class.SkWriteBuffer*, %struct.SkRGBA4f*)** %6, i64 14
  %8 = load void (%class.SkWriteBuffer*, %struct.SkRGBA4f*)*, void (%class.SkWriteBuffer*, %struct.SkRGBA4f*)** %7, align 8
  tail call void %8(%class.SkWriteBuffer* %1, %struct.SkRGBA4f* dereferenceable(16) %4) #10
  %9 = bitcast %class.sk_sp.15* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10
  %10 = getelementptr inbounds %class.sk_sp.15, %class.sk_sp.15* %3, i64 0, i32 0
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %10, align 8
  %11 = getelementptr inbounds %class.SkColor4Shader, %class.SkColor4Shader* %0, i64 0, i32 1, i32 0
  %12 = load %class.SkColorSpace*, %class.SkColorSpace** %11, align 8
  %13 = icmp eq %class.SkColorSpace* %12, null
  br i1 %13, label %14, label %19

14:                                               ; preds = %2
  store %class.SkData* null, %class.SkData** %10, align 8
  %15 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, i1)***
  %16 = load void (%class.SkWriteBuffer*, i1)**, void (%class.SkWriteBuffer*, i1)*** %15, align 8
  %17 = getelementptr inbounds void (%class.SkWriteBuffer*, i1)*, void (%class.SkWriteBuffer*, i1)** %16, i64 4
  %18 = load void (%class.SkWriteBuffer*, i1)*, void (%class.SkWriteBuffer*, i1)** %17, align 8
  br label %43

19:                                               ; preds = %2
  call void @_ZNK12SkColorSpace9serializeEv(%class.sk_sp.15* nonnull sret %3, %class.SkColorSpace* nonnull %12) #10
  %20 = load %class.SkData*, %class.SkData** %10, align 8
  %21 = icmp eq %class.SkData* %20, null
  %22 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, i1)***
  %23 = load void (%class.SkWriteBuffer*, i1)**, void (%class.SkWriteBuffer*, i1)*** %22, align 8
  %24 = getelementptr inbounds void (%class.SkWriteBuffer*, i1)*, void (%class.SkWriteBuffer*, i1)** %23, i64 4
  %25 = load void (%class.SkWriteBuffer*, i1)*, void (%class.SkWriteBuffer*, i1)** %24, align 8
  br i1 %21, label %43, label %26

26:                                               ; preds = %19
  call void %25(%class.SkWriteBuffer* %1, i1 zeroext true) #10
  %27 = load %class.SkData*, %class.SkData** %10, align 8
  %28 = icmp eq %class.SkData* %27, null
  br i1 %28, label %29, label %34

29:                                               ; preds = %26
  %30 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, i32)***
  %31 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %30, align 8
  %32 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %31, i64 7
  %33 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %32, align 8
  call void %33(%class.SkWriteBuffer* %1, i32 0) #10
  br label %45

34:                                               ; preds = %26
  %35 = getelementptr inbounds %class.SkData, %class.SkData* %27, i64 0, i32 3
  %36 = load i8*, i8** %35, align 8
  %37 = getelementptr inbounds %class.SkData, %class.SkData* %27, i64 0, i32 4
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, i8*, i64)***
  %40 = load void (%class.SkWriteBuffer*, i8*, i64)**, void (%class.SkWriteBuffer*, i8*, i64)*** %39, align 8
  %41 = getelementptr inbounds void (%class.SkWriteBuffer*, i8*, i64)*, void (%class.SkWriteBuffer*, i8*, i64)** %40, i64 3
  %42 = load void (%class.SkWriteBuffer*, i8*, i64)*, void (%class.SkWriteBuffer*, i8*, i64)** %41, align 8
  call void %42(%class.SkWriteBuffer* %1, i8* %36, i64 %38) #10
  br label %45

43:                                               ; preds = %19, %14
  %44 = phi void (%class.SkWriteBuffer*, i1)* [ %18, %14 ], [ %25, %19 ]
  call void %44(%class.SkWriteBuffer* %1, i1 zeroext false) #10
  br label %45

45:                                               ; preds = %34, %29, %43
  %46 = load %class.SkData*, %class.SkData** %10, align 8
  %47 = icmp eq %class.SkData* %46, null
  br i1 %47, label %54, label %48

48:                                               ; preds = %45
  %49 = getelementptr inbounds %class.SkData, %class.SkData* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = atomicrmw add i32* %49, i32 -1 acq_rel
  %51 = icmp eq i32 %50, 1
  br i1 %51, label %52, label %54

52:                                               ; preds = %48
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %46) #10
  %53 = bitcast %class.SkData* %46 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %53) #10
  br label %54

54:                                               ; preds = %45, %48, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  ret void
}

declare void @_ZNK12SkColorSpace9serializeEv(%class.sk_sp.15* sret, %class.SkColorSpace*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK13SkColorShader14onAppendStagesERK10SkStageRec(%class.SkColorShader* nocapture readonly, %struct.SkStageRec* nocapture readonly dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = alloca { <2 x float>, <2 x float> }, align 8
  %4 = bitcast { <2 x float>, <2 x float> }* %3 to %struct.SkRGBA4f*
  %5 = alloca %struct.SkColorSpaceXformSteps, align 4
  %6 = alloca { <2 x float>, <2 x float> }, align 8
  %7 = bitcast { <2 x float>, <2 x float> }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #10
  %8 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 0, i64 0
  %9 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 1, i64 0
  %10 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %4, i64 0, i32 3
  %11 = getelementptr inbounds %class.SkColorShader, %class.SkColorShader* %0, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = tail call { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32 %12) #10
  %14 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 0
  %15 = extractvalue { <2 x float>, <2 x float> } %13, 0
  store <2 x float> %15, <2 x float>* %14, align 8
  %16 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 1
  %17 = extractvalue { <2 x float>, <2 x float> } %13, 1
  store <2 x float> %17, <2 x float>* %16, align 8
  %18 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %5, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 100, i8* nonnull %18) #10
  %19 = tail call %class.SkColorSpace* @_Z17sk_srgb_singletonv() #10
  %20 = getelementptr inbounds %struct.SkStageRec, %struct.SkStageRec* %1, i64 0, i32 3
  %21 = load %class.SkColorSpace*, %class.SkColorSpace** %20, align 8
  call void @_ZN22SkColorSpaceXformStepsC1EPK12SkColorSpace11SkAlphaTypeS2_S3_(%struct.SkColorSpaceXformSteps* nonnull %5, %class.SkColorSpace* %19, i32 3, %class.SkColorSpace* %21, i32 3) #10
  call void @_ZNK22SkColorSpaceXformSteps5applyEPf(%struct.SkColorSpaceXformSteps* nonnull %5, float* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 100, i8* nonnull %18) #10
  %22 = getelementptr inbounds %struct.SkStageRec, %struct.SkStageRec* %1, i64 0, i32 0
  %23 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %22, align 8
  %24 = getelementptr inbounds %struct.SkStageRec, %struct.SkStageRec* %1, i64 0, i32 1
  %25 = load %class.SkArenaAlloc*, %class.SkArenaAlloc** %24, align 8
  %26 = bitcast { <2 x float>, <2 x float> }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #10
  %27 = load float, float* %10, align 4
  %28 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 0
  %29 = load <2 x float>, <2 x float>* %28, align 8
  %30 = insertelement <2 x float> undef, float %27, i32 0
  %31 = shufflevector <2 x float> %30, <2 x float> undef, <2 x i32> zeroinitializer
  %32 = fmul <2 x float> %29, %31
  %33 = load float, float* %9, align 8
  %34 = fmul float %27, %33
  %35 = insertelement <2 x float> undef, float %34, i32 0
  %36 = insertelement <2 x float> %35, float %27, i32 1
  %37 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 0
  store <2 x float> %32, <2 x float>* %37, align 8
  %38 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 1
  store <2 x float> %36, <2 x float>* %38, align 8
  %39 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 0, i64 0
  call void @_ZN16SkRasterPipeline21append_constant_colorEP12SkArenaAllocPKf(%class.SkRasterPipeline* %23, %class.SkArenaAlloc* %25, float* nonnull %39) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #10
  ret i1 true
}

declare { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32) local_unnamed_addr #1

declare %class.SkColorSpace* @_Z17sk_srgb_singletonv() local_unnamed_addr #1

declare void @_ZN22SkColorSpaceXformStepsC1EPK12SkColorSpace11SkAlphaTypeS2_S3_(%struct.SkColorSpaceXformSteps*, %class.SkColorSpace*, i32, %class.SkColorSpace*, i32) unnamed_addr #1

declare void @_ZNK22SkColorSpaceXformSteps5applyEPf(%struct.SkColorSpaceXformSteps*, float*) local_unnamed_addr #1

declare void @_ZN16SkRasterPipeline21append_constant_colorEP12SkArenaAllocPKf(%class.SkRasterPipeline*, %class.SkArenaAlloc*, float*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK14SkColor4Shader14onAppendStagesERK10SkStageRec(%class.SkColor4Shader* nocapture readonly, %struct.SkStageRec* nocapture readonly dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = alloca %struct.SkRGBA4f, align 8
  %4 = alloca %struct.SkColorSpaceXformSteps, align 4
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = bitcast %struct.SkRGBA4f* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %3, i64 0, i32 0
  %8 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %3, i64 0, i32 2
  %9 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %3, i64 0, i32 3
  %10 = getelementptr inbounds %class.SkColor4Shader, %class.SkColor4Shader* %0, i64 0, i32 2
  %11 = bitcast %struct.SkRGBA4f* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 8 %11, i64 16, i1 false)
  %12 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %4, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 100, i8* nonnull %12) #10
  %13 = getelementptr inbounds %class.SkColor4Shader, %class.SkColor4Shader* %0, i64 0, i32 1, i32 0
  %14 = load %class.SkColorSpace*, %class.SkColorSpace** %13, align 8
  %15 = getelementptr inbounds %struct.SkStageRec, %struct.SkStageRec* %1, i64 0, i32 3
  %16 = load %class.SkColorSpace*, %class.SkColorSpace** %15, align 8
  call void @_ZN22SkColorSpaceXformStepsC1EPK12SkColorSpace11SkAlphaTypeS2_S3_(%struct.SkColorSpaceXformSteps* nonnull %4, %class.SkColorSpace* %14, i32 3, %class.SkColorSpace* %16, i32 3) #10
  call void @_ZNK22SkColorSpaceXformSteps5applyEPf(%struct.SkColorSpaceXformSteps* nonnull %4, float* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 100, i8* nonnull %12) #10
  %17 = getelementptr inbounds %struct.SkStageRec, %struct.SkStageRec* %1, i64 0, i32 0
  %18 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %17, align 8
  %19 = getelementptr inbounds %struct.SkStageRec, %struct.SkStageRec* %1, i64 0, i32 1
  %20 = load %class.SkArenaAlloc*, %class.SkArenaAlloc** %19, align 8
  %21 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #10
  %22 = load float, float* %9, align 4
  %23 = bitcast %struct.SkRGBA4f* %3 to <2 x float>*
  %24 = load <2 x float>, <2 x float>* %23, align 8
  %25 = insertelement <2 x float> undef, float %22, i32 0
  %26 = shufflevector <2 x float> %25, <2 x float> undef, <2 x i32> zeroinitializer
  %27 = fmul <2 x float> %24, %26
  %28 = load float, float* %8, align 8
  %29 = fmul float %22, %28
  %30 = insertelement <2 x float> undef, float %29, i32 0
  %31 = insertelement <2 x float> %30, float %22, i32 1
  %32 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  store <2 x float> %27, <2 x float>* %32, align 8
  %33 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  store <2 x float> %31, <2 x float>* %33, align 8
  %34 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0, i64 0
  call void @_ZN16SkRasterPipeline21append_constant_colorEP12SkArenaAllocPKf(%class.SkRasterPipeline* %18, %class.SkArenaAlloc* %20, float* nonnull %34) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK13SkColorShader9onProgramEPN4skvm7BuilderENS0_5CoordES3_NS0_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS0_8UniformsEP12SkArenaAlloc(%"struct.skvm::Color"* noalias sret, %class.SkColorShader* nocapture readonly, %"class.skvm::Builder"*, %"struct.skvm::Coord"* nocapture readnone byval(%"struct.skvm::Coord") align 8, %"struct.skvm::Coord"* nocapture readnone byval(%"struct.skvm::Coord") align 8, %"struct.skvm::Color"* nocapture readnone byval(%"struct.skvm::Color") align 8, %class.SkMatrixProvider* nocapture readnone, %class.SkMatrix* nocapture readnone, %class.SkColorInfo* nocapture readonly dereferenceable(16), %"struct.skvm::Uniforms"*, %class.SkArenaAlloc* nocapture readnone) unnamed_addr #5 align 2 {
  %12 = alloca { <2 x float>, <2 x float> }, align 8
  %13 = alloca %struct.SkColorSpaceXformSteps, align 4
  %14 = bitcast { <2 x float>, <2 x float> }* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #10
  %15 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %12, i64 0, i32 0, i64 0
  %16 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %12, i64 0, i32 1, i64 0
  %17 = getelementptr inbounds %class.SkColorShader, %class.SkColorShader* %1, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = tail call { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32 %18) #10
  %20 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %12, i64 0, i32 0
  %21 = extractvalue { <2 x float>, <2 x float> } %19, 0
  store <2 x float> %21, <2 x float>* %20, align 8
  %22 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %12, i64 0, i32 1
  %23 = extractvalue { <2 x float>, <2 x float> } %19, 1
  store <2 x float> %23, <2 x float>* %22, align 8
  %24 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %13, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 100, i8* nonnull %24) #10
  %25 = tail call %class.SkColorSpace* @_Z17sk_srgb_singletonv() #10
  %26 = getelementptr inbounds %class.SkColorInfo, %class.SkColorInfo* %8, i64 0, i32 0, i32 0
  %27 = load %class.SkColorSpace*, %class.SkColorSpace** %26, align 8
  call void @_ZN22SkColorSpaceXformStepsC1EPK12SkColorSpace11SkAlphaTypeS2_S3_(%struct.SkColorSpaceXformSteps* nonnull %13, %class.SkColorSpace* %25, i32 3, %class.SkColorSpace* %27, i32 2) #10
  call void @_ZNK22SkColorSpaceXformSteps5applyEPf(%struct.SkColorSpaceXformSteps* nonnull %13, float* nonnull %15) #10
  call void @llvm.lifetime.end.p0i8(i64 100, i8* nonnull %24) #10
  %28 = load <2 x float>, <2 x float>* %20, align 8
  %29 = bitcast float* %16 to <2 x float>*
  %30 = load <2 x float>, <2 x float>* %29, align 8
  call void @_ZN4skvm7Builder12uniformColorE8SkRGBA4fIL11SkAlphaType3EEPNS_8UniformsE(%"struct.skvm::Color"* sret %0, %"class.skvm::Builder"* %2, <2 x float> %28, <2 x float> %30, %"struct.skvm::Uniforms"* %9) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #10
  ret void
}

declare void @_ZN4skvm7Builder12uniformColorE8SkRGBA4fIL11SkAlphaType3EEPNS_8UniformsE(%"struct.skvm::Color"* sret, %"class.skvm::Builder"*, <2 x float>, <2 x float>, %"struct.skvm::Uniforms"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK14SkColor4Shader9onProgramEPN4skvm7BuilderENS0_5CoordES3_NS0_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS0_8UniformsEP12SkArenaAlloc(%"struct.skvm::Color"* noalias sret, %class.SkColor4Shader* nocapture readonly, %"class.skvm::Builder"*, %"struct.skvm::Coord"* nocapture readnone byval(%"struct.skvm::Coord") align 8, %"struct.skvm::Coord"* nocapture readnone byval(%"struct.skvm::Coord") align 8, %"struct.skvm::Color"* nocapture readnone byval(%"struct.skvm::Color") align 8, %class.SkMatrixProvider* nocapture readnone, %class.SkMatrix* nocapture readnone, %class.SkColorInfo* nocapture readonly dereferenceable(16), %"struct.skvm::Uniforms"*, %class.SkArenaAlloc* nocapture readnone) unnamed_addr #5 align 2 {
  %12 = alloca %struct.SkRGBA4f, align 8
  %13 = alloca %struct.SkColorSpaceXformSteps, align 4
  %14 = bitcast %struct.SkRGBA4f* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #10
  %15 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %12, i64 0, i32 0
  %16 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %12, i64 0, i32 2
  %17 = getelementptr inbounds %class.SkColor4Shader, %class.SkColor4Shader* %1, i64 0, i32 2
  %18 = bitcast %struct.SkRGBA4f* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* align 8 %18, i64 16, i1 false)
  %19 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %13, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 100, i8* nonnull %19) #10
  %20 = getelementptr inbounds %class.SkColor4Shader, %class.SkColor4Shader* %1, i64 0, i32 1, i32 0
  %21 = load %class.SkColorSpace*, %class.SkColorSpace** %20, align 8
  %22 = getelementptr inbounds %class.SkColorInfo, %class.SkColorInfo* %8, i64 0, i32 0, i32 0
  %23 = load %class.SkColorSpace*, %class.SkColorSpace** %22, align 8
  call void @_ZN22SkColorSpaceXformStepsC1EPK12SkColorSpace11SkAlphaTypeS2_S3_(%struct.SkColorSpaceXformSteps* nonnull %13, %class.SkColorSpace* %21, i32 3, %class.SkColorSpace* %23, i32 2) #10
  call void @_ZNK22SkColorSpaceXformSteps5applyEPf(%struct.SkColorSpaceXformSteps* nonnull %13, float* nonnull %15) #10
  call void @llvm.lifetime.end.p0i8(i64 100, i8* nonnull %19) #10
  %24 = bitcast %struct.SkRGBA4f* %12 to <2 x float>*
  %25 = load <2 x float>, <2 x float>* %24, align 8
  %26 = bitcast float* %16 to <2 x float>*
  %27 = load <2 x float>, <2 x float>* %26, align 8
  call void @_ZN4skvm7Builder12uniformColorE8SkRGBA4fIL11SkAlphaType3EEPNS_8UniformsE(%"struct.skvm::Color"* sret %0, %"class.skvm::Builder"* %2, <2 x float> %25, <2 x float> %27, %"struct.skvm::Uniforms"* %9) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrFragmentProcessor* @_ZNK13SkColorShader19asFragmentProcessorERK8GrFPArgs(%class.SkColorShader* nocapture readonly, %struct.GrFPArgs* nocapture readonly dereferenceable(40)) unnamed_addr #0 align 2 {
  %3 = alloca { <2 x float>, <2 x float> }, align 8
  %4 = bitcast { <2 x float>, <2 x float> }* %3 to %struct.SkRGBA4f.24*
  %5 = bitcast { <2 x float>, <2 x float> }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #10
  %6 = getelementptr inbounds %class.SkColorShader, %class.SkColorShader* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %struct.GrFPArgs, %struct.GrFPArgs* %1, i64 0, i32 4
  %9 = load %class.GrColorInfo*, %class.GrColorInfo** %8, align 8
  %10 = tail call { <2 x float>, <2 x float> } @_Z18SkColorToPMColor4fjRK11GrColorInfo(i32 %7, %class.GrColorInfo* dereferenceable(24) %9) #10
  %11 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 0
  %12 = extractvalue { <2 x float>, <2 x float> } %10, 0
  store <2 x float> %12, <2 x float>* %11, align 8
  %13 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 1
  %14 = extractvalue { <2 x float>, <2 x float> } %10, 1
  store <2 x float> %14, <2 x float>* %13, align 8
  %15 = call %class.GrFragmentProcessor* @_ZN19GrFragmentProcessor13ModulateAlphaENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEERK8SkRGBA4fIL11SkAlphaType2EE(%class.GrFragmentProcessor* null, %struct.SkRGBA4f.24* nonnull dereferenceable(16) %4) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #10
  ret %class.GrFragmentProcessor* %15
}

declare %class.GrFragmentProcessor* @_ZN19GrFragmentProcessor13ModulateAlphaENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEERK8SkRGBA4fIL11SkAlphaType2EE(%class.GrFragmentProcessor*, %struct.SkRGBA4f.24* dereferenceable(16)) local_unnamed_addr #1

declare { <2 x float>, <2 x float> } @_Z18SkColorToPMColor4fjRK11GrColorInfo(i32, %class.GrColorInfo* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrFragmentProcessor* @_ZNK14SkColor4Shader19asFragmentProcessorERK8GrFPArgs(%class.SkColor4Shader* nocapture readonly, %struct.GrFPArgs* nocapture readonly dereferenceable(40)) unnamed_addr #0 align 2 {
  %3 = alloca %struct.SkColorSpaceXformSteps, align 4
  %4 = alloca %struct.SkRGBA4f, align 8
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = bitcast { <2 x float>, <2 x float> }* %5 to %struct.SkRGBA4f.24*
  %7 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %3, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 100, i8* nonnull %7) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %7, i8* align 4 getelementptr inbounds ({ %"struct.SkColorSpaceXformSteps::Flags", [3 x i8], %struct.skcms_TransferFunction, %struct.skcms_TransferFunction, [9 x float] }, { %"struct.SkColorSpaceXformSteps::Flags", [3 x i8], %struct.skcms_TransferFunction, %struct.skcms_TransferFunction, [9 x float] }* @__const._ZNK14SkColor4Shader19asFragmentProcessorERK8GrFPArgs.steps, i64 0, i32 0, i32 0), i64 100, i1 false)
  %8 = getelementptr inbounds %class.SkColor4Shader, %class.SkColor4Shader* %0, i64 0, i32 1, i32 0
  %9 = load %class.SkColorSpace*, %class.SkColorSpace** %8, align 8
  %10 = getelementptr inbounds %struct.GrFPArgs, %struct.GrFPArgs* %1, i64 0, i32 4
  %11 = load %class.GrColorInfo*, %class.GrColorInfo** %10, align 8
  %12 = getelementptr inbounds %class.GrColorInfo, %class.GrColorInfo* %11, i64 0, i32 0, i32 0
  %13 = load %class.SkColorSpace*, %class.SkColorSpace** %12, align 8
  call void @_ZN22SkColorSpaceXformStepsC1EPK12SkColorSpace11SkAlphaTypeS2_S3_(%struct.SkColorSpaceXformSteps* nonnull %3, %class.SkColorSpace* %9, i32 3, %class.SkColorSpace* %13, i32 3) #10
  %14 = bitcast %struct.SkRGBA4f* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #10
  %15 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %4, i64 0, i32 0
  %16 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %4, i64 0, i32 2
  %17 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %4, i64 0, i32 3
  %18 = getelementptr inbounds %class.SkColor4Shader, %class.SkColor4Shader* %0, i64 0, i32 2
  %19 = bitcast %struct.SkRGBA4f* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* align 8 %19, i64 16, i1 false)
  call void @_ZNK22SkColorSpaceXformSteps5applyEPf(%struct.SkColorSpaceXformSteps* nonnull %3, float* nonnull %15) #10
  %20 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #10
  %21 = load float, float* %17, align 4
  %22 = bitcast %struct.SkRGBA4f* %4 to <2 x float>*
  %23 = load <2 x float>, <2 x float>* %22, align 8
  %24 = insertelement <2 x float> undef, float %21, i32 0
  %25 = shufflevector <2 x float> %24, <2 x float> undef, <2 x i32> zeroinitializer
  %26 = fmul <2 x float> %23, %25
  %27 = load float, float* %16, align 8
  %28 = fmul float %21, %27
  %29 = insertelement <2 x float> undef, float %28, i32 0
  %30 = insertelement <2 x float> %29, float %21, i32 1
  %31 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  store <2 x float> %26, <2 x float>* %31, align 8
  %32 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  store <2 x float> %30, <2 x float>* %32, align 8
  %33 = call %class.GrFragmentProcessor* @_ZN19GrFragmentProcessor13ModulateAlphaENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEERK8SkRGBA4fIL11SkAlphaType2EE(%class.GrFragmentProcessor* null, %struct.SkRGBA4f.24* nonnull dereferenceable(16) %6) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #10
  call void @llvm.lifetime.end.p0i8(i64 100, i8* nonnull %7) #10
  ret %class.GrFragmentProcessor* %33
}

; Function Attrs: nounwind
declare void @_ZN12SkShaderBaseD2Ev(%class.SkShaderBase*) unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkColorShaderD0Ev(%class.SkColorShader*) unnamed_addr #7 comdat align 2 {
  %2 = bitcast %class.SkColorShader* %0 to %class.SkShaderBase*
  tail call void @_ZN12SkShaderBaseD2Ev(%class.SkShaderBase* %2) #10
  %3 = bitcast %class.SkColorShader* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #10
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void (%class.sk_sp.9*, %class.SkReadBuffer*)* @_ZNK13SkColorShader10getFactoryEv(%class.SkColorShader*) unnamed_addr #0 comdat align 2 {
  ret void (%class.sk_sp.9*, %class.SkReadBuffer*)* @_ZN13SkColorShader10CreateProcER12SkReadBuffer
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK13SkColorShader11getTypeNameEv(%class.SkColorShader*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK12SkShaderBase18getFlattenableTypeEv(%class.SkShaderBase*) unnamed_addr #0 comdat align 2 {
  ret i32 8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK13SkColorShader10isConstantEv(%class.SkColorShader*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkImage* @_ZNK12SkShaderBase10onIsAImageEP8SkMatrixP10SkTileMode(%class.SkShaderBase*, %class.SkMatrix*, i32*) unnamed_addr #0 comdat align 2 {
  ret %class.SkImage* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkRuntimeEffect* @_ZNK12SkShaderBase15asRuntimeEffectEv(%class.SkShaderBase*) unnamed_addr #0 comdat align 2 {
  ret %class.SkRuntimeEffect* null
}

declare void @_ZNK12SkShaderBase24makeAsALocalMatrixShaderEP8SkMatrix(%class.sk_sp.18* sret, %class.SkShaderBase*, %class.SkMatrix*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkShaderBase::Context"* @_ZNK12SkShaderBase13onMakeContextERKNS_10ContextRecEP12SkArenaAlloc(%class.SkShaderBase*, %"struct.SkShaderBase::ContextRec"* dereferenceable(40), %class.SkArenaAlloc*) unnamed_addr #0 comdat align 2 {
  ret %"class.SkShaderBase::Context"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK13SkColorShader18onAsLuminanceColorEPj(%class.SkColorShader*, i32*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkColorShader, %class.SkColorShader* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  store i32 %4, i32* %1, align 4
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkStageUpdater* @_ZNK12SkShaderBase23onAppendUpdatableStagesERK10SkStageRec(%class.SkShaderBase*, %struct.SkStageRec* dereferenceable(56)) unnamed_addr #0 comdat align 2 {
  ret %class.SkStageUpdater* null
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14SkColor4ShaderD2Ev(%class.SkColor4Shader*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %class.SkColor4Shader, %class.SkColor4Shader* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTV14SkColor4Shader, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkColor4Shader, %class.SkColor4Shader* %0, i64 0, i32 1, i32 0
  %4 = load %class.SkColorSpace*, %class.SkColorSpace** %3, align 8
  %5 = icmp eq %class.SkColorSpace* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  %11 = bitcast %class.SkColorSpace* %4 to i8*
  tail call void @_ZdlPv(i8* %11) #11
  br label %12

12:                                               ; preds = %1, %6, %10
  %13 = bitcast %class.SkColor4Shader* %0 to %class.SkShaderBase*
  tail call void @_ZN12SkShaderBaseD2Ev(%class.SkShaderBase* %13) #10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14SkColor4ShaderD0Ev(%class.SkColor4Shader*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %class.SkColor4Shader, %class.SkColor4Shader* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTV14SkColor4Shader, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkColor4Shader, %class.SkColor4Shader* %0, i64 0, i32 1, i32 0
  %4 = load %class.SkColorSpace*, %class.SkColorSpace** %3, align 8
  %5 = icmp eq %class.SkColorSpace* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  %11 = bitcast %class.SkColorSpace* %4 to i8*
  tail call void @_ZdlPv(i8* %11) #11
  br label %12

12:                                               ; preds = %1, %6, %10
  %13 = bitcast %class.SkColor4Shader* %0 to %class.SkShaderBase*
  tail call void @_ZN12SkShaderBaseD2Ev(%class.SkShaderBase* %13) #10
  %14 = bitcast %class.SkColor4Shader* %0 to i8*
  tail call void @_ZdlPv(i8* %14) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void (%class.sk_sp.9*, %class.SkReadBuffer*)* @_ZNK14SkColor4Shader10getFactoryEv(%class.SkColor4Shader*) unnamed_addr #0 comdat align 2 {
  ret void (%class.sk_sp.9*, %class.SkReadBuffer*)* @_ZN14SkColor4Shader10CreateProcER12SkReadBuffer
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK14SkColor4Shader11getTypeNameEv(%class.SkColor4Shader*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK14SkColor4Shader8isOpaqueEv(%class.SkColor4Shader*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.SkColor4Shader, %class.SkColor4Shader* %0, i64 0, i32 2, i32 3
  %3 = load float, float* %2, align 4
  %4 = fcmp oeq float %3, 1.000000e+00
  ret i1 %4
}

declare i32 @_ZNK8SkShader11asAGradientEPNS_12GradientInfoE(%class.SkShader*, %"struct.SkShader::GradientInfo"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK14SkColor4Shader10isConstantEv(%class.SkColor4Shader*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK12SkShaderBase18onAsLuminanceColorEPj(%class.SkShaderBase*, i32*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_Z10sk_make_spI13SkColorShaderJjEE5sk_spIT_EDpOT0_: argument 0"}
!4 = distinct !{!4, !"_Z10sk_make_spI13SkColorShaderJjEE5sk_spIT_EDpOT0_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN9SkShaders5ColorERK8SkRGBA4fIL11SkAlphaType3EE5sk_spI12SkColorSpaceE: argument 0"}
!7 = distinct !{!7, !"_ZN9SkShaders5ColorERK8SkRGBA4fIL11SkAlphaType3EE5sk_spI12SkColorSpaceE"}
!8 = !{!9, !6}
!9 = distinct !{!9, !10, !"_Z10sk_make_spI14SkColor4ShaderJRK8SkRGBA4fIL11SkAlphaType3EE5sk_spI12SkColorSpaceEEES6_IT_EDpOT0_: argument 0"}
!10 = distinct !{!10, !"_Z10sk_make_spI14SkColor4ShaderJRK8SkRGBA4fIL11SkAlphaType3EE5sk_spI12SkColorSpaceEEES6_IT_EDpOT0_"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_Z10sk_make_spI14SkColor4ShaderJRK8SkRGBA4fIL11SkAlphaType3EE5sk_spI12SkColorSpaceEEES6_IT_EDpOT0_: argument 0"}
!13 = distinct !{!13, !"_Z10sk_make_spI14SkColor4ShaderJRK8SkRGBA4fIL11SkAlphaType3EE5sk_spI12SkColorSpaceEEES6_IT_EDpOT0_"}
