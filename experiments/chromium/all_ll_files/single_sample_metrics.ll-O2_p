; ModuleID = '../../base/metrics/single_sample_metrics.cc'
source_filename = "../../base/metrics/single_sample_metrics.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::SingleSampleMetricsFactory" = type { i32 (...)** }
%"class.base::DefaultSingleSampleMetric" = type <{ %"class.base::SingleSampleMetric", %"class.base::HistogramBase"*, i32, [4 x i8] }>
%"class.base::SingleSampleMetric" = type { i32 (...)** }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic", [4 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::DefaultSingleSampleMetricsFactory" = type { %"class.base::SingleSampleMetricsFactory" }

$_ZN4base26SingleSampleMetricsFactoryD2Ev = comdat any

$_ZN4base33DefaultSingleSampleMetricsFactoryD0Ev = comdat any

@_ZN4baseL9g_factoryE = internal unnamed_addr global %"class.base::SingleSampleMetricsFactory"* null, align 8
@_ZTVN4base25DefaultSingleSampleMetricE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::DefaultSingleSampleMetric"*)* @_ZN4base25DefaultSingleSampleMetricD2Ev to i8*), i8* bitcast (void (%"class.base::DefaultSingleSampleMetric"*)* @_ZN4base25DefaultSingleSampleMetricD0Ev to i8*), i8* bitcast (void (%"class.base::DefaultSingleSampleMetric"*, i32)* @_ZN4base25DefaultSingleSampleMetric9SetSampleEi to i8*)] }, align 8
@_ZTVN4base33DefaultSingleSampleMetricsFactoryE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::SingleSampleMetricsFactory"*)* @_ZN4base26SingleSampleMetricsFactoryD2Ev to i8*), i8* bitcast (void (%"class.base::DefaultSingleSampleMetricsFactory"*)* @_ZN4base33DefaultSingleSampleMetricsFactoryD0Ev to i8*), i8* bitcast (%"class.base::SingleSampleMetric"* (%"class.base::DefaultSingleSampleMetricsFactory"*, %"class.std::__1::basic_string"*, i32, i32, i32)* @_ZN4base33DefaultSingleSampleMetricsFactory24CreateCustomCountsMetricERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiij to i8*)] }, align 8

@_ZN4base25DefaultSingleSampleMetricC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiiji = hidden unnamed_addr alias void (%"class.base::DefaultSingleSampleMetric"*, %"class.std::__1::basic_string"*, i32, i32, i32, i32), void (%"class.base::DefaultSingleSampleMetric"*, %"class.std::__1::basic_string"*, i32, i32, i32, i32)* @_ZN4base25DefaultSingleSampleMetricC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiiji
@_ZN4base25DefaultSingleSampleMetricD1Ev = hidden unnamed_addr alias void (%"class.base::DefaultSingleSampleMetric"*), void (%"class.base::DefaultSingleSampleMetric"*)* @_ZN4base25DefaultSingleSampleMetricD2Ev

; Function Attrs: nofree nounwind ssp uwtable
define hidden %"class.base::SingleSampleMetricsFactory"* @_ZN4base26SingleSampleMetricsFactory3GetEv() local_unnamed_addr #0 align 2 {
  %1 = load %"class.base::SingleSampleMetricsFactory"*, %"class.base::SingleSampleMetricsFactory"** @_ZN4baseL9g_factoryE, align 8
  %2 = icmp eq %"class.base::SingleSampleMetricsFactory"* %1, null
  br i1 %2, label %3, label %7

3:                                                ; preds = %0
  %4 = tail call i8* @_Znwm(i64 8) #6
  %5 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base33DefaultSingleSampleMetricsFactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  store i8* %4, i8** bitcast (%"class.base::SingleSampleMetricsFactory"** @_ZN4baseL9g_factoryE to i8**), align 8
  %6 = bitcast i8* %4 to %"class.base::SingleSampleMetricsFactory"*
  br label %7

7:                                                ; preds = %0, %3
  %8 = phi %"class.base::SingleSampleMetricsFactory"* [ %1, %0 ], [ %6, %3 ]
  ret %"class.base::SingleSampleMetricsFactory"* %8
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base26SingleSampleMetricsFactory10SetFactoryENSt3__110unique_ptrIS0_NS1_14default_deleteIS0_EEEE(%"class.base::SingleSampleMetricsFactory"*) local_unnamed_addr #2 align 2 {
  store %"class.base::SingleSampleMetricsFactory"* %0, %"class.base::SingleSampleMetricsFactory"** @_ZN4baseL9g_factoryE, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base26SingleSampleMetricsFactory23DeleteFactoryForTestingEv() local_unnamed_addr #2 align 2 {
  %1 = load %"class.base::SingleSampleMetricsFactory"*, %"class.base::SingleSampleMetricsFactory"** @_ZN4baseL9g_factoryE, align 8
  %2 = icmp eq %"class.base::SingleSampleMetricsFactory"* %1, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %0
  %4 = bitcast %"class.base::SingleSampleMetricsFactory"* %1 to void (%"class.base::SingleSampleMetricsFactory"*)***
  %5 = load void (%"class.base::SingleSampleMetricsFactory"*)**, void (%"class.base::SingleSampleMetricsFactory"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.base::SingleSampleMetricsFactory"*)*, void (%"class.base::SingleSampleMetricsFactory"*)** %5, i64 1
  %7 = load void (%"class.base::SingleSampleMetricsFactory"*)*, void (%"class.base::SingleSampleMetricsFactory"*)** %6, align 8
  tail call void %7(%"class.base::SingleSampleMetricsFactory"* nonnull %1) #7
  br label %8

8:                                                ; preds = %3, %0
  store %"class.base::SingleSampleMetricsFactory"* null, %"class.base::SingleSampleMetricsFactory"** @_ZN4baseL9g_factoryE, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::SingleSampleMetric"* @_ZN4base33DefaultSingleSampleMetricsFactory24CreateCustomCountsMetricERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiij(%"class.base::DefaultSingleSampleMetricsFactory"* nocapture readnone, %"class.std::__1::basic_string"* dereferenceable(24), i32, i32, i32) unnamed_addr #2 align 2 {
  %6 = tail call i8* @_Znwm(i64 24) #6
  %7 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base25DefaultSingleSampleMetricE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds i8, i8* %6, i64 8
  %9 = bitcast i8* %8 to %"class.base::HistogramBase"**
  %10 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiiji(%"class.std::__1::basic_string"* dereferenceable(24) %1, i32 %2, i32 %3, i32 %4, i32 1) #7
  store %"class.base::HistogramBase"* %10, %"class.base::HistogramBase"** %9, align 8
  %11 = getelementptr inbounds i8, i8* %6, i64 16
  %12 = bitcast i8* %11 to i32*
  store i32 -1, i32* %12, align 8
  %13 = bitcast i8* %6 to %"class.base::SingleSampleMetric"*
  ret %"class.base::SingleSampleMetric"* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base25DefaultSingleSampleMetricC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiiji(%"class.base::DefaultSingleSampleMetric"* nocapture, %"class.std::__1::basic_string"* dereferenceable(24), i32, i32, i32, i32) unnamed_addr #2 align 2 {
  %7 = getelementptr inbounds %"class.base::DefaultSingleSampleMetric", %"class.base::DefaultSingleSampleMetric"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base25DefaultSingleSampleMetricE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.base::DefaultSingleSampleMetric", %"class.base::DefaultSingleSampleMetric"* %0, i64 0, i32 1
  %9 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiiji(%"class.std::__1::basic_string"* dereferenceable(24) %1, i32 %2, i32 %3, i32 %4, i32 %5) #7
  store %"class.base::HistogramBase"* %9, %"class.base::HistogramBase"** %8, align 8
  %10 = getelementptr inbounds %"class.base::DefaultSingleSampleMetric", %"class.base::DefaultSingleSampleMetric"* %0, i64 0, i32 2
  store i32 -1, i32* %10, align 8
  ret void
}

declare %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiiji(%"class.std::__1::basic_string"* dereferenceable(24), i32, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base25DefaultSingleSampleMetricD2Ev(%"class.base::DefaultSingleSampleMetric"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.base::DefaultSingleSampleMetric", %"class.base::DefaultSingleSampleMetric"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base25DefaultSingleSampleMetricE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::DefaultSingleSampleMetric", %"class.base::DefaultSingleSampleMetric"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp slt i32 %4, 0
  br i1 %5, label %15, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::DefaultSingleSampleMetric", %"class.base::DefaultSingleSampleMetric"* %0, i64 0, i32 1
  %8 = load %"class.base::HistogramBase"*, %"class.base::HistogramBase"** %7, align 8
  %9 = icmp eq %"class.base::HistogramBase"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = bitcast %"class.base::HistogramBase"* %8 to void (%"class.base::HistogramBase"*, i32)***
  %12 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %12, i64 6
  %14 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %13, align 8
  tail call void %14(%"class.base::HistogramBase"* nonnull %8, i32 %4) #7
  br label %15

15:                                               ; preds = %1, %6, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base25DefaultSingleSampleMetricD0Ev(%"class.base::DefaultSingleSampleMetric"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.base::DefaultSingleSampleMetric", %"class.base::DefaultSingleSampleMetric"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base25DefaultSingleSampleMetricE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::DefaultSingleSampleMetric", %"class.base::DefaultSingleSampleMetric"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp slt i32 %4, 0
  br i1 %5, label %15, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::DefaultSingleSampleMetric", %"class.base::DefaultSingleSampleMetric"* %0, i64 0, i32 1
  %8 = load %"class.base::HistogramBase"*, %"class.base::HistogramBase"** %7, align 8
  %9 = icmp eq %"class.base::HistogramBase"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = bitcast %"class.base::HistogramBase"* %8 to void (%"class.base::HistogramBase"*, i32)***
  %12 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %12, i64 6
  %14 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %13, align 8
  tail call void %14(%"class.base::HistogramBase"* nonnull %8, i32 %4) #7
  br label %15

15:                                               ; preds = %1, %6, %10
  %16 = bitcast %"class.base::DefaultSingleSampleMetric"* %0 to i8*
  tail call void @_ZdlPv(i8* %16) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4base25DefaultSingleSampleMetric9SetSampleEi(%"class.base::DefaultSingleSampleMetric"* nocapture, i32) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.base::DefaultSingleSampleMetric", %"class.base::DefaultSingleSampleMetric"* %0, i64 0, i32 2
  store i32 %1, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base26SingleSampleMetricsFactoryD2Ev(%"class.base::SingleSampleMetricsFactory"*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base33DefaultSingleSampleMetricsFactoryD0Ev(%"class.base::DefaultSingleSampleMetricsFactory"*) unnamed_addr #2 comdat align 2 {
  %2 = bitcast %"class.base::DefaultSingleSampleMetricsFactory"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #6
  ret void
}

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { builtin nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
