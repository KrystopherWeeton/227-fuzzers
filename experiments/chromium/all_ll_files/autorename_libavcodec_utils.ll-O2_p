; ModuleID = '../../third_party/ffmpeg/libavcodec/autorename_libavcodec_utils.c'
source_filename = "../../third_party/ffmpeg/libavcodec/autorename_libavcodec_utils.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal**, i32* }
%struct.AVRational = type { i32, i32 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)*, %struct.AVClass* (i8**)* }
%struct.AVOption = type { i8*, i8*, i32, i32, %union.anon, double, double, i32, i8* }
%union.anon = type { i64 }
%struct.AVOptionRanges = type { %struct.AVOptionRange**, i32, i32 }
%struct.AVOptionRange = type { i8*, double, double, double, double, i32 }
%struct.AVProfile = type { i32, i8* }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32, i64, i32 }
%struct.AVCodecInternal = type { i32, i32, %struct.AVFrame*, %struct.AVBufferRef*, i8*, %struct.DecodeSimpleContext, %struct.AVBSFContext*, %struct.AVPacket*, %struct.AVFifoBuffer*, i8*, i32, i8*, %struct.EncodeSimpleContext, i32, i8*, i32, %struct.AVPacket*, %struct.AVFrame*, i32, i32, i64, i64, %struct.AVFrame*, %struct.AVPacket*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64 }
%struct.DecodeSimpleContext = type { %struct.AVPacket* }
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVBSFInternal = type opaque
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVFifoBuffer = type { i8*, i8*, i8*, i8*, i32, i32 }
%struct.EncodeSimpleContext = type { %struct.AVFrame* }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*)*, i32, void (%struct.MpegEncContext*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type { %struct.AVClass*, i32, i32, i32, [12 x i32], i32, %struct.ScanTable, %struct.ScanTable, %struct.ScanTable, %struct.ScanTable, %struct.AVCodecContext*, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, %struct.Picture*, %struct.Picture**, %struct.Picture**, i64, i64, i64, %struct.PutBitContext, i32, i32, [32 x %struct.MpegEncContext*], i32, %struct.Picture, %struct.Picture, %struct.Picture, %struct.Picture, %struct.Picture*, %struct.Picture*, %struct.Picture*, [3 x i32], i16*, [3 x i16*], i8*, i8*, i8*, i8*, i8*, [16 x i16]*, [3 x [16 x i16]*], i32, i8*, i8*, i8*, i8*, %struct.ScratchpadContext, i32, i32, i32, i32, i32*, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.AVRational, [5 x i32], i32, i32, i32, %struct.BlockDSPContext, %struct.FDCTDSPContext, %struct.H264ChromaContext, %struct.HpelDSPContext, %struct.IDCTDSPContext, %struct.MECmpContext, %struct.MpegVideoDSPContext, %struct.MpegvideoEncDSPContext, %struct.PixblockDSPContext, %struct.QpelDSPContext, %struct.VideoDSPContext, %struct.H263DSPContext, i32, i32, [2 x i16]*, [2 x i16]*, [2 x i16]*, [2 x i16]*, [2 x i16]*, [2 x i16]*, [2 x [2 x [2 x i16]*]], [2 x [2 x [2 x [2 x i16]*]]], [2 x i16]*, [2 x i16]*, [2 x i16]*, [2 x i16]*, [2 x i16]*, [2 x i16]*, [2 x [2 x [2 x i16]*]], [2 x [2 x [2 x [2 x i16]*]]], [2 x i8*], [2 x [2 x i8*]], i32, i32, i32, i32, i32, [2 x [4 x [2 x i32]]], [2 x [2 x i32]], [2 x [2 x [2 x i32]]], i8*, [2 x [64 x i16]], %struct.MotionEstContext, i32, i32, i32, i32, i32, i16*, [6 x i32], [6 x i32], [3 x i8*], i32*, [64 x i16], [64 x i16], [64 x i16], [64 x i16], i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, [12 x i32], [64 x i32]*, [64 x i32]*, [64 x i32]*, [2 x [64 x i16]]*, [2 x [64 x i16]]*, [2 x [64 x i16]]*, [64 x i32]*, [2 x i32], [64 x i16]*, i64, i32, i32, i32, %struct.RateControlContext, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.GetBitContext, i32, i32, %struct.ParseContext, i32, i32, i32, i32, i32, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i16, i16, i16, i16, i32, [2 x [2 x i32]], [2 x [2 x i32]], i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.PutBitContext, %struct.PutBitContext, i32, i32, i32, i8*, i32, i32, i32, [3 x i32], %struct.MJpegContext*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x [65 x [65 x [2 x i32]]]]*, i32, i32, i32, %struct.GetBitContext, i32, i32, i8*, i32, [2 x [2 x i32]], i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32], i32, i32, i32, i32, i32, i32, i8*, %struct.AVTimecode, i8*, i32, i32, [12 x [64 x i16]*], [64 x i16]*, [12 x [64 x i16]]*, i32 (%struct.MpegEncContext*, [64 x i16]*)*, [12 x [64 x i32]]*, i32, [3 x [256 x i16]]*, void (%struct.MpegEncContext*, i16*, i32, i32)*, void (%struct.MpegEncContext*, i16*, i32, i32)*, void (%struct.MpegEncContext*, i16*, i32, i32)*, void (%struct.MpegEncContext*, i16*, i32, i32)*, void (%struct.MpegEncContext*, i16*, i32, i32)*, void (%struct.MpegEncContext*, i16*, i32, i32)*, void (%struct.MpegEncContext*, i16*, i32, i32)*, void (%struct.MpegEncContext*, i16*, i32, i32)*, i32 (%struct.MpegEncContext*, i16*, i32, i32, i32*)*, i32 (%struct.MpegEncContext*, i16*, i32, i32, i32*)*, void (%struct.MpegEncContext*, i16*)*, i32, i32, float, float, i32, float, float, float, i32, i32, i32, i8*, float*, float*, i32, %struct.ERContext, i32, [18 x %struct.AVFrame*], i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ScanTable = type { i8*, [64 x i8], [64 x i8] }
%struct.Picture = type { %struct.AVFrame*, %struct.ThreadFrame, %struct.AVBufferRef*, i8*, [2 x %struct.AVBufferRef*], [2 x [2 x i16]*], %struct.AVBufferRef*, i32*, %struct.AVBufferRef*, i8*, [2 x %struct.AVBufferRef*], [2 x i8*], %struct.AVBufferRef*, i16*, %struct.AVBufferRef*, i16*, i32, i32, i32, %struct.AVBufferRef*, i8*, %struct.AVBufferRef*, i8*, i32, i64, i64, i32, i32, i32, i32, [8 x i64] }
%struct.ThreadFrame = type { %struct.AVFrame*, [2 x %struct.AVCodecContext*], %struct.AVBufferRef* }
%struct.ScratchpadContext = type { i8*, i8*, i8*, i8* }
%struct.BlockDSPContext = type { void (i16*)*, void (i16*)*, [2 x void (i8*, i8, i64, i32)*] }
%struct.FDCTDSPContext = type { void (i16*)*, void (i16*)* }
%struct.H264ChromaContext = type { [4 x void (i8*, i8*, i64, i32, i32, i32)*], [4 x void (i8*, i8*, i64, i32, i32, i32)*] }
%struct.HpelDSPContext = type { [4 x [4 x void (i8*, i8*, i64, i32)*]], [4 x [4 x void (i8*, i8*, i64, i32)*]], [4 x [4 x void (i8*, i8*, i64, i32)*]], [4 x void (i8*, i8*, i64, i32)*] }
%struct.IDCTDSPContext = type { void (i16*, i8*, i64)*, void (i16*, i8*, i64)*, void (i16*, i8*, i64)*, void (i16*)*, void (i8*, i64, i16*)*, void (i8*, i64, i16*)*, [64 x i8], i32, i32 }
%struct.MECmpContext = type { i32 (i16*)*, [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [2 x [4 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*] }
%struct.MpegVideoDSPContext = type { void (i8*, i8*, i32, i32, i32, i32, i32)*, void (i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)* }
%struct.MpegvideoEncDSPContext = type { i32 (i16*, i16*, i16*, i32)*, void (i16*, i16*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, [4 x void (i8*, i32, i8*, i32, i32, i32)*], void (i8*, i32, i32, i32, i32, i32, i32)* }
%struct.PixblockDSPContext = type { void (i16*, i8*, i64)*, void (i16*, i8*, i64)*, void (i16*, i8*, i8*, i64)*, void (i16*, i8*, i8*, i64)* }
%struct.QpelDSPContext = type { [2 x [16 x void (i8*, i8*, i64)*]], [2 x [16 x void (i8*, i8*, i64)*]], [2 x [16 x void (i8*, i8*, i64)*]] }
%struct.VideoDSPContext = type { void (i8*, i8*, i64, i64, i32, i32, i32, i32, i32, i32)*, void (i8*, i64, i32)* }
%struct.H263DSPContext = type { void (i8*, i32, i32)*, void (i8*, i32, i32)* }
%struct.MotionEstContext = type { %struct.AVCodecContext*, i32, [4 x [2 x i32]], [4 x [2 x i32]], i8*, i8*, [2 x i8*], i8*, i32, i32*, i32*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x [4 x i8*]], [4 x [4 x i8*]], i32, i32, i64, i64, i32, [4 x void (i8*, i8*, i64, i32)*]*, [4 x void (i8*, i8*, i64, i32)*]*, [16 x void (i8*, i8*, i64)*]*, [16 x void (i8*, i8*, i64)*]*, [16385 x i8]*, i8*, i32 (%struct.MpegEncContext*, i32*, i32*, i32, i32, i32, i32, i32)* }
%struct.RateControlContext = type { i32, %struct.RateControlEntry*, double, [5 x %struct.Predictor], double, double, double, double, double, [5 x double], i64, i64, [5 x i64], [5 x i64], [5 x i64], [5 x i64], [5 x i32], i32, i8*, float, i32, %struct.AVExpr* }
%struct.RateControlEntry = type { i32, float, i32, i32, i32, i32, i32, i64, i32, float, i64, i64, i32, i32, i32, i32 }
%struct.Predictor = type { double, double, double }
%struct.AVExpr = type opaque
%struct.ParseContext = type { i8*, i32, i32, i32, i32, i32, i32, i32, i64 }
%struct.PutBitContext = type { i64, i32, i8*, i8*, i8*, i32 }
%struct.MJpegContext = type opaque
%struct.GetBitContext = type { i8*, i8*, i32, i32, i32 }
%struct.AVTimecode = type { i32, i32, %struct.AVRational, i32 }
%struct.ERContext = type { %struct.AVCodecContext*, %struct.MECmpContext, i32, i32*, i32, i32, i32, i64, i64, i32, i32, i8*, i8*, [3 x i16*], i8*, i8*, [2 x [4 x [2 x i32]]], %struct.ERPicture, %struct.ERPicture, %struct.ERPicture, [2 x %struct.AVBufferRef*], [2 x %struct.AVBufferRef*], i16, i16, i32, i32, i32, void (i8*, i32, i32, i32, [2 x [4 x [2 x i32]]]*, i32, i32, i32, i32)*, i8* }
%struct.ERPicture = type { %struct.AVFrame*, %struct.ThreadFrame*, [2 x [2 x i16]*], [2 x i8*], i32*, i32 }
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVDictionary = type opaque
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVCodecDefault = type { i8*, i8* }
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVCodecHWConfigInternal = type { %struct.AVCodecHWConfig, %struct.AVHWAccel* }
%struct.AVCodecHWConfig = type { i32, i32, i32 }
%struct.AVPixFmtDescriptor = type { i8*, i8, i8, i8, i64, [4 x %struct.AVComponentDescriptor], i8* }
%struct.AVComponentDescriptor = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.PixelFormatTag = type { i32, i32 }
%struct.AVHWFramesContext = type { %struct.AVClass*, %struct.AVHWFramesInternal*, %struct.AVBufferRef*, %struct.AVHWDeviceContext*, i8*, void (%struct.AVHWFramesContext*)*, i8*, %struct.AVBufferPool*, i32, i32, i32, i32, i32 }
%struct.AVHWFramesInternal = type opaque
%struct.AVHWDeviceContext = type { %struct.AVClass*, %struct.AVHWDeviceInternal*, i32, i8*, void (%struct.AVHWDeviceContext*)*, i8* }
%struct.AVHWDeviceInternal = type opaque
%struct.AVBufferPool = type opaque
%struct.AVCPBProperties = type { i32, i32, i32, i32, i64 }

@av_codec_ffversion = hidden local_unnamed_addr constant [36 x i8] c"FFmpeg version N-102522-gec861011d1\00", align 16
@.str = private unnamed_addr constant [29 x i8] c"ignoring invalid SAR: %d/%d\0A\00", align 1
@.str.1 = private unnamed_addr constant [30 x i8] c"Assertion %s failed at %s:%d\0A\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"desc->flags & (1 << 4)\00", align 1
@.str.3 = private unnamed_addr constant [44 x i8] c"../../third_party/ffmpeg/libavcodec/utils.c\00", align 1
@.str.4 = private unnamed_addr constant [38 x i8] c"No codec provided to avcodec_open2()\0A\00", align 1
@.str.5 = private unnamed_addr constant [76 x i8] c"This AVCodecContext was allocated for %s, but %s passed to avcodec_open2()\0A\00", align 1
@.str.6 = private unnamed_addr constant [34 x i8] c"Codec (%s) not on whitelist '%s'\0A\00", align 1
@.str.7 = private unnamed_addr constant [38 x i8] c"Ignoring invalid width/height values\0A\00", align 1
@.str.8 = private unnamed_addr constant [29 x i8] c"ignoring invalid SAR: %u/%u\0A\00", align 1
@.str.9 = private unnamed_addr constant [34 x i8] c"Too many or invalid channels: %d\0A\00", align 1
@.str.10 = private unnamed_addr constant [53 x i8] c"Decoder requires channel count but channels not set\0A\00", align 1
@.str.11 = private unnamed_addr constant [25 x i8] c"Invalid sample rate: %d\0A\00", align 1
@.str.12 = private unnamed_addr constant [25 x i8] c"Invalid block align: %d\0A\00", align 1
@.str.13 = private unnamed_addr constant [169 x i8] c"Requested frame threading with a custom get_buffer2() implementation which is not marked as thread safe. This is not supported anymore, make your callback thread-safe.\0A\00", align 1
@.str.14 = private unnamed_addr constant [29 x i8] c"Codec type or id mismatches\0A\00", align 1
@.str.15 = private unnamed_addr constant [8 x i8] c"encoder\00", align 1
@.str.16 = private unnamed_addr constant [8 x i8] c"decoder\00", align 1
@.str.17 = private unnamed_addr constant [110 x i8] c"The %s '%s' is experimental but experimental codecs are not enabled, add '-strict %d' if you want to use it.\0A\00", align 1
@.str.18 = private unnamed_addr constant [49 x i8] c"Alternatively use the non experimental %s '%s'.\0A\00", align 1
@.str.19 = private unnamed_addr constant [61 x i8] c"The maximum value for lowres supported by the decoder is %d\0A\00", align 1
@.str.20 = private unnamed_addr constant [34 x i8] c"The encoder timebase is not set.\0A\00", align 1
@.str.21 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.22 = private unnamed_addr constant [56 x i8] c"Specified sample format %s is invalid or not supported\0A\00", align 1
@.str.23 = private unnamed_addr constant [55 x i8] c"Specified pixel format %s is invalid or not supported\0A\00", align 1
@.str.24 = private unnamed_addr constant [43 x i8] c"Specified sample rate %d is not supported\0A\00", align 1
@.str.25 = private unnamed_addr constant [30 x i8] c"Channel layout not specified\0A\00", align 1
@.str.26 = private unnamed_addr constant [48 x i8] c"Specified channel layout '%s' is not supported\0A\00", align 1
@.str.27 = private unnamed_addr constant [85 x i8] c"Channel layout '%s' with %d channels does not match number of specified channels %d\0A\00", align 1
@.str.28 = private unnamed_addr constant [50 x i8] c"Specified number of channels %d is not supported\0A\00", align 1
@.str.29 = private unnamed_addr constant [79 x i8] c"Specified bit depth %d not possible with the specified pixel formats depth %d\0A\00", align 1
@.str.30 = private unnamed_addr constant [20 x i8] c"dimensions not set\0A\00", align 1
@.str.31 = private unnamed_addr constant [51 x i8] c"Bitrate %ld is extremely low, maybe you mean %ldk\0A\00", align 1
@.str.32 = private unnamed_addr constant [53 x i8] c"ticks_per_frame %d too large for the timebase %d/%d.\00", align 1
@.str.33 = private unnamed_addr constant [65 x i8] c"Mismatching AVCodecContext.pix_fmt and AVHWFramesContext.format\0A\00", align 1
@.str.34 = private unnamed_addr constant [81 x i8] c"Mismatching AVCodecContext.sw_pix_fmt (%s) and AVHWFramesContext.sw_format (%s)\0A\00", align 1
@.str.35 = private unnamed_addr constant [63 x i8] c"gray decoding requested but not enabled at configuration time\0A\00", align 1
@.str.36 = private unnamed_addr constant [120 x i8] c"Channel layout '%s' with %d channels does not match specified number of channels %d: ignoring specified channel layout\0A\00", align 1
@.str.37 = private unnamed_addr constant [60 x i8] c"Character encoding is only supported with subtitles codecs\0A\00", align 1
@.str.38 = private unnamed_addr constant [74 x i8] c"Codec '%s' is bitmap-based, subtitles character encoding will be ignored\0A\00", align 1
@.str.39 = private unnamed_addr constant [100 x i8] c"Character encoding subtitles conversion needs a libavcodec built with iconv support for this codec\0A\00", align 1
@.str.40 = private unnamed_addr constant [57 x i8] c"*(const AVClass **)avctx->priv_data == codec->priv_class\00", align 1
@.str.41 = private unnamed_addr constant [59 x i8] c"Ignoring attempt to flush encoder that doesn't support it\0A\00", align 1
@.str.42 = private unnamed_addr constant [20 x i8] c"!(caps & (1 << 12))\00", align 1
@.str.43 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.44 = private unnamed_addr constant [37 x i8] c"Codec 0x%x is not in the full list.\0A\00", align 1
@.str.45 = private unnamed_addr constant [14 x i8] c"unknown_codec\00", align 1
@.str.46 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.47 = private unnamed_addr constant [5 x i8] c"[%d]\00", align 1
@.str.48 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.49 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.50 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@.str.51 = private unnamed_addr constant [6 x i8] c" (%s)\00", align 1
@.str.52 = private unnamed_addr constant [23 x i8] c", %d reference frame%s\00", align 1
@.str.53 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.54 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.55 = private unnamed_addr constant [15 x i8] c" (%s / 0x%04X)\00", align 1
@.str.56 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.57 = private unnamed_addr constant [9 x i8] c"%d bpc, \00", align 1
@.str.58 = private unnamed_addr constant [5 x i8] c"%s, \00", align 1
@.str.59 = private unnamed_addr constant [11 x i8] c"%s/%s/%s, \00", align 1
@.str.60 = private unnamed_addr constant [12 x i8] c"progressive\00", align 1
@.str.61 = private unnamed_addr constant [10 x i8] c"top first\00", align 1
@.str.62 = private unnamed_addr constant [13 x i8] c"bottom first\00", align 1
@.str.63 = private unnamed_addr constant [26 x i8] c"top coded first (swapped)\00", align 1
@.str.64 = private unnamed_addr constant [29 x i8] c"bottom coded first (swapped)\00", align 1
@.str.65 = private unnamed_addr constant [4 x i8] c"%s)\00", align 1
@.str.66 = private unnamed_addr constant [6 x i8] c"%dx%d\00", align 1
@.str.67 = private unnamed_addr constant [9 x i8] c" (%dx%d)\00", align 1
@.str.68 = private unnamed_addr constant [23 x i8] c" [SAR %d:%d DAR %d:%d]\00", align 1
@.str.69 = private unnamed_addr constant [8 x i8] c", %d/%d\00", align 1
@.str.70 = private unnamed_addr constant [10 x i8] c", q=%d-%d\00", align 1
@.str.71 = private unnamed_addr constant [18 x i8] c", Closed Captions\00", align 1
@.str.72 = private unnamed_addr constant [11 x i8] c", lossless\00", align 1
@.str.73 = private unnamed_addr constant [8 x i8] c"%d Hz, \00", align 1
@.str.74 = private unnamed_addr constant [5 x i8] c", %s\00", align 1
@.str.75 = private unnamed_addr constant [10 x i8] c" (%d bit)\00", align 1
@.str.76 = private unnamed_addr constant [11 x i8] c", delay %d\00", align 1
@.str.77 = private unnamed_addr constant [13 x i8] c", padding %d\00", align 1
@.str.78 = private unnamed_addr constant [8 x i8] c", %dx%d\00", align 1
@.str.79 = private unnamed_addr constant [9 x i8] c", pass 1\00", align 1
@.str.80 = private unnamed_addr constant [9 x i8] c", pass 2\00", align 1
@.str.81 = private unnamed_addr constant [11 x i8] c", %ld kb/s\00", align 1
@.str.82 = private unnamed_addr constant [16 x i8] c", max. %ld kb/s\00", align 1
@.str.83 = private unnamed_addr constant [46 x i8] c"libavcodec license: LGPL version 2.1 or later\00", align 1
@av_get_pcm_codec.map = internal unnamed_addr constant [12 x [2 x i32]] [[2 x i32] [i32 65541, i32 65541], [2 x i32] [i32 65536, i32 65537], [2 x i32] [i32 65544, i32 65545], [2 x i32] [i32 65557, i32 65556], [2 x i32] [i32 65559, i32 65558], [2 x i32] [i32 65541, i32 65541], [2 x i32] [i32 65536, i32 65537], [2 x i32] [i32 65544, i32 65545], [2 x i32] [i32 65557, i32 65556], [2 x i32] [i32 65559, i32 65558], [2 x i32] zeroinitializer, [2 x i32] [i32 67584, i32 67585]], align 16
@.str.84 = private unnamed_addr constant [15 x i8] c"!dst->progress\00", align 1
@.str.85 = private unnamed_addr constant [9 x i8] c"p <= end\00", align 1
@.str.86 = private unnamed_addr constant [52 x i8] c"%s %d are not supported. Set to default value : %d\0A\00", align 1
@.str.87 = private unnamed_addr constant [17 x i8] c"val || !min_size\00", align 1
@.str.88 = private unnamed_addr constant [50 x i8] c"../../third_party/ffmpeg/libavutil/mem_internal.h\00", align 1
@codec_mutex = internal global %union.pthread_mutex_t zeroinitializer, align 8
@.str.89 = private unnamed_addr constant [43 x i8] c"Internal error, put_bits buffer too small\0A\00", align 1
@.str.90 = private unnamed_addr constant [24 x i8] c"s->buf_ptr < s->buf_end\00", align 1
@.str.91 = private unnamed_addr constant [47 x i8] c"../../third_party/ffmpeg/libavcodec/put_bits.h\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @av_fast_padded_malloc(i8*, i32* nocapture, i64) local_unnamed_addr #0 {
  %4 = bitcast i8* %0 to i8**
  %5 = icmp ugt i64 %2, -65
  br i1 %5, label %6, label %7

6:                                                ; preds = %3
  tail call void @av_freep(i8* %0) #17
  store i32 0, i32* %1, align 4
  br label %28

7:                                                ; preds = %3
  %8 = add nuw i64 %2, 64
  %9 = load i32, i32* %1, align 4
  %10 = zext i32 %9 to i64
  %11 = icmp ugt i64 %8, %10
  br i1 %11, label %16, label %12

12:                                               ; preds = %7
  %13 = load i8*, i8** %4, align 1
  %14 = icmp eq i8* %13, null
  br i1 %14, label %15, label %26

15:                                               ; preds = %12
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.87, i64 0, i64 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.88, i64 0, i64 0), i32 145) #17
  tail call void @abort() #18
  unreachable

16:                                               ; preds = %7
  %17 = lshr i64 %8, 4
  %18 = add i64 %2, 96
  %19 = add i64 %18, %17
  %20 = icmp ugt i64 %19, %8
  %21 = select i1 %20, i64 %19, i64 %8
  tail call void @av_freep(i8* %0) #17
  %22 = tail call noalias i8* @av_mallocz(i64 %21) #17
  store i8* %22, i8** %4, align 1
  %23 = icmp eq i8* %22, null
  %24 = trunc i64 %21 to i32
  %25 = select i1 %23, i32 0, i32 %24
  store i32 %25, i32* %1, align 4
  br label %28

26:                                               ; preds = %12
  %27 = getelementptr inbounds i8, i8* %13, i64 %2
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %27, i8 0, i64 64, i1 false)
  br label %28

28:                                               ; preds = %16, %26, %6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @av_freep(i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @av_fast_padded_mallocz(i8*, i32* nocapture, i64) local_unnamed_addr #0 {
  %4 = bitcast i8* %0 to i8**
  %5 = icmp ugt i64 %2, -65
  br i1 %5, label %6, label %7

6:                                                ; preds = %3
  tail call void @av_freep(i8* %0) #17
  store i32 0, i32* %1, align 4
  br label %27

7:                                                ; preds = %3
  %8 = add nuw i64 %2, 64
  %9 = load i32, i32* %1, align 4
  %10 = zext i32 %9 to i64
  %11 = icmp ugt i64 %8, %10
  br i1 %11, label %16, label %12

12:                                               ; preds = %7
  %13 = load i8*, i8** %4, align 1
  %14 = icmp eq i8* %13, null
  br i1 %14, label %15, label %26

15:                                               ; preds = %12
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.87, i64 0, i64 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.88, i64 0, i64 0), i32 145) #17
  tail call void @abort() #18
  unreachable

16:                                               ; preds = %7
  %17 = lshr i64 %8, 4
  %18 = add i64 %2, 96
  %19 = add i64 %18, %17
  %20 = icmp ugt i64 %19, %8
  %21 = select i1 %20, i64 %19, i64 %8
  tail call void @av_freep(i8* %0) #17
  %22 = tail call noalias i8* @av_mallocz(i64 %21) #17
  store i8* %22, i8** %4, align 1
  %23 = icmp eq i8* %22, null
  %24 = trunc i64 %21 to i32
  %25 = select i1 %23, i32 0, i32 %24
  store i32 %25, i32* %1, align 4
  br label %27

26:                                               ; preds = %12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %13, i8 0, i64 %8, i1 false)
  br label %27

27:                                               ; preds = %16, %26, %6
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @av_codec_is_encoder(%struct.AVCodec* readonly) local_unnamed_addr #3 {
  %2 = icmp eq %struct.AVCodec* %0, null
  br i1 %2, label %16, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %0, i64 0, i32 20
  %5 = load i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)** %4, align 8
  %6 = icmp eq i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)* %5, null
  br i1 %6, label %7, label %16

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %0, i64 0, i32 21
  %9 = load i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)** %8, align 8
  %10 = icmp eq i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)* %9, null
  br i1 %10, label %11, label %16

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %0, i64 0, i32 24
  %13 = load i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)** %12, align 8
  %14 = icmp ne i32 (%struct.AVCodecContext*, %struct.AVPacket*)* %13, null
  %15 = zext i1 %14 to i32
  br label %16

16:                                               ; preds = %7, %3, %1, %11
  %17 = phi i32 [ 0, %1 ], [ 1, %7 ], [ 1, %3 ], [ %15, %11 ]
  ret i32 %17
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @av_codec_is_decoder(%struct.AVCodec* readonly) local_unnamed_addr #3 {
  %2 = icmp eq %struct.AVCodec* %0, null
  br i1 %2, label %12, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %0, i64 0, i32 22
  %5 = load i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)** %4, align 8
  %6 = icmp eq i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)* %5, null
  br i1 %6, label %7, label %12

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %0, i64 0, i32 25
  %9 = load i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)** %8, align 8
  %10 = icmp ne i32 (%struct.AVCodecContext*, %struct.AVFrame*)* %9, null
  %11 = zext i1 %10 to i32
  br label %12

12:                                               ; preds = %3, %1, %7
  %13 = phi i32 [ 0, %1 ], [ 1, %3 ], [ %11, %7 ]
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ff_set_dimensions(%struct.AVCodecContext*, i32, i32) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 185
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %struct.AVCodecContext* %0 to i8*
  %7 = tail call i32 @av_image_check_size2(i32 %1, i32 %2, i64 %5, i32 -1, i32 0, i8* %6) #17
  %8 = icmp slt i32 %7, 0
  %9 = select i1 %8, i32 0, i32 %1
  %10 = select i1 %8, i32 0, i32 %2
  %11 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 22
  store i32 %9, i32* %11, align 4
  %12 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 23
  store i32 %10, i32* %12, align 8
  %13 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 144
  %14 = load i32, i32* %13, align 8
  %15 = tail call i1 @llvm.is.constant.i32(i32 %14)
  br i1 %15, label %23, label %16

16:                                               ; preds = %3
  %17 = sub nsw i32 0, %9
  %18 = ashr i32 %17, %14
  %19 = sub nsw i32 0, %18
  %20 = sub nsw i32 0, %10
  %21 = ashr i32 %20, %14
  %22 = sub nsw i32 0, %21
  br label %31

23:                                               ; preds = %3
  %24 = shl i32 1, %14
  %25 = add i32 %9, -1
  %26 = add i32 %25, %24
  %27 = ashr i32 %26, %14
  %28 = add i32 %10, -1
  %29 = add i32 %28, %24
  %30 = ashr i32 %29, %14
  br label %31

31:                                               ; preds = %23, %16
  %32 = phi i32 [ %27, %23 ], [ %19, %16 ]
  %33 = phi i32 [ %30, %23 ], [ %22, %16 ]
  %34 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 20
  store i32 %32, i32* %34, align 4
  %35 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 21
  store i32 %33, i32* %35, align 8
  ret i32 %7
}

declare i32 @av_image_check_size2(i32, i32, i64, i32, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i32(i32) #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ff_set_sar(%struct.AVCodecContext*, i64) local_unnamed_addr #0 {
  %3 = trunc i64 %1 to i32
  %4 = lshr i64 %1, 32
  %5 = trunc i64 %4 to i32
  %6 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 20
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 21
  %9 = load i32, i32* %8, align 8
  %10 = tail call i32 @av_image_check_sar(i32 %7, i32 %9, i64 %1) #17
  %11 = icmp slt i32 %10, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %struct.AVCodecContext* %0 to i8*
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %13, i32 24, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0), i32 %3, i32 %5) #17
  br label %14

14:                                               ; preds = %2, %12
  %15 = phi i32 [ 0, %12 ], [ %3, %2 ]
  %16 = phi i32 [ 1, %12 ], [ %5, %2 ]
  %17 = phi i32 [ %10, %12 ], [ 0, %2 ]
  %18 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 44, i32 0
  store i32 %15, i32* %18, align 8
  %19 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 44, i32 1
  store i32 %16, i32* %19, align 4
  ret i32 %17
}

declare i32 @av_image_check_sar(i32, i32, i64) local_unnamed_addr #2

declare void @av_log(i8*, i32, i8*, ...) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ff_side_data_update_matrix_encoding(%struct.AVFrame*, i32) local_unnamed_addr #0 {
  %3 = tail call %struct.AVFrameSideData* @av_frame_get_side_data(%struct.AVFrame* %0, i32 3) #17
  %4 = icmp eq %struct.AVFrameSideData* %3, null
  br i1 %4, label %5, label %8

5:                                                ; preds = %2
  %6 = tail call %struct.AVFrameSideData* @av_frame_new_side_data(%struct.AVFrame* %0, i32 3, i32 4) #17
  %7 = icmp eq %struct.AVFrameSideData* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %2, %5
  %9 = phi %struct.AVFrameSideData* [ %6, %5 ], [ %3, %2 ]
  %10 = getelementptr inbounds %struct.AVFrameSideData, %struct.AVFrameSideData* %9, i64 0, i32 1
  %11 = bitcast i8** %10 to i32**
  %12 = load i32*, i32** %11, align 8
  store i32 %1, i32* %12, align 4
  br label %13

13:                                               ; preds = %5, %8
  %14 = phi i32 [ 0, %8 ], [ -12, %5 ]
  ret i32 %14
}

declare %struct.AVFrameSideData* @av_frame_get_side_data(%struct.AVFrame*, i32) local_unnamed_addr #2

declare %struct.AVFrameSideData* @av_frame_new_side_data(%struct.AVFrame*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @avcodec_align_dimensions2(%struct.AVCodecContext* nocapture readonly, i32* nocapture, i32* nocapture, i32* nocapture) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 25
  %6 = load i32, i32* %5, align 8
  %7 = tail call %struct.AVPixFmtDescriptor* @av_pix_fmt_desc_get(i32 %6) #17
  %8 = icmp eq %struct.AVPixFmtDescriptor* %7, null
  br i1 %8, label %18, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %7, i64 0, i32 2
  %11 = load i8, i8* %10, align 1
  %12 = zext i8 %11 to i32
  %13 = shl i32 1, %12
  %14 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %7, i64 0, i32 3
  %15 = load i8, i8* %14, align 2
  %16 = zext i8 %15 to i32
  %17 = shl i32 1, %16
  br label %18

18:                                               ; preds = %4, %9
  %19 = phi i32 [ %13, %9 ], [ 1, %4 ]
  %20 = phi i32 [ %17, %9 ], [ 1, %4 ]
  %21 = load i32, i32* %5, align 8
  switch i32 %21, label %22 [
    i32 0, label %58
    i32 1, label %58
    i32 110, label %58
    i32 15, label %58
    i32 4, label %58
    i32 31, label %58
    i32 5, label %58
    i32 73, label %58
    i32 113, label %58
    i32 8, label %58
    i32 29, label %58
    i32 30, label %58
    i32 12, label %58
    i32 13, label %58
    i32 32, label %58
    i32 14, label %58
    i32 33, label %58
    i32 80, label %58
    i32 81, label %58
    i32 62, label %58
    i32 61, label %58
    i32 64, label %58
    i32 63, label %58
    i32 125, label %58
    i32 124, label %58
    i32 127, label %58
    i32 126, label %58
    i32 47, label %58
    i32 48, label %58
    i32 83, label %58
    i32 82, label %58
    i32 89, label %58
    i32 88, label %58
    i32 95, label %58
    i32 94, label %58
    i32 72, label %58
    i32 71, label %58
    i32 66, label %58
    i32 65, label %58
    i32 129, label %58
    i32 128, label %58
    i32 131, label %58
    i32 130, label %58
    i32 49, label %58
    i32 50, label %58
    i32 85, label %58
    i32 84, label %58
    i32 91, label %58
    i32 90, label %58
    i32 188, label %58
    i32 187, label %58
    i32 97, label %58
    i32 96, label %58
    i32 154, label %58
    i32 155, label %58
    i32 156, label %58
    i32 157, label %58
    i32 68, label %58
    i32 67, label %58
    i32 70, label %58
    i32 69, label %58
    i32 133, label %58
    i32 132, label %58
    i32 135, label %58
    i32 134, label %58
    i32 51, label %58
    i32 52, label %58
    i32 87, label %58
    i32 86, label %58
    i32 93, label %58
    i32 92, label %58
    i32 190, label %58
    i32 189, label %58
    i32 99, label %58
    i32 98, label %58
    i32 75, label %58
    i32 74, label %58
    i32 77, label %58
    i32 76, label %58
    i32 137, label %58
    i32 136, label %58
    i32 139, label %58
    i32 138, label %58
    i32 79, label %58
    i32 78, label %58
    i32 164, label %58
    i32 163, label %58
    i32 115, label %58
    i32 114, label %58
    i32 7, label %25
    i32 140, label %25
    i32 16, label %25
    i32 6, label %26
    i32 39, label %30
    i32 11, label %37
    i32 17, label %37
    i32 20, label %37
    i32 3, label %44
    i32 2, label %49
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 4
  %24 = load i32, i32* %23, align 8
  br label %64

25:                                               ; preds = %18, %18, %18
  br label %58

26:                                               ; preds = %18
  %27 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 4
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 22
  br i1 %29, label %58, label %64

30:                                               ; preds = %18
  %31 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 4
  %32 = load i32, i32* %31, align 8
  %33 = icmp eq i32 %32, 42
  %34 = select i1 %33, i32 4, i32 %19
  %35 = select i1 %33, i32 4, i32 %20
  %36 = icmp eq i32 %32, 39
  br i1 %36, label %53, label %64

37:                                               ; preds = %18, %18, %18
  %38 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 4
  %39 = load i32, i32* %38, align 8
  switch i32 %39, label %41 [
    i32 49, label %40
    i32 43, label %40
  ]

40:                                               ; preds = %37, %37
  br label %41

41:                                               ; preds = %37, %40
  %42 = phi i32 [ 4, %40 ], [ %19, %37 ]
  %43 = phi i32 [ 4, %40 ], [ %20, %37 ]
  switch i32 %39, label %64 [
    i32 148, label %53
    i32 39, label %53
  ]

44:                                               ; preds = %18
  %45 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 4
  %46 = load i32, i32* %45, align 8
  %47 = add i32 %46, -53
  %48 = icmp ult i32 %47, 2
  br i1 %48, label %53, label %64

49:                                               ; preds = %18
  %50 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 4
  %51 = load i32, i32* %50, align 8
  %52 = icmp eq i32 %51, 43
  br i1 %52, label %53, label %64

53:                                               ; preds = %41, %41, %49, %30, %44
  %54 = phi i32 [ %39, %41 ], [ %39, %41 ], [ 43, %49 ], [ 39, %30 ], [ %46, %44 ]
  %55 = phi i32 [ 8, %41 ], [ 8, %41 ], [ 4, %49 ], [ 8, %30 ], [ 4, %44 ]
  %56 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 4
  %57 = icmp eq i32 %54, 136
  br label %76

58:                                               ; preds = %25, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %26
  %59 = phi i32 [ 32, %25 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 16, %18 ], [ 64, %26 ]
  %60 = phi i
  %61 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 4
  %62 = load i32, i32* %61, align 8
  %63 = icmp eq i32 %62, 136
  br label %71

64:                                               ; preds = %22, %44, %30, %49, %26, %41
  %65 = phi i32 [ %24, %22 ], [ %28, %26 ], [ %39, %41 ], [ %51, %49 ], [ %32, %30 ], [ %46, %44 ]
  %66 = phi i32 [ %19, %22 ], [ %19, %26 ], [ %42, %41 ], [ %19, %49 ], [ %34, %30 ], [ %19, %44 ]
  %67 = phi i32 [ %20, %22 ], [ %20, %26 ], [ %43, %41 ], [ %20, %49 ], [ %35, %30 ], [ %20, %44 ]
  %68 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 4
  %69 = icmp eq i32 %65, 136
  %70 = icmp sgt i32 %66, 8
  br i1 %70, label %71, label %76

71:                                               ; preds = %58, %64
  %72 = phi i1 [ %63, %58 ], [ %69, %64 ]
  %73 = phi i32* [ %61, %58 ], [ %68, %64 ]
  %74 = phi i32 [ %60, %58 ], [ %67, %64 ]
  %75 = phi i32 [ %59, %58 ], [ %66, %64 ]
  br label %76

76:                                               ; preds = %53, %64, %71
  %77 = phi i1 [ %72, %71 ], [ %69, %64 ], [ %57, %53 ]
  %78 = phi i32* [ %73, %71 ], [ %68, %64 ], [ %56, %53 ]
  %79 = phi i32 [ %74, %71 ], [ %67, %64 ], [ %55, %53 ]
  %80 = phi i32 [ %75, %71 ], [ %66, %64 ], [ %55, %53 ]
  %81 = phi i32 [ %75, %71 ], [ 8, %64 ], [ 8, %53 ]
  %82 = select i1 %77, i32 %81, i32 %80
  %83 = load i32, i32* %1, align 4
  %84 = add i32 %82, -1
  %85 = add i32 %84, %83
  %86 = sub i32 0, %82
  %87 = and i32 %85, %86
  store i32 %87, i32* %1, align 4
  %88 = load i32, i32* %2, align 4
  %89 = add i32 %79, -1
  %90 = add i32 %89, %88
  %91 = sub i32 0, %79
  %92 = and i32 %90, %91
  store i32 %92, i32* %2, align 4
  %93 = load i32, i32* %78, align 8
  %94 = icmp eq i32 %93, 27
  br i1 %94, label %100, label %95

95:                                               ; preds = %76
  %96 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 144
  %97 = load i32, i32* %96, align 8
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %100

99:                                               ; preds = %95
  switch i32 %93, label %105 [
    i32 106, label %100
    i32 92, label %100
    i32 91, label %100
    i32 90, label %100
  ]

100:                                              ; preds = %95, %99, %99, %99, %99, %76
  %101 = add nsw i32 %92, 2
  store i32 %101, i32* %2, align 4
  %102 = load i32, i32* %1, align 4
  %103 = icmp sgt i32 %102, 32
  %104 = select i1 %103, i32 %102, i32 32
  store i32 %104, i32* %1, align 4
  br label %105

105:                                              ; preds = %99, %100
  %106 = bitcast i32* %3 to <4 x i32>*
  store <4 x i32> <i32 64, i32 64, i32 64, i32 64>, <4 x i32>* %106, align 4
  ret void
}

declare %struct.AVPixFmtDescriptor* @av_pix_fmt_desc_get(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @avcodec_align_dimensions(%struct.AVCodecContext* nocapture readonly, i32* nocapture, i32* nocapture) local_unnamed_addr #0 {
  %4 = alloca [8 x i32], align 16
  %5 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 25
  %6 = load i32, i32* %5, align 8
  %7 = tail call %struct.AVPixFmtDescriptor* @av_pix_fmt_desc_get(i32 %6) #17
  %8 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %7, i64 0, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = zext i8 %9 to i32
  %11 = bitcast [8 x i32]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #17
  %12 = getelementptr inbounds [8 x i32], [8 x i32]* %4, i64 0, i64 0
  %13 = getelementptr inbounds [8 x i32], [8 x i32]* %4, i64 0, i64 1
  %14 = getelementptr inbounds [8 x i32], [8 x i32]* %4, i64 0, i64 2
  %15 = getelementptr inbounds [8 x i32], [8 x i32]* %4, i64 0, i64 3
  %16 = bitcast [8 x i32]* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %16, i8 -86, i64 32, i1 false)
  call void @avcodec_align_dimensions2(%struct.AVCodecContext* %0, i32* %1, i32* %2, i32* nonnull %12)
  %17 = load i32, i32* %12, align 16
  %18 = load i32, i32* %15, align 4
  %19 = icmp sgt i32 %17, %18
  %20 = select i1 %19, i32 %17, i32 %18
  %21 = load i32, i32* %13, align 4
  %22 = shl i32 %21, %10
  store i32 %22, i32* %13, align 4
  %23 = load i32, i32* %14, align 8
  %24 = shl i32 %23, %10
  %25 = icmp sgt i32 %20, %22
  %26 = select i1 %25, i32 %20, i32 %22
  %27 = icmp sgt i32 %26, %24
  %28 = select i1 %27, i32 %26, i32 %24
  %29 = load i32, i32* %1, align 4
  %30 = add i32 %29, -1
  %31 = add i32 %30, %28
  %32 = sub i32 0, %28
  %33 = and i32 %31, %32
  store i32 %33, i32* %1, align 4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #17
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i32 @avcodec_enum_to_chroma_pos(i32* nocapture, i32* nocapture, i32) local_unnamed_addr #5 {
  %4 = add i32 %2, -1
  %5 = icmp ugt i32 %4, 5
  br i1 %5, label %14, label %6

6:                                                ; preds = %3
  %7 = shl i32 %4, 7
  %8 = and i32 %7, 128
  store i32 %8, i32* %0, align 4
  %9 = lshr i32 %4, 1
  %10 = icmp ult i32 %4, 4
  %11 = zext i1 %10 to i32
  %12 = xor i32 %9, %11
  %13 = shl i32 %12, 7
  store i32 %13, i32* %1, align 4
  br label %14

14:                                               ; preds = %3, %6
  %15 = phi i32 [ 0, %6 ], [ -22, %3 ]
  ret i32 %15
}

; Function Attrs: nounwind readnone ssp uwtable
define hidden i32 @avcodec_chroma_pos_to_enum(i32, i32) local_unnamed_addr #6 {
  %3 = icmp eq i32 %0, 0
  %4 = icmp eq i32 %1, 128
  %5 = and i1 %3, %4
  br i1 %5, label %6, label %8

6:                                                ; preds = %19, %15, %12, %8, %2
  %7 = phi i32 [ 1, %2 ], [ 2, %8 ], [ 3, %12 ], [ 4, %15 ], [ 5, %19 ]
  ret i32 %7

8:                                                ; preds = %2
  %9 = icmp eq i32 %0, 128
  %10 = icmp eq i32 %1, 128
  %11 = and i1 %9, %10
  br i1 %11, label %6, label %12

12:                                               ; preds = %8
  %13 = or i32 %0, %1
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %6, label %15

15:                                               ; preds = %12
  %16 = icmp eq i32 %0, 128
  %17 = icmp eq i32 %1, 0
  %18 = and i1 %16, %17
  br i1 %18, label %6, label %19

19:                                               ; preds = %15
  %20 = icmp eq i32 %0, 0
  %21 = icmp eq i32 %1, 256
  %22 = and i1 %20, %21
  br i1 %22, label %6, label %23

23:                                               ; preds = %19
  %24 = icmp eq i32 %0, 128
  %25 = icmp eq i32 %1, 256
  %26 = and i1 %24, %25
  %27 = select i1 %26, i32 6, i32 0
  ret i32 %27
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @avcodec_fill_audio_frame(%struct.AVFrame*, i32, i32, i8*, i32, i32) local_unnamed_addr #0 {
  %7 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %0, i64 0, i32 5
  %8 = load i32, i32* %7, align 8
  %9 = tail call i32 @av_samples_get_buffer_size(i32* null, i32 %1, i32 %8, i32 %2, i32 %5) #17
  %10 = icmp sgt i32 %9, %4
  br i1 %10, label %79, label %11

11:                                               ; preds = %6
  %12 = tail call i32 @av_sample_fmt_is_planar(i32 %2) #17
  %13 = icmp ne i32 %12, 0
  %14 = icmp sgt i32 %1, 8
  %15 = and i1 %14, %13
  br i1 %15, label %16, label %23

16:                                               ; preds = %11
  %17 = sext i32 %1 to i64
  %18 = tail call i8* @av_mallocz_array(i64 %17, i64 8) #17
  %19 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %0, i64 0, i32 2
  %20 = bitcast i8*** %19 to i8**
  store i8* %18, i8** %20, align 8
  %21 = icmp eq i8* %18, null
  %22 = bitcast i8* %18 to i8**
  br i1 %21, label %79, label %26

23:                                               ; preds = %11
  %24 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %0, i64 0, i32 0, i64 0
  %25 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %0, i64 0, i32 2
  store i8** %24, i8*** %25, align 8
  br label %26

26:                                               ; preds = %16, %23
  %27 = phi i8** [ %22, %16 ], [ %24, %23 ]
  %28 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %0, i64 0, i32 2
  %29 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %0, i64 0, i32 1, i64 0
  %30 = load i32, i32* %7, align 8
  %31 = tail call i32 @av_samples_fill_arrays(i8** %27, i32* %29, i8* %3, i32 %1, i32 %30, i32 %2, i32 %5) #17
  %32 = icmp slt i32 %31, 0
  %33 = load i8**, i8*** %28, align 8
  %34 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %0, i64 0, i32 0, i64 0
  %35 = icmp ne i8** %33, %34
  br i1 %32, label %36, label %39

36:                                               ; preds = %26
  br i1 %35, label %37, label %79

37:                                               ; preds = %36
  %38 = bitcast i8*** %28 to i8*
  tail call void @av_freep(i8* %38) #17
  br label %79

39:                                               ; preds = %26
  br i1 %35, label %40, label %79

40:                                               ; preds = %39
  %41 = bitcast i8** %33 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %struct.AVFrame* %0 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds i8*, i8** %33, i64 1
  %45 = bitcast i8** %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %0, i64 0, i32 0, i64 1
  %48 = bitcast i8** %47 to i64*
  store i64 %46, i64* %48, align 8
  %49 = getelementptr inbounds i8*, i8** %33, i64 2
  %50 = bitcast i8** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %0, i64 0, i32 0, i64 2
  %53 = bitcast i8** %52 to i64*
  store i64 %51, i64* %53, align 8
  %54 = getelementptr inbounds i8*, i8** %33, i64 3
  %55 = bitcast i8** %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %0, i64 0, i32 0, i64 3
  %58 = bitcast i8** %57 to i64*
  store i64 %56, i64* %58, align 8
  %59 = getelementptr inbounds i8*, i8** %33, i64 4
  %60 = bitcast i8** %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %0, i64 0, i32 0, i64 4
  %63 = bitcast i8** %62 to i64*
  store i64 %61, i64* %63, align 8
  %64 = getelementptr inbounds i8*, i8** %33, i64 5
  %65 = bitcast i8** %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %0, i64 0, i32 0, i64 5
  %68 = bitcast i8** %67 to i64*
  store i64 %66, i64* %68, align 8
  %69 = getelementptr inbounds i8*, i8** %33, i64 6
  %70 = bitcast i8** %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %0, i64 0, i32 0, i64 6
  %73 = bitcast i8** %72 to i64*
  store i64 %71, i64* %73, align 8
  %74 = getelementptr inbounds i8*, i8** %33, i64 7
  %75 = bitcast i8** %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %0, i64 0, i32 0, i64 7
  %78 = bitcast i8** %77 to i64*
  store i64 %76, i64* %78, align 8
  br label %79

79:                                               ; preds = %40, %39, %36, %37, %16, %6
  %80 = phi i32 [ -22, %6 ], [ -12, %16 ], [ %31, %37 ], [ %31, %36 ], [ %31, %39 ], [ %31, %40 ]
  ret i32 %80
}

declare i32 @av_samples_get_buffer_size(i32*, i32, i32, i32, i32) local_unnamed_addr #2

declare i32 @av_sample_fmt_is_planar(i32) local_unnamed_addr #2

declare i8* @av_mallocz_array(i64, i64) local_unnamed_addr #2

declare i32 @av_samples_fill_arrays(i8**, i32*, i8*, i32, i32, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @ff_color_frame(%struct.AVFrame* nocapture readonly, i32* nocapture readonly) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %0, i64 0, i32 6
  %4 = load i32, i32* %3, align 4
  %5 = tail call %struct.AVPixFmtDescriptor* @av_pix_fmt_desc_get(i32 %4) #17
  %6 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %5, i64 0, i32 4
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 16
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %20, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %5, i64 0, i32 1
  %12 = load i8, i8* %11, align 8
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %159, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %0, i64 0, i32 3
  %16 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %0, i64 0, i32 4
  %17 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %5, i64 0, i32 2
  %18 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %5, i64 0, i32 3
  %19 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %5, i64 0, i32 5, i64 0, i32 4
  br label %21

20:                                               ; preds = %2
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i32 418) #17
  tail call void @abort() #18
  unreachable

21:                                               ; preds = %14, %154
  %22 = phi i64 [ 0, %14 ], [ %155, %154 ]
  %23 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %0, i64 0, i32 0, i64 %22
  %24 = load i8*, i8** %23, align 8
  %25 = trunc i64 %22 to i32
  %26 = add i32 %25, -1
  %27 = icmp ult i32 %26, 2
  br i1 %27, label %28, label %59

28:                                               ; preds = %21
  %29 = load i8, i8* %17, align 1
  %30 = tail call i1 @llvm.is.constant.i8(i8 %29)
  %31 = load i32, i32* %15, align 8
  br i1 %30, label %37, label %32

32:                                               ; preds = %28
  %33 = sub nsw i32 0, %31
  %34 = zext i8 %29 to i32
  %35 = ashr i32 %33, %34
  %36 = sub nsw i32 0, %35
  br label %43

37:                                               ; preds = %28
  %38 = zext i8 %29 to i32
  %39 = shl nsw i32 -1, %38
  %40 = xor i32 %39, -1
  %41 = add i32 %31, %40
  %42 = ashr i32 %41, %38
  br label %43

43:                                               ; preds = %32, %37
  %44 = phi i32 [ %42, %37 ], [ %36, %32 ]
  %45 = load i8, i8* %18, align 2
  %46 = tail call i1 @llvm.is.constant.i8(i8 %45)
  %47 = load i32, i32* %16, align 4
  br i1 %46, label %53, label %48

48:                                               ; preds = %43
  %49 = sub nsw i32 0, %47
  %50 = zext i8 %45 to i32
  %51 = ashr i32 %49, %50
  %52 = sub nsw i32 0, %51
  br label %62

53:                                               ; preds = %43
  %54 = zext i8 %45 to i32
  %55 = shl nsw i32 -1, %54
  %56 = xor i32 %55, -1
  %57 = add i32 %47, %56
  %58 = ashr i32 %57, %54
  br label %62

59:                                               ; preds = %21
  %60 = load i32, i32* %15, align 8
  %61 = load i32, i32* %16, align 4
  br label %62

62:                                               ; preds = %48, %53, %59
  %63 = phi i32 [ %60, %59 ], [ %44, %48 ], [ %44, %53 ]
  %64 = phi i32 [ %61, %59 ], [ %52, %48 ], [ %58, %53 ]
  %65 = load i32, i32* %19, align 8
  %66 = icmp sgt i32 %65, 8
  br i1 %66, label %78, label %67

67:                                               ; preds = %62
  %68 = icmp sgt i32 %64, 0
  br i1 %68, label %69, label %154

69:                                               ; preds = %67
  %70 = getelementptr inbounds i32, i32* %1, i64 %22
  %71 = sext i32 %63 to i64
  %72 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %0, i64 0, i32 1, i64 %22
  %73 = add i32 %64, -1
  %74 = and i32 %64, 3
  %75 = icmp ult i32 %73, 3
  br i1 %75, label %141, label %76

76:                                               ; preds = %69
  %77 = sub i32 %64, %74
  br label %111

78:                                               ; preds = %62
  %79 = getelementptr inbounds i32, i32* %1, i64 %22
  %80 = load i32, i32* %79, align 4
  %81 = trunc i32 %80 to i16
  %82 = bitcast i8* %24 to i16*
  store i16 %81, i16* %82, align 2
  %83 = getelementptr inbounds i8, i8* %24, i64 2
  %84 = add nsw i32 %63, -2
  tail call void @av_memcpy_backptr(i8* %83, i32 2, i32 %84) #17
  %85 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %0, i64 0, i32 1, i64 %22
  %86 = icmp sgt i32 %64, 1
  br i1 %86, label %87, label %154

87:                                               ; preds = %78
  %88 = load i32, i32* %85, align 4
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds i8, i8* %24, i64 %89
  %91 = shl nsw i32 %63, 1
  %92 = sext i32 %91 to i64
  %93 = add i32 %64, -1
  %94 = and i32 %93, 1
  %95 = icmp eq i32 %64, 2
  br i1 %95, label %136, label %96

96:                                               ; preds = %87
  %97 = sub i32 %93, %94
  br label %98

98:                                               ; preds = %98, %96
  %99 = phi i8* [ %90, %96 ], [ %108, %98 ]
  %100 = phi i32 [ %97, %96 ], [ %109, %98 ]
  %101 = load i8*, i8** %23, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %99, i8* align 1 %101, i64 %92, i1 false)
  %102 = load i32, i32* %85, align 4
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds i8, i8* %99, i64 %103
  %105 = load i8*, i8** %23, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %104, i8* align 1 %105, i64 %92, i1 false)
  %106 = load i32, i32* %85, align 4
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds i8, i8* %104, i64 %107
  %109 = add i32 %100, -2
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %136, label %98

111:                                              ; preds = %111, %76
  %112 = phi i8* [ %24, %76 ], [ %133, %111 ]
  %113 = phi i32 [ %77, %76 ], [ %134, %111 ]
  %114 = load i32, i32* %70, align 4
  %115 = trunc i32 %114 to i8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %112, i8 %115, i64 %71, i1 false)
  %116 = load i32, i32* %72, align 4
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds i8, i8* %112, i64 %117
  %119 = load i32, i32* %70, align 4
  %120 = trunc i32 %119 to i8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %118, i8 %120, i64 %71, i1 false)
  %121 = load i32, i32* %72, align 4
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds i8, i8* %118, i64 %122
  %124 = load i32, i32* %70, align 4
  %125 = trunc i32 %124 to i8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %123, i8 %125, i64 %71, i1 false)
  %126 = load i32, i32* %72, align 4
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds i8, i8* %123, i64 %127
  %129 = load i32, i32* %70, align 4
  %130 = trunc i32 %129 to i8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %128, i8 %130, i64 %71, i1 false)
  %131 = load i32, i32* %72, align 4
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds i8, i8* %128, i64 %132
  %134 = add i32 %113, -4
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %141, label %111

136:                                              ; preds = %98, %87
  %137 = phi i8* [ %90, %87 ], [ %108, %98 ]
  %138 = icmp eq i32 %94, 0
  br i1 %138, label %154, label %139

139:                                              ; preds = %136
  %140 = load i8*, i8** %23, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %137, i8* align 1 %140, i64 %92, i1 false)
  br label %154

141:                                              ; preds = %111, %69
  %142 = phi i8* [ %24, %69 ], [ %133, %111 ]
  %143 = icmp eq i32 %74, 0
  br i1 %143, label %154, label %144

144:                                              ; preds = %141, %144
  %145 = phi i8* [ %151, %144 ], [ %142, %141 ]
  %146 = phi i32 [ %152, %144 ], [ %74, %141 ]
  %147 = load i32, i32* %70, align 4
  %148 = trunc i32 %147 to i8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %145, i8 %148, i64 %71, i1 false)
  %149 = load i32, i32* %72, align 4
  %150 = sext i32 %149 to i64
  %151 = getelementptr inbounds i8, i8* %145, i64 %150
  %152 = add i32 %146, -1
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %154, label %144, !llvm.loop !2

154:                                              ; preds = %141, %144, %139, %136, %67, %78
  %155 = add nuw nsw i64 %22, 1
  %156 = load i8, i8* %11, align 8
  %157 = zext i8 %156 to i64
  %158 = icmp ult i64 %155, %157
  br i1 %158, label %21, label %159

159:                                              ; preds = %154, %10
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i8(i8) #4

declare void @av_memcpy_backptr(i8*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @avcodec_default_execute(%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)* nocapture, i8*, i32*, i32, i32) local_unnamed_addr #0 {
  %7 = icmp sgt i32 %4, 0
  br i1 %7, label %8, label %22

8:                                                ; preds = %6
  %9 = icmp eq i32* %3, null
  %10 = sext i32 %5 to i64
  %11 = zext i32 %4 to i64
  br label %12

12:                                               ; preds = %19, %8
  %13 = phi i64 [ 0, %8 ], [ %20, %19 ]
  %14 = mul nsw i64 %13, %10
  %15 = getelementptr inbounds i8, i8* %2, i64 %14
  %16 = tail call i32 %1(%struct.AVCodecContext* %0, i8* %15) #17
  br i1 %9, label %19, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds i32, i32* %3, i64 %13
  store i32 %16, i32* %18, align 4
  br label %19

19:                                               ; preds = %12, %17
  %20 = add nuw nsw i64 %13, 1
  %21 = icmp eq i64 %20, %11
  br i1 %21, label %22, label %12

22:                                               ; preds = %19, %6
  tail call void asm sideeffect "emms", "~{memory},~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !4
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @avcodec_default_execute2(%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)* nocapture, i8*, i32*, i32) local_unnamed_addr #0 {
  %6 = icmp sgt i32 %4, 0
  br i1 %6, label %7, label %19

7:                                                ; preds = %5
  %8 = icmp eq i32* %3, null
  %9 = zext i32 %4 to i64
  br label %10

10:                                               ; preds = %16, %7
  %11 = phi i64 [ 0, %7 ], [ %17, %16 ]
  %12 = trunc i64 %11 to i32
  %13 = tail call i32 %1(%struct.AVCodecContext* %0, i8* %2, i32 %12, i32 0) #17
  br i1 %8, label %16, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds i32, i32* %3, i64 %11
  store i32 %13, i32* %15, align 4
  br label %16

16:                                               ; preds = %10, %14
  %17 = add nuw nsw i64 %11, 1
  %18 = icmp eq i64 %17, %9
  br i1 %18, label %19, label %10

19:                                               ; preds = %16, %5
  tail call void asm sideeffect "emms", "~{memory},~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !4
  ret i32 0
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @avpriv_find_pix_fmt(%struct.PixelFormatTag* nocapture readonly, i32) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %struct.PixelFormatTag, %struct.PixelFormatTag* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp sgt i32 %4, -1
  br i1 %5, label %6, label %20

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.PixelFormatTag, %struct.PixelFormatTag* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, %1
  br i1 %9, label %20, label %10

10:                                               ; preds = %6, %16
  %11 = phi %struct.PixelFormatTag* [ %12, %16 ], [ %0, %6 ]
  %12 = getelementptr inbounds %struct.PixelFormatTag, %struct.PixelFormatTag* %11, i64 1
  %13 = getelementptr inbounds %struct.PixelFormatTag, %struct.PixelFormatTag* %12, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp sgt i32 %14, -1
  br i1 %15, label %16, label %20

16:                                               ; preds = %10
  %17 = getelementptr inbounds %struct.PixelFormatTag, %struct.PixelFormatTag* %11, i64 1, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, %1
  br i1 %19, label %20, label %10

20:                                               ; preds = %10, %16, %6, %2
  %21 = phi i32 [ -1, %2 ], [ %4, %6 ], [ %14, %16 ], [ -1, %10 ]
  ret i32 %21
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @av_codec_get_pkt_timebase(%struct.AVCodecContext* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 165
  %3 = bitcast %struct.AVRational* %2 to i64*
  %4 = load i64, i64* %3, align 4
  ret i64 %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @av_codec_set_pkt_timebase(%struct.AVCodecContext* nocapture, i64) local_unnamed_addr #5 {
  %3 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 165
  %4 = bitcast %struct.AVRational* %3 to i64*
  store i64 %1, i64* %4, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.AVCodecDescriptor* @av_codec_get_codec_descriptor(%struct.AVCodecContext* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 166
  %3 = load %struct.AVCodecDescriptor*, %struct.AVCodecDescriptor** %2, align 8
  ret %struct.AVCodecDescriptor* %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @av_codec_set_codec_descriptor(%struct.AVCodecContext* nocapture, %struct.AVCodecDescriptor*) local_unnamed_addr #5 {
  %3 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 166
  store %struct.AVCodecDescriptor* %1, %struct.AVCodecDescriptor** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @av_codec_get_lowres(%struct.AVCodecContext* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 144
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @av_codec_set_lowres(%struct.AVCodecContext* nocapture, i32) local_unnamed_addr #5 {
  %3 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 144
  store i32 %1, i32* %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @av_codec_get_seek_preroll(%struct.AVCodecContext* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 174
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @av_codec_set_seek_preroll(%struct.AVCodecContext* nocapture, i32) local_unnamed_addr #5 {
  %3 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 174
  store i32 %1, i32* %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i16* @av_codec_get_chroma_intra_matrix(%struct.AVCodecContext* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 176
  %3 = load i16*, i16** %2, align 8
  ret i16* %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @av_codec_set_chroma_intra_matrix(%struct.AVCodecContext* nocapture, i16*) local_unnamed_addr #5 {
  %3 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 176
  store i16* %1, i16** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @av_codec_get_codec_properties(%struct.AVCodecContext* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 179
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @av_codec_get_max_lowres(%struct.AVCodec* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %0, i64 0, i32 10
  %3 = load i8, i8* %2, align 8
  %4 = zext i8 %3 to i32
  ret i32 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @avpriv_codec_get_cap_skip_frame_fill_param(%struct.AVCodec* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %0, i64 0, i32 27
  %3 = load i32, i32* %2, align 8
  %4 = lshr i32 %3, 3
  %5 = and i32 %4, 1
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @avcodec_open2(%struct.AVCodecContext*, %struct.AVCodec*, %struct.AVDictionary**) local_unnamed_addr #0 {
  %4 = alloca %struct.AVDictionary*, align 8
  %5 = alloca %struct.AVCodecInternal*, align 8
  %6 = alloca [128 x i8], align 16
  %7 = alloca [128 x i8], align 16
  %8 = alloca [512 x i8], align 16
  %9 = alloca [512 x i8], align 16
  %10 = alloca [512 x i8], align 16
  %11 = bitcast %struct.AVDictionary** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #17
  store %struct.AVDictionary* null, %struct.AVDictionary** %4, align 8
  %12 = bitcast %struct.AVCodecInternal** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #17
  store %struct.AVCodecInternal* inttoptr (i64 -6148914691236517206 to %struct.AVCodecInternal*), %struct.AVCodecInternal** %5, align 8
  %13 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 7
  %14 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %13, align 8
  %15 = icmp eq %struct.AVCodecInternal* %14, null
  br i1 %15, label %16, label %1086

16:                                               ; preds = %3
  %17 = icmp eq %struct.AVCodec* %1, null
  %18 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 3
  %19 = load %struct.AVCodec*, %struct.AVCodec** %18, align 8
  %20 = icmp eq %struct.AVCodec* %19, null
  br i1 %17, label %21, label %24

21:                                               ; preds = %16
  br i1 %20, label %22, label %33

22:                                               ; preds = %21
  %23 = bitcast %struct.AVCodecContext* %0 to i8*
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %23, i32 16, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)) #17
  br label %1086

24:                                               ; preds = %16
  %25 = icmp eq %struct.AVCodec* %19, %1
  %26 = or i1 %20, %25
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %struct.AVCodecContext* %0 to i8*
  %29 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %19, i64 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %1, i64 0, i32 0
  %32 = load i8*, i8** %31, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %28, i32 16, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.5, i64 0, i64 0), i8* %30, i8* %32) #17
  br label %1086

33:                                               ; preds = %21, %24
  %34 = phi %struct.AVCodec* [ %1, %24 ], [ %19, %21 ]
  %35 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 16
  %36 = load i32, i32* %35, align 8
  %37 = icmp ugt i32 %36, 268435391
  br i1 %37, label %1086, label %38

38:                                               ; preds = %33
  %39 = icmp ne %struct.AVDictionary** %2, null
  br i1 %39, label %40, label %43

40:                                               ; preds = %38
  %41 = load %struct.AVDictionary*, %struct.AVDictionary** %2, align 8
  %42 = call i32 @av_dict_copy(%struct.AVDictionary** nonnull %4, %struct.AVDictionary* %41, i32 0) #17
  br label %43

43:                                               ; preds = %40, %38
  %44 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %34, i64 0, i32 27
  %45 = load i32, i32* %44, align 8
  %46 = and i32 %45, 1
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %54

48:                                               ; preds = %43
  %49 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %34, i64 0, i32 19
  %50 = load i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)** %49, align 8
  %51 = icmp eq i32 (%struct.AVCodecContext*)* %50, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %48
  %53 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* nonnull @codec_mutex) #17
  br label %54

54:                                               ; preds = %43, %48, %52
  %55 = call noalias i8* @av_mallocz(i64 224) #17
  %56 = bitcast %struct.AVCodecInternal** %5 to i8**
  store i8* %55, i8** %56, align 8
  %57 = icmp eq i8* %55, null
  br i1 %57, label %988, label %58

58:                                               ; preds = %54
  %59 = bitcast %struct.AVCodecInternal** %13 to i8**
  store i8* %55, i8** %59, align 8
  %60 = call %struct.AVFrame* @av_frame_alloc() #17
  %61 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %5, align 8
  %62 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %61, i64 0, i32 2
  store %struct.AVFrame* %60, %struct.AVFrame** %62, align 8
  %63 = call %struct.AVFrame* @av_frame_alloc() #17
  %64 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %5, align 8
  %65 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %64, i64 0, i32 22
  store %struct.AVFrame* %63, %struct.AVFrame** %65, align 8
  %66 = call %struct.AVPacket* @av_packet_alloc() #17
  %67 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %5, align 8
  %68 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %67, i64 0, i32 23
  store %struct.AVPacket* %66, %struct.AVPacket** %68, align 8
  %69 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %67, i64 0, i32 2
  %70 = load %struct.AVFrame*, %struct.AVFrame** %69, align 8
  %71 = icmp eq %struct.AVFrame* %70, null
  br i1 %71, label %1004, label %72

72:                                               ; preds = %58
  %73 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %67, i64 0, i32 22
  %74 = load %struct.AVFrame*, %struct.AVFrame** %73, align 8
  %75 = icmp eq %struct.AVFrame* %74, null
  %76 = icmp eq %struct.AVPacket* %66, null
  %77 = or i1 %76, %75
  br i1 %77, label %1004, label %78

78:                                               ; preds = %72
  %79 = call %struct.AVFrame* @av_frame_alloc() #17
  %80 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %5, align 8
  %81 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %80, i64 0, i32 17
  store %struct.AVFrame* %79, %struct.AVFrame** %81, align 8
  %82 = call %struct.AVPacket* @av_packet_alloc() #17
  %83 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %5, align 8
  %84 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %83, i64 0, i32 16
  store %struct.AVPacket* %82, %struct.AVPacket** %84, align 8
  %85 = call %struct.AVFrame* @av_frame_alloc() #17
  %86 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %5, align 8
  %87 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %86, i64 0, i32 12, i32 0
  store %struct.AVFrame* %85, %struct.AVFrame** %87, align 8
  %88 = call %struct.AVPacket* @av_packet_alloc() #17
  %89 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %5, align 8
  %90 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %89, i64 0, i32 5, i32 0
  store %struct.AVPacket* %88, %struct.AVPacket** %90, align 8
  %91 = call %struct.AVPacket* @av_packet_alloc() #17
  %92 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %5, align 8
  %93 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %92, i64 0, i32 7
  store %struct.AVPacket* %91, %struct.AVPacket** %93, align 8
  %94 = call %struct.AVFifoBuffer* @av_fifo_alloc(i32 88) #17
  %95 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %5, align 8
  %96 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %95, i64 0, i32 8
  store %struct.AVFifoBuffer* %94, %struct.AVFifoBuffer** %96, align 8
  %97 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %95, i64 0, i32 17
  %98 = load %struct.AVFrame*, %struct.AVFrame** %97, align 8
  %99 = icmp eq %struct.AVFrame* %98, null
  br i1 %99, label %1004, label %100

100:                                              ; preds = %78
  %101 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %95, i64 0, i32 16
  %102 = load %struct.AVPacket*, %struct.AVPacket** %101, align 8
  %103 = icmp eq %struct.AVPacket* %102, null
  br i1 %103, label %1004, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %95, i64 0, i32 12, i32 0
  %106 = load %struct.AVFrame*, %struct.AVFrame** %105, align 8
  %107 = icmp eq %struct.AVFrame* %106, null
  br i1 %107, label %1004, label %108

108:                                              ; preds = %104
  %109 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %95, i64 0, i32 5, i32 0
  %110 = load %struct.AVPacket*, %struct.AVPacket** %109, align 8
  %111 = icmp eq %struct.AVPacket* %110, null
  br i1 %111, label %1004, label %112

112:                                              ; preds = %108
  %113 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %95, i64 0, i32 7
  %114 = load %struct.AVPacket*, %struct.AVPacket** %113, align 8
  %115 = icmp eq %struct.AVPacket* %114, null
  %116 = icmp eq %struct.AVFifoBuffer* %94, null
  %117 = or i1 %116, %115
  br i1 %117, label %1004, label %118

118:                                              ; preds = %112
  %119 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %95, i64 0, i32 25
  store i32 1, i32* %119, align 4
  %120 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %34, i64 0, i32 14
  %121 = load i32, i32* %120, align 8
  %122 = icmp sgt i32 %121, 0
  %123 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 6
  br i1 %122, label %124, label %145

124:                                              ; preds = %118
  %125 = load i8*, i8** %123, align 8
  %126 = icmp eq i8* %125, null
  br i1 %126, label %127, label %137

127:                                              ; preds = %124
  %128 = sext i32 %121 to i64
  %129 = call noalias i8* @av_mallocz(i64 %128) #17
  store i8* %129, i8** %123, align 8
  %130 = icmp eq i8* %129, null
  br i1 %130, label %1004, label %131

131:                                              ; preds = %127
  %132 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %34, i64 0, i32 11
  %133 = load %struct.AVClass*, %struct.AVClass** %132, align 8
  %134 = icmp eq %struct.AVClass* %133, null
  br i1 %134, label %137, label %135

135:                                              ; preds = %131
  %136 = bitcast i8* %129 to %struct.AVClass**
  store %struct.AVClass* %133, %struct.AVClass** %136, align 8
  call void @av_opt_set_defaults(i8* nonnull %129) #17
  br label %137

137:                                              ; preds = %131, %124, %135
  %138 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %34, i64 0, i32 11
  %139 = load %struct.AVClass*, %struct.AVClass** %138, align 8
  %140 = icmp eq %struct.AVClass* %139, null
  br i1 %140, label %146, label %141

141:                                              ; preds = %137
  %142 = load i8*, i8** %123, align 8
  %143 = call i32 @av_opt_set_dict(i8* %142, %struct.AVDictionary** nonnull %4) #17
  %144 = icmp slt i32 %143, 0
  br i1 %144, label %1004, label %146

145:                                              ; preds = %118
  store i8* null, i8** %123, align 8
  br label %146

146:                                              ; preds = %137, %141, %145
  %147 = bitcast %struct.AVCodecContext* %0 to i8*
  %148 = call i32 @av_opt_set_dict(i8* %147, %struct.AVDictionary** nonnull %4) #17
  %149 = icmp slt i32 %148, 0
  br i1 %149, label %1004, label %150

150:                                              ; preds = %146
  %151 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 178
  %152 = load i8*, i8** %151, align 8
  %153 = icmp eq i8* %152, null
  br i1 %153, label %162, label %154

154:                                              ; preds = %150
  %155 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %34, i64 0, i32 0
  %156 = load i8*, i8** %155, align 8
  %157 = call i32 @av_match_list(i8* %156, i8* nonnull %152, i8 signext 44) #17
  %158 = icmp slt i32 %157, 1
  br i1 %158, label %159, label %162

159:                                              ; preds = %154
  %160 = load i8*, i8** %155, align 8
  %161 = load i8*, i8** %151, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %147, i32 16, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.6, i64 0, i64 0), i8* %160, i8* %161) #17
  br label %1004

162:                                              ; preds = %150, %154
  %163 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 22
  %164 = load i32, i32* %163, align 4
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %210, label %166

166:                                              ; preds = %162
  %167 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 23
  %168 = load i32, i32* %167, align 8
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %210, label %170

170:                                              ; preds = %166
  %171 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 20
  %172 = load i32, i32* %171, align 4
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %181, label %174

174:                                              ; preds = %170
  %175 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 21
  %176 = load i32, i32* %175, align 8
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %181, label %178

178:                                              ; preds = %174
  %179 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 4
  %180 = load i32, i32* %179, align 8
  switch i32 %180, label %181 [
    i32 27, label %256
    i32 92, label %256
    i32 189, label %256
  ]

181:                                              ; preds = %178, %174, %170
  %182 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 185
  %183 = load i64, i64* %182, align 8
  %184 = call i32 @av_image_check_size2(i32 %164, i32 %168, i64 %183, i32 -1, i32 0, i8* %147) #17
  %185 = icmp slt i32 %184, 0
  %186 = select i1 %185, i32 0, i32 %164
  %187 = select i1 %185, i32 0, i32 %168
  store i32 %186, i32* %163, align 4
  store i32 %187, i32* %167, align 8
  %188 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 144
  %189 = load i32, i32* %188, align 8
  %190 = call i1 @llvm.is.constant.i32(i32 %189) #17
  br i1 %190, label %198, label %191

191:                                              ; preds = %181
  %192 = sub nsw i32 0, %186
  %193 = ashr i32 %192, %189
  %194 = sub nsw i32 0, %193
  %195 = sub nsw i32 0, %187
  %196 = ashr i32 %195, %189
  %197 = sub nsw i32 0, %196
  br label %205

198:                                              ; preds = %181
  %199 = shl nsw i32 -1, %189
  %200 = xor i32 %199, -1
  %201 = add i32 %186, %200
  %202 = ashr i32 %201, %189
  %203 = add i32 %187, %200
  %204 = ashr i32 %203, %189
  br label %205

205:                                              ; preds = %191, %198
  %206 = phi i32 [ %202, %198 ], [ %194, %191 ]
  %207 = phi i32 [ %204, %198 ], [ %197, %191 ]
  %208 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 20
  store i32 %206, i32* %208, align 4
  %209 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 21
  store i32 %207, i32* %209, align 8
  br label %246

210:                                              ; preds = %166, %162
  %211 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 20
  %212 = load i32, i32* %211, align 4
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %251, label %214

214:                                              ; preds = %210
  %215 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 21
  %216 = load i32, i32* %215, align 8
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %251, label %218

218:                                              ; preds = %214
  %219 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 185
  %220 = load i64, i64* %219, align 8
  %221 = call i32 @av_image_check_size2(i32 %212, i32 %216, i64 %220, i32 -1, i32 0, i8* %147) #17
  %222 = icmp slt i32 %221, 0
  %223 = select i1 %222, i32 0, i32 %212
  %224 = select i1 %222, i32 0, i32 %216
  store i32 %223, i32* %163, align 4
  %225 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 23
  store i32 %224, i32* %225, align 8
  %226 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 144
  %227 = load i32, i32* %226, align 8
  %228 = call i1 @llvm.is.constant.i32(i32 %227) #17
  br i1 %228, label %236, label %229

229:                                              ; preds = %218
  %230 = sub nsw i32 0, %223
  %231 = ashr i32 %230, %227
  %232 = sub nsw i32 0, %231
  %233 = sub nsw i32 0, %224
  %234 = ashr i32 %233, %227
  %235 = sub nsw i32 0, %234
  br label %243

236:                                              ; preds = %218
  %237 = shl nsw i32 -1, %227
  %238 = xor i32 %237, -1
  %239 = add i32 %223, %238
  %240 = ashr i32 %239, %227
  %241 = add i32 %224, %238
  %242 = ashr i32 %241, %227
  br label %243

243:                                              ; preds = %229, %236
  %244 = phi i32 [ %240, %236 ], [ %232, %229 ]
  %245 = phi i32 [ %242, %236 ], [ %235, %229 ]
  store i32 %244, i32* %211, align 4
  store i32 %245, i32* %215, align 8
  br label %246

246:                                              ; preds = %243, %205
  %247 = phi i32 [ %206, %205 ], [ %244, %243 ]
  %248 = phi i32 [ %186, %205 ], [ %223, %243 ]
  %249 = phi i32 [ %184, %205 ], [ %221, %243 ]
  %250 = icmp slt i32 %249, 0
  br i1 %250, label %1004, label %251

251:                                              ; preds = %210, %214, %246
  %252 = phi i32 [ %247, %246 ], [ %212, %214 ], [ 0, %210 ]
  %253 = phi i32 [ %248, %246 ], [ %164, %214 ], [ %164, %210 ]
  %254 = phi i32 [ %249, %246 ], [ %148, %214 ], [ %148, %210 ]
  %255 = icmp eq i32 %253, 0
  br i1 %255, label %261, label %256

256:                                              ; preds = %178, %178, %178, %251
  %257 = phi i32 [ %254, %251 ], [ %148, %178 ], [ %148, %178 ], [ %148, %178 ]
  %258 = phi i32 [ %253, %251 ], [ %164, %178 ], [ %164, %178 ], [ %164, %178 ]
  %259 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 23
  %260 = load i32, i32* %259, align 8
  br label %273

261:                                              ; preds = %251
  %262 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 23
  %263 = load i32, i32* %262, align 8
  %264 = icmp eq i32 %263, 0
  br i1 %264, label %265, label %273

265:                                              ; preds = %261
  %266 = icmp eq i32 %252, 0
  br i1 %266, label %267, label %273

267:                                              ; preds = %265
  %268 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 21
  %269 = load i32, i32* %268, align 8
  %270 = icmp eq i32 %269, 0
  br i1 %270, label %271, label %273

271:                                              ; preds = %267
  %272 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 20
  br label %326

273:                                              ; preds = %256, %267, %265, %261
  %274 = phi i32 [ %257, %256 ], [ %254, %267 ], [ %254, %265 ], [ %254, %261 ]
  %275 = phi i32 [ %258, %256 ], [ 0, %267 ], [ 0, %265 ], [ 0, %261 ]
  %276 = phi i32 [ %260, %256 ], [ 0, %267 ], [ 0, %265 ], [ %263, %261 ]
  %277 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 23
  %278 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 185
  %279 = load i64, i64* %278, align 8
  %280 = call i32 @av_image_check_size2(i32 %275, i32 %276, i64 %279, i32 -1, i32 0, i8* %147) #17
  %281 = icmp slt i32 %280, 0
  br i1 %281, label %292, label %282

282:                                              ; preds = %273
  %283 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 20
  %284 = load i32, i32* %283, align 4
  %285 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 21
  %286 = load i32, i32* %285, align 8
  %287 = load i64, i64* %278, align 8
  %288 = call i32 @av_image_check_size2(i32 %284, i32 %286, i64 %287, i32 -1, i32 0, i8* %147) #17
  %289 = icmp slt i32 %288, 0
  br i1 %289, label %292, label %290

290:                                              ; preds = %282
  %291 = load i32, i32* %283, align 4
  br label %306

292:                                              ; preds = %282, %273
  call void (i8*, i32, i8*, ...) @av_log(i8* %147, i32 24, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7, i64 0, i64 0)) #17
  %293 = load i64, i64* %278, align 8
  %294 = call i32 @av_image_check_size2(i32 0, i32 0, i64 %293, i32 -1, i32 0, i8* %147) #17
  store i32 0, i32* %163, align 4
  store i32 0, i32* %277, align 8
  %295 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 144
  %296 = load i32, i32* %295, align 8
  %297 = call i1 @llvm.is.constant.i32(i32 %296) #17
  br i1 %297, label %298, label %302

298:                                              ; preds = %292
  %299 = shl nsw i32 -1, %296
  %300 = xor i32 %299, -1
  %301 = ashr i32 %300, %296
  br label %302

302:                                              ; preds = %292, %298
  %303 = phi i32 [ %301, %298 ], [ 0, %292 ]
  %304 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 20
  store i32 %303, i32* %304, align 4
  %305 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 21
  store i32 %303, i32* %305, align 8
  br label %306

306:                                              ; preds = %290, %302
  %307 = phi i32 [ %291, %290 ], [ %303, %302 ]
  %308 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 20
  %309 = icmp sgt i32 %307, 0
  br i1 %309, label %310, label %326

310:                                              ; preds = %306
  %311 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 21
  %312 = load i32, i32* %311, align 8
  %313 = icmp sgt i32 %312, 0
  br i1 %313, label %314, label %326

314:                                              ; preds = %310
  %315 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 44
  %316 = bitcast %struct.AVRational* %315 to i64*
  %317 = load i64, i64* %316, align 8
  %318 = call i32 @av_image_check_sar(i32 %307, i32 %312, i64 %317) #17
  %319 = icmp slt i32 %318, 0
  br i1 %319, label %320, label %326

320:                                              ; preds = %314
  %321 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %315, i64 0, i32 0
  %322 = load i32, i32* %321, align 8
  %323 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 44, i32 1
  %324 = load i32, i32* %323, align 4
  call void (i8*, i32, i8*, ...) @av_log(i8* %147, i32 24, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8, i64 0, i64 0), i32 %322, i32 %324) #17
  %325 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 44, i32 0
  store i32 0, i32* %325, align 8
  store i32 1, i32* %323, align 4
  br label %326

326:                                              ; preds = %306, %310, %320, %314, %271
  %327 = phi i32* [ %272, %271 ], [ %308, %314 ], [ %308, %320 ], [ %308, %310 ], [ %308, %306 ]
  %328 = phi i32 [ %254, %271 ], [ %274, %314 ], [ %274, %320 ], [ %274, %310 ], [ %274, %306 ]
  %329 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %34, i64 0, i32 22
  %330 = load i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)** %329, align 8
  %331 = icmp eq i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)* %330, null
  br i1 %331, label %332, label %336

332:                                              ; preds = %326
  %333 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %34, i64 0, i32 25
  %334 = load i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)** %333, align 8
  %335 = icmp eq i32 (%struct.AVCodecContext*, %struct.AVFrame*)* %334, null
  br i1 %335, label %339, label %336

336:                                              ; preds = %326, %332
  %337 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 158
  %338 = bitcast i8** %337 to i8*
  call void @av_freep(i8* %338) #17
  br label %339

339:                                              ; preds = %332, %336
  %340 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 83
  %341 = load i32, i32* %340, align 4
  %342 = icmp ugt i32 %341, 512
  br i1 %342, label %343, label %344

343:                                              ; preds = %339
  call void (i8*, i32, i8*, ...) @av_log(i8* %147, i32 16, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.9, i64 0, i64 0), i32 %341) #17
  br label %1004

344:                                              ; preds = %339
  %345 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %34, i64 0, i32 22
  %346 = load i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)** %345, align 8
  %347 = icmp eq i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)* %346, null
  br i1 %347, label %348, label %352

348:                                              ; preds = %344
  %349 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %34, i64 0, i32 25
  %350 = load i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)** %349, align 8
  %351 = icmp eq i32 (%struct.AVCodecContext*, %struct.AVFrame*)* %350, null
  br i1 %351, label %363, label %352

352:                                              ; preds = %344, %348
  %353 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %34, i64 0, i32 2
  %354 = load i32, i32* %353, align 8
  %355 = icmp eq i32 %354, 1
  br i1 %355, label %356, label %363

356:                                              ; preds = %352
  %357 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %34, i64 0, i32 4
  %358 = load i32, i32* %357, align 8
  %359 = and i32 %358, 1024
  %360 = or i32 %359, %341
  %361 = icmp eq i32 %360, 0
  br i1 %361, label %362, label %363

362:                                              ; preds = %356
  call void (i8*, i32, i8*, ...) @av_log(i8* %147, i32 16, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.10, i64 0, i64 0)) #17
  br label %1004

363:                                              ; preds = %356, %348, %352
  %364 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 82
  %365 = load i32, i32* %364, align 8
  %366 = icmp slt i32 %365, 0
  br i1 %366, label %367, label %368

367:                                              ; preds = %363
  call void (i8*, i32, i8*, ...) @av_log(i8* %147, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11, i64 0, i64 0), i32 %365) #17
  br label %1004

368:                                              ; preds = %363
  %369 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 87
  %370 = load i32, i32* %369, align 4
  %371 = icmp slt i32 %370, 0
  br i1 %371, label %372, label %373

372:                                              ; preds = %368
  call void (i8*, i32, i8*, ...) @av_log(i8* %147, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.12, i64 0, i64 0), i32 %370) #17
  br label %1004

373:                                              ; preds = %368
  %374 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 147
  %375 = load i32, i32* %374, align 4
  %376 = and i32 %375, 1
  %377 = icmp eq i32 %376, 0
  br i1 %377, label %387, label %378

378:                                              ; preds = %373
  %379 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 93
  %380 = load i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)** %379, align 8
  %381 = icmp eq i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)* %380, @avcodec_default_get_buffer2
  br i1 %381, label %387, label %382

382:                                              ; preds = %378
  %383 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 149
  %384 = load i32, i32* %383, align 4
  %385 = icmp eq i32 %384, 0
  br i1 %385, label %386, label %387

386:                                              ; preds = %382
  call void (i8*, i32, i8*, ...) @av_log(i8* %147, i32 24, i8* getelementptr inbounds ([169 x i8], [169 x i8]* @.str.13, i64 0, i64 0)) #17
  br label %387

387:                                              ; preds = %382, %378, %373, %386
  store %struct.AVCodec* %34, %struct.AVCodec** %18, align 8
  %388 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 2
  %389 = load i32, i32* %388, align 4
  %390 = icmp eq i32 %389, -1
  br i1 %390, label %398, label %391

391:                                              ; preds = %387
  %392 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %34, i64 0, i32 2
  %393 = load i32, i32* %392, align 8
  %394 = icmp eq i32 %389, %393
  br i1 %394, label %398, label %395

395:                                              ; preds = %391
  %396 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 4
  %397 = load i32, i32* %396, align 8
  br label %407

398:                                              ; preds = %391, %387
  %399 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 4
  %400 = load i32, i32* %399, align 8
  %401 = icmp eq i32 %400, 0
  br i1 %401, label %402, label %407

402:                                              ; preds = %398
  %403 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %34, i64 0, i32 2
  %404 = load i32, i32* %403, align 8
  store i32 %404, i32* %388, align 4
  %405 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %34, i64 0, i32 3
  %406 = load i32, i32* %405, align 4
  store i32 %406, i32* %399, align 8
  br label %407

407:                                              ; preds = %395, %402, %398
  %408 = phi i32 [ %389, %395 ], [ %404, %402 ], [ %389, %398 ]
  %409 = phi i32 [ %397, %395 ], [ %406, %402 ], [ %400, %398 ]
  %410 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 4
  %411 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %34, i64 0, i32 3
  %412 = load i32, i32* %411, align 4
  %413 = icmp eq i32 %409, %412
  br i1 %413, label %414, label %420

414:                                              ; preds = %407
  %415 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %34, i64 0, i32 2
  %416 = load i32, i32* %415, align 8
  %417 = icmp eq i32 %408, %416
  %418 = icmp eq i32 %408, 4
  %419 = or i1 %418, %417
  br i1 %419, label %421, label %420

420:                                              ; preds = %414, %407
  call void (i8*, i32, i8*, ...) @av_log(i8* %147, i32 16, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.14, i64 0, i64 0)) #17
  br label %1004

421:                                              ; preds = %414
  %422 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 86
  store i32 0, i32* %422, align 8
  %423 = call %struct.AVCodecDescriptor* @avcodec_descriptor_get(i32 %409) #17
  %424 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 166
  store %struct.AVCodecDescriptor* %423, %struct.AVCodecDescriptor** %424, align 8
  %425 = load %struct.AVCodec*, %struct.AVCodec** %18, align 8
  %426 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %425, i64 0, i32 4
  %427 = load i32, i32* %426, align 8
  %428 = and i32 %427, 512
  %429 = icmp eq i32 %428, 0
  br i1 %429, label %478, label %430

430:                                              ; preds = %421
  %431 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 132
  %432 = load i32, i32* %431, align 4
  %433 = icmp sgt i32 %432, -2
  br i1 %433, label %434, label %478

434:                                              ; preds = %430
  %435 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %34, i64 0, i32 20
  %436 = load i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)** %435, align 8
  %437 = icmp eq i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)* %436, null
  br i1 %437, label %438, label %447

438:                                              ; preds = %434
  %439 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %34, i64 0, i32 21
  %440 = load i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)** %439, align 8
  %441 = icmp eq i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)* %440, null
  br i1 %441, label %442, label %447

442:                                              ; preds = %438
  %443 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %34, i64 0, i32 24
  %444 = load i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)** %443, align 8
  %445 = icmp eq i32 (%struct.AVCodecContext*, %struct.AVPacket*)* %444, null
  %446 = select i1 %445, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.15, i64 0, i64 0)
  br label %447

447:                                              ; preds = %442, %434, %438
  %448 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.15, i64 0, i64 0), %438 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.15, i64 0, i64 0), %434 ], [ %446, %442 ]
  %449 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %34, i64 0, i32 0
  %450 = load i8*, i8** %449, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %147, i32 16, i8* getelementptr inbounds ([110 x i8], [110 x i8]* @.str.17, i64 0, i64 0), i8* %448, i8* %450, i32 -2) #17
  %451 = load i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)** %435, align 8
  %452 = icmp eq i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)* %451, null
  br i1 %452, label %453, label %457

453:                                              ; preds = %447
  %454 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %34, i64 0, i32 21
  %455 = load i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)** %454, align 8
  %456 = icmp eq i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)* %455, null
  br i1 %456, label %459, label %457

457:                                              ; preds = %453, %447
  %458 = load i32, i32* %411, align 4
  br label %464

459:                                              ; preds = %453
  %460 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %34, i64 0, i32 24
  %461 = load i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)** %460, align 8
  %462 = icmp eq i32 (%struct.AVCodecContext*, %struct.AVPacket*)* %461, null
  %463 = load i32, i32* %411, align 4
  br i1 %462, label %467, label %464

464:                                              ; preds = %457, %459
  %465 = phi i32 [ %458, %457 ], [ %463, %459 ]
  %466 = call %struct.AVCodec* @avcodec_find_encoder(i32 %465) #17
  br label %469

467:                                              ; preds = %459
  %468 = call %struct.AVCodec* @avcodec_find_decoder(i32 %463) #17
  br label %469

469:                                              ; preds = %467, %464
  %470 = phi %struct.AVCodec* [ %466, %464 ], [ %468, %467 ]
  %471 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %470, i64 0, i32 4
  %472 = load i32, i32* %471, align 8
  %473 = and i32 %472, 512
  %474 = icmp eq i32 %473, 0
  br i1 %474, label %475, label %1004

475:                                              ; preds = %469
  %476 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %470, i64 0, i32 0
  %477 = load i8*, i8** %476, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %147, i32 16, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.18, i64 0, i64 0), i8* %448, i8* %477) #17
  br label %1004

478:                                              ; preds = %421, %430
  %479 = load i32, i32* %388, align 4
  %480 = icmp eq i32 %479, 1
  br i1 %480, label %481, label %492

481:                                              ; preds = %478
  %482 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 17, i32 0
  %483 = load i32, i32* %482, align 4
  %484 = icmp eq i32 %483, 0
  br i1 %484, label %489, label %485

485:                                              ; preds = %481
  %486 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 17, i32 1
  %487 = load i32, i32* %486, align 4
  %488 = icmp eq i32 %487, 0
  br i1 %488, label %489, label %492

489:                                              ; preds = %485, %481
  store i32 1, i32* %482, align 4
  %490 = load i32, i32* %364, align 8
  %491 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 17, i32 1
  store i32 %490, i32* %491, align 4
  br label %492

492:                                              ; preds = %485, %489, %478
  %493 = icmp eq %struct.AVCodec* %425, null
  br i1 %493, label %505, label %494

494:                                              ; preds = %492
  %495 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %425, i64 0, i32 22
  %496 = load i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)** %495, align 8
  %497 = icmp eq i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)* %496, null
  br i1 %497, label %498, label %502

498:                                              ; preds = %494
  %499 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %425, i64 0, i32 25
  %500 = load i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)** %499, align 8
  %501 = icmp eq i32 (%struct.AVCodecContext*, %struct.AVFrame*)* %500, null
  br i1 %501, label %505, label %502

502:                                              ; preds = %494, %498
  %503 = call i32 @ff_decode_bsfs_init(%struct.AVCodecContext* %0) #17
  %504 = icmp slt i32 %503, 0
  br i1 %504, label %1004, label %505

505:                                              ; preds = %492, %498, %502
  %506 = phi i32 [ %503, %502 ], [ %328, %498 ], [ %328, %492 ]
  %507 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %5, align 8
  %508 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %507, i64 0, i32 11
  %509 = load i8*, i8** %508, align 8
  %510 = icmp eq i8* %509, null
  br i1 %510, label %516, label %511

511:                                              ; preds = %505
  %512 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 148
  %513 = load i32, i32* %512, align 8
  %514 = and i32 %513, 1
  %515 = icmp eq i32 %514, 0
  br i1 %515, label %516, label %519

516:                                              ; preds = %511, %505
  %517 = call i32 @ff_thread_init(%struct.AVCodecContext* %0) #17
  %518 = icmp slt i32 %517, 0
  br i1 %518, label %1004, label %519

519:                                              ; preds = %511, %516
  %520 = phi i32 [ %506, %511 ], [ %517, %516 ]
  %521 = load %struct.AVCodec*, %struct.AVCodec** %18, align 8
  %522 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %521, i64 0, i32 10
  %523 = load i8, i8* %522, align 8
  %524 = zext i8 %523 to i32
  %525 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 144
  %526 = load i32, i32* %525, align 8
  %527 = icmp ugt i32 %526, %524
  br i1 %527, label %528, label %533

528:                                              ; preds = %519
  call void (i8*, i32, i8*, ...) @av_log(i8* %147, i32 24, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.19, i64 0, i64 0), i32 %524) #17
  %529 = load %struct.AVCodec*, %struct.AVCodec** %18, align 8
  %530 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %529, i64 0, i32 10
  %531 = load i8, i8* %530, align 8
  %532 = zext i8 %531 to i32
  store i32 %532, i32* %525, align 8
  br label %533

533:                                              ; preds = %519, %528
  %534 = phi %struct.AVCodec* [ %529, %528 ], [ %521, %519 ]
  %535 = icmp eq %struct.AVCodec* %534, null
  br i1 %535, label %820, label %536

536:                                              ; preds = %533
  %537 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %534, i64 0, i32 20
  %538 = load i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)** %537, align 8
  %539 = icmp eq i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)* %538, null
  br i1 %539, label %540, label %548

540:                                              ; preds = %536
  %541 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %534, i64 0, i32 21
  %542 = load i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)** %541, align 8
  %543 = icmp eq i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)* %542, null
  br i1 %543, label %544, label %548

544:                                              ; preds = %540
  %545 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %534, i64 0, i32 24
  %546 = load i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)** %545, align 8
  %547 = icmp eq i32 (%struct.AVCodecContext*, %struct.AVPacket*)* %546, null
  br i1 %547, label %820, label %548

548:                                              ; preds = %536, %540, %544
  %549 = call %struct.AVFrame* @av_frame_alloc() #17
  %550 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 145
  store %struct.AVFrame* %549, %struct.AVFrame** %550, align 8
  %551 = icmp eq %struct.AVFrame* %549, null
  br i1 %551, label %1004, label %552

552:                                              ; preds = %548
  %553 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 17, i32 0
  %554 = load i32, i32* %553, align 4
  %555 = icmp slt i32 %554, 1
  br i1 %555, label %560, label %556

556:                                              ; preds = %552
  %557 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 17, i32 1
  %558 = load i32, i32* %557, align 4
  %559 = icmp slt i32 %558, 1
  br i1 %559, label %560, label %561

560:                                              ; preds = %556, %552
  call void (i8*, i32, i8*, ...) @av_log(i8* %147, i32 16, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.20, i64 0, i64 0)) #17
  br label %1004

561:                                              ; preds = %556
  %562 = load %struct.AVCodec*, %struct.AVCodec** %18, align 8
  %563 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %562, i64 0, i32 8
  %564 = load i32*, i32** %563, align 8
  %565 = icmp eq i32* %564, null
  br i1 %565, label %622, label %566

566:                                              ; preds = %561
  %567 = load i32, i32* %564, align 4
  %568 = icmp eq i32 %567, -1
  br i1 %568, label %605, label %569

569:                                              ; preds = %566
  %570 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 84
  br label %571

571:                                              ; preds = %569, %595
  %572 = phi %struct.AVCodec* [ %562, %569 ], [ %596, %595 ]
  %573 = phi i64 [ 0, %569 ], [ %597, %595 ]
  %574 = phi i32 [ %567, %569 ], [ %601, %595 ]
  %575 = load i32, i32* %570, align 8
  %576 = icmp eq i32 %575, %574
  br i1 %576, label %605, label %577

577:                                              ; preds = %571
  %578 = load i32, i32* %340, align 4
  %579 = icmp eq i32 %578, 1
  br i1 %579, label %580, label %595

580:                                              ; preds = %577
  %581 = call i32 @av_get_planar_sample_fmt(i32 %575) #17
  %582 = load %struct.AVCodec*, %struct.AVCodec** %18, align 8
  %583 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %582, i64 0, i32 8
  %584 = load i32*, i32** %583, align 8
  %585 = getelementptr inbounds i32, i32* %584, i64 %573
  %586 = load i32, i32* %585, align 4
  %587 = call i32 @av_get_planar_sample_fmt(i32 %586) #17
  %588 = icmp eq i32 %581, %587
  %589 = load %struct.AVCodec*, %struct.AVCodec** %18, align 8
  br i1 %588, label %590, label %595

590:                                              ; preds = %580
  %591 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %589, i64 0, i32 8
  %592 = load i32*, i32** %591, align 8
  %593 = getelementptr inbounds i32, i32* %592, i64 %573
  %594 = load i32, i32* %593, align 4
  store i32 %594, i32* %570, align 8
  br label %605

595:                                              ; preds = %580, %577
  %596 = phi %struct.AVCodec* [ %572, %577 ], [ %589, %580 ]
  %597 = add nuw i64 %573, 1
  %598 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %596, i64 0, i32 8
  %599 = load i32*, i32** %598, align 8
  %600 = getelementptr inbounds i32, i32* %599, i64 %597
  %601 = load i32, i32* %600, align 4
  %602 = icmp eq i32 %601, -1
  br i1 %602, label %603, label %571

603:                                              ; preds = %595
  %604 = and i64 %597, 4294967295
  br label %605

605:                                              ; preds = %571, %566, %603, %590
  %606 = phi %struct.AVCodec* [ %589, %590 ], [ %596, %603 ], [ %562, %566 ], [ %572, %571 ]
  %607 = phi i64 [ %573, %590 ], [ %604, %603 ], [ 0, %566 ], [ %573, %571 ]
  %608 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %606, i64 0, i32 8
  %609 = load i32*, i32** %608, align 8
  %610 = getelementptr inbounds i32, i32* %609, i64 %607
  %611 = load i32, i32* %610, align 4
  %612 = icmp eq i32 %611, -1
  br i1 %612, label %613, label %622

613:                                              ; preds = %605
  %614 = getelementptr inbounds [128 x i8], [128 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %614) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %614, i8 -86, i64 128, i1 false)
  %615 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 84
  %616 = load i32, i32* %615, align 8
  %617 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %614, i64 128, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i64 0, i64 0), i32 %616) #17
  %618 = load i32, i32* %615, align 8
  %619 = call i8* @av_get_sample_fmt_name(i32 %618) #17
  %620 = icmp eq i8* %619, null
  %621 = select i1 %620, i8* %614, i8* %619
  call void (i8*, i32, i8*, ...) @av_log(i8* %147, i32 16, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.22, i64 0, i64 0), i8* %621) #17
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %614) #17
  br label %1004

622:                                              ; preds = %561, %605
  %623 = phi %struct.AVCodec* [ %562, %561 ], [ %606, %605 ]
  %624 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %623, i64 0, i32 6
  %625 = load i32*, i32** %624, align 8
  %626 = icmp eq i32* %625, null
  br i1 %626, label %660, label %627

627:                                              ; preds = %622
  %628 = load i32, i32* %625, align 4
  %629 = icmp eq i32 %628, -1
  br i1 %629, label %642, label %630

630:                                              ; preds = %627
  %631 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 25
  %632 = load i32, i32* %631, align 8
  br label %637

633:                                              ; preds = %637
  %634 = getelementptr inbounds i32, i32* %625, i64 %641
  %635 = load i32, i32* %634, align 4
  %636 = icmp eq i32 %635, -1
  br i1 %636, label %642, label %637

637:                                              ; preds = %630, %633
  %638 = phi i64 [ 0, %630 ], [ %641, %633 ]
  %639 = phi i32 [ %628, %630 ], [ %635, %633 ]
  %640 = icmp eq i32 %632, %639
  %641 = add nuw i64 %638, 1
  br i1 %640, label %657, label %633

642:                                              ; preds = %633, %627
  %643 = load i32, i32* %410, align 8
  switch i32 %643, label %648 [
    i32 7, label %644
    i32 9, label %644
  ]

644:                                              ; preds = %642, %642
  %645 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 132
  %646 = load i32, i32* %645, align 4
  %647 = icmp slt i32 %646, 0
  br i1 %647, label %660, label %648

648:                                              ; preds = %642, %644
  %649 = getelementptr inbounds [128 x i8], [128 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %649) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %649, i8 -86, i64 128, i1 false)
  %650 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 25
  %651 = load i32, i32* %650, align 8
  %652 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %649, i64 128, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i64 0, i64 0), i32 %651) #17
  %653 = load i32, i32* %650, align 8
  %654 = call i8* @av_get_pix_fmt_name(i32 %653) #17
  %655 = icmp eq i8* %654, null
  %656 = select i1 %655, i8* %649, i8* %654
  call void (i8*, i32, i8*, ...) @av_log(i8* %147, i32 16, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.23, i64 0, i64 0), i8* %656) #17
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %649) #17
  br label %1004

657:                                              ; preds = %637
  switch i32 %632, label %660 [
    i32 12, label %658
    i32 140, label %658
    i32 13, label %658
    i32 32, label %658
    i32 14, label %658
  ]

658:                                              ; preds = %657, %657, %657, %657, %657
  %659 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 78
  store i32 2, i32* %659, align 8
  br label %660

660:                                              ; preds = %644, %657, %622, %658
  %661 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %623, i64 0, i32 7
  %662 = load i32*, i32** %661, align 8
  %663 = icmp eq i32* %662, null
  br i1 %663, label %678, label %664

664:                                              ; preds = %660
  %665 = load i32, i32* %662, align 4
  %666 = icmp eq i32 %665, 0
  %667 = load i32, i32* %364, align 8
  br i1 %666, label %677, label %672

668:                                              ; preds = %672
  %669 = getelementptr inbounds i32, i32* %662, i64 %676
  %670 = load i32, i32* %669, align 4
  %671 = icmp eq i32 %670, 0
  br i1 %671, label %677, label %672

672:                                              ; preds = %664, %668
  %673 = phi i64 [ %676, %668 ], [ 0, %664 ]
  %674 = phi i32 [ %670, %668 ], [ %665, %664 ]
  %675 = icmp eq i32 %667, %674
  %676 = add nuw i64 %673, 1
  br i1 %675, label %680, label %668

677:                                              ; preds = %668, %664
  call void (i8*, i32, i8*, ...) @av_log(i8* %147, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.24, i64 0, i64 0), i32 %667) #17
  br label %1004

678:                                              ; preds = %660
  %679 = load i32, i32* %364, align 8
  br label %680

680:                                              ; preds = %672, %678
  %681 = phi i32 [ %679, %678 ], [ %667, %672 ]
  %682 = icmp slt i32 %681, 0
  br i1 %682, label %683, label %684

683:                                              ; preds = %680
  call void (i8*, i32, i8*, ...) @av_log(i8* %147, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.24, i64 0, i64 0), i32 %681) #17
  br label %1004

684:                                              ; preds = %680
  %685 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %623, i64 0, i32 9
  %686 = load i64*, i64** %685, align 8
  %687 = icmp eq i64* %686, null
  br i1 %687, label %707, label %688

688:                                              ; preds = %684
  %689 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 89
  %690 = load i64, i64* %689, align 8
  %691 = icmp eq i64 %690, 0
  br i1 %691, label %695, label %692

692:                                              ; preds = %688
  %693 = load i64, i64* %686, align 8
  %694 = icmp eq i64 %693, 0
  br i1 %694, label %705, label %700

695:                                              ; preds = %688
  call void (i8*, i32, i8*, ...) @av_log(i8* %147, i32 24, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.25, i64 0, i64 0)) #17
  br label %707

696:                                              ; preds = %700
  %697 = getelementptr inbounds i64, i64* %686, i64 %704
  %698 = load i64, i64* %697, align 8
  %699 = icmp eq i64 %698, 0
  br i1 %699, label %705, label %700

700:                                              ; preds = %692, %696
  %701 = phi i64 [ %704, %696 ], [ 0, %692 ]
  %702 = phi i64 [ %698, %696 ], [ %693, %692 ]
  %703 = icmp eq i64 %690, %702
  %704 = add nuw i64 %701, 1
  br i1 %703, label %707, label %696

705:                                              ; preds = %696, %692
  %706 = getelementptr inbounds [512 x i8], [512 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %706) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %706, i8 -86, i64 512, i1 false)
  call void @av_get_channel_layout_string(i8* nonnull %706, i32 512, i32 -1, i64 %690) #17
  call void (i8*, i32, i8*, ...) @av_log(i8* %147, i32 16, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.26, i64 0, i64 0), i8* nonnull %706) #17
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %706) #17
  br label %1004

707:                                              ; preds = %700, %684, %695
  %708 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 89
  %709 = load i64, i64* %708, align 8
  %710 = icmp eq i64 %709, 0
  %711 = load i32, i32* %340, align 4
  br i1 %710, label %723, label %712

712:                                              ; preds = %707
  %713 = icmp eq i32 %711, 0
  %714 = call i32 @av_get_channel_layout_nb_channels(i64 %709) #17
  br i1 %713, label %722, label %715

715:                                              ; preds = %712
  %716 = load i32, i32* %340, align 4
  %717 = icmp eq i32 %714, %716
  br i1 %717, label %723, label %718

718:                                              ; preds = %715
  %719 = getelementptr inbounds [512 x i8], [512 x i8]* %9, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %719) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %719, i8 -86, i64 512, i1 false)
  %720 = load i64, i64* %708, align 8
  call void @av_get_channel_layout_string(i8* nonnull %719, i32 512, i32 -1, i64 %720) #17
  %721 = load i32, i32* %340, align 4
  call void (i8*, i32, i8*, ...) @av_log(i8* %147, i32 16, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.27, i64 0, i64 0), i8* nonnull %719, i32 %714, i32 %721) #17
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %719) #17
  br label %1004

722:                                              ; preds = %712
  store i32 %714, i32* %340, align 4
  br label %723

723:                                              ; preds = %707, %715, %722
  %724 = phi i32 [ %714, %722 ], [ %714, %715 ], [ %711, %707 ]
  %725 = icmp slt i32 %724, 0
  br i1 %725, label %726, label %727

726:                                              ; preds = %723
  call void (i8*, i32, i8*, ...) @av_log(i8* %147, i32 16, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.28, i64 0, i64 0), i32 %724) #17
  br label %1004

727:                                              ; preds = %723
  %728 = load i32, i32* %388, align 4
  %729 = icmp eq i32 %728, 0
  br i1 %729, label %730, label %760

730:                                              ; preds = %727
  %731 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 25
  %732 = load i32, i32* %731, align 8
  %733 = call %struct.AVPixFmtDescriptor* @av_pix_fmt_desc_get(i32 %732) #17
  %734 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 143
  %735 = load i32, i32* %734, align 4
  %736 = icmp slt i32 %735, 0
  br i1 %736, label %737, label %740

737:                                              ; preds = %730
  %738 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %733, i64 0, i32 5, i64 0, i32 4
  %739 = load i32, i32* %738, align 8
  br label %746

740:                                              ; preds = %730
  %741 = icmp sgt i32 %735, 8
  br i1 %741, label %742, label %750

742:                                              ; preds = %740
  %743 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %733, i64 0, i32 5, i64 0, i32 4
  %744 = load i32, i32* %743, align 8
  %745 = icmp slt i32 %744, 9
  br i1 %745, label %746, label %750

746:                                              ; preds = %737, %742
  %747 = phi i32 [ %739, %737 ], [ %744, %742 ]
  %748 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %733, i64 0, i32 5, i64 0, i32 4
  call void (i8*, i32, i8*, ...) @av_log(i8* %147, i32 24, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.29, i64 0, i64 0), i32 %735, i32 %747) #17
  %749 = load i32, i32* %748, align 8
  store i32 %749, i32* %734, align 4
  br label %750

750:                                              ; preds = %746, %742, %740
  %751 = load i32, i32* %327, align 4
  %752 = icmp slt i32 %751, 1
  br i1 %752, label %757, label %753

753:                                              ; preds = %750
  %754 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 21
  %755 = load i32, i32* %754, align 8
  %756 = icmp slt i32 %755, 1
  br i1 %756, label %757, label %758

757:                                              ; preds = %753, %750
  call void (i8*, i32, i8*, ...) @av_log(i8* %147, i32 16, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.30, i64 0, i64 0)) #17
  br label %1004

758:                                              ; preds = %753
  %759 = load i32, i32* %388, align 4
  br label %760

760:                                              ; preds = %758, %727
  %761 = phi i32 [ %759, %758 ], [ %728, %727 ]
  %762 = icmp ult i32 %761, 2
  br i1 %762, label %763, label %769

763:                                              ; preds = %760
  %764 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 9
  %765 = load i64, i64* %764, align 8
  %766 = add i64 %765, -1
  %767 = icmp ult i64 %766, 999
  br i1 %767, label %768, label %769

768:                                              ; preds = %763
  call void (i8*, i32, i8*, ...) @av_log(i8* %147, i32 24, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.31, i64 0, i64 0), i64 %765, i64 %765) #17
  br label %769

769:                                              ; preds = %760, %768, %763
  %770 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 107
  %771 = load i32, i32* %770, align 8
  %772 = icmp eq i32 %771, 0
  br i1 %772, label %773, label %780

773:                                              ; preds = %769
  %774 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 100
  %775 = load i32, i32* %774, align 8
  %776 = sext i32 %775 to i64
  %777 = mul nsw i64 %776, 3
  %778 = sdiv i64 %777, 4
  %779 = trunc i64 %778 to i32
  store i32 %779, i32* %770, align 8
  br label %780

780:                                              ; preds = %769, %773
  %781 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 18
  %782 = load i32, i32* %781, align 4
  %783 = icmp eq i32 %782, 0
  br i1 %783, label %792, label %784

784:                                              ; preds = %780
  %785 = load i32, i32* %553, align 4
  %786 = icmp eq i32 %785, 0
  br i1 %786, label %792, label %787

787:                                              ; preds = %784
  %788 = sdiv i32 2147483647, %785
  %789 = icmp sgt i32 %782, %788
  br i1 %789, label %790, label %792

790:                                              ; preds = %787
  %791 = load i32, i32* %557, align 4
  call void (i8*, i32, i8*, ...) @av_log(i8* %147, i32 16, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32, i64 0, i64 0), i32 %782, i32 %785, i32 %791) #17
  br label %1004

792:                                              ; preds = %784, %780, %787
  %793 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 182
  %794 = load %struct.AVBufferRef*, %struct.AVBufferRef** %793, align 8
  %795 = icmp eq %struct.AVBufferRef* %794, null
  br i1 %795, label %820, label %796

796:                                              ; preds = %792
  %797 = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %794, i64 0, i32 1
  %798 = bitcast i8** %797 to %struct.AVHWFramesContext**
  %799 = load %struct.AVHWFramesContext*, %struct.AVHWFramesContext** %798, align 8
  %800 = getelementptr inbounds %struct.AVHWFramesContext, %struct.AVHWFramesContext* %799, i64 0, i32 9
  %801 = load i32, i32* %800, align 4
  %802 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 25
  %803 = load i32, i32* %802, align 8
  %804 = icmp eq i32 %801, %803
  br i1 %804, label %806, label %805

805:                                              ; preds = %796
  call void (i8*, i32, i8*, ...) @av_log(i8* %147, i32 16, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.33, i64 0, i64 0)) #17
  br label %1004

806:                                              ; preds = %796
  %807 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 164
  %808 = load i32, i32* %807, align 8
  %809 = icmp eq i32 %808, -1
  %810 = getelementptr inbounds %struct.AVHWFramesContext, %struct.AVHWFramesContext* %799, i64 0, i32 10
  %811 = load i32, i32* %810, align 8
  br i1 %809, label %818, label %812

812:                                              ; preds = %806
  %813 = icmp eq i32 %808, %811
  br i1 %813, label %818, label %814

814:                                              ; preds = %812
  %815 = call i8* @av_get_pix_fmt_name(i32 %808) #17
  %816 = load i32, i32* %810, align 8
  %817 = call i8* @av_get_pix_fmt_name(i32 %816) #17
  call void (i8*, i32, i8*, ...) @av_log(i8* %147, i32 16, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.34, i64 0, i64 0), i8* %815, i8* %817) #17
  br label %1004

818:                                              ; preds = %806, %812
  %819 = phi i32 [ %808, %812 ], [ %811, %806 ]
  store i32 %819, i32* %807, align 8
  br label %820

820:                                              ; preds = %533, %818, %792, %544
  %821 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 167
  %822 = bitcast i64* %821 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %822, i8 0, i64 16, i1 false)
  %823 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 169
  %824 = bitcast i64* %823 to <2 x i64>*
  store <2 x i64> <i64 -9223372036854775808, i64 -9223372036854775808>, <2 x i64>* %824, align 8
  %825 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 13
  %826 = load i32, i32* %825, align 4
  %827 = and i32 %826, 8192
  %828 = icmp eq i32 %827, 0
  br i1 %828, label %835, label %829

829:                                              ; preds = %820
  %830 = load %struct.AVCodecDescriptor*, %struct.AVCodecDescriptor** %424, align 8
  %831 = getelementptr inbounds %struct.AVCodecDescriptor, %struct.AVCodecDescriptor* %830, i64 0, i32 1
  %832 = load i32, i32* %831, align 4
  %833 = icmp eq i32 %832, 0
  br i1 %833, label %834, label %835

834:                                              ; preds = %829
  call void (i8*, i32, i8*, ...) @av_log(i8* %147, i32 24, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.35, i64 0, i64 0)) #17
  br label %835

835:                                              ; preds = %820, %834, %829
  %836 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 14
  %837 = load i32, i32* %836, align 8
  %838 = and i32 %837, 268435456
  %839 = icmp eq i32 %838, 0
  br i1 %839, label %844, label %840

840:                                              ; preds = %835
  %841 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 192
  %842 = load i32, i32* %841, align 8
  %843 = or i32 %842, 1
  store i32 %843, i32* %841, align 8
  br label %844

844:                                              ; preds = %835, %840
  %845 = load %struct.AVCodec*, %struct.AVCodec** %18, align 8
  %846 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %845, i64 0, i32 19
  %847 = load i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)** %846, align 8
  %848 = icmp eq i32 (%struct.AVCodecContext*)* %847, null
  br i1 %848, label %864, label %849

849:                                              ; preds = %844
  %850 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 148
  %851 = load i32, i32* %850, align 8
  %852 = and i32 %851, 1
  %853 = icmp eq i32 %852, 0
  br i1 %853, label %859, label %854

854:                                              ; preds = %849
  %855 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %5, align 8
  %856 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %855, i64 0, i32 11
  %857 = load i8*, i8** %856, align 8
  %858 = icmp eq i8* %857, null
  br i1 %858, label %864, label %859

859:                                              ; preds = %854, %849
  %860 = call i32 %847(%struct.AVCodecContext* %0) #17
  %861 = icmp slt i32 %860, 0
  br i1 %861, label %1004, label %862

862:                                              ; preds = %859
  %863 = load %struct.AVCodec*, %struct.AVCodec** %18, align 8
  br label %864

864:                                              ; preds = %854, %862, %844
  %865 = phi %struct.AVCodec* [ %845, %844 ], [ %863, %862 ], [ %845, %854 ]
  %866 = phi i32 [ 0, %844 ], [ 1, %862 ], [ 0, %854 ]
  %867 = icmp eq %struct.AVCodec* %865, null
  br i1 %867, label %973, label %868

868:                                              ; preds = %864
  %869 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %865, i64 0, i32 22
  %870 = load i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)** %869, align 8
  %871 = icmp eq i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)* %870, null
  br i1 %871, label %872, label %876

872:                                              ; preds = %868
  %873 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %865, i64 0, i32 25
  %874 = load i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)** %873, align 8
  %875 = icmp eq i32 (%struct.AVCodecContext*, %struct.AVFrame*)* %874, null
  br i1 %875, label %973, label %876

876:                                              ; preds = %868, %872
  %877 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 9
  %878 = load i64, i64* %877, align 8
  %879 = icmp eq i64 %878, 0
  br i1 %879, label %880, label %904

880:                                              ; preds = %876
  %881 = load i32, i32* %388, align 4
  %882 = icmp eq i32 %881, 1
  br i1 %882, label %883, label %902

883:                                              ; preds = %880
  %884 = load i32, i32* %410, align 8
  switch i32 %884, label %887 [
    i32 69649, label %890
    i32 69648, label %885
    i32 69647, label %886
    i32 69633, label %886
    i32 69632, label %886
    i32 69645, label %886
    i32 69638, label %886
  ]

885:                                              ; preds = %883
  br label %890

886:                                              ; preds = %883, %883, %883, %883, %883
  br label %890

887:                                              ; preds = %883
  %888 = call i32 @av_get_exact_bits_per_sample(i32 %884) #17
  %889 = icmp eq i32 %888, 0
  br i1 %889, label %902, label %890

890:                                              ; preds = %887, %886, %885, %883
  %891 = phi i32 [ %888, %887 ], [ 2, %883 ], [ 3, %885 ], [ 4, %886 ]
  %892 = load i32, i32* %364, align 8
  %893 = sext i32 %892 to i64
  %894 = load i32, i32* %340, align 4
  %895 = sext i32 %894 to i64
  %896 = mul nsw i64 %895, %893
  %897 = sext i32 %891 to i64
  %898 = sdiv i64 9223372036854775807, %897
  %899 = icmp sgt i64 %896, %898
  %900 = mul nsw i64 %896, %897
  %901 = select i1 %899, i64 0, i64 %900
  br label %902

902:                                              ; preds = %880, %887, %890
  %903 = phi i64 [ %901, %890 ], [ 0, %887 ], [ 0, %880 ]
  store i64 %903, i64* %877, align 8
  br label %904

904:                                              ; preds = %876, %902
  %905 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 89
  %906 = load i64, i64* %905, align 8
  %907 = icmp eq i64 %906, 0
  br i1 %907, label %919, label %908

908:                                              ; preds = %904
  %909 = call i32 @av_get_channel_layout_nb_channels(i64 %906) #17
  %910 = load i32, i32* %340, align 4
  %911 = icmp eq i32 %910, 0
  br i1 %911, label %912, label %913

912:                                              ; preds = %908
  store i32 %909, i32* %340, align 4
  br label %921

913:                                              ; preds = %908
  %914 = icmp eq i32 %909, %910
  br i1 %914, label %921, label %915

915:                                              ; preds = %913
  %916 = getelementptr inbounds [512 x i8], [512 x i8]* %10, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %916) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %916, i8 -86, i64 512, i1 false)
  %917 = load i64, i64* %905, align 8
  call void @av_get_channel_layout_string(i8* nonnull %916, i32 512, i32 -1, i64 %917) #17
  %918 = load i32, i32* %340, align 4
  call void (i8*, i32, i8*, ...) @av_log(i8* %147, i32 24, i8* getelementptr inbounds ([120 x i8], [120 x i8]* @.str.36, i64 0, i64 0), i8* nonnull %916, i32 %909, i32 %918) #17
  store i64 0, i64* %905, align 8
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %916) #17
  br label %919

919:                                              ; preds = %904, %915
  %920 = load i32, i32* %340, align 4
  br label %921

921:                                              ; preds = %919, %912, %913
  %922 = phi i32 [ %920, %919 ], [ %909, %912 ], [ %909, %913 ]
  %923 = icmp ugt i32 %922, 512
  br i1 %923, label %1004, label %924

924:                                              ; preds = %921
  %925 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 142
  %926 = load i32, i32* %925, align 8
  %927 = icmp slt i32 %926, 0
  br i1 %927, label %1004, label %928

928:                                              ; preds = %924
  %929 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 171
  %930 = load i8*, i8** %929, align 8
  %931 = icmp eq i8* %930, null
  br i1 %931, label %951, label %932

932:                                              ; preds = %928
  %933 = load i32, i32* %388, align 4
  %934 = icmp eq i32 %933, 3
  br i1 %934, label %936, label %935

935:                                              ; preds = %932
  call void (i8*, i32, i8*, ...) @av_log(i8* %147, i32 16, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.37, i64 0, i64 0)) #17
  br label %1004

936:                                              ; preds = %932
  %937 = load %struct.AVCodecDescriptor*, %struct.AVCodecDescriptor** %424, align 8
  %938 = getelementptr inbounds %struct.AVCodecDescriptor, %struct.AVCodecDescriptor* %937, i64 0, i32 4
  %939 = load i32, i32* %938, align 8
  %940 = and i32 %939, 65536
  %941 = icmp eq i32 %940, 0
  br i1 %941, label %946, label %942

942:                                              ; preds = %936
  %943 = getelementptr inbounds %struct.AVCodecDescriptor, %struct.AVCodecDescriptor* %937, i64 0, i32 2
  %944 = load i8*, i8** %943, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %147, i32 24, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.38, i64 0, i64 0), i8* %944) #17
  %945 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 172
  store i32 -1, i32* %945, align 8
  br label %951

946:                                              ; preds = %936
  %947 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 172
  %948 = load i32, i32* %947, align 8
  switch i32 %948, label %951 [
    i32 0, label %949
    i32 1, label %950
  ]

949:                                              ; preds = %946
  store i32 1, i32* %947, align 8
  br label %950

950:                                              ; preds = %946, %949
  call void (i8*, i32, i8*, ...) @av_log(i8* %147, i32 16, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @.str.39, i64 0, i64 0)) #17
  br label %1004

951:                                              ; preds = %946, %928, %942
  %952 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 163
  %953 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %952, i64 0, i32 0
  %954 = load i32, i32* %953, align 8
  %955 = icmp sgt i32 %954, 0
  br i1 %955, label %956, label %973

956:                                              ; preds = %951
  %957 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 163, i32 1
  %958 = load i32, i32* %957, align 4
  %959 = icmp sgt i32 %958, 0
  br i1 %959, label %960, label %973

960:                                              ; preds = %956
  %961 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 18
  %962 = load i32, i32* %961, align 4
  %963 = bitcast %struct.AVRational* %952 to i64*
  %964 = load i64, i64* %963, align 8
  %965 = zext i32 %962 to i64
  %966 = or i64 %965, 4294967296
  %967 = call i64 @av_mul_q(i64 %964, i64 %966) #4
  %968 = lshr i64 %967, 32
  %969 = shl i64 %967, 32
  %970 = or i64 %969, %968
  %971 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 17
  %972 = bitcast %struct.AVRational* %971 to i64*
  store i64 %970, i64* %972, align 4
  br label %973

973:                                              ; preds = %864, %872, %951, %956, %960
  %974 = load i32, i32* %120, align 8
  %975 = icmp sgt i32 %974, 0
  br i1 %975, label %976, label %988

976:                                              ; preds = %973
  %977 = load i8*, i8** %123, align 8
  %978 = icmp eq i8* %977, null
  br i1 %978, label %988, label %979

979:                                              ; preds = %976
  %980 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %34, i64 0, i32 11
  %981 = load %struct.AVClass*, %struct.AVClass** %980, align 8
  %982 = icmp eq %struct.AVClass* %981, null
  br i1 %982, label %988, label %983

983:                                              ; preds = %979
  %984 = bitcast i8* %977 to %struct.AVClass**
  %985 = load %struct.AVClass*, %struct.AVClass** %984, align 8
  %986 = icmp eq %struct.AVClass* %985, %981
  br i1 %986, label %988, label %987

987:                                              ; preds = %983
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.40, i64 0, i64 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i32 1035) #17
  call void @abort() #18
  unreachable

988:                                              ; preds = %54, %979, %976, %973, %983, %1059
  %989 = phi i32 [ %1006, %1059 ], [ 0, %983 ], [ 0, %979 ], [ 0, %976 ], [ 0, %973 ], [ -12, %54 ]
  %990 = load i32, i32* %44, align 8
  %991 = and i32 %990, 1
  %992 = icmp eq i32 %991, 0
  br i1 %992, label %993, label %999

993:                                              ; preds = %988
  %994 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %34, i64 0, i32 19
  %995 = load i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)** %994, align 8
  %996 = icmp eq i32 (%struct.AVCodecContext*)* %995, null
  br i1 %996, label %999, label %997

997:                                              ; preds = %993
  %998 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull @codec_mutex) #17
  br label %999

999:                                              ; preds = %988, %993, %997
  br i1 %39, label %1000, label %1086

1000:                                             ; preds = %999
  call void @av_dict_free(%struct.AVDictionary** nonnull %2) #17
  %1001 = bitcast %struct.AVDictionary** %4 to i64*
  %1002 = load i64, i64* %1001, align 8
  %1003 = bitcast %struct.AVDictionary** %2 to i64*
  store i64 %1002, i64* %1003, align 8
  br label %1086

1004:                                             ; preds = %814, %805, %548, %648, %718, %790, %757, %726, %705, %683, %677, %613, %560, %924, %921, %859, %475, %469, %127, %78, %100, %104, %108, %112, %58, %72, %516, %502, %246, %146, %141, %950, %935, %420, %372, %367, %362, %343, %159
  %1005 = phi i32 [ 0, %141 ], [ 0, %146 ], [ 0, %159 ], [ 0, %343 ], [ 0, %367 ], [ 0, %372 ], [ 0, %420 ], [ 0, %502 ], [ %866, %935 ], [ %866, %950 ], [ 0, %516 ], [ 0, %362 ], [ 0, %246 ], [ 0, %72 ], [ 0, %58 ], [ 0, %112 ], [ 0, %108 ], [ 0, %104 ], [ 0, %100 ], [ 0, %78 ], [ 0, %127 ], [ 0, %469 ], [ 0, %475 ], [ -1, %859 ], [ %866, %921 ], [ %866, %924 ], [ 0, %560 ], [ 0, %613 ], [ 0, %677 ], [ 0, %683 ], [ 0, %705 ], [ 0, %726 ], [ 0, %757 ], [ 0, %790 ], [ 0, %718 ], [ 0, %648 ], [ 0, %548 ], [ 0, %805 ], [ 0, %814 ]
  %1006 = phi i32 [ %143, %141 ], [ %148, %146 ], [ -22, %159 ], [ -22, %343 ], [ -22, %367 ], [ -22, %372 ], [ -22, %420 ], [ %503, %502 ], [ -22, %935 ], [ -38, %950 ], [ %517, %516 ], [ -22, %362 ], [ %249, %246 ], [ -12, %72 ], [ -12, %58 ], [ -12, %112 ], [ -12, %108 ], [ -12, %104 ], [ -12, %100 ], [ -12, %78 ], [ -12, %127 ], [ -733130664, %469 ], [ -733130664, %475 ], [ %860, %859 ], [ -22, %921 ], [ -22, %924 ], [ -22, %560 ], [ -22, %613 ], [ -22, %677 ], [ -22, %683 ], [ -22, %705 ], [ -22, %726 ], [ -22, %757 ], [ %520, %790 ], [ -22, %718 ], [ -22, %648 ], [ -12, %548 ], [ -22, %805 ], [ -22, %814 ]
  %1007 = load %struct.AVCodec*, %struct.AVCodec** %18, align 8
  %1008 = icmp eq %struct.AVCodec* %1007, null
  br i1 %1008, label %1024, label %1009

1009:                                             ; preds = %1004
  %1010 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %1007, i64 0, i32 23
  %1011 = load i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)** %1010, align 8
  %1012 = icmp eq i32 (%struct.AVCodecContext*)* %1011, null
  br i1 %1012, label %1024, label %1013

1013:                                             ; preds = %1009
  %1014 = icmp sgt i32 %1005, 0
  br i1 %1014, label %1022, label %1015

1015:                                             ; preds = %1013
  %1016 = icmp slt i32 %1005, 0
  br i1 %1016, label %1017, label %1024

1017:                                             ; preds = %1015
  %1018 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %1007, i64 0, i32 27
  %1019 = load i32, i32* %1018, align 8
  %1020 = and i32 %1019, 2
  %1021 = icmp eq i32 %1020, 0
  br i1 %1021, label %1024, label %1022

1022:                                             ; preds = %1017, %1013
  %1023 = call i32 %1011(%struct.AVCodecContext* %0) #17
  br label %1024

1024:                                             ; preds = %1017, %1009, %1004, %1022, %1015
  %1025 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %5, align 8
  %1026 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %1025, i64 0, i32 4
  %1027 = load i8*, i8** %1026, align 8
  %1028 = icmp eq i8* %1027, null
  br i1 %1028, label %1030, label %1029

1029:                                             ; preds = %1024
  call void @ff_thread_free(%struct.AVCodecContext* %0) #17
  br label %1030

1030:                                             ; preds = %1024, %1029
  %1031 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %34, i64 0, i32 11
  %1032 = load %struct.AVClass*, %struct.AVClass** %1031, align 8
  %1033 = icmp eq %struct.AVClass* %1032, null
  br i1 %1033, label %1039, label %1034

1034:                                             ; preds = %1030
  %1035 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 6
  %1036 = load i8*, i8** %1035, align 8
  %1037 = icmp eq i8* %1036, null
  br i1 %1037, label %1039, label %1038

1038:                                             ; preds = %1034
  call void @av_opt_free(i8* nonnull %1036) #17
  br label %1039

1039:                                             ; preds = %1034, %1030, %1038
  %1040 = bitcast %struct.AVCodecContext* %0 to i8*
  call void @av_opt_free(i8* %1040) #17
  %1041 = load %struct.AVCodec*, %struct.AVCodec** %18, align 8
  %1042 = icmp eq %struct.AVCodec* %1041, null
  br i1 %1042, label %1059, label %1043

1043:                                             ; preds = %1039
  %1044 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %1041, i64 0, i32 20
  %1045 = load i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)** %1044, align 8
  %1046 = icmp eq i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)* %1045, null
  br i1 %1046, label %1047, label %1055

1047:                                             ; preds = %1043
  %1048 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %1041, i64 0, i32 21
  %1049 = load i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)** %1048, align 8
  %1050 = icmp eq i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)* %1049, null
  br i1 %1050, label %1051, label %1055

1051:                                             ; preds = %1047
  %1052 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %1041, i64 0, i32 24
  %1053 = load i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)** %1052, align 8
  %1054 = icmp eq i32 (%struct.AVCodecContext*, %struct.AVPacket*)* %1053, null
  br i1 %1054, label %1059, label %1055

1055:                                             ; preds = %1043, %1047, %1051
  %1056 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 145
  call void @av_frame_free(%struct.AVFrame** %1056) #17
  %1057 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 15
  %1058 = bitcast i8** %1057 to i8*
  call void @av_freep(i8* %1058) #17
  store i32 0, i32* %35, align 8
  br label %1059

1059:                                             ; preds = %1039, %1051, %1055
  call void @av_dict_free(%struct.AVDictionary** nonnull %4) #17
  %1060 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 6
  %1061 = bitcast i8** %1060 to i8*
  call void @av_freep(i8* %1061) #17
  %1062 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 158
  %1063 = bitcast i8** %1062 to i8*
  call void @av_freep(i8* %1063) #17
  %1064 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %5, align 8
  %1065 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %1064, i64 0, i32 2
  call void @av_frame_free(%struct.AVFrame** %1065) #17
  %1066 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %5, align 8
  %1067 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %1066, i64 0, i32 22
  call void @av_frame_free(%struct.AVFrame** %1067) #17
  %1068 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %5, align 8
  %1069 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %1068, i64 0, i32 23
  call void @av_packet_free(%struct.AVPacket** %1069) #17
  %1070 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %5, align 8
  %1071 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %1070, i64 0, i32 17
  call void @av_frame_free(%struct.AVFrame** %1071) #17
  %1072 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %5, align 8
  %1073 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %1072, i64 0, i32 16
  call void @av_packet_free(%struct.AVPacket** %1073) #17
  %1074 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %5, align 8
  %1075 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %1074, i64 0, i32 7
  call void @av_packet_free(%struct.AVPacket** %1075) #17
  %1076 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %5, align 8
  %1077 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %1076, i64 0, i32 8
  call void @av_fifo_freep(%struct.AVFifoBuffer** %1077) #17
  %1078 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %5, align 8
  %1079 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %1078, i64 0, i32 5, i32 0
  call void @av_packet_free(%struct.AVPacket** %1079) #17
  %1080 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %5, align 8
  %1081 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %1080, i64 0, i32 12, i32 0
  call void @av_frame_free(%struct.AVFrame** %1081) #17
  %1082 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %5, align 8
  %1083 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %1082, i64 0, i32 6
  call void @av_bsf_free(%struct.AVBSFContext** %1083) #17
  %1084 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %5, align 8
  %1085 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %1084, i64 0, i32 3
  call void @av_buffer_unref(%struct.AVBufferRef** %1085) #17
  call void @av_freep(i8* nonnull %12) #17
  store %struct.AVCodecInternal* null, %struct.AVCodecInternal** %13, align 8
  store %struct.AVCodec* null, %struct.AVCodec** %18, align 8
  br label %988

1086:                                             ; preds = %999, %1000, %33, %3, %27, %22
  %1087 = phi i32 [ -22, %27 ], [ -22, %22 ], [ 0, %3 ], [ -22, %33 ], [ %989, %1000 ], [ %989, %999 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #17
  ret i32 %1087
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @avcodec_is_open(%struct.AVCodecContext* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 7
  %3 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %2, align 8
  %4 = icmp ne %struct.AVCodecInternal* %3, null
  %5 = zext i1 %4 to i32
  ret i32 %5
}

declare i32 @av_dict_copy(%struct.AVDictionary**, %struct.AVDictionary*, i32) local_unnamed_addr #2

declare noalias i8* @av_mallocz(i64) local_unnamed_addr #2

declare %struct.AVFrame* @av_frame_alloc() local_unnamed_addr #2

declare %struct.AVPacket* @av_packet_alloc() local_unnamed_addr #2

declare %struct.AVFifoBuffer* @av_fifo_alloc(i32) local_unnamed_addr #2

declare void @av_opt_set_defaults(i8*) local_unnamed_addr #2

declare i32 @av_opt_set_dict(i8*, %struct.AVDictionary**) local_unnamed_addr #2

declare i32 @av_match_list(i8*, i8*, i8 signext) local_unnamed_addr #2

declare i32 @avcodec_default_get_buffer2(%struct.AVCodecContext*, %struct.AVFrame*, i32) #2

declare %struct.AVCodecDescriptor* @avcodec_descriptor_get(i32) local_unnamed_addr #2

declare %struct.AVCodec* @avcodec_find_encoder(i32) local_unnamed_addr #2

declare %struct.AVCodec* @avcodec_find_decoder(i32) local_unnamed_addr #2

declare i32 @ff_decode_bsfs_init(%struct.AVCodecContext*) local_unnamed_addr #2

declare i32 @ff_thread_init(%struct.AVCodecContext*) local_unnamed_addr #2

declare i32 @av_get_planar_sample_fmt(i32) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @snprintf(i8* nocapture, i64, i8* nocapture readonly, ...) local_unnamed_addr #8

declare i8* @av_get_sample_fmt_name(i32) local_unnamed_addr #2

declare i8* @av_get_pix_fmt_name(i32) local_unnamed_addr #2

declare void @av_get_channel_layout_string(i8*, i32, i32, i64) local_unnamed_addr #2

declare i32 @av_get_channel_layout_nb_channels(i64) local_unnamed_addr #2

; Function Attrs: nounwind readnone
declare i64 @av_mul_q(i64, i64) local_unnamed_addr #9

declare void @av_dict_free(%struct.AVDictionary**) local_unnamed_addr #2

declare void @ff_thread_free(%struct.AVCodecContext*) local_unnamed_addr #2

declare void @av_opt_free(i8*) local_unnamed_addr #2

declare void @av_frame_free(%struct.AVFrame**) local_unnamed_addr #2

declare void @av_packet_free(%struct.AVPacket**) local_unnamed_addr #2

declare void @av_fifo_freep(%struct.AVFifoBuffer**) local_unnamed_addr #2

declare void @av_bsf_free(%struct.AVBSFContext**) local_unnamed_addr #2

declare void @av_buffer_unref(%struct.AVBufferRef**) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @avcodec_flush_buffers(%struct.AVCodecContext*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 7
  %3 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %2, align 8
  %4 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 3
  %5 = load %struct.AVCodec*, %struct.AVCodec** %4, align 8
  %6 = icmp eq %struct.AVCodec* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %5, i64 0, i32 20
  %9 = load i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)** %8, align 8
  %10 = icmp eq i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)* %9, null
  br i1 %10, label %11, label %19

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %5, i64 0, i32 21
  %13 = load i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)** %12, align 8
  %14 = icmp eq i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)* %13, null
  br i1 %14, label %15, label %19

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %5, i64 0, i32 24
  %17 = load i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)** %16, align 8
  %18 = icmp eq i32 (%struct.AVCodecContext*, %struct.AVPacket*)* %17, null
  br i1 %18, label %30, label %19

19:                                               ; preds = %7, %11, %15
  %20 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %5, i64 0, i32 4
  %21 = load i32, i32* %20, align 8
  %22 = and i32 %21, 2097152
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %19
  %25 = bitcast %struct.AVCodecContext* %0 to i8*
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %25, i32 24, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.41, i64 0, i64 0)) #17
  br label %102

26:                                               ; preds = %19
  %27 = and i32 %21, 4096
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %30, label %29

29:                                               ; preds = %26
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.42, i64 0, i64 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i32 1110) #17
  tail call void @abort() #18
  unreachable

30:                                               ; preds = %1, %26, %15
  %31 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %3, i64 0, i32 15
  store i32 0, i32* %31, align 8
  %32 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %3, i64 0, i32 18
  store i32 0, i32* %32, align 8
  %33 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %3, i64 0, i32 26
  store i32 0, i32* %33, align 8
  %34 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %3, i64 0, i32 17
  %35 = load %struct.AVFrame*, %struct.AVFrame** %34, align 8
  tail call void @av_frame_unref(%struct.AVFrame* %35) #17
  %36 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %3, i64 0, i32 22
  %37 = load %struct.AVFrame*, %struct.AVFrame** %36, align 8
  tail call void @av_frame_unref(%struct.AVFrame* %37) #17
  %38 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %3, i64 0, i32 23
  %39 = load %struct.AVPacket*, %struct.AVPacket** %38, align 8
  tail call void @av_packet_unref(%struct.AVPacket* %39) #17
  %40 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %3, i64 0, i32 16
  %41 = load %struct.AVPacket*, %struct.AVPacket** %40, align 8
  tail call void @av_packet_unref(%struct.AVPacket* %41) #17
  %42 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %3, i64 0, i32 7
  %43 = load %struct.AVPacket*, %struct.AVPacket** %42, align 8
  tail call void @av_packet_unref(%struct.AVPacket* %43) #17
  %44 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %3, i64 0, i32 8
  %45 = load %struct.AVFifoBuffer*, %struct.AVFifoBuffer** %44, align 8
  %46 = tail call i32 @av_fifo_size(%struct.AVFifoBuffer* %45) #17
  %47 = icmp ugt i32 %46, 87
  %48 = load %struct.AVFifoBuffer*, %struct.AVFifoBuffer** %44, align 8
  br i1 %47, label %49, label %60

49:                                               ; preds = %30
  %50 = bitcast %struct.AVPacket** %42 to i8**
  br label %51

51:                                               ; preds = %49, %51
  %52 = phi %struct.AVFifoBuffer* [ %48, %49 ], [ %59, %51 ]
  %53 = load i8*, i8** %50, align 8
  %54 = tail call i32 @av_fifo_generic_read(%struct.AVFifoBuffer* %52, i8* %53, i32 88, void (i8*, i8*, i32)* null) #17
  %55 = load %struct.AVPacket*, %struct.AVPacket** %42, align 8
  tail call void @av_packet_unref(%struct.AVPacket* %55) #17
  %56 = load %struct.AVFifoBuffer*, %struct.AVFifoBuffer** %44, align 8
  %57 = tail call i32 @av_fifo_size(%struct.AVFifoBuffer* %56) #17
  %58 = icmp ugt i32 %57, 87
  %59 = load %struct.AVFifoBuffer*, %struct.AVFifoBuffer** %44, align 8
  br i1 %58, label %51, label %60

60:                                               ; preds = %51, %30
  %61 = phi %struct.AVFifoBuffer* [ %48, %30 ], [ %59, %51 ]
  tail call void @av_fifo_reset(%struct.AVFifoBuffer* %61) #17
  %62 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %3, i64 0, i32 12, i32 0
  %63 = load %struct.AVFrame*, %struct.AVFrame** %62, align 8
  tail call void @av_frame_unref(%struct.AVFrame* %63) #17
  %64 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %3, i64 0, i32 5, i32 0
  %65 = load %struct.AVPacket*, %struct.AVPacket** %64, align 8
  tail call void @av_packet_unref(%struct.AVPacket* %65) #17
  %66 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 148
  %67 = load i32, i32* %66, align 8
  %68 = and i32 %67, 1
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %71, label %70

70:                                               ; preds = %60
  tail call void @ff_thread_flush(%struct.AVCodecContext* %0) #17
  br label %77

71:                                               ; preds = %60
  %72 = load %struct.AVCodec*, %struct.AVCodec** %4, align 8
  %73 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %72, i64 0, i32 26
  %74 = load void (%struct.AVCodecContext*)*, void (%struct.AVCodecContext*)** %73, align 8
  %75 = icmp eq void (%struct.AVCodecContext*)* %74, null
  br i1 %75, label %79, label %76

76:                                               ; preds = %71
  tail call void %74(%struct.AVCodecContext* %0) #17
  br label %77

77:                                               ; preds = %70, %76
  %78 = load %struct.AVCodec*, %struct.AVCodec** %4, align 8
  br label %79

79:                                               ; preds = %77, %71
  %80 = phi %struct.AVCodec* [ %78, %77 ], [ %72, %71 ]
  %81 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 169
  %82 = bitcast i64* %81 to <2 x i64>*
  store <2 x i64> <i64 -9223372036854775808, i64 -9223372036854775808>, <2 x i64>* %82, align 8
  %83 = icmp eq %struct.AVCodec* %80, null
  br i1 %83, label %95, label %84

84:                                               ; preds = %79
  %85 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %80, i64 0, i32 22
  %86 = load i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)** %85, align 8
  %87 = icmp eq i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)* %86, null
  br i1 %87, label %88, label %92

88:                                               ; preds = %84
  %89 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %80, i64 0, i32 25
  %90 = load i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)** %89, align 8
  %91 = icmp eq i32 (%struct.AVCodecContext*, %struct.AVFrame*)* %90, null
  br i1 %91, label %95, label %92

92:                                               ; preds = %84, %88
  %93 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %3, i64 0, i32 6
  %94 = load %struct.AVBSFContext*, %struct.AVBSFContext** %93, align 8
  tail call void @av_bsf_flush(%struct.AVBSFContext* %94) #17
  br label %95

95:                                               ; preds = %79, %88, %92
  %96 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 94
  %97 = load i32, i32* %96, align 8
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %102

99:                                               ; preds = %95
  %100 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %3, i64 0, i32 2
  %101 = load %struct.AVFrame*, %struct.AVFrame** %100, align 8
  tail call void @av_frame_unref(%struct.AVFrame* %101) #17
  br label %102

102:                                              ; preds = %99, %95, %24
  ret void
}

declare void @av_frame_unref(%struct.AVFrame*) local_unnamed_addr #2

declare void @av_packet_unref(%struct.AVPacket*) local_unnamed_addr #2

declare i32 @av_fifo_size(%struct.AVFifoBuffer*) local_unnamed_addr #2

declare i32 @av_fifo_generic_read(%struct.AVFifoBuffer*, i8*, i32, void (i8*, i8*, i32)*) local_unnamed_addr #2

declare void @av_fifo_reset(%struct.AVFifoBuffer*) local_unnamed_addr #2

declare void @ff_thread_flush(%struct.AVCodecContext*) local_unnamed_addr #2

declare void @av_bsf_flush(%struct.AVBSFContext*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @avsubtitle_free(%struct.AVSubtitle*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.AVSubtitle, %struct.AVSubtitle* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  %5 = getelementptr inbounds %struct.AVSubtitle, %struct.AVSubtitle* %0, i64 0, i32 4
  br i1 %4, label %45, label %6

6:                                                ; preds = %1, %6
  %7 = phi i64 [ %41, %6 ], [ 0, %1 ]
  %8 = load %struct.AVSubtitleRect**, %struct.AVSubtitleRect*** %5, align 8
  %9 = getelementptr inbounds %struct.AVSubtitleRect*, %struct.AVSubtitleRect** %8, i64 %7
  %10 = load %struct.AVSubtitleRect*, %struct.AVSubtitleRect** %9, align 8
  %11 = getelementptr inbounds %struct.AVSubtitleRect, %struct.AVSubtitleRect* %10, i64 0, i32 6, i64 0
  %12 = bitcast i8** %11 to i8*
  tail call void @av_freep(i8* %12) #17
  %13 = load %struct.AVSubtitleRect**, %struct.AVSubtitleRect*** %5, align 8
  %14 = getelementptr inbounds %struct.AVSubtitleRect*, %struct.AVSubtitleRect** %13, i64 %7
  %15 = load %struct.AVSubtitleRect*, %struct.AVSubtitleRect** %14, align 8
  %16 = getelementptr inbounds %struct.AVSubtitleRect, %struct.AVSubtitleRect* %15, i64 0, i32 6, i64 1
  %17 = bitcast i8** %16 to i8*
  tail call void @av_freep(i8* %17) #17
  %18 = load %struct.AVSubtitleRect**, %struct.AVSubtitleRect*** %5, align 8
  %19 = getelementptr inbounds %struct.AVSubtitleRect*, %struct.AVSubtitleRect** %18, i64 %7
  %20 = load %struct.AVSubtitleRect*, %struct.AVSubtitleRect** %19, align 8
  %21 = getelementptr inbounds %struct.AVSubtitleRect, %struct.AVSubtitleRect* %20, i64 0, i32 6, i64 2
  %22 = bitcast i8** %21 to i8*
  tail call void @av_freep(i8* %22) #17
  %23 = load %struct.AVSubtitleRect**, %struct.AVSubtitleRect*** %5, align 8
  %24 = getelementptr inbounds %struct.AVSubtitleRect*, %struct.AVSubtitleRect** %23, i64 %7
  %25 = load %struct.AVSubtitleRect*, %struct.AVSubtitleRect** %24, align 8
  %26 = getelementptr inbounds %struct.AVSubtitleRect, %struct.AVSubtitleRect* %25, i64 0, i32 6, i64 3
  %27 = bitcast i8** %26 to i8*
  tail call void @av_freep(i8* %27) #17
  %28 = load %struct.AVSubtitleRect**, %struct.AVSubtitleRect*** %5, align 8
  %29 = getelementptr inbounds %struct.AVSubtitleRect*, %struct.AVSubtitleRect** %28, i64 %7
  %30 = load %struct.AVSubtitleRect*, %struct.AVSubtitleRect** %29, align 8
  %31 = getelementptr inbounds %struct.AVSubtitleRect, %struct.AVSubtitleRect* %30, i64 0, i32 9
  %32 = bitcast i8** %31 to i8*
  tail call void @av_freep(i8* %32) #17
  %33 = load %struct.AVSubtitleRect**, %struct.AVSubtitleRect*** %5, align 8
  %34 = getelementptr inbounds %struct.AVSubtitleRect*, %struct.AVSubtitleRect** %33, i64 %7
  %35 = load %struct.AVSubtitleRect*, %struct.AVSubtitleRect** %34, align 8
  %36 = getelementptr inbounds %struct.AVSubtitleRect, %struct.AVSubtitleRect* %35, i64 0, i32 10
  %37 = bitcast i8** %36 to i8*
  tail call void @av_freep(i8* %37) #17
  %38 = load %struct.AVSubtitleRect**, %struct.AVSubtitleRect*** %5, align 8
  %39 = getelementptr inbounds %struct.AVSubtitleRect*, %struct.AVSubtitleRect** %38, i64 %7
  %40 = bitcast %struct.AVSubtitleRect** %39 to i8*
  tail call void @av_freep(i8* %40) #17
  %41 = add nuw nsw i64 %7, 1
  %42 = load i32, i32* %2, align 4
  %43 = zext i32 %42 to i64
  %44 = icmp ult i64 %41, %43
  br i1 %44, label %6, label %45

45:                                               ; preds = %6, %1
  %46 = bitcast %struct.AVSubtitleRect*** %5 to i8*
  tail call void @av_freep(i8* %46) #17
  %47 = bitcast %struct.AVSubtitle* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 32, i1 false)
  ret void
}

; Function Attrs: cold nounwind optsize ssp uwtable
define hidden i32 @avcodec_close(%struct.AVCodecContext*) local_unnamed_addr #10 {
  %2 = icmp eq %struct.AVCodecContext* %0, null
  br i1 %2, label %145, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 7
  %5 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %4, align 8
  %6 = icmp eq %struct.AVCodecInternal* %5, null
  br i1 %6, label %91, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %5, i64 0, i32 4
  %9 = load i8*, i8** %8, align 8
  %10 = icmp eq i8* %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %7
  tail call void @ff_thread_free(%struct.AVCodecContext* nonnull %0) #17
  br label %12

12:                                               ; preds = %7, %11
  %13 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 3
  %14 = load %struct.AVCodec*, %struct.AVCodec** %13, align 8
  %15 = icmp eq %struct.AVCodec* %14, null
  br i1 %15, label %22, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %14, i64 0, i32 23
  %18 = load i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)** %17, align 8
  %19 = icmp eq i32 (%struct.AVCodecContext*)* %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %16
  %21 = tail call i32 %18(%struct.AVCodecContext* nonnull %0) #17
  br label %22

22:                                               ; preds = %16, %12, %20
  %23 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %4, align 8
  %24 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %23, i64 0, i32 10
  store i32 0, i32* %24, align 8
  %25 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %4, align 8
  %26 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %25, i64 0, i32 9
  %27 = bitcast i8** %26 to i8*
  tail call void @av_freep(i8* %27) #17
  %28 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %4, align 8
  %29 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %28, i64 0, i32 2
  tail call void @av_frame_free(%struct.AVFrame** %29) #17
  %30 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %4, align 8
  %31 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %30, i64 0, i32 22
  tail call void @av_frame_free(%struct.AVFrame** %31) #17
  %32 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %4, align 8
  %33 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %32, i64 0, i32 23
  tail call void @av_packet_free(%struct.AVPacket** %33) #17
  %34 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %4, align 8
  %35 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %34, i64 0, i32 17
  tail call void @av_frame_free(%struct.AVFrame** %35) #17
  %36 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %4, align 8
  %37 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %36, i64 0, i32 16
  tail call void @av_packet_free(%struct.AVPacket** %37) #17
  %38 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %4, align 8
  %39 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %38, i64 0, i32 7
  %40 = load %struct.AVPacket*, %struct.AVPacket** %39, align 8
  tail call void @av_packet_unref(%struct.AVPacket* %40) #17
  %41 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %4, align 8
  %42 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %41, i64 0, i32 8
  %43 = load %struct.AVFifoBuffer*, %struct.AVFifoBuffer** %42, align 8
  %44 = tail call i32 @av_fifo_size(%struct.AVFifoBuffer* %43) #17
  %45 = icmp ugt i32 %44, 87
  %46 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %4, align 8
  br i1 %45, label %47, label %64

47:                                               ; preds = %22, %47
  %48 = phi %struct.AVCodecInternal* [ %63, %47 ], [ %46, %22 ]
  %49 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %48, i64 0, i32 8
  %50 = load %struct.AVFifoBuffer*, %struct.AVFifoBuffer** %49, align 8
  %51 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %48, i64 0, i32 7
  %52 = bitcast %struct.AVPacket** %51 to i8**
  %53 = load i8*, i8** %52, align 8
  %54 = tail call i32 @av_fifo_generic_read(%struct.AVFifoBuffer* %50, i8* %53, i32 88, void (i8*, i8*, i32)* null) #17
  %55 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %4, align 8
  %56 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %55, i64 0, i32 7
  %57 = load %struct.AVPacket*, %struct.AVPacket** %56, align 8
  tail call void @av_packet_unref(%struct.AVPacket* %57) #17
  %58 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %4, align 8
  %59 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %58, i64 0, i32 8
  %60 = load %struct.AVFifoBuffer*, %struct.AVFifoBuffer** %59, align 8
  %61 = tail call i32 @av_fifo_size(%struct.AVFifoBuffer* %60) #17
  %62 = icmp ugt i32 %61, 87
  %63 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %4, align 8
  br i1 %62, label %47, label %64

64:                                               ; preds = %47, %22
  %65 = phi %struct.AVCodecInternal* [ %46, %22 ], [ %63, %47 ]
  %66 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %65, i64 0, i32 7
  tail call void @av_packet_free(%struct.AVPacket** %66) #17
  %67 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %4, align 8
  %68 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %67, i64 0, i32 8
  tail call void @av_fifo_freep(%struct.AVFifoBuffer** %68) #17
  %69 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %4, align 8
  %70 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %69, i64 0, i32 5, i32 0
  tail call void @av_packet_free(%struct.AVPacket** %70) #17
  %71 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %4, align 8
  %72 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %71, i64 0, i32 12, i32 0
  tail call void @av_frame_free(%struct.AVFrame** %72) #17
  %73 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %4, align 8
  %74 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %73, i64 0, i32 3
  tail call void @av_buffer_unref(%struct.AVBufferRef** %74) #17
  %75 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 137
  %76 = load %struct.AVHWAccel*, %struct.AVHWAccel** %75, align 8
  %77 = icmp eq %struct.AVHWAccel* %76, null
  br i1 %77, label %84, label %78

78:                                               ; preds = %64
  %79 = getelementptr inbounds %struct.AVHWAccel, %struct.AVHWAccel* %76, i64 0, i32 13
  %80 = load i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)** %79, align 8
  %81 = icmp eq i32 (%struct.AVCodecContext*)* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %78
  %83 = tail call i32 %80(%struct.AVCodecContext* nonnull %0) #17
  br label %84

84:                                               ; preds = %78, %64, %82
  %85 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %4, align 8
  %86 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %85, i64 0, i32 14
  %87 = bitcast i8** %86 to i8*
  tail call void @av_freep(i8* %87) #17
  %88 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %4, align 8
  %89 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %88, i64 0, i32 6
  tail call void @av_bsf_free(%struct.AVBSFContext** %89) #17
  %90 = bitcast %struct.AVCodecInternal** %4 to i8*
  tail call void @av_freep(i8* %90) #17
  br label %91

91:                                               ; preds = %3, %84
  %92 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 181
  %93 = load i32, i32* %92, align 8
  %94 = icmp sgt i32 %93, 0
  %95 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 180
  br i1 %94, label %96, label %105

96:                                               ; preds = %91, %96
  %97 = phi i64 [ %101, %96 ], [ 0, %91 ]
  %98 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %95, align 8
  %99 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %98, i64 %97, i32 0
  %100 = bitcast i8** %99 to i8*
  tail call void @av_freep(i8* %100) #17
  %101 = add nuw nsw i64 %97, 1
  %102 = load i32, i32* %92, align 8
  %103 = sext i32 %102 to i64
  %104 = icmp slt i64 %101, %103
  br i1 %104, label %96, label %105

105:                                              ; preds = %96, %91
  %106 = bitcast %struct.AVPacketSideData** %95 to i8*
  tail call void @av_freep(i8* %106) #17
  store i32 0, i32* %92, align 8
  %107 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 182
  tail call void @av_buffer_unref(%struct.AVBufferRef** %107) #17
  %108 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 186
  tail call void @av_buffer_unref(%struct.AVBufferRef** %108) #17
  %109 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 6
  %110 = load i8*, i8** %109, align 8
  %111 = icmp eq i8* %110, null
  br i1 %111, label %121, label %112

112:                                              ; preds = %105
  %113 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 3
  %114 = load %struct.AVCodec*, %struct.AVCodec** %113, align 8
  %115 = icmp eq %struct.AVCodec* %114, null
  br i1 %115, label %121, label %116

116:                                              ; preds = %112
  %117 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %114, i64 0, i32 11
  %118 = load %struct.AVClass*, %struct.AVClass** %117, align 8
  %119 = icmp eq %struct.AVClass* %118, null
  br i1 %119, label %121, label %120

120:                                              ; preds = %116
  tail call void @av_opt_free(i8* nonnull %110) #17
  br label %121

121:                                              ; preds = %116, %112, %105, %120
  %122 = bitcast %struct.AVCodecContext* %0 to i8*
  tail call void @av_opt_free(i8* nonnull %122) #17
  %123 = bitcast i8** %109 to i8*
  tail call void @av_freep(i8* %123) #17
  %124 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 3
  %125 = load %struct.AVCodec*, %struct.AVCodec** %124, align 8
  %126 = icmp eq %struct.AVCodec* %125, null
  br i1 %126, label %143, label %127

127:                                              ; preds = %121
  %128 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %125, i64 0, i32 20
  %129 = load i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)** %128, align 8
  %130 = icmp eq i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)* %129, null
  br i1 %130, label %131, label %139

131:                                              ; preds = %127
  %132 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %125, i64 0, i32 21
  %133 = load i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)** %132, align 8
  %134 = icmp eq i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)* %133, null
  br i1 %134, label %135, label %139

135:                                              ; preds = %131
  %136 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %125, i64 0, i32 24
  %137 = load i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)** %136, align 8
  %138 = icmp eq i32 (%struct.AVCodecContext*, %struct.AVPacket*)* %137, null
  br i1 %138, label %143, label %139

139:                                              ; preds = %127, %131, %135
  %140 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 15
  %141 = bitcast i8** %140 to i8*
  tail call void @av_freep(i8* %141) #17
  %142 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 145
  tail call void @av_frame_free(%struct.AVFrame** %142) #17
  br label %143

143:                                              ; preds = %121, %135, %139
  store %struct.AVCodec* null, %struct.AVCodec** %124, align 8
  %144 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 148
  store i32 0, i32* %144, align 8
  br label %145

145:                                              ; preds = %1, %143
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @avcodec_get_name(i32) local_unnamed_addr #0 {
  %2 = icmp eq i32 %0, 0
  br i1 %2, label %21, label %3

3:                                                ; preds = %1
  %4 = tail call %struct.AVCodecDescriptor* @avcodec_descriptor_get(i32 %0) #17
  %5 = icmp eq %struct.AVCodecDescriptor* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.AVCodecDescriptor, %struct.AVCodecDescriptor* %4, i64 0, i32 2
  %8 = load i8*, i8** %7, align 8
  br label %21

9:                                                ; preds = %3
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 24, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.44, i64 0, i64 0), i32 %0) #17
  %10 = tail call %struct.AVCodec* @avcodec_find_decoder(i32 %0) #17
  %11 = icmp eq %struct.AVCodec* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %10, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  br label %21

15:                                               ; preds = %9
  %16 = tail call %struct.AVCodec* @avcodec_find_encoder(i32 %0) #17
  %17 = icmp eq %struct.AVCodec* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %16, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  br label %21

21:                                               ; preds = %15, %1, %18, %12, %6
  %22 = phi i8* [ %8, %6 ], [ %14, %12 ], [ %20, %18 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.43, i64 0, i64 0), %1 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.45, i64 0, i64 0), %15 ]
  ret i8* %22
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden i64 @av_get_codec_tag_string(i8* nocapture, i64, i32) local_unnamed_addr #11 {
  %4 = and i32 %2, 255
  %5 = add nsw i32 %4, -48
  %6 = icmp ult i32 %5, 10
  %7 = and i32 %2, 223
  %8 = add nsw i32 %7, -65
  %9 = icmp ult i32 %8, 26
  %10 = or i1 %9, %6
  br i1 %10, label %13, label %11

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8
  switch i8 %12, label %14 [
    i8 46, label %13
    i8 45, label %13
    i8 32, label %13
    i8 95, label %13
  ]

13:                                               ; preds = %3, %11, %11, %11, %11
  br label %14

14:                                               ; preds = %11, %13
  %15 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.46, i64 0, i64 0), %13 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.47, i64 0, i64 0), %11 ]
  %16 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* %0, i64 %1, i8* nonnull %15, i32 %4) #17
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds i8, i8* %0, i64 %17
  %19 = tail call i64 @llvm.usub.sat.i64(i64 %1, i64 %17)
  %20 = lshr i32 %2, 8
  %21 = and i32 %20, 255
  %22 = add nsw i32 %21, -48
  %23 = icmp ult i32 %22, 10
  %24 = and i32 %20, 223
  %25 = add nsw i32 %24, -65
  %26 = icmp ult i32 %25, 26
  %27 = or i1 %26, %23
  br i1 %27, label %30, label %28

28:                                               ; preds = %14
  %29 = trunc i32 %20 to i8
  switch i8 %29, label %31 [
    i8 46, label %30
    i8 45, label %30
    i8 32, label %30
    i8 95, label %30
  ]

30:                                               ; preds = %28, %28, %28, %28, %14
  br label %31

31:                                               ; preds = %30, %28
  %32 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.46, i64 0, i64 0), %30 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.47, i64 0, i64 0), %28 ]
  %33 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* %18, i64 %19, i8* nonnull %32, i32 %21) #17
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds i8, i8* %18, i64 %34
  %36 = tail call i64 @llvm.usub.sat.i64(i64 %19, i64 %34)
  %37 = add nsw i32 %33, %16
  %38 = lshr i32 %2, 16
  %39 = and i32 %38, 255
  %40 = add nsw i32 %39, -48
  %41 = icmp ult i32 %40, 10
  %42 = and i32 %38, 223
  %43 = add nsw i32 %42, -65
  %44 = icmp ult i32 %43, 26
  %45 = or i1 %44, %41
  br i1 %45, label %48, label %46

46:                                               ; preds = %31
  %47 = trunc i32 %38 to i8
  switch i8 %47, label %49 [
    i8 46, label %48
    i8 45, label %48
    i8 32, label %48
    i8 95, label %48
  ]

48:                                               ; preds = %46, %46, %46, %46, %31
  br label %49

49:                                               ; preds = %48, %46
  %50 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.46, i64 0, i64 0), %48 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.47, i64 0, i64 0), %46 ]
  %51 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* %35, i64 %36, i8* nonnull %50, i32 %39) #17
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds i8, i8* %35, i64 %52
  %54 = tail call i64 @llvm.usub.sat.i64(i64 %36, i64 %52)
  %55 = add nsw i32 %51, %37
  %56 = lshr i32 %2, 24
  %57 = add nsw i32 %56, -48
  %58 = icmp ult i32 %57, 10
  %59 = and i32 %56, 223
  %60 = add nsw i32 %59, -65
  %61 = icmp ult i32 %60, 26
  %62 = or i1 %61, %58
  br i1 %62, label %65, label %63

63:                                               ; preds = %49
  %64 = trunc i32 %56 to i8
  switch i8 %64, label %66 [
    i8 46, label %65
    i8 45, label %65
    i8 32, label %65
    i8 95, label %65
  ]

65:                                               ; preds = %63, %63, %63, %63, %49
  br label %66

66:                                               ; preds = %65, %63
  %67 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.46, i64 0, i64 0), %65 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.47, i64 0, i64 0), %63 ]
  %68 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* %53, i64 %54, i8* nonnull %67, i32 %56) #17
  %69 = add nsw i32 %68, %55
  %70 = sext i32 %69 to i64
  ret i64 %70
}

; Function Attrs: nounwind ssp uwtable
define hidden void @avcodec_string(i8*, i32, %struct.AVCodecContext* readonly, i32) local_unnamed_addr #0 {
  %5 = alloca %struct.AVRational, align 4
  %6 = alloca [32 x i8], align 1
  %7 = alloca [256 x i8], align 16
  %8 = bitcast %struct.AVRational* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #17
  %9 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %5, i64 0, i32 0
  store i32 -1431655766, i32* %9, align 4
  %10 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %5, i64 0, i32 1
  store i32 -1431655766, i32* %10, align 4
  %11 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i64 0, i32 177
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, null
  %14 = select i1 %13, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.48, i64 0, i64 0), i8* %12
  %15 = icmp eq i8* %0, null
  %16 = icmp slt i32 %1, 1
  %17 = or i1 %15, %16
  br i1 %17, label %498, label %18

18:                                               ; preds = %4
  %19 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i64 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = tail call i8* @av_get_media_type_string(i32 %20) #17
  %22 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i64 0, i32 4
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %43, label %25

25:                                               ; preds = %18
  %26 = tail call %struct.AVCodecDescriptor* @avcodec_descriptor_get(i32 %23) #17
  %27 = icmp eq %struct.AVCodecDescriptor* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = getelementptr inbounds %struct.AVCodecDescriptor, %struct.AVCodecDescriptor* %26, i64 0, i32 2
  %30 = load i8*, i8** %29, align 8
  br label %43

31:                                               ; preds = %25
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 24, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.44, i64 0, i64 0), i32 %23) #17
  %32 = tail call %struct.AVCodec* @avcodec_find_decoder(i32 %23) #17
  %33 = icmp eq %struct.AVCodec* %32, null
  br i1 %33, label %37, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %32, i64 0, i32 0
  %36 = load i8*, i8** %35, align 8
  br label %43

37:                                               ; preds = %31
  %38 = tail call %struct.AVCodec* @avcodec_find_encoder(i32 %23) #17
  %39 = icmp eq %struct.AVCodec* %38, null
  br i1 %39, label %43, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %38, i64 0, i32 0
  %42 = load i8*, i8** %41, align 8
  br label %43

43:                                               ; preds = %18, %28, %34, %37, %40
  %44 = phi i8* [ %30, %28 ], [ %36, %34 ], [ %42, %40 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.43, i64 0, i64 0), %18 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.45, i64 0, i64 0), %37 ]
  %45 = load i32, i32* %22, align 8
  %46 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i64 0, i32 153
  %47 = load i32, i32* %46, align 4
  %48 = tail call %struct.AVCodecDescriptor* @avcodec_descriptor_get(i32 %45) #17
  %49 = icmp ne i32 %47, -99
  %50 = icmp ne %struct.AVCodecDescriptor* %48, null
  %51 = and i1 %49, %50
  br i1 %51, label %52, label %72

52:                                               ; preds = %43
  %53 = getelementptr inbounds %struct.AVCodecDescriptor, %struct.AVCodecDescriptor* %48, i64 0, i32 6
  %54 = load %struct.AVProfile*, %struct.AVProfile** %53, align 8
  %55 = icmp eq %struct.AVProfile* %54, null
  br i1 %55, label %72, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %struct.AVProfile, %struct.AVProfile* %54, i64 0, i32 0
  %58 = load i32, i32* %57, align 8
  %59 = icmp eq i32 %58, -99
  br i1 %59, label %72, label %60

60:                                               ; preds = %56, %67
  %61 = phi i32 [ %70, %67 ], [ %58, %56 ]
  %62 = phi %struct.AVProfile* [ %68, %67 ], [ %54, %56 ]
  %63 = icmp eq i32 %61, %47
  br i1 %63, label %64, label %67

64:                                               ; preds = %60
  %65 = getelementptr inbounds %struct.AVProfile, %struct.AVProfile* %62, i64 0, i32 1
  %66 = load i8*, i8** %65, align 8
  br label %72

67:                                               ; preds = %60
  %68 = getelementptr inbounds %struct.AVProfile, %struct.AVProfile* %62, i64 1
  %69 = getelementptr inbounds %struct.AVProfile, %struct.AVProfile* %68, i64 0, i32 0
  %70 = load i32, i32* %69, align 8
  %71 = icmp eq i32 %70, -99
  br i1 %71, label %72, label %60

72:                                               ; preds = %67, %43, %52, %56, %64
  %73 = phi i8* [ %66, %64 ], [ null, %52 ], [ null, %43 ], [ null, %56 ], [ null, %67 ]
  %74 = sext i32 %1 to i64
  %75 = icmp eq i8* %21, null
  %76 = select i1 %75, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.50, i64 0, i64 0), i8* %21
  %77 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* %0, i64 %74, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.49, i64 0, i64 0), i8* %76, i8* %44) #17
  %78 = load i8, i8* %0, align 1
  %79 = xor i8 %78, 32
  store i8 %79, i8* %0, align 1
  %80 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i64 0, i32 3
  %81 = load %struct.AVCodec*, %struct.AVCodec** %80, align 8
  %82 = icmp eq %struct.AVCodec* %81, null
  br i1 %82, label %93, label %83

83:                                               ; preds = %72
  %84 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %81, i64 0, i32 0
  %85 = load i8*, i8** %84, align 8
  %86 = tail call i32 @strcmp(i8* %85, i8* %44) #19
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %93, label %88

88:                                               ; preds = %83
  %89 = tail call i64 @strlen(i8* %0) #19
  %90 = getelementptr inbounds i8, i8* %0, i64 %89
  %91 = sub i64 %74, %89
  %92 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* %90, i64 %91, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.51, i64 0, i64 0), i8* %85) #17
  br label %93

93:                                               ; preds = %83, %72, %88
  %94 = icmp eq i8* %73, null
  br i1 %94, label %100, label %95

95:                                               ; preds = %93
  %96 = tail call i64 @strlen(i8* %0) #19
  %97 = getelementptr inbounds i8, i8* %0, i64 %96
  %98 = sub i64 %74, %96
  %99 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* %97, i64 %98, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.51, i64 0, i64 0), i8* nonnull %73) #17
  br label %100

100:                                              ; preds = %93, %95
  %101 = load i32, i32* %19, align 4
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %117

103:                                              ; preds = %100
  %104 = tail call i32 @av_log_get_level() #17
  %105 = icmp sgt i32 %104, 39
  br i1 %105, label %106, label %117

106:                                              ; preds = %103
  %107 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i64 0, i32 71
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %117, label %110

110:                                              ; preds = %106
  %111 = tail call i64 @strlen(i8* %0) #19
  %112 = getelementptr inbounds i8, i8* %0, i64 %111
  %113 = sub i64 %74, %111
  %114 = icmp sgt i32 %108, 1
  %115 = select i1 %114, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.53, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.54, i64 0, i64 0)
  %116 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* %112, i64 %113, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.52, i64 0, i64 0), i32 %108, i8* %115) #17
  br label %117

117:                                              ; preds = %106, %110, %103, %100
  %118 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i64 0, i32 5
  %119 = load i32, i32* %118, align 4
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %129, label %121

121:                                              ; preds = %117
  %122 = tail call i64 @strlen(i8* %0) #19
  %123 = getelementptr inbounds i8, i8* %0, i64 %122
  %124 = sub i64 %74, %122
  %125 = getelementptr inbounds [32 x i8], [32 x i8]* %6, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %125, i8 0, i64 32, i1 false)
  %126 = call i8* @av_fourcc_make_string(i8* nonnull %125, i32 %119) #17
  %127 = load i32, i32* %118, align 4
  %128 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %123, i64 %124, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.55, i64 0, i64 0), i8* %126, i32 %127) #17
  br label %129

129:                                              ; preds = %117, %121
  %130 = load i32, i32* %19, align 4
  switch i32 %130, label %498 [
    i32 0, label %131
    i32 1, label %337
    i32 2, label %401
    i32 3, label %421
  ]

131:                                              ; preds = %129
  %132 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %132) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %132, i8 0, i64 256, i1 false)
  store i8 40, i8* %132, align 16
  %133 = call i64 @av_strlcat(i8* %0, i8* %14, i64 %74) #17
  %134 = call i64 @strlen(i8* %0) #19
  %135 = getelementptr inbounds i8, i8* %0, i64 %134
  %136 = sub i64 %74, %134
  %137 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i64 0, i32 25
  %138 = load i32, i32* %137, align 8
  %139 = icmp eq i32 %138, -1
  br i1 %139, label %142, label %140

140:                                              ; preds = %131
  %141 = call i8* @av_get_pix_fmt_name(i32 %138) #17
  br label %142

142:                                              ; preds = %131, %140
  %143 = phi i8* [ %141, %140 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.43, i64 0, i64 0), %131 ]
  %144 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %135, i64 %136, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.56, i64 0, i64 0), i8* %143) #17
  %145 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i64 0, i32 143
  %146 = load i32, i32* %145, align 4
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %159, label %148

148:                                              ; preds = %142
  %149 = load i32, i32* %137, align 8
  %150 = icmp eq i32 %149, -1
  br i1 %150, label %159, label %151

151:                                              ; preds = %148
  %152 = call %struct.AVPixFmtDescriptor* @av_pix_fmt_desc_get(i32 %149) #17
  %153 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %152, i64 0, i32 5, i64 0, i32 4
  %154 = load i32, i32* %153, align 8
  %155 = icmp slt i32 %146, %154
  br i1 %155, label %156, label %159

156:                                              ; preds = %151
  %157 = load i32, i32* %145, align 4
  %158 = call i64 (i8*, i64, i8*, ...) @av_strlcatf(i8* nonnull %132, i64 256, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.57, i64 0, i64 0), i32 %157) #17
  br label %159

159:                                              ; preds = %148, %142, %156, %151
  %160 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i64 0, i32 78
  %161 = load i32, i32* %160, align 8
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %166, label %163

163:                                              ; preds = %159
  %164 = call i8* @av_color_range_name(i32 %161) #17
  %165 = call i64 (i8*, i64, i8*, ...) @av_strlcatf(i8* nonnull %132, i64 256, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.58, i64 0, i64 0), i8* %164) #17
  br label %166

166:                                              ; preds = %159, %163
  %167 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i64 0, i32 77
  %168 = load i32, i32* %167, align 4
  %169 = icmp eq i32 %168, 2
  %170 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i64 0, i32 75
  %171 = load i32, i32* %170, align 4
  %172 = icmp eq i32 %171, 2
  %173 = and i1 %169, %172
  br i1 %173, label %174, label %180

174:                                              ; preds = %166
  %175 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i64 0, i32 76
  %176 = load i32, i32* %175, align 8
  %177 = icmp eq i32 %176, 2
  br i1 %177, label %200, label %178

178:                                              ; preds = %174
  %179 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i64 0, i32 75
  br label %183

180:                                              ; preds = %166
  %181 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i64 0, i32 75
  %182 = icmp eq i32 %168, %171
  br i1 %182, label %183, label %188

183:                                              ; preds = %178, %180
  %184 = phi i32* [ %179, %178 ], [ %181, %180 ]
  %185 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i64 0, i32 76
  %186 = load i32, i32* %185, align 8
  %187 = icmp eq i32 %168, %186
  br i1 %187, label %197, label %188

188:                                              ; preds = %183, %180
  %189 = phi i32* [ %184, %183 ], [ %181, %180 ]
  %190 = call i8* @av_color_space_name(i32 %168) #17
  %191 = load i32, i32* %189, align 4
  %192 = call i8* @av_color_primaries_name(i32 %191) #17
  %193 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i64 0, i32 76
  %194 = load i32, i32* %193, align 8
  %195 = call i8* @av_color_transfer_name(i32 %194) #17
  %196 = call i64 (i8*, i64, i8*, ...) @av_strlcatf(i8* nonnull %132, i64 256, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.59, i64 0, i64 0), i8* %190, i8* %192, i8* %195) #17
  br label %200

197:                                              ; preds = %183
  %198 = call i8* @av_get_colorspace_name(i32 %168) #17
  %199 = call i64 (i8*, i64, i8*, ...) @av_strlcatf(i8* nonnull %132, i64 256, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.58, i64 0, i64 0), i8* %198) #17
  br label %200

200:                                              ; preds = %174, %188, %197
  %201 = phi i32 [ 1, %188 ], [ 0, %197 ], [ 0, %174 ]
  %202 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i64 0, i32 81
  %203 = load i32, i32* %202, align 4
  switch i32 %203, label %207 [
    i32 0, label %211
    i32 2, label %208
    i32 3, label %204
    i32 4, label %205
    i32 5, label %206
  ]

204:                                              ; preds = %200
  br label %208

205:                                              ; preds = %200
  br label %208

206:                                              ; preds = %200
  br label %208

207:                                              ; preds = %200
  br label %208

208:                                              ; preds = %200, %207, %204, %206, %205
  %209 = phi i8* [ getelementptr inbounds ([13 x i8], [13 x i8]* @.str.62, i64 0, i64 0), %204 ], [ getelementptr inbounds ([26 x i8], [26 x i8]* @.str.63, i64 0, i64 0), %205 ], [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.64, i64 0, i64 0), %206 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.61, i64 0, i64 0), %200 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.60, i64 0, i64 0), %207 ]
  %210 = call i64 (i8*, i64, i8*, ...) @av_strlcatf(i8* nonnull %132, i64 256, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.58, i64 0, i64 0), i8* nonnull %209) #17
  br label %211

211:                                              ; preds = %200, %208
  %212 = call i32 @av_log_get_level() #17
  %213 = icmp sgt i32 %212, 39
  br i1 %213, label %214, label %221

214:                                              ; preds = %211
  %215 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i64 0, i32 79
  %216 = load i32, i32* %215, align 4
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %221, label %218

218:                                              ; preds = %214
  %219 = call i8* @av_chroma_location_name(i32 %216) #17
  %220 = call i64 (i8*, i64, i8*, ...) @av_strlcatf(i8* nonnull %132, i64 256, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.58, i64 0, i64 0), i8* %219) #17
  br label %221

221:                                              ; preds = %214, %218, %211
  %222 = call i64 @strlen(i8* nonnull %132) #19
  %223 = icmp ugt i64 %222, 1
  br i1 %223, label %224, label %228

224:                                              ; preds = %221
  %225 = add i64 %222, -2
  %226 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 %225
  store i8 0, i8* %226, align 1
  %227 = call i64 (i8*, i64, i8*, ...) @av_strlcatf(i8* %0, i64 %74, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.65, i64 0, i64 0), i8* nonnull %132) #17
  br label %228

228:                                              ; preds = %224, %221
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %132) #17
  %229 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i64 0, i32 20
  %230 = load i32, i32* %229, align 4
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %306, label %232

232:                                              ; preds = %228
  %233 = icmp eq i32 %201, 0
  %234 = select i1 %233, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.48, i64 0, i64 0), i8* %14
  %235 = call i64 @av_strlcat(i8* %0, i8* %234, i64 %74) #17
  %236 = call i64 @strlen(i8* %0) #19
  %237 = getelementptr inbounds i8, i8* %0, i64 %236
  %238 = sub i64 %74, %236
  %239 = load i32, i32* %229, align 4
  %240 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i64 0, i32 21
  %241 = load i32, i32* %240, align 8
  %242 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %237, i64 %238, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.66, i64 0, i64 0), i32 %239, i32 %241) #17
  %243 = call i32 @av_log_get_level() #17
  %244 = icmp sgt i32 %243, 39
  br i1 %244, label %245, label %264

245:                                              ; preds = %232
  %246 = load i32, i32* %229, align 4
  %247 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i64 0, i32 22
  %248 = load i32, i32* %247, align 4
  %249 = icmp eq i32 %246, %248
  br i1 %249, label %253, label %250

250:                                              ; preds = %245
  %251 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i64 0, i32 23
  %252 = load i32, i32* %251, align 8
  br label %258

253:                                              ; preds = %245
  %254 = load i32, i32* %240, align 8
  %255 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i64 0, i32 23
  %256 = load i32, i32* %255, align 8
  %257 = icmp eq i32 %254, %256
  br i1 %257, label %264, label %258

258:                                              ; preds = %250, %253
  %259 = phi i32 [ %252, %250 ], [ %256, %253 ]
  %260 = call i64 @strlen(i8* %0) #19
  %261 = getelementptr inbounds i8, i8* %0, i64 %260
  %262 = sub i64 %74, %260
  %263 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %261, i64 %262, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.67, i64 0, i64 0), i32 %248, i32 %259) #17
  br label %264

264:                                              ; preds = %253, %258, %232
  %265 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i64 0, i32 44, i32 0
  %266 = load i32, i32* %265, align 8
  %267 = icmp eq i32 %266, 0
  br i1 %267, label %288, label %268

268:                                              ; preds = %264
  %269 = load i32, i32* %229, align 4
  %270 = sext i32 %269 to i64
  %271 = sext i32 %266 to i64
  %272 = mul nsw i64 %270, %271
  %273 = load i32, i32* %240, align 8
  %274 = sext i32 %273 to i64
  %275 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i64 0, i32 44, i32 1
  %276 = load i32, i32* %275, align 4
  %277 = sext i32 %276 to i64
  %278 = mul nsw i64 %277, %274
  %279 = call i32 @av_reduce(i32* nonnull %9, i32* %10, i64 %272, i64 %278, i64 1048576) #17
  %280 = call i64 @strlen(i8* %0) #19
  %281 = getelementptr inbounds i8, i8* %0, i64 %280
  %282 = sub i64 %74, %280
  %283 = load i32, i32* %265, align 8
  %284 = load i32, i32* %275, align 4
  %285 = load i32, i32* %9, align 4
  %286 = load i32, i32* %10, align 4
  %287 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %281, i64 %282, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.68, i64 0, i64 0), i32 %283, i32 %284, i32 %285, i32 %286) #17
  br label %288

288:                                              ; preds = %264, %268
  %289 = call i32 @av_log_get_level() #17
  %290 = icmp sgt i32 %289, 47
  br i1 %290, label %291, label %306

291:                                              ; preds = %288
  %292 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i64 0, i32 17, i32 0
  %293 = load i32, i32* %292, align 4
  %294 = sext i32 %293 to i64
  %295 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i64 0, i32 17, i32 1
  %296 = load i32, i32* %295, align 4
  %297 = sext i32 %296 to i64
  %298 = call i64 @av_gcd(i64 %294, i64 %297) #4
  %299 = trunc i64 %298 to i32
  %300 = call i64 @strlen(i8* %0) #19
  %301 = getelementptr inbounds i8, i8* %0, i64 %300
  %302 = sub i64 %74, %300
  %303 = sdiv i32 %293, %299
  %304 = sdiv i32 %296, %299
  %305 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %301, i64 %302, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.69, i64 0, i64 0), i32 %303, i32 %304) #17
  br label %306

306:                                              ; preds = %228, %288, %291
  %307 = icmp eq i32 %3, 0
  br i1 %307, label %317, label %308

308:                                              ; preds = %306
  %309 = call i64 @strlen(i8* %0) #19
  %310 = getelementptr inbounds i8, i8* %0, i64 %309
  %311 = sub i64 %74, %309
  %312 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i64 0, i32 97
  %313 = load i32, i32* %312, align 4
  %314 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i64 0, i32 98
  %315 = load i32, i32* %314, align 8
  %316 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %310, i64 %311, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.70, i64 0, i64 0), i32 %313, i32 %315) #17
  br label %434

317:                                              ; preds = %306
  %318 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i64 0, i32 179
  %319 = load i32, i32* %318, align 8
  %320 = and i32 %319, 2
  %321 = icmp eq i32 %320, 0
  br i1 %321, label %328, label %322

322:                                              ; preds = %317
  %323 = call i64 @strlen(i8* %0) #19
  %324 = getelementptr inbounds i8, i8* %0, i64 %323
  %325 = sub i64 %74, %323
  %326 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %324, i64 %325, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.71, i64 0, i64 0)) #17
  %327 = load i32, i32* %318, align 8
  br label %328

328:                                              ; preds = %317, %322
  %329 = phi i32 [ %319, %317 ], [ %327, %322 ]
  %330 = and i32 %329, 1
  %331 = icmp eq i32 %330, 0
  br i1 %331, label %454, label %332

332:                                              ; preds = %328
  %333 = call i64 @strlen(i8* %0) #19
  %334 = getelementptr inbounds i8, i8* %0, i64 %333
  %335 = sub i64 %74, %333
  %336 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %334, i64 %335, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.72, i64 0, i64 0)) #17
  br label %454

337:                                              ; preds = %129
  %338 = call i64 @av_strlcat(i8* %0, i8* %14, i64 %74) #17
  %339 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i64 0, i32 82
  %340 = load i32, i32* %339, align 8
  %341 = icmp eq i32 %340, 0
  br i1 %341, label %347, label %342

342:                                              ; preds = %337
  %343 = call i64 @strlen(i8* %0) #19
  %344 = getelementptr inbounds i8, i8* %0, i64 %343
  %345 = sub i64 %74, %343
  %346 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %344, i64 %345, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.73, i64 0, i64 0), i32 %340) #17
  br label %347

347:                                              ; preds = %337, %342
  %348 = call i64 @strlen(i8* %0) #19
  %349 = getelementptr inbounds i8, i8* %0, i64 %348
  %350 = trunc i64 %348 to i32
  %351 = sub i32 %1, %350
  %352 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i64 0, i32 83
  %353 = load i32, i32* %352, align 4
  %354 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i64 0, i32 89
  %355 = load i64, i64* %354, align 8
  call void @av_get_channel_layout_string(i8* %349, i32 %351, i32 %353, i64 %355) #17
  %356 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i64 0, i32 84
  %357 = load i32, i32* %356, align 8
  %358 = icmp eq i32 %357, -1
  br i1 %358, label %365, label %359

359:                                              ; preds = %347
  %360 = call i64 @strlen(i8* %0) #19
  %361 = getelementptr inbounds i8, i8* %0, i64 %360
  %362 = sub i64 %74, %360
  %363 = call i8* @av_get_sample_fmt_name(i32 %357) #17
  %364 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %361, i64 %362, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.74, i64 0, i64 0), i8* %363) #17
  br label %365

365:                                              ; preds = %347, %359
  %366 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i64 0, i32 143
  %367 = load i32, i32* %366, align 4
  %368 = icmp sgt i32 %367, 0
  br i1 %368, label %369, label %380

369:                                              ; preds = %365
  %370 = load i32, i32* %356, align 8
  %371 = call i32 @av_get_bytes_per_sample(i32 %370) #17
  %372 = shl nsw i32 %371, 3
  %373 = icmp eq i32 %367, %372
  br i1 %373, label %380, label %374

374:                                              ; preds = %369
  %375 = call i64 @strlen(i8* %0) #19
  %376 = getelementptr inbounds i8, i8* %0, i64 %375
  %377 = sub i64 %74, %375
  %378 = load i32, i32* %366, align 4
  %379 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %376, i64 %377, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.75, i64 0, i64 0), i32 %378) #17
  br label %380

380:                                              ; preds = %369, %374, %365
  %381 = call i32 @av_log_get_level() #17
  %382 = icmp sgt i32 %381, 39
  br i1 %382, label %383, label %432

383:                                              ; preds = %380
  %384 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i64 0, i32 162
  %385 = load i32, i32* %384, align 4
  %386 = icmp eq i32 %385, 0
  br i1 %386, label %392, label %387

387:                                              ; preds = %383
  %388 = call i64 @strlen(i8* %0) #19
  %389 = getelementptr inbounds i8, i8* %0, i64 %388
  %390 = sub i64 %74, %388
  %391 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %389, i64 %390, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.76, i64 0, i64 0), i32 %385) #17
  br label %392

392:                                              ; preds = %383, %387
  %393 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i64 0, i32 184
  %394 = load i32, i32* %393, align 4
  %395 = icmp eq i32 %394, 0
  br i1 %395, label %432, label %396

396:                                              ; preds = %392
  %397 = call i64 @strlen(i8* %0) #19
  %398 = getelementptr inbounds i8, i8* %0, i64 %397
  %399 = sub i64 %74, %397
  %400 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %398, i64 %399, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.77, i64 0, i64 0), i32 %394) #17
  br label %432

401:                                              ; preds = %129
  %402 = call i32 @av_log_get_level() #17
  %403 = icmp sgt i32 %402, 47
  br i1 %403, label %404, label %432

404:                                              ; preds = %401
  %405 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i64 0, i32 17, i32 0
  %406 = load i32, i32* %405, align 4
  %407 = sext i32 %406 to i64
  %408 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i64 0, i32 17, i32 1
  %409 = load i32, i32* %408, align 4
  %410 = sext i32 %409 to i64
  %411 = call i64 @av_gcd(i64 %407, i64 %410) #4
  %412 = trunc i64 %411 to i32
  %413 = icmp eq i32 %412, 0
  br i1 %413, label %432, label %414

414:                                              ; preds = %404
  %415 = call i64 @strlen(i8* %0) #19
  %416 = getelementptr inbounds i8, i8* %0, i64 %415
  %417 = sub i64 %74, %415
  %418 = sdiv i32 %406, %412
  %419 = sdiv i32 %409, %412
  %420 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %416, i64 %417, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.69, i64 0, i64 0), i32 %418, i32 %419) #17
  br label %432

421:                                              ; preds = %129
  %422 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i64 0, i32 20
  %423 = load i32, i32* %422, align 4
  %424 = icmp eq i32 %423, 0
  br i1 %424, label %432, label %425

425:                                              ; preds = %421
  %426 = call i64 @strlen(i8* %0) #19
  %427 = getelementptr inbounds i8, i8* %0, i64 %426
  %428 = sub i64 %74, %426
  %429 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i64 0, i32 21
  %430 = load i32, i32* %429, align 8
  %431 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %427, i64 %428, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.78, i64 0, i64 0), i32 %423, i32 %430) #17
  br label %432

432:                                              ; preds = %414, %404, %392, %421, %425, %401, %380, %396
  %433 = icmp eq i32 %3, 0
  br i1 %433, label %454, label %434

434:                                              ; preds = %308, %432
  %435 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i64 0, i32 13
  %436 = load i32, i32* %435, align 4
  %437 = and i32 %436, 512
  %438 = icmp eq i32 %437, 0
  br i1 %438, label %445, label %439

439:                                              ; preds = %434
  %440 = call i64 @strlen(i8* %0) #19
  %441 = getelementptr inbounds i8, i8* %0, i64 %440
  %442 = sub i64 %74, %440
  %443 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %441, i64 %442, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.79, i64 0, i64 0)) #17
  %444 = load i32, i32* %435, align 4
  br label %445

445:                                              ; preds = %434, %439
  %446 = phi i32 [ %436, %434 ], [ %444, %439 ]
  %447 = and i32 %446, 1024
  %448 = icmp eq i32 %447, 0
  br i1 %448, label %454, label %449

449:                                              ; preds = %445
  %450 = call i64 @strlen(i8* %0) #19
  %451 = getelementptr inbounds i8, i8* %0, i64 %450
  %452 = sub i64 %74, %450
  %453 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %451, i64 %452, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.80, i64 0, i64 0)) #17
  br label %454

454:                                              ; preds = %332, %328, %445, %432, %449
  %455 = load i32, i32* %19, align 4
  switch i32 %455, label %488 [
    i32 0, label %476
    i32 2, label %476
    i32 3, label %476
    i32 4, label %476
    i32 1, label %456
  ]

456:                                              ; preds = %454
  %457 = load i32, i32* %22, align 8
  switch i32 %457, label %460 [
    i32 69649, label %463
    i32 69648, label %458
    i32 69647, label %459
    i32 69633, label %459
    i32 69632, label %459
    i32 69645, label %459
    i32 69638, label %459
  ]

458:                                              ; preds = %456
  br label %463

459:                                              ; preds = %456, %456, %456, %456, %456
  br label %463

460:                                              ; preds = %456
  %461 = call i32 @av_get_exact_bits_per_sample(i32 %457) #17
  %462 = icmp eq i32 %461, 0
  br i1 %462, label %476, label %463

463:                                              ; preds = %460, %459, %458, %456
  %464 = phi i32 [ %461, %460 ], [ 2, %456 ], [ 3, %458 ], [ 4, %459 ]
  %465 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i64 0, i32 82
  %466 = load i32, i32* %465, align 8
  %467 = sext i32 %466 to i64
  %468 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i64 0, i32 83
  %469 = load i32, i32* %468, align 4
  %470 = sext i32 %469 to i64
  %471 = mul nsw i64 %470, %467
  %472 = sext i32 %464 to i64
  %473 = sdiv i64 9223372036854775807, %472
  %474 = icmp sgt i64 %471, %473
  %475 = mul nsw i64 %471, %472
  br i1 %474, label %488, label %479

476:                                              ; preds = %460, %454, %454, %454, %454
  %477 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i64 0, i32 9
  %478 = load i64, i64* %477, align 8
  br label %479

479:                                              ; preds = %476, %463
  %480 = phi i64 [ %475, %463 ], [ %478, %476 ]
  %481 = icmp eq i64 %480, 0
  br i1 %481, label %488, label %482

482:                                              ; preds = %479
  %483 = call i64 @strlen(i8* %0) #19
  %484 = getelementptr inbounds i8, i8* %0, i64 %483
  %485 = sub i64 %74, %483
  %486 = sdiv i64 %480, 1000
  %487 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %484, i64 %485, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.81, i64 0, i64 0), i64 %486) #17
  br label %498

488:                                              ; preds = %463, %454, %479
  %489 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i64 0, i32 103
  %490 = load i64, i64* %489, align 8
  %491 = icmp sgt i64 %490, 0
  br i1 %491, label %492, label %498

492:                                              ; preds = %488
  %493 = call i64 @strlen(i8* %0) #19
  %494 = getelementptr inbounds i8, i8* %0, i64 %493
  %495 = sub i64 %74, %493
  %496 = udiv i64 %490, 1000
  %497 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %494, i64 %495, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.82, i64 0, i64 0), i64 %496) #17
  br label %498

498:                                              ; preds = %482, %492, %488, %129, %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #17
  ret void
}

declare i8* @av_get_media_type_string(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i8* @avcodec_profile_name(i32, i32) local_unnamed_addr #0 {
  %3 = tail call %struct.AVCodecDescriptor* @avcodec_descriptor_get(i32 %0) #17
  %4 = icmp ne i32 %1, -99
  %5 = icmp ne %struct.AVCodecDescriptor* %3, null
  %6 = and i1 %4, %5
  br i1 %6, label %7, label %27

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.AVCodecDescriptor, %struct.AVCodecDescriptor* %3, i64 0, i32 6
  %9 = load %struct.AVProfile*, %struct.AVProfile** %8, align 8
  %10 = icmp eq %struct.AVProfile* %9, null
  br i1 %10, label %27, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.AVProfile, %struct.AVProfile* %9, i64 0, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, -99
  br i1 %14, label %27, label %15

15:                                               ; preds = %11, %22
  %16 = phi i32 [ %25, %22 ], [ %13, %11 ]
  %17 = phi %struct.AVProfile* [ %23, %22 ], [ %9, %11 ]
  %18 = icmp eq i32 %16, %1
  br i1 %18, label %19, label %22

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.AVProfile, %struct.AVProfile* %17, i64 0, i32 1
  %21 = load i8*, i8** %20, align 8
  br label %27

22:                                               ; preds = %15
  %23 = getelementptr inbounds %struct.AVProfile, %struct.AVProfile* %17, i64 1
  %24 = getelementptr inbounds %struct.AVProfile, %struct.AVProfile* %23, i64 0, i32 0
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, -99
  br i1 %26, label %27, label %15

27:                                               ; preds = %22, %11, %2, %7, %19
  %28 = phi i8* [ %21, %19 ], [ null, %7 ], [ null, %2 ], [ null, %11 ], [ null, %22 ]
  ret i8* %28
}

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #12

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #13

declare i32 @av_log_get_level() local_unnamed_addr #2

declare i8* @av_fourcc_make_string(i8*, i32) local_unnamed_addr #2

declare i64 @av_strlcat(i8*, i8*, i64) local_unnamed_addr #2

declare i64 @av_strlcatf(i8*, i64, i8*, ...) local_unnamed_addr #2

declare i8* @av_color_range_name(i32) local_unnamed_addr #2

declare i8* @av_color_space_name(i32) local_unnamed_addr #2

declare i8* @av_color_primaries_name(i32) local_unnamed_addr #2

declare i8* @av_color_transfer_name(i32) local_unnamed_addr #2

declare i8* @av_get_colorspace_name(i32) local_unnamed_addr #2

declare i8* @av_chroma_location_name(i32) local_unnamed_addr #2

declare i32 @av_reduce(i32*, i32*, i64, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind readnone
declare i64 @av_gcd(i64, i64) local_unnamed_addr #9

declare i32 @av_get_bytes_per_sample(i32) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @av_get_profile_name(%struct.AVCodec* nocapture readonly, i32) local_unnamed_addr #3 {
  %3 = icmp eq i32 %1, -99
  br i1 %3, label %24, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %0, i64 0, i32 12
  %6 = load %struct.AVProfile*, %struct.AVProfile** %5, align 8
  %7 = icmp eq %struct.AVProfile* %6, null
  br i1 %7, label %24, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.AVProfile, %struct.AVProfile* %6, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, -99
  br i1 %11, label %24, label %12

12:                                               ; preds = %8, %19
  %13 = phi i32 [ %22, %19 ], [ %10, %8 ]
  %14 = phi %struct.AVProfile* [ %20, %19 ], [ %6, %8 ]
  %15 = icmp eq i32 %13, %1
  br i1 %15, label %16, label %19

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.AVProfile, %struct.AVProfile* %14, i64 0, i32 1
  %18 = load i8*, i8** %17, align 8
  br label %24

19:                                               ; preds = %12
  %20 = getelementptr inbounds %struct.AVProfile, %struct.AVProfile* %14, i64 1
  %21 = getelementptr inbounds %struct.AVProfile, %struct.AVProfile* %20, i64 0, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, -99
  br i1 %23, label %24, label %12

24:                                               ; preds = %19, %8, %2, %4, %16
  %25 = phi i8* [ %18, %16 ], [ null, %4 ], [ null, %2 ], [ null, %8 ], [ null, %19 ]
  ret i8* %25
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @avcodec_version() local_unnamed_addr #14 {
  ret i32 3834468
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias i8* @avcodec_configuration() local_unnamed_addr #14 {
  ret i8* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @avcodec_license() local_unnamed_addr #14 {
  ret i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.83, i64 0, i64 20)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @av_get_exact_bits_per_sample(i32) local_unnamed_addr #14 {
  switch i32 %0, label %7 [
    i32 86070, label %8
    i32 86071, label %8
    i32 71691, label %8
    i32 69644, label %8
    i32 71695, label %8
    i32 69651, label %8
    i32 69661, label %8
    i32 71694, label %8
    i32 69655, label %8
    i32 71681, label %8
    i32 69636, label %8
    i32 71692, label %8
    i32 69660, label %8
    i32 69646, label %8
    i32 71687, label %8
    i32 88069, label %2
    i32 88070, label %2
    i32 88071, label %2
    i32 88072, label %2
    i32 65543, label %2
    i32 65542, label %2
    i32 67588, label %2
    i32 65540, label %2
    i32 65563, label %2
    i32 67589, label %2
    i32 65541, label %2
    i32 83968, label %2
    i32 83970, label %2
    i32 65537, label %3
    i32 65566, label %3
    i32 65536, label %3
    i32 65554, label %3
    i32 65539, label %3
    i32 65538, label %3
    i32 65552, label %4
    i32 65549, label %4
    i32 65548, label %4
    i32 65564, label %4
    i32 65551, label %4
    i32 65550, label %4
    i32 65545, label %5
    i32 65544, label %5
    i32 65565, label %5
    i32 65547, label %5
    i32 65546, label %5
    i32 65556, label %5
    i32 65557, label %5
    i32 67587, label %5
    i32 67586, label %5
    i32 65558, label %6
    i32 65559, label %6
    i32 67585, label %6
    i32 67584, label %6
  ]

2:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  br label %8

3:                                                ; preds = %1, %1, %1, %1, %1, %1
  br label %8

4:                                                ; preds = %1, %1, %1, %1, %1, %1
  br label %8

5:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1
  br label %8

6:                                                ; preds = %1, %1, %1, %1
  br label %8

7:                                                ; preds = %1
  br label %8

8:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %7, %6, %5, %4, %3, %2
  %9 = phi i32 [ 0, %7 ], [ 64, %6 ], [ 32, %5 ], [ 24, %4 ], [ 16, %3 ], [ 8, %2 ], [ 4, %1 ], [ 4, %1 ], [ 4, %1 ], [ 4, %1 ], [ 4, %1 ], [ 4, %1 ], [ 4, %1 ], [ 4, %1 ], [ 4, %1 ], [ 4, %1 ], [ 4, %1 ], [ 4, %1 ], [ 4, %1 ], [ 4, %1 ], [ 4, %1 ]
  ret i32 %9
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @av_get_pcm_codec(i32, i32) local_unnamed_addr #14 {
  %3 = icmp ugt i32 %0, 11
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = sext i32 %0 to i64
  %6 = icmp ugt i32 %1, 1
  %7 = select i1 %6, i32 0, i32 %1
  %8 = sext i32 %7 to i64
  %9 = getelementptr inbounds [12 x [2 x i32]], [12 x [2 x i32]]* @av_get_pcm_codec.map, i64 0, i64 %5, i64 %8
  %10 = load i32, i32* %9, align 4
  br label %11

11:                                               ; preds = %2, %4
  %12 = phi i32 [ %10, %4 ], [ 0, %2 ]
  ret i32 %12
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @av_get_bits_per_sample(i32) local_unnamed_addr #14 {
  switch i32 %0, label %4 [
    i32 69649, label %6
    i32 69648, label %2
    i32 69647, label %3
    i32 69633, label %3
    i32 69632, label %3
    i32 69645, label %3
    i32 69638, label %3
  ]

2:                                                ; preds = %1
  br label %6

3:                                                ; preds = %1, %1, %1, %1, %1
  br label %6

4:                                                ; preds = %1
  %5 = tail call i32 @av_get_exact_bits_per_sample(i32 %0)
  br label %6

6:                                                ; preds = %1, %4, %3, %2
  %7 = phi i32 [ %5, %4 ], [ 4, %3 ], [ 3, %2 ], [ 2, %1 ]
  ret i32 %7
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @av_get_audio_frame_duration(%struct.AVCodecContext* nocapture readonly, i32) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 82
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 83
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 87
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 5
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 142
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 9
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 15
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 85
  %20 = load i32, i32* %19, align 4
  %21 = tail call fastcc i32 @get_audio_frame_duration(i32 %4, i32 %6, i32 %8, i32 %10, i32 %12, i32 %14, i64 %16, i8* %18, i32 %20, i32 %1)
  ret i32 %21
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal fastcc i32 @get_audio_frame_duration(i32, i32, i32, i32, i32, i32, i64, i8* readnone, i32, i32) unnamed_addr #14 {
  %11 = tail call i32 @av_get_exact_bits_per_sample(i32 %0)
  %12 = icmp sgt i32 %3, 0
  br i1 %12, label %13, label %17

13:                                               ; preds = %10
  %14 = sdiv i32 %9, %3
  %15 = icmp sgt i32 %14, 1
  %16 = select i1 %15, i32 %14, i32 1
  br label %17

17:                                               ; preds = %13, %10
  %18 = phi i32 [ 1, %10 ], [ %16, %13 ]
  %19 = icmp sgt i32 %11, 0
  %20 = icmp sgt i32 %2, 0
  %21 = and i1 %20, %19
  %22 = icmp sgt i32 %9, 0
  %23 = and i1 %22, %21
  %24 = icmp slt i32 %2, 32768
  %25 = and i1 %24, %23
  %26 = icmp slt i32 %11, 32768
  %27 = and i1 %26, %25
  br i1 %27, label %28, label %35

28:                                               ; preds = %17
  %29 = sext i32 %9 to i64
  %30 = shl nsw i64 %29, 3
  %31 = mul nsw i32 %11, %2
  %32 = sext i32 %31 to i64
  %33 = sdiv i64 %30, %32
  %34 = trunc i64 %33 to i32
  br label %266

35:                                               ; preds = %17
  switch i32 %0, label %49 [
    i32 69641, label %266
    i32 69632, label %36
    i32 69657, label %37
    i32 73728, label %38
    i32 88067, label %38
    i32 86034, label %38
    i32 86040, label %38
    i32 77825, label %38
    i32 73729, label %39
    i32 86046, label %39
    i32 86058, label %40
    i32 86062, label %41
    i32 88084, label %42
    i32 86047, label %42
    i32 86055, label %46
    i32 86016, label %47
    i32 86044, label %47
    i32 86019, label %48
  ]

36:                                               ; preds = %35
  br label %266

37:                                               ; preds = %35
  br label %266

38:                                               ; preds = %35, %35, %35, %35, %35
  br label %266

39:                                               ; preds = %35, %35
  br label %266

40:                                               ; preds = %35
  br label %266

41:                                               ; preds = %35
  br label %266

42:                                               ; preds = %35, %35
  %43 = icmp ugt i32 %18, 2097151
  %44 = shl nsw i32 %18, 10
  %45 = select i1 %43, i32 0, i32 %44
  ret i32 %45

46:                                               ; preds = %35
  br label %266

47:                                               ; preds = %35, %35
  br label %266

48:                                               ; preds = %35
  br label %266

49:                                               ; preds = %35
  %50 = icmp sgt i32 %1, 0
  br i1 %50, label %51, label %65

51:                                               ; preds = %49
  switch i32 %0, label %65 [
    i32 86038, label %52
    i32 88077, label %55
    i32 86064, label %57
    i32 86017, label %62
  ]

52:                                               ; preds = %51
  %53 = shl nsw i32 %1, 8
  %54 = sdiv i32 %53, 245
  br label %266

55:                                               ; preds = %51
  %56 = udiv i32 %1, 75
  br label %266

57:                                               ; preds = %51
  %58 = icmp sgt i32 %1, 507149
  br i1 %58, label %266, label %59

59:                                               ; preds = %57
  %60 = udiv i32 %1, 22050
  %61 = shl i32 480, %60
  br label %266

62:                                               ; preds = %51
  %63 = icmp slt i32 %1, 24001
  %64 = select i1 %63, i32 576, i32 1152
  br label %266

65:                                               ; preds = %51, %49
  br i1 %12, label %66, label %73

66:                                               ; preds = %65
  switch i32 %0, label %73 [
    i32 86057, label %67
    i32 86075, label %71
  ]

67:                                               ; preds = %66
  switch i32 %3, label %73 [
    i32 20, label %266
    i32 19, label %68
    i32 29, label %69
    i32 37, label %70
  ]

68:                                               ; preds = %67
  br label %266

69:                                               ; preds = %67
  br label %266

70:                                               ; preds = %67
  br label %266

71:                                               ; preds = %66
  switch i32 %3, label %73 [
    i32 38, label %266
    i32 50, label %72
  ]

72:                                               ; preds = %71
  br label %266

73:                                               ; preds = %66, %67, %71, %65
  br i1 %22, label %74, label %246

74:                                               ; preds = %73
  switch i32 %0, label %84 [
    i32 86037, label %75
    i32 86049, label %78
    i32 77824, label %81
  ]

75:                                               ; preds = %74
  %76 = lshr i32 %9, 5
  %77 = mul nsw i32 %76, 240
  br label %266

78:                                               ; preds = %74
  %79 = lshr i32 %9, 6
  %80 = shl nsw i32 %79, 8
  br label %266

81:                                               ; preds = %74
  %82 = udiv i32 %9, 20
  %83 = mul nsw i32 %82, 160
  br label %266

84:                                               ; preds = %74
  %85 = icmp sgt i32 %5, 0
  br i1 %85, label %86, label %90

86:                                               ; preds = %84
  switch i32 %0, label %90 [
    i32 71684, label %87
    i32 69643, label %87
  ]

87:                                               ; preds = %86, %86
  %88 = shl nsw i32 %9, 3
  %89 = sdiv i32 %88, %5
  br label %266

90:                                               ; preds = %86, %84
  %91 = add i32 %2, -1
  %92 = icmp ult i32 %91, 134217726
  br i1 %92, label %93, label %246

93:                                               ; preds = %90
  switch i32 %0, label %160 [
    i32 88090, label %94
    i32 71698, label %98
    i32 71680, label %104
    i32 71686, label %108
    i32 71682, label %108
    i32 69639, label %114
    i32 71688, label %114
    i32 69659, label %114
    i32 69637, label %119
    i32 69651, label %123
    i32 69650, label %126
    i32 71685, label %126
    i32 69640, label %132
    i32 81921, label %136
    i32 81920, label %140
    i32 81922, label %143
    i32 86025, label %147
    i32 86026, label %150
    i32 65561, label %153
    i32 86074, label %157
    i32 86043, label %157
  ]

94:                                               ; preds = %93
  %95 = mul nsw i32 %2, 40
  %96 = sdiv i32 %9, %95
  %97 = shl nsw i32 %96, 8
  br label %266

98:                                               ; preds = %93
  %99 = shl nsw i32 %2, 2
  %100 = sub nsw i32 %9, %99
  %101 = shl nsw i32 %2, 7
  %102 = sdiv i32 %100, %101
  %103 = shl nsw i32 %102, 8
  br label %266

104:                                              ; preds = %93
  %105 = mul nsw i32 %2, 9
  %106 = sdiv i32 %9, %105
  %107 = shl nsw i32 %106, 4
  br label %266

108:                                              ; preds = %93, %93
  %109 = shl nsw i32 %2, 4
  %110 = sdiv i32 %9, %109
  %111 = icmp sgt i32 %110, 76695844
  %112 = mul nsw i32 %110, 28
  %113 = select i1 %111, i32 0, i32 %112
  br label %266

114:                                              ; preds = %93, %93, %93
  %115 = shl nsw i32 %2, 2
  %116 = sub nsw i32 %9, %115
  %117 = shl nsw i32 %116, 1
  %118 = sdiv i32 %117, %2
  br label %266

119:                                              ; preds = %93
  %120 = shl i32 %9, 1
  %121 = add i32 %120, -8
  %122 = sdiv i32 %121, %2
  br label %266

123:                                              ; preds = %93
  %124 = shl i32 %9, 1
  %125 = add i32 %124, -16
  br label %266

126:                                              ; preds = %93, %93
  %127 = icmp eq i8* %7, null
  br i1 %127, label %171, label %128

128:                                              ; preds = %126
  %129 = mul nsw i32 %9, 14
  %130 = shl nsw i32 %2, 3
  %131 = sdiv i32 %129, %130
  br label %266

132:                                              ; preds = %93
  %133 = lshr i32 %9, 7
  %134 = mul nsw i32 %133, 224
  %135 = sdiv i32 %134, %2
  br label %266

136:                                              ; preds = %93
  %137 = sub nuw nsw i32 -6, %2
  %138 = add nsw i32 %137, %9
  %139 = sdiv i32 %138, %2
  br label %266

140:                                              ; preds = %93
  %141 = add nsw i32 %9, -8
  %142 = sdiv i32 %141, %2
  br label %266

143:                                              ; preds = %93
  %144 = shl nsw i32 %2, 1
  %145 = sub nsw i32 %9, %144
  %146 = sdiv i32 %145, %2
  br label %266

147:                                              ; preds = %93
  %148 = mul nsw i32 %9, 3
  %149 = sdiv i32 %148, %2
  br label %266

150:                                              ; preds = %93
  %151 = mul nsw i32 %9, 6
  %152 = sdiv i32 %151, %2
  br label %266

153:                                              ; preds = %93
  %154 = mul nsw i32 %2, 5
  %155 = sdiv i32 %9, %154
  %156 = shl nsw i32 %155, 1
  br label %266

157:                                              ; preds = %93, %93
  %158 = shl nsw i32 %9, 2
  %159 = sdiv i32 %158, %2
  br label %266

160:                                              ; preds = %93
  %161 = icmp ne i32 %4, 0
  %162 = icmp eq i32 %0, 81923
  %163 = and i1 %162, %161
  br i1 %163, label %164, label %171

164:                                              ; preds = %160
  %165 = icmp eq i32 %4, 3
  br i1 %165, label %166, label %168

166:                                              ; preds = %164
  %167 = udiv i32 %9, %2
  br label %266

168:                                              ; preds = %164
  %169 = shl nsw i32 %9, 1
  %170 = sdiv i32 %169, %2
  br label %266

171:                                              ; preds = %126, %160
  br i1 %12, label %172, label %217

172:                                              ; preds = %171
  %173 = udiv i32 %9, %3
  switch i32 %0, label %217 [
    i32 69633, label %174
    i32 69634, label %185
    i32 69635, label %192
    i32 71683, label %199
    i32 69638, label %205
    i32 71689, label %212
  ]

174:                                              ; preds = %172
  %175 = add i32 %5, -2
  %176 = icmp ugt i32 %175, 3
  br i1 %176, label %266, label %177

177:                                              ; preds = %174
  %178 = shl nsw i32 %2, 2
  %179 = sub nsw i32 %3, %178
  %180 = mul nsw i32 %5, %2
  %181 = sdiv i32 %179, %180
  %182 = shl nsw i32 %181, 3
  %183 = or i32 %182, 1
  %184 = mul nsw i32 %183, %173
  br label %266

185:                                              ; preds = %172
  %186 = shl i32 %3, 1
  %187 = add i32 %186, -32
  %188 = sdiv i32 %187, 3
  %189 = shl nsw i32 %188, 2
  %190 = sdiv i32 %189, %2
  %191 = mul nsw i32 %190, %173
  br label %266

192:                                              ; preds = %172
  %193 = shl nsw i32 %2, 2
  %194 = sub nsw i32 %3, %193
  %195 = shl nsw i32 %194, 1
  %196 = sdiv i32 %195, %2
  %197 = add nsw i32 %196, 1
  %198 = mul nsw i32 %197, %173
  br label %266

199:                                              ; preds = %172
  %200 = shl nsw i32 %2, 2
  %201 = sub nsw i32 %3, %200
  %202 = shl nsw i32 %201, 1
  %203 = sdiv i32 %202, %2
  %204 = mul nsw i32 %203, %173
  br label %266

205:                                              ; preds = %172
  %206 = mul i32 %2, -7
  %207 = add nsw i32 %206, %3
  %208 = shl nsw i32 %207, 1
  %209 = sdiv i32 %208, %2
  %210 = add nsw i32 %209, 2
  %211 = mul nsw i32 %210, %173
  br label %266

212:                                              ; preds = %172
  %213 = shl i32 %3, 1
  %214 = add i32 %213, -32
  %215 = mul i32 %214, %173
  %216 = sdiv i32 %215, %2
  br label %266

217:                                              ; preds = %172, %171
  br i1 %85, label %218, label %246

218:                                              ; preds = %217
  switch i32 %0, label %246 [
    i32 65555, label %219
    i32 65560, label %229
    i32 65562, label %240
  ]

219:                                              ; preds = %218
  %220 = icmp slt i32 %5, 4
  %221 = icmp slt i32 %9, 3
  %222 = or i1 %220, %221
  br i1 %222, label %266, label %223

223:                                              ; preds = %219
  %224 = add nsw i32 %9, -3
  %225 = lshr i32 %5, 2
  %226 = mul nsw i32 %225, %2
  %227 = sdiv i32 %224, %226
  %228 = shl nsw i32 %227, 1
  br label %266

229:                                              ; preds = %218
  %230 = icmp slt i32 %5, 4
  %231 = icmp slt i32 %9, 4
  %232 = or i1 %230, %231
  br i1 %232, label %266, label %233

233:                                              ; preds = %229
  %234 = add nsw i32 %9, -4
  %235 = add nuw nsw i32 %2, 1
  %236 = and i32 %235, -2
  %237 = mul nsw i32 %236, %5
  %238 = sdiv i32 %237, 8
  %239 = sdiv i32 %234, %238
  br label %266

240:                                              ; preds = %218
  %241 = add nuw nsw i32 %5, 4
  %242 = sdiv i32 %241, 4
  %243 = sdiv i32 %9, %242
  %244 = shl nsw i32 %243, 1
  %245 = sdiv i32 %244, %2
  br label %266

246:                                              ; preds = %90, %218, %217, %73
  %247 = icmp sgt i32 %8, 1
  %248 = icmp ne i32 %9, 0
  %249 = and i1 %247, %248
  br i1 %249, label %266, label %250

250:                                              ; preds = %246
  %251 = icmp sgt i64 %6, 0
  %252 = and i1 %251, %22
  %253 = and i1 %50, %252
  %254 = icmp sgt i32 %3, 1
  %255 = and i1 %254, %253
  %256 = add i32 %0, -86023
  %257 = icmp ult i32 %256, 2
  %258 = and i1 %257, %255
  br i1 %258, label %259, label %266

259:                                              ; preds = %250
  %260 = sext i32 %9 to i64
  %261 = sext i32 %1 to i64
  %262 = shl nsw i64 %261, 3
  %263 = mul i64 %262, %260
  %264 = sdiv i64 %263, %6
  %265 = trunc i64 %264 to i32
  br label %266

266:                                              ; preds = %174, %177, %185, %192, %199, %205, %212, %108, %250, %246, %229, %219, %71, %67, %57, %35, %259, %240, %233, %223, %168, %166, %157, %153, %150, %147, %143, %140, %136, %132, %128, %123, %119, %114, %104, %98, %94, %87, %81, %78, %75, %72, %70, %69, %68, %62, %59, %55, %52, %48, %47, %46, %41, %40, %39, %38, %37, %36, %28
  %267 = phi i32 [ %34, %28 ], [ %54, %52 ], [ %56, %55 ], [ %61, %59 ], [ %64, %62 ], [ %77, %75 ], [ %80, %78 ], [ %83, %81 ], [ %89, %87 ], [ %167, %166 ], [ %170, %168 ], [ %265, %259 ], [ %245, %240 ], [ %239, %233 ], [ %228, %223 ], [ %159, %157 ], [ %156, %153 ], [ %152, %150 ], [ %149, %147 ], [ %146, %143 ], [ %142, %140 ], [ %139, %136 ], [ %135, %132 ], [ %131, %128 ], [ %125, %123 ], [ %122, %119 ], [ %118, %114 ], [ %107, %104 ], [ %103, %98 ], [ %97, %94 ], [ 480, %70 ], [ 288, %69 ], [ 144, %68 ], [ 240, %72 ], [ 1536, %48 ], [ 1152, %47 ], [ 2048, %46 ], [ 512, %41 ], [ 384, %40 ], [ 320, %39 ], [ 160, %38 ], [ 128, %37 ], [ 64, %36 ], [ 32, %35 ], [ 0, %57 ], [ 160, %67 ], [ 160, %71 ], [ 0, %219 ], [ 0, %229 ], [ %8, %246 ], [ 0, %250 ], [ %113, %108 ], [ 0, %174 ], [ %184, %177 ], [ %191, %185 ], [ %198, %192 ], [ %204, %199 ], [ %211, %205 ], [ %216, %212 ]
  ret i32 %267
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @av_get_audio_frame_duration2(%struct.AVCodecParameters* nocapture readonly, i32) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %0, i64 0, i32 23
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %0, i64 0, i32 22
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %0, i64 0, i32 24
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %0, i64 0, i32 7
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %0, i64 0, i32 6
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %0, i64 0, i32 3
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %0, i64 0, i32 25
  %20 = load i32, i32* %19, align 4
  %21 = tail call fastcc i32 @get_audio_frame_duration(i32 %4, i32 %6, i32 %8, i32 %10, i32 %12, i32 %14, i64 %16, i8* %18, i32 %20, i32 %1)
  ret i32 %21
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i32 @av_xiphlacing(i8* nocapture, i32) local_unnamed_addr #5 {
  %3 = icmp ugt i32 %1, 254
  br i1 %3, label %4, label %17

4:                                                ; preds = %2
  %5 = add i32 %1, -255
  %6 = udiv i32 %5, 255
  %7 = add nuw nsw i32 %6, 1
  %8 = zext i32 %7 to i64
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 -1, i64 %8, i1 false)
  br label %9

9:                                                ; preds = %4, %9
  %10 = phi i32 [ %15, %9 ], [ 1, %4 ]
  %11 = phi i32 [ %14, %9 ], [ %1, %4 ]
  %12 = phi i8* [ %13, %9 ], [ %0, %4 ]
  %13 = getelementptr inbounds i8, i8* %12, i64 1
  %14 = add i32 %11, -255
  %15 = add nuw nsw i32 %10, 1
  %16 = icmp ugt i32 %14, 254
  br i1 %16, label %9, label %17

17:                                               ; preds = %9, %2
  %18 = phi i8* [ %0, %2 ], [ %13, %9 ]
  %19 = phi i32 [ %1, %2 ], [ %14, %9 ]
  %20 = phi i32 [ 1, %2 ], [ %15, %9 ]
  %21 = trunc i32 %19 to i8
  store i8 %21, i8* %18, align 1
  ret i32 %20
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @ff_match_2uint16([2 x i16]* nocapture readonly, i32, i32, i32) local_unnamed_addr #3 {
  %5 = icmp sgt i32 %1, 0
  br i1 %5, label %6, label %26

6:                                                ; preds = %4
  %7 = zext i32 %1 to i64
  br label %8

8:                                                ; preds = %20, %6
  %9 = phi i64 [ 0, %6 ], [ %21, %20 ]
  %10 = phi i32 [ 0, %6 ], [ %22, %20 ]
  %11 = getelementptr inbounds [2 x i16], [2 x i16]* %0, i64 %9, i64 0
  %12 = load i16, i16* %11, align 2
  %13 = zext i16 %12 to i32
  %14 = icmp eq i32 %13, %2
  br i1 %14, label %15, label %20

15:                                               ; preds = %8
  %16 = getelementptr inbounds [2 x i16], [2 x i16]* %0, i64 %9, i64 1
  %17 = load i16, i16* %16, align 2
  %18 = zext i16 %17 to i32
  %19 = icmp eq i32 %18, %3
  br i1 %19, label %24, label %20

20:                                               ; preds = %8, %15
  %21 = add nuw nsw i64 %9, 1
  %22 = add nuw nsw i32 %10, 1
  %23 = icmp eq i64 %21, %7
  br i1 %23, label %26, label %8

24:                                               ; preds = %15
  %25 = trunc i64 %9 to i32
  br label %26

26:                                               ; preds = %20, %24, %4
  %27 = phi i32 [ 0, %4 ], [ %25, %24 ], [ %22, %20 ]
  ret i32 %27
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.AVCodecHWConfig* @avcodec_get_hw_config(%struct.AVCodec* nocapture readonly, i32) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %0, i64 0, i32 29
  %4 = load %struct.AVCodecHWConfigInternal**, %struct.AVCodecHWConfigInternal*** %3, align 8
  %5 = icmp eq %struct.AVCodecHWConfigInternal** %4, null
  %6 = icmp slt i32 %1, 0
  %7 = or i1 %6, %5
  br i1 %7, label %24, label %8

8:                                                ; preds = %2
  %9 = add nuw i32 %1, 1
  %10 = zext i32 %9 to i64
  br label %14

11:                                               ; preds = %14
  %12 = add nuw nsw i64 %15, 1
  %13 = icmp eq i64 %12, %10
  br i1 %13, label %19, label %14

14:                                               ; preds = %11, %8
  %15 = phi i64 [ 0, %8 ], [ %12, %11 ]
  %16 = getelementptr inbounds %struct.AVCodecHWConfigInternal*, %struct.AVCodecHWConfigInternal** %4, i64 %15
  %17 = load %struct.AVCodecHWConfigInternal*, %struct.AVCodecHWConfigInternal** %16, align 8
  %18 = icmp eq %struct.AVCodecHWConfigInternal* %17, null
  br i1 %18, label %24, label %11

19:                                               ; preds = %11
  %20 = sext i32 %1 to i64
  %21 = getelementptr inbounds %struct.AVCodecHWConfigInternal*, %struct.AVCodecHWConfigInternal** %4, i64 %20
  %22 = load %struct.AVCodecHWConfigInternal*, %struct.AVCodecHWConfigInternal** %21, align 8
  %23 = getelementptr inbounds %struct.AVCodecHWConfigInternal, %struct.AVCodecHWConfigInternal* %22, i64 0, i32 0
  br label %24

24:                                               ; preds = %14, %2, %19
  %25 = phi %struct.AVCodecHWConfig* [ %23, %19 ], [ null, %2 ], [ null, %14 ]
  ret %struct.AVCodecHWConfig* %25
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %struct.AVHWAccel* @av_hwaccel_next(%struct.AVHWAccel* nocapture readnone) local_unnamed_addr #14 {
  ret %struct.AVHWAccel* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @av_register_hwaccel(%struct.AVHWAccel* nocapture) local_unnamed_addr #14 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @av_lockmgr_register(i32 (i8**, i32)* nocapture readnone) local_unnamed_addr #14 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @avpriv_toupper4(i32) local_unnamed_addr #14 {
  %2 = and i32 %0, 255
  %3 = add nsw i32 %2, -97
  %4 = icmp ult i32 %3, 26
  %5 = xor i32 %2, 32
  %6 = select i1 %4, i32 %5, i32 %2
  %7 = lshr i32 %0, 8
  %8 = and i32 %7, 255
  %9 = add nsw i32 %8, -97
  %10 = icmp ult i32 %9, 26
  %11 = shl nuw nsw i32 %8, 8
  %12 = xor i32 %11, 8192
  %13 = select i1 %10, i32 %12, i32 %11
  %14 = lshr i32 %0, 16
  %15 = and i32 %14, 255
  %16 = add nsw i32 %15, -97
  %17 = icmp ult i32 %16, 26
  %18 = shl nuw nsw i32 %15, 16
  %19 = xor i32 %18, 2097152
  %20 = select i1 %17, i32 %19, i32 %18
  %21 = lshr i32 %0, 24
  %22 = add nsw i32 %21, -97
  %23 = icmp ult i32 %22, 26
  %24 = and i32 %0, -16777216
  %25 = xor i32 %24, 536870912
  %26 = select i1 %23, i32 %25, i32 %24
  %27 = or i32 %26, %6
  %28 = or i32 %27, %13
  %29 = or i32 %28, %20
  ret i32 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ff_thread_ref_frame(%struct.ThreadFrame*, %struct.ThreadFrame* nocapture readonly) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %1, i64 0, i32 1
  %4 = bitcast [2 x %struct.AVCodecContext*]* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %0, i64 0, i32 1
  %7 = getelementptr inbounds [2 x %struct.AVCodecContext*], [2 x %struct.AVCodecContext*]* %6, i64 0, i64 0
  %8 = bitcast [2 x %struct.AVCodecContext*]* %6 to i64*
  store i64 %5, i64* %8, align 8
  %9 = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %1, i64 0, i32 1, i64 1
  %10 = bitcast %struct.AVCodecContext** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %0, i64 0, i32 1, i64 1
  %13 = bitcast %struct.AVCodecContext** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %0, i64 0, i32 0
  %15 = load %struct.AVFrame*, %struct.AVFrame** %14, align 8
  %16 = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %1, i64 0, i32 0
  %17 = load %struct.AVFrame*, %struct.AVFrame** %16, align 8
  %18 = tail call i32 @av_frame_ref(%struct.AVFrame* %15, %struct.AVFrame* %17) #17
  %19 = icmp slt i32 %18, 0
  br i1 %19, label %34, label %20

20:                                               ; preds = %2
  %21 = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %0, i64 0, i32 2
  %22 = load %struct.AVBufferRef*, %struct.AVBufferRef** %21, align 8
  %23 = icmp eq %struct.AVBufferRef* %22, null
  br i1 %23, label %25, label %24

24:                                               ; preds = %20
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.84, i64 0, i64 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i32 1933) #17
  tail call void @abort() #18
  unreachable

25:                                               ; preds = %20
  %26 = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %1, i64 0, i32 2
  %27 = load %struct.AVBufferRef*, %struct.AVBufferRef** %26, align 8
  %28 = icmp eq %struct.AVBufferRef* %27, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %25
  %30 = tail call %struct.AVBufferRef* @av_buffer_ref(%struct.AVBufferRef* nonnull %27) #17
  store %struct.AVBufferRef* %30, %struct.AVBufferRef** %21, align 8
  %31 = icmp eq %struct.AVBufferRef* %30, null
  br i1 %31, label %32, label %34

32:                                               ; preds = %29
  %33 = load %struct.AVCodecContext*, %struct.AVCodecContext** %7, align 8
  tail call void @ff_thread_release_buffer(%struct.AVCodecContext* %33, %struct.ThreadFrame* %0) #17
  br label %34

34:                                               ; preds = %25, %29, %2, %32
  %35 = phi i32 [ -12, %32 ], [ %18, %2 ], [ 0, %29 ], [ 0, %25 ]
  ret i32 %35
}

declare i32 @av_frame_ref(%struct.AVFrame*, %struct.AVFrame*) local_unnamed_addr #2

declare %struct.AVBufferRef* @av_buffer_ref(%struct.AVBufferRef*) local_unnamed_addr #2

declare void @ff_thread_release_buffer(%struct.AVCodecContext*, %struct.ThreadFrame*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i8* @avpriv_find_start_code(i8* noalias readonly, i8* readonly, i32* noalias nocapture) local_unnamed_addr #0 {
  %4 = icmp ugt i8* %0, %1
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.85, i64 0, i64 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i32 2010) #17
  tail call void @abort() #18
  unreachable

6:                                                ; preds = %3
  %7 = icmp ult i8* %0, %1
  br i1 %7, label %8, label %60

8:                                                ; preds = %6
  %9 = load i32, i32* %2, align 4
  %10 = shl i32 %9, 8
  %11 = getelementptr inbounds i8, i8* %0, i64 1
  %12 = load i8, i8* %0, align 1
  %13 = zext i8 %12 to i32
  %14 = or i32 %10, %13
  store i32 %14, i32* %2, align 4
  %15 = icmp eq i32 %10, 256
  %16 = icmp eq i8* %11, %1
  %17 = or i1 %16, %15
  br i1 %17, label %60, label %18

18:                                               ; preds = %8
  %19 = shl i32 %14, 8
  %20 = getelementptr inbounds i8, i8* %0, i64 2
  %21 = load i8, i8* %11, align 1
  %22 = zext i8 %21 to i32
  %23 = or i32 %19, %22
  store i32 %23, i32* %2, align 4
  %24 = icmp eq i32 %19, 256
  %25 = icmp eq i8* %20, %1
  %26 = or i1 %25, %24
  br i1 %26, label %60, label %62

27:                                               ; preds = %71, %49
  %28 = phi i8* [ %50, %49 ], [ %64, %71 ]
  %29 = getelementptr inbounds i8, i8* %28, i64 -1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i32
  %32 = icmp ugt i8 %30, 1
  br i1 %32, label %33, label %35

33:                                               ; preds = %27
  %34 = getelementptr inbounds i8, i8* %28, i64 3
  br label %49

35:                                               ; preds = %27
  %36 = getelementptr inbounds i8, i8* %28, i64 -2
  %37 = load i8, i8* %36, align 1
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %41, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds i8, i8* %28, i64 2
  br label %49

41:                                               ; preds = %35
  %42 = getelementptr inbounds i8, i8* %28, i64 -3
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i32
  %45 = add nsw i32 %31, -1
  %46 = or i32 %45, %44
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds i8, i8* %28, i64 1
  br i1 %47, label %52, label %49

49:                                               ; preds = %41, %39, %33
  %50 = phi i8* [ %34, %33 ], [ %40, %39 ], [ %48, %41 ]
  %51 = icmp ult i8* %50, %1
  br i1 %51, label %27, label %52

52:                                               ; preds = %49, %41, %71
  %53 = phi i8* [ %64, %71 ], [ %48, %41 ], [ %50, %49 ]
  %54 = icmp ugt i8* %53, %1
  %55 = select i1 %54, i8* %1, i8* %53
  %56 = getelementptr inbounds i8, i8* %55, i64 -4
  %57 = bitcast i8* %56 to i32*
  %58 = load i32, i32* %57, align 1
  %59 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %58) #4, !srcloc !5
  store i32 %59, i32* %2, align 4
  br label %60

60:                                               ; preds = %8, %18, %62, %6, %52
  %61 = phi i8* [ %55, %52 ], [ %1, %6 ], [ %11, %8 ], [ %20, %18 ], [ %64, %62 ]
  ret i8* %61

62:                                               ; preds = %18
  %63 = shl i32 %23, 8
  %64 = getelementptr inbounds i8, i8* %0, i64 3
  %65 = load i8, i8* %20, align 1
  %66 = zext i8 %65 to i32
  %67 = or i32 %63, %66
  store i32 %67, i32* %2, align 4
  %68 = icmp eq i32 %63, 256
  %69 = icmp eq i8* %64, %1
  %70 = or i1 %69, %68
  br i1 %70, label %60, label %71

71:                                               ; preds = %62
  %72 = icmp ult i8* %64, %1
  br i1 %72, label %27, label %52
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias %struct.AVCPBProperties* @av_cpb_properties_alloc(i64*) local_unnamed_addr #0 {
  %2 = tail call noalias i8* @av_mallocz(i64 24) #17
  %3 = bitcast i8* %2 to %struct.AVCPBProperties*
  %4 = icmp eq i8* %2, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = icmp eq i64* %0, null
  br i1 %6, label %8, label %7

7:                                                ; preds = %5
  store i64 24, i64* %0, align 8
  br label %8

8:                                                ; preds = %5, %7
  %9 = getelementptr inbounds i8, i8* %2, i64 16
  %10 = bitcast i8* %9 to i64*
  store i64 -1, i64* %10, align 8
  br label %11

11:                                               ; preds = %1, %8
  %12 = phi %struct.AVCPBProperties* [ %3, %8 ], [ null, %1 ]
  ret %struct.AVCPBProperties* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.AVCPBProperties* @ff_add_cpb_side_data(%struct.AVCodecContext* nocapture) local_unnamed_addr #0 {
  %2 = alloca %struct.AVCPBProperties*, align 8
  %3 = bitcast %struct.AVCPBProperties** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #17
  store %struct.AVCPBProperties* inttoptr (i64 -6148914691236517206 to %struct.AVCPBProperties*), %struct.AVCPBProperties** %2, align 8
  %4 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 181
  %5 = load i32, i32* %4, align 8
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %24

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 180
  %9 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %8, align 8
  %10 = sext i32 %5 to i64
  br label %13

11:                                               ; preds = %13
  %12 = icmp slt i64 %18, %10
  br i1 %12, label %13, label %24

13:                                               ; preds = %7, %11
  %14 = phi i64 [ 0, %7 ], [ %18, %11 ]
  %15 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %9, i64 %14, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 10
  %18 = add nuw nsw i64 %14, 1
  br i1 %17, label %19, label %11

19:                                               ; preds = %13
  %20 = and i64 %14, 4294967295
  %21 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %9, i64 %20, i32 0
  %22 = bitcast i8** %21 to %struct.AVCPBProperties**
  %23 = load %struct.AVCPBProperties*, %struct.AVCPBProperties** %22, align 8
  br label %61

24:                                               ; preds = %11, %1
  %25 = tail call noalias i8* @av_mallocz(i64 24) #17
  %26 = icmp eq i8* %25, null
  br i1 %26, label %27, label %28

27:                                               ; preds = %24
  store %struct.AVCPBProperties* null, %struct.AVCPBProperties** %2, align 8
  br label %61

28:                                               ; preds = %24
  %29 = getelementptr inbounds i8, i8* %25, i64 16
  %30 = bitcast i8* %29 to i64*
  store i64 -1, i64* %30, align 8
  %31 = bitcast %struct.AVCPBProperties** %2 to i8**
  store i8* %25, i8** %31, align 8
  %32 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 180
  %33 = bitcast %struct.AVPacketSideData** %32 to i8**
  %34 = load i8*, i8** %33, align 8
  %35 = load i32, i32* %4, align 8
  %36 = add nsw i32 %35, 1
  %37 = sext i32 %36 to i64
  %38 = tail call i8* @av_realloc_array(i8* %34, i64 %37, i64 16) #17
  %39 = icmp eq i8* %38, null
  br i1 %39, label %40, label %41

40:                                               ; preds = %28
  call void @av_freep(i8* nonnull %3) #17
  br label %61

41:                                               ; preds = %28
  store i8* %38, i8** %33, align 8
  %42 = load i32, i32* %4, align 8
  %43 = add nsw i32 %42, 1
  store i32 %43, i32* %4, align 8
  %44 = bitcast i8* %38 to %struct.AVPacketSideData*
  %45 = sext i32 %42 to i64
  %46 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %44, i64 %45, i32 2
  store i32 10, i32* %46, align 4
  %47 = bitcast %struct.AVCPBProperties** %2 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %32, align 8
  %50 = load i32, i32* %4, align 8
  %51 = add nsw i32 %50, -1
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %49, i64 %52
  %54 = bitcast %struct.AVPacketSideData* %53 to i64*
  store i64 %48, i64* %54, align 8
  %55 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %32, align 8
  %56 = load i32, i32* %4, align 8
  %57 = add nsw i32 %56, -1
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %55, i64 %58, i32 1
  store i32 24, i32* %59, align 8
  %60 = load %struct.AVCPBProperties*, %struct.AVCPBProperties** %2, align 8
  br label %61

61:                                               ; preds = %27, %41, %40, %19
  %62 = phi %struct.AVCPBProperties* [ %23, %19 ], [ %60, %41 ], [ null, %40 ], [ null, %27 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #17
  ret %struct.AVCPBProperties* %62
}

declare i8* @av_realloc_array(i8*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.AVCodecParameters* @avcodec_parameters_alloc() local_unnamed_addr #0 {
  %1 = tail call noalias i8* @av_mallocz(i64 144) #17
  %2 = icmp eq i8* %1, null
  br i1 %2, label %20, label %3

3:                                                ; preds = %0
  %4 = bitcast i8* %1 to %struct.AVCodecParameters*
  %5 = getelementptr inbounds i8, i8* %1, i64 16
  tail call void @av_freep(i8* %5) #17
  %6 = getelementptr inbounds i8, i8* %1, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 136, i1 false) #17
  %7 = bitcast i8* %1 to i32*
  store i32 -1, i32* %7, align 8
  %8 = getelementptr inbounds i8, i8* %1, i64 4
  %9 = bitcast i8* %8 to i32*
  store i32 0, i32* %9, align 4
  %10 = getelementptr inbounds i8, i8* %1, i64 28
  %11 = bitcast i8* %10 to i32*
  store i32 -1, i32* %11, align 4
  %12 = getelementptr inbounds i8, i8* %1, i64 80
  %13 = bitcast i8* %12 to <4 x i32>*
  store <4 x i32> <i32 2, i32 2, i32 2, i32 0>, <4 x i32>* %13, align 8
  %14 = getelementptr inbounds i8, i8* %1, i64 64
  %15 = bitcast i8* %14 to <4 x i32>*
  store <4 x i32> <i32 0, i32 1, i32 0, i32 0>, <4 x i32>* %15, align 8
  %16 = getelementptr inbounds i8, i8* %1, i64 48
  %17 = bitcast i8* %16 to i32*
  store i32 -99, i32* %17, align 8
  %18 = getelementptr inbounds i8, i8* %1, i64 52
  %19 = bitcast i8* %18 to i32*
  store i32 -99, i32* %19, align 4
  br label %20

20:                                               ; preds = %0, %3
  %21 = phi %struct.AVCodecParameters* [ %4, %3 ], [ null, %0 ]
  ret %struct.AVCodecParameters* %21
}

; Function Attrs: nounwind ssp uwtable
define hidden void @avcodec_parameters_free(%struct.AVCodecParameters**) local_unnamed_addr #0 {
  %2 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %0, align 8
  %3 = icmp eq %struct.AVCodecParameters* %2, null
  br i1 %3, label %19, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %2, i64 0, i32 3
  %6 = bitcast i8** %5 to i8*
  tail call void @av_freep(i8* %6) #17
  %7 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %2, i64 0, i32 2
  %8 = bitcast i32* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 136, i1 false) #17
  %9 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %2, i64 0, i32 0
  store i32 -1, i32* %9, align 8
  %10 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %2, i64 0, i32 1
  store i32 0, i32* %10, align 4
  %11 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %2, i64 0, i32 5
  store i32 -1, i32* %11, align 4
  %12 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %2, i64 0, i32 16
  %13 = bitcast i32* %12 to <4 x i32>*
  store <4 x i32> <i32 2, i32 2, i32 2, i32 0>, <4 x i32>* %13, align 8
  %14 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %2, i64 0, i32 13, i32 0
  %15 = bitcast i32* %14 to <4 x i32>*
  store <4 x i32> <i32 0, i32 1, i32 0, i32 0>, <4 x i32>* %15, align 8
  %16 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %2, i64 0, i32 9
  store i32 -99, i32* %16, align 8
  %17 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %2, i64 0, i32 10
  store i32 -99, i32* %17, align 4
  %18 = bitcast %struct.AVCodecParameters** %0 to i8*
  tail call void @av_freep(i8* %18) #17
  br label %19

19:                                               ; preds = %1, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @avcodec_parameters_copy(%struct.AVCodecParameters*, %struct.AVCodecParameters* nocapture readonly) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %0, i64 0, i32 3
  %4 = bitcast i8** %3 to i8*
  tail call void @av_freep(i8* %4) #17
  %5 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %0, i64 0, i32 2
  %6 = bitcast i32* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 136, i1 false) #17
  %7 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %0, i64 0, i32 0
  store i32 -1, i32* %7, align 8
  %8 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %0, i64 0, i32 1
  store i32 0, i32* %8, align 4
  %9 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %0, i64 0, i32 5
  store i32 -1, i32* %9, align 4
  %10 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %0, i64 0, i32 16
  %11 = bitcast i32* %10 to <4 x i32>*
  store <4 x i32> <i32 2, i32 2, i32 2, i32 0>, <4 x i32>* %11, align 8
  %12 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %0, i64 0, i32 13, i32 0
  %13 = bitcast i32* %12 to <4 x i32>*
  store <4 x i32> <i32 0, i32 1, i32 0, i32 0>, <4 x i32>* %13, align 8
  %14 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %0, i64 0, i32 9
  store i32 -99, i32* %14, align 8
  %15 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %0, i64 0, i32 10
  store i32 -99, i32* %15, align 4
  %16 = bitcast %struct.AVCodecParameters* %0 to i8*
  %17 = bitcast %struct.AVCodecParameters* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 144, i1 false)
  store i8* null, i8** %3, align 8
  %18 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %0, i64 0, i32 4
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1, i64 0, i32 3
  %20 = load i8*, i8** %19, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %33, label %22

22:                                               ; preds = %2
  %23 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1, i64 0, i32 4
  %24 = load i32, i32* %23, align 8
  %25 = add nsw i32 %24, 64
  %26 = sext i32 %25 to i64
  %27 = tail call noalias i8* @av_mallocz(i64 %26) #17
  store i8* %27, i8** %3, align 8
  %28 = icmp eq i8* %27, null
  br i1 %28, label %33, label %29

29:                                               ; preds = %22
  %30 = load i8*, i8** %19, align 8
  %31 = load i32, i32* %23, align 8
  %32 = sext i32 %31 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %27, i8* align 1 %30, i64 %32, i1 false)
  store i32 %31, i32* %18, align 8
  br label %33

33:                                               ; preds = %29, %2, %22
  %34 = phi i32 [ -12, %22 ], [ 0, %2 ], [ 0, %29 ]
  ret i32 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @avcodec_parameters_from_context(%struct.AVCodecParameters*, %struct.AVCodecContext* readonly) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %0, i64 0, i32 3
  %4 = bitcast i8** %3 to i8*
  tail call void @av_freep(i8* %4) #17
  %5 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %0, i64 0, i32 2
  %6 = bitcast i32* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 136, i1 false) #17
  %7 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %0, i64 0, i32 0
  store i32 -1, i32* %7, align 8
  %8 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %0, i64 0, i32 1
  store i32 0, i32* %8, align 4
  %9 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %0, i64 0, i32 5
  store i32 -1, i32* %9, align 4
  %10 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %0, i64 0, i32 16
  %11 = bitcast i32* %10 to <4 x i32>*
  store <4 x i32> <i32 2, i32 2, i32 2, i32 0>, <4 x i32>* %11, align 8
  %12 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %0, i64 0, i32 13, i32 0
  %13 = bitcast i32* %12 to <4 x i32>*
  store <4 x i32> <i32 0, i32 1, i32 0, i32 0>, <4 x i32>* %13, align 8
  %14 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %0, i64 0, i32 9
  store i32 -99, i32* %14, align 8
  %15 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %0, i64 0, i32 10
  store i32 -99, i32* %15, align 4
  %16 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1, i64 0, i32 2
  %17 = load i32, i32* %16, align 4
  store i32 %17, i32* %7, align 8
  %18 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1, i64 0, i32 4
  %19 = load i32, i32* %18, align 8
  store i32 %19, i32* %8, align 4
  %20 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1, i64 0, i32 5
  %21 = load i32, i32* %20, align 4
  store i32 %21, i32* %5, align 8
  %22 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1, i64 0, i32 9
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %0, i64 0, i32 6
  store i64 %23, i64* %24, align 8
  %25 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1, i64 0, i32 142
  %26 = load i32, i32* %25, align 8
  %27 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %0, i64 0, i32 7
  store i32 %26, i32* %27, align 8
  %28 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1, i64 0, i32 143
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %0, i64 0, i32 8
  store i32 %29, i32* %30, align 4
  %31 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1, i64 0, i32 153
  %32 = load i32, i32* %31, align 4
  store i32 %32, i32* %14, align 8
  %33 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1, i64 0, i32 154
  %34 = load i32, i32* %33, align 8
  store i32 %34, i32* %15, align 4
  switch i32 %17, label %103 [
    i32 0, label %35
    i32 1, label %69
    i32 3, label %96
  ]

35:                                               ; preds = %2
  %36 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %0, i64 0, i32 19
  %37 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %0, i64 0, i32 18
  %38 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %0, i64 0, i32 17
  %39 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %0, i64 0, i32 15
  %40 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %0, i64 0, i32 14
  %41 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1, i64 0, i32 25
  %42 = load i32, i32* %41, align 8
  store i32 %42, i32* %9, align 4
  %43 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1, i64 0, i32 20
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %0, i64 0, i32 11
  store i32 %44, i32* %45, align 8
  %46 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1, i64 0, i32 21
  %47 = load i32, i32* %46, align 8
  %48 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %0, i64 0, i32 12
  store i32 %47, i32* %48, align 4
  %49 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1, i64 0, i32 81
  %50 = load i32, i32* %49, align 4
  store i32 %50, i32* %40, align 8
  %51 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1, i64 0, i32 78
  %52 = load i32, i32* %51, align 8
  store i32 %52, i32* %39, align 4
  %53 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1, i64 0, i32 75
  %54 = load i32, i32* %53, align 4
  store i32 %54, i32* %10, align 8
  %55 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1, i64 0, i32 76
  %56 = load i32, i32* %55, align 8
  store i32 %56, i32* %38, align 4
  %57 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1, i64 0, i32 77
  %58 = load i32, i32* %57, align 4
  store i32 %58, i32* %37, align 8
  %59 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1, i64 0, i32 79
  %60 = load i32, i32* %59, align 4
  store i32 %60, i32* %36, align 4
  %61 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %0, i64 0, i32 13
  %62 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1, i64 0, i32 44
  %63 = bitcast %struct.AVRational* %62 to i64*
  %64 = bitcast %struct.AVRational* %61 to i64*
  %65 = load i64, i64* %63, align 8
  store i64 %65, i64* %64, align 8
  %66 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1, i64 0, i32 32
  %67 = load i32, i32* %66, align 8
  %68 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %0, i64 0, i32 20
  store i32 %67, i32* %68, align 8
  br label %103

69:                                               ; preds = %2
  %70 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1, i64 0, i32 84
  %71 = load i32, i32* %70, align 8
  store i32 %71, i32* %9, align 4
  %72 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1, i64 0, i32 89
  %73 = load i64, i64* %72, align 8
  %74 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %0, i64 0, i32 21
  store i64 %73, i64* %74, align 8
  %75 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1, i64 0, i32 83
  %76 = load i32, i32* %75, align 4
  %77 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %0, i64 0, i32 22
  store i32 %76, i32* %77, align 8
  %78 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1, i64 0, i32 82
  %79 = load i32, i32* %78, align 8
  %80 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %0, i64 0, i32 23
  store i32 %79, i32* %80, align 4
  %81 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1, i64 0, i32 87
  %82 = load i32, i32* %81, align 4
  %83 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %0, i64 0, i32 24
  store i32 %82, i32* %83, align 8
  %84 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1, i64 0, i32 85
  %85 = load i32, i32* %84, align 4
  %86 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %0, i64 0, i32 25
  store i32 %85, i32* %86, align 4
  %87 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1, i64 0, i32 162
  %88 = load i32, i32* %87, align 4
  %89 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %0, i64 0, i32 26
  store i32 %88, i32* %89, align 8
  %90 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1, i64 0, i32 184
  %91 = load i32, i32* %90, align 4
  %92 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %0, i64 0, i32 27
  store i32 %91, i32* %92, align 4
  %93 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1, i64 0, i32 174
  %94 = load i32, i32* %93, align 8
  %95 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %0, i64 0, i32 28
  store i32 %94, i32* %95, align 8
  br label %103

96:                                               ; preds = %2
  %97 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1, i64 0, i32 20
  %98 = load i32, i32* %97, align 4
  %99 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %0, i64 0, i32 11
  store i32 %98, i32* %99, align 8
  %100 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1, i64 0, i32 21
  %101 = load i32, i32* %100, align 8
  %102 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %0, i64 0, i32 12
  store i32 %101, i32* %102, align 4
  br label %103

103:                                              ; preds = %2, %96, %69, %35
  %104 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1, i64 0, i32 15
  %105 = load i8*, i8** %104, align 8
  %106 = icmp eq i8* %105, null
  br i1 %106, label %119, label %107

107:                                              ; preds = %103
  %108 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1, i64 0, i32 16
  %109 = load i32, i32* %108, align 8
  %110 = add nsw i32 %109, 64
  %111 = sext i32 %110 to i64
  %112 = tail call noalias i8* @av_mallocz(i64 %111) #17
  store i8* %112, i8** %3, align 8
  %113 = icmp eq i8* %112, null
  br i1 %113, label %119, label %114

114:                                              ; preds = %107
  %115 = load i8*, i8** %104, align 8
  %116 = load i32, i32* %108, align 8
  %117 = sext i32 %116 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %112, i8* align 1 %115, i64 %117, i1 false)
  %118 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %0, i64 0, i32 4
  store i32 %116, i32* %118, align 8
  br label %119

119:                                              ; preds = %114, %103, %107
  %120 = phi i32 [ -12, %107 ], [ 0, %103 ], [ 0, %114 ]
  ret i32 %120
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @avcodec_parameters_to_context(%struct.AVCodecContext*, %struct.AVCodecParameters* readonly) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 2
  store i32 %4, i32* %5, align 4
  %6 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 4
  store i32 %7, i32* %8, align 8
  %9 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 5
  store i32 %10, i32* %11, align 4
  %12 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1, i64 0, i32 6
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 9
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1, i64 0, i32 7
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 142
  store i32 %16, i32* %17, align 8
  %18 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1, i64 0, i32 8
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 143
  store i32 %19, i32* %20, align 4
  %21 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1, i64 0, i32 9
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 153
  store i32 %22, i32* %23, align 4
  %24 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1, i64 0, i32 10
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 154
  store i32 %25, i32* %26, align 8
  %27 = load i32, i32* %3, align 8
  switch i32 %27, label %100 [
    i32 0, label %28
    i32 1, label %64
    i32 3, label %93
  ]

28:                                               ; preds = %2
  %29 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1, i64 0, i32 5
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 25
  store i32 %30, i32* %31, align 8
  %32 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1, i64 0, i32 11
  %33 = load i32, i32* %32, align 8
  %34 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 20
  store i32 %33, i32* %34, align 4
  %35 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1, i64 0, i32 12
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 21
  store i32 %36, i32* %37, align 8
  %38 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1, i64 0, i32 14
  %39 = load i32, i32* %38, align 8
  %40 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 81
  store i32 %39, i32* %40, align 4
  %41 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1, i64 0, i32 15
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 78
  store i32 %42, i32* %43, align 8
  %44 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1, i64 0, i32 16
  %45 = load i32, i32* %44, align 8
  %46 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 75
  store i32 %45, i32* %46, align 4
  %47 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1, i64 0, i32 17
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 76
  store i32 %48, i32* %49, align 8
  %50 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1, i64 0, i32 18
  %51 = load i32, i32* %50, align 8
  %52 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 77
  store i32 %51, i32* %52, align 4
  %53 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1, i64 0, i32 19
  %54 = load i32, i32* %53, align 4
  %55 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 79
  store i32 %54, i32* %55, align 4
  %56 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 44
  %57 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1, i64 0, i32 13
  %58 = bitcast %struct.AVRational* %57 to i64*
  %59 = bitcast %struct.AVRational* %56 to i64*
  %60 = load i64, i64* %58, align 8
  store i64 %60, i64* %59, align 8
  %61 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1, i64 0, i32 20
  %62 = load i32, i32* %61, align 8
  %63 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 32
  store i32 %62, i32* %63, align 8
  br label %100

64:                                               ; preds = %2
  %65 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1, i64 0, i32 5
  %66 = load i32, i32* %65, align 4
  %67 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 84
  store i32 %66, i32* %67, align 8
  %68 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1, i64 0, i32 21
  %69 = load i64, i64* %68, align 8
  %70 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 89
  store i64 %69, i64* %70, align 8
  %71 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1, i64 0, i32 22
  %72 = load i32, i32* %71, align 8
  %73 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 83
  store i32 %72, i32* %73, align 4
  %74 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1, i64 0, i32 23
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 82
  store i32 %75, i32* %76, align 8
  %77 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1, i64 0, i32 24
  %78 = load i32, i32* %77, align 8
  %79 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 87
  store i32 %78, i32* %79, align 4
  %80 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1, i64 0, i32 25
  %81 = load i32, i32* %80, align 4
  %82 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 85
  store i32 %81, i32* %82, align 4
  %83 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1, i64 0, i32 26
  %84 = load i32, i32* %83, align 8
  %85 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 162
  store i32 %84, i32* %85, align 4
  %86 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 19
  store i32 %84, i32* %86, align 8
  %87 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1, i64 0, i32 27
  %88 = load i32, i32* %87, align 4
  %89 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 184
  store i32 %88, i32* %89, align 4
  %90 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1, i64 0, i32 28
  %91 = load i32, i32* %90, align 8
  %92 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 174
  store i32 %91, i32* %92, align 8
  br label %100

93:                                               ; preds = %2
  %94 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1, i64 0, i32 11
  %95 = load i32, i32* %94, align 8
  %96 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 20
  store i32 %95, i32* %96, align 4
  %97 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1, i64 0, i32 12
  %98 = load i32, i32* %97, align 4
  %99 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 21
  store i32 %98, i32* %99, align 8
  br label %100

100:                                              ; preds = %2, %93, %64, %28
  %101 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1, i64 0, i32 3
  %102 = load i8*, i8** %101, align 8
  %103 = icmp eq i8* %102, null
  br i1 %103, label %118, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 15
  %106 = bitcast i8** %105 to i8*
  tail call void @av_freep(i8* %106) #17
  %107 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1, i64 0, i32 4
  %108 = load i32, i32* %107, align 8
  %109 = add nsw i32 %108, 64
  %110 = sext i32 %109 to i64
  %111 = tail call noalias i8* @av_mallocz(i64 %110) #17
  store i8* %111, i8** %105, align 8
  %112 = icmp eq i8* %111, null
  br i1 %112, label %118, label %113

113:                                              ; preds = %104
  %114 = load i8*, i8** %101, align 8
  %115 = load i32, i32* %107, align 8
  %116 = sext i32 %115 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %111, i8* align 1 %114, i64 %116, i1 false)
  %117 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 16
  store i32 %115, i32* %117, align 8
  br label %118

118:                                              ; preds = %113, %100, %104
  %119 = phi i32 [ -12, %104 ], [ 0, %100 ], [ 0, %113 ]
  ret i32 %119
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ff_alloc_timecode_sei(%struct.AVFrame*, i64, i64, i8** nocapture, i64* nocapture) local_unnamed_addr #0 {
  %6 = icmp eq %struct.AVFrame* %0, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %5
  %8 = tail call %struct.AVFrameSideData* @av_frame_get_side_data(%struct.AVFrame* nonnull %0, i32 18) #17
  %9 = icmp eq %struct.AVFrameSideData* %8, null
  br i1 %9, label %10, label %11

10:                                               ; preds = %5, %7
  store i8* null, i8** %3, align 8
  br label %407

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.AVFrameSideData, %struct.AVFrameSideData* %8, i64 0, i32 1
  %13 = bitcast i8** %12 to i32**
  %14 = load i32*, i32** %13, align 8
  %15 = load i32, i32* %14, align 4
  %16 = and i32 %15, 3
  store i64 16, i64* %4, align 8
  %17 = add i64 %2, 16
  %18 = tail call noalias i8* @av_mallocz(i64 %17) #17
  store i8* %18, i8** %3, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %407, label %20

20:                                               ; preds = %11
  %21 = getelementptr inbounds i8, i8* %18, i64 %2
  %22 = load i64, i64* %4, align 8
  %23 = trunc i64 %22 to i32
  %24 = icmp slt i32 %23, 0
  %25 = select i1 %24, i8* null, i8* %21
  %26 = and i64 %22, 4294967295
  %27 = select i1 %24, i64 0, i64 %26
  %28 = getelementptr inbounds i8, i8* %25, i64 %27
  %29 = ptrtoint i8* %28 to i64
  %30 = icmp eq i32 %16, 0
  br i1 %30, label %56, label %31

31:                                               ; preds = %20
  %32 = zext i32 %16 to i64
  %33 = ptrtoint i8* %25 to i64
  %34 = trunc i64 %1 to i32
  %35 = shl i64 %1, 32
  %36 = ashr exact i64 %35, 32
  %37 = ashr i64 %1, 32
  %38 = mul nsw i64 %37, -30
  %39 = add nsw i64 %36, %38
  %40 = icmp eq i64 %39, 0
  %41 = xor i64 %39, %37
  %42 = ashr i64 %41, 63
  %43 = trunc i64 %42 to i32
  %44 = icmp ugt i32 %43, 1
  %45 = mul nsw i64 %37, 50
  %46 = icmp eq i64 %36, %45
  %47 = icmp ugt i64 %1, 4294967295
  %48 = icmp eq i32 %34, 0
  %49 = icmp sgt i32 %34, -1
  %50 = add nuw nsw i32 %16, 1
  %51 = zext i32 %50 to i64
  %52 = or i1 %40, %44
  br label %75

53:                                               ; preds = %400
  %54 = inttoptr i64 %402 to i8*
  %55 = icmp slt i32 %404, 64
  br i1 %55, label %56, label %407

56:                                               ; preds = %20, %53
  %57 = phi i8* [ %54, %53 ], [ %25, %20 ]
  %58 = phi i64 [ %403, %53 ], [ 0, %20 ]
  %59 = phi i32 [ %404, %53 ], [ 62, %20 ]
  %60 = zext i32 %59 to i64
  %61 = shl i64 %58, %60
  br label %62

62:                                               ; preds = %68, %56
  %63 = phi i32 [ %59, %56 ], [ %73, %68 ]
  %64 = phi i8* [ %57, %56 ], [ %71, %68 ]
  %65 = phi i64 [ %61, %56 ], [ %72, %68 ]
  %66 = icmp ult i8* %64, %28
  br i1 %66, label %68, label %67

67:                                               ; preds = %62
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.90, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.91, i64 0, i64 0), i32 124) #17
  tail call void @abort() #18
  unreachable

68:                                               ; preds = %62
  %69 = lshr i64 %65, 56
  %70 = trunc i64 %69 to i8
  %71 = getelementptr inbounds i8, i8* %64, i64 1
  store i8 %70, i8* %64, align 1
  %72 = shl i64 %65, 8
  %73 = add nsw i32 %63, 8
  %74 = icmp slt i32 %73, 64
  br i1 %74, label %62, label %407

75:                                               ; preds = %400, %31
  %76 = phi i64 [ %405, %400 ], [ 1, %31 ]
  %77 = phi i64 [ %403, %400 ], [ %32, %31 ]
  %78 = phi i64 [ %402, %400 ], [ %33, %31 ]
  %79 = phi i32 [ %404, %400 ], [ 62, %31 ]
  %80 = getelementptr inbounds i32, i32* %14, i64 %76
  %81 = load i32, i32* %80, align 4
  %82 = and i32 %81, 15
  %83 = icmp ugt i32 %82, 9
  br i1 %83, label %89, label %84

84:                                               ; preds = %75
  %85 = lshr i32 %81, 4
  %86 = and i32 %85, 3
  %87 = mul nuw nsw i32 %86, 10
  %88 = add nuw nsw i32 %87, %82
  br label %89

89:                                               ; preds = %75, %84
  %90 = phi i32 [ %88, %84 ], [ 0, %75 ]
  %91 = lshr i32 %81, 8
  %92 = and i32 %91, 15
  %93 = icmp ugt i32 %92, 9
  br i1 %93, label %99, label %94

94:                                               ; preds = %89
  %95 = lshr i32 %81, 12
  %96 = and i32 %95, 7
  %97 = mul nuw nsw i32 %96, 10
  %98 = add nuw nsw i32 %97, %92
  br label %99

99:                                               ; preds = %89, %94
  %100 = phi i32 [ %98, %94 ], [ 0, %89 ]
  %101 = lshr i32 %81, 16
  %102 = and i32 %101, 15
  %103 = icmp ugt i32 %102, 9
  br i1 %103, label %109, label %104

104:                                              ; preds = %99
  %105 = lshr i32 %81, 20
  %106 = and i32 %105, 7
  %107 = mul nuw nsw i32 %106, 10
  %108 = add nuw nsw i32 %107, %102
  br label %109

109:                                              ; preds = %99, %104
  %110 = phi i32 [ %108, %104 ], [ 0, %99 ]
  %111 = lshr i32 %81, 24
  %112 = and i32 %111, 15
  %113 = icmp ugt i32 %112, 9
  br i1 %113, label %119, label %114

114:                                              ; preds = %109
  %115 = lshr i32 %81, 28
  %116 = and i32 %115, 3
  %117 = mul nuw nsw i32 %116, 10
  %118 = add nuw nsw i32 %117, %112
  br label %119

119:                                              ; preds = %109, %114
  %120 = phi i32 [ %118, %114 ], [ 0, %109 ]
  %121 = lshr i32 %81, 30
  %122 = and i32 %121, 1
  br i1 %52, label %138, label %123

123:                                              ; preds = %119
  %124 = shl nsw i32 %120, 1
  br i1 %46, label %125, label %127

125:                                              ; preds = %123
  br i1 %47, label %131, label %126

126:                                              ; preds = %125
  br i1 %48, label %127, label %129

127:                                              ; preds = %126, %123
  %128 = lshr i32 %81, 23
  br label %133

129:                                              ; preds = %126
  %130 = lshr i32 %81, 23
  br i1 %49, label %131, label %133

131:                                              ; preds = %125, %129
  %132 = lshr i32 %81, 7
  br label %133

133:                                              ; preds = %127, %129, %131
  %134 = phi i32 [ %132, %131 ], [ %130, %129 ], [ %128, %127 ]
  %135 = and i32 %134, 1
  %136 = and i32 %124, 126
  %137 = or i32 %135, %136
  br label %138

138:                                              ; preds = %119, %133
  %139 = phi i32 [ %137, %133 ], [ %120, %119 ]
  %140 = icmp sgt i32 %79, 1
  br i1 %140, label %141, label %144

141:                                              ; preds = %138
  %142 = shl i64 %77, 1
  %143 = or i64 %142, 1
  br label %160

144:                                              ; preds = %138
  %145 = sub i64 %29, %78
  %146 = icmp ugt i64 %145, 7
  br i1 %146, label %147, label %159

147:                                              ; preds = %144
  %148 = inttoptr i64 %78 to i8*
  %149 = zext i32 %79 to i64
  %150 = shl i64 %77, %149
  %151 = sub nsw i32 1, %79
  %152 = zext i32 %151 to i64
  %153 = lshr i64 1, %152
  %154 = or i64 %153, %150
  %155 = tail call i64 asm "bswap  $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i64 %154) #4, !srcloc !6
  %156 = inttoptr i64 %78 to i64*
  store i64 %155, i64* %156, align 1
  %157 = getelementptr inbounds i8, i8* %148, i64 8
  %158 = ptrtoint i8* %157 to i64
  br label %160

159:                                              ; preds = %144
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.89, i64 0, i64 0)) #17
  br label %160

160:                                              ; preds = %147, %159, %141
  %161 = phi i32 [ -1, %141 ], [ 63, %159 ], [ 63, %147 ]
  %162 = phi i64 [ %78, %141 ], [ %78, %159 ], [ %158, %147 ]
  %163 = phi i64 [ %143, %141 ], [ 1, %159 ], [ 1, %147 ]
  %164 = add nsw i32 %79, %161
  %165 = icmp sgt i32 %164, 1
  br i1 %165, label %166, label %169

166:                                              ; preds = %160
  %167 = shl i64 %163, 1
  %168 = or i64 %167, 1
  br label %185

169:                                              ; preds = %160
  %170 = sub i64 %29, %162
  %171 = icmp ugt i64 %170, 7
  br i1 %171, label %172, label %184

172:                                              ; preds = %169
  %173 = inttoptr i64 %162 to i8*
  %174 = zext i32 %164 to i64
  %175 = shl i64 %163, %174
  %176 = sub nsw i32 1, %164
  %177 = zext i32 %176 to i64
  %178 = lshr i64 1, %177
  %179 = or i64 %178, %175
  %180 = tail call i64 asm "bswap  $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i64 %179) #4, !srcloc !6
  %181 = inttoptr i64 %162 to i64*
  store i64 %180, i64* %181, align 1
  %182 = getelementptr inbounds i8, i8* %173, i64 8
  %183 = ptrtoint i8* %182 to i64
  br label %185

184:                                              ; preds = %169
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.89, i64 0, i64 0)) #17
  br label %185

185:                                              ; preds = %172, %184, %166
  %186 = phi i32 [ -1, %166 ], [ 63, %184 ], [ 63, %172 ]
  %187 = phi i64 [ %162, %166 ], [ %162, %184 ], [ %183, %172 ]
  %188 = phi i64 [ %168, %166 ], [ 1, %184 ], [ 1, %172 ]
  %189 = add nsw i32 %164, %186
  %190 = icmp sgt i32 %189, 5
  br i1 %190, label %191, label %193

191:                                              ; preds = %185
  %192 = shl i64 %188, 5
  br label %205

193:                                              ; preds = %185
  %194 = sub i64 %29, %187
  %195 = icmp ugt i64 %194, 7
  br i1 %195, label %196, label %204

196:                                              ; preds = %193
  %197 = inttoptr i64 %187 to i8*
  %198 = zext i32 %189 to i64
  %199 = shl i64 %188, %198
  %200 = tail call i64 asm "bswap  $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i64 %199) #4, !srcloc !6
  %201 = inttoptr i64 %187 to i64*
  store i64 %200, i64* %201, align 1
  %202 = getelementptr inbounds i8, i8* %197, i64 8
  %203 = ptrtoint i8* %202 to i64
  br label %205

204:                                              ; preds = %193
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.89, i64 0, i64 0)) #17
  br label %205

205:                                              ; preds = %196, %204, %191
  %206 = phi i32 [ -5, %191 ], [ 59, %204 ], [ 59, %196 ]
  %207 = phi i64 [ %187, %191 ], [ %187, %204 ], [ %203, %196 ]
  %208 = phi i64 [ %192, %191 ], [ 0, %204 ], [ 0, %196 ]
  %209 = add nsw i32 %189, %206
  %210 = icmp sgt i32 %209, 1
  br i1 %210, label %211, label %214

211:                                              ; preds = %205
  %212 = shl i64 %208, 1
  %213 = or i64 %212, 1
  br label %230

214:                                              ; preds = %205
  %215 = sub i64 %29, %207
  %216 = icmp ugt i64 %215, 7
  br i1 %216, label %217, label %229

217:                                              ; preds = %214
  %218 = inttoptr i64 %207 to i8*
  %219 = zext i32 %209 to i64
  %220 = shl i64 %208, %219
  %221 = sub nsw i32 1, %209
  %222 = zext i32 %221 to i64
  %223 = lshr i64 1, %222
  %224 = or i64 %223, %220
  %225 = tail call i64 asm "bswap  $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i64 %224) #4, !srcloc !6
  %226 = inttoptr i64 %207 to i64*
  store i64 %225, i64* %226, align 1
  %227 = getelementptr inbounds i8, i8* %218, i64 8
  %228 = ptrtoint i8* %227 to i64
  br label %230

229:                                              ; preds = %214
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.89, i64 0, i64 0)) #17
  br label %230

230:                                              ; preds = %217, %229, %211
  %231 = phi i32 [ -1, %211 ], [ 63, %229 ], [ 63, %217 ]
  %232 = phi i64 [ %207, %211 ], [ %207, %229 ], [ %228, %217 ]
  %233 = phi i64 [ %213, %211 ], [ 1, %229 ], [ 1, %217 ]
  %234 = add nsw i32 %209, %231
  %235 = icmp sgt i32 %234, 1
  br i1 %235, label %236, label %238

236:                                              ; preds = %230
  %237 = shl i64 %233, 1
  br label %250

238:                                              ; preds = %230
  %239 = sub i64 %29, %232
  %240 = icmp ugt i64 %239, 7
  br i1 %240, label %241, label %249

241:                                              ; preds = %238
  %242 = inttoptr i64 %232 to i8*
  %243 = zext i32 %234 to i64
  %244 = shl i64 %233, %243
  %245 = tail call i64 asm "bswap  $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i64 %244) #4, !srcloc !6
  %246 = inttoptr i64 %232 to i64*
  store i64 %245, i64* %246, align 1
  %247 = getelementptr inbounds i8, i8* %242, i64 8
  %248 = ptrtoint i8* %247 to i64
  br label %250

249:                                              ; preds = %238
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.89, i64 0, i64 0)) #17
  br label %250

250:                                              ; preds = %241, %249, %236
  %251 = phi i32 [ -1, %236 ], [ 63, %249 ], [ 63, %241 ]
  %252 = phi i64 [ %232, %236 ], [ %232, %249 ], [ %248, %241 ]
  %253 = phi i64 [ %237, %236 ], [ 0, %249 ], [ 0, %241 ]
  %254 = add nsw i32 %234, %251
  %255 = zext i32 %122 to i64
  %256 = icmp sgt i32 %254, 1
  br i1 %256, label %257, label %260

257:                                              ; preds = %250
  %258 = shl i64 %253, 1
  %259 = or i64 %258, %255
  br label %276

260:                                              ; preds = %250
  %261 = sub i64 %29, %252
  %262 = icmp ugt i64 %261, 7
  br i1 %262, label %263, label %275

263:                                              ; preds = %260
  %264 = inttoptr i64 %252 to i8*
  %265 = zext i32 %254 to i64
  %266 = shl i64 %253, %265
  %267 = sub nsw i32 1, %254
  %268 = zext i32 %267 to i64
  %269 = lshr i64 %255, %268
  %270 = or i64 %269, %266
  %271 = tail call i64 asm "bswap  $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i64 %270) #4, !srcloc !6
  %272 = inttoptr i64 %252 to i64*
  store i64 %271, i64* %272, align 1
  %273 = getelementptr inbounds i8, i8* %264, i64 8
  %274 = ptrtoint i8* %273 to i64
  br label %276

275:                                              ; preds = %260
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.89, i64 0, i64 0)) #17
  br label %276

276:                                              ; preds = %263, %275, %257
  %277 = phi i32 [ -1, %257 ], [ 63, %275 ], [ 63, %263 ]
  %278 = phi i64 [ %252, %257 ], [ %252, %275 ], [ %274, %263 ]
  %279 = phi i64 [ %259, %257 ], [ %255, %275 ], [ %255, %263 ]
  %280 = add nsw i32 %254, %277
  %281 = zext i32 %139 to i64
  %282 = icmp sgt i32 %280, 9
  br i1 %282, label %283, label %286

283:                                              ; preds = %276
  %284 = shl i64 %279, 9
  %285 = or i64 %284, %281
  br label %302

286:                                              ; preds = %276
  %287 = sub i64 %29, %278
  %288 = icmp ugt i64 %287, 7
  br i1 %288, label %289, label %301

289:                                              ; preds = %286
  %290 = inttoptr i64 %278 to i8*
  %291 = zext i32 %280 to i64
  %292 = shl i64 %279, %291
  %293 = sub nsw i32 9, %280
  %294 = zext i32 %293 to i64
  %295 = lshr i64 %281, %294
  %296 = or i64 %295, %292
  %297 = tail call i64 asm "bswap  $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i64 %296) #4, !srcloc !6
  %298 = inttoptr i64 %278 to i64*
  store i64 %297, i64* %298, align 1
  %299 = getelementptr inbounds i8, i8* %290, i64 8
  %300 = ptrtoint i8* %299 to i64
  br label %302

301:                                              ; preds = %286
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.89, i64 0, i64 0)) #17
  br label %302

302:                                              ; preds = %289, %301, %283
  %303 = phi i32 [ -9, %283 ], [ 55, %301 ], [ 55, %289 ]
  %304 = phi i64 [ %278, %283 ], [ %278, %301 ], [ %300, %289 ]
  %305 = phi i64 [ %285, %283 ], [ %281, %301 ], [ %281, %289 ]
  %306 = add nsw i32 %280, %303
  %307 = zext i32 %110 to i64
  %308 = icmp sgt i32 %306, 6
  br i1 %308, label %309, label %312

309:                                              ; preds = %302
  %310 = shl i64 %305, 6
  %311 = or i64 %310, %307
  br label %328

312:                                              ; preds = %302
  %313 = sub i64 %29, %304
  %314 = icmp ugt i64 %313, 7
  br i1 %314, label %315, label %327

315:                                              ; preds = %312
  %316 = inttoptr i64 %304 to i8*
  %317 = zext i32 %306 to i64
  %318 = shl i64 %305, %317
  %319 = sub nsw i32 6, %306
  %320 = zext i32 %319 to i64
  %321 = lshr i64 %307, %320
  %322 = or i64 %321, %318
  %323 = tail call i64 asm "bswap  $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i64 %322) #4, !srcloc !6
  %324 = inttoptr i64 %304 to i64*
  store i64 %323, i64* %324, align 1
  %325 = getelementptr inbounds i8, i8* %316, i64 8
  %326 = ptrtoint i8* %325 to i64
  br label %328

327:                                              ; preds = %312
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.89, i64 0, i64 0)) #17
  br label %328

328:                                              ; preds = %315, %327, %309
  %329 = phi i32 [ -6, %309 ], [ 58, %327 ], [ 58, %315 ]
  %330 = phi i64 [ %304, %309 ], [ %304, %327 ], [ %326, %315 ]
  %331 = phi i64 [ %311, %309 ], [ %307, %327 ], [ %307, %315 ]
  %332 = add nsw i32 %306, %329
  %333 = zext i32 %100 to i64
  %334 = icmp sgt i32 %332, 6
  br i1 %334, label %335, label %338

335:                                              ; preds = %328
  %336 = shl i64 %331, 6
  %337 = or i64 %336, %333
  br label %354

338:                                              ; preds = %328
  %339 = sub i64 %29, %330
  %340 = icmp ugt i64 %339, 7
  br i1 %340, label %341, label %353

341:                                              ; preds = %338
  %342 = inttoptr i64 %330 to i8*
  %343 = zext i32 %332 to i64
  %344 = shl i64 %331, %343
  %345 = sub nsw i32 6, %332
  %346 = zext i32 %345 to i64
  %347 = lshr i64 %333, %346
  %348 = or i64 %347, %344
  %349 = tail call i64 asm "bswap  $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i64 %348) #4, !srcloc !6
  %350 = inttoptr i64 %330 to i64*
  store i64 %349, i64* %350, align 1
  %351 = getelementptr inbounds i8, i8* %342, i64 8
  %352 = ptrtoint i8* %351 to i64
  br label %354

353:                                              ; preds = %338
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.89, i64 0, i64 0)) #17
  br label %354

354:                                              ; preds = %341, %353, %335
  %355 = phi i32 [ -6, %335 ], [ 58, %353 ], [ 58, %341 ]
  %356 = phi i64 [ %330, %335 ], [ %330, %353 ], [ %352, %341 ]
  %357 = phi i64 [ %337, %335 ], [ %333, %353 ], [ %333, %341 ]
  %358 = add nsw i32 %332, %355
  %359 = zext i32 %90 to i64
  %360 = icmp sgt i32 %358, 5
  br i1 %360, label %361, label %364

361:                                              ; preds = %354
  %362 = shl i64 %357, 5
  %363 = or i64 %362, %359
  br label %380

364:                                              ; preds = %354
  %365 = sub i64 %29, %356
  %366 = icmp ugt i64 %365, 7
  br i1 %366, label %367, label %379

367:                                              ; preds = %364
  %368 = inttoptr i64 %356 to i8*
  %369 = zext i32 %358 to i64
  %370 = shl i64 %357, %369
  %371 = sub nsw i32 5, %358
  %372 = zext i32 %371 to i64
  %373 = lshr i64 %359, %372
  %374 = or i64 %373, %370
  %375 = tail call i64 asm "bswap  $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i64 %374) #4, !srcloc !6
  %376 = inttoptr i64 %356 to i64*
  store i64 %375, i64* %376, align 1
  %377 = getelementptr inbounds i8, i8* %368, i64 8
  %378 = ptrtoint i8* %377 to i64
  br label %380

379:                                              ; preds = %364
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.89, i64 0, i64 0)) #17
  br label %380

380:                                              ; preds = %367, %379, %361
  %381 = phi i32 [ -5, %361 ], [ 59, %379 ], [ 59, %367 ]
  %382 = phi i64 [ %356, %361 ], [ %356, %379 ], [ %378, %367 ]
  %383 = phi i64 [ %363, %361 ], [ %359, %379 ], [ %359, %367 ]
  %384 = add nsw i32 %358, %381
  %385 = icmp sgt i32 %384, 5
  br i1 %385, label %386, label %388

386:                                              ; preds = %380
  %387 = shl i64 %383, 5
  br label %400

388:                                              ; preds = %380
  %389 = sub i64 %29, %382
  %390 = icmp ugt i64 %389, 7
  br i1 %390, label %391, label %399

391:                                              ; preds = %388
  %392 = inttoptr i64 %382 to i8*
  %393 = zext i32 %384 to i64
  %394 = shl i64 %383, %393
  %395 = tail call i64 asm "bswap  $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i64 %394) #4, !srcloc !6
  %396 = inttoptr i64 %382 to i64*
  store i64 %395, i64* %396, align 1
  %397 = getelementptr inbounds i8, i8* %392, i64 8
  %398 = ptrtoint i8* %397 to i64
  br label %400

399:                                              ; preds = %388
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.89, i64 0, i64 0)) #17
  br label %400

400:                                              ; preds = %391, %399, %386
  %401 = phi i32 [ -5, %386 ], [ 59, %399 ], [ 59, %391 ]
  %402 = phi i64 [ %382, %386 ], [ %382, %399 ], [ %398, %391 ]
  %403 = phi i64 [ %387, %386 ], [ 0, %399 ], [ 0, %391 ]
  %404 = add nsw i32 %384, %401
  %405 = add nuw nsw i64 %76, 1
  %406 = icmp eq i64 %405, %51
  br i1 %406, label %53, label %75

407:                                              ; preds = %68, %53, %11, %10
  %408 = phi i32 [ 0, %10 ], [ -12, %11 ], [ 0, %53 ], [ 0, %68 ]
  ret i32 %408
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @ff_guess_coded_bitrate(%struct.AVCodecContext* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 163, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 163, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 142
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %3, 0
  %9 = icmp eq i32 %5, 0
  %10 = or i1 %8, %9
  br i1 %10, label %11, label %18

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 17
  %13 = bitcast %struct.AVRational* %12 to i64*
  %14 = load i64, i64* %13, align 4
  %15 = lshr i64 %14, 32
  %16 = trunc i64 %15 to i32
  %17 = trunc i64 %14 to i32
  br label %18

18:                                               ; preds = %1, %11
  %19 = phi i32 [ %16, %11 ], [ %3, %1 ]
  %20 = phi i32 [ %17, %11 ], [ %5, %1 ]
  %21 = icmp eq i32 %19, 0
  %22 = icmp eq i32 %20, 0
  %23 = or i1 %21, %22
  br i1 %23, label %46, label %24

24:                                               ; preds = %18
  %25 = icmp eq i32 %7, 0
  br i1 %25, label %26, label %31

26:                                               ; preds = %24
  %27 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 25
  %28 = load i32, i32* %27, align 8
  %29 = tail call %struct.AVPixFmtDescriptor* @av_pix_fmt_desc_get(i32 %28) #17
  %30 = tail call i32 @av_get_bits_per_pixel(%struct.AVPixFmtDescriptor* %29) #17
  br label %31

31:                                               ; preds = %24, %26
  %32 = phi i32 [ %7, %24 ], [ %30, %26 ]
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 20
  %35 = load i32, i32* %34, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 21
  %38 = load i32, i32* %37, align 8
  %39 = sext i32 %38 to i64
  %40 = sext i32 %19 to i64
  %41 = mul nsw i64 %33, %40
  %42 = mul i64 %41, %36
  %43 = mul i64 %42, %39
  %44 = sext i32 %20 to i64
  %45 = sdiv i64 %43, %44
  br label %46

46:                                               ; preds = %18, %31
  %47 = phi i64 [ %45, %31 ], [ 0, %18 ]
  ret i64 %47
}

declare i32 @av_get_bits_per_pixel(%struct.AVPixFmtDescriptor*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ff_int_from_list_or_default(i8*, i8*, i32, i32* nocapture readonly, i32) local_unnamed_addr #0 {
  %6 = load i32, i32* %3, align 4
  %7 = icmp eq i32 %6, 2147483647
  br i1 %7, label %17, label %12

8:                                                ; preds = %12
  %9 = getelementptr inbounds i32, i32* %3, i64 %16
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 2147483647
  br i1 %11, label %17, label %12

12:                                               ; preds = %5, %8
  %13 = phi i64 [ %16, %8 ], [ 0, %5 ]
  %14 = phi i32 [ %10, %8 ], [ %6, %5 ]
  %15 = icmp eq i32 %14, %2
  %16 = add nuw i64 %13, 1
  br i1 %15, label %18, label %8

17:                                               ; preds = %8, %5
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 48, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.86, i64 0, i64 0), i8* %1, i32 %2, i32 %4) #17
  br label %18

18:                                               ; preds = %12, %17
  %19 = phi i32 [ %4, %17 ], [ %2, %12 ]
  ret i32 %19
}

; Function Attrs: nounwind
declare i32 @pthread_mutex_lock(%union.pthread_mutex_t*) local_unnamed_addr #15

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #15

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.usub.sat.i64(i64, i64) #16

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { cold nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind readnone speculatable }
attributes #17 = { nounwind }
attributes #18 = { noreturn nounwind }
attributes #19 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = !{i32 1339421}
!5 = !{i32 2143977}
!6 = !{i32 2144135}
