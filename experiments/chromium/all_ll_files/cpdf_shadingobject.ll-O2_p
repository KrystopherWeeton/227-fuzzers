; ModuleID = '../../third_party/pdfium/core/fpdfapi/page/cpdf_shadingobject.cpp'
source_filename = "../../third_party/pdfium/core/fpdfapi/page/cpdf_shadingobject.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CPDF_ShadingObject = type { %class.CPDF_PageObject, %"class.fxcrt::RetainPtr.122", %class.CFX_Matrix }
%class.CPDF_PageObject = type { %class.CPDF_GraphicStates, %class.CFX_FloatRect, %class.CPDF_ContentMarks, i8, i32 }
%class.CPDF_GraphicStates = type { i32 (...)**, %class.CPDF_ClipPath, %class.CFX_GraphState, %class.CPDF_ColorState, %class.CPDF_TextState, %class.CPDF_GeneralState }
%class.CPDF_ClipPath = type { %"class.fxcrt::SharedCopyOnWrite" }
%"class.fxcrt::SharedCopyOnWrite" = type { %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.CPDF_ClipPath::PathData"* }
%"class.CPDF_ClipPath::PathData" = type { %"class.fxcrt::Retainable", %"class.std::__1::vector", %"class.std::__1::vector.3" }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.0" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { %"class.std::__1::unique_ptr.5"*, %"class.std::__1::unique_ptr.5"*, %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::unique_ptr.5" = type opaque
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::unique_ptr.5"* }
%class.CFX_GraphState = type { %"class.fxcrt::SharedCopyOnWrite.12" }
%"class.fxcrt::SharedCopyOnWrite.12" = type { %"class.fxcrt::RetainPtr.13" }
%"class.fxcrt::RetainPtr.13" = type { %"class.std::__1::unique_ptr.14" }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %class.CFX_RetainableGraphStateData* }
%class.CFX_RetainableGraphStateData = type { %"class.fxcrt::Retainable", %class.CFX_GraphStateData }
%class.CFX_GraphStateData = type { i8, i8, float, float, float, %"class.std::__1::vector.17" }
%"class.std::__1::vector.17" = type { %"class.std::__1::__vector_base.18" }
%"class.std::__1::__vector_base.18" = type { float*, float*, %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { float* }
%class.CPDF_ColorState = type { %"class.fxcrt::SharedCopyOnWrite.26" }
%"class.fxcrt::SharedCopyOnWrite.26" = type { %"class.fxcrt::RetainPtr.27" }
%"class.fxcrt::RetainPtr.27" = type { %"class.std::__1::unique_ptr.28" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.CPDF_ColorState::ColorData"* }
%"class.CPDF_ColorState::ColorData" = type { %"class.fxcrt::Retainable", i32, i32, %class.CPDF_Color, %class.CPDF_Color }
%class.CPDF_Color = type { %"class.std::__1::vector.17", %"class.std::__1::unique_ptr.31", %"class.fxcrt::RetainPtr.55" }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %class.PatternValue* }
%class.PatternValue = type { %"class.fxcrt::RetainPtr.34", %"struct.std::__1::array" }
%"class.fxcrt::RetainPtr.34" = type { %"class.std::__1::unique_ptr.35" }
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %class.CPDF_Pattern* }
%class.CPDF_Pattern = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.fxcrt::UnownedPtr", %"class.fxcrt::RetainPtr.46", %class.CFX_Matrix, %class.CFX_Matrix }
%"class.fxcrt::Observable" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.38", %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { i64 }
%"class.fxcrt::UnownedPtr" = type { %class.CPDF_Document* }
%class.CPDF_Document = type opaque
%"class.fxcrt::RetainPtr.46" = type { %"class.std::__1::unique_ptr.47" }
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %class.CPDF_Object* }
%class.CPDF_Object = type opaque
%"struct.std::__1::array" = type { [16 x float] }
%"class.fxcrt::RetainPtr.55" = type { %"class.std::__1::unique_ptr.56" }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %class.CPDF_ColorSpace* }
%class.CPDF_ColorSpace = type <{ %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.fxcrt::UnownedPtr.59", %"class.fxcrt::RetainPtr.60", i32, i32, i32, [4 x i8] }>
%"class.fxcrt::UnownedPtr.59" = type { %class.CPDF_Document* }
%"class.fxcrt::RetainPtr.60" = type { %"class.std::__1::unique_ptr.61" }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %class.CPDF_Array* }
%class.CPDF_Array = type opaque
%class.CPDF_TextState = type { %"class.fxcrt::SharedCopyOnWrite.70" }
%"class.fxcrt::SharedCopyOnWrite.70" = type { %"class.fxcrt::RetainPtr.71" }
%"class.fxcrt::RetainPtr.71" = type { %"class.std::__1::unique_ptr.72" }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.CPDF_TextState::TextData"* }
%"class.CPDF_TextState::TextData" = type { %"class.fxcrt::Retainable", %"class.fxcrt::RetainPtr.75", %"class.fxcrt::UnownedPtr.59", float, float, float, i32, [4 x float], [4 x float] }
%"class.fxcrt::RetainPtr.75" = type { %"class.std::__1::unique_ptr.76" }
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %class.CPDF_Font* }
%class.CPDF_Font = type opaque
%class.CPDF_GeneralState = type { %"class.fxcrt::SharedCopyOnWrite.83" }
%"class.fxcrt::SharedCopyOnWrite.83" = type { %"class.fxcrt::RetainPtr.84" }
%"class.fxcrt::RetainPtr.84" = type { %"class.std::__1::unique_ptr.85" }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.CPDF_GeneralState::StateData"* }
%"class.CPDF_GeneralState::StateData" = type { %"class.fxcrt::Retainable", %"class.fxcrt::ByteString", i32, %"class.fxcrt::RetainPtr.46", %class.CFX_Matrix, float, float, %"class.fxcrt::RetainPtr.94", %"class.fxcrt::RetainPtr.100", %class.CFX_Matrix, i32, i8, i8, i8, i8, i8, i32, %"class.fxcrt::RetainPtr.94", %"class.fxcrt::RetainPtr.94", %"class.fxcrt::RetainPtr.94", float, float }
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr.88" }
%"class.fxcrt::RetainPtr.88" = type { %"class.std::__1::unique_ptr.89" }
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%"class.fxcrt::RetainPtr.100" = type { %"class.std::__1::unique_ptr.101" }
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %class.CPDF_TransferFunc* }
%class.CPDF_TransferFunc = type opaque
%"class.fxcrt::RetainPtr.94" = type { %"class.std::__1::unique_ptr.95" }
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %class.CPDF_Object* }
%class.CFX_FloatRect = type { float, float, float, float }
%class.CPDF_ContentMarks = type { %"class.fxcrt::RetainPtr.108" }
%"class.fxcrt::RetainPtr.108" = type { %"class.std::__1::unique_ptr.109" }
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.CPDF_ContentMarks::MarkData"* }
%"class.CPDF_ContentMarks::MarkData" = type { %"class.fxcrt::Retainable", %"class.std::__1::vector.112" }
%"class.std::__1::vector.112" = type { %"class.std::__1::__vector_base.113" }
%"class.std::__1::__vector_base.113" = type { %"class.fxcrt::RetainPtr.114"*, %"class.fxcrt::RetainPtr.114"*, %"class.std::__1::__compressed_pair.115" }
%"class.fxcrt::RetainPtr.114" = type opaque
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.fxcrt::RetainPtr.114"* }
%"class.fxcrt::RetainPtr.122" = type { %"class.std::__1::unique_ptr.123" }
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %class.CPDF_ShadingPattern* }
%class.CFX_Matrix = type { float, float, float, float, float, float }
%class.CPDF_ShadingPattern = type { %class.CPDF_Pattern, i32, i8, %"class.fxcrt::RetainPtr.55", %"class.std::__1::vector.126" }
%"class.std::__1::vector.126" = type { %"class.std::__1::__vector_base.127" }
%"class.std::__1::__vector_base.127" = type { %"class.std::__1::unique_ptr.128"*, %"class.std::__1::unique_ptr.128"*, %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::unique_ptr.128" = type opaque
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.std::__1::unique_ptr.128"* }
%class.CPDF_TextObject = type opaque
%class.CPDF_PathObject = type opaque
%class.CPDF_ImageObject = type opaque
%class.CPDF_FormObject = type opaque

@_ZTV18CPDF_ShadingObject = hidden unnamed_addr constant { [21 x i8*] } { [21 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CPDF_ShadingObject*)* @_ZN18CPDF_ShadingObjectD2Ev to i8*), i8* bitcast (void (%class.CPDF_ShadingObject*)* @_ZN18CPDF_ShadingObjectD0Ev to i8*), i8* bitcast (i32 (%class.CPDF_ShadingObject*)* @_ZNK18CPDF_ShadingObject7GetTypeEv to i8*), i8* bitcast (void (%class.CPDF_ShadingObject*, %class.CFX_Matrix*)* @_ZN18CPDF_ShadingObject9TransformERK10CFX_Matrix to i8*), i8* bitcast (i1 (%class.CPDF_PageObject*)* @_ZNK15CPDF_PageObject6IsTextEv to i8*), i8* bitcast (i1 (%class.CPDF_PageObject*)* @_ZNK15CPDF_PageObject6IsPathEv to i8*), i8* bitcast (i1 (%class.CPDF_PageObject*)* @_ZNK15CPDF_PageObject7IsImageEv to i8*), i8* bitcast (i1 (%class.CPDF_ShadingObject*)* @_ZNK18CPDF_ShadingObject9IsShadingEv to i8*), i8* bitcast (i1 (%class.CPDF_PageObject*)* @_ZNK15CPDF_PageObject6IsFormEv to i8*), i8* bitcast (%class.CPDF_TextObject* (%class.CPDF_PageObject*)* @_ZN15CPDF_PageObject6AsTextEv to i8*), i8* bitcast (%class.CPDF_TextObject* (%class.CPDF_PageObject*)* @_ZNK15CPDF_PageObject6AsTextEv to i8*), i8* bitcast (%class.CPDF_PathObject* (%class.CPDF_PageObject*)* @_ZN15CPDF_PageObject6AsPathEv to i8*), i8* bitcast (%class.CPDF_PathObject* (%class.CPDF_PageObject*)* @_ZNK15CPDF_PageObject6AsPathEv to i8*), i8* bitcast (%class.CPDF_ImageObject* (%class.CPDF_PageObject*)* @_ZN15CPDF_PageObject7AsImageEv to i8*), i8* bitcast (%class.CPDF_ImageObject* (%class.CPDF_PageObject*)* @_ZNK15CPDF_PageObject7AsImageEv to i8*), i8* bitcast (%class.CPDF_ShadingObject* (%class.CPDF_ShadingObject*)* @_ZN18CPDF_ShadingObject9AsShadingEv to i8*), i8* bitcast (%class.CPDF_ShadingObject* (%class.CPDF_ShadingObject*)* @_ZNK18CPDF_ShadingObject9AsShadingEv to i8*), i8* bitcast (%class.CPDF_FormObject* (%class.CPDF_PageObject*)* @_ZN15CPDF_PageObject6AsFormEv to i8*), i8* bitcast (%class.CPDF_FormObject* (%class.CPDF_PageObject*)* @_ZNK15CPDF_PageObject6AsFormEv to i8*)] }, align 8

@_ZN18CPDF_ShadingObjectC1EiP19CPDF_ShadingPatternRK10CFX_Matrix = hidden unnamed_addr alias void (%class.CPDF_ShadingObject*, i32, %class.CPDF_ShadingPattern*, %class.CFX_Matrix*), void (%class.CPDF_ShadingObject*, i32, %class.CPDF_ShadingPattern*, %class.CFX_Matrix*)* @_ZN18CPDF_ShadingObjectC2EiP19CPDF_ShadingPatternRK10CFX_Matrix
@_ZN18CPDF_ShadingObjectD1Ev = hidden unnamed_addr alias void (%class.CPDF_ShadingObject*), void (%class.CPDF_ShadingObject*)* @_ZN18CPDF_ShadingObjectD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CPDF_ShadingObjectC2EiP19CPDF_ShadingPatternRK10CFX_Matrix(%class.CPDF_ShadingObject*, i32, %class.CPDF_ShadingPattern*, %class.CFX_Matrix* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.CPDF_ShadingObject, %class.CPDF_ShadingObject* %0, i64 0, i32 0
  tail call void @_ZN15CPDF_PageObjectC2Ei(%class.CPDF_PageObject* %5, i32 %1) #6
  %6 = getelementptr inbounds %class.CPDF_ShadingObject, %class.CPDF_ShadingObject* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTV18CPDF_ShadingObject, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %class.CPDF_ShadingObject, %class.CPDF_ShadingObject* %0, i64 0, i32 1
  %8 = ptrtoint %class.CPDF_ShadingPattern* %2 to i64
  %9 = bitcast %"class.fxcrt::RetainPtr.122"* %7 to i64*
  store i64 %8, i64* %9, align 8
  %10 = icmp eq %class.CPDF_ShadingPattern* %2, null
  br i1 %10, label %15, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %class.CPDF_ShadingPattern, %class.CPDF_ShadingPattern* %2, i64 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = add nsw i64 %13, 1
  store i64 %14, i64* %12, align 8
  br label %15

15:                                               ; preds = %4, %11
  %16 = getelementptr inbounds %class.CPDF_ShadingObject, %class.CPDF_ShadingObject* %0, i64 0, i32 2
  %17 = bitcast %class.CFX_Matrix* %16 to i8*
  %18 = bitcast %class.CFX_Matrix* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 4 %18, i64 24, i1 false)
  ret void
}

declare void @_ZN15CPDF_PageObjectC2Ei(%class.CPDF_PageObject*, i32) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CPDF_ShadingObjectD2Ev(%class.CPDF_ShadingObject*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_ShadingObject, %class.CPDF_ShadingObject* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTV18CPDF_ShadingObject, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CPDF_ShadingObject, %class.CPDF_ShadingObject* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.CPDF_ShadingPattern*, %class.CPDF_ShadingPattern** %3, align 8
  store %class.CPDF_ShadingPattern* null, %class.CPDF_ShadingPattern** %3, align 8
  %5 = icmp eq %class.CPDF_ShadingPattern* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.CPDF_ShadingPattern, %class.CPDF_ShadingPattern* %4, i64 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = add nsw i64 %8, -1
  store i64 %9, i64* %7, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %11, label %17

11:                                               ; preds = %6
  %12 = getelementptr inbounds %class.CPDF_ShadingPattern, %class.CPDF_ShadingPattern* %4, i64 0, i32 0, i32 0
  %13 = bitcast %class.CPDF_ShadingPattern* %4 to void (%"class.fxcrt::Retainable"*)***
  %14 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %14, i64 1
  %16 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %15, align 8
  tail call void %16(%"class.fxcrt::Retainable"* nonnull %12) #6
  br label %17

17:                                               ; preds = %1, %6, %11
  %18 = getelementptr inbounds %class.CPDF_ShadingObject, %class.CPDF_ShadingObject* %0, i64 0, i32 0
  tail call void @_ZN15CPDF_PageObjectD2Ev(%class.CPDF_PageObject* %18) #6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN15CPDF_PageObjectD2Ev(%class.CPDF_PageObject*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CPDF_ShadingObjectD0Ev(%class.CPDF_ShadingObject*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_ShadingObject, %class.CPDF_ShadingObject* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTV18CPDF_ShadingObject, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CPDF_ShadingObject, %class.CPDF_ShadingObject* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.CPDF_ShadingPattern*, %class.CPDF_ShadingPattern** %3, align 8
  store %class.CPDF_ShadingPattern* null, %class.CPDF_ShadingPattern** %3, align 8
  %5 = icmp eq %class.CPDF_ShadingPattern* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.CPDF_ShadingPattern, %class.CPDF_ShadingPattern* %4, i64 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = add nsw i64 %8, -1
  store i64 %9, i64* %7, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %11, label %17

11:                                               ; preds = %6
  %12 = getelementptr inbounds %class.CPDF_ShadingPattern, %class.CPDF_ShadingPattern* %4, i64 0, i32 0, i32 0
  %13 = bitcast %class.CPDF_ShadingPattern* %4 to void (%"class.fxcrt::Retainable"*)***
  %14 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %14, i64 1
  %16 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %15, align 8
  tail call void %16(%"class.fxcrt::Retainable"* nonnull %12) #6
  br label %17

17:                                               ; preds = %1, %6, %11
  %18 = getelementptr inbounds %class.CPDF_ShadingObject, %class.CPDF_ShadingObject* %0, i64 0, i32 0
  tail call void @_ZN15CPDF_PageObjectD2Ev(%class.CPDF_PageObject* %18) #6
  %19 = bitcast %class.CPDF_ShadingObject* %0 to i8*
  tail call void @_ZdlPv(i8* %19) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK18CPDF_ShadingObject7GetTypeEv(%class.CPDF_ShadingObject* nocapture readnone) unnamed_addr #5 align 2 {
  ret i32 4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CPDF_ShadingObject9TransformERK10CFX_Matrix(%class.CPDF_ShadingObject*, %class.CFX_Matrix* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPDF_ShadingObject, %class.CPDF_ShadingObject* %0, i64 0, i32 0, i32 0, i32 1
  %4 = getelementptr inbounds %class.CPDF_ClipPath, %class.CPDF_ClipPath* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.CPDF_ClipPath::PathData"*, %"class.CPDF_ClipPath::PathData"** %4, align 8
  %6 = icmp eq %"class.CPDF_ClipPath::PathData"* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  tail call void @_ZN13CPDF_ClipPath9TransformERK10CFX_Matrix(%class.CPDF_ClipPath* %3, %class.CFX_Matrix* dereferenceable(24) %1) #6
  %8 = load %"class.CPDF_ClipPath::PathData"*, %"class.CPDF_ClipPath::PathData"** %4, align 8
  %9 = icmp eq %"class.CPDF_ClipPath::PathData"* %8, null
  br label %10

10:                                               ; preds = %2, %7
  %11 = phi i1 [ true, %2 ], [ %9, %7 ]
  %12 = getelementptr inbounds %class.CPDF_ShadingObject, %class.CPDF_ShadingObject* %0, i64 0, i32 2, i32 0
  %13 = load float, float* %12, align 4, !noalias !2
  %14 = getelementptr inbounds %class.CPDF_ShadingObject, %class.CPDF_ShadingObject* %0, i64 0, i32 2, i32 1
  %15 = load float, float* %14, align 4, !noalias !2
  %16 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %1, i64 0, i32 2
  %17 = bitcast %class.CFX_Matrix* %1 to <2 x float>*
  %18 = load <2 x float>, <2 x float>* %17, align 4, !noalias !2
  %19 = shufflevector <2 x float> %18, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %20 = bitcast float* %16 to <2 x float>*
  %21 = load <2 x float>, <2 x float>* %20, align 4, !noalias !2
  %22 = shufflevector <2 x float> %21, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %23 = getelementptr inbounds %class.CPDF_ShadingObject, %class.CPDF_ShadingObject* %0, i64 0, i32 2, i32 2
  %24 = load float, float* %23, align 4, !noalias !2
  %25 = getelementptr inbounds %class.CPDF_ShadingObject, %class.CPDF_ShadingObject* %0, i64 0, i32 2, i32 3
  %26 = load float, float* %25, align 4, !noalias !2
  %27 = insertelement <4 x float> undef, float %13, i32 0
  %28 = shufflevector <4 x float> %27, <4 x float> undef, <4 x i32> <i32 0, i32 0, i32 undef, i32 undef>
  %29 = extractelement <2 x float> %18, i32 0
  %30 = extractelement <2 x float> %18, i32 1
  %31 = shufflevector <4 x float> %28, <4 x float> %19, <4 x i32> <i32 0, i32 1, i32 4, i32 5>
  %32 = insertelement <4 x float> undef, float %29, i32 0
  %33 = insertelement <4 x float> %32, float %30, i32 1
  %34 = insertelement <4 x float> %33, float %24, i32 2
  %35 = insertelement <4 x float> %34, float %24, i32 3
  %36 = fmul <4 x float> %31, %35
  %37 = insertelement <4 x float> undef, float %15, i32 0
  %38 = shufflevector <4 x float> %37, <4 x float> undef, <4 x i32> <i32 0, i32 0, i32 undef, i32 undef>
  %39 = extractelement <2 x float> %21, i32 0
  %40 = extractelement <2 x float> %21, i32 1
  %41 = shufflevector <4 x float> %38, <4 x float> %22, <4 x i32> <i32 0, i32 1, i32 4, i32 5>
  %42 = insertelement <4 x float> undef, float %39, i32 0
  %43 = insertelement <4 x float> %42, float %40, i32 1
  %44 = insertelement <4 x float> %43, float %26, i32 2
  %45 = insertelement <4 x float> %44, float %26, i32 3
  %46 = fmul <4 x float> %41, %45
  %47 = fadd <4 x float> %36, %46
  %48 = getelementptr inbounds %class.CPDF_ShadingObject, %class.CPDF_ShadingObject* %0, i64 0, i32 2, i32 4
  %49 = load float, float* %48, align 4, !noalias !2
  %50 = fmul float %29, %49
  %51 = getelementptr inbounds %class.CPDF_ShadingObject, %class.CPDF_ShadingObject* %0, i64 0, i32 2, i32 5
  %52 = load float, float* %51, align 4, !noalias !2
  %53 = fmul float %39, %52
  %54 = fadd float %50, %53
  %55 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %1, i64 0, i32 4
  %56 = load float, float* %55, align 4, !noalias !2
  %57 = fadd float %56, %54
  %58 = fmul float %30, %49
  %59 = fmul float %40, %52
  %60 = fadd float %58, %59
  %61 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %1, i64 0, i32 5
  %62 = load float, float* %61, align 4, !noalias !2
  %63 = fadd float %60, %62
  %64 = bitcast float* %12 to <4 x float>*
  store <4 x float> %47, <4 x float>* %64, align 4
  store float %57, float* %48, align 4
  store float %63, float* %51, align 4
  br i1 %11, label %70, label %65

65:                                               ; preds = %10
  %66 = tail call { <2 x float>, <2 x float> } @_ZNK13CPDF_ClipPath10GetClipBoxEv(%class.CPDF_ClipPath* %3) #6
  %67 = extractvalue { <2 x float>, <2 x float> } %66, 0
  %68 = extractvalue { <2 x float>, <2 x float> } %66, 1
  %69 = getelementptr inbounds %class.CPDF_ShadingObject, %class.CPDF_ShadingObject* %0, i64 0, i32 0, i32 1
  br label %75

70:                                               ; preds = %10
  %71 = getelementptr inbounds %class.CPDF_ShadingObject, %class.CPDF_ShadingObject* %0, i64 0, i32 0, i32 1
  %72 = tail call { <2 x float>, <2 x float> } @_ZNK10CFX_Matrix13TransformRectERK13CFX_FloatRect(%class.CFX_Matrix* %1, %class.CFX_FloatRect* dereferenceable(16) %71) #6
  %73 = extractvalue { <2 x float>, <2 x float> } %72, 0
  %74 = extractvalue { <2 x float>, <2 x float> } %72, 1
  br label %75

75:                                               ; preds = %70, %65
  %76 = phi %class.CFX_FloatRect* [ %71, %70 ], [ %69, %65 ]
  %77 = phi <2 x float> [ %73, %70 ], [ %67, %65 ]
  %78 = phi <2 x float> [ %74, %70 ], [ %68, %65 ]
  %79 = bitcast %class.CFX_FloatRect* %76 to <2 x float>*
  store <2 x float> %77, <2 x float>* %79, align 8
  %80 = getelementptr inbounds %class.CPDF_ShadingObject, %class.CPDF_ShadingObject* %0, i64 0, i32 0, i32 1, i32 2
  %81 = bitcast float* %80 to <2 x float>*
  store <2 x float> %78, <2 x float>* %81, align 8
  ret void
}

declare void @_ZN13CPDF_ClipPath9TransformERK10CFX_Matrix(%class.CPDF_ClipPath*, %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CPDF_ShadingObject15CalcBoundingBoxEv(%class.CPDF_ShadingObject*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_ShadingObject, %class.CPDF_ShadingObject* %0, i64 0, i32 0, i32 0, i32 1
  %3 = getelementptr inbounds %class.CPDF_ClipPath, %class.CPDF_ClipPath* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.CPDF_ClipPath::PathData"*, %"class.CPDF_ClipPath::PathData"** %3, align 8
  %5 = icmp eq %"class.CPDF_ClipPath::PathData"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  %7 = tail call { <2 x float>, <2 x float> } @_ZNK13CPDF_ClipPath10GetClipBoxEv(%class.CPDF_ClipPath* %2) #6
  %8 = extractvalue { <2 x float>, <2 x float> } %7, 0
  %9 = extractvalue { <2 x float>, <2 x float> } %7, 1
  %10 = getelementptr inbounds %class.CPDF_ShadingObject, %class.CPDF_ShadingObject* %0, i64 0, i32 0, i32 1
  %11 = bitcast %class.CFX_FloatRect* %10 to <2 x float>*
  store <2 x float> %8, <2 x float>* %11, align 8
  %12 = getelementptr inbounds %class.CPDF_ShadingObject, %class.CPDF_ShadingObject* %0, i64 0, i32 0, i32 1, i32 2
  %13 = bitcast float* %12 to <2 x float>*
  store <2 x float> %9, <2 x float>* %13, align 8
  br label %14

14:                                               ; preds = %1, %6
  ret void
}

declare { <2 x float>, <2 x float> } @_ZNK10CFX_Matrix13TransformRectERK13CFX_FloatRect(%class.CFX_Matrix*, %class.CFX_FloatRect* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK18CPDF_ShadingObject9IsShadingEv(%class.CPDF_ShadingObject* nocapture readnone) unnamed_addr #5 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %class.CPDF_ShadingObject* @_ZN18CPDF_ShadingObject9AsShadingEv(%class.CPDF_ShadingObject* readnone returned) unnamed_addr #5 align 2 {
  ret %class.CPDF_ShadingObject* %0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %class.CPDF_ShadingObject* @_ZNK18CPDF_ShadingObject9AsShadingEv(%class.CPDF_ShadingObject* readnone returned) unnamed_addr #5 align 2 {
  ret %class.CPDF_ShadingObject* %0
}

declare { <2 x float>, <2 x float> } @_ZNK13CPDF_ClipPath10GetClipBoxEv(%class.CPDF_ClipPath*) local_unnamed_addr #1

declare zeroext i1 @_ZNK15CPDF_PageObject6IsTextEv(%class.CPDF_PageObject*) unnamed_addr #1

declare zeroext i1 @_ZNK15CPDF_PageObject6IsPathEv(%class.CPDF_PageObject*) unnamed_addr #1

declare zeroext i1 @_ZNK15CPDF_PageObject7IsImageEv(%class.CPDF_PageObject*) unnamed_addr #1

declare zeroext i1 @_ZNK15CPDF_PageObject6IsFormEv(%class.CPDF_PageObject*) unnamed_addr #1

declare %class.CPDF_TextObject* @_ZN15CPDF_PageObject6AsTextEv(%class.CPDF_PageObject*) unnamed_addr #1

declare %class.CPDF_TextObject* @_ZNK15CPDF_PageObject6AsTextEv(%class.CPDF_PageObject*) unnamed_addr #1

declare %class.CPDF_PathObject* @_ZN15CPDF_PageObject6AsPathEv(%class.CPDF_PageObject*) unnamed_addr #1

declare %class.CPDF_PathObject* @_ZNK15CPDF_PageObject6AsPathEv(%class.CPDF_PageObject*) unnamed_addr #1

declare %class.CPDF_ImageObject* @_ZN15CPDF_PageObject7AsImageEv(%class.CPDF_PageObject*) unnamed_addr #1

declare %class.CPDF_ImageObject* @_ZNK15CPDF_PageObject7AsImageEv(%class.CPDF_PageObject*) unnamed_addr #1

declare %class.CPDF_FormObject* @_ZN15CPDF_PageObject6AsFormEv(%class.CPDF_PageObject*) unnamed_addr #1

declare %class.CPDF_FormObject* @_ZNK15CPDF_PageObject6AsFormEv(%class.CPDF_PageObject*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK10CFX_MatrixmlERKS_: argument 0"}
!4 = distinct !{!4, !"_ZNK10CFX_MatrixmlERKS_"}
