; ModuleID = '../../chrome/browser/media/webrtc/webrtc_log_buffer.cc'
source_filename = "../../chrome/browser/media/webrtc/webrtc_log_buffer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.WebRtcLogBuffer = type <{ [6291456 x i8], %"class.webrtc_logging::PartialCircularBuffer", i8, [7 x i8] }>
%"class.webrtc_logging::PartialCircularBuffer" = type { %"struct.webrtc_logging::PartialCircularBuffer::BufferData"*, i32, i32, i32, i32 }
%"struct.webrtc_logging::PartialCircularBuffer::BufferData" = type { i32, i32, i32, [1 x i8] }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZN15WebRtcLogBufferC1Ev = hidden unnamed_addr alias void (%class.WebRtcLogBuffer*), void (%class.WebRtcLogBuffer*)* @_ZN15WebRtcLogBufferC2Ev
@_ZN15WebRtcLogBufferD1Ev = hidden unnamed_addr alias void (%class.WebRtcLogBuffer*), void (%class.WebRtcLogBuffer*)* @_ZN15WebRtcLogBufferD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15WebRtcLogBufferC2Ev(%class.WebRtcLogBuffer*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.WebRtcLogBuffer, %class.WebRtcLogBuffer* %0, i64 0, i32 0, i64 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 6291456, i1 false)
  %3 = getelementptr inbounds %class.WebRtcLogBuffer, %class.WebRtcLogBuffer* %0, i64 0, i32 1
  tail call void @_ZN14webrtc_logging21PartialCircularBufferC1EPvjjb(%"class.webrtc_logging::PartialCircularBuffer"* %3, i8* %2, i32 6291456, i32 3145728, i1 zeroext false) #5
  %4 = getelementptr inbounds %class.WebRtcLogBuffer, %class.WebRtcLogBuffer* %0, i64 0, i32 2
  store i8 0, i8* %4, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN14webrtc_logging21PartialCircularBufferC1EPvjjb(%"class.webrtc_logging::PartialCircularBuffer"*, i8*, i32, i32, i1 zeroext) unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN15WebRtcLogBufferD2Ev(%class.WebRtcLogBuffer* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15WebRtcLogBuffer3LogERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.WebRtcLogBuffer*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca i8, align 1
  %4 = getelementptr inbounds %class.WebRtcLogBuffer, %class.WebRtcLogBuffer* %0, i64 0, i32 1
  %5 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %14 = zext i8 %7 to i64
  %15 = select i1 %8, i8* %10, i8* %13
  %16 = select i1 %8, i64 %12, i64 %14
  %17 = trunc i64 %16 to i32
  tail call void @_ZN14webrtc_logging21PartialCircularBuffer5WriteEPKvj(%"class.webrtc_logging::PartialCircularBuffer"* %4, i8* %15, i32 %17) #5
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #5
  store i8 10, i8* %3, align 1
  call void @_ZN14webrtc_logging21PartialCircularBuffer5WriteEPKvj(%"class.webrtc_logging::PartialCircularBuffer"* %4, i8* nonnull %3, i32 1) #5
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #5
  ret void
}

declare void @_ZN14webrtc_logging21PartialCircularBuffer5WriteEPKvj(%"class.webrtc_logging::PartialCircularBuffer"*, i8*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15WebRtcLogBuffer4ReadEv(%"class.webrtc_logging::PartialCircularBuffer"* noalias sret, %class.WebRtcLogBuffer*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.WebRtcLogBuffer, %class.WebRtcLogBuffer* %1, i64 0, i32 0, i64 0
  tail call void @_ZN14webrtc_logging21PartialCircularBufferC1EPvj(%"class.webrtc_logging::PartialCircularBuffer"* %0, i8* %3, i32 6291456) #5
  ret void
}

declare void @_ZN14webrtc_logging21PartialCircularBufferC1EPvj(%"class.webrtc_logging::PartialCircularBuffer"*, i8*, i32) unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN15WebRtcLogBuffer11SetCompleteEv(%class.WebRtcLogBuffer* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.WebRtcLogBuffer, %class.WebRtcLogBuffer* %0, i64 0, i32 2
  store i8 1, i8* %2, align 8
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
