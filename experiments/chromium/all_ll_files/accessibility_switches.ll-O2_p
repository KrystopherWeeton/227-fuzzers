; ModuleID = '../../ui/accessibility/accessibility_switches.cc'
source_filename = "../../ui/accessibility/accessibility_switches.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.base::CommandLine" = type { %"class.std::__1::vector", %"class.std::__1::map", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.6", %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { i64 }

@_ZN8switches41kEnableExperimentalAccessibilityAutoclickE = hidden local_unnamed_addr constant [44 x i8] c"enable-experimental-accessibility-autoclick\00", align 16
@_ZN8switches50kEnableExperimentalAccessibilityDictationExtensionE = hidden constant [54 x i8] c"enable-experimental-accessibility-dictation-extension\00", align 16
@_ZN8switches48kEnableExperimentalAccessibilityDictationOfflineE = hidden constant [52 x i8] c"enable-experimental-accessibility-dictation-offline\00", align 16
@_ZN8switches47kEnableExperimentalAccessibilityLabelsDebuggingE = hidden local_unnamed_addr constant [51 x i8] c"enable-experimental-accessibility-labels-debugging\00", align 16
@_ZN8switches49kEnableExperimentalAccessibilityLanguageDetectionE = hidden constant [53 x i8] c"enable-experimental-accessibility-language-detection\00", align 16
@_ZN8switches56kEnableExperimentalAccessibilityLanguageDetectionDynamicE = hidden constant [61 x i8] c"enable-experimental-accessibility-language-detection-dynamic\00", align 16
@_ZN8switches48kEnableExperimentalAccessibilitySwitchAccessTextE = hidden constant [53 x i8] c"enable-experimental-accessibility-switch-access-text\00", align 16
@_ZN8switches54kEnableExperimentalAccessibilitySwitchAccessSetupGuideE = hidden local_unnamed_addr constant [60 x i8] c"enable-experimental-accessibility-switch-access-setup-guide\00", align 16
@_ZN8switchesL29kEnableMagnifierDebugDrawRectE = internal constant [33 x i8] c"enable-magnifier-debug-draw-rect\00", align 16
@_ZN8switches18kDisableAXMenuListE = hidden local_unnamed_addr constant [21 x i8] c"disable-ax-menu-list\00", align 16

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8switches52IsExperimentalAccessibilityDictationExtensionEnabledEv() local_unnamed_addr #0 {
  %1 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #3
  %2 = tail call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %1, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @_ZN8switches50kEnableExperimentalAccessibilityDictationExtensionE, i64 0, i64 0)) #3
  ret i1 %2
}

declare %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() local_unnamed_addr #1

declare zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8switches50IsExperimentalAccessibilityDictationOfflineEnabledEv() local_unnamed_addr #0 {
  %1 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #3
  %2 = tail call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %1, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @_ZN8switches48kEnableExperimentalAccessibilityDictationOfflineE, i64 0, i64 0)) #3
  ret i1 %2
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8switches51IsExperimentalAccessibilityLanguageDetectionEnabledEv() local_unnamed_addr #0 {
  %1 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #3
  %2 = tail call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %1, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @_ZN8switches49kEnableExperimentalAccessibilityLanguageDetectionE, i64 0, i64 0)) #3
  ret i1 %2
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8switches58IsExperimentalAccessibilityLanguageDetectionDynamicEnabledEv() local_unnamed_addr #0 {
  %1 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #3
  %2 = tail call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %1, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @_ZN8switches56kEnableExperimentalAccessibilityLanguageDetectionDynamicE, i64 0, i64 0)) #3
  ret i1 %2
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8switches50IsExperimentalAccessibilitySwitchAccessTextEnabledEv() local_unnamed_addr #0 {
  %1 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #3
  %2 = tail call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %1, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @_ZN8switches48kEnableExperimentalAccessibilitySwitchAccessTextE, i64 0, i64 0)) #3
  ret i1 %2
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8switches31IsMagnifierDebugDrawRectEnabledEv() local_unnamed_addr #0 {
  %1 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #3
  %2 = tail call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @_ZN8switchesL29kEnableMagnifierDebugDrawRectE, i64 0, i64 0)) #3
  ret i1 %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN8switches45IsExperimentalAccessibilityPlatformUIAEnabledEv() local_unnamed_addr #2 {
  ret i1 false
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
