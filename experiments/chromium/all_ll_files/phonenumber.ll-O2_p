; ModuleID = '../../third_party/libphonenumber/dist/cpp/src/phonenumbers/phonenumber.cc'
source_filename = "../../third_party/libphonenumber/dist/cpp/src/phonenumbers/phonenumber.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.i18n::phonenumbers::PhoneNumber" = type { %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr", i64, i32, i8, i32, i32 }
%"class.google::protobuf::MessageLite" = type { i32 (...)**, %"class.google::protobuf::internal::InternalMetadata" }
%"class.google::protobuf::internal::InternalMetadata" = type { i8* }
%"class.google::protobuf::internal::HasBits" = type { [1 x i32] }
%"class.google::protobuf::internal::CachedSize" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.google::protobuf::internal::ArenaStringPtr" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.i18n::phonenumbers::PhoneNumberDesc" = type { %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"class.google::protobuf::RepeatedField", %"class.google::protobuf::RepeatedField", %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr" }
%"class.google::protobuf::RepeatedField" = type { i32, i32, i8* }

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN4i18n12phonenumbers13ExactlySameAsERKNS0_11PhoneNumberES3_(%"class.i18n::phonenumbers::PhoneNumber"* nocapture readonly dereferenceable(72), %"class.i18n::phonenumbers::PhoneNumber"* nocapture readonly dereferenceable(72)) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.i18n::phonenumbers::PhoneNumber", %"class.i18n::phonenumbers::PhoneNumber"* %0, i64 0, i32 1, i32 0, i64 0
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, 16
  %6 = icmp ne i32 %5, 0
  %7 = getelementptr inbounds %"class.i18n::phonenumbers::PhoneNumber", %"class.i18n::phonenumbers::PhoneNumber"* %1, i64 0, i32 1, i32 0, i64 0
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 16
  %10 = icmp ne i32 %9, 0
  %11 = xor i1 %6, %10
  br i1 %11, label %247, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.i18n::phonenumbers::PhoneNumber", %"class.i18n::phonenumbers::PhoneNumber"* %0, i64 0, i32 7
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %"class.i18n::phonenumbers::PhoneNumber", %"class.i18n::phonenumbers::PhoneNumber"* %1, i64 0, i32 7
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %14, %16
  br i1 %17, label %18, label %247

18:                                               ; preds = %12
  %19 = and i32 %4, 8
  %20 = icmp ne i32 %19, 0
  %21 = and i32 %8, 8
  %22 = icmp ne i32 %21, 0
  %23 = xor i1 %20, %22
  br i1 %23, label %247, label %24

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.i18n::phonenumbers::PhoneNumber", %"class.i18n::phonenumbers::PhoneNumber"* %0, i64 0, i32 6
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.i18n::phonenumbers::PhoneNumber", %"class.i18n::phonenumbers::PhoneNumber"* %1, i64 0, i32 6
  %28 = load i64, i64* %27, align 8
  %29 = icmp eq i64 %26, %28
  br i1 %29, label %30, label %247

30:                                               ; preds = %24
  %31 = and i32 %4, 1
  %32 = icmp ne i32 %31, 0
  %33 = and i32 %8, 1
  %34 = icmp ne i32 %33, 0
  %35 = xor i1 %32, %34
  br i1 %35, label %247, label %36

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.i18n::phonenumbers::PhoneNumber", %"class.i18n::phonenumbers::PhoneNumber"* %0, i64 0, i32 3, i32 0
  %38 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %37, align 8
  %39 = getelementptr inbounds %"class.i18n::phonenumbers::PhoneNumber", %"class.i18n::phonenumbers::PhoneNumber"* %1, i64 0, i32 3, i32 0
  %40 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %39, align 8
  %41 = bitcast %"class.std::__1::basic_string"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = zext i8 %43 to i64
  %48 = select i1 %44, i64 %46, i64 %47
  %49 = bitcast %"class.std::__1::basic_string"* %40 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = zext i8 %51 to i64
  %56 = select i1 %52, i64 %54, i64 %55
  %57 = icmp eq i64 %48, %56
  br i1 %57, label %58, label %247

58:                                               ; preds = %36
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = bitcast %"class.std::__1::basic_string"* %38 to i8*
  %62 = select i1 %44, i8* %60, i8* %61
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  %65 = bitcast %"class.std::__1::basic_string"* %40 to i8*
  %66 = select i1 %52, i8* %64, i8* %65
  %67 = icmp eq i64 %48, 0
  br i1 %44, label %74, label %68

68:                                               ; preds = %58
  br i1 %67, label %90, label %69

69:                                               ; preds = %68
  %70 = ptrtoint i8* %60 to i64
  %71 = trunc i64 %70 to i8
  %72 = load i8, i8* %66, align 1
  %73 = icmp eq i8 %72, %71
  br i1 %73, label %75, label %247

74:                                               ; preds = %58
  br i1 %67, label %90, label %87

75:                                               ; preds = %69, %82
  %76 = phi i64 [ %79, %82 ], [ %47, %69 ]
  %77 = phi i8* [ %80, %82 ], [ %61, %69 ]
  %78 = phi i8* [ %83, %82 ], [ %66, %69 ]
  %79 = add i64 %76, -1
  %80 = getelementptr inbounds i8, i8* %77, i64 1
  %81 = icmp eq i64 %79, 0
  br i1 %81, label %90, label %82

82:                                               ; preds = %75
  %83 = getelementptr inbounds i8, i8* %78, i64 1
  %84 = load i8, i8* %80, align 1
  %85 = load i8, i8* %83, align 1
  %86 = icmp eq i8 %84, %85
  br i1 %86, label %75, label %247

87:                                               ; preds = %74
  %88 = tail call i32 @bcmp(i8* %62, i8* %66, i64 %48) #2
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %247

90:                                               ; preds = %75, %87, %68, %74
  %91 = and i32 %4, 32
  %92 = icmp ne i32 %91, 0
  %93 = and i32 %8, 32
  %94 = icmp ne i32 %93, 0
  %95 = xor i1 %92, %94
  br i1 %95, label %247, label %96

96:                                               ; preds = %90
  %97 = getelementptr inbounds %"class.i18n::phonenumbers::PhoneNumber", %"class.i18n::phonenumbers::PhoneNumber"* %0, i64 0, i32 8
  %98 = load i8, i8* %97, align 4, !range !2
  %99 = icmp ne i8 %98, 0
  %100 = getelementptr inbounds %"class.i18n::phonenumbers::PhoneNumber", %"class.i18n::phonenumbers::PhoneNumber"* %1, i64 0, i32 8
  %101 = load i8, i8* %100, align 4, !range !2
  %102 = icmp ne i8 %101, 0
  %103 = xor i1 %99, %102
  br i1 %103, label %247, label %104

104:                                              ; preds = %96
  %105 = xor i32 %8, %4
  %106 = trunc i32 %105 to i8
  %107 = icmp slt i8 %106, 0
  br i1 %107, label %247, label %108

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"class.i18n::phonenumbers::PhoneNumber", %"class.i18n::phonenumbers::PhoneNumber"* %0, i64 0, i32 10
  %110 = load i32, i32* %109, align 4
  %111 = getelementptr inbounds %"class.i18n::phonenumbers::PhoneNumber", %"class.i18n::phonenumbers::PhoneNumber"* %1, i64 0, i32 10
  %112 = load i32, i32* %111, align 4
  %113 = icmp eq i32 %110, %112
  br i1 %113, label %114, label %247

114:                                              ; preds = %108
  %115 = and i32 %4, 2
  %116 = icmp ne i32 %115, 0
  %117 = and i32 %8, 2
  %118 = icmp ne i32 %117, 0
  %119 = xor i1 %116, %118
  br i1 %119, label %247, label %120

120:                                              ; preds = %114
  %121 = getelementptr inbounds %"class.i18n::phonenumbers::PhoneNumber", %"class.i18n::phonenumbers::PhoneNumber"* %0, i64 0, i32 4, i32 0
  %122 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %121, align 8
  %123 = getelementptr inbounds %"class.i18n::phonenumbers::PhoneNumber", %"class.i18n::phonenumbers::PhoneNumber"* %1, i64 0, i32 4, i32 0
  %124 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %123, align 8
  %125 = bitcast %"class.std::__1::basic_string"* %122 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %126 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %125, i64 0, i32 1, i32 0
  %127 = load i8, i8* %126, align 1
  %128 = icmp slt i8 %127, 0
  %129 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %122, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %130 = load i64, i64* %129, align 8
  %131 = zext i8 %127 to i64
  %132 = select i1 %128, i64 %130, i64 %131
  %133 = bitcast %"class.std::__1::basic_string"* %124 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %134 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %133, i64 0, i32 1, i32 0
  %135 = load i8, i8* %134, align 1
  %136 = icmp slt i8 %135, 0
  %137 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %124, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %138 = load i64, i64* %137, align 8
  %139 = zext i8 %135 to i64
  %140 = select i1 %136, i64 %138, i64 %139
  %141 = icmp eq i64 %132, %140
  br i1 %141, label %142, label %247

142:                                              ; preds = %120
  %143 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %122, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %144 = load i8*, i8** %143, align 8
  %145 = bitcast %"class.std::__1::basic_string"* %122 to i8*
  %146 = select i1 %128, i8* %144, i8* %145
  %147 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %124, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %148 = load i8*, i8** %147, align 8
  %149 = bitcast %"class.std::__1::basic_string"* %124 to i8*
  %150 = select i1 %136, i8* %148, i8* %149
  %151 = icmp eq i64 %132, 0
  br i1 %128, label %158, label %152

152:                                              ; preds = %142
  br i1 %151, label %174, label %153

153:                                              ; preds = %152
  %154 = ptrtoint i8* %144 to i64
  %155 = trunc i64 %154 to i8
  %156 = load i8, i8* %150, align 1
  %157 = icmp eq i8 %156, %155
  br i1 %157, label %159, label %247

158:                                              ; preds = %142
  br i1 %151, label %174, label %171

159:                                              ; preds = %153, %166
  %160 = phi i64 [ %163, %166 ], [ %131, %153 ]
  %161 = phi i8* [ %164, %166 ], [ %145, %153 ]
  %162 = phi i8* [ %167, %166 ], [ %150, %153 ]
  %163 = add i64 %160, -1
  %164 = getelementptr inbounds i8, i8* %161, i64 1
  %165 = icmp eq i64 %163, 0
  br i1 %165, label %174, label %166

166:                                              ; preds = %159
  %167 = getelementptr inbounds i8, i8* %162, i64 1
  %168 = load i8, i8* %164, align 1
  %169 = load i8, i8* %167, align 1
  %170 = icmp eq i8 %168, %169
  br i1 %170, label %159, label %247

171:                                              ; preds = %158
  %172 = tail call i32 @bcmp(i8* %146, i8* %150, i64 %132) #2
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %247

174:                                              ; preds = %159, %171, %152, %158
  %175 = and i32 %4, 64
  %176 = icmp ne i32 %175, 0
  %177 = and i32 %8, 64
  %178 = icmp ne i32 %177, 0
  %179 = xor i1 %176, %178
  br i1 %179, label %247, label %180

180:                                              ; preds = %174
  %181 = getelementptr inbounds %"class.i18n::phonenumbers::PhoneNumber", %"class.i18n::phonenumbers::PhoneNumber"* %0, i64 0, i32 9
  %182 = load i32, i32* %181, align 8
  %183 = getelementptr inbounds %"class.i18n::phonenumbers::PhoneNumber", %"class.i18n::phonenumbers::PhoneNumber"* %1, i64 0, i32 9
  %184 = load i32, i32* %183, align 8
  %185 = icmp eq i32 %182, %184
  br i1 %185, label %186, label %247

186:                                              ; preds = %180
  %187 = and i32 %4, 4
  %188 = icmp ne i32 %187, 0
  %189 = and i32 %8, 4
  %190 = icmp ne i32 %189, 0
  %191 = xor i1 %188, %190
  br i1 %191, label %247, label %192

192:                                              ; preds = %186
  %193 = getelementptr inbounds %"class.i18n::phonenumbers::PhoneNumber", %"class.i18n::phonenumbers::PhoneNumber"* %0, i64 0, i32 5, i32 0
  %194 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %193, align 8
  %195 = getelementptr inbounds %"class.i18n::phonenumbers::PhoneNumber", %"class.i18n::phonenumbers::PhoneNumber"* %1, i64 0, i32 5, i32 0
  %196 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %195, align 8
  %197 = bitcast %"class.std::__1::basic_string"* %194 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %198 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %197, i64 0, i32 1, i32 0
  %199 = load i8, i8* %198, align 1
  %200 = icmp slt i8 %199, 0
  %201 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %194, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %202 = load i64, i64* %201, align 8
  %203 = zext i8 %199 to i64
  %204 = select i1 %200, i64 %202, i64 %203
  %205 = bitcast %"class.std::__1::basic_string"* %196 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %206 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %205, i64 0, i32 1, i32 0
  %207 = load i8, i8* %206, align 1
  %208 = icmp slt i8 %207, 0
  %209 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %196, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %210 = load i64, i64* %209, align 8
  %211 = zext i8 %207 to i64
  %212 = select i1 %208, i64 %210, i64 %211
  %213 = icmp eq i64 %204, %212
  br i1 %213, label %214, label %246

214:                                              ; preds = %192
  %215 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %194, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %216 = load i8*, i8** %215, align 8
  %217 = bitcast %"class.std::__1::basic_string"* %194 to i8*
  %218 = select i1 %200, i8* %216, i8* %217
  %219 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %196, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %220 = load i8*, i8** %219, align 8
  %221 = bitcast %"class.std::__1::basic_string"* %196 to i8*
  %222 = select i1 %208, i8* %220, i8* %221
  %223 = icmp eq i64 %204, 0
  br i1 %200, label %230, label %224

224:                                              ; preds = %214
  br i1 %223, label %247, label %225

225:                                              ; preds = %224
  %226 = ptrtoint i8* %216 to i64
  %227 = trunc i64 %226 to i8
  %228 = load i8, i8* %222, align 1
  %229 = icmp eq i8 %228, %227
  br i1 %229, label %231, label %246

230:                                              ; preds = %214
  br i1 %223, label %247, label %243

231:                                              ; preds = %225, %238
  %232 = phi i64 [ %235, %238 ], [ %203, %225 ]
  %233 = phi i8* [ %236, %238 ], [ %217, %225 ]
  %234 = phi i8* [ %239, %238 ], [ %222, %225 ]
  %235 = add i64 %232, -1
  %236 = getelementptr inbounds i8, i8* %233, i64 1
  %237 = icmp eq i64 %235, 0
  br i1 %237, label %247, label %238

238:                                              ; preds = %231
  %239 = getelementptr inbounds i8, i8* %234, i64 1
  %240 = load i8, i8* %236, align 1
  %241 = load i8, i8* %239, align 1
  %242 = icmp eq i8 %240, %241
  br i1 %242, label %231, label %246

243:                                              ; preds = %230
  %244 = tail call i32 @bcmp(i8* %218, i8* %222, i64 %204) #2
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %247, label %246

246:                                              ; preds = %238, %225, %243, %192
  br label %247

247:                                              ; preds = %82, %166, %231, %69, %153, %87, %171, %243, %12, %2, %24, %18, %30, %96, %90, %108, %104, %114, %180, %174, %186, %36, %120, %224, %230, %246
  %248 = phi i1 [ false, %246 ], [ true, %243 ], [ true, %230 ], [ true, %224 ], [ false, %120 ], [ false, %36 ], [ false, %186 ], [ false, %174 ], [ false, %180 ], [ false, %114 ], [ false, %171 ], [ false, %104 ], [ false, %108 ], [ false, %90 ], [ false, %96 ], [ false, %30 ], [ false, %87 ], [ false, %18 ], [ false, %24 ], [ false, %2 ], [ false, %12 ], [ false, %153 ], [ false, %69 ], [ true, %231 ], [ false, %166 ], [ false, %82 ]
  ret i1 %248
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN4i18n12phonenumbers13ExactlySameAsERKNS0_15PhoneNumberDescES3_(%"class.i18n::phonenumbers::PhoneNumberDesc"* nocapture readonly dereferenceable(72), %"class.i18n::phonenumbers::PhoneNumberDesc"* nocapture readonly dereferenceable(72)) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.i18n::phonenumbers::PhoneNumberDesc", %"class.i18n::phonenumbers::PhoneNumberDesc"* %0, i64 0, i32 1, i32 0, i64 0
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, 1
  %6 = icmp ne i32 %5, 0
  %7 = getelementptr inbounds %"class.i18n::phonenumbers::PhoneNumberDesc", %"class.i18n::phonenumbers::PhoneNumberDesc"* %1, i64 0, i32 1, i32 0, i64 0
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 1
  %10 = icmp ne i32 %9, 0
  %11 = xor i1 %6, %10
  br i1 %11, label %178, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.i18n::phonenumbers::PhoneNumberDesc", %"class.i18n::phonenumbers::PhoneNumberDesc"* %0, i64 0, i32 5, i32 0
  %14 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %13, align 8
  %15 = getelementptr inbounds %"class.i18n::phonenumbers::PhoneNumberDesc", %"class.i18n::phonenumbers::PhoneNumberDesc"* %1, i64 0, i32 5, i32 0
  %16 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %15, align 8
  %17 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = zext i8 %19 to i64
  %24 = select i1 %20, i64 %22, i64 %23
  %25 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = zext i8 %27 to i64
  %32 = select i1 %28, i64 %30, i64 %31
  %33 = icmp eq i64 %24, %32
  br i1 %33, label %34, label %178

34:                                               ; preds = %12
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  %38 = select i1 %20, i8* %36, i8* %37
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  %42 = select i1 %28, i8* %40, i8* %41
  %43 = icmp eq i64 %24, 0
  br i1 %20, label %50, label %44

44:                                               ; preds = %34
  br i1 %43, label %66, label %45

45:                                               ; preds = %44
  %46 = ptrtoint i8* %36 to i64
  %47 = trunc i64 %46 to i8
  %48 = load i8, i8* %42, align 1
  %49 = icmp eq i8 %48, %47
  br i1 %49, label %51, label %178

50:                                               ; preds = %34
  br i1 %43, label %66, label %63

51:                                               ; preds = %45, %58
  %52 = phi i64 [ %55, %58 ], [ %23, %45 ]
  %53 = phi i8* [ %56, %58 ], [ %37, %45 ]
  %54 = phi i8* [ %59, %58 ], [ %42, %45 ]
  %55 = add i64 %52, -1
  %56 = getelementptr inbounds i8, i8* %53, i64 1
  %57 = icmp eq i64 %55, 0
  br i1 %57, label %66, label %58

58:                                               ; preds = %51
  %59 = getelementptr inbounds i8, i8* %54, i64 1
  %60 = load i8, i8* %56, align 1
  %61 = load i8, i8* %59, align 1
  %62 = icmp eq i8 %60, %61
  br i1 %62, label %51, label %178

63:                                               ; preds = %50
  %64 = tail call i32 @bcmp(i8* %38, i8* %42, i64 %24) #2
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %178

66:                                               ; preds = %51, %63, %44, %50
  %67 = and i32 %4, 2
  %68 = icmp ne i32 %67, 0
  %69 = and i32 %8, 2
  %70 = icmp ne i32 %69, 0
  %71 = xor i1 %68, %70
  br i1 %71, label %178, label %72

72:                                               ; preds = %66
  %73 = getelementptr inbounds %"class.i18n::phonenumbers::PhoneNumberDesc", %"class.i18n::phonenumbers::PhoneNumberDesc"* %0, i64 0, i32 6, i32 0
  %74 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %73, align 8
  %75 = getelementptr inbounds %"class.i18n::phonenumbers::PhoneNumberDesc", %"class.i18n::phonenumbers::PhoneNumberDesc"* %1, i64 0, i32 6, i32 0
  %76 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %75, align 8
  %77 = bitcast %"class.std::__1::basic_string"* %74 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %78 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %77, i64 0, i32 1, i32 0
  %79 = load i8, i8* %78, align 1
  %80 = icmp slt i8 %79, 0
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %82 = load i64, i64* %81, align 8
  %83 = zext i8 %79 to i64
  %84 = select i1 %80, i64 %82, i64 %83
  %85 = bitcast %"class.std::__1::basic_string"* %76 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %86 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %85, i64 0, i32 1, i32 0
  %87 = load i8, i8* %86, align 1
  %88 = icmp slt i8 %87, 0
  %89 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %90 = load i64, i64* %89, align 8
  %91 = zext i8 %87 to i64
  %92 = select i1 %88, i64 %90, i64 %91
  %93 = icmp eq i64 %84, %92
  br i1 %93, label %94, label %178

94:                                               ; preds = %72
  %95 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load i8*, i8** %95, align 8
  %97 = bitcast %"class.std::__1::basic_string"* %74 to i8*
  %98 = select i1 %80, i8* %96, i8* %97
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load i8*, i8** %99, align 8
  %101 = bitcast %"class.std::__1::basic_string"* %76 to i8*
  %102 = select i1 %88, i8* %100, i8* %101
  %103 = icmp eq i64 %84, 0
  br i1 %80, label %110, label %104

104:                                              ; preds = %94
  br i1 %103, label %126, label %105

105:                                              ; preds = %104
  %106 = ptrtoint i8* %96 to i64
  %107 = trunc i64 %106 to i8
  %108 = load i8, i8* %102, align 1
  %109 = icmp eq i8 %108, %107
  br i1 %109, label %111, label %178

110:                                              ; preds = %94
  br i1 %103, label %126, label %123

111:                                              ; preds = %105, %118
  %112 = phi i64 [ %115, %118 ], [ %83, %105 ]
  %113 = phi i8* [ %116, %118 ], [ %97, %105 ]
  %114 = phi i8* [ %119, %118 ], [ %102, %105 ]
  %115 = add i64 %112, -1
  %116 = getelementptr inbounds i8, i8* %113, i64 1
  %117 = icmp eq i64 %115, 0
  br i1 %117, label %126, label %118

118:                                              ; preds = %111
  %119 = getelementptr inbounds i8, i8* %114, i64 1
  %120 = load i8, i8* %116, align 1
  %121 = load i8, i8* %119, align 1
  %122 = icmp eq i8 %120, %121
  br i1 %122, label %111, label %178

123:                                              ; preds = %110
  %124 = tail call i32 @bcmp(i8* %98, i8* %102, i64 %84) #2
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %178

126:                                              ; preds = %111, %123, %104, %110
  %127 = getelementptr inbounds %"class.i18n::phonenumbers::PhoneNumberDesc", %"class.i18n::phonenumbers::PhoneNumberDesc"* %0, i64 0, i32 3, i32 0
  %128 = load i32, i32* %127, align 8
  %129 = getelementptr inbounds %"class.i18n::phonenumbers::PhoneNumberDesc", %"class.i18n::phonenumbers::PhoneNumberDesc"* %1, i64 0, i32 3, i32 0
  %130 = load i32, i32* %129, align 8
  %131 = icmp eq i32 %128, %130
  br i1 %131, label %132, label %178

132:                                              ; preds = %126
  %133 = icmp sgt i32 %128, 0
  br i1 %133, label %134, label %152

134:                                              ; preds = %132
  %135 = getelementptr inbounds %"class.i18n::phonenumbers::PhoneNumberDesc", %"class.i18n::phonenumbers::PhoneNumberDesc"* %0, i64 0, i32 3, i32 2
  %136 = bitcast i8** %135 to i32**
  %137 = load i32*, i32** %136, align 8
  %138 = getelementptr inbounds %"class.i18n::phonenumbers::PhoneNumberDesc", %"class.i18n::phonenumbers::PhoneNumberDesc"* %1, i64 0, i32 3, i32 2
  %139 = bitcast i8** %138 to i32**
  %140 = load i32*, i32** %139, align 8
  %141 = zext i32 %128 to i64
  br label %144

142:                                              ; preds = %144
  %143 = icmp eq i64 %151, %141
  br i1 %143, label %152, label %144

144:                                              ; preds = %142, %134
  %145 = phi i64 [ 0, %134 ], [ %151, %142 ]
  %146 = getelementptr inbounds i32, i32* %137, i64 %145
  %147 = load i32, i32* %146, align 4
  %148 = getelementptr inbounds i32, i32* %140, i64 %145
  %149 = load i32, i32* %148, align 4
  %150 = icmp eq i32 %147, %149
  %151 = add nuw nsw i64 %145, 1
  br i1 %150, label %142, label %178

152:                                              ; preds = %142, %132
  %153 = getelementptr inbounds %"class.i18n::phonenumbers::PhoneNumberDesc", %"class.i18n::phonenumbers::PhoneNumberDesc"* %0, i64 0, i32 4, i32 0
  %154 = load i32, i32* %153, align 8
  %155 = getelementptr inbounds %"class.i18n::phonenumbers::PhoneNumberDesc", %"class.i18n::phonenumbers::PhoneNumberDesc"* %1, i64 0, i32 4, i32 0
  %156 = load i32, i32* %155, align 8
  %157 = icmp eq i32 %154, %156
  br i1 %157, label %158, label %178

158:                                              ; preds = %152
  %159 = icmp sgt i32 %154, 0
  br i1 %159, label %160, label %178

160:                                              ; preds = %158
  %161 = getelementptr inbounds %"class.i18n::phonenumbers::PhoneNumberDesc", %"class.i18n::phonenumbers::PhoneNumberDesc"* %0, i64 0, i32 4, i32 2
  %162 = bitcast i8** %161 to i32**
  %163 = load i32*, i32** %162, align 8
  %164 = getelementptr inbounds %"class.i18n::phonenumbers::PhoneNumberDesc", %"class.i18n::phonenumbers::PhoneNumberDesc"* %1, i64 0, i32 4, i32 2
  %165 = bitcast i8** %164 to i32**
  %166 = load i32*, i32** %165, align 8
  %167 = zext i32 %154 to i64
  br label %170

168:                                              ; preds = %170
  %169 = icmp eq i64 %177, %167
  br i1 %169, label %178, label %170

170:                                              ; preds = %168, %160
  %171 = phi i64 [ 0, %160 ], [ %177, %168 ]
  %172 = getelementptr inbounds i32, i32* %163, i64 %171
  %173 = load i32, i32* %172, align 4
  %174 = getelementptr inbounds i32, i32* %166, i64 %171
  %175 = load i32, i32* %174, align 4
  %176 = icmp eq i32 %173, %175
  %177 = add nuw nsw i64 %171, 1
  br i1 %176, label %168, label %178

178:                                              ; preds = %58, %118, %144, %170, %168, %45, %105, %158, %63, %123, %2, %66, %126, %152, %12, %72
  %179 = phi i1 [ false, %72 ], [ false, %12 ], [ false, %152 ], [ false, %126 ], [ false, %66 ], [ false, %123 ], [ false, %2 ], [ false, %63 ], [ true, %158 ], [ false, %105 ], [ false, %45 ], [ false, %170 ], [ true, %168 ], [ false, %144 ], [ false, %118 ], [ false, %58 ]
  ret i1 %179
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #1

attributes #0 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind readonly }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
