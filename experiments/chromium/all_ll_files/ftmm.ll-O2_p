; ModuleID = '../../third_party/freetype/src/src/base/ftmm.c'
source_filename = "../../third_party/freetype/src/src/base/ftmm.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.FT_FaceRec_ = type { i64, i64, i64, i64, i64, i8*, i8*, i32, %struct.FT_Bitmap_Size_*, i32, %struct.FT_CharMapRec_**, %struct.FT_Generic_, %struct.FT_BBox_, i16, i16, i16, i16, i16, i16, i16, i16, %struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, %struct.FT_CharMapRec_*, %struct.FT_DriverRec_*, %struct.FT_MemoryRec_*, %struct.FT_StreamRec_*, %struct.FT_ListRec_, %struct.FT_Generic_, i8*, %struct.FT_Face_InternalRec_* }
%struct.FT_Bitmap_Size_ = type { i16, i16, i64, i64, i64 }
%struct.FT_BBox_ = type { i64, i64, i64, i64 }
%struct.FT_GlyphSlotRec_ = type { %struct.FT_LibraryRec_*, %struct.FT_FaceRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Generic_, %struct.FT_Glyph_Metrics_, i64, i64, %struct.FT_Vector_, i32, %struct.FT_Bitmap_, i32, i32, %struct.FT_Outline_, i32, %struct.FT_SubGlyphRec_*, i8*, i64, i64, i64, i8*, %struct.FT_Slot_InternalRec_* }
%struct.FT_LibraryRec_ = type { %struct.FT_MemoryRec_*, i32, i32, i32, i32, [32 x %struct.FT_ModuleRec_*], %struct.FT_ListRec_, %struct.FT_RendererRec_*, %struct.FT_ModuleRec_*, [4 x i32 (i8*)*], [5 x i8], void (%struct.FT_Bitmap_*, i8*)*, i32 }
%struct.FT_RendererRec_ = type { %struct.FT_ModuleRec_, %struct.FT_Renderer_Class_*, i32, %struct.FT_Glyph_Class_, %struct.FT_RasterRec_*, i32 (%struct.FT_RasterRec_*, %struct.FT_Raster_Params_*)*, i32 (%struct.FT_RendererRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Vector_*)* }
%struct.FT_ModuleRec_ = type { %struct.FT_Module_Class_*, %struct.FT_LibraryRec_*, %struct.FT_MemoryRec_* }
%struct.FT_Module_Class_ = type { i64, i64, i8*, i64, i64, i8*, i32 (%struct.FT_ModuleRec_*)*, void (%struct.FT_ModuleRec_*)*, i8* (%struct.FT_ModuleRec_*, i8*)* }
%struct.FT_Renderer_Class_ = type { %struct.FT_Module_Class_, i32, i32 (%struct.FT_RendererRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Vector_*)*, i32 (%struct.FT_RendererRec_*, %struct.FT_GlyphSlotRec_*, %struct.FT_Matrix_*, %struct.FT_Vector_*)*, void (%struct.FT_RendererRec_*, %struct.FT_GlyphSlotRec_*, %struct.FT_BBox_*)*, i32 (%struct.FT_RendererRec_*, i64, i8*)*, %struct.FT_Raster_Funcs_* }
%struct.FT_Matrix_ = type { i64, i64, i64, i64 }
%struct.FT_Raster_Funcs_ = type { i32, i32 (i8*, %struct.FT_RasterRec_**)*, void (%struct.FT_RasterRec_*, i8*, i64)*, i32 (%struct.FT_RasterRec_*, i64, i8*)*, i32 (%struct.FT_RasterRec_*, %struct.FT_Raster_Params_*)*, void (%struct.FT_RasterRec_*)* }
%struct.FT_Glyph_Class_ = type { i64, i32, i32 (%struct.FT_GlyphRec_*, %struct.FT_GlyphSlotRec_*)*, void (%struct.FT_GlyphRec_*)*, i32 (%struct.FT_GlyphRec_*, %struct.FT_GlyphRec_*)*, void (%struct.FT_GlyphRec_*, %struct.FT_Matrix_*, %struct.FT_Vector_*)*, void (%struct.FT_GlyphRec_*, %struct.FT_BBox_*)*, i32 (%struct.FT_GlyphRec_*, %struct.FT_GlyphSlotRec_*)* }
%struct.FT_GlyphRec_ = type { %struct.FT_LibraryRec_*, %struct.FT_Glyph_Class_*, i32, %struct.FT_Vector_ }
%struct.FT_RasterRec_ = type opaque
%struct.FT_Raster_Params_ = type { %struct.FT_Bitmap_*, i8*, i32, void (i32, i32, %struct.FT_Span_*, i8*)*, void (i32, i32, %struct.FT_Span_*, i8*)*, i32 (i32, i32, i8*)*, void (i32, i32, i8*)*, i8*, %struct.FT_BBox_ }
%struct.FT_Span_ = type { i16, i16, i8 }
%struct.FT_Glyph_Metrics_ = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.FT_Vector_ = type { i64, i64 }
%struct.FT_Bitmap_ = type { i32, i32, i32, i8*, i16, i8, i8, i8* }
%struct.FT_Outline_ = type { i16, i16, %struct.FT_Vector_*, i8*, i16*, i32 }
%struct.FT_SubGlyphRec_ = type { i32, i16, i32, i32, %struct.FT_Matrix_ }
%struct.FT_Slot_InternalRec_ = type { %struct.FT_GlyphLoaderRec_*, i32, i8, %struct.FT_Matrix_, %struct.FT_Vector_, i8*, i32 }
%struct.FT_GlyphLoaderRec_ = type { %struct.FT_MemoryRec_*, i32, i32, i32, i8, %struct.FT_GlyphLoadRec_, %struct.FT_GlyphLoadRec_, i8* }
%struct.FT_GlyphLoadRec_ = type { %struct.FT_Outline_, %struct.FT_Vector_*, %struct.FT_Vector_*, i32, %struct.FT_SubGlyphRec_* }
%struct.FT_SizeRec_ = type { %struct.FT_FaceRec_*, %struct.FT_Generic_, %struct.FT_Size_Metrics_, %struct.FT_Size_InternalRec_* }
%struct.FT_Size_Metrics_ = type { i16, i16, i64, i64, i64, i64, i64, i64 }
%struct.FT_Size_InternalRec_ = type { i8*, i32, %struct.FT_Size_Metrics_ }
%struct.FT_CharMapRec_ = type { %struct.FT_FaceRec_*, i32, i16, i16 }
%struct.FT_DriverRec_ = type { %struct.FT_ModuleRec_, %struct.FT_Driver_ClassRec_*, %struct.FT_ListRec_, %struct.FT_GlyphLoaderRec_* }
%struct.FT_Driver_ClassRec_ = type { %struct.FT_Module_Class_, i64, i64, i64, i32 (%struct.FT_StreamRec_*, %struct.FT_FaceRec_*, i32, i32, %struct.FT_Parameter_*)*, void (%struct.FT_FaceRec_*)*, i32 (%struct.FT_SizeRec_*)*, void (%struct.FT_SizeRec_*)*, i32 (%struct.FT_GlyphSlotRec_*)*, void (%struct.FT_GlyphSlotRec_*)*, i32 (%struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, i32, i32)*, i32 (%struct.FT_FaceRec_*, i32, i32, %struct.FT_Vector_*)*, i32 (%struct.FT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.FT_FaceRec_*, i32, i32, i32, i64*)*, i32 (%struct.FT_SizeRec_*, %struct.FT_Size_RequestRec_*)*, i32 (%struct.FT_SizeRec_*, i64)* }
%struct.FT_Parameter_ = type { i64, i8* }
%struct.FT_Size_RequestRec_ = type { i32, i64, i64, i32, i32 }
%struct.FT_MemoryRec_ = type { i8*, i8* (%struct.FT_MemoryRec_*, i64)*, void (%struct.FT_MemoryRec_*, i8*)*, i8* (%struct.FT_MemoryRec_*, i64, i64, i8*)* }
%struct.FT_StreamRec_ = type { i8*, i64, i64, %union.FT_StreamDesc_, %union.FT_StreamDesc_, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, void (%struct.FT_StreamRec_*)*, %struct.FT_MemoryRec_*, i8*, i8* }
%union.FT_StreamDesc_ = type { i64 }
%struct.FT_ListRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_* }
%struct.FT_ListNodeRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_*, i8* }
%struct.FT_Generic_ = type { i8*, void (i8*)* }
%struct.FT_Face_InternalRec_ = type { %struct.FT_Matrix_, %struct.FT_Vector_, i32, %struct.FT_ServiceCacheRec_, %struct.FT_Incremental_InterfaceRec_*, i8, i32, [5 x i8], void (%struct.FT_Bitmap_*, i8*)*, i32 }
%struct.FT_ServiceCacheRec_ = type { i8*, i8*, i8*, i8*, i8*, i8* }
%struct.FT_Incremental_InterfaceRec_ = type { %struct.FT_Incremental_FuncsRec_*, %struct.FT_IncrementalRec_* }
%struct.FT_Incremental_FuncsRec_ = type { i32 (%struct.FT_IncrementalRec_*, i32, %struct.FT_Data_*)*, void (%struct.FT_IncrementalRec_*, %struct.FT_Data_*)*, i32 (%struct.FT_IncrementalRec_*, i32, i8, %struct.FT_Incremental_MetricsRec_*)* }
%struct.FT_Data_ = type { i8*, i32 }
%struct.FT_Incremental_MetricsRec_ = type { i64, i64, i64, i64 }
%struct.FT_IncrementalRec_ = type opaque
%struct.FT_Multi_Master_ = type { i32, i32, [4 x %struct.FT_MM_Axis_] }
%struct.FT_MM_Axis_ = type { i8*, i64, i64 }
%struct.FT_MM_Var_ = type { i32, i32, i32, %struct.FT_Var_Axis_*, %struct.FT_Var_Named_Style_* }
%struct.FT_Var_Axis_ = type { i8*, i64, i64, i64, i64, i32 }
%struct.FT_Var_Named_Style_ = type { i64*, i32, i32 }

@.str = private unnamed_addr constant [14 x i8] c"multi-masters\00", align 1
@.str.1 = private unnamed_addr constant [19 x i8] c"metrics-variations\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Get_Multi_Master(%struct.FT_FaceRec_*, %struct.FT_Multi_Master_*) local_unnamed_addr #0 {
  %3 = icmp eq %struct.FT_Multi_Master_* %1, null
  br i1 %3, label %44, label %4

4:                                                ; preds = %2
  %5 = icmp eq %struct.FT_FaceRec_* %0, null
  br i1 %5, label %44, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %8, 256
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %44, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 30
  %13 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %12, align 8
  %14 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %13, i64 0, i32 3, i32 1
  %15 = load i8*, i8** %14, align 8
  %16 = ptrtoint i8* %15 to i64
  switch i64 %16, label %35 [
    i64 -2, label %44
    i64 0, label %17
  ]

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 24
  %19 = bitcast %struct.FT_DriverRec_** %18 to %struct.FT_ModuleRec_**
  %20 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %19, align 8
  %21 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %20, i64 0, i32 0
  %22 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %21, align 8
  %23 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %22, i64 0, i32 8
  %24 = load i8* (%struct.FT_ModuleRec_*, i8*)*, i8* (%struct.FT_ModuleRec_*, i8*)** %23, align 8
  %25 = icmp eq i8* (%struct.FT_ModuleRec_*, i8*)* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %17
  %27 = tail call i8* %24(%struct.FT_ModuleRec_* %20, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0)) #3
  %28 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %12, align 8
  br label %29

29:                                               ; preds = %26, %17
  %30 = phi %struct.FT_Face_InternalRec_* [ %28, %26 ], [ %13, %17 ]
  %31 = phi i8* [ %27, %26 ], [ null, %17 ]
  %32 = icmp eq i8* %31, null
  %33 = select i1 %32, i8* inttoptr (i64 -2 to i8*), i8* %31
  %34 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %30, i64 0, i32 3, i32 1
  store i8* %33, i8** %34, align 8
  br label %35

35:                                               ; preds = %11, %29
  %36 = phi i8* [ %31, %29 ], [ %15, %11 ]
  %37 = icmp eq i8* %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %35
  %39 = bitcast i8* %36 to i32 (%struct.FT_FaceRec_*, %struct.FT_Multi_Master_*)**
  %40 = load i32 (%struct.FT_FaceRec_*, %struct.FT_Multi_Master_*)*, i32 (%struct.FT_FaceRec_*, %struct.FT_Multi_Master_*)** %39, align 8
  %41 = icmp eq i32 (%struct.FT_FaceRec_*, %struct.FT_Multi_Master_*)* %40, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %38
  %43 = tail call i32 %40(%struct.FT_FaceRec_* nonnull %0, %struct.FT_Multi_Master_* nonnull %1) #3
  br label %44

44:                                               ; preds = %11, %35, %6, %4, %42, %38, %2
  %45 = phi i32 [ 6, %2 ], [ %43, %42 ], [ 6, %38 ], [ 6, %6 ], [ 35, %4 ], [ 6, %35 ], [ 6, %11 ]
  ret i32 %45
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Get_MM_Var(%struct.FT_FaceRec_*, %struct.FT_MM_Var_**) local_unnamed_addr #0 {
  %3 = icmp eq %struct.FT_MM_Var_** %1, null
  br i1 %3, label %45, label %4

4:                                                ; preds = %2
  %5 = icmp eq %struct.FT_FaceRec_* %0, null
  br i1 %5, label %45, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %8, 256
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %45, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 30
  %13 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %12, align 8
  %14 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %13, i64 0, i32 3, i32 1
  %15 = load i8*, i8** %14, align 8
  %16 = ptrtoint i8* %15 to i64
  switch i64 %16, label %35 [
    i64 -2, label %45
    i64 0, label %17
  ]

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 24
  %19 = bitcast %struct.FT_DriverRec_** %18 to %struct.FT_ModuleRec_**
  %20 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %19, align 8
  %21 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %20, i64 0, i32 0
  %22 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %21, align 8
  %23 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %22, i64 0, i32 8
  %24 = load i8* (%struct.FT_ModuleRec_*, i8*)*, i8* (%struct.FT_ModuleRec_*, i8*)** %23, align 8
  %25 = icmp eq i8* (%struct.FT_ModuleRec_*, i8*)* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %17
  %27 = tail call i8* %24(%struct.FT_ModuleRec_* %20, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0)) #3
  %28 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %12, align 8
  br label %29

29:                                               ; preds = %26, %17
  %30 = phi %struct.FT_Face_InternalRec_* [ %28, %26 ], [ %13, %17 ]
  %31 = phi i8* [ %27, %26 ], [ null, %17 ]
  %32 = icmp eq i8* %31, null
  %33 = select i1 %32, i8* inttoptr (i64 -2 to i8*), i8* %31
  %34 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %30, i64 0, i32 3, i32 1
  store i8* %33, i8** %34, align 8
  br label %35

35:                                               ; preds = %11, %29
  %36 = phi i8* [ %31, %29 ], [ %15, %11 ]
  %37 = icmp eq i8* %36, null
  br i1 %37, label %45, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds i8, i8* %36, i64 32
  %40 = bitcast i8* %39 to i32 (%struct.FT_FaceRec_*, %struct.FT_MM_Var_**)**
  %41 = load i32 (%struct.FT_FaceRec_*, %struct.FT_MM_Var_**)*, i32 (%struct.FT_FaceRec_*, %struct.FT_MM_Var_**)** %40, align 8
  %42 = icmp eq i32 (%struct.FT_FaceRec_*, %struct.FT_MM_Var_**)* %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %38
  %44 = tail call i32 %41(%struct.FT_FaceRec_* nonnull %0, %struct.FT_MM_Var_** nonnull %1) #3
  br label %45

45:                                               ; preds = %11, %35, %6, %4, %43, %38, %2
  %46 = phi i32 [ 6, %2 ], [ %44, %43 ], [ 6, %38 ], [ 6, %6 ], [ 35, %4 ], [ 6, %35 ], [ 6, %11 ]
  ret i32 %46
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Done_MM_Var(%struct.FT_LibraryRec_* readonly, %struct.FT_MM_Var_*) local_unnamed_addr #0 {
  %3 = icmp eq %struct.FT_LibraryRec_* %0, null
  br i1 %3, label %8, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 0
  %6 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %5, align 8
  %7 = bitcast %struct.FT_MM_Var_* %1 to i8*
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %6, i8* %7) #3
  br label %8

8:                                                ; preds = %2, %4
  %9 = phi i32 [ 0, %4 ], [ 33, %2 ]
  ret i32 %9
}

declare hidden void @ft_mem_free(%struct.FT_MemoryRec_*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Set_MM_Design_Coordinates(%struct.FT_FaceRec_*, i32, i64*) local_unnamed_addr #0 {
  %4 = icmp eq i32 %1, 0
  %5 = icmp ne i64* %2, null
  %6 = or i1 %4, %5
  br i1 %6, label %7, label %56

7:                                                ; preds = %3
  %8 = icmp eq %struct.FT_FaceRec_* %0, null
  br i1 %8, label %56, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = and i64 %11, 256
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %56, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 30
  %16 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %15, align 8
  %17 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %16, i64 0, i32 3, i32 1
  %18 = load i8*, i8** %17, align 8
  %19 = ptrtoint i8* %18 to i64
  switch i64 %19, label %38 [
    i64 -2, label %56
    i64 0, label %20
  ]

20:                                               ; preds = %14
  %21 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 24
  %22 = bitcast %struct.FT_DriverRec_** %21 to %struct.FT_ModuleRec_**
  %23 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %22, align 8
  %24 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %23, i64 0, i32 0
  %25 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %24, align 8
  %26 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %25, i64 0, i32 8
  %27 = load i8* (%struct.FT_ModuleRec_*, i8*)*, i8* (%struct.FT_ModuleRec_*, i8*)** %26, align 8
  %28 = icmp eq i8* (%struct.FT_ModuleRec_*, i8*)* %27, null
  br i1 %28, label %32, label %29

29:                                               ; preds = %20
  %30 = tail call i8* %27(%struct.FT_ModuleRec_* %23, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0)) #3
  %31 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %15, align 8
  br label %32

32:                                               ; preds = %29, %20
  %33 = phi %struct.FT_Face_InternalRec_* [ %31, %29 ], [ %16, %20 ]
  %34 = phi i8* [ %30, %29 ], [ null, %20 ]
  %35 = icmp eq i8* %34, null
  %36 = select i1 %35, i8* inttoptr (i64 -2 to i8*), i8* %34
  %37 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %33, i64 0, i32 3, i32 1
  store i8* %36, i8** %37, align 8
  br label %38

38:                                               ; preds = %14, %32
  %39 = phi i8* [ %34, %32 ], [ %18, %14 ]
  %40 = icmp eq i8* %39, null
  br i1 %40, label %56, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds i8, i8* %39, i64 8
  %43 = bitcast i8* %42 to i32 (%struct.FT_FaceRec_*, i32, i64*)**
  %44 = load i32 (%struct.FT_FaceRec_*, i32, i64*)*, i32 (%struct.FT_FaceRec_*, i32, i64*)** %43, align 8
  %45 = icmp eq i32 (%struct.FT_FaceRec_*, i32, i64*)* %44, null
  br i1 %45, label %56, label %46

46:                                               ; preds = %41
  %47 = tail call i32 %44(%struct.FT_FaceRec_* nonnull %0, i32 %1, i64* %2) #3
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %56

49:                                               ; preds = %46
  %50 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 28, i32 1
  %51 = load void (i8*)*, void (i8*)** %50, align 8
  %52 = icmp eq void (i8*)* %51, null
  br i1 %52, label %56, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 28, i32 0
  %55 = load i8*, i8** %54, align 8
  tail call void %51(i8* %55) #3
  store i8* null, i8** %54, align 8
  br label %56

56:                                               ; preds = %14, %38, %9, %7, %41, %53, %46, %49, %3
  %57 = phi i32 [ 6, %3 ], [ 0, %49 ], [ %47, %46 ], [ 0, %53 ], [ 6, %41 ], [ 6, %9 ], [ 35, %7 ], [ 6, %38 ], [ 6, %14 ]
  ret i32 %57
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Set_MM_WeightVector(%struct.FT_FaceRec_*, i32, i64*) local_unnamed_addr #0 {
  %4 = icmp eq i32 %1, 0
  %5 = icmp ne i64* %2, null
  %6 = or i1 %4, %5
  br i1 %6, label %7, label %56

7:                                                ; preds = %3
  %8 = icmp eq %struct.FT_FaceRec_* %0, null
  br i1 %8, label %56, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = and i64 %11, 256
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %56, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 30
  %16 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %15, align 8
  %17 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %16, i64 0, i32 3, i32 1
  %18 = load i8*, i8** %17, align 8
  %19 = ptrtoint i8* %18 to i64
  switch i64 %19, label %38 [
    i64 -2, label %56
    i64 0, label %20
  ]

20:                                               ; preds = %14
  %21 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 24
  %22 = bitcast %struct.FT_DriverRec_** %21 to %struct.FT_ModuleRec_**
  %23 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %22, align 8
  %24 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %23, i64 0, i32 0
  %25 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %24, align 8
  %26 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %25, i64 0, i32 8
  %27 = load i8* (%struct.FT_ModuleRec_*, i8*)*, i8* (%struct.FT_ModuleRec_*, i8*)** %26, align 8
  %28 = icmp eq i8* (%struct.FT_ModuleRec_*, i8*)* %27, null
  br i1 %28, label %32, label %29

29:                                               ; preds = %20
  %30 = tail call i8* %27(%struct.FT_ModuleRec_* %23, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0)) #3
  %31 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %15, align 8
  br label %32

32:                                               ; preds = %29, %20
  %33 = phi %struct.FT_Face_InternalRec_* [ %31, %29 ], [ %16, %20 ]
  %34 = phi i8* [ %30, %29 ], [ null, %20 ]
  %35 = icmp eq i8* %34, null
  %36 = select i1 %35, i8* inttoptr (i64 -2 to i8*), i8* %34
  %37 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %33, i64 0, i32 3, i32 1
  store i8* %36, i8** %37, align 8
  br label %38

38:                                               ; preds = %14, %32
  %39 = phi i8* [ %34, %32 ], [ %18, %14 ]
  %40 = icmp eq i8* %39, null
  br i1 %40, label %56, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds i8, i8* %39, i64 64
  %43 = bitcast i8* %42 to i32 (%struct.FT_FaceRec_*, i32, i64*)**
  %44 = load i32 (%struct.FT_FaceRec_*, i32, i64*)*, i32 (%struct.FT_FaceRec_*, i32, i64*)** %43, align 8
  %45 = icmp eq i32 (%struct.FT_FaceRec_*, i32, i64*)* %44, null
  br i1 %45, label %56, label %46

46:                                               ; preds = %41
  %47 = tail call i32 %44(%struct.FT_FaceRec_* nonnull %0, i32 %1, i64* %2) #3
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %56

49:                                               ; preds = %46
  %50 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 28, i32 1
  %51 = load void (i8*)*, void (i8*)** %50, align 8
  %52 = icmp eq void (i8*)* %51, null
  br i1 %52, label %56, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 28, i32 0
  %55 = load i8*, i8** %54, align 8
  tail call void %51(i8* %55) #3
  store i8* null, i8** %54, align 8
  br label %56

56:                                               ; preds = %14, %38, %9, %7, %41, %53, %46, %49, %3
  %57 = phi i32 [ 6, %3 ], [ 0, %49 ], [ %47, %46 ], [ 0, %53 ], [ 6, %41 ], [ 6, %9 ], [ 35, %7 ], [ 6, %38 ], [ 6, %14 ]
  ret i32 %57
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Get_MM_WeightVector(%struct.FT_FaceRec_*, i32*, i64*) local_unnamed_addr #0 {
  %4 = icmp eq i32* %1, null
  %5 = icmp ne i64* %2, null
  %6 = or i1 %4, %5
  br i1 %6, label %7, label %48

7:                                                ; preds = %3
  %8 = icmp eq %struct.FT_FaceRec_* %0, null
  br i1 %8, label %48, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = and i64 %11, 256
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %48, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 30
  %16 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %15, align 8
  %17 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %16, i64 0, i32 3, i32 1
  %18 = load i8*, i8** %17, align 8
  %19 = ptrtoint i8* %18 to i64
  switch i64 %19, label %38 [
    i64 -2, label %48
    i64 0, label %20
  ]

20:                                               ; preds = %14
  %21 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 24
  %22 = bitcast %struct.FT_DriverRec_** %21 to %struct.FT_ModuleRec_**
  %23 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %22, align 8
  %24 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %23, i64 0, i32 0
  %25 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %24, align 8
  %26 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %25, i64 0, i32 8
  %27 = load i8* (%struct.FT_ModuleRec_*, i8*)*, i8* (%struct.FT_ModuleRec_*, i8*)** %26, align 8
  %28 = icmp eq i8* (%struct.FT_ModuleRec_*, i8*)* %27, null
  br i1 %28, label %32, label %29

29:                                               ; preds = %20
  %30 = tail call i8* %27(%struct.FT_ModuleRec_* %23, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0)) #3
  %31 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %15, align 8
  br label %32

32:                                               ; preds = %29, %20
  %33 = phi %struct.FT_Face_InternalRec_* [ %31, %29 ], [ %16, %20 ]
  %34 = phi i8* [ %30, %29 ], [ null, %20 ]
  %35 = icmp eq i8* %34, null
  %36 = select i1 %35, i8* inttoptr (i64 -2 to i8*), i8* %34
  %37 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %33, i64 0, i32 3, i32 1
  store i8* %36, i8** %37, align 8
  br label %38

38:                                               ; preds = %14, %32
  %39 = phi i8* [ %34, %32 ], [ %18, %14 ]
  %40 = icmp eq i8* %39, null
  br i1 %40, label %48, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds i8, i8* %39, i64 72
  %43 = bitcast i8* %42 to i32 (%struct.FT_FaceRec_*, i32*, i64*)**
  %44 = load i32 (%struct.FT_FaceRec_*, i32*, i64*)*, i32 (%struct.FT_FaceRec_*, i32*, i64*)** %43, align 8
  %45 = icmp eq i32 (%struct.FT_FaceRec_*, i32*, i64*)* %44, null
  br i1 %45, label %48, label %46

46:                                               ; preds = %41
  %47 = tail call i32 %44(%struct.FT_FaceRec_* nonnull %0, i32* %1, i64* %2) #3
  br label %48

48:                                               ; preds = %14, %38, %9, %7, %46, %41, %3
  %49 = phi i32 [ 6, %3 ], [ %47, %46 ], [ 6, %41 ], [ 6, %9 ], [ 35, %7 ], [ 6, %38 ], [ 6, %14 ]
  ret i32 %49
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Set_Var_Design_Coordinates(%struct.FT_FaceRec_*, i32, i64*) local_unnamed_addr #0 {
  %4 = icmp eq i32 %1, 0
  %5 = icmp ne i64* %2, null
  %6 = or i1 %4, %5
  br i1 %6, label %7, label %92

7:                                                ; preds = %3
  %8 = icmp eq %struct.FT_FaceRec_* %0, null
  br i1 %8, label %92, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = and i64 %11, 256
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %92, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 30
  %16 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %15, align 8
  %17 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %16, i64 0, i32 3, i32 1
  %18 = load i8*, i8** %17, align 8
  %19 = ptrtoint i8* %18 to i64
  switch i64 %19, label %38 [
    i64 -2, label %92
    i64 0, label %20
  ]

20:                                               ; preds = %14
  %21 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 24
  %22 = bitcast %struct.FT_DriverRec_** %21 to %struct.FT_ModuleRec_**
  %23 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %22, align 8
  %24 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %23, i64 0, i32 0
  %25 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %24, align 8
  %26 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %25, i64 0, i32 8
  %27 = load i8* (%struct.FT_ModuleRec_*, i8*)*, i8* (%struct.FT_ModuleRec_*, i8*)** %26, align 8
  %28 = icmp eq i8* (%struct.FT_ModuleRec_*, i8*)* %27, null
  br i1 %28, label %32, label %29

29:                                               ; preds = %20
  %30 = tail call i8* %27(%struct.FT_ModuleRec_* %23, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0)) #3
  %31 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %15, align 8
  br label %32

32:                                               ; preds = %29, %20
  %33 = phi %struct.FT_Face_InternalRec_* [ %31, %29 ], [ %16, %20 ]
  %34 = phi i8* [ %30, %29 ], [ null, %20 ]
  %35 = icmp eq i8* %34, null
  %36 = select i1 %35, i8* inttoptr (i64 -2 to i8*), i8* %34
  %37 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %33, i64 0, i32 3, i32 1
  store i8* %36, i8** %37, align 8
  br label %38

38:                                               ; preds = %14, %32
  %39 = phi i8* [ %34, %32 ], [ %18, %14 ]
  %40 = icmp eq i8* %39, null
  br i1 %40, label %92, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds i8, i8* %39, i64 40
  %43 = bitcast i8* %42 to i32 (%struct.FT_FaceRec_*, i32, i64*)**
  %44 = load i32 (%struct.FT_FaceRec_*, i32, i64*)*, i32 (%struct.FT_FaceRec_*, i32, i64*)** %43, align 8
  %45 = icmp eq i32 (%struct.FT_FaceRec_*, i32, i64*)* %44, null
  br i1 %45, label %92, label %46

46:                                               ; preds = %41
  %47 = tail call i32 %44(%struct.FT_FaceRec_* nonnull %0, i32 %1, i64* %2) #3
  switch i32 %47, label %91 [
    i32 -1, label %92
    i32 0, label %48
  ]

48:                                               ; preds = %46
  %49 = load i64, i64* %10, align 8
  %50 = and i64 %49, 256
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %84, label %52

52:                                               ; preds = %48
  %53 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %15, align 8
  %54 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %53, i64 0, i32 3, i32 2
  %55 = load i8*, i8** %54, align 8
  %56 = ptrtoint i8* %55 to i64
  switch i64 %56, label %75 [
    i64 -2, label %84
    i64 0, label %57
  ]

57:                                               ; preds = %52
  %58 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 24
  %59 = bitcast %struct.FT_DriverRec_** %58 to %struct.FT_ModuleRec_**
  %60 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %59, align 8
  %61 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %60, i64 0, i32 0
  %62 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %61, align 8
  %63 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %62, i64 0, i32 8
  %64 = load i8* (%struct.FT_ModuleRec_*, i8*)*, i8* (%struct.FT_ModuleRec_*, i8*)** %63, align 8
  %65 = icmp eq i8* (%struct.FT_ModuleRec_*, i8*)* %64, null
  br i1 %65, label %69, label %66

66:                                               ; preds = %57
  %67 = tail call i8* %64(%struct.FT_ModuleRec_* %60, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i64 0, i64 0)) #3
  %68 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %15, align 8
  br label %69

69:                                               ; preds = %66, %57
  %70 = phi %struct.FT_Face_InternalRec_* [ %68, %66 ], [ %53, %57 ]
  %71 = phi i8* [ %67, %66 ], [ null, %57 ]
  %72 = icmp eq i8* %71, null
  %73 = select i1 %72, i8* inttoptr (i64 -2 to i8*), i8* %71
  %74 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %70, i64 0, i32 3, i32 2
  store i8* %73, i8** %74, align 8
  br label %75

75:                                               ; preds = %52, %69
  %76 = phi i8* [ %71, %69 ], [ %55, %52 ]
  %77 = icmp eq i8* %76, null
  br i1 %77, label %84, label %78

78:                                               ; preds = %75
  %79 = getelementptr inbounds i8, i8* %76, i64 56
  %80 = bitcast i8* %79 to void (%struct.FT_FaceRec_*)**
  %81 = load void (%struct.FT_FaceRec_*)*, void (%struct.FT_FaceRec_*)** %80, align 8
  %82 = icmp eq void (%struct.FT_FaceRec_*)* %81, null
  br i1 %82, label %84, label %83

83:                                               ; preds = %78
  tail call void %81(%struct.FT_FaceRec_* nonnull %0) #3
  br label %84

84:                                               ; preds = %52, %48, %83, %75, %78
  %85 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 28, i32 1
  %86 = load void (i8*)*, void (i8*)** %85, align 8
  %87 = icmp eq void (i8*)* %86, null
  br i1 %87, label %92, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 28, i32 0
  %90 = load i8*, i8** %89, align 8
  tail call void %86(i8* %90) #3
  store i8* null, i8** %89, align 8
  br label %92

91:                                               ; preds = %46
  br label %92

92:                                               ; preds = %46, %91, %14, %41, %38, %9, %7, %88, %84, %3
  %93 = phi i32 [ 6, %3 ], [ 0, %46 ], [ 0, %84 ], [ 0, %88 ], [ 6, %9 ], [ 35, %7 ], [ 6, %38 ], [ 6, %41 ], [ 6, %14 ], [ %47, %91 ]
  ret i32 %93
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Get_Var_Design_Coordinates(%struct.FT_FaceRec_*, i32, i64*) local_unnamed_addr #0 {
  %4 = icmp eq i64* %2, null
  br i1 %4, label %46, label %5

5:                                                ; preds = %3
  %6 = icmp eq %struct.FT_FaceRec_* %0, null
  br i1 %6, label %46, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, 256
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %46, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 30
  %14 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %13, align 8
  %15 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %14, i64 0, i32 3, i32 1
  %16 = load i8*, i8** %15, align 8
  %17 = ptrtoint i8* %16 to i64
  switch i64 %17, label %36 [
    i64 -2, label %46
    i64 0, label %18
  ]

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 24
  %20 = bitcast %struct.FT_DriverRec_** %19 to %struct.FT_ModuleRec_**
  %21 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %20, align 8
  %22 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %21, i64 0, i32 0
  %23 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %22, align 8
  %24 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %23, i64 0, i32 8
  %25 = load i8* (%struct.FT_ModuleRec_*, i8*)*, i8* (%struct.FT_ModuleRec_*, i8*)** %24, align 8
  %26 = icmp eq i8* (%struct.FT_ModuleRec_*, i8*)* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %18
  %28 = tail call i8* %25(%struct.FT_ModuleRec_* %21, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0)) #3
  %29 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %13, align 8
  br label %30

30:                                               ; preds = %27, %18
  %31 = phi %struct.FT_Face_InternalRec_* [ %29, %27 ], [ %14, %18 ]
  %32 = phi i8* [ %28, %27 ], [ null, %18 ]
  %33 = icmp eq i8* %32, null
  %34 = select i1 %33, i8* inttoptr (i64 -2 to i8*), i8* %32
  %35 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %31, i64 0, i32 3, i32 1
  store i8* %34, i8** %35, align 8
  br label %36

36:                                               ; preds = %12, %30
  %37 = phi i8* [ %32, %30 ], [ %16, %12 ]
  %38 = icmp eq i8* %37, null
  br i1 %38, label %46, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds i8, i8* %37, i64 48
  %41 = bitcast i8* %40 to i32 (%struct.FT_FaceRec_*, i32, i64*)**
  %42 = load i32 (%struct.FT_FaceRec_*, i32, i64*)*, i32 (%struct.FT_FaceRec_*, i32, i64*)** %41, align 8
  %43 = icmp eq i32 (%struct.FT_FaceRec_*, i32, i64*)* %42, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %39
  %45 = tail call i32 %42(%struct.FT_FaceRec_* nonnull %0, i32 %1, i64* nonnull %2) #3
  br label %46

46:                                               ; preds = %12, %36, %7, %5, %44, %39, %3
  %47 = phi i32 [ 6, %3 ], [ %45, %44 ], [ 6, %39 ], [ 6, %7 ], [ 35, %5 ], [ 6, %36 ], [ 6, %12 ]
  ret i32 %47
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Set_MM_Blend_Coordinates(%struct.FT_FaceRec_*, i32, i64*) local_unnamed_addr #0 {
  %4 = icmp eq i32 %1, 0
  %5 = icmp ne i64* %2, null
  %6 = or i1 %4, %5
  br i1 %6, label %7, label %92

7:                                                ; preds = %3
  %8 = icmp eq %struct.FT_FaceRec_* %0, null
  br i1 %8, label %92, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = and i64 %11, 256
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %92, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 30
  %16 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %15, align 8
  %17 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %16, i64 0, i32 3, i32 1
  %18 = load i8*, i8** %17, align 8
  %19 = ptrtoint i8* %18 to i64
  switch i64 %19, label %38 [
    i64 -2, label %92
    i64 0, label %20
  ]

20:                                               ; preds = %14
  %21 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 24
  %22 = bitcast %struct.FT_DriverRec_** %21 to %struct.FT_ModuleRec_**
  %23 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %22, align 8
  %24 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %23, i64 0, i32 0
  %25 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %24, align 8
  %26 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %25, i64 0, i32 8
  %27 = load i8* (%struct.FT_ModuleRec_*, i8*)*, i8* (%struct.FT_ModuleRec_*, i8*)** %26, align 8
  %28 = icmp eq i8* (%struct.FT_ModuleRec_*, i8*)* %27, null
  br i1 %28, label %32, label %29

29:                                               ; preds = %20
  %30 = tail call i8* %27(%struct.FT_ModuleRec_* %23, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0)) #3
  %31 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %15, align 8
  br label %32

32:                                               ; preds = %29, %20
  %33 = phi %struct.FT_Face_InternalRec_* [ %31, %29 ], [ %16, %20 ]
  %34 = phi i8* [ %30, %29 ], [ null, %20 ]
  %35 = icmp eq i8* %34, null
  %36 = select i1 %35, i8* inttoptr (i64 -2 to i8*), i8* %34
  %37 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %33, i64 0, i32 3, i32 1
  store i8* %36, i8** %37, align 8
  br label %38

38:                                               ; preds = %14, %32
  %39 = phi i8* [ %34, %32 ], [ %18, %14 ]
  %40 = icmp eq i8* %39, null
  br i1 %40, label %92, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds i8, i8* %39, i64 16
  %43 = bitcast i8* %42 to i32 (%struct.FT_FaceRec_*, i32, i64*)**
  %44 = load i32 (%struct.FT_FaceRec_*, i32, i64*)*, i32 (%struct.FT_FaceRec_*, i32, i64*)** %43, align 8
  %45 = icmp eq i32 (%struct.FT_FaceRec_*, i32, i64*)* %44, null
  br i1 %45, label %92, label %46

46:                                               ; preds = %41
  %47 = tail call i32 %44(%struct.FT_FaceRec_* nonnull %0, i32 %1, i64* %2) #3
  switch i32 %47, label %91 [
    i32 -1, label %92
    i32 0, label %48
  ]

48:                                               ; preds = %46
  %49 = load i64, i64* %10, align 8
  %50 = and i64 %49, 256
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %84, label %52

52:                                               ; preds = %48
  %53 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %15, align 8
  %54 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %53, i64 0, i32 3, i32 2
  %55 = load i8*, i8** %54, align 8
  %56 = ptrtoint i8* %55 to i64
  switch i64 %56, label %75 [
    i64 -2, label %84
    i64 0, label %57
  ]

57:                                               ; preds = %52
  %58 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 24
  %59 = bitcast %struct.FT_DriverRec_** %58 to %struct.FT_ModuleRec_**
  %60 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %59, align 8
  %61 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %60, i64 0, i32 0
  %62 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %61, align 8
  %63 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %62, i64 0, i32 8
  %64 = load i8* (%struct.FT_ModuleRec_*, i8*)*, i8* (%struct.FT_ModuleRec_*, i8*)** %63, align 8
  %65 = icmp eq i8* (%struct.FT_ModuleRec_*, i8*)* %64, null
  br i1 %65, label %69, label %66

66:                                               ; preds = %57
  %67 = tail call i8* %64(%struct.FT_ModuleRec_* %60, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i64 0, i64 0)) #3
  %68 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %15, align 8
  br label %69

69:                                               ; preds = %66, %57
  %70 = phi %struct.FT_Face_InternalRec_* [ %68, %66 ], [ %53, %57 ]
  %71 = phi i8* [ %67, %66 ], [ null, %57 ]
  %72 = icmp eq i8* %71, null
  %73 = select i1 %72, i8* inttoptr (i64 -2 to i8*), i8* %71
  %74 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %70, i64 0, i32 3, i32 2
  store i8* %73, i8** %74, align 8
  br label %75

75:                                               ; preds = %52, %69
  %76 = phi i8* [ %71, %69 ], [ %55, %52 ]
  %77 = icmp eq i8* %76, null
  br i1 %77, label %84, label %78

78:                                               ; preds = %75
  %79 = getelementptr inbounds i8, i8* %76, i64 56
  %80 = bitcast i8* %79 to void (%struct.FT_FaceRec_*)**
  %81 = load void (%struct.FT_FaceRec_*)*, void (%struct.FT_FaceRec_*)** %80, align 8
  %82 = icmp eq void (%struct.FT_FaceRec_*)* %81, null
  br i1 %82, label %84, label %83

83:                                               ; preds = %78
  tail call void %81(%struct.FT_FaceRec_* nonnull %0) #3
  br label %84

84:                                               ; preds = %52, %48, %83, %75, %78
  %85 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 28, i32 1
  %86 = load void (i8*)*, void (i8*)** %85, align 8
  %87 = icmp eq void (i8*)* %86, null
  br i1 %87, label %92, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 28, i32 0
  %90 = load i8*, i8** %89, align 8
  tail call void %86(i8* %90) #3
  store i8* null, i8** %89, align 8
  br label %92

91:                                               ; preds = %46
  br label %92

92:                                               ; preds = %46, %91, %14, %41, %38, %9, %7, %88, %84, %3
  %93 = phi i32 [ 6, %3 ], [ 0, %46 ], [ 0, %84 ], [ 0, %88 ], [ 6, %9 ], [ 35, %7 ], [ 6, %38 ], [ 6, %41 ], [ 6, %14 ], [ %47, %91 ]
  ret i32 %93
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Set_Var_Blend_Coordinates(%struct.FT_FaceRec_*, i32, i64*) local_unnamed_addr #0 {
  %4 = icmp eq i32 %1, 0
  %5 = icmp ne i64* %2, null
  %6 = or i1 %4, %5
  br i1 %6, label %7, label %92

7:                                                ; preds = %3
  %8 = icmp eq %struct.FT_FaceRec_* %0, null
  br i1 %8, label %92, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = and i64 %11, 256
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %92, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 30
  %16 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %15, align 8
  %17 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %16, i64 0, i32 3, i32 1
  %18 = load i8*, i8** %17, align 8
  %19 = ptrtoint i8* %18 to i64
  switch i64 %19, label %38 [
    i64 -2, label %92
    i64 0, label %20
  ]

20:                                               ; preds = %14
  %21 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 24
  %22 = bitcast %struct.FT_DriverRec_** %21 to %struct.FT_ModuleRec_**
  %23 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %22, align 8
  %24 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %23, i64 0, i32 0
  %25 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %24, align 8
  %26 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %25, i64 0, i32 8
  %27 = load i8* (%struct.FT_ModuleRec_*, i8*)*, i8* (%struct.FT_ModuleRec_*, i8*)** %26, align 8
  %28 = icmp eq i8* (%struct.FT_ModuleRec_*, i8*)* %27, null
  br i1 %28, label %32, label %29

29:                                               ; preds = %20
  %30 = tail call i8* %27(%struct.FT_ModuleRec_* %23, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0)) #3
  %31 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %15, align 8
  br label %32

32:                                               ; preds = %29, %20
  %33 = phi %struct.FT_Face_InternalRec_* [ %31, %29 ], [ %16, %20 ]
  %34 = phi i8* [ %30, %29 ], [ null, %20 ]
  %35 = icmp eq i8* %34, null
  %36 = select i1 %35, i8* inttoptr (i64 -2 to i8*), i8* %34
  %37 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %33, i64 0, i32 3, i32 1
  store i8* %36, i8** %37, align 8
  br label %38

38:                                               ; preds = %14, %32
  %39 = phi i8* [ %34, %32 ], [ %18, %14 ]
  %40 = icmp eq i8* %39, null
  br i1 %40, label %92, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds i8, i8* %39, i64 16
  %43 = bitcast i8* %42 to i32 (%struct.FT_FaceRec_*, i32, i64*)**
  %44 = load i32 (%struct.FT_FaceRec_*, i32, i64*)*, i32 (%struct.FT_FaceRec_*, i32, i64*)** %43, align 8
  %45 = icmp eq i32 (%struct.FT_FaceRec_*, i32, i64*)* %44, null
  br i1 %45, label %92, label %46

46:                                               ; preds = %41
  %47 = tail call i32 %44(%struct.FT_FaceRec_* nonnull %0, i32 %1, i64* %2) #3
  switch i32 %47, label %91 [
    i32 -1, label %92
    i32 0, label %48
  ]

48:                                               ; preds = %46
  %49 = load i64, i64* %10, align 8
  %50 = and i64 %49, 256
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %84, label %52

52:                                               ; preds = %48
  %53 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %15, align 8
  %54 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %53, i64 0, i32 3, i32 2
  %55 = load i8*, i8** %54, align 8
  %56 = ptrtoint i8* %55 to i64
  switch i64 %56, label %75 [
    i64 -2, label %84
    i64 0, label %57
  ]

57:                                               ; preds = %52
  %58 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 24
  %59 = bitcast %struct.FT_DriverRec_** %58 to %struct.FT_ModuleRec_**
  %60 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %59, align 8
  %61 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %60, i64 0, i32 0
  %62 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %61, align 8
  %63 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %62, i64 0, i32 8
  %64 = load i8* (%struct.FT_ModuleRec_*, i8*)*, i8* (%struct.FT_ModuleRec_*, i8*)** %63, align 8
  %65 = icmp eq i8* (%struct.FT_ModuleRec_*, i8*)* %64, null
  br i1 %65, label %69, label %66

66:                                               ; preds = %57
  %67 = tail call i8* %64(%struct.FT_ModuleRec_* %60, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i64 0, i64 0)) #3
  %68 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %15, align 8
  br label %69

69:                                               ; preds = %66, %57
  %70 = phi %struct.FT_Face_InternalRec_* [ %68, %66 ], [ %53, %57 ]
  %71 = phi i8* [ %67, %66 ], [ null, %57 ]
  %72 = icmp eq i8* %71, null
  %73 = select i1 %72, i8* inttoptr (i64 -2 to i8*), i8* %71
  %74 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %70, i64 0, i32 3, i32 2
  store i8* %73, i8** %74, align 8
  br label %75

75:                                               ; preds = %52, %69
  %76 = phi i8* [ %71, %69 ], [ %55, %52 ]
  %77 = icmp eq i8* %76, null
  br i1 %77, label %84, label %78

78:                                               ; preds = %75
  %79 = getelementptr inbounds i8, i8* %76, i64 56
  %80 = bitcast i8* %79 to void (%struct.FT_FaceRec_*)**
  %81 = load void (%struct.FT_FaceRec_*)*, void (%struct.FT_FaceRec_*)** %80, align 8
  %82 = icmp eq void (%struct.FT_FaceRec_*)* %81, null
  br i1 %82, label %84, label %83

83:                                               ; preds = %78
  tail call void %81(%struct.FT_FaceRec_* nonnull %0) #3
  br label %84

84:                                               ; preds = %52, %48, %83, %75, %78
  %85 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 28, i32 1
  %86 = load void (i8*)*, void (i8*)** %85, align 8
  %87 = icmp eq void (i8*)* %86, null
  br i1 %87, label %92, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 28, i32 0
  %90 = load i8*, i8** %89, align 8
  tail call void %86(i8* %90) #3
  store i8* null, i8** %89, align 8
  br label %92

91:                                               ; preds = %46
  br label %92

92:                                               ; preds = %46, %91, %14, %41, %38, %9, %7, %88, %84, %3
  %93 = phi i32 [ 6, %3 ], [ 0, %46 ], [ 0, %84 ], [ 0, %88 ], [ 6, %9 ], [ 35, %7 ], [ 6, %38 ], [ 6, %41 ], [ 6, %14 ], [ %47, %91 ]
  ret i32 %93
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Get_MM_Blend_Coordinates(%struct.FT_FaceRec_*, i32, i64*) local_unnamed_addr #0 {
  %4 = icmp eq i64* %2, null
  br i1 %4, label %46, label %5

5:                                                ; preds = %3
  %6 = icmp eq %struct.FT_FaceRec_* %0, null
  br i1 %6, label %46, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, 256
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %46, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 30
  %14 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %13, align 8
  %15 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %14, i64 0, i32 3, i32 1
  %16 = load i8*, i8** %15, align 8
  %17 = ptrtoint i8* %16 to i64
  switch i64 %17, label %36 [
    i64 -2, label %46
    i64 0, label %18
  ]

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 24
  %20 = bitcast %struct.FT_DriverRec_** %19 to %struct.FT_ModuleRec_**
  %21 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %20, align 8
  %22 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %21, i64 0, i32 0
  %23 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %22, align 8
  %24 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %23, i64 0, i32 8
  %25 = load i8* (%struct.FT_ModuleRec_*, i8*)*, i8* (%struct.FT_ModuleRec_*, i8*)** %24, align 8
  %26 = icmp eq i8* (%struct.FT_ModuleRec_*, i8*)* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %18
  %28 = tail call i8* %25(%struct.FT_ModuleRec_* %21, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0)) #3
  %29 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %13, align 8
  br label %30

30:                                               ; preds = %27, %18
  %31 = phi %struct.FT_Face_InternalRec_* [ %29, %27 ], [ %14, %18 ]
  %32 = phi i8* [ %28, %27 ], [ null, %18 ]
  %33 = icmp eq i8* %32, null
  %34 = select i1 %33, i8* inttoptr (i64 -2 to i8*), i8* %32
  %35 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %31, i64 0, i32 3, i32 1
  store i8* %34, i8** %35, align 8
  br label %36

36:                                               ; preds = %12, %30
  %37 = phi i8* [ %32, %30 ], [ %16, %12 ]
  %38 = icmp eq i8* %37, null
  br i1 %38, label %46, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds i8, i8* %37, i64 24
  %41 = bitcast i8* %40 to i32 (%struct.FT_FaceRec_*, i32, i64*)**
  %42 = load i32 (%struct.FT_FaceRec_*, i32, i64*)*, i32 (%struct.FT_FaceRec_*, i32, i64*)** %41, align 8
  %43 = icmp eq i32 (%struct.FT_FaceRec_*, i32, i64*)* %42, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %39
  %45 = tail call i32 %42(%struct.FT_FaceRec_* nonnull %0, i32 %1, i64* nonnull %2) #3
  br label %46

46:                                               ; preds = %12, %36, %7, %5, %44, %39, %3
  %47 = phi i32 [ 6, %3 ], [ %45, %44 ], [ 6, %39 ], [ 6, %7 ], [ 35, %5 ], [ 6, %36 ], [ 6, %12 ]
  ret i32 %47
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Get_Var_Blend_Coordinates(%struct.FT_FaceRec_*, i32, i64*) local_unnamed_addr #0 {
  %4 = icmp eq i64* %2, null
  br i1 %4, label %46, label %5

5:                                                ; preds = %3
  %6 = icmp eq %struct.FT_FaceRec_* %0, null
  br i1 %6, label %46, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, 256
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %46, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 30
  %14 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %13, align 8
  %15 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %14, i64 0, i32 3, i32 1
  %16 = load i8*, i8** %15, align 8
  %17 = ptrtoint i8* %16 to i64
  switch i64 %17, label %36 [
    i64 -2, label %46
    i64 0, label %18
  ]

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 24
  %20 = bitcast %struct.FT_DriverRec_** %19 to %struct.FT_ModuleRec_**
  %21 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %20, align 8
  %22 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %21, i64 0, i32 0
  %23 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %22, align 8
  %24 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %23, i64 0, i32 8
  %25 = load i8* (%struct.FT_ModuleRec_*, i8*)*, i8* (%struct.FT_ModuleRec_*, i8*)** %24, align 8
  %26 = icmp eq i8* (%struct.FT_ModuleRec_*, i8*)* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %18
  %28 = tail call i8* %25(%struct.FT_ModuleRec_* %21, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0)) #3
  %29 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %13, align 8
  br label %30

30:                                               ; preds = %27, %18
  %31 = phi %struct.FT_Face_InternalRec_* [ %29, %27 ], [ %14, %18 ]
  %32 = phi i8* [ %28, %27 ], [ null, %18 ]
  %33 = icmp eq i8* %32, null
  %34 = select i1 %33, i8* inttoptr (i64 -2 to i8*), i8* %32
  %35 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %31, i64 0, i32 3, i32 1
  store i8* %34, i8** %35, align 8
  br label %36

36:                                               ; preds = %12, %30
  %37 = phi i8* [ %32, %30 ], [ %16, %12 ]
  %38 = icmp eq i8* %37, null
  br i1 %38, label %46, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds i8, i8* %37, i64 24
  %41 = bitcast i8* %40 to i32 (%struct.FT_FaceRec_*, i32, i64*)**
  %42 = load i32 (%struct.FT_FaceRec_*, i32, i64*)*, i32 (%struct.FT_FaceRec_*, i32, i64*)** %41, align 8
  %43 = icmp eq i32 (%struct.FT_FaceRec_*, i32, i64*)* %42, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %39
  %45 = tail call i32 %42(%struct.FT_FaceRec_* nonnull %0, i32 %1, i64* nonnull %2) #3
  br label %46

46:                                               ; preds = %12, %36, %7, %5, %44, %39, %3
  %47 = phi i32 [ 6, %3 ], [ %45, %44 ], [ 6, %39 ], [ 6, %7 ], [ 35, %5 ], [ 6, %36 ], [ 6, %12 ]
  ret i32 %47
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @FT_Get_Var_Axis_Flags(%struct.FT_MM_Var_* readonly, i32, i32*) local_unnamed_addr #2 {
  %4 = icmp ne %struct.FT_MM_Var_* %0, null
  %5 = icmp ne i32* %2, null
  %6 = and i1 %4, %5
  br i1 %6, label %7, label %18

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.FT_MM_Var_, %struct.FT_MM_Var_* %0, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = icmp ugt i32 %9, %1
  br i1 %10, label %11, label %18

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.FT_MM_Var_, %struct.FT_MM_Var_* %0, i64 1
  %13 = bitcast %struct.FT_MM_Var_* %12 to i16*
  %14 = zext i32 %1 to i64
  %15 = getelementptr inbounds i16, i16* %13, i64 %14
  %16 = load i16, i16* %15, align 2
  %17 = zext i16 %16 to i32
  store i32 %17, i32* %2, align 4
  br label %18

18:                                               ; preds = %7, %3, %11
  %19 = phi i32 [ 0, %11 ], [ 6, %3 ], [ 6, %7 ]
  ret i32 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Set_Named_Instance(%struct.FT_FaceRec_*, i32) local_unnamed_addr #0 {
  %3 = icmp eq %struct.FT_FaceRec_* %0, null
  br i1 %3, label %96, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 256
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %96, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 30
  %11 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %10, align 8
  %12 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %11, i64 0, i32 3, i32 1
  %13 = load i8*, i8** %12, align 8
  %14 = ptrtoint i8* %13 to i64
  switch i64 %14, label %33 [
    i64 -2, label %96
    i64 0, label %15
  ]

15:                                               ; preds = %9
  %16 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 24
  %17 = bitcast %struct.FT_DriverRec_** %16 to %struct.FT_ModuleRec_**
  %18 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %17, align 8
  %19 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %18, i64 0, i32 0
  %20 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %19, align 8
  %21 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %20, i64 0, i32 8
  %22 = load i8* (%struct.FT_ModuleRec_*, i8*)*, i8* (%struct.FT_ModuleRec_*, i8*)** %21, align 8
  %23 = icmp eq i8* (%struct.FT_ModuleRec_*, i8*)* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %15
  %25 = tail call i8* %22(%struct.FT_ModuleRec_* %18, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0)) #3
  %26 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %10, align 8
  br label %27

27:                                               ; preds = %24, %15
  %28 = phi %struct.FT_Face_InternalRec_* [ %26, %24 ], [ %11, %15 ]
  %29 = phi i8* [ %25, %24 ], [ null, %15 ]
  %30 = icmp eq i8* %29, null
  %31 = select i1 %30, i8* inttoptr (i64 -2 to i8*), i8* %29
  %32 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %28, i64 0, i32 3, i32 1
  store i8* %31, i8** %32, align 8
  br label %33

33:                                               ; preds = %9, %27
  %34 = phi i8* [ %29, %27 ], [ %13, %9 ]
  %35 = icmp eq i8* %34, null
  br i1 %35, label %96, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds i8, i8* %34, i64 56
  %38 = bitcast i8* %37 to i32 (%struct.FT_FaceRec_*, i32)**
  %39 = load i32 (%struct.FT_FaceRec_*, i32)*, i32 (%struct.FT_FaceRec_*, i32)** %38, align 8
  %40 = icmp eq i32 (%struct.FT_FaceRec_*, i32)* %39, null
  br i1 %40, label %96, label %41

41:                                               ; preds = %36
  %42 = tail call i32 %39(%struct.FT_FaceRec_* nonnull %0, i32 %1) #3
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %96

44:                                               ; preds = %41
  %45 = load i64, i64* %5, align 8
  %46 = and i64 %45, 256
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %80, label %48

48:                                               ; preds = %44
  %49 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %10, align 8
  %50 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %49, i64 0, i32 3, i32 2
  %51 = load i8*, i8** %50, align 8
  %52 = ptrtoint i8* %51 to i64
  switch i64 %52, label %71 [
    i64 -2, label %80
    i64 0, label %53
  ]

53:                                               ; preds = %48
  %54 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 24
  %55 = bitcast %struct.FT_DriverRec_** %54 to %struct.FT_ModuleRec_**
  %56 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %55, align 8
  %57 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %56, i64 0, i32 0
  %58 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %57, align 8
  %59 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %58, i64 0, i32 8
  %60 = load i8* (%struct.FT_ModuleRec_*, i8*)*, i8* (%struct.FT_ModuleRec_*, i8*)** %59, align 8
  %61 = icmp eq i8* (%struct.FT_ModuleRec_*, i8*)* %60, null
  br i1 %61, label %65, label %62

62:                                               ; preds = %53
  %63 = tail call i8* %60(%struct.FT_ModuleRec_* %56, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i64 0, i64 0)) #3
  %64 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %10, align 8
  br label %65

65:                                               ; preds = %62, %53
  %66 = phi %struct.FT_Face_InternalRec_* [ %64, %62 ], [ %49, %53 ]
  %67 = phi i8* [ %63, %62 ], [ null, %53 ]
  %68 = icmp eq i8* %67, null
  %69 = select i1 %68, i8* inttoptr (i64 -2 to i8*), i8* %67
  %70 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %66, i64 0, i32 3, i32 2
  store i8* %69, i8** %70, align 8
  br label %71

71:                                               ; preds = %48, %65
  %72 = phi i8* [ %67, %65 ], [ %51, %48 ]
  %73 = icmp eq i8* %72, null
  br i1 %73, label %80, label %74

74:                                               ; preds = %71
  %75 = getelementptr inbounds i8, i8* %72, i64 56
  %76 = bitcast i8* %75 to void (%struct.FT_FaceRec_*)**
  %77 = load void (%struct.FT_FaceRec_*)*, void (%struct.FT_FaceRec_*)** %76, align 8
  %78 = icmp eq void (%struct.FT_FaceRec_*)* %77, null
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void %77(%struct.FT_FaceRec_* nonnull %0) #3
  br label %80

80:                                               ; preds = %48, %44, %79, %71, %74
  %81 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 28, i32 1
  %82 = load void (i8*)*, void (i8*)** %81, align 8
  %83 = icmp eq void (i8*)* %82, null
  br i1 %83, label %87, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 28, i32 0
  %86 = load i8*, i8** %85, align 8
  tail call void %82(i8* %86) #3
  store i8* null, i8** %85, align 8
  br label %87

87:                                               ; preds = %84, %80
  %88 = shl i32 %1, 16
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 1
  %91 = load i64, i64* %90, align 8
  %92 = and i64 %91, 65535
  %93 = or i64 %92, %89
  store i64 %93, i64* %90, align 8
  %94 = load i64, i64* %5, align 8
  %95 = and i64 %94, -32769
  store i64 %95, i64* %5, align 8
  br label %96

96:                                               ; preds = %41, %9, %33, %4, %2, %36, %87
  %97 = phi i32 [ %42, %41 ], [ 0, %87 ], [ 6, %36 ], [ 6, %4 ], [ 35, %2 ], [ 6, %33 ], [ 6, %9 ]
  ret i32 %97
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
