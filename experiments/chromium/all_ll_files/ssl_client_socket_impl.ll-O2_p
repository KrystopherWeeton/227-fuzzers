; ModuleID = '../../net/socket/ssl_client_socket_impl.cc'
source_filename = "../../net/socket/ssl_client_socket_impl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.ssl_private_key_method_st = type { i32 (%struct.ssl_st*, i8*, i64*, i64, i16, i8*, i64)*, i32 (%struct.ssl_st*, i8*, i64*, i64, i8*, i64)*, i32 (%struct.ssl_st*, i8*, i64*, i64)* }
%struct.ssl_st = type opaque
%"struct.base::Feature" = type { i8*, i32 }
%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"struct.base::FeatureParam" = type { %"struct.base::Feature"*, i8*, i8* }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.net::SSLClientSocketImpl" = type { %"class.net::SSLClientSocket.base", %"class.net::SocketBIOAdapter::Delegate", %"class.base::OnceCallback", %"class.base::OnceCallback", %"class.base::OnceCallback", %class.scoped_refptr.7, i32, %class.scoped_refptr.7, i32, i8, i8, i32, i32, %"struct.net::OpenSSLErrorInfo", %class.scoped_refptr.9, %"class.net::CertVerifyResult", i8, i8, %"class.net::SSLClientContext"*, %"class.std::__1::unique_ptr.157", %"class.base::TimeTicks", i32, %"class.std::__1::unique_ptr.164", %"class.std::__1::unique_ptr.169", %"class.std::__1::unique_ptr.175", %"class.net::HostPortPair", %"struct.net::SSLConfig", i32, i8, i8, i8, i32, i8, i32, %"class.std::__1::vector.210", %"class.std::__1::basic_string", i8, i8, i8, %class.scoped_refptr.9, %class.scoped_refptr.232, %"class.net::NetLogWithSource", %"class.base::WeakPtrFactory.248" }
%"class.net::SSLClientSocket.base" = type <{ %"class.net::SSLSocket", i8, i8 }>
%"class.net::SSLSocket" = type { %"class.net::StreamSocket" }
%"class.net::StreamSocket" = type { %"class.net::Socket" }
%"class.net::Socket" = type { i32 (...)**, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::basic_string"* }
%"class.net::SocketBIOAdapter::Delegate" = type { i32 (...)** }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.7 = type { %"class.net::IOBuffer"* }
%"class.net::IOBuffer" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.8", i8* }
%"class.base::RefCountedThreadSafe.8" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::OpenSSLErrorInfo" = type <{ i32, [4 x i8], i8*, i32, [4 x i8] }>
%"class.net::CertVerifyResult" = type <{ %"class.base::SupportsUserData.base", [7 x i8], %class.scoped_refptr.9, i32, i8, i8, i8, i8, i8, [7 x i8], %"class.std::__1::vector.29", i8, i8, [2 x i8], %"struct.net::OCSPVerifyResult", [4 x i8], %"class.std::__1::vector.37", i32, [4 x i8] }>
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.21", %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { i64 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { %"class.net::HashValue"*, %"class.net::HashValue"*, %"class.std::__1::__compressed_pair.32" }
%"class.net::HashValue" = type { i32, %union.anon.31 }
%union.anon.31 = type { %"struct.net::SHA256HashValue" }
%"struct.net::SHA256HashValue" = type { [32 x i8] }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.net::HashValue"* }
%"struct.net::OCSPVerifyResult" = type { i32, i32 }
%"class.std::__1::vector.37" = type { %"class.std::__1::__vector_base.38" }
%"class.std::__1::__vector_base.38" = type { %"struct.net::SignedCertificateTimestampAndStatus"*, %"struct.net::SignedCertificateTimestampAndStatus"*, %"class.std::__1::__compressed_pair.41" }
%"struct.net::SignedCertificateTimestampAndStatus" = type <{ %class.scoped_refptr.39, i32, [4 x i8] }>
%class.scoped_refptr.39 = type { %"struct.net::ct::SignedCertificateTimestamp"* }
%"struct.net::ct::SignedCertificateTimestamp" = type { %"class.base::RefCountedThreadSafe.40", i32, %"class.std::__1::basic_string", %"class.base::Time", %"class.std::__1::basic_string", %"struct.net::ct::DigitallySigned", i32, %"class.std::__1::basic_string" }
%"class.base::RefCountedThreadSafe.40" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"struct.net::ct::DigitallySigned" = type { i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"struct.net::SignedCertificateTimestampAndStatus"* }
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.net::CertVerifier::Request"* }
%"class.net::CertVerifier::Request" = type { i32 (...)** }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase.163" }
%"class.base::time_internal::TimeBase.163" = type { i64 }
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %struct.ssl_st* }
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.net::StreamSocket"* }
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.net::SocketBIOAdapter"* }
%"class.net::SocketBIOAdapter" = type { %"class.std::__1::unique_ptr.178", %"class.net::StreamSocket"*, %"class.base::RepeatingCallback.183", %"class.base::RepeatingCallback.183", i32, %class.scoped_refptr.7, i32, i32, i32, %class.scoped_refptr.184, i32, i32, %"class.net::SocketBIOAdapter::Delegate"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %struct.bio_st* }
%struct.bio_st = type { %struct.bio_method_st*, i32, i32, i32, i32, i32, i32, i8*, %struct.bio_st*, i64, i64 }
%struct.bio_method_st = type { i32, i8*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*)*, i32 (%struct.bio_st*, i8*, i32)*, i64 (%struct.bio_st*, i32, i64, i8*)*, i32 (%struct.bio_st*)*, i32 (%struct.bio_st*)*, i64 (%struct.bio_st*, i32, i64 (%struct.bio_st*, i32, i8*, i32, i64, i64)*)* }
%"class.base::RepeatingCallback.183" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.184 = type { %"class.net::GrowableIOBuffer"* }
%"class.net::GrowableIOBuffer" = type { %"class.net::IOBuffer", %"class.std::__1::unique_ptr.185", i32, i32 }
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { i8* }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.189 }
%class.scoped_refptr.189 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.143", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.143" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.144" }
%"struct.std::__1::atomic.144" = type { %"struct.std::__1::__atomic_base.145" }
%"struct.std::__1::__atomic_base.145" = type { %"struct.std::__1::__atomic_base.146" }
%"struct.std::__1::__atomic_base.146" = type { %"struct.std::__1::__cxx_atomic_impl.147" }
%"struct.std::__1::__cxx_atomic_impl.147" = type { %"struct.std::__1::__cxx_atomic_base_impl.148" }
%"struct.std::__1::__cxx_atomic_base_impl.148" = type { i8 }
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string", i16, [6 x i8] }>
%"struct.net::SSLConfig" = type <{ %"class.absl::optional", %"class.absl::optional", i8, i8, i8, [5 x i8], %"class.std::__1::vector.194", i8, i8, [6 x i8], %"class.std::__1::vector.201", i8, [7 x i8], %"class.std::__1::vector.201", %"class.base::flat_map", %"class.net::NetworkIsolationKey", i32, i8, [3 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.193 }
%union.anon.193 = type { i16 }
%"class.std::__1::vector.194" = type { %"class.std::__1::__vector_base.195" }
%"class.std::__1::__vector_base.195" = type { %"struct.net::SSLConfig::CertAndStatus"*, %"struct.net::SSLConfig::CertAndStatus"*, %"class.std::__1::__compressed_pair.196" }
%"struct.net::SSLConfig::CertAndStatus" = type <{ %class.scoped_refptr.9, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"struct.net::SSLConfig::CertAndStatus"* }
%"class.std::__1::vector.201" = type { %"class.std::__1::__vector_base.202" }
%"class.std::__1::__vector_base.202" = type { i32*, i32*, %"class.std::__1::__compressed_pair.203" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.204" }
%"struct.std::__1::__compressed_pair_elem.204" = type { i32* }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.208" }
%"class.std::__1::vector.208" = type { %"class.std::__1::__vector_base.209" }
%"class.std::__1::__vector_base.209" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.217" }
%"struct.std::__1::pair" = type { i32, %"class.std::__1::vector.210" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"struct.std::__1::pair"* }
%"class.net::NetworkIsolationKey" = type { i8, %"class.absl::optional.222", %"class.absl::optional.222" }
%"class.absl::optional.222" = type { %"class.absl::optional_internal::optional_data.223" }
%"class.absl::optional_internal::optional_data.223" = type { %"class.absl::optional_internal::optional_data_base.224" }
%"class.absl::optional_internal::optional_data_base.224" = type { %"class.absl::optional_internal::optional_data_dtor_base.225" }
%"class.absl::optional_internal::optional_data_dtor_base.225" = type { i8, %union.anon.226 }
%union.anon.226 = type { %"class.net::SchemefulSite" }
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.227" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.227" = type { %"class.absl::optional_internal::optional_data.228" }
%"class.absl::optional_internal::optional_data.228" = type { %"class.absl::optional_internal::optional_data_base.229" }
%"class.absl::optional_internal::optional_data_base.229" = type { %"class.absl::optional_internal::optional_data_dtor_base.230" }
%"class.absl::optional_internal::optional_data_dtor_base.230" = type { i8, %union.anon.231 }
%union.anon.231 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::vector.210" = type { %"class.std::__1::__vector_base.211" }
%"class.std::__1::__vector_base.211" = type { i8*, i8*, %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { i8* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.scoped_refptr.9 = type { %"class.net::X509Certificate"* }
%"class.net::X509Certificate" = type { %"class.base::RefCountedThreadSafe.10", %"struct.net::CertPrincipal", %"struct.net::CertPrincipal", %"class.base::Time", %"class.base::Time", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr", %"class.std::__1::vector.14" }
%"class.base::RefCountedThreadSafe.10" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::CertPrincipal" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.std::__1::unique_ptr"* }
%class.scoped_refptr.232 = type { %"class.net::SSLPrivateKey"* }
%"class.net::SSLPrivateKey" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.233", [4 x i8] }>
%"class.base::RefCountedThreadSafe.233" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.net::NetLogWithSource" = type { %"struct.net::NetLogSource", %"class.net::NetLog"* }
%"struct.net::NetLogSource" = type { i32, i32, %"class.base::TimeTicks" }
%"class.net::NetLog" = type { i32 (...)**, %"class.base::Lock", i32, i32, %"class.std::__1::vector.234", %"class.std::__1::vector.241" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector.234" = type { %"class.std::__1::__vector_base.235" }
%"class.std::__1::__vector_base.235" = type { %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"**, %"class.std::__1::__compressed_pair.236" }
%"class.net::NetLog::ThreadSafeObserver" = type { i32 (...)**, i32, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.net::NetLog::ThreadSafeObserver"** }
%"class.std::__1::vector.241" = type { %"class.std::__1::__vector_base.242" }
%"class.std::__1::__vector_base.242" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.std::__1::__compressed_pair.243" }
%"class.net::NetLog::ThreadSafeCaptureModeObserver" = type { i32 (...)**, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"** }
%"class.base::WeakPtrFactory.248" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.net::SSLClientContext" = type { %"class.net::SSLConfigService::Observer", %"class.net::CertDatabase::Observer", %"struct.net::SSLContextConfig", %"class.net::SSLConfigService"*, %"class.net::CertVerifier"*, %"class.net::TransportSecurityState"*, %"class.net::CTPolicyEnforcer"*, %"class.net::SSLClientSessionCache"*, %"class.net::SCTAuditingDelegate"*, %"class.net::SSLClientAuthCache", %"class.base::ObserverList.139" }
%"class.net::SSLConfigService::Observer" = type { i32 (...)** }
%"class.net::CertDatabase::Observer" = type { i32 (...)** }
%"struct.net::SSLContextConfig" = type <{ i16, i16, i16, [2 x i8], %"class.std::__1::vector.46", i8, i8, [6 x i8] }>
%"class.std::__1::vector.46" = type { %"class.std::__1::__vector_base.47" }
%"class.std::__1::__vector_base.47" = type { i16*, i16*, %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { i16* }
%"class.net::SSLConfigService" = type { i32 (...)**, %"class.base::ObserverList" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.53", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.53" = type { %"class.std::__1::__vector_base.54" }
%"class.std::__1::__vector_base.54" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.55" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.net::CertVerifier" = type { i32 (...)** }
%"class.net::TransportSecurityState" = type <{ %"class.std::__1::map.60", %"class.std::__1::map.71", %"class.std::__1::map.80", %"class.net::TransportSecurityState::Delegate"*, %"class.net::TransportSecurityState::ReportSenderInterface"*, i8, i8, i8, [5 x i8], %"class.net::TransportSecurityState::ExpectCTReporter"*, %"class.net::TransportSecurityState::RequireCTDelegate"*, %"class.net::ExpiringCache", %"class.net::ExpiringCache", i8, [7 x i8], %"class.base::Time", %"class.std::__1::set", i8, [7 x i8] }>
%"class.std::__1::map.60" = type { %"class.std::__1::__tree.61" }
%"class.std::__1::__tree.61" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.62", %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::map.71" = type { %"class.std::__1::__tree.72" }
%"class.std::__1::__tree.72" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.73", %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::map.80" = type { %"class.std::__1::__tree.81" }
%"class.std::__1::__tree.81" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.82", %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.net::TransportSecurityState::Delegate" = type { i32 (...)** }
%"class.net::TransportSecurityState::ReportSenderInterface" = type { i32 (...)** }
%"class.net::TransportSecurityState::ExpectCTReporter" = type { i32 (...)** }
%"class.net::TransportSecurityState::RequireCTDelegate" = type { i32 (...)** }
%"class.net::ExpiringCache" = type <{ i64, %"class.std::__1::map.91", %"struct.std::__1::less.100", %"class.net::NoopEvictionHandler", [6 x i8] }>
%"class.std::__1::map.91" = type { %"class.std::__1::__tree.92" }
%"class.std::__1::__tree.92" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.93", %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::less.100" = type { i8 }
%"class.net::NoopEvictionHandler" = type { i8 }
%"class.std::__1::set" = type { %"class.std::__1::__tree.102" }
%"class.std::__1::__tree.102" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.net::CTPolicyEnforcer" = type { i32 (...)** }
%"class.net::SSLClientSessionCache" = type { %"class.base::Clock"*, %"struct.net::SSLClientSessionCache::Config", %"class.base::MRUCache", i64, %"class.std::__1::unique_ptr.124" }
%"class.base::Clock" = type opaque
%"struct.net::SSLClientSessionCache::Config" = type { i64, i64 }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list", %"class.std::__1::map.113", i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.109" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::map.113" = type { %"class.std::__1::__tree.114" }
%"class.std::__1::__tree.114" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.115", %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.base::MemoryPressureListener"* }
%"class.base::MemoryPressureListener" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback", %"class.base::Location" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.net::SCTAuditingDelegate" = type { i32 (...)** }
%"class.net::SSLClientAuthCache" = type { %"class.std::__1::map.128" }
%"class.std::__1::map.128" = type { %"class.std::__1::__tree.129" }
%"class.std::__1::__tree.129" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.130", %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.base::ObserverList.139" = type <{ %"class.std::__1::vector.140", %"class.base::LinkedList.154", i64, i32, [4 x i8] }>
%"class.std::__1::vector.140" = type { %"class.std::__1::__vector_base.141" }
%"class.std::__1::__vector_base.141" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.149" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.142 }
%class.scoped_refptr.142 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList.154" = type { %"class.base::LinkNode.155" }
%"class.base::LinkNode.155" = type { %"class.base::internal::LinkNodeBase" }
%"class.net::SSLClientSocketImpl::SSLContext" = type { i32, %"class.std::__1::unique_ptr.255" }
%"class.std::__1::unique_ptr.255" = type { %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.257" = type { %struct.ssl_ctx_st* }
%struct.ssl_ctx_st = type opaque
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.net::SSLClientSocket" = type <{ %"class.net::SSLSocket", i8, i8, [6 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.net::SSLKeyLogger" = type { i32 (...)** }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.crypto::OpenSSLErrStackTracer" = type { %"class.base::Location" }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"struct.net::SSLClientSessionCache::Key" = type <{ %"class.net::HostPortPair", %"class.absl::optional.285", [6 x i8], %"class.net::NetworkIsolationKey", i32, i8, [3 x i8] }>
%"class.absl::optional.285" = type { %"class.absl::optional_internal::optional_data.286" }
%"class.absl::optional_internal::optional_data.286" = type { %"class.absl::optional_internal::optional_data_base.287" }
%"class.absl::optional_internal::optional_data_base.287" = type { %"class.absl::optional_internal::optional_data_dtor_base.288" }
%"class.absl::optional_internal::optional_data_dtor_base.288" = type { i8, %union.anon.289 }
%union.anon.289 = type { %"class.net::IPAddress" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"struct.net::SslSetClearMask" = type { i64, i64 }
%struct.ssl_session_st = type opaque
%struct.ssl_cipher_st = type opaque
%"class.net::SSLInfo" = type <{ %class.scoped_refptr.9, %class.scoped_refptr.9, i32, i16, i16, i32, i8, i8, i8, i8, i32, [4 x i8], %"class.std::__1::vector.29", %"class.std::__1::basic_string", %"class.std::__1::vector.37", i32, %"struct.net::OCSPVerifyResult", i8, [3 x i8] }>
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.366" }
%"union.absl::variant_internal::DestructibleUnionImpl.366" = type { %"union.absl::variant_internal::DestructibleUnionImpl.367" }
%"union.absl::variant_internal::DestructibleUnionImpl.367" = type { %"union.absl::variant_internal::DestructibleUnionImpl.368" }
%"union.absl::variant_internal::DestructibleUnionImpl.368" = type { %"union.absl::variant_internal::DestructibleUnionImpl.369" }
%"union.absl::variant_internal::DestructibleUnionImpl.369" = type { %"class.std::__1::basic_string" }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.absl::optional.260" = type { %"class.absl::optional_internal::optional_data.261" }
%"class.absl::optional_internal::optional_data.261" = type { %"class.absl::optional_internal::optional_data_base.262" }
%"class.absl::optional_internal::optional_data_base.262" = type { %"class.absl::optional_internal::optional_data_dtor_base.263" }
%"class.absl::optional_internal::optional_data_dtor_base.263" = type { i8, %union.anon.264 }
%union.anon.264 = type { %"class.base::BasicStringPiece" }
%"class.std::__1::vector.265" = type { %"class.std::__1::__vector_base.266" }
%"class.std::__1::__vector_base.266" = type { %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"*, %"class.std::__1::__compressed_pair.267" }
%"struct.net::ConnectionAttempt" = type { %"class.net::IPEndPoint", i32 }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268" }
%"struct.std::__1::__compressed_pair_elem.268" = type { %"struct.net::ConnectionAttempt"* }
%"struct.net::StreamSocket::SocketMemoryStats" = type { i64, i64, i64, i64 }
%struct.stack_st_CRYPTO_BUFFER = type opaque
%struct.stack_st = type { i64, i8**, i32, i64, i32 (i8**, i8**)* }
%"class.net::SSLCertRequestInfo" = type { %"class.base::RefCountedThreadSafe.272", [4 x i8], %"class.net::HostPortPair", i8, %"class.std::__1::vector", %"class.std::__1::vector.273" }
%"class.base::RefCountedThreadSafe.272" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::vector.273" = type { %"class.std::__1::__vector_base.274" }
%"class.std::__1::__vector_base.274" = type { i32*, i32*, %"class.std::__1::__compressed_pair.275" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"struct.std::__1::__compressed_pair_elem.276" = type { i32* }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.net::SocketTag" = type opaque
%"struct.net::NetworkTrafficAnnotationTag" = type { i32 }
%"class.base::WeakPtr.304" = type { %"class.base::internal::WeakPtrBase" }
%"class.net::der::Input" = type { i8*, i64 }
%"class.net::der::BitString" = type <{ %"class.net::der::Input", i8, [7 x i8] }>
%"struct.net::ParsedTbsCertificate" = type { i32, %"class.net::der::Input", %"class.net::der::Input", %"class.net::der::Input", %"struct.net::der::GeneralizedTime", %"struct.net::der::GeneralizedTime", %"class.net::der::Input", %"class.net::der::Input", i8, [7 x i8], %"class.net::der::BitString", i8, [7 x i8], %"class.net::der::BitString", i8, %"class.net::der::Input" }
%"struct.net::der::GeneralizedTime" = type { i16, i8, i8, i8, i8, i8 }
%"struct.net::ParseCertificateOptions" = type { i8 }
%"class.std::__1::map.327" = type { %"class.std::__1::__tree.328" }
%"class.std::__1::__tree.328" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.329", %"class.std::__1::__compressed_pair.333" }
%"class.std::__1::__compressed_pair.329" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.net::ParsedExtension" = type <{ %"class.net::der::Input", %"class.net::der::Input", i8, [7 x i8] }>
%"class.base::OnceCallback.303" = type { %"class.base::internal::CallbackBase" }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.296", [4 x i8] }>
%"struct.std::__1::atomic.296" = type { %"struct.std::__1::__atomic_base.297" }
%"struct.std::__1::__atomic_base.297" = type { %"struct.std::__1::__atomic_base.298" }
%"struct.std::__1::__atomic_base.298" = type { %"struct.std::__1::__cxx_atomic_impl.299" }
%"struct.std::__1::__cxx_atomic_impl.299" = type { %"struct.std::__1::__cxx_atomic_base_impl.300" }
%"struct.std::__1::__cxx_atomic_base_impl.300" = type { i32 }
%"class.net::CertErrors" = type opaque
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.338" }
%"struct.std::__1::pair.338" = type { %"class.net::der::Input", %"struct.net::ParsedExtension" }
%class.scoped_refptr.301 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.302" }>
%"class.base::RefCountedThreadSafe.302" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.302", [4 x i8] }>
%"class.net::CertVerifier::RequestParams" = type { %class.scoped_refptr.9, %"class.std::__1::basic_string", i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::vector.305" = type { %"class.std::__1::__vector_base.306" }
%"class.std::__1::__vector_base.306" = type { %class.scoped_refptr.39*, %class.scoped_refptr.39*, %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %class.scoped_refptr.39* }
%struct.evp_pkey_st = type { i32, i32, %union.anon.313, %struct.evp_pkey_asn1_method_st* }
%union.anon.313 = type { i8* }
%struct.evp_pkey_asn1_method_st = type opaque
%"class.base::OnceCallback.316" = type { %"class.base::internal::CallbackBase" }
%class.GetParamsImpl = type { %"class.net::NetLog::GetParamsInterface", %class.anon.318* }
%"class.net::NetLog::GetParamsInterface" = type { i32 (...)** }
%class.anon.318 = type { i32*, i8**, i64* }
%"class.base::RepeatingCallback.320" = type opaque
%struct.crypto_ex_data_st = type { %struct.stack_st_void* }
%struct.stack_st_void = type opaque
%struct.ssl_method_st = type opaque
%struct.crypto_buffer_pool_st = type opaque
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZN3net19SSLClientSocketImpl10SSLContext22PrivateKeySignCallbackEP6ssl_stPhPmmtPKhm = comdat any

$_ZN3net19SSLClientSocketImpl10SSLContext26PrivateKeyCompleteCallbackEP6ssl_stPhPmm = comdat any

$_ZN3net19SSLClientSocketImpl23ClearConnectionAttemptsEv = comdat any

$_ZN3net19SSLClientSocketImpl21AddConnectionAttemptsERKNSt3__16vectorINS_17ConnectionAttemptENS1_9allocatorIS3_EEEE = comdat any

$_ZN3net19SSLClientSocketImpl10SSLContextC2Ev = comdat any

$_ZN3net19SSLClientSocketImpl10SSLContext25ClientCertRequestCallbackEP6ssl_stPv = comdat any

$_ZN3net19SSLClientSocketImpl10SSLContext18NewSessionCallbackEP6ssl_stP14ssl_session_st = comdat any

$_ZN3net19SSLClientSocketImpl10SSLContext15MessageCallbackEiiiPKvmP6ssl_stPv = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN3net3der5InputENS2_15ParsedExtensionEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__16vectorIN3net9HashValueENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

$_ZNSt3__16vectorIN3net35SignedCertificateTimestampAndStatusENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net19SSLClientSocketImplEFvvEJNS_7WeakPtrIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN3net19SSLClientSocketImplEFvvEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net19SSLClientSocketImplEFvvEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net19SSLClientSocketImplEFviEJNS0_17UnretainedWrapperIS4_EEEEEFviEE7RunOnceEPNS0_13BindStateBaseEi = comdat any

$_ZN4base8internal9BindStateIMN3net19SSLClientSocketImplEFviEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNSt3__16vectorI13scoped_refptrIN3net2ct26SignedCertificateTimestampEENS_9allocatorIS5_EEE21__push_back_slow_pathIRKS5_EEvOT_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net19SSLClientSocketImplEFvNS3_5ErrorERKNSt3__16vectorIhNS6_9allocatorIhEEEEEJNS_7WeakPtrIS4_EEEEEFvS5_SC_EE7RunOnceEPNS0_13BindStateBaseES5_SC_ = comdat any

$_ZN4base8internal9BindStateIMN3net19SSLClientSocketImplEFvNS2_5ErrorERKNSt3__16vectorIhNS5_9allocatorIhEEEEEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net19SSLClientSocketImplEFvNS3_5ErrorERKNSt3__16vectorIhNS6_9allocatorIhEEEEEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSI_21CancellationQueryModeE = comdat any

$_ZNSt3__16vectorIhNS_9allocatorIhEEE6assignIPhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

$_ZN3net6NetLog18GetParamsInterfaceD2Ev = comdat any

$_ZN4base9SingletonIN3net19SSLClientSocketImpl10SSLContextENS_20LeakySingletonTraitsIS3_EES3_E9instance_E = comdat any

@_ZN3net19SSLClientSocketImpl10SSLContext17kPrivateKeyMethodE = hidden constant %struct.ssl_private_key_method_st { i32 (%struct.ssl_st*, i8*, i64*, i64, i16, i8*, i64)* @_ZN3net19SSLClientSocketImpl10SSLContext22PrivateKeySignCallbackEP6ssl_stPhPmmtPKhm, i32 (%struct.ssl_st*, i8*, i64*, i64, i8*, i64)* null, i32 (%struct.ssl_st*, i8*, i64*, i64)* @_ZN3net19SSLClientSocketImpl10SSLContext26PrivateKeyCompleteCallbackEP6ssl_stPhPmm }, align 8
@_ZTVN3net19SSLClientSocketImplE = hidden unnamed_addr constant { [36 x i8*], [6 x i8*] } { [36 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::SSLClientSocketImpl"*)* @_ZN3net19SSLClientSocketImplD2Ev to i8*), i8* bitcast (void (%"class.net::SSLClientSocketImpl"*)* @_ZN3net19SSLClientSocketImplD0Ev to i8*), i8* bitcast (i32 (%"class.net::SSLClientSocketImpl"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)* @_ZN3net19SSLClientSocketImpl4ReadEPNS_8IOBufferEiN4base12OnceCallbackIFviEEE to i8*), i8* bitcast (i32 (%"class.net::SSLClientSocketImpl"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)* @_ZN3net19SSLClientSocketImpl11ReadIfReadyEPNS_8IOBufferEiN4base12OnceCallbackIFviEEE to i8*), i8* bitcast (i32 (%"class.net::SSLClientSocketImpl"*)* @_ZN3net19SSLClientSocketImpl17CancelReadIfReadyEv to i8*), i8* bitcast (i32 (%"class.net::SSLClientSocketImpl"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, %"struct.net::NetworkTrafficAnnotationTag"*)* @_ZN3net19SSLClientSocketImpl5WriteEPNS_8IOBufferEiN4base12OnceCallbackIFviEEERKNS_27NetworkTrafficAnnotationTagE to i8*), i8* bitcast (i32 (%"class.net::SSLClientSocketImpl"*, i32)* @_ZN3net19SSLClientSocketImpl20SetReceiveBufferSizeEi to i8*), i8* bitcast (i32 (%"class.net::SSLClientSocketImpl"*, i32)* @_ZN3net19SSLClientSocketImpl17SetSendBufferSizeEi to i8*), i8* bitcast (void (%"class.net::Socket"*, %"class.std::__1::vector"*)* @_ZN3net6Socket13SetDnsAliasesENSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEE to i8*), i8* bitcast (%"class.std::__1::vector"* (%"class.net::Socket"*)* @_ZNK3net6Socket13GetDnsAliasesEv to i8*), i8* bitcast (void (%"class.net::StreamSocket"*, %"class.base::RepeatingCallback.320"*)* @_ZN3net12StreamSocket24SetBeforeConnectCallbackERKN4base17RepeatingCallbackIFivEEE to i8*), i8* bitcast (i32 (%"class.net::SSLClientSocketImpl"*, %"class.base::OnceCallback"*)* @_ZN3net19SSLClientSocketImpl7ConnectEN4base12OnceCallbackIFviEEE to i8*), i8* bitcast (i32 (%"class.net::SSLClientSocketImpl"*, %"class.base::OnceCallback"*)* @_ZN3net19SSLClientSocketImpl16ConfirmHandshakeEN4base12OnceCallbackIFviEEE to i8*), i8* bitcast (void (%"class.net::SSLClientSocketImpl"*)* @_ZN3net19SSLClientSocketImpl10DisconnectEv to i8*), i8* bitcast (i1 (%"class.net::SSLClientSocketImpl"*)* @_ZNK3net19SSLClientSocketImpl11IsConnectedEv to i8*), i8* bitcast (i1 (%"class.net::SSLClientSocketImpl"*)* @_ZNK3net19SSLClientSocketImpl18IsConnectedAndIdleEv to i8*), i8* bitcast (i32 (%"class.net::SSLClientSocketImpl"*, %"class.net::IPEndPoint"*)* @_ZNK3net19SSLClientSocketImpl14GetPeerAddressEPNS_10IPEndPointE to i8*), i8* bitcast (i32 (%"class.net::SSLClientSocketImpl"*, %"class.net::IPEndPoint"*)* @_ZNK3net19SSLClientSocketImpl15GetLocalAddressEPNS_10IPEndPointE to i8*), i8* bitcast (%"class.net::NetLogWithSource"* (%"class.net::SSLClientSocketImpl"*)* @_ZNK3net19SSLClientSocketImpl6NetLogEv to i8*), i8* bitcast (i1 (%"class.net::SSLClientSocketImpl"*)* @_ZNK3net19SSLClientSocketImpl11WasEverUsedEv to i8*), i8* bitcast (i1 (%"class.net::SSLClientSocketImpl"*)* @_ZNK3net19SSLClientSocketImpl17WasAlpnNegotiatedEv to i8*), i8* bitcast (i32 (%"class.net::SSLClientSocketImpl"*)* @_ZNK3net19SSLClientSocketImpl21GetNegotiatedProtocolEv to i8*), i8* bitcast (void (%"class.absl::optional.260"*, %"class.net::SSLClientSocketImpl"*)* @_ZNK3net19SSLClientSocketImpl26GetPeerApplicationSettingsEv to i8*), i8* bitcast (i1 (%"class.net::SSLClientSocketImpl"*, %"class.net::SSLInfo"*)* @_ZN3net19SSLClientSocketImpl10GetSSLInfoEPNS_7SSLInfoE to i8*), i8* bitcast (void (%"class.net::SSLClientSocketImpl"*, %"class.net::SSLCertRequestInfo"*)* @_ZNK3net19SSLClientSocketImpl21GetSSLCertRequestInfoEPNS_18SSLCertRequestInfoE to i8*), i8* bitcast (void (%"class.net::SSLClientSocketImpl"*, %"class.std::__1::vector.265"*)* @_ZNK3net19SSLClientSocketImpl21GetConnectionAttemptsEPNSt3__16vectorINS_17ConnectionAttemptENS1_9allocatorIS3_EEEE to i8*), i8* bitcast (void (%"class.net::SSLClientSocketImpl"*)* @_ZN3net19SSLClientSocketImpl23ClearConnectionAttemptsEv to i8*), i8* bitcast (void (%"class.net::SSLClientSocketImpl"*, %"class.std::__1::vector.265"*)* @_ZN3net19SSLClientSocketImpl21AddConnectionAttemptsERKNSt3__16vectorINS_17ConnectionAttemptENS1_9allocatorIS3_EEEE to i8*), i8* bitcast (i64 (%"class.net::SSLClientSocketImpl"*)* @_ZNK3net19SSLClientSocketImpl21GetTotalReceivedBytesEv to i8*), i8* bitcast (void (%"class.net::SSLClientSocketImpl"*, %"struct.net::StreamSocket::SocketMemoryStats"*)* @_ZNK3net19SSLClientSocketImpl15DumpMemoryStatsEPNS_12StreamSocket17SocketMemoryStatsE to i8*), i8* bitcast (void (%"class.net::SSLClientSocketImpl"*, %"class.net::SocketTag"*)* @_ZN3net19SSLClientSocketImpl14ApplySocketTagERKNS_9SocketTagE to i8*), i8* bitcast (i32 (%"class.net::SSLClientSocketImpl"*, %"class.base::BasicStringPiece"*, i1, %"class.base::BasicStringPiece"*, i8*, i32)* @_ZN3net19SSLClientSocketImpl20ExportKeyingMaterialERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEbS8_Phj to i8*), i8* bitcast (void (%"class.net::SSLClientSocketImpl"*)* @_ZN3net19SSLClientSocketImpl11OnReadReadyEv to i8*), i8* bitcast (void (%"class.net::SSLClientSocketImpl"*)* @_ZN3net19SSLClientSocketImpl12OnWriteReadyEv to i8*)], [6 x i8*] [i8* inttoptr (i64 -40 to i8*), i8* null, i8* bitcast (void (%"class.net::SSLClientSocketImpl"*)* @_ZThn40_N3net19SSLClientSocketImpl11OnReadReadyEv to i8*), i8* bitcast (void (%"class.net::SSLClientSocketImpl"*)* @_ZThn40_N3net19SSLClientSocketImpl12OnWriteReadyEv to i8*), i8* bitcast (void (%"class.net::SSLClientSocketImpl"*)* @_ZThn40_N3net19SSLClientSocketImplD1Ev to i8*), i8* bitcast (void (%"class.net::SSLClientSocketImpl"*)* @_ZThn40_N3net19SSLClientSocketImplD0Ev to i8*)] }, align 8
@.str = private unnamed_addr constant [43 x i8] c"../../net/socket/ssl_client_socket_impl.cc\00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c"context_\00", align 1
@.str.2 = private unnamed_addr constant [21 x i8] c"ExportKeyingMaterial\00", align 1
@.str.3 = private unnamed_addr constant [34 x i8] c"Failed to export keying material.\00", align 1
@.str.4 = private unnamed_addr constant [15 x i8] c"!disconnected_\00", align 1
@.str.5 = private unnamed_addr constant [19 x i8] c"completed_connect_\00", align 1
@.str.6 = private unnamed_addr constant [23 x i8] c"!in_confirm_handshake_\00", align 1
@.str.7 = private unnamed_addr constant [7 x i8] c"cipher\00", align 1
@.str.8 = private unnamed_addr constant [5 x i8] c"Init\00", align 1
@_ZN3net8features18kPostQuantumCECPQ2E = external global %"struct.base::Feature", align 8
@_ZN3net8features29kPostQuantumCECPQ2SomeDomainsE = external global %"struct.base::Feature", align 8
@_ZZN3net19SSLClientSocketImpl4InitEvE7kCurves = internal constant [4 x i32] [i32 959, i32 948, i32 415, i32 715], align 16
@.str.9 = private unnamed_addr constant [22 x i8] c"ALL:!aPSK:!ECDSA+SHA1\00", align 1
@.str.10 = private unnamed_addr constant [7 x i8] c":!kRSA\00", align 1
@.str.11 = private unnamed_addr constant [7 x i8] c":!3DES\00", align 1
@.str.12 = private unnamed_addr constant [3 x i8] c":!\00", align 1
@.str.13 = private unnamed_addr constant [22 x i8] c"SSL_set_cipher_list('\00", align 1
@.str.14 = private unnamed_addr constant [10 x i8] c"') failed\00", align 1
@_ZZN3net19SSLClientSocketImpl4InitEvE12kVerifyPrefs = internal constant [8 x i16] [i16 1027, i16 2052, i16 1025, i16 1283, i16 2053, i16 1281, i16 2054, i16 1537], align 16
@.str.15 = private unnamed_addr constant [12 x i8] c"DoHandshake\00", align 1
@.str.16 = private unnamed_addr constant [28 x i8] c"handshake failed; returned \00", align 1
@.str.17 = private unnamed_addr constant [18 x i8] c", SSL error code \00", align 1
@.str.18 = private unnamed_addr constant [13 x i8] c", net_error \00", align 1
@.str.19 = private unnamed_addr constant [26 x i8] c"Net.SSLSignatureAlgorithm\00", align 1
@.str.20 = private unnamed_addr constant [3 x i8] c"ok\00", align 1
@.str.21 = private unnamed_addr constant [31 x i8] c"Net.SSLRSAKeyUsage.UnknownRoot\00", align 1
@.str.22 = private unnamed_addr constant [24 x i8] c"Net.SSLHandshakeDetails\00", align 1
@.str.23 = private unnamed_addr constant [20 x i8] c"DoHandshakeComplete\00", align 1
@.str.24 = private unnamed_addr constant [14 x i8] c"!server_cert_\00", align 1
@.str.25 = private unnamed_addr constant [11 x i8] c"VerifyCert\00", align 1
@.str.26 = private unnamed_addr constant [28 x i8] c"Net.SSLCertVerificationTime\00", align 1
@.str.27 = private unnamed_addr constant [33 x i8] c"Net.SSLCertVerificationTimeError\00", align 1
@_ZN3net8features18kLegacyTLSEnforcedE = external global %"struct.base::Feature", align 8
@.str.28 = private unnamed_addr constant [19 x i8] c"HandleVerifyResult\00", align 1
@.str.29 = private unnamed_addr constant [46 x i8] c"Net.CertificateTransparency.EVCompliance2.SSL\00", align 1
@.str.30 = private unnamed_addr constant [60 x i8] c"Net.CertificateTransparency.ConnectionComplianceStatus2.SSL\00", align 1
@.str.31 = private unnamed_addr constant [70 x i8] c"Net.CertificateTransparency.CTRequiredConnectionComplianceStatus2.SSL\00", align 1
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str.32 = private unnamed_addr constant [37 x i8] c"SSLClientSocketImpl::DoHandshakeLoop\00", align 1
@.str.33 = private unnamed_addr constant [14 x i8] c"DoPayloadRead\00", align 1
@.str.34 = private unnamed_addr constant [15 x i8] c"DoPayloadWrite\00", align 1
@_ZN3net8features15kTLS13KeyUpdateE = external global %"struct.base::Feature", align 8
@.str.35 = private unnamed_addr constant [7 x i8] c"DoPeek\00", align 1
@.str.36 = private unnamed_addr constant [32 x i8] c"Net.SSLHandshakeEarlyDataReason\00", align 1
@.str.37 = private unnamed_addr constant [38 x i8] c"Client cert found without private key\00", align 1
@.str.38 = private unnamed_addr constant [26 x i8] c"ClientCertRequestCallback\00", align 1
@.str.39 = private unnamed_addr constant [11 x i8] c"cert_count\00", align 1
@_ZN3net8features42kPartitionSSLSessionsByNetworkIsolationKeyE = external global %"struct.base::Feature", align 8
@.str.40 = private unnamed_addr constant [27 x i8] c"PrivateKeyCompleteCallback\00", align 1
@.str.41 = private unnamed_addr constant [30 x i8] c"Net.SSLNegotiatedAlpnProtocol\00", align 1
@_ZN4base9SingletonIN3net19SSLClientSocketImpl10SSLContextENS_20LeakySingletonTraitsIS3_EES3_E9instance_E = linkonce_odr hidden global i64 0, comdat, align 8
@_ZN3net8features24kPostQuantumCECPQ2PrefixE = external global %"struct.base::FeatureParam", align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.str.45 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.46 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1
@.str.47 = private unnamed_addr constant [13 x i8] c"certificates\00", align 1
@.str.48 = private unnamed_addr constant [10 x i8] c"algorithm\00", align 1
@.str.49 = private unnamed_addr constant [9 x i8] c"provider\00", align 1
@.str.50 = private unnamed_addr constant [6 x i8] c"bytes\00", align 1
@"_ZTVZN3net6NetLog8AddEntryIZNS_19SSLClientSocketImpl15MessageCallbackEiiPKvmE3$_3EENSt3__19enable_ifIXsr18ExpectsCaptureModeIT_EE5valueEvE4typeENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseERKS8_E13GetParamsImpl" = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::Value"*, %class.GetParamsImpl*, i32)* @"_ZZN3net6NetLog8AddEntryIZNS_19SSLClientSocketImpl15MessageCallbackEiiPKvmE3$_3EENSt3__19enable_ifIXsr18ExpectsCaptureModeIT_EE5valueEvE4typeENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseERKS8_ENK13GetParamsImpl9GetParamsENS_17NetLogCaptureModeE" to i8*), i8* bitcast (void (%"class.net::NetLog::GetParamsInterface"*)* @_ZN3net6NetLog18GetParamsInterfaceD2Ev to i8*), i8* bitcast (void (%class.GetParamsImpl*)* @"_ZZN3net6NetLog8AddEntryIZNS_19SSLClientSocketImpl15MessageCallbackEiiPKvmE3$_3EENSt3__19enable_ifIXsr18ExpectsCaptureModeIT_EE5valueEvE4typeENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseERKS8_EN13GetParamsImplD0Ev" to i8*)] }, align 8
@.str.51 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str.52 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.53 = private unnamed_addr constant [11 x i8] c"is_resumed\00", align 1
@.str.54 = private unnamed_addr constant [13 x i8] c"cipher_suite\00", align 1
@.str.55 = private unnamed_addr constant [19 x i8] c"key_exchange_group\00", align 1
@.str.56 = private unnamed_addr constant [25 x i8] c"peer_signature_algorithm\00", align 1
@.str.57 = private unnamed_addr constant [11 x i8] c"next_proto\00", align 1
@_ZZN3net19SSLClientSocketImpl19DoHandshakeCompleteEiE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net19SSLClientSocketImpl19DoHandshakeCompleteEiE24atomic_histogram_pointer_0.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net19SSLClientSocketImpl18HandleVerifyResultEvE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net19SSLClientSocketImpl18HandleVerifyResultEvE24atomic_histogram_pointer_0.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net19SSLClientSocketImpl17CheckCTComplianceEvE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net19SSLClientSocketImpl17CheckCTComplianceEvE24atomic_histogram_pointer_0.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net19SSLClientSocketImpl17CheckCTComplianceEvE24atomic_histogram_pointer_1.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net19SSLClientSocketImpl6DoPeekEvE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZNK3net19SSLClientSocketImpl24RecordNegotiatedProtocolEvE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN3net19SSLClientSocketImplC1EPNS_16SSLClientContextENSt3__110unique_ptrINS_12StreamSocketENS3_14default_deleteIS5_EEEERKNS_12HostPortPairERKNS_9SSLConfigE = hidden unnamed_addr alias void (%"class.net::SSLClientSocketImpl"*, %"class.net::SSLClientContext"*, %"class.net::StreamSocket"*, %"class.net::HostPortPair"*, %"struct.net::SSLConfig"*), void (%"class.net::SSLClientSocketImpl"*, %"class.net::SSLClientContext"*, %"class.net::StreamSocket"*, %"class.net::HostPortPair"*, %"struct.net::SSLConfig"*)* @_ZN3net19SSLClientSocketImplC2EPNS_16SSLClientContextENSt3__110unique_ptrINS_12StreamSocketENS3_14default_deleteIS5_EEEERKNS_12HostPortPairERKNS_9SSLConfigE
@_ZN3net19SSLClientSocketImplD1Ev = hidden unnamed_addr alias void (%"class.net::SSLClientSocketImpl"*), void (%"class.net::SSLClientSocketImpl"*)* @_ZN3net19SSLClientSocketImplD2Ev

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN3net19SSLClientSocketImpl10SSLContext22PrivateKeySignCallbackEP6ssl_stPhPmmtPKhm(%struct.ssl_st*, i8*, i64*, i64, i16 zeroext, i8*, i64) #0 comdat align 2 {
  %8 = load atomic i64, i64* @_ZN4base9SingletonIN3net19SSLClientSocketImpl10SSLContextENS_20LeakySingletonTraitsIS3_EES3_E9instance_E acquire, align 8
  %9 = icmp ugt i64 %8, 1
  br i1 %9, label %18, label %10

10:                                               ; preds = %7
  %11 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* nonnull @_ZN4base9SingletonIN3net19SSLClientSocketImpl10SSLContextENS_20LeakySingletonTraitsIS3_EES3_E9instance_E) #16
  br i1 %11, label %12, label %16

12:                                               ; preds = %10
  %13 = tail call i8* @_Znwm(i64 16) #17
  %14 = bitcast i8* %13 to %"class.net::SSLClientSocketImpl::SSLContext"*
  tail call void @_ZN3net19SSLClientSocketImpl10SSLContextC2Ev(%"class.net::SSLClientSocketImpl::SSLContext"* nonnull %14) #16
  %15 = ptrtoint i8* %13 to i64
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* nonnull @_ZN4base9SingletonIN3net19SSLClientSocketImpl10SSLContextENS_20LeakySingletonTraitsIS3_EES3_E9instance_E, i64 %15, void (i8*)* null, i8* null) #16
  br label %18

16:                                               ; preds = %10
  %17 = load atomic i64, i64* @_ZN4base9SingletonIN3net19SSLClientSocketImpl10SSLContextENS_20LeakySingletonTraitsIS3_EES3_E9instance_E acquire, align 8
  br label %18

18:                                               ; preds = %7, %12, %16
  %19 = phi i64 [ %8, %7 ], [ %15, %12 ], [ %17, %16 ]
  %20 = inttoptr i64 %19 to %"class.net::SSLClientSocketImpl::SSLContext"*
  %21 = getelementptr inbounds %"class.net::SSLClientSocketImpl::SSLContext", %"class.net::SSLClientSocketImpl::SSLContext"* %20, i64 0, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = tail call i8* @SSL_get_ex_data(%struct.ssl_st* %0, i32 %22) #16
  %24 = bitcast i8* %23 to %"class.net::SSLClientSocketImpl"*
  %25 = tail call i32 @_ZN3net19SSLClientSocketImpl22PrivateKeySignCallbackEPhPmmtPKhm(%"class.net::SSLClientSocketImpl"* %24, i8* undef, i64* undef, i64 undef, i16 zeroext %4, i8* %5, i64 %6)
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN3net19SSLClientSocketImpl10SSLContext26PrivateKeyCompleteCallbackEP6ssl_stPhPmm(%struct.ssl_st*, i8*, i64*, i64) #0 comdat align 2 {
  %5 = load atomic i64, i64* @_ZN4base9SingletonIN3net19SSLClientSocketImpl10SSLContextENS_20LeakySingletonTraitsIS3_EES3_E9instance_E acquire, align 8
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %15, label %7

7:                                                ; preds = %4
  %8 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* nonnull @_ZN4base9SingletonIN3net19SSLClientSocketImpl10SSLContextENS_20LeakySingletonTraitsIS3_EES3_E9instance_E) #16
  br i1 %8, label %9, label %13

9:                                                ; preds = %7
  %10 = tail call i8* @_Znwm(i64 16) #17
  %11 = bitcast i8* %10 to %"class.net::SSLClientSocketImpl::SSLContext"*
  tail call void @_ZN3net19SSLClientSocketImpl10SSLContextC2Ev(%"class.net::SSLClientSocketImpl::SSLContext"* nonnull %11) #16
  %12 = ptrtoint i8* %10 to i64
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* nonnull @_ZN4base9SingletonIN3net19SSLClientSocketImpl10SSLContextENS_20LeakySingletonTraitsIS3_EES3_E9instance_E, i64 %12, void (i8*)* null, i8* null) #16
  br label %15

13:                                               ; preds = %7
  %14 = load atomic i64, i64* @_ZN4base9SingletonIN3net19SSLClientSocketImpl10SSLContextENS_20LeakySingletonTraitsIS3_EES3_E9instance_E acquire, align 8
  br label %15

15:                                               ; preds = %4, %9, %13
  %16 = phi i64 [ %5, %4 ], [ %12, %9 ], [ %14, %13 ]
  %17 = inttoptr i64 %16 to %"class.net::SSLClientSocketImpl::SSLContext"*
  %18 = getelementptr inbounds %"class.net::SSLClientSocketImpl::SSLContext", %"class.net::SSLClientSocketImpl::SSLContext"* %17, i64 0, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = tail call i8* @SSL_get_ex_data(%struct.ssl_st* %0, i32 %19) #16
  %21 = bitcast i8* %20 to %"class.net::SSLClientSocketImpl"*
  %22 = tail call i32 @_ZN3net19SSLClientSocketImpl26PrivateKeyCompleteCallbackEPhPmm(%"class.net::SSLClientSocketImpl"* %21, i8* %1, i64* %2, i64 %3)
  ret i32 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19SSLClientSocketImplC2EPNS_16SSLClientContextENSt3__110unique_ptrINS_12StreamSocketENS3_14default_deleteIS5_EEEERKNS_12HostPortPairERKNS_9SSLConfigE(%"class.net::SSLClientSocketImpl"*, %"class.net::SSLClientContext"*, %"class.net::StreamSocket"*, %"class.net::HostPortPair"* nocapture readonly dereferenceable(32), %"struct.net::SSLConfig"* dereferenceable(320)) unnamed_addr #0 align 2 {
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = ptrtoint %"class.net::StreamSocket"* %2 to i64
  %8 = bitcast %"class.net::SSLClientSocketImpl"* %0 to %"class.net::SSLClientSocket"*
  tail call void @_ZN3net15SSLClientSocketC2Ev(%"class.net::SSLClientSocket"* %8) #16
  %9 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 1, i32 0
  %10 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [36 x i8*], [6 x i8*] }, { [36 x i8*], [6 x i8*] }* @_ZTVN3net19SSLClientSocketImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [36 x i8*], [6 x i8*] }, { [36 x i8*], [6 x i8*] }* @_ZTVN3net19SSLClientSocketImplE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %11 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 7, i32 0
  store %"class.net::IOBuffer"* null, %"class.net::IOBuffer"** %12, align 8
  %13 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 9
  %14 = bitcast %"class.base::internal::BindStateBase"** %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 32, i1 false)
  store i8 1, i8* %13, align 4
  %15 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 10
  store i8 0, i8* %15, align 1
  %16 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 11
  store i32 1, i32* %16, align 8
  %17 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 12
  store i32 0, i32* %17, align 4
  %18 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 13, i32 0
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 13, i32 2
  store i8* null, i8** %19, align 8
  %20 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 13, i32 3
  store i32 0, i32* %20, align 8
  %21 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 14, i32 0
  store %"class.net::X509Certificate"* null, %"class.net::X509Certificate"** %21, align 8
  %22 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 15
  tail call void @_ZN3net16CertVerifyResultC1Ev(%"class.net::CertVerifyResult"* %22) #16
  %23 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 16
  store i8 0, i8* %23, align 8
  %24 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 17
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 18
  store %"class.net::SSLClientContext"* %1, %"class.net::SSLClientContext"** %25, align 8
  %26 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 19
  %27 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 21
  %28 = bitcast %"class.std::__1::unique_ptr.157"* %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 16, i1 false)
  store i32 1, i32* %27, align 8
  %29 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 22
  %30 = bitcast %"class.std::__1::unique_ptr.164"* %29 to i64*
  store i64 0, i64* %30, align 8
  %31 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 23
  %32 = bitcast %"class.std::__1::unique_ptr.169"* %31 to i64*
  store i64 %7, i64* %32, align 8
  %33 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 24
  %34 = bitcast %"class.std::__1::unique_ptr.175"* %33 to i64*
  store i64 0, i64* %34, align 8
  %35 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 25
  %36 = bitcast %"class.net::HostPortPair"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %43, label %40

40:                                               ; preds = %5
  %41 = bitcast %"class.net::HostPortPair"* %35 to i8*
  %42 = bitcast %"class.net::HostPortPair"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 24, i1 false) #16
  br label %49

43:                                               ; preds = %5
  %44 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %35, i64 0, i32 0
  %45 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %44, i8* %46, i64 %48) #16
  br label %49

49:                                               ; preds = %40, %43
  %50 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 25, i32 1
  %51 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %3, i64 0, i32 1
  %52 = load i16, i16* %51, align 8
  store i16 %52, i16* %50, align 8
  %53 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 26
  tail call void @_ZN3net9SSLConfigC1ERKS0_(%"struct.net::SSLConfig"* %53, %"struct.net::SSLConfig"* dereferenceable(320) %4) #16
  %54 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 27
  %55 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 31
  store i32 0, i32* %55, align 8
  %56 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 32
  store i8 0, i8* %56, align 4
  %57 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 33
  %58 = bitcast i32* %54 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 7, i1 false)
  store i32 1, i32* %57, align 8
  %59 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 34
  %60 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 39, i32 0
  %61 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 41
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr.169", %"class.std::__1::unique_ptr.169"* %31, i64 0, i32 0, i32 0, i32 0
  %63 = bitcast %"class.std::__1::vector.210"* %59 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 50, i1 false)
  %64 = bitcast %"class.net::X509Certificate"** %60 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 16, i1 false)
  %65 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %62, align 8
  %66 = bitcast %"class.net::StreamSocket"* %65 to %"class.net::NetLogWithSource"* (%"class.net::StreamSocket"*)***
  %67 = load %"class.net::NetLogWithSource"* (%"class.net::StreamSocket"*)**, %"class.net::NetLogWithSource"* (%"class.net::StreamSocket"*)*** %66, align 8
  %68 = getelementptr inbounds %"class.net::NetLogWithSource"* (%"class.net::StreamSocket"*)*, %"class.net::NetLogWithSource"* (%"class.net::StreamSocket"*)** %67, i64 18
  %69 = load %"class.net::NetLogWithSource"* (%"class.net::StreamSocket"*)*, %"class.net::NetLogWithSource"* (%"class.net::StreamSocket"*)** %68, align 8
  %70 = tail call dereferenceable(24) %"class.net::NetLogWithSource"* %69(%"class.net::StreamSocket"* %65) #16
  %71 = bitcast %"class.net::NetLogWithSource"* %61 to i8*
  %72 = bitcast %"class.net::NetLogWithSource"* %70 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* align 8 %72, i64 24, i1 false)
  %73 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 42, i32 0
  %74 = ptrtoint %"class.net::SSLClientSocketImpl"* %0 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %73, i64 %74) #16
  %75 = load %"class.net::SSLClientContext"*, %"class.net::SSLClientContext"** %25, align 8
  %76 = icmp eq %"class.net::SSLClientContext"* %75, null
  br i1 %76, label %77, label %80

77:                                               ; preds = %49
  %78 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str, i64 0, i64 0), i32 395, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0)) #16
  %79 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #16
  br label %80

80:                                               ; preds = %77, %49
  ret void
}

declare void @_ZN3net15SSLClientSocketC2Ev(%"class.net::SSLClientSocket"*) unnamed_addr #1

declare void @_ZN3net16CertVerifyResultC1Ev(%"class.net::CertVerifyResult"*) unnamed_addr #1

declare void @_ZN3net9SSLConfigC1ERKS0_(%"struct.net::SSLConfig"*, %"struct.net::SSLConfig"* dereferenceable(320)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19SSLClientSocketImplD2Ev(%"class.net::SSLClientSocketImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [36 x i8*], [6 x i8*] }, { [36 x i8*], [6 x i8*] }* @_ZTVN3net19SSLClientSocketImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [36 x i8*], [6 x i8*] }, { [36 x i8*], [6 x i8*] }* @_ZTVN3net19SSLClientSocketImplE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  tail call void @_ZN3net19SSLClientSocketImpl10DisconnectEv(%"class.net::SSLClientSocketImpl"* %0)
  %4 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 42, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %4) #16
  %5 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 41
  tail call void @_ZN3net16NetLogWithSourceD1Ev(%"class.net::NetLogWithSource"* %5) #16
  %6 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 40, i32 0
  %7 = load %"class.net::SSLPrivateKey"*, %"class.net::SSLPrivateKey"** %6, align 8
  %8 = icmp eq %"class.net::SSLPrivateKey"* %7, null
  br i1 %8, label %21, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.net::SSLPrivateKey", %"class.net::SSLPrivateKey"* %7, i64 0, i32 1
  %11 = getelementptr inbounds %"class.base::RefCountedThreadSafe.233", %"class.base::RefCountedThreadSafe.233"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw sub i32* %11, i32 1 acq_rel
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %14, label %21

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.base::RefCountedThreadSafe.233", %"class.base::RefCountedThreadSafe.233"* %10, i64 -2
  %16 = bitcast %"class.base::RefCountedThreadSafe.233"* %15 to %"class.net::SSLPrivateKey"*
  %17 = bitcast %"class.base::RefCountedThreadSafe.233"* %15 to void (%"class.net::SSLPrivateKey"*)***
  %18 = load void (%"class.net::SSLPrivateKey"*)**, void (%"class.net::SSLPrivateKey"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.net::SSLPrivateKey"*)*, void (%"class.net::SSLPrivateKey"*)** %18, i64 4
  %20 = load void (%"class.net::SSLPrivateKey"*)*, void (%"class.net::SSLPrivateKey"*)** %19, align 8
  tail call void %20(%"class.net::SSLPrivateKey"* nonnull %16) #16
  br label %21

21:                                               ; preds = %1, %9, %14
  %22 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 39, i32 0
  %23 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %22, align 8
  %24 = icmp eq %"class.net::X509Certificate"* %23, null
  br i1 %24, label %31, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw sub i32* %26, i32 1 acq_rel
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  tail call void @_ZN3net15X509CertificateD1Ev(%"class.net::X509Certificate"* nonnull %23) #16
  %30 = bitcast %"class.net::X509Certificate"* %23 to i8*
  tail call void @_ZdlPv(i8* %30) #17
  br label %31

31:                                               ; preds = %21, %25, %29
  %32 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 35
  %33 = bitcast %"class.std::__1::basic_string"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  tail call void @_ZdlPv(i8* %39) #17
  br label %40

40:                                               ; preds = %31, %37
  %41 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 34, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = icmp eq i8* %42, null
  br i1 %43, label %48, label %44

44:                                               ; preds = %40
  %45 = ptrtoint i8* %42 to i64
  %46 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 34, i32 0, i32 1
  %47 = bitcast i8** %46 to i64*
  store i64 %45, i64* %47, align 8
  tail call void @_ZdlPv(i8* nonnull %42) #17
  br label %48

48:                                               ; preds = %40, %44
  %49 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 26
  tail call void @_ZN3net9SSLConfigD1Ev(%"struct.net::SSLConfig"* %49) #16
  %50 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 25
  %51 = bitcast %"class.net::HostPortPair"* %50 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %48
  %56 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  tail call void @_ZdlPv(i8* %57) #17
  br label %58

58:                                               ; preds = %48, %55
  %59 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 24, i32 0, i32 0, i32 0
  %60 = load %"class.net::SocketBIOAdapter"*, %"class.net::SocketBIOAdapter"** %59, align 8
  store %"class.net::SocketBIOAdapter"* null, %"class.net::SocketBIOAdapter"** %59, align 8
  %61 = icmp eq %"class.net::SocketBIOAdapter"* %60, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %58
  tail call void @_ZN3net16SocketBIOAdapterD1Ev(%"class.net::SocketBIOAdapter"* nonnull %60) #16
  %63 = bitcast %"class.net::SocketBIOAdapter"* %60 to i8*
  tail call void @_ZdlPv(i8* %63) #17
  br label %64

64:                                               ; preds = %58, %62
  %65 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 23, i32 0, i32 0, i32 0
  %66 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %65, align 8
  store %"class.net::StreamSocket"* null, %"class.net::StreamSocket"** %65, align 8
  %67 = icmp eq %"class.net::StreamSocket"* %66, null
  br i1 %67, label %73, label %68

68:                                               ; preds = %64
  %69 = bitcast %"class.net::StreamSocket"* %66 to void (%"class.net::StreamSocket"*)***
  %70 = load void (%"class.net::StreamSocket"*)**, void (%"class.net::StreamSocket"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.net::StreamSocket"*)*, void (%"class.net::StreamSocket"*)** %70, i64 1
  %72 = load void (%"class.net::StreamSocket"*)*, void (%"class.net::StreamSocket"*)** %71, align 8
  tail call void %72(%"class.net::StreamSocket"* nonnull %66) #16
  br label %73

73:                                               ; preds = %64, %68
  %74 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 22, i32 0, i32 0, i32 0
  %75 = load %struct.ssl_st*, %struct.ssl_st** %74, align 8
  store %struct.ssl_st* null, %struct.ssl_st** %74, align 8
  %76 = icmp eq %struct.ssl_st* %75, null
  br i1 %76, label %78, label %77

77:                                               ; preds = %73
  tail call void @SSL_free(%struct.ssl_st* nonnull %75) #16
  br label %78

78:                                               ; preds = %73, %77
  %79 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 19, i32 0, i32 0, i32 0
  %80 = load %"class.net::CertVerifier::Request"*, %"class.net::CertVerifier::Request"** %79, align 8
  store %"class.net::CertVerifier::Request"* null, %"class.net::CertVerifier::Request"** %79, align 8
  %81 = icmp eq %"class.net::CertVerifier::Request"* %80, null
  br i1 %81, label %87, label %82

82:                                               ; preds = %78
  %83 = bitcast %"class.net::CertVerifier::Request"* %80 to void (%"class.net::CertVerifier::Request"*)***
  %84 = load void (%"class.net::CertVerifier::Request"*)**, void (%"class.net::CertVerifier::Request"*)*** %83, align 8
  %85 = getelementptr inbounds void (%"class.net::CertVerifier::Request"*)*, void (%"class.net::CertVerifier::Request"*)** %84, i64 1
  %86 = load void (%"class.net::CertVerifier::Request"*)*, void (%"class.net::CertVerifier::Request"*)** %85, align 8
  tail call void %86(%"class.net::CertVerifier::Request"* nonnull %80) #16
  br label %87

87:                                               ; preds = %78, %82
  %88 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 15
  tail call void @_ZN3net16CertVerifyResultD1Ev(%"class.net::CertVerifyResult"* %88) #16
  %89 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 14, i32 0
  %90 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %89, align 8
  %91 = icmp eq %"class.net::X509Certificate"* %90, null
  br i1 %91, label %98, label %92

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %90, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = atomicrmw sub i32* %93, i32 1 acq_rel
  %95 = icmp eq i32 %94, 1
  br i1 %95, label %96, label %98

96:                                               ; preds = %92
  tail call void @_ZN3net15X509CertificateD1Ev(%"class.net::X509Certificate"* nonnull %90) #16
  %97 = bitcast %"class.net::X509Certificate"* %90 to i8*
  tail call void @_ZdlPv(i8* %97) #17
  br label %98

98:                                               ; preds = %87, %92, %96
  %99 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 7, i32 0
  %100 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %99, align 8
  %101 = icmp eq %"class.net::IOBuffer"* %100, null
  br i1 %101, label %114, label %102

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %100, i64 0, i32 1
  %104 = getelementptr inbounds %"class.base::RefCountedThreadSafe.8", %"class.base::RefCountedThreadSafe.8"* %103, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = atomicrmw sub i32* %104, i32 1 acq_rel
  %106 = icmp eq i32 %105, 1
  br i1 %106, label %107, label %114

107:                                              ; preds = %102
  %108 = getelementptr inbounds %"class.base::RefCountedThreadSafe.8", %"class.base::RefCountedThreadSafe.8"* %103, i64 -2
  %109 = bitcast %"class.base::RefCountedThreadSafe.8"* %108 to %"class.net::IOBuffer"*
  %110 = bitcast %"class.base::RefCountedThreadSafe.8"* %108 to void (%"class.net::IOBuffer"*)***
  %111 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %110, align 8
  %112 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %111, i64 1
  %113 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %112, align 8
  tail call void %113(%"class.net::IOBuffer"* nonnull %109) #16
  br label %114

114:                                              ; preds = %98, %102, %107
  %115 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 5, i32 0
  %116 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %115, align 8
  %117 = icmp eq %"class.net::IOBuffer"* %116, null
  br i1 %117, label %130, label %118

118:                                              ; preds = %114
  %119 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %116, i64 0, i32 1
  %120 = getelementptr inbounds %"class.base::RefCountedThreadSafe.8", %"class.base::RefCountedThreadSafe.8"* %119, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = atomicrmw sub i32* %120, i32 1 acq_rel
  %122 = icmp eq i32 %121, 1
  br i1 %122, label %123, label %130

123:                                              ; preds = %118
  %124 = getelementptr inbounds %"class.base::RefCountedThreadSafe.8", %"class.base::RefCountedThreadSafe.8"* %119, i64 -2
  %125 = bitcast %"class.base::RefCountedThreadSafe.8"* %124 to %"class.net::IOBuffer"*
  %126 = bitcast %"class.base::RefCountedThreadSafe.8"* %124 to void (%"class.net::IOBuffer"*)***
  %127 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %126, align 8
  %128 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %127, i64 1
  %129 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %128, align 8
  tail call void %129(%"class.net::IOBuffer"* nonnull %125) #16
  br label %130

130:                                              ; preds = %114, %118, %123
  %131 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 4, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %131) #16
  %132 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %132) #16
  %133 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %133) #16
  %134 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN3net6SocketD2Ev(%"class.net::Socket"* %134) #16
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net16NetLogWithSourceD1Ev(%"class.net::NetLogWithSource"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net9SSLConfigD1Ev(%"struct.net::SSLConfig"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net16CertVerifyResultD1Ev(%"class.net::CertVerifyResult"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net6SocketD2Ev(%"class.net::Socket"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn40_N3net19SSLClientSocketImplD1Ev(%"class.net::SSLClientSocketImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 -1, i32 41
  %3 = bitcast %"class.net::NetLogWithSource"* %2 to %"class.net::SSLClientSocketImpl"*
  tail call void @_ZN3net19SSLClientSocketImplD2Ev(%"class.net::SSLClientSocketImpl"* %3) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19SSLClientSocketImplD0Ev(%"class.net::SSLClientSocketImpl"*) unnamed_addr #0 align 2 {
  tail call void @_ZN3net19SSLClientSocketImplD2Ev(%"class.net::SSLClientSocketImpl"* %0) #16
  %2 = bitcast %"class.net::SSLClientSocketImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn40_N3net19SSLClientSocketImplD0Ev(%"class.net::SSLClientSocketImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 -1, i32 41
  %3 = bitcast %"class.net::NetLogWithSource"* %2 to %"class.net::SSLClientSocketImpl"*
  tail call void @_ZN3net19SSLClientSocketImplD2Ev(%"class.net::SSLClientSocketImpl"* %3) #16
  %4 = bitcast %"class.net::NetLogWithSource"* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19SSLClientSocketImpl15SetSSLKeyLoggerENSt3__110unique_ptrINS_12SSLKeyLoggerENS1_14default_deleteIS3_EEEE(%"class.net::SSLKeyLogger"*) local_unnamed_addr #0 align 2 {
  %2 = load atomic i64, i64* @_ZN4base9SingletonIN3net19SSLClientSocketImpl10SSLContextENS_20LeakySingletonTraitsIS3_EES3_E9instance_E acquire, align 8
  %3 = icmp ugt i64 %2, 1
  br i1 %3, label %12, label %4

4:                                                ; preds = %1
  %5 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* nonnull @_ZN4base9SingletonIN3net19SSLClientSocketImpl10SSLContextENS_20LeakySingletonTraitsIS3_EES3_E9instance_E) #16
  br i1 %5, label %6, label %10

6:                                                ; preds = %4
  %7 = tail call i8* @_Znwm(i64 16) #17
  %8 = bitcast i8* %7 to %"class.net::SSLClientSocketImpl::SSLContext"*
  tail call void @_ZN3net19SSLClientSocketImpl10SSLContextC2Ev(%"class.net::SSLClientSocketImpl::SSLContext"* nonnull %8) #16
  %9 = ptrtoint i8* %7 to i64
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* nonnull @_ZN4base9SingletonIN3net19SSLClientSocketImpl10SSLContextENS_20LeakySingletonTraitsIS3_EES3_E9instance_E, i64 %9, void (i8*)* null, i8* null) #16
  br label %12

10:                                               ; preds = %4
  %11 = load atomic i64, i64* @_ZN4base9SingletonIN3net19SSLClientSocketImpl10SSLContextENS_20LeakySingletonTraitsIS3_EES3_E9instance_E acquire, align 8
  br label %12

12:                                               ; preds = %10, %6, %1
  %13 = phi i64 [ %2, %1 ], [ %9, %6 ], [ %11, %10 ]
  %14 = inttoptr i64 %13 to %"class.net::SSLClientSocketImpl::SSLContext"*
  tail call void @_ZN3net19SSLKeyLoggerManager15SetSSLKeyLoggerENSt3__110unique_ptrINS_12SSLKeyLoggerENS1_14default_deleteIS3_EEEE(%"class.net::SSLKeyLogger"* %0) #16
  %15 = getelementptr inbounds %"class.net::SSLClientSocketImpl::SSLContext", %"class.net::SSLClientSocketImpl::SSLContext"* %14, i64 0, i32 1, i32 0, i32 0, i32 0
  %16 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %15, align 8
  tail call void @SSL_CTX_set_keylog_callback(%struct.ssl_ctx_st* %16, void (%struct.ssl_st*, i8*)* nonnull @_ZN3net19SSLKeyLoggerManager14KeyLogCallbackEPK6ssl_stPKc) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net19SSLClientSocketImpl20ExportKeyingMaterialERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEbS8_Phj(%"class.net::SSLClientSocketImpl"*, %"class.base::BasicStringPiece"* nocapture readonly dereferenceable(16), i1 zeroext, %"class.base::BasicStringPiece"* nocapture readonly dereferenceable(16), i8*, i32) unnamed_addr #0 align 2 {
  %7 = alloca %"class.crypto::OpenSSLErrStackTracer", align 8
  %8 = alloca %"class.base::Location", align 8
  %9 = alloca %"class.logging::LogMessage", align 8
  %10 = bitcast %"class.net::SSLClientSocketImpl"* %0 to i1 (%"class.net::SSLClientSocketImpl"*)***
  %11 = load i1 (%"class.net::SSLClientSocketImpl"*)**, i1 (%"class.net::SSLClientSocketImpl"*)*** %10, align 8
  %12 = getelementptr inbounds i1 (%"class.net::SSLClientSocketImpl"*)*, i1 (%"class.net::SSLClientSocketImpl"*)** %11, i64 14
  %13 = load i1 (%"class.net::SSLClientSocketImpl"*)*, i1 (%"class.net::SSLClientSocketImpl"*)** %12, align 8
  %14 = tail call zeroext i1 %13(%"class.net::SSLClientSocketImpl"* %0) #16
  br i1 %14, label %15, label %42

15:                                               ; preds = %6
  %16 = bitcast %"class.crypto::OpenSSLErrStackTracer"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 32, i1 false)
  %17 = bitcast %"class.base::Location"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #16
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %8, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str, i64 0, i64 0), i32 415) #16
  %18 = getelementptr inbounds %"class.crypto::OpenSSLErrStackTracer", %"class.crypto::OpenSSLErrStackTracer"* %7, i64 0, i32 0
  call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* nonnull %18, %"class.base::Location"* nonnull dereferenceable(32) %8) #16
  call void @_ZN6crypto17EnsureOpenSSLInitEv() #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #16
  %19 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 22, i32 0, i32 0, i32 0
  %20 = load %struct.ssl_st*, %struct.ssl_st** %19, align 8
  %21 = zext i32 %5 to i64
  %22 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i1 %2 to i32
  %31 = call i32 @SSL_export_keying_material(%struct.ssl_st* %20, i8* %4, i64 %21, i8* %23, i64 %25, i8* %27, i64 %29, i32 %30) #16
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %40

33:                                               ; preds = %15
  %34 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #16
  br i1 %34, label %35, label %40

35:                                               ; preds = %33
  %36 = bitcast %"class.logging::LogMessage"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %36) #16
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %9, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str, i64 0, i64 0), i32 421, i32 2) #16
  %37 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %9, i64 0, i32 2
  %38 = bitcast %"class.std::__1::basic_ostringstream"* %37 to %"class.std::__1::basic_ostream"*
  %39 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %38, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.3, i64 0, i64 0), i64 33) #16
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %9) #16
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %36) #16
  br label %40

40:                                               ; preds = %35, %33, %15
  %41 = phi i32 [ 0, %15 ], [ -2, %33 ], [ -2, %35 ]
  call void @_ZN6crypto20ClearOpenSSLERRStackERKN4base8LocationE(%"class.base::Location"* nonnull dereferenceable(32) %18) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #16
  br label %42

42:                                               ; preds = %6, %40
  %43 = phi i32 [ %41, %40 ], [ -15, %6 ]
  ret i32 %43
}

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

declare i32 @SSL_export_keying_material(%struct.ssl_st*, i8*, i64, i8*, i64, i8*, i64, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #1

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net19SSLClientSocketImpl7ConnectEN4base12OnceCallbackIFviEEE(%"class.net::SSLClientSocketImpl"*, %"class.base::OnceCallback"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 30
  %5 = load i8, i8* %4, align 2, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str, i64 0, i64 0), i32 435, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0)) #16
  %9 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #16
  br label %10

10:                                               ; preds = %2, %7
  %11 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 41
  call void @_ZNK3net16NetLogWithSource10BeginEventENS_15NetLogEventTypeE(%"class.net::NetLogWithSource"* %11, i32 48) #16
  %12 = call i32 @_ZN3net19SSLClientSocketImpl4InitEv(%"class.net::SSLClientSocketImpl"* %0)
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %15, label %14

14:                                               ; preds = %10
  call void @_ZN3net19SSLClientSocketImpl18LogConnectEndEventEi(%"class.net::SSLClientSocketImpl"* %0, i32 %12)
  br label %29

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 22, i32 0, i32 0, i32 0
  %17 = load %struct.ssl_st*, %struct.ssl_st** %16, align 8
  call void @SSL_set_connect_state(%struct.ssl_st* %17) #16
  %18 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 27
  store i32 1, i32* %18, align 8
  %19 = call i32 @_ZN3net19SSLClientSocketImpl15DoHandshakeLoopEi(%"class.net::SSLClientSocketImpl"* %0, i32 0)
  %20 = icmp eq i32 %19, -1
  br i1 %20, label %21, label %25

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 2, i32 0
  %23 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0
  %24 = call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %22, %"class.base::internal::CallbackBase"* dereferenceable(8) %23) #16
  br label %26

25:                                               ; preds = %15
  call void @_ZN3net19SSLClientSocketImpl18LogConnectEndEventEi(%"class.net::SSLClientSocketImpl"* %0, i32 %19)
  br label %26

26:                                               ; preds = %25, %21
  %27 = icmp slt i32 %19, 0
  %28 = select i1 %27, i32 %19, i32 0
  br label %29

29:                                               ; preds = %26, %14
  %30 = phi i32 [ %12, %14 ], [ %28, %26 ]
  ret i32 %30
}

declare void @_ZNK3net16NetLogWithSource10BeginEventENS_15NetLogEventTypeE(%"class.net::NetLogWithSource"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net19SSLClientSocketImpl4InitEv(%"class.net::SSLClientSocketImpl"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.crypto::OpenSSLErrStackTracer", align 8
  %5 = alloca %"class.base::Location", align 8
  %6 = alloca %"class.net::IPAddress", align 1
  %7 = alloca %"class.base::BasicStringPiece", align 8
  %8 = alloca %"struct.net::SSLClientSessionCache::Key", align 8
  %9 = alloca %"class.absl::optional.285", align 1
  %10 = alloca %"class.net::IPEndPoint", align 2
  %11 = alloca %"struct.net::SSLClientSessionCache::Key", align 8
  %12 = alloca %"class.absl::optional.285", align 1
  %13 = alloca %"struct.net::SslSetClearMask", align 8
  %14 = alloca %"struct.net::SslSetClearMask", align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = alloca %"class.logging::LogMessage", align 8
  %17 = alloca %"class.std::__1::vector.210", align 8
  %18 = load atomic i64, i64* @_ZN4base9SingletonIN3net19SSLClientSocketImpl10SSLContextENS_20LeakySingletonTraitsIS3_EES3_E9instance_E acquire, align 8
  %19 = icmp ugt i64 %18, 1
  br i1 %19, label %28, label %20

20:                                               ; preds = %1
  %21 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* nonnull @_ZN4base9SingletonIN3net19SSLClientSocketImpl10SSLContextENS_20LeakySingletonTraitsIS3_EES3_E9instance_E) #16
  br i1 %21, label %22, label %26

22:                                               ; preds = %20
  %23 = tail call i8* @_Znwm(i64 16) #17
  %24 = bitcast i8* %23 to %"class.net::SSLClientSocketImpl::SSLContext"*
  tail call void @_ZN3net19SSLClientSocketImpl10SSLContextC2Ev(%"class.net::SSLClientSocketImpl::SSLContext"* nonnull %24) #16
  %25 = ptrtoint i8* %23 to i64
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* nonnull @_ZN4base9SingletonIN3net19SSLClientSocketImpl10SSLContextENS_20LeakySingletonTraitsIS3_EES3_E9instance_E, i64 %25, void (i8*)* null, i8* null) #16
  br label %28

26:                                               ; preds = %20
  %27 = load atomic i64, i64* @_ZN4base9SingletonIN3net19SSLClientSocketImpl10SSLContextENS_20LeakySingletonTraitsIS3_EES3_E9instance_E acquire, align 8
  br label %28

28:                                               ; preds = %1, %22, %26
  %29 = phi i64 [ %18, %1 ], [ %25, %22 ], [ %27, %26 ]
  %30 = inttoptr i64 %29 to %"class.net::SSLClientSocketImpl::SSLContext"*
  %31 = bitcast %"class.crypto::OpenSSLErrStackTracer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %31) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 32, i1 false)
  %32 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %32) #16
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str, i64 0, i64 0), i32 756) #16
  %33 = getelementptr inbounds %"class.crypto::OpenSSLErrStackTracer", %"class.crypto::OpenSSLErrStackTracer"* %4, i64 0, i32 0
  call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* nonnull %33, %"class.base::Location"* nonnull dereferenceable(32) %5) #16
  call void @_ZN6crypto17EnsureOpenSSLInitEv() #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %32) #16
  %34 = getelementptr inbounds %"class.net::SSLClientSocketImpl::SSLContext", %"class.net::SSLClientSocketImpl::SSLContext"* %30, i64 0, i32 1, i32 0, i32 0, i32 0
  %35 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %34, align 8
  %36 = call %struct.ssl_st* @SSL_new(%struct.ssl_ctx_st* %35) #16
  %37 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 22, i32 0, i32 0, i32 0
  %38 = load %struct.ssl_st*, %struct.ssl_st** %37, align 8
  store %struct.ssl_st* %36, %struct.ssl_st** %37, align 8
  %39 = icmp eq %struct.ssl_st* %38, null
  br i1 %39, label %42, label %40

40:                                               ; preds = %28
  call void @SSL_free(%struct.ssl_st* nonnull %38) #16
  %41 = load %struct.ssl_st*, %struct.ssl_st** %37, align 8
  br label %42

42:                                               ; preds = %28, %40
  %43 = phi %struct.ssl_st* [ %36, %28 ], [ %41, %40 ]
  %44 = icmp eq %struct.ssl_st* %43, null
  br i1 %44, label %448, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds %"class.net::SSLClientSocketImpl::SSLContext", %"class.net::SSLClientSocketImpl::SSLContext"* %30, i64 0, i32 0
  %47 = load i32, i32* %46, align 8
  %48 = bitcast %"class.net::SSLClientSocketImpl"* %0 to i8*
  %49 = call i32 @SSL_set_ex_data(%struct.ssl_st* nonnull %43, i32 %47, i8* %48) #16
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %448, label %51

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %6, i64 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %52) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %52, i8 -86, i64 17, i1 false)
  call void @_ZN3net9IPAddressC1Ev(%"class.net::IPAddress"* nonnull %6) #16
  %53 = bitcast %"class.base::BasicStringPiece"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %53) #16
  %54 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 25
  %55 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %7, i64 0, i32 0
  %56 = bitcast %"class.net::HostPortPair"* %54 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  %58 = load i8, i8* %57, align 1
  %59 = icmp slt i8 %58, 0
  %60 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  %62 = bitcast %"class.net::HostPortPair"* %54 to i8*
  %63 = select i1 %59, i8* %61, i8* %62
  store i8* %63, i8** %55, align 8
  %64 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %7, i64 0, i32 1
  %65 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 25, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %66 = load i64, i64* %65, align 8
  %67 = zext i8 %58 to i64
  %68 = select i1 %59, i64 %66, i64 %67
  store i64 %68, i64* %64, align 8
  %69 = call zeroext i1 @_ZN3net9IPAddress19AssignFromIPLiteralERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::IPAddress"* nonnull %6, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %7) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53) #16
  br i1 %69, label %80, label %70

70:                                               ; preds = %51
  %71 = load %struct.ssl_st*, %struct.ssl_st** %37, align 8
  %72 = load i8, i8* %57, align 1
  %73 = icmp slt i8 %72, 0
  br i1 %73, label %74, label %76

74:                                               ; preds = %70
  %75 = load i8*, i8** %60, align 8
  br label %76

76:                                               ; preds = %70, %74
  %77 = phi i8* [ %75, %74 ], [ %62, %70 ]
  %78 = call i32 @SSL_set_tlsext_host_name(%struct.ssl_st* %71, i8* %77) #16
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %446, label %80

80:                                               ; preds = %76, %51
  %81 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 18
  %82 = load %"class.net::SSLClientContext"*, %"class.net::SSLClientContext"** %81, align 8
  %83 = getelementptr inbounds %"class.net::SSLClientContext", %"class.net::SSLClientContext"* %82, i64 0, i32 2, i32 5
  %84 = load i8, i8* %83, align 8, !range !2
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %171, label %86

86:                                               ; preds = %80
  %87 = call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN3net8features18kPostQuantumCECPQ2E) #16
  br i1 %87, label %167, label %88

88:                                               ; preds = %86
  br i1 %69, label %171, label %89

89:                                               ; preds = %88
  %90 = call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN3net8features29kPostQuantumCECPQ2SomeDomainsE) #16
  br i1 %90, label %91, label %171

91:                                               ; preds = %89
  %92 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %92) #16
  %93 = load i8, i8* %57, align 1
  %94 = icmp slt i8 %93, 0
  %95 = load i8*, i8** %60, align 8
  %96 = select i1 %94, i8* %95, i8* %62
  %97 = load i64, i64* %65, align 8
  %98 = zext i8 %93 to i64
  %99 = select i1 %94, i64 %97, i64 %98
  call void @_ZN3net27registry_controlled_domains20GetDomainAndRegistryEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_21PrivateRegistryFilterE(%"class.std::__1::basic_string"* nonnull sret %2, i8* %96, i64 %99, i32 0) #16
  %100 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %100) #16
  call void @_ZNK4base12FeatureParamINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEELb0EE3GetEv(%"class.std::__1::basic_string"* nonnull sret %3, %"struct.base::FeatureParam"* nonnull @_ZN3net8features24kPostQuantumCECPQ2PrefixE) #16
  %101 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %102 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %101, i64 0, i32 1, i32 0
  %103 = load i8, i8* %102, align 1
  %104 = icmp slt i8 %103, 0
  %105 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  %107 = select i1 %104, i8* %106, i8* %92
  %108 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %109 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %108, i64 0, i32 1, i32 0
  %110 = load i8, i8* %109, align 1
  %111 = icmp slt i8 %110, 0
  %112 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load i8*, i8** %112, align 8
  %114 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %115 = load i64, i64* %114, align 8
  %116 = zext i8 %110 to i64
  %117 = select i1 %111, i8* %113, i8* %100
  %118 = select i1 %111, i64 %115, i64 %116
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %157, label %120

120:                                              ; preds = %91
  %121 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %122 = load i64, i64* %121, align 8
  %123 = zext i8 %103 to i64
  %124 = select i1 %104, i64 %122, i64 %123
  %125 = getelementptr inbounds i8, i8* %107, i64 %124
  %126 = ptrtoint i8* %125 to i64
  %127 = ptrtoint i8* %107 to i64
  %128 = icmp slt i64 %124, %118
  br i1 %128, label %151, label %129

129:                                              ; preds = %120
  %130 = load i8, i8* %117, align 1
  %131 = zext i8 %130 to i32
  br label %132

132:                                              ; preds = %146, %129
  %133 = phi i64 [ %149, %146 ], [ %124, %129 ]
  %134 = phi i8* [ %147, %146 ], [ %107, %129 ]
  %135 = sub nsw i64 %133, %118
  %136 = add nsw i64 %135, 1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %151, label %138

138:                                              ; preds = %132
  %139 = call i8* @memchr(i8* %134, i32 %131, i64 %136) #16
  %140 = icmp eq i8* %139, null
  br i1 %140, label %151, label %141

141:                                              ; preds = %138
  %142 = call i32 @bcmp(i8* nonnull %139, i8* %117, i64 %118) #16
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %146

144:                                              ; preds = %141
  %145 = ptrtoint i8* %139 to i64
  br label %151

146:                                              ; preds = %141
  %147 = getelementptr inbounds i8, i8* %139, i64 1
  %148 = ptrtoint i8* %147 to i64
  %149 = sub i64 %126, %148
  %150 = icmp slt i64 %149, %118
  br i1 %150, label %151, label %132

151:                                              ; preds = %146, %138, %132, %144, %120
  %152 = phi i64 [ %126, %120 ], [ %145, %144 ], [ %126, %132 ], [ %126, %138 ], [ %126, %146 ]
  %153 = phi i8* [ %125, %120 ], [ %139, %144 ], [ %125, %132 ], [ %125, %138 ], [ %125, %146 ]
  %154 = icmp ne i8* %153, %125
  %155 = icmp eq i64 %152, %127
  %156 = and i1 %155, %154
  br label %157

157:                                              ; preds = %151, %91
  %158 = phi i1 [ true, %91 ], [ %156, %151 ]
  br i1 %111, label %159, label %161

159:                                              ; preds = %157
  call void @_ZdlPv(i8* %113) #17
  %160 = load i8, i8* %102, align 1
  br label %161

161:                                              ; preds = %159, %157
  %162 = phi i8 [ %103, %157 ], [ %160, %159 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %100) #16
  %163 = icmp slt i8 %162, 0
  br i1 %163, label %164, label %166

164:                                              ; preds = %161
  %165 = load i8*, i8** %105, align 8
  call void @_ZdlPv(i8* %165) #17
  br label %166

166:                                              ; preds = %161, %164
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %92) #16
  br i1 %158, label %167, label %171

167:                                              ; preds = %166, %86
  %168 = load %struct.ssl_st*, %struct.ssl_st** %37, align 8
  %169 = call i32 @SSL_set1_curves(%struct.ssl_st* %168, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @_ZZN3net19SSLClientSocketImpl4InitEvE7kCurves, i64 0, i64 0), i64 4) #16
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %446, label %171

171:                                              ; preds = %167, %80, %166, %89, %88
  %172 = load %"class.net::SSLClientContext"*, %"class.net::SSLClientContext"** %81, align 8
  %173 = getelementptr inbounds %"class.net::SSLClientContext", %"class.net::SSLClientContext"* %172, i64 0, i32 7
  %174 = load %"class.net::SSLClientSessionCache"*, %"class.net::SSLClientSessionCache"** %173, align 8
  %175 = icmp eq %"class.net::SSLClientSessionCache"* %174, null
  br i1 %175, label %220, label %176

176:                                              ; preds = %171
  %177 = bitcast %"struct.net::SSLClientSessionCache::Key"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 248, i8* nonnull %177) #16
  %178 = getelementptr inbounds %"class.absl::optional.285", %"class.absl::optional.285"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %178, i8 0, i64 18, i1 false) #16
  call void @_ZNK3net19SSLClientSocketImpl18GetSessionCacheKeyEN4absl8optionalINS_9IPAddressEEE(%"struct.net::SSLClientSessionCache::Key"* nonnull sret %8, %"class.net::SSLClientSocketImpl"* %0, %"class.absl::optional.285"* nonnull %9)
  %179 = call %struct.ssl_session_st* @_ZN3net21SSLClientSessionCache6LookupERKNS0_3KeyE(%"class.net::SSLClientSessionCache"* nonnull %174, %"struct.net::SSLClientSessionCache::Key"* nonnull dereferenceable(248) %8) #16
  %180 = ptrtoint %struct.ssl_session_st* %179 to i64
  call void @_ZN3net21SSLClientSessionCache3KeyD1Ev(%"struct.net::SSLClientSessionCache::Key"* nonnull %8) #16
  %181 = load i8, i8* %178, align 1, !range !2
  %182 = icmp eq i8 %181, 0
  br i1 %182, label %185, label %183

183:                                              ; preds = %176
  %184 = getelementptr inbounds %"class.absl::optional.285", %"class.absl::optional.285"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %184) #16
  store i8 0, i8* %178, align 1
  br label %185

185:                                              ; preds = %176, %183
  call void @llvm.lifetime.end.p0i8(i64 248, i8* nonnull %177) #16
  %186 = icmp eq %struct.ssl_session_st* %179, null
  br i1 %186, label %187, label %213

187:                                              ; preds = %185
  %188 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %188) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %188, i8 -86, i64 20, i1 false)
  call void @_ZN3net10IPEndPointC1Ev(%"class.net::IPEndPoint"* nonnull %10) #16
  %189 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 23, i32 0, i32 0, i32 0
  %190 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %189, align 8
  %191 = bitcast %"class.net::StreamSocket"* %190 to i32 (%"class.net::StreamSocket"*, %"class.net::IPEndPoint"*)***
  %192 = load i32 (%"class.net::StreamSocket"*, %"class.net::IPEndPoint"*)**, i32 (%"class.net::StreamSocket"*, %"class.net::IPEndPoint"*)*** %191, align 8
  %193 = getelementptr inbounds i32 (%"class.net::StreamSocket"*, %"class.net::IPEndPoint"*)*, i32 (%"class.net::StreamSocket"*, %"class.net::IPEndPoint"*)** %192, i64 16
  %194 = load i32 (%"class.net::StreamSocket"*, %"class.net::IPEndPoint"*)*, i32 (%"class.net::StreamSocket"*, %"class.net::IPEndPoint"*)** %193, align 8
  %195 = call i32 %194(%"class.net::StreamSocket"* %190, %"class.net::IPEndPoint"* nonnull %10) #16
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %197, label %211

197:                                              ; preds = %187
  %198 = load %"class.net::SSLClientContext"*, %"class.net::SSLClientContext"** %81, align 8
  %199 = getelementptr inbounds %"class.net::SSLClientContext", %"class.net::SSLClientContext"* %198, i64 0, i32 7
  %200 = load %"class.net::SSLClientSessionCache"*, %"class.net::SSLClientSessionCache"** %199, align 8
  %201 = bitcast %"struct.net::SSLClientSessionCache::Key"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 248, i8* nonnull %201) #16
  %202 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %10, i64 0, i32 0
  %203 = getelementptr inbounds %"class.absl::optional.285", %"class.absl::optional.285"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %203, align 1
  %204 = getelementptr inbounds %"class.absl::optional.285", %"class.absl::optional.285"* %12, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3net9IPAddressC1ERKS0_(%"class.net::IPAddress"* %204, %"class.net::IPAddress"* nonnull dereferenceable(17) %202) #16
  call void @_ZNK3net19SSLClientSocketImpl18GetSessionCacheKeyEN4absl8optionalINS_9IPAddressEEE(%"struct.net::SSLClientSessionCache::Key"* nonnull sret %11, %"class.net::SSLClientSocketImpl"* %0, %"class.absl::optional.285"* nonnull %12)
  %205 = call %struct.ssl_session_st* @_ZN3net21SSLClientSessionCache6LookupERKNS0_3KeyE(%"class.net::SSLClientSessionCache"* %200, %"struct.net::SSLClientSessionCache::Key"* nonnull dereferenceable(248) %11) #16
  %206 = ptrtoint %struct.ssl_session_st* %205 to i64
  call void @_ZN3net21SSLClientSessionCache3KeyD1Ev(%"struct.net::SSLClientSessionCache::Key"* nonnull %11) #16
  %207 = load i8, i8* %203, align 1, !range !2
  %208 = icmp eq i8 %207, 0
  br i1 %208, label %210, label %209

209:                                              ; preds = %197
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %204) #16
  store i8 0, i8* %203, align 1
  br label %210

210:                                              ; preds = %197, %209
  call void @llvm.lifetime.end.p0i8(i64 248, i8* nonnull %201) #16
  br label %211

211:                                              ; preds = %210, %187
  %212 = phi i64 [ %206, %210 ], [ %180, %187 ]
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %10) #16
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %188) #16
  br label %213

213:                                              ; preds = %185, %211
  %214 = phi i64 [ %180, %185 ], [ %212, %211 ]
  %215 = inttoptr i64 %214 to %struct.ssl_session_st*
  %216 = icmp eq i64 %214, 0
  br i1 %216, label %220, label %217

217:                                              ; preds = %213
  %218 = load %struct.ssl_st*, %struct.ssl_st** %37, align 8
  %219 = call i32 @SSL_set_session(%struct.ssl_st* %218, %struct.ssl_session_st* nonnull %215) #16
  call void @SSL_SESSION_free(%struct.ssl_session_st* nonnull %215) #16
  br label %220

220:                                              ; preds = %213, %171, %217
  %221 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 23, i32 0, i32 0, i32 0
  %222 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %221, align 8
  %223 = call i8* @_Znwm(i64 104) #17
  %224 = bitcast i8* %223 to %"class.net::SocketBIOAdapter"*
  %225 = icmp eq %"class.net::SSLClientSocketImpl"* %0, null
  %226 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 1
  %227 = select i1 %225, %"class.net::SocketBIOAdapter::Delegate"* null, %"class.net::SocketBIOAdapter::Delegate"* %226
  call void @_ZN3net16SocketBIOAdapterC1EPNS_12StreamSocketEiiPNS0_8DelegateE(%"class.net::SocketBIOAdapter"* nonnull %224, %"class.net::StreamSocket"* %222, i32 17408, i32 17408, %"class.net::SocketBIOAdapter::Delegate"* %227) #16
  %228 = ptrtoint i8* %223 to i64
  %229 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 24
  %230 = getelementptr inbounds %"class.std::__1::unique_ptr.175", %"class.std::__1::unique_ptr.175"* %229, i64 0, i32 0, i32 0, i32 0
  %231 = load %"class.net::SocketBIOAdapter"*, %"class.net::SocketBIOAdapter"** %230, align 8
  %232 = bitcast %"class.std::__1::unique_ptr.175"* %229 to i64*
  store i64 %228, i64* %232, align 8
  %233 = icmp eq %"class.net::SocketBIOAdapter"* %231, null
  %234 = bitcast i8* %223 to %"class.net::SocketBIOAdapter"*
  br i1 %233, label %238, label %235

235:                                              ; preds = %220
  call void @_ZN3net16SocketBIOAdapterD1Ev(%"class.net::SocketBIOAdapter"* nonnull %231) #16
  %236 = bitcast %"class.net::SocketBIOAdapter"* %231 to i8*
  call void @_ZdlPv(i8* %236) #17
  %237 = load %"class.net::SocketBIOAdapter"*, %"class.net::SocketBIOAdapter"** %230, align 8
  br label %238

238:                                              ; preds = %235, %220
  %239 = phi %"class.net::SocketBIOAdapter"* [ %237, %235 ], [ %234, %220 ]
  %240 = getelementptr inbounds %"class.net::SocketBIOAdapter", %"class.net::SocketBIOAdapter"* %239, i64 0, i32 0, i32 0, i32 0, i32 0
  %241 = load %struct.bio_st*, %struct.bio_st** %240, align 8
  %242 = call i32 @BIO_up_ref(%struct.bio_st* %241) #16
  %243 = load %struct.ssl_st*, %struct.ssl_st** %37, align 8
  call void @SSL_set0_rbio(%struct.ssl_st* %243, %struct.bio_st* %241) #16
  %244 = call i32 @BIO_up_ref(%struct.bio_st* %241) #16
  %245 = load %struct.ssl_st*, %struct.ssl_st** %37, align 8
  call void @SSL_set0_wbio(%struct.ssl_st* %245, %struct.bio_st* %241) #16
  %246 = load %"class.net::SSLClientContext"*, %"class.net::SSLClientContext"** %81, align 8
  %247 = getelementptr inbounds %"class.net::SSLClientContext", %"class.net::SSLClientContext"* %246, i64 0, i32 2, i32 0
  %248 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 26, i32 0, i32 0, i32 0, i32 0, i32 0
  %249 = load i8, i8* %248, align 2, !range !2
  %250 = icmp eq i8 %249, 0
  %251 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 26, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %252 = select i1 %250, i16* %247, i16* %251
  %253 = load i16, i16* %252, align 2
  %254 = getelementptr inbounds %"class.net::SSLClientContext", %"class.net::SSLClientContext"* %246, i64 0, i32 2, i32 2
  %255 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 26, i32 1, i32 0, i32 0, i32 0, i32 0
  %256 = load i8, i8* %255, align 2, !range !2
  %257 = icmp eq i8 %256, 0
  %258 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 26, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %259 = select i1 %257, i16* %254, i16* %258
  %260 = load i16, i16* %259, align 2
  %261 = load %struct.ssl_st*, %struct.ssl_st** %37, align 8
  %262 = call i32 @SSL_set_min_proto_version(%struct.ssl_st* %261, i16 zeroext %253) #16
  %263 = icmp eq i32 %262, 0
  br i1 %263, label %446, label %264

264:                                              ; preds = %238
  %265 = load %struct.ssl_st*, %struct.ssl_st** %37, align 8
  %266 = call i32 @SSL_set_max_proto_version(%struct.ssl_st* %265, i16 zeroext %260) #16
  %267 = icmp eq i32 %266, 0
  br i1 %267, label %446, label %268

268:                                              ; preds = %264
  %269 = load %struct.ssl_st*, %struct.ssl_st** %37, align 8
  %270 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 26, i32 2
  %271 = load i8, i8* %270, align 8, !range !2
  %272 = zext i8 %271 to i32
  call void @SSL_set_early_data_enabled(%struct.ssl_st* %269, i32 %272) #16
  %273 = bitcast %"struct.net::SslSetClearMask"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %273) #16
  %274 = getelementptr inbounds %"struct.net::SslSetClearMask", %"struct.net::SslSetClearMask"* %13, i64 0, i32 0
  %275 = getelementptr inbounds %"struct.net::SslSetClearMask", %"struct.net::SslSetClearMask"* %13, i64 0, i32 1
  %276 = bitcast %"struct.net::SslSetClearMask"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %276, i8 -86, i64 16, i1 false)
  call void @_ZN3net15SslSetClearMaskC1Ev(%"struct.net::SslSetClearMask"* nonnull %13) #16
  call void @_ZN3net15SslSetClearMask13ConfigureFlagElb(%"struct.net::SslSetClearMask"* nonnull %13, i64 0, i1 zeroext true) #16
  call void @_ZN3net15SslSetClearMask13ConfigureFlagElb(%"struct.net::SslSetClearMask"* nonnull %13, i64 0, i1 zeroext true) #16
  %277 = load %struct.ssl_st*, %struct.ssl_st** %37, align 8
  %278 = load i64, i64* %274, align 8
  %279 = trunc i64 %278 to i32
  %280 = call i32 @SSL_set_options(%struct.ssl_st* %277, i32 %279) #16
  %281 = load %struct.ssl_st*, %struct.ssl_st** %37, align 8
  %282 = load i64, i64* %275, align 8
  %283 = trunc i64 %282 to i32
  %284 = call i32 @SSL_clear_options(%struct.ssl_st* %281, i32 %283) #16
  %285 = bitcast %"struct.net::SslSetClearMask"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %285) #16
  %286 = getelementptr inbounds %"struct.net::SslSetClearMask", %"struct.net::SslSetClearMask"* %14, i64 0, i32 0
  %287 = getelementptr inbounds %"struct.net::SslSetClearMask", %"struct.net::SslSetClearMask"* %14, i64 0, i32 1
  %288 = bitcast %"struct.net::SslSetClearMask"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %288, i8 -86, i64 16, i1 false)
  call void @_ZN3net15SslSetClearMaskC1Ev(%"struct.net::SslSetClearMask"* nonnull %14) #16
  call void @_ZN3net15SslSetClearMask13ConfigureFlagElb(%"struct.net::SslSetClearMask"* nonnull %14, i64 0, i1 zeroext true) #16
  call void @_ZN3net15SslSetClearMask13ConfigureFlagElb(%"struct.net::SslSetClearMask"* nonnull %14, i64 256, i1 zeroext true) #16
  call void @_ZN3net15SslSetClearMask13ConfigureFlagElb(%"struct.net::SslSetClearMask"* nonnull %14, i64 128, i1 zeroext true) #16
  %289 = load %struct.ssl_st*, %struct.ssl_st** %37, align 8
  %290 = load i64, i64* %286, align 8
  %291 = trunc i64 %290 to i32
  %292 = call i32 @SSL_set_mode(%struct.ssl_st* %289, i32 %291) #16
  %293 = load %struct.ssl_st*, %struct.ssl_st** %37, align 8
  %294 = load i64, i64* %287, align 8
  %295 = trunc i64 %294 to i32
  %296 = call i32 @SSL_clear_mode(%struct.ssl_st* %293, i32 %295) #16
  %297 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %297) #16
  %298 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %299 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %300 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %301 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %300, i64 0, i32 1, i32 0
  %302 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %302, i8 -86, i64 24, i1 false)
  store i8 21, i8* %301, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %297, i8* align 1 getelementptr inbounds ([22 x i8], [22 x i8]* @.str.9, i64 0, i64 0), i64 21, i1 false) #16
  %303 = getelementptr inbounds i8, i8* %297, i64 21
  store i8 0, i8* %303, align 1
  %304 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 26, i32 3
  %305 = load i8, i8* %304, align 1, !range !2
  %306 = icmp eq i8 %305, 0
  br i1 %306, label %309, label %307

307:                                              ; preds = %268
  %308 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %15, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i64 0, i64 0)) #16
  br label %309

309:                                              ; preds = %268, %307
  %310 = load %"class.net::SSLClientContext"*, %"class.net::SSLClientContext"** %81, align 8
  %311 = getelementptr inbounds %"class.net::SSLClientContext", %"class.net::SSLClientContext"* %310, i64 0, i32 2, i32 6
  %312 = load i8, i8* %311, align 1, !range !2
  %313 = icmp eq i8 %312, 0
  br i1 %313, label %318, label %314

314:                                              ; preds = %309
  %315 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 26, i32 4
  %316 = load i8, i8* %315, align 2, !range !2
  %317 = icmp eq i8 %316, 0
  br i1 %317, label %321, label %318

318:                                              ; preds = %314, %309
  %319 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %15, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11, i64 0, i64 0)) #16
  %320 = load %"class.net::SSLClientContext"*, %"class.net::SSLClientContext"** %81, align 8
  br label %321

321:                                              ; preds = %314, %318
  %322 = phi %"class.net::SSLClientContext"* [ %310, %314 ], [ %320, %318 ]
  %323 = getelementptr inbounds %"class.net::SSLClientContext", %"class.net::SSLClientContext"* %322, i64 0, i32 2, i32 4, i32 0, i32 0
  %324 = load i16*, i16** %323, align 8
  %325 = getelementptr inbounds %"class.net::SSLClientContext", %"class.net::SSLClientContext"* %322, i64 0, i32 2, i32 4, i32 0, i32 1
  %326 = load i16*, i16** %325, align 8
  %327 = icmp eq i16* %324, %326
  br i1 %327, label %328, label %336

328:                                              ; preds = %345, %321
  %329 = load %struct.ssl_st*, %struct.ssl_st** %37, align 8
  %330 = load i8, i8* %301, align 1
  %331 = icmp slt i8 %330, 0
  %332 = load i8*, i8** %298, align 8
  %333 = select i1 %331, i8* %332, i8* %297
  %334 = call i32 @SSL_set_strict_cipher_list(%struct.ssl_st* %329, i8* %333) #16
  %335 = icmp eq i32 %334, 0
  br i1 %335, label %348, label %364

336:                                              ; preds = %321, %345
  %337 = phi i16* [ %346, %345 ], [ %324, %321 ]
  %338 = load i16, i16* %337, align 2
  %339 = call %struct.ssl_cipher_st* @SSL_get_cipher_by_value(i16 zeroext %338) #16
  %340 = icmp eq %struct.ssl_cipher_st* %339, null
  br i1 %340, label %345, label %341

341:                                              ; preds = %336
  %342 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %15, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0)) #16
  %343 = call i8* @SSL_CIPHER_get_name(%struct.ssl_cipher_st* nonnull %339) #16
  %344 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %15, i8* %343) #16
  br label %345

345:                                              ; preds = %336, %341
  %346 = getelementptr inbounds i16, i16* %337, i64 1
  %347 = icmp eq i16* %346, %326
  br i1 %347, label %328, label %336

348:                                              ; preds = %328
  %349 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #16
  br i1 %349, label %350, label %439

350:                                              ; preds = %348
  %351 = bitcast %"class.logging::LogMessage"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %351) #16
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str, i64 0, i64 0), i32 873, i32 2) #16
  %352 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %16, i64 0, i32 2
  %353 = bitcast %"class.std::__1::basic_ostringstream"* %352 to %"class.std::__1::basic_ostream"*
  %354 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %353, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.13, i64 0, i64 0), i64 21) #16
  %355 = load i8, i8* %301, align 1
  %356 = icmp slt i8 %355, 0
  %357 = load i8*, i8** %298, align 8
  %358 = load i64, i64* %299, align 8
  %359 = zext i8 %355 to i64
  %360 = select i1 %356, i8* %357, i8* %297
  %361 = select i1 %356, i64 %358, i64 %359
  %362 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %354, i8* %360, i64 %361) #16
  %363 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %362, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14, i64 0, i64 0), i64 9) #16
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %16) #16
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %351) #16
  br label %439

364:                                              ; preds = %328
  %365 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 26, i32 4
  %366 = load i8, i8* %365, align 2, !range !2
  %367 = icmp eq i8 %366, 0
  br i1 %367, label %372, label %368

368:                                              ; preds = %364
  %369 = load %struct.ssl_st*, %struct.ssl_st** %37, align 8
  %370 = call i32 @SSL_set_verify_algorithm_prefs(%struct.ssl_st* %369, i16* getelementptr inbounds ([8 x i16], [8 x i16]* @_ZZN3net19SSLClientSocketImpl4InitEvE12kVerifyPrefs, i64 0, i64 0), i64 8) #16
  %371 = icmp eq i32 %370, 0
  br i1 %371, label %439, label %372

372:                                              ; preds = %368, %364
  %373 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 26, i32 10
  %374 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %373, i64 0, i32 0, i32 0
  %375 = load i32*, i32** %374, align 8
  %376 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 26, i32 10, i32 0, i32 1
  %377 = load i32*, i32** %376, align 8
  %378 = icmp eq i32* %375, %377
  br i1 %378, label %397, label %379

379:                                              ; preds = %372
  %380 = bitcast %"class.std::__1::vector.210"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %380) #16
  %381 = getelementptr inbounds %"class.std::__1::vector.210", %"class.std::__1::vector.210"* %17, i64 0, i32 0, i32 0
  %382 = getelementptr inbounds %"class.std::__1::vector.210", %"class.std::__1::vector.210"* %17, i64 0, i32 0, i32 1
  %383 = bitcast %"class.std::__1::vector.210"* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %383, i8 -86, i64 24, i1 false)
  call void @_ZN3net15SSLClientSocket19SerializeNextProtosERKNSt3__16vectorINS_9NextProtoENS1_9allocatorIS3_EEEE(%"class.std::__1::vector.210"* nonnull sret %17, %"class.std::__1::vector.201"* dereferenceable(24) %373) #16
  %384 = load %struct.ssl_st*, %struct.ssl_st** %37, align 8
  %385 = load i8*, i8** %381, align 8
  %386 = bitcast i8** %382 to i64*
  %387 = load i64, i64* %386, align 8
  %388 = ptrtoint i8* %385 to i64
  %389 = sub i64 %387, %388
  %390 = trunc i64 %389 to i32
  %391 = call i32 @SSL_set_alpn_protos(%struct.ssl_st* %384, i8* %385, i32 %390) #16
  %392 = load i8*, i8** %381, align 8
  %393 = icmp eq i8* %392, null
  br i1 %393, label %396, label %394

394:                                              ; preds = %379
  %395 = ptrtoint i8* %392 to i64
  store i64 %395, i64* %386, align 8
  call void @_ZdlPv(i8* nonnull %392) #17
  br label %396

396:                                              ; preds = %379, %394
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %380) #16
  br label %397

397:                                              ; preds = %396, %372
  %398 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 26, i32 14, i32 0, i32 0, i32 0, i32 0
  %399 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %398, align 8
  %400 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 26, i32 14, i32 0, i32 0, i32 0, i32 1
  %401 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %400, align 8
  %402 = icmp eq %"struct.std::__1::pair"* %399, %401
  br i1 %402, label %422, label %405

403:                                              ; preds = %405
  %404 = icmp eq %"struct.std::__1::pair"* %421, %401
  br i1 %404, label %422, label %405

405:                                              ; preds = %397, %403
  %406 = phi %"struct.std::__1::pair"* [ %421, %403 ], [ %399, %397 ]
  %407 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %406, i64 0, i32 0
  %408 = load i32, i32* %407, align 8
  %409 = call i8* @_ZN3net17NextProtoToStringENS_9NextProtoE(i32 %408) #16
  %410 = load %struct.ssl_st*, %struct.ssl_st** %37, align 8
  %411 = call i64 @strlen(i8* %409) #18
  %412 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %406, i64 0, i32 1, i32 0, i32 0
  %413 = load i8*, i8** %412, align 8
  %414 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %406, i64 0, i32 1, i32 0, i32 1
  %415 = bitcast i8** %414 to i64*
  %416 = load i64, i64* %415, align 8
  %417 = ptrtoint i8* %413 to i64
  %418 = sub i64 %416, %417
  %419 = call i32 @SSL_add_application_settings(%struct.ssl_st* %410, i8* %409, i64 %411, i8* %413, i64 %418) #16
  %420 = icmp eq i32 %419, 0
  %421 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %406, i64 1
  br i1 %420, label %439, label %403

422:                                              ; preds = %403, %397
  %423 = load %struct.ssl_st*, %struct.ssl_st** %37, align 8
  call void @SSL_enable_signed_cert_timestamps(%struct.ssl_st* %423) #16
  %424 = load %struct.ssl_st*, %struct.ssl_st** %37, align 8
  call void @SSL_enable_ocsp_stapling(%struct.ssl_st* %424) #16
  %425 = load %struct.ssl_st*, %struct.ssl_st** %37, align 8
  call void @SSL_set_renegotiate_mode(%struct.ssl_st* %425, i32 4) #16
  %426 = load %struct.ssl_st*, %struct.ssl_st** %37, align 8
  call void @SSL_set_shed_handshake_config(%struct.ssl_st* %426, i32 1) #16
  %427 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 26, i32 16
  %428 = load i32, i32* %427, align 8
  %429 = icmp eq i32 %428, 2
  br i1 %429, label %430, label %432

430:                                              ; preds = %422
  %431 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 38
  store i8 1, i8* %431, align 2
  br label %439

432:                                              ; preds = %422
  %433 = load %"class.net::SSLClientContext"*, %"class.net::SSLClientContext"** %81, align 8
  %434 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 39
  %435 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 40
  %436 = call zeroext i1 @_ZN3net16SSLClientContext20GetClientCertificateERKNS_12HostPortPairEP13scoped_refptrINS_15X509CertificateEEPS4_INS_13SSLPrivateKeyEE(%"class.net::SSLClientContext"* %433, %"class.net::HostPortPair"* dereferenceable(32) %54, %class.scoped_refptr.9* %434, %class.scoped_refptr.232* %435) #16
  %437 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 38
  %438 = zext i1 %436 to i8
  store i8 %438, i8* %437, align 2
  br label %439

439:                                              ; preds = %405, %350, %348, %430, %432, %368
  %440 = phi i32 [ -9, %368 ], [ 0, %432 ], [ 0, %430 ], [ -9, %348 ], [ -9, %350 ], [ -9, %405 ]
  %441 = load i8, i8* %301, align 1
  %442 = icmp slt i8 %441, 0
  br i1 %442, label %443, label %445

443:                                              ; preds = %439
  %444 = load i8*, i8** %298, align 8
  call void @_ZdlPv(i8* %444) #17
  br label %445

445:                                              ; preds = %439, %443
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %297) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %285) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %273) #16
  br label %446

446:                                              ; preds = %445, %264, %238, %167, %76
  %447 = phi i32 [ -9, %76 ], [ -9, %167 ], [ %440, %445 ], [ -9, %264 ], [ -9, %238 ]
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %52) #16
  br label %448

448:                                              ; preds = %45, %42, %446
  %449 = phi i32 [ %447, %446 ], [ -9, %45 ], [ -9, %42 ]
  call void @_ZN6crypto20ClearOpenSSLERRStackERKN4base8LocationE(%"class.base::Location"* nonnull dereferenceable(32) %33) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %31) #16
  ret i32 %449
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19SSLClientSocketImpl18LogConnectEndEventEi(%"class.net::SSLClientSocketImpl"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.net::SSLInfo", align 8
  %4 = alloca %"class.base::Value", align 8
  %5 = alloca i8*, align 8
  %6 = alloca %"class.base::Value", align 8
  %7 = icmp eq i32 %1, 0
  %8 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 41
  br i1 %7, label %10, label %9

9:                                                ; preds = %2
  tail call void @_ZNK3net16NetLogWithSource24EndEventWithNetErrorCodeENS_15NetLogEventTypeEi(%"class.net::NetLogWithSource"* %8, i32 48, i32 %1) #16
  br label %58

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 41, i32 1
  %12 = load %"class.net::NetLog"*, %"class.net::NetLog"** %11, align 8
  %13 = getelementptr inbounds %"class.net::NetLogWithSource", %"class.net::NetLogWithSource"* %8, i64 0, i32 0
  %14 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %12, i64 0, i32 3
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %58, label %17, !prof !3

17:                                               ; preds = %10
  %18 = bitcast %"class.base::Value"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18) #16
  %19 = bitcast %"class.net::SSLInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %19) #16, !noalias !4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 128, i1 false) #16, !noalias !4
  call void @_ZN3net7SSLInfoC1Ev(%"class.net::SSLInfo"* nonnull %3) #16, !noalias !4
  %20 = bitcast %"class.net::SSLClientSocketImpl"* %0 to i1 (%"class.net::SSLClientSocketImpl"*, %"class.net::SSLInfo"*)***
  %21 = load i1 (%"class.net::SSLClientSocketImpl"*, %"class.net::SSLInfo"*)**, i1 (%"class.net::SSLClientSocketImpl"*, %"class.net::SSLInfo"*)*** %20, align 8, !noalias !4
  %22 = getelementptr inbounds i1 (%"class.net::SSLClientSocketImpl"*, %"class.net::SSLInfo"*)*, i1 (%"class.net::SSLClientSocketImpl"*, %"class.net::SSLInfo"*)** %21, i64 23
  %23 = load i1 (%"class.net::SSLClientSocketImpl"*, %"class.net::SSLInfo"*)*, i1 (%"class.net::SSLClientSocketImpl"*, %"class.net::SSLInfo"*)** %22, align 8, !noalias !4
  %24 = call zeroext i1 %23(%"class.net::SSLClientSocketImpl"* %0, %"class.net::SSLInfo"* nonnull %3) #16, !noalias !4
  br i1 %24, label %26, label %25

25:                                               ; preds = %17
  call void @_ZN4base5ValueC1Ev(%"class.base::Value"* nonnull %6) #16
  br label %57

26:                                               ; preds = %17
  %27 = bitcast %"class.base::Value"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %27) #16, !noalias !4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 32, i1 false) #16, !noalias !4
  call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* nonnull %4, i8 zeroext 6) #16
  %28 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #16, !noalias !4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8, !noalias !4
  %29 = getelementptr inbounds %"class.net::SSLInfo", %"class.net::SSLInfo"* %3, i64 0, i32 5
  %30 = load i32, i32* %29, align 8, !noalias !4
  %31 = lshr i32 %30, 20
  %32 = and i32 %31, 7
  call void @_ZN3net18SSLVersionToStringEPPKci(i8** nonnull %5, i32 %32) #16
  %33 = load i8*, i8** %5, align 8, !noalias !4
  %34 = call %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPKc(%"class.base::Value"* nonnull %4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.52, i64 0, i64 0), i64 7, i8* %33) #16
  %35 = getelementptr inbounds %"class.net::SSLInfo", %"class.net::SSLInfo"* %3, i64 0, i32 10
  %36 = load i32, i32* %35, align 8, !noalias !4
  %37 = icmp eq i32 %36, 1
  %38 = call %"class.base::Value"* @_ZN4base5Value10SetBoolKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.base::Value"* nonnull %4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.53, i64 0, i64 0), i64 10, i1 zeroext %37) #16
  %39 = load i32, i32* %29, align 8, !noalias !4
  %40 = and i32 %39, 65535
  %41 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* nonnull %4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.54, i64 0, i64 0), i64 12, i32 %40) #16
  %42 = getelementptr inbounds %"class.net::SSLInfo", %"class.net::SSLInfo"* %3, i64 0, i32 3
  %43 = load i16, i16* %42, align 4, !noalias !4
  %44 = zext i16 %43 to i32
  %45 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* nonnull %4, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.55, i64 0, i64 0), i64 18, i32 %44) #16
  %46 = getelementptr inbounds %"class.net::SSLInfo", %"class.net::SSLInfo"* %3, i64 0, i32 4
  %47 = load i16, i16* %46, align 2, !noalias !4
  %48 = zext i16 %47 to i32
  %49 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* nonnull %4, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.56, i64 0, i64 0), i64 24, i32 %48) #16
  %50 = bitcast %"class.net::SSLClientSocketImpl"* %0 to i32 (%"class.net::SSLClientSocketImpl"*)***
  %51 = load i32 (%"class.net::SSLClientSocketImpl"*)**, i32 (%"class.net::SSLClientSocketImpl"*)*** %50, align 8, !noalias !9
  %52 = getelementptr inbounds i32 (%"class.net::SSLClientSocketImpl"*)*, i32 (%"class.net::SSLClientSocketImpl"*)** %51, i64 21
  %53 = load i32 (%"class.net::SSLClientSocketImpl"*)*, i32 (%"class.net::SSLClientSocketImpl"*)** %52, align 8
  %54 = call i32 %53(%"class.net::SSLClientSocketImpl"* %0) #16
  %55 = call i8* @_ZN3net17NextProtoToStringENS_9NextProtoE(i32 %54) #16
  %56 = call %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPKc(%"class.base::Value"* nonnull %4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.57, i64 0, i64 0), i64 10, i8* %55) #16
  call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* nonnull %6, %"class.base::Value"* nonnull dereferenceable(32) %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #16, !noalias !4
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %27) #16, !noalias !4
  br label %57

57:                                               ; preds = %26, %25
  call void @_ZN3net7SSLInfoD1Ev(%"class.net::SSLInfo"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %19) #16, !noalias !4
  call void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"* %12, i32 48, %"struct.net::NetLogSource"* dereferenceable(16) %13, i32 2, %"class.base::Value"* nonnull dereferenceable(32) %6) #16
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #16
  br label %58

58:                                               ; preds = %57, %10, %9
  ret void
}

declare void @SSL_set_connect_state(%struct.ssl_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net19SSLClientSocketImpl15DoHandshakeLoopEi(%"class.net::SSLClientSocketImpl"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::TimeTicks", align 8
  %4 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 193, i32 0), align 16
  %5 = and i8 %4, 25
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %13, label %7, !prof !3

7:                                                ; preds = %2
  %8 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #16
  %9 = bitcast %"class.base::TimeTicks"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #16
  %10 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %11 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #16
  store i64 %11, i64* %10, align 8
  %12 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 193, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.32, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %8, %"class.base::TimeTicks"* nonnull dereferenceable(8) %3, %"class.base::trace_event::TraceArguments"* null, i32 0) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #16
  br label %13

13:                                               ; preds = %2, %7
  %14 = phi i64 [ -6148914691236517206, %2 ], [ %12, %7 ]
  %15 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %2 ], [ getelementptr inbounds ([37 x i8], [37 x i8]* @.str.32, i64 0, i64 0), %7 ]
  %16 = phi i8* [ null, %2 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 193, i32 0), %7 ]
  %17 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 27
  %18 = load i32, i32* %17, align 8
  br label %19

19:                                               ; preds = %29, %13
  %20 = phi i32 [ %18, %13 ], [ %30, %29 ]
  %21 = phi i32 [ %1, %13 ], [ %27, %29 ]
  store i32 0, i32* %17, align 8
  switch i32 %20, label %32 [
    i32 1, label %22
    i32 2, label %24
  ]

22:                                               ; preds = %19
  %23 = call i32 @_ZN3net19SSLClientSocketImpl11DoHandshakeEv(%"class.net::SSLClientSocketImpl"* %0)
  br label %26

24:                                               ; preds = %19
  %25 = call i32 @_ZN3net19SSLClientSocketImpl19DoHandshakeCompleteEi(%"class.net::SSLClientSocketImpl"* %0, i32 %21)
  br label %26

26:                                               ; preds = %24, %22
  %27 = phi i32 [ %25, %24 ], [ %23, %22 ]
  %28 = icmp eq i32 %27, -1
  br i1 %28, label %32, label %29

29:                                               ; preds = %26
  %30 = load i32, i32* %17, align 8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %19

32:                                               ; preds = %19, %29, %26
  %33 = phi i32 [ %27, %29 ], [ -1, %26 ], [ -9, %19 ]
  %34 = icmp eq i8* %16, null
  br i1 %34, label %39, label %35

35:                                               ; preds = %32
  %36 = load i8, i8* %16, align 1
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %39, label %38

38:                                               ; preds = %35
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %16, i8* %15, i64 %14) #16
  br label %39

39:                                               ; preds = %32, %35, %38
  ret i32 %33
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19SSLClientSocketImpl10DisconnectEv(%"class.net::SSLClientSocketImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 30
  store i8 1, i8* %2, align 2
  %3 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 19, i32 0, i32 0, i32 0
  %4 = load %"class.net::CertVerifier::Request"*, %"class.net::CertVerifier::Request"** %3, align 8
  store %"class.net::CertVerifier::Request"* null, %"class.net::CertVerifier::Request"** %3, align 8
  %5 = icmp eq %"class.net::CertVerifier::Request"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.net::CertVerifier::Request"* %4 to void (%"class.net::CertVerifier::Request"*)***
  %8 = load void (%"class.net::CertVerifier::Request"*)**, void (%"class.net::CertVerifier::Request"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.net::CertVerifier::Request"*)*, void (%"class.net::CertVerifier::Request"*)** %8, i64 1
  %10 = load void (%"class.net::CertVerifier::Request"*)*, void (%"class.net::CertVerifier::Request"*)** %9, align 8
  tail call void %10(%"class.net::CertVerifier::Request"* nonnull %4) #16
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 42, i32 0, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"* %12) #16
  %13 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 24, i32 0, i32 0, i32 0
  %14 = load %"class.net::SocketBIOAdapter"*, %"class.net::SocketBIOAdapter"** %13, align 8
  store %"class.net::SocketBIOAdapter"* null, %"class.net::SocketBIOAdapter"** %13, align 8
  %15 = icmp eq %"class.net::SocketBIOAdapter"* %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %11
  tail call void @_ZN3net16SocketBIOAdapterD1Ev(%"class.net::SocketBIOAdapter"* nonnull %14) #16
  %17 = bitcast %"class.net::SocketBIOAdapter"* %14 to i8*
  tail call void @_ZdlPv(i8* %17) #17
  br label %18

18:                                               ; preds = %11, %16
  %19 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %19) #16
  %20 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %20) #16
  %21 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 4, i32 0
  tail call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %21) #16
  %22 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 5
  %23 = bitcast %class.scoped_refptr.7* %22 to i64*
  %24 = getelementptr inbounds %class.scoped_refptr.7, %class.scoped_refptr.7* %22, i64 0, i32 0
  %25 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %24, align 8
  store i64 0, i64* %23, align 8
  %26 = icmp eq %"class.net::IOBuffer"* %25, null
  br i1 %26, label %39, label %27

27:                                               ; preds = %18
  %28 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %25, i64 0, i32 1
  %29 = getelementptr inbounds %"class.base::RefCountedThreadSafe.8", %"class.base::RefCountedThreadSafe.8"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw sub i32* %29, i32 1 acq_rel
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %39

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.base::RefCountedThreadSafe.8", %"class.base::RefCountedThreadSafe.8"* %28, i64 -2
  %34 = bitcast %"class.base::RefCountedThreadSafe.8"* %33 to %"class.net::IOBuffer"*
  %35 = bitcast %"class.base::RefCountedThreadSafe.8"* %33 to void (%"class.net::IOBuffer"*)***
  %36 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %36, i64 1
  %38 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %37, align 8
  tail call void %38(%"class.net::IOBuffer"* nonnull %34) #16
  br label %39

39:                                               ; preds = %18, %27, %32
  %40 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 6
  store i32 0, i32* %40, align 8
  %41 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 7
  %42 = bitcast %class.scoped_refptr.7* %41 to i64*
  %43 = getelementptr inbounds %class.scoped_refptr.7, %class.scoped_refptr.7* %41, i64 0, i32 0
  %44 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %43, align 8
  store i64 0, i64* %42, align 8
  %45 = icmp eq %"class.net::IOBuffer"* %44, null
  br i1 %45, label %58, label %46

46:                                               ; preds = %39
  %47 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %44, i64 0, i32 1
  %48 = getelementptr inbounds %"class.base::RefCountedThreadSafe.8", %"class.base::RefCountedThreadSafe.8"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = atomicrmw sub i32* %48, i32 1 acq_rel
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %51, label %58

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.base::RefCountedThreadSafe.8", %"class.base::RefCountedThreadSafe.8"* %47, i64 -2
  %53 = bitcast %"class.base::RefCountedThreadSafe.8"* %52 to %"class.net::IOBuffer"*
  %54 = bitcast %"class.base::RefCountedThreadSafe.8"* %52 to void (%"class.net::IOBuffer"*)***
  %55 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %55, i64 1
  %57 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %56, align 8
  tail call void %57(%"class.net::IOBuffer"* nonnull %53) #16
  br label %58

58:                                               ; preds = %39, %46, %51
  %59 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 8
  store i32 0, i32* %59, align 8
  %60 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 23, i32 0, i32 0, i32 0
  %61 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %60, align 8
  %62 = bitcast %"class.net::StreamSocket"* %61 to void (%"class.net::StreamSocket"*)***
  %63 = load void (%"class.net::StreamSocket"*)**, void (%"class.net::StreamSocket"*)*** %62, align 8
  %64 = getelementptr inbounds void (%"class.net::StreamSocket"*)*, void (%"class.net::StreamSocket"*)** %63, i64 13
  %65 = load void (%"class.net::StreamSocket"*)*, void (%"class.net::StreamSocket"*)** %64, align 8
  tail call void %65(%"class.net::StreamSocket"* %61) #16
  ret void
}

declare void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net19SSLClientSocketImpl16ConfirmHandshakeEN4base12OnceCallbackIFviEEE(%"class.net::SSLClientSocketImpl"*, %"class.base::OnceCallback"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 16
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %2
  %9 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str, i64 0, i64 0), i32 484, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i64 0, i64 0)) #16
  %10 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #16
  br label %11

11:                                               ; preds = %2, %8
  %12 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 28
  %13 = load i8, i8* %12, align 4, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str, i64 0, i64 0), i32 485, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0)) #16
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #16
  br label %18

18:                                               ; preds = %11, %15
  %19 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 22, i32 0, i32 0, i32 0
  %20 = load %struct.ssl_st*, %struct.ssl_st** %19, align 8
  %21 = call i32 @SSL_in_early_data(%struct.ssl_st* %20) #16
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %36, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 41
  call void @_ZNK3net16NetLogWithSource10BeginEventENS_15NetLogEventTypeE(%"class.net::NetLogWithSource"* %24, i32 59) #16
  %25 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 27
  store i32 1, i32* %25, align 8
  store i8 1, i8* %12, align 4
  %26 = call i32 @_ZN3net19SSLClientSocketImpl15DoHandshakeLoopEi(%"class.net::SSLClientSocketImpl"* %0, i32 0)
  %27 = icmp eq i32 %26, -1
  br i1 %27, label %28, label %32

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 2, i32 0
  %30 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0
  %31 = call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %29, %"class.base::internal::CallbackBase"* dereferenceable(8) %30) #16
  br label %33

32:                                               ; preds = %23
  call void @_ZNK3net16NetLogWithSource8EndEventENS_15NetLogEventTypeE(%"class.net::NetLogWithSource"* %24, i32 59) #16
  store i8 0, i8* %12, align 4
  br label %33

33:                                               ; preds = %32, %28
  %34 = icmp slt i32 %26, 0
  %35 = select i1 %34, i32 %26, i32 0
  br label %36

36:                                               ; preds = %18, %33
  %37 = phi i32 [ %35, %33 ], [ 0, %18 ]
  ret i32 %37
}

declare i32 @SSL_in_early_data(%struct.ssl_st*) local_unnamed_addr #1

declare void @_ZNK3net16NetLogWithSource8EndEventENS_15NetLogEventTypeE(%"class.net::NetLogWithSource"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net19SSLClientSocketImpl11IsConnectedEv(%"class.net::SSLClientSocketImpl"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 16
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %25, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 30
  %7 = load i8, i8* %6, align 2, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %25

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 5, i32 0
  %11 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %10, align 8
  %12 = icmp eq %"class.net::IOBuffer"* %11, null
  br i1 %12, label %13, label %25

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 7, i32 0
  %15 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %14, align 8
  %16 = icmp eq %"class.net::IOBuffer"* %15, null
  br i1 %16, label %17, label %25

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 23, i32 0, i32 0, i32 0
  %19 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %18, align 8
  %20 = bitcast %"class.net::StreamSocket"* %19 to i1 (%"class.net::StreamSocket"*)***
  %21 = load i1 (%"class.net::StreamSocket"*)**, i1 (%"class.net::StreamSocket"*)*** %20, align 8
  %22 = getelementptr inbounds i1 (%"class.net::StreamSocket"*)*, i1 (%"class.net::StreamSocket"*)** %21, i64 14
  %23 = load i1 (%"class.net::StreamSocket"*)*, i1 (%"class.net::StreamSocket"*)** %22, align 8
  %24 = tail call zeroext i1 %23(%"class.net::StreamSocket"* %19) #16
  br label %25

25:                                               ; preds = %9, %13, %1, %5, %17
  %26 = phi i1 [ %24, %17 ], [ false, %5 ], [ false, %1 ], [ true, %13 ], [ true, %9 ]
  ret i1 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net19SSLClientSocketImpl18IsConnectedAndIdleEv(%"class.net::SSLClientSocketImpl"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 16
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %29, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 30
  %7 = load i8, i8* %6, align 2, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %29

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 5, i32 0
  %11 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %10, align 8
  %12 = icmp eq %"class.net::IOBuffer"* %11, null
  br i1 %12, label %13, label %29

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 7, i32 0
  %15 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %14, align 8
  %16 = icmp eq %"class.net::IOBuffer"* %15, null
  br i1 %16, label %17, label %29

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 24, i32 0, i32 0, i32 0
  %19 = load %"class.net::SocketBIOAdapter"*, %"class.net::SocketBIOAdapter"** %18, align 8
  %20 = tail call zeroext i1 @_ZN3net16SocketBIOAdapter18HasPendingReadDataEv(%"class.net::SocketBIOAdapter"* %19) #16
  br i1 %20, label %29, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 23, i32 0, i32 0, i32 0
  %23 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %22, align 8
  %24 = bitcast %"class.net::StreamSocket"* %23 to i1 (%"class.net::StreamSocket"*)***
  %25 = load i1 (%"class.net::StreamSocket"*)**, i1 (%"class.net::StreamSocket"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.net::StreamSocket"*)*, i1 (%"class.net::StreamSocket"*)** %25, i64 15
  %27 = load i1 (%"class.net::StreamSocket"*)*, i1 (%"class.net::StreamSocket"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.net::StreamSocket"* %23) #16
  br label %29

29:                                               ; preds = %17, %9, %13, %1, %5, %21
  %30 = phi i1 [ %28, %21 ], [ false, %5 ], [ false, %1 ], [ false, %13 ], [ false, %9 ], [ false, %17 ]
  ret i1 %30
}

declare zeroext i1 @_ZN3net16SocketBIOAdapter18HasPendingReadDataEv(%"class.net::SocketBIOAdapter"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK3net19SSLClientSocketImpl14GetPeerAddressEPNS_10IPEndPointE(%"class.net::SSLClientSocketImpl"* nocapture readonly, %"class.net::IPEndPoint"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 23, i32 0, i32 0, i32 0
  %4 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %3, align 8
  %5 = bitcast %"class.net::StreamSocket"* %4 to i32 (%"class.net::StreamSocket"*, %"class.net::IPEndPoint"*)***
  %6 = load i32 (%"class.net::StreamSocket"*, %"class.net::IPEndPoint"*)**, i32 (%"class.net::StreamSocket"*, %"class.net::IPEndPoint"*)*** %5, align 8
  %7 = getelementptr inbounds i32 (%"class.net::StreamSocket"*, %"class.net::IPEndPoint"*)*, i32 (%"class.net::StreamSocket"*, %"class.net::IPEndPoint"*)** %6, i64 16
  %8 = load i32 (%"class.net::StreamSocket"*, %"class.net::IPEndPoint"*)*, i32 (%"class.net::StreamSocket"*, %"class.net::IPEndPoint"*)** %7, align 8
  %9 = tail call i32 %8(%"class.net::StreamSocket"* %4, %"class.net::IPEndPoint"* %1) #16
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK3net19SSLClientSocketImpl15GetLocalAddressEPNS_10IPEndPointE(%"class.net::SSLClientSocketImpl"* nocapture readonly, %"class.net::IPEndPoint"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 23, i32 0, i32 0, i32 0
  %4 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %3, align 8
  %5 = bitcast %"class.net::StreamSocket"* %4 to i32 (%"class.net::StreamSocket"*, %"class.net::IPEndPoint"*)***
  %6 = load i32 (%"class.net::StreamSocket"*, %"class.net::IPEndPoint"*)**, i32 (%"class.net::StreamSocket"*, %"class.net::IPEndPoint"*)*** %5, align 8
  %7 = getelementptr inbounds i32 (%"class.net::StreamSocket"*, %"class.net::IPEndPoint"*)*, i32 (%"class.net::StreamSocket"*, %"class.net::IPEndPoint"*)** %6, i64 17
  %8 = load i32 (%"class.net::StreamSocket"*, %"class.net::IPEndPoint"*)*, i32 (%"class.net::StreamSocket"*, %"class.net::IPEndPoint"*)** %7, align 8
  %9 = tail call i32 %8(%"class.net::StreamSocket"* %4, %"class.net::IPEndPoint"* %1) #16
  ret i32 %9
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(24) %"class.net::NetLogWithSource"* @_ZNK3net19SSLClientSocketImpl6NetLogEv(%"class.net::SSLClientSocketImpl"* readnone) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 41
  ret %"class.net::NetLogWithSource"* %2
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3net19SSLClientSocketImpl11WasEverUsedEv(%"class.net::SSLClientSocketImpl"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 17
  %3 = load i8, i8* %2, align 1, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3net19SSLClientSocketImpl17WasAlpnNegotiatedEv(%"class.net::SSLClientSocketImpl"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 31
  %3 = load i32, i32* %2, align 8
  %4 = icmp ne i32 %3, 0
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK3net19SSLClientSocketImpl21GetNegotiatedProtocolEv(%"class.net::SSLClientSocketImpl"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 31
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net19SSLClientSocketImpl26GetPeerApplicationSettingsEv(%"class.absl::optional.260"* noalias nocapture sret, %"class.net::SSLClientSocketImpl"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %1, i64 0, i32 22, i32 0, i32 0, i32 0
  %6 = load %struct.ssl_st*, %struct.ssl_st** %5, align 8
  %7 = tail call i32 @SSL_has_application_settings(%struct.ssl_st* %6) #16
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %19, label %9

9:                                                ; preds = %2
  %10 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #16
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  %11 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #16
  store i64 -6148914691236517206, i64* %4, align 8
  %12 = load %struct.ssl_st*, %struct.ssl_st** %5, align 8
  call void @SSL_get0_peer_application_settings(%struct.ssl_st* %12, i8** nonnull %3, i64* nonnull %4) #16
  %13 = bitcast i8** %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = load i64, i64* %4, align 8
  %16 = getelementptr inbounds %"class.absl::optional.260", %"class.absl::optional.260"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %17 = bitcast i8** %16 to i64*
  store i64 %14, i64* %17, align 8
  %18 = getelementptr inbounds %"class.absl::optional.260", %"class.absl::optional.260"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  store i64 %15, i64* %18, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #16
  br label %19

19:                                               ; preds = %2, %9
  %20 = phi i8 [ 1, %9 ], [ 0, %2 ]
  %21 = getelementptr inbounds %"class.absl::optional.260", %"class.absl::optional.260"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 %20, i8* %21, align 8
  ret void
}

declare i32 @SSL_has_application_settings(%struct.ssl_st*) local_unnamed_addr #1

declare void @SSL_get0_peer_application_settings(%struct.ssl_st*, i8**, i64*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net19SSLClientSocketImpl10GetSSLInfoEPNS_7SSLInfoE(%"class.net::SSLClientSocketImpl"*, %"class.net::SSLInfo"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  tail call void @_ZN3net7SSLInfo5ResetEv(%"class.net::SSLInfo"* %1) #16
  %4 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 14, i32 0
  %5 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %4, align 8
  %6 = icmp eq %"class.net::X509Certificate"* %5, null
  br i1 %6, label %160, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 15, i32 2, i32 0
  %9 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %8, align 8
  %10 = icmp eq %"class.net::X509Certificate"* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw add i32* %12, i32 1 monotonic
  br label %14

14:                                               ; preds = %7, %11
  %15 = ptrtoint %"class.net::X509Certificate"* %9 to i64
  %16 = bitcast %"class.net::SSLInfo"* %1 to i64*
  %17 = getelementptr inbounds %"class.net::SSLInfo", %"class.net::SSLInfo"* %1, i64 0, i32 0, i32 0
  %18 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %17, align 8
  store i64 %15, i64* %16, align 8
  %19 = icmp eq %"class.net::X509Certificate"* %18, null
  br i1 %19, label %26, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw sub i32* %21, i32 1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %26

24:                                               ; preds = %20
  tail call void @_ZN3net15X509CertificateD1Ev(%"class.net::X509Certificate"* nonnull %18) #16
  %25 = bitcast %"class.net::X509Certificate"* %18 to i8*
  tail call void @_ZdlPv(i8* %25) #17
  br label %26

26:                                               ; preds = %14, %20, %24
  %27 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %4, align 8
  %28 = icmp eq %"class.net::X509Certificate"* %27, null
  br i1 %28, label %32, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw add i32* %30, i32 1 monotonic
  br label %32

32:                                               ; preds = %26, %29
  %33 = getelementptr inbounds %"class.net::SSLInfo", %"class.net::SSLInfo"* %1, i64 0, i32 1
  %34 = ptrtoint %"class.net::X509Certificate"* %27 to i64
  %35 = bitcast %class.scoped_refptr.9* %33 to i64*
  %36 = getelementptr inbounds %class.scoped_refptr.9, %class.scoped_refptr.9* %33, i64 0, i32 0
  %37 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %36, align 8
  store i64 %34, i64* %35, align 8
  %38 = icmp eq %"class.net::X509Certificate"* %37, null
  br i1 %38, label %45, label %39

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw sub i32* %40, i32 1 acq_rel
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %45

43:                                               ; preds = %39
  tail call void @_ZN3net15X509CertificateD1Ev(%"class.net::X509Certificate"* nonnull %37) #16
  %44 = bitcast %"class.net::X509Certificate"* %37 to i8*
  tail call void @_ZdlPv(i8* %44) #17
  br label %45

45:                                               ; preds = %32, %39, %43
  %46 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 15, i32 3
  %47 = load i32, i32* %46, align 8
  %48 = getelementptr inbounds %"class.net::SSLInfo", %"class.net::SSLInfo"* %1, i64 0, i32 2
  store i32 %47, i32* %48, align 8
  %49 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 15, i32 11
  %50 = load i8, i8* %49, align 8, !range !2
  %51 = getelementptr inbounds %"class.net::SSLInfo", %"class.net::SSLInfo"* %1, i64 0, i32 6
  store i8 %50, i8* %51, align 4
  %52 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 36
  %53 = load i8, i8* %52, align 8, !range !2
  %54 = getelementptr inbounds %"class.net::SSLInfo", %"class.net::SSLInfo"* %1, i64 0, i32 7
  store i8 %53, i8* %54, align 1
  %55 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 15, i32 10
  %56 = getelementptr inbounds %"class.net::SSLInfo", %"class.net::SSLInfo"* %1, i64 0, i32 12
  %57 = icmp eq %"class.std::__1::vector.29"* %56, %55
  br i1 %57, label %63, label %58

58:                                               ; preds = %45
  %59 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %55, i64 0, i32 0, i32 0
  %60 = load %"class.net::HashValue"*, %"class.net::HashValue"** %59, align 8
  %61 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 15, i32 10, i32 0, i32 1
  %62 = load %"class.net::HashValue"*, %"class.net::HashValue"** %61, align 8
  tail call void @_ZNSt3__16vectorIN3net9HashValueENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.29"* %56, %"class.net::HashValue"* %60, %"class.net::HashValue"* %62) #16
  br label %63

63:                                               ; preds = %45, %58
  %64 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 38
  %65 = load i8, i8* %64, align 2, !range !2
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %72, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 39, i32 0
  %69 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %68, align 8
  %70 = icmp ne %"class.net::X509Certificate"* %69, null
  %71 = zext i1 %70 to i8
  br label %72

72:                                               ; preds = %63, %67
  %73 = phi i8 [ 0, %63 ], [ %71, %67 ]
  %74 = getelementptr inbounds %"class.net::SSLInfo", %"class.net::SSLInfo"* %1, i64 0, i32 8
  store i8 %73, i8* %74, align 2
  %75 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 35
  %76 = getelementptr inbounds %"class.net::SSLInfo", %"class.net::SSLInfo"* %1, i64 0, i32 13
  %77 = icmp eq %"class.std::__1::basic_string"* %76, %75
  br i1 %77, label %107, label %78

78:                                               ; preds = %72
  %79 = bitcast %"class.std::__1::basic_string"* %76 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  %83 = bitcast %"class.std::__1::basic_string"* %75 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %84 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %83, i64 0, i32 1, i32 0
  %85 = load i8, i8* %84, align 1
  %86 = icmp slt i8 %85, 0
  br i1 %82, label %97, label %87

87:                                               ; preds = %78
  br i1 %86, label %91, label %88

88:                                               ; preds = %87
  %89 = bitcast %"class.std::__1::basic_string"* %76 to i8*
  %90 = bitcast %"class.std::__1::basic_string"* %75 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 8 %90, i64 24, i1 false) #16
  br label %107

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %75, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load i8*, i8** %92, align 8
  %94 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 35, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %95 = load i64, i64* %94, align 8
  %96 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %76, i8* %93, i64 %95) #16
  br label %107

97:                                               ; preds = %78
  %98 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %75, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load i8*, i8** %98, align 8
  %100 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 35, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %101 = load i64, i64* %100, align 8
  %102 = bitcast %"class.std::__1::basic_string"* %75 to i8*
  %103 = zext i8 %85 to i64
  %104 = select i1 %86, i8* %99, i8* %102
  %105 = select i1 %86, i64 %101, i64 %103
  %106 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %76, i8* %104, i64 %105) #16
  br label %107

107:                                              ; preds = %72, %88, %91, %97
  %108 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 15, i32 14
  %109 = getelementptr inbounds %"class.net::SSLInfo", %"class.net::SSLInfo"* %1, i64 0, i32 16
  %110 = bitcast %"struct.net::OCSPVerifyResult"* %108 to i64*
  %111 = bitcast %"struct.net::OCSPVerifyResult"* %109 to i64*
  %112 = load i64, i64* %110, align 4
  store i64 %112, i64* %111, align 4
  %113 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 37
  %114 = load i8, i8* %113, align 1, !range !2
  %115 = getelementptr inbounds %"class.net::SSLInfo", %"class.net::SSLInfo"* %1, i64 0, i32 17
  store i8 %114, i8* %115, align 4
  %116 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 15, i32 16
  %117 = getelementptr inbounds %"class.net::SSLInfo", %"class.net::SSLInfo"* %1, i64 0, i32 14
  %118 = icmp eq %"class.std::__1::vector.37"* %117, %116
  br i1 %118, label %124, label %119

119:                                              ; preds = %107
  %120 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %116, i64 0, i32 0, i32 0
  %121 = load %"struct.net::SignedCertificateTimestampAndStatus"*, %"struct.net::SignedCertificateTimestampAndStatus"** %120, align 8
  %122 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 15, i32 16, i32 0, i32 1
  %123 = load %"struct.net::SignedCertificateTimestampAndStatus"*, %"struct.net::SignedCertificateTimestampAndStatus"** %122, align 8
  tail call void @_ZNSt3__16vectorIN3net35SignedCertificateTimestampAndStatusENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.37"* %117, %"struct.net::SignedCertificateTimestampAndStatus"* %121, %"struct.net::SignedCertificateTimestampAndStatus"* %123) #16
  br label %124

124:                                              ; preds = %107, %119
  %125 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 15, i32 17
  %126 = load i32, i32* %125, align 8
  %127 = getelementptr inbounds %"class.net::SSLInfo", %"class.net::SSLInfo"* %1, i64 0, i32 15
  store i32 %126, i32* %127, align 8
  %128 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 22, i32 0, i32 0, i32 0
  %129 = load %struct.ssl_st*, %struct.ssl_st** %128, align 8
  %130 = tail call %struct.ssl_cipher_st* @SSL_get_current_cipher(%struct.ssl_st* %129) #16
  %131 = icmp eq %struct.ssl_cipher_st* %130, null
  br i1 %131, label %132, label %135

132:                                              ; preds = %124
  %133 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %133) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str, i64 0, i64 0), i32 594, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i64 0, i64 0)) #16
  %134 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %133) #16
  br label %135

135:                                              ; preds = %124, %132
  %136 = load %struct.ssl_st*, %struct.ssl_st** %128, align 8
  %137 = call zeroext i16 @SSL_get_curve_id(%struct.ssl_st* %136) #16
  %138 = getelementptr inbounds %"class.net::SSLInfo", %"class.net::SSLInfo"* %1, i64 0, i32 3
  store i16 %137, i16* %138, align 4
  %139 = load %struct.ssl_st*, %struct.ssl_st** %128, align 8
  %140 = call zeroext i16 @SSL_get_peer_signature_algorithm(%struct.ssl_st* %139) #16
  %141 = getelementptr inbounds %"class.net::SSLInfo", %"class.net::SSLInfo"* %1, i64 0, i32 4
  store i16 %140, i16* %141, align 2
  %142 = call i32 @SSL_CIPHER_get_id(%struct.ssl_cipher_st* %130) #16
  %143 = getelementptr inbounds %"class.net::SSLInfo", %"class.net::SSLInfo"* %1, i64 0, i32 5
  %144 = load i32, i32* %143, align 4
  %145 = and i32 %144, -65536
  %146 = and i32 %142, 65535
  %147 = or i32 %145, %146
  store i32 %147, i32* %143, align 4
  %148 = load %struct.ssl_st*, %struct.ssl_st** %128, align 8
  %149 = call i32 @_ZN3net16GetNetSSLVersionEP6ssl_st(%struct.ssl_st* %148) #16
  %150 = load i32, i32* %143, align 4
  %151 = and i32 %150, -7340033
  %152 = shl i32 %149, 20
  %153 = and i32 %152, 7340032
  %154 = or i32 %151, %153
  store i32 %154, i32* %143, align 4
  %155 = load %struct.ssl_st*, %struct.ssl_st** %128, align 8
  %156 = call i32 @SSL_session_reused(%struct.ssl_st* %155) #16
  %157 = icmp eq i32 %156, 0
  %158 = select i1 %157, i32 2, i32 1
  %159 = getelementptr inbounds %"class.net::SSLInfo", %"class.net::SSLInfo"* %1, i64 0, i32 10
  store i32 %158, i32* %159, align 8
  br label %160

160:                                              ; preds = %2, %135
  %161 = phi i1 [ true, %135 ], [ false, %2 ]
  ret i1 %161
}

declare void @_ZN3net7SSLInfo5ResetEv(%"class.net::SSLInfo"*) local_unnamed_addr #1

declare %struct.ssl_cipher_st* @SSL_get_current_cipher(%struct.ssl_st*) local_unnamed_addr #1

declare zeroext i16 @SSL_get_curve_id(%struct.ssl_st*) local_unnamed_addr #1

declare zeroext i16 @SSL_get_peer_signature_algorithm(%struct.ssl_st*) local_unnamed_addr #1

declare i32 @SSL_CIPHER_get_id(%struct.ssl_cipher_st*) local_unnamed_addr #1

declare i32 @_ZN3net16GetNetSSLVersionEP6ssl_st(%struct.ssl_st*) local_unnamed_addr #1

declare i32 @SSL_session_reused(%struct.ssl_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net19SSLClientSocketImpl21GetConnectionAttemptsEPNSt3__16vectorINS_17ConnectionAttemptENS1_9allocatorIS3_EEEE(%"class.net::SSLClientSocketImpl"* nocapture readnone, %"class.std::__1::vector.265"* nocapture) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.265", %"class.std::__1::vector.265"* %1, i64 0, i32 0, i32 0
  %4 = load %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.265", %"class.std::__1::vector.265"* %1, i64 0, i32 0, i32 1
  %6 = load %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"** %5, align 8
  %7 = icmp eq %"struct.net::ConnectionAttempt"* %6, %4
  br i1 %7, label %13, label %8

8:                                                ; preds = %2, %8
  %9 = phi %"struct.net::ConnectionAttempt"* [ %10, %8 ], [ %6, %2 ]
  %10 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %9, i64 -1
  %11 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %10, i64 0, i32 0
  tail call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* %11) #16
  %12 = icmp eq %"struct.net::ConnectionAttempt"* %10, %4
  br i1 %12, label %13, label %8

13:                                               ; preds = %8, %2
  store %"struct.net::ConnectionAttempt"* %4, %"struct.net::ConnectionAttempt"** %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK3net19SSLClientSocketImpl21GetTotalReceivedBytesEv(%"class.net::SSLClientSocketImpl"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 23, i32 0, i32 0, i32 0
  %3 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %2, align 8
  %4 = bitcast %"class.net::StreamSocket"* %3 to i64 (%"class.net::StreamSocket"*)***
  %5 = load i64 (%"class.net::StreamSocket"*)**, i64 (%"class.net::StreamSocket"*)*** %4, align 8
  %6 = getelementptr inbounds i64 (%"class.net::StreamSocket"*)*, i64 (%"class.net::StreamSocket"*)** %5, i64 28
  %7 = load i64 (%"class.net::StreamSocket"*)*, i64 (%"class.net::StreamSocket"*)** %6, align 8
  %8 = tail call i64 %7(%"class.net::StreamSocket"* %3) #16
  ret i64 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net19SSLClientSocketImpl15DumpMemoryStatsEPNS_12StreamSocket17SocketMemoryStatsE(%"class.net::SSLClientSocketImpl"* nocapture readonly, %"struct.net::StreamSocket::SocketMemoryStats"* nocapture) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 24, i32 0, i32 0, i32 0
  %4 = load %"class.net::SocketBIOAdapter"*, %"class.net::SocketBIOAdapter"** %3, align 8
  %5 = icmp eq %"class.net::SocketBIOAdapter"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = tail call i64 @_ZNK3net16SocketBIOAdapter17GetAllocationSizeEv(%"class.net::SocketBIOAdapter"* nonnull %4) #16
  %8 = getelementptr inbounds %"struct.net::StreamSocket::SocketMemoryStats", %"struct.net::StreamSocket::SocketMemoryStats"* %1, i64 0, i32 1
  store i64 %7, i64* %8, align 8
  br label %9

9:                                                ; preds = %2, %6
  %10 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 22, i32 0, i32 0, i32 0
  %11 = load %struct.ssl_st*, %struct.ssl_st** %10, align 8
  %12 = tail call %struct.stack_st_CRYPTO_BUFFER* @SSL_get0_peer_certificates(%struct.ssl_st* %11) #16
  %13 = icmp eq %struct.stack_st_CRYPTO_BUFFER* %12, null
  br i1 %13, label %32, label %14

14:                                               ; preds = %9
  %15 = bitcast %struct.stack_st_CRYPTO_BUFFER* %12 to %struct.stack_st*
  %16 = tail call i64 @sk_num(%struct.stack_st* nonnull %15) #16
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"struct.net::StreamSocket::SocketMemoryStats", %"struct.net::StreamSocket::SocketMemoryStats"* %1, i64 0, i32 3
  br label %23

20:                                               ; preds = %23, %14
  %21 = tail call i64 @sk_num(%struct.stack_st* nonnull %15) #16
  %22 = getelementptr inbounds %"struct.net::StreamSocket::SocketMemoryStats", %"struct.net::StreamSocket::SocketMemoryStats"* %1, i64 0, i32 2
  store i64 %21, i64* %22, align 8
  br label %32

23:                                               ; preds = %18, %23
  %24 = phi i64 [ 0, %18 ], [ %30, %23 ]
  %25 = tail call i8* @sk_value(%struct.stack_st* nonnull %15, i64 %24) #16
  %26 = bitcast i8* %25 to %struct.crypto_buffer_st*
  %27 = tail call i64 @CRYPTO_BUFFER_len(%struct.crypto_buffer_st* %26) #16
  %28 = load i64, i64* %19, align 8
  %29 = add i64 %28, %27
  store i64 %29, i64* %19, align 8
  %30 = add nuw i64 %24, 1
  %31 = icmp eq i64 %30, %16
  br i1 %31, label %20, label %23

32:                                               ; preds = %9, %20
  %33 = getelementptr inbounds %"struct.net::StreamSocket::SocketMemoryStats", %"struct.net::StreamSocket::SocketMemoryStats"* %1, i64 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %"struct.net::StreamSocket::SocketMemoryStats", %"struct.net::StreamSocket::SocketMemoryStats"* %1, i64 0, i32 3
  %36 = load i64, i64* %35, align 8
  %37 = add i64 %36, %34
  %38 = getelementptr inbounds %"struct.net::StreamSocket::SocketMemoryStats", %"struct.net::StreamSocket::SocketMemoryStats"* %1, i64 0, i32 0
  store i64 %37, i64* %38, align 8
  ret void
}

declare i64 @_ZNK3net16SocketBIOAdapter17GetAllocationSizeEv(%"class.net::SocketBIOAdapter"*) local_unnamed_addr #1

declare %struct.stack_st_CRYPTO_BUFFER* @SSL_get0_peer_certificates(%struct.ssl_st*) local_unnamed_addr #1

declare i64 @CRYPTO_BUFFER_len(%struct.crypto_buffer_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net19SSLClientSocketImpl21GetSSLCertRequestInfoEPNS_18SSLCertRequestInfoE(%"class.net::SSLClientSocketImpl"*, %"class.net::SSLCertRequestInfo"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca i8*, align 8
  %5 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 22, i32 0, i32 0, i32 0
  %6 = load %struct.ssl_st*, %struct.ssl_st** %5, align 8
  %7 = icmp eq %struct.ssl_st* %6, null
  br i1 %7, label %201, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 25
  %10 = getelementptr inbounds %"class.net::SSLCertRequestInfo", %"class.net::SSLCertRequestInfo"* %1, i64 0, i32 2
  %11 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %10, i64 0, i32 0
  %12 = icmp eq %"class.net::HostPortPair"* %10, %9
  br i1 %12, label %42, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.net::HostPortPair"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  %18 = bitcast %"class.net::HostPortPair"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %17, label %32, label %22

22:                                               ; preds = %13
  br i1 %21, label %26, label %23

23:                                               ; preds = %22
  %24 = bitcast %"class.net::HostPortPair"* %10 to i8*
  %25 = bitcast %"class.net::HostPortPair"* %9 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 24, i1 false) #16
  br label %42

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 25, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %11, i8* %28, i64 %30) #16
  br label %42

32:                                               ; preds = %13
  %33 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 25, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.net::HostPortPair"* %9 to i8*
  %38 = zext i8 %20 to i64
  %39 = select i1 %21, i8* %34, i8* %37
  %40 = select i1 %21, i64 %36, i64 %38
  %41 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %11, i8* %39, i64 %40) #16
  br label %42

42:                                               ; preds = %8, %23, %26, %32
  %43 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 25, i32 1
  %44 = load i16, i16* %43, align 8
  %45 = getelementptr inbounds %"class.net::SSLCertRequestInfo", %"class.net::SSLCertRequestInfo"* %1, i64 0, i32 2, i32 1
  store i16 %44, i16* %45, align 8
  %46 = getelementptr inbounds %"class.net::SSLCertRequestInfo", %"class.net::SSLCertRequestInfo"* %1, i64 0, i32 4
  %47 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %46, i64 0, i32 0, i32 0
  %48 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %47, align 8
  %49 = getelementptr inbounds %"class.net::SSLCertRequestInfo", %"class.net::SSLCertRequestInfo"* %1, i64 0, i32 4, i32 0, i32 1
  %50 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %49, align 8
  %51 = icmp eq %"class.std::__1::basic_string"* %50, %48
  br i1 %51, label %64, label %52

52:                                               ; preds = %42, %62
  %53 = phi %"class.std::__1::basic_string"* [ %54, %62 ], [ %50, %42 ]
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %53, i64 -1
  %55 = bitcast %"class.std::__1::basic_string"* %54 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  br i1 %58, label %59, label %62

59:                                               ; preds = %52
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  tail call void @_ZdlPv(i8* %61) #17
  br label %62

62:                                               ; preds = %59, %52
  %63 = icmp eq %"class.std::__1::basic_string"* %54, %48
  br i1 %63, label %64, label %52

64:                                               ; preds = %62, %42
  store %"class.std::__1::basic_string"* %48, %"class.std::__1::basic_string"** %49, align 8
  %65 = load %struct.ssl_st*, %struct.ssl_st** %5, align 8
  %66 = tail call %struct.stack_st_CRYPTO_BUFFER* @SSL_get0_server_requested_CAs(%struct.ssl_st* %65) #16
  %67 = bitcast %struct.stack_st_CRYPTO_BUFFER* %66 to %struct.stack_st*
  %68 = tail call i64 @sk_num(%struct.stack_st* %67) #16
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %79, label %70

70:                                               ; preds = %64
  %71 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %75 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %75, i64 0, i32 1, i32 0
  %77 = getelementptr inbounds %"class.net::SSLCertRequestInfo", %"class.net::SSLCertRequestInfo"* %1, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %78 = bitcast %"class.std::__1::basic_string"** %49 to i64*
  br label %93

79:                                               ; preds = %129, %64
  %80 = getelementptr inbounds %"class.net::SSLCertRequestInfo", %"class.net::SSLCertRequestInfo"* %1, i64 0, i32 5
  %81 = bitcast %"class.std::__1::vector.273"* %80 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = getelementptr inbounds %"class.net::SSLCertRequestInfo", %"class.net::SSLCertRequestInfo"* %1, i64 0, i32 5, i32 0, i32 1
  %84 = bitcast i32** %83 to i64*
  store i64 %82, i64* %84, align 8
  %85 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %85) #16
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %86 = load %struct.ssl_st*, %struct.ssl_st** %5, align 8
  %87 = call i64 @SSL_get0_certificate_types(%struct.ssl_st* %86, i8** nonnull %4) #16
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %132, label %89

89:                                               ; preds = %79
  %90 = getelementptr inbounds %"class.net::SSLCertRequestInfo", %"class.net::SSLCertRequestInfo"* %1, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %91 = bitcast i32** %90 to i64*
  %92 = getelementptr inbounds %"class.std::__1::vector.273", %"class.std::__1::vector.273"* %80, i64 0, i32 0, i32 0
  br label %133

93:                                               ; preds = %70, %129
  %94 = phi i64 [ 0, %70 ], [ %130, %129 ]
  %95 = call i8* @sk_value(%struct.stack_st* %67, i64 %94) #16
  %96 = bitcast i8* %95 to %struct.crypto_buffer_st*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #16
  %97 = call i8* @CRYPTO_BUFFER_data(%struct.crypto_buffer_st* %96) #16
  %98 = call i64 @CRYPTO_BUFFER_len(%struct.crypto_buffer_st* %96) #16
  %99 = icmp ugt i64 %98, -17
  br i1 %99, label %100, label %102

100:                                              ; preds = %93
  %101 = bitcast %"class.std::__1::basic_string"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %101) #19
  unreachable

102:                                              ; preds = %93
  %103 = icmp ult i64 %98, 23
  br i1 %103, label %109, label %104

104:                                              ; preds = %102
  %105 = add nuw i64 %98, 16
  %106 = and i64 %105, -16
  %107 = call i8* @_Znwm(i64 %106) #17
  store i8* %107, i8** %72, align 8
  %108 = or i64 %106, -9223372036854775808
  store i64 %108, i64* %73, align 8
  store i64 %98, i64* %74, align 8
  br label %112

109:                                              ; preds = %102
  %110 = trunc i64 %98 to i8
  store i8 %110, i8* %76, align 1
  %111 = icmp eq i64 %98, 0
  br i1 %111, label %114, label %112

112:                                              ; preds = %109, %104
  %113 = phi i8* [ %107, %104 ], [ %71, %109 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %113, i8* align 1 %97, i64 %98, i1 false) #16
  br label %114

114:                                              ; preds = %109, %112
  %115 = phi i8* [ %71, %109 ], [ %113, %112 ]
  %116 = getelementptr inbounds i8, i8* %115, i64 %98
  store i8 0, i8* %116, align 1
  %117 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %49, align 8
  %118 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %77, align 8
  %119 = icmp ult %"class.std::__1::basic_string"* %117, %118
  br i1 %119, label %120, label %124

120:                                              ; preds = %114
  %121 = bitcast %"class.std::__1::basic_string"* %117 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* nonnull align 8 %71, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 24, i1 false) #16
  %122 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %117, i64 1
  %123 = ptrtoint %"class.std::__1::basic_string"* %122 to i64
  store i64 %123, i64* %78, align 8
  br label %129

124:                                              ; preds = %114
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"* %46, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #16
  %125 = load i8, i8* %76, align 1
  %126 = icmp slt i8 %125, 0
  br i1 %126, label %127, label %129

127:                                              ; preds = %124
  %128 = load i8*, i8** %72, align 8
  call void @_ZdlPv(i8* %128) #17
  br label %129

129:                                              ; preds = %120, %124, %127
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #16
  %130 = add nuw i64 %94, 1
  %131 = icmp eq i64 %130, %68
  br i1 %131, label %79, label %93

132:                                              ; preds = %198, %79
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %85) #16
  br label %201

133:                                              ; preds = %198, %89
  %134 = phi i64 [ 0, %89 ], [ %199, %198 ]
  %135 = load i8*, i8** %4, align 8
  %136 = getelementptr inbounds i8, i8* %135, i64 %134
  %137 = load i8, i8* %136, align 1
  %138 = zext i8 %137 to i32
  %139 = load i32*, i32** %83, align 8
  %140 = load i32*, i32** %90, align 8
  %141 = icmp ult i32* %139, %140
  %142 = ptrtoint i32* %140 to i64
  br i1 %141, label %143, label %146

143:                                              ; preds = %133
  store i32 %138, i32* %139, align 4
  %144 = getelementptr inbounds i32, i32* %139, i64 1
  %145 = ptrtoint i32* %144 to i64
  store i64 %145, i64* %84, align 8
  br label %198

146:                                              ; preds = %133
  %147 = ptrtoint i32* %139 to i64
  %148 = load i64, i64* %81, align 8
  %149 = sub i64 %147, %148
  %150 = ashr exact i64 %149, 2
  %151 = add nsw i64 %150, 1
  %152 = icmp ugt i64 %151, 4611686018427387903
  br i1 %152, label %153, label %155

153:                                              ; preds = %146
  %154 = bitcast %"class.std::__1::vector.273"* %80 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %154) #19
  unreachable

155:                                              ; preds = %146
  %156 = sub i64 %142, %148
  %157 = ashr exact i64 %156, 2
  %158 = icmp ult i64 %157, 2305843009213693951
  br i1 %158, label %159, label %167

159:                                              ; preds = %155
  %160 = ashr exact i64 %156, 1
  %161 = icmp ult i64 %160, %151
  %162 = select i1 %161, i64 %151, i64 %160
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %172, label %164

164:                                              ; preds = %159
  %165 = icmp ugt i64 %162, 4611686018427387903
  br i1 %165, label %166, label %167

166:                                              ; preds = %164
  call void @abort() #19
  unreachable

167:                                              ; preds = %164, %155
  %168 = phi i64 [ %162, %164 ], [ 4611686018427387903, %155 ]
  %169 = shl i64 %168, 2
  %170 = call i8* @_Znwm(i64 %169) #17
  %171 = bitcast i8* %170 to i32*
  br label %172

172:                                              ; preds = %167, %159
  %173 = phi i64 [ %168, %167 ], [ 0, %159 ]
  %174 = phi i32* [ %171, %167 ], [ null, %159 ]
  %175 = getelementptr inbounds i32, i32* %174, i64 %150
  %176 = getelementptr inbounds i32, i32* %174, i64 %173
  %177 = ptrtoint i32* %176 to i64
  store i32 %138, i32* %175, align 4
  %178 = getelementptr inbounds i32, i32* %175, i64 1
  %179 = ptrtoint i32* %178 to i64
  %180 = load i32*, i32** %92, align 8
  %181 = load i64, i64* %84, align 8
  %182 = ptrtoint i32* %180 to i64
  %183 = sub i64 %181, %182
  %184 = ashr exact i64 %183, 2
  %185 = sub nsw i64 0, %184
  %186 = getelementptr inbounds i32, i32* %175, i64 %185
  %187 = ptrtoint i32* %186 to i64
  %188 = icmp sgt i64 %183, 0
  br i1 %188, label %189, label %193

189:                                              ; preds = %172
  %190 = bitcast i32* %186 to i8*
  %191 = bitcast i32* %180 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %190, i8* align 4 %191, i64 %183, i1 false) #16
  %192 = load i32*, i32** %92, align 8
  br label %193

193:                                              ; preds = %189, %172
  %194 = phi i32* [ %180, %172 ], [ %192, %189 ]
  store i64 %187, i64* %81, align 8
  store i64 %179, i64* %84, align 8
  store i64 %177, i64* %91, align 8
  %195 = icmp eq i32* %194, null
  br i1 %195, label %198, label %196

196:                                              ; preds = %193
  %197 = bitcast i32* %194 to i8*
  call void @_ZdlPv(i8* %197) #17
  br label %198

198:                                              ; preds = %143, %193, %196
  %199 = add nuw i64 %134, 1
  %200 = icmp eq i64 %199, %87
  br i1 %200, label %132, label %133

201:                                              ; preds = %2, %132
  ret void
}

declare %struct.stack_st_CRYPTO_BUFFER* @SSL_get0_server_requested_CAs(%struct.ssl_st*) local_unnamed_addr #1

declare i8* @CRYPTO_BUFFER_data(%struct.crypto_buffer_st*) local_unnamed_addr #1

declare i64 @SSL_get0_certificate_types(%struct.ssl_st*, i8**) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19SSLClientSocketImpl14ApplySocketTagERKNS_9SocketTagE(%"class.net::SSLClientSocketImpl"* nocapture readonly, %"class.net::SocketTag"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 23, i32 0, i32 0, i32 0
  %4 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %3, align 8
  %5 = bitcast %"class.net::StreamSocket"* %4 to void (%"class.net::StreamSocket"*, %"class.net::SocketTag"*)***
  %6 = load void (%"class.net::StreamSocket"*, %"class.net::SocketTag"*)**, void (%"class.net::StreamSocket"*, %"class.net::SocketTag"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.net::StreamSocket"*, %"class.net::SocketTag"*)*, void (%"class.net::StreamSocket"*, %"class.net::SocketTag"*)** %6, i64 30
  %8 = load void (%"class.net::StreamSocket"*, %"class.net::SocketTag"*)*, void (%"class.net::StreamSocket"*, %"class.net::SocketTag"*)** %7, align 8
  tail call void %8(%"class.net::StreamSocket"* %4, %"class.net::SocketTag"* %1) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net19SSLClientSocketImpl4ReadEPNS_8IOBufferEiN4base12OnceCallbackIFviEEE(%"class.net::SSLClientSocketImpl"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %8, i64* %9, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %6, align 8
  %10 = bitcast %"class.net::SSLClientSocketImpl"* %0 to i32 (%"class.net::SSLClientSocketImpl"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)***
  %11 = load i32 (%"class.net::SSLClientSocketImpl"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)**, i32 (%"class.net::SSLClientSocketImpl"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)*** %10, align 8
  %12 = getelementptr inbounds i32 (%"class.net::SSLClientSocketImpl"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)*, i32 (%"class.net::SSLClientSocketImpl"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)** %11, i64 3
  %13 = load i32 (%"class.net::SSLClientSocketImpl"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)*, i32 (%"class.net::SSLClientSocketImpl"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)** %12, align 8
  %14 = call i32 %13(%"class.net::SSLClientSocketImpl"* %0, %"class.net::IOBuffer"* %1, i32 %2, %"class.base::OnceCallback"* nonnull %5) #16
  %15 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %15) #16
  %16 = icmp eq i32 %14, -1
  br i1 %16, label %17, label %43

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 5
  %19 = icmp eq %"class.net::IOBuffer"* %1, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 1 monotonic
  br label %23

23:                                               ; preds = %20, %17
  %24 = ptrtoint %"class.net::IOBuffer"* %1 to i64
  %25 = bitcast %class.scoped_refptr.7* %18 to i64*
  %26 = getelementptr inbounds %class.scoped_refptr.7, %class.scoped_refptr.7* %18, i64 0, i32 0
  %27 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %26, align 8
  store i64 %24, i64* %25, align 8
  %28 = icmp eq %"class.net::IOBuffer"* %27, null
  br i1 %28, label %41, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %27, i64 0, i32 1
  %31 = getelementptr inbounds %"class.base::RefCountedThreadSafe.8", %"class.base::RefCountedThreadSafe.8"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw sub i32* %31, i32 1 acq_rel
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %41

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.base::RefCountedThreadSafe.8", %"class.base::RefCountedThreadSafe.8"* %30, i64 -2
  %36 = bitcast %"class.base::RefCountedThreadSafe.8"* %35 to %"class.net::IOBuffer"*
  %37 = bitcast %"class.base::RefCountedThreadSafe.8"* %35 to void (%"class.net::IOBuffer"*)***
  %38 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %38, i64 1
  %40 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %39, align 8
  call void %40(%"class.net::IOBuffer"* nonnull %36) #16
  br label %41

41:                                               ; preds = %23, %29, %34
  %42 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 6
  store i32 %2, i32* %42, align 8
  br label %43

43:                                               ; preds = %41, %4
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net19SSLClientSocketImpl11ReadIfReadyEPNS_8IOBufferEiN4base12OnceCallbackIFviEEE(%"class.net::SSLClientSocketImpl"*, %"class.net::IOBuffer"* nocapture readonly, i32, %"class.base::OnceCallback"*) unnamed_addr #0 align 2 {
  %5 = tail call i32 @_ZN3net19SSLClientSocketImpl13DoPayloadReadEPNS_8IOBufferEi(%"class.net::SSLClientSocketImpl"* %0, %"class.net::IOBuffer"* %1, i32 %2)
  %6 = icmp eq i32 %5, -1
  br i1 %6, label %7, label %11

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 3, i32 0
  %9 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %10 = tail call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %8, %"class.base::internal::CallbackBase"* dereferenceable(8) %9) #16
  br label %15

11:                                               ; preds = %4
  %12 = icmp sgt i32 %5, 0
  br i1 %12, label %13, label %15

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 17
  store i8 1, i8* %14, align 1
  br label %15

15:                                               ; preds = %11, %13, %7
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net19SSLClientSocketImpl13DoPayloadReadEPNS_8IOBufferEi(%"class.net::SSLClientSocketImpl"*, %"class.net::IOBuffer"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.crypto::OpenSSLErrStackTracer", align 8
  %5 = alloca %"class.base::Location", align 8
  %6 = bitcast %"class.crypto::OpenSSLErrStackTracer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 32, i1 false)
  %7 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #16
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str, i64 0, i64 0), i32 1406) #16
  %8 = getelementptr inbounds %"class.crypto::OpenSSLErrStackTracer", %"class.crypto::OpenSSLErrStackTracer"* %4, i64 0, i32 0
  call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* nonnull %8, %"class.base::Location"* nonnull dereferenceable(32) %5) #16
  call void @_ZN6crypto17EnsureOpenSSLInitEv() #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #16
  %9 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 11
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %16

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 22, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %1, i64 0, i32 2
  %15 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 24, i32 0, i32 0, i32 0
  br label %52

16:                                               ; preds = %3
  store i32 1, i32* %9, align 8
  %17 = icmp eq i32 %10, 0
  %18 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 41
  br i1 %17, label %19, label %22

19:                                               ; preds = %16
  %20 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %1, i64 0, i32 2
  %21 = load i8*, i8** %20, align 8
  call void @_ZNK3net16NetLogWithSource20AddByteTransferEventENS_15NetLogEventTypeEiPKc(%"class.net::NetLogWithSource"* %18, i32 65, i32 0, i8* %21) #16
  br label %26

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 12
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 13
  call void @_ZN3net18NetLogOpenSSLErrorERKNS_16NetLogWithSourceENS_15NetLogEventTypeEiiRKNS_16OpenSSLErrorInfoE(%"class.net::NetLogWithSource"* dereferenceable(24) %18, i32 54, i32 %10, i32 %24, %"struct.net::OpenSSLErrorInfo"* dereferenceable(24) %25) #16
  br label %26

26:                                               ; preds = %22, %19
  %27 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 12
  store i32 0, i32* %27, align 4
  %28 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 13, i32 0
  store i32 0, i32* %28, align 8
  %29 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 13, i32 2
  store i8* null, i8** %29, align 8
  %30 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 13, i32 3
  store i32 0, i32* %30, align 8
  br label %136

31:                                               ; preds = %52, %41
  %32 = load %struct.ssl_st*, %struct.ssl_st** %13, align 8
  %33 = load i8*, i8** %14, align 8
  %34 = getelementptr inbounds i8, i8* %33, i64 %54
  %35 = call i32 @SSL_read(%struct.ssl_st* %32, i8* %34, i32 %55) #16
  %36 = load %struct.ssl_st*, %struct.ssl_st** %13, align 8
  %37 = call i32 @SSL_get_error(%struct.ssl_st* %36, i32 %35) #16
  %38 = icmp sgt i32 %35, 0
  br i1 %38, label %49, label %39

39:                                               ; preds = %31
  %40 = icmp eq i32 %37, 19
  br i1 %40, label %41, label %63

41:                                               ; preds = %39
  %42 = load %struct.ssl_st*, %struct.ssl_st** %13, align 8
  %43 = call i32 @SSL_renegotiate(%struct.ssl_st* %42) #16
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %31

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 12
  store i32 1, i32* %46, align 4
  %47 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 13
  %48 = call i32 @_ZN3net26MapOpenSSLErrorWithDetailsEiRKN6crypto21OpenSSLErrStackTracerEPNS_16OpenSSLErrorInfoE(i32 1, %"class.crypto::OpenSSLErrStackTracer"* nonnull dereferenceable(32) %4, %"struct.net::OpenSSLErrorInfo"* %47) #16
  br label %79

49:                                               ; preds = %31
  %50 = add nsw i32 %35, %53
  %51 = icmp eq i32 %37, 19
  br i1 %51, label %62, label %56

52:                                               ; preds = %62, %12
  %53 = phi i32 [ 0, %12 ], [ %50, %62 ]
  %54 = sext i32 %53 to i64
  %55 = sub nsw i32 %2, %53
  br label %31

56:                                               ; preds = %49
  %57 = icmp slt i32 %50, %2
  %58 = and i1 %38, %57
  br i1 %58, label %59, label %110

59:                                               ; preds = %56
  %60 = load %"class.net::SocketBIOAdapter"*, %"class.net::SocketBIOAdapter"** %15, align 8
  %61 = call zeroext i1 @_ZN3net16SocketBIOAdapter18HasPendingReadDataEv(%"class.net::SocketBIOAdapter"* %60) #16
  br i1 %61, label %62, label %110

62:                                               ; preds = %59, %49
  br label %52

63:                                               ; preds = %39
  %64 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 12
  store i32 %37, i32* %64, align 4
  switch i32 %37, label %75 [
    i32 6, label %65
    i32 4, label %66
    i32 13, label %74
  ]

65:                                               ; preds = %63
  store i32 0, i32* %9, align 8
  br label %110

66:                                               ; preds = %63
  %67 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 38
  %68 = load i8, i8* %67, align 2, !range !2
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %73, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 13
  %72 = call i32 @_ZN3net26MapOpenSSLErrorWithDetailsEiRKN6crypto21OpenSSLErrStackTracerEPNS_16OpenSSLErrorInfoE(i32 4, %"class.crypto::OpenSSLErrStackTracer"* nonnull dereferenceable(32) %4, %"struct.net::OpenSSLErrorInfo"* %71) #16
  br label %106

73:                                               ; preds = %66
  store i32 -110, i32* %9, align 8
  br label %110

74:                                               ; preds = %63
  store i32 -1, i32* %9, align 8
  br label %110

75:                                               ; preds = %63
  %76 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 13
  %77 = call i32 @_ZN3net26MapOpenSSLErrorWithDetailsEiRKN6crypto21OpenSSLErrStackTracerEPNS_16OpenSSLErrorInfoE(i32 %37, %"class.crypto::OpenSSLErrStackTracer"* nonnull dereferenceable(32) %4, %"struct.net::OpenSSLErrorInfo"* %76) #16
  %78 = icmp eq i32 %37, 1
  br i1 %78, label %79, label %106

79:                                               ; preds = %45, %75
  %80 = phi i32 [ %48, %45 ], [ %77, %75 ]
  %81 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 13, i32 0
  %82 = load i32, i32* %81, align 8
  %83 = and i32 %82, -16777216
  %84 = icmp eq i32 %83, 268435456
  br i1 %84, label %85, label %106

85:                                               ; preds = %79
  %86 = and i32 %82, 4095
  switch i32 %86, label %106 [
    i32 1040, label %87
    i32 1049, label %99
    i32 253, label %103
  ]

87:                                               ; preds = %85
  %88 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 32
  %89 = load i8, i8* %88, align 4, !range !2
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %106, label %91

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 38
  %93 = load i8, i8* %92, align 2, !range !2
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %106, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 39, i32 0
  %97 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %96, align 8
  %98 = icmp eq %"class.net::X509Certificate"* %97, null
  br i1 %98, label %104, label %106

99:                                               ; preds = %85
  %100 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 32
  %101 = load i8, i8* %100, align 4, !range !2
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %104, label %106

103:                                              ; preds = %85
  store i32 -177, i32* %9, align 8
  br label %113

104:                                              ; preds = %95, %99
  %105 = phi i32 [ -117, %95 ], [ -107, %99 ]
  store i32 %105, i32* %9, align 8
  br label %113

106:                                              ; preds = %85, %99, %95, %87, %91, %70, %79, %75
  %107 = phi i32 [ %72, %70 ], [ %80, %79 ], [ %77, %75 ], [ %80, %99 ], [ %80, %95 ], [ %80, %91 ], [ %80, %87 ], [ %80, %85 ]
  %108 = icmp eq i32 %107, -100
  %109 = select i1 %108, i32 0, i32 %107
  store i32 %109, i32* %9, align 8
  br label %113

110:                                              ; preds = %59, %56, %65, %74, %73
  %111 = phi i32 [ %53, %65 ], [ %53, %74 ], [ %53, %73 ], [ %50, %56 ], [ %50, %59 ]
  %112 = load i32, i32* %9, align 8
  br label %113

113:                                              ; preds = %106, %104, %110, %103
  %114 = phi i32 [ %112, %110 ], [ -177, %103 ], [ %105, %104 ], [ %109, %106 ]
  %115 = phi i32 [ %111, %110 ], [ %53, %103 ], [ %53, %104 ], [ %53, %106 ]
  %116 = icmp sgt i32 %115, 0
  br i1 %116, label %117, label %120

117:                                              ; preds = %113
  %118 = icmp eq i32 %114, -1
  br i1 %118, label %119, label %122

119:                                              ; preds = %117
  store i32 1, i32* %9, align 8
  br label %122

120:                                              ; preds = %113
  store i32 1, i32* %9, align 8
  %121 = icmp sgt i32 %114, -1
  br i1 %121, label %122, label %126

122:                                              ; preds = %117, %119, %120
  %123 = phi i32 [ %114, %120 ], [ %115, %119 ], [ %115, %117 ]
  %124 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 41
  %125 = load i8*, i8** %14, align 8
  call void @_ZNK3net16NetLogWithSource20AddByteTransferEventENS_15NetLogEventTypeEiPKc(%"class.net::NetLogWithSource"* %124, i32 65, i32 %123, i8* %125) #16
  br label %136

126:                                              ; preds = %120
  %127 = icmp eq i32 %114, -1
  br i1 %127, label %136, label %128

128:                                              ; preds = %126
  %129 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 41
  %130 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 12
  %131 = load i32, i32* %130, align 4
  %132 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 13
  call void @_ZN3net18NetLogOpenSSLErrorERKNS_16NetLogWithSourceENS_15NetLogEventTypeEiiRKNS_16OpenSSLErrorInfoE(%"class.net::NetLogWithSource"* dereferenceable(24) %129, i32 54, i32 %114, i32 %131, %"struct.net::OpenSSLErrorInfo"* dereferenceable(24) %132) #16
  store i32 0, i32* %130, align 4
  %133 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 13, i32 0
  store i32 0, i32* %133, align 8
  %134 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 13, i32 2
  store i8* null, i8** %134, align 8
  %135 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 13, i32 3
  store i32 0, i32* %135, align 8
  br label %136

136:                                              ; preds = %122, %128, %126, %26
  %137 = phi i32 [ %10, %26 ], [ -1, %126 ], [ %114, %128 ], [ %123, %122 ]
  call void @_ZN6crypto20ClearOpenSSLERRStackERKN4base8LocationE(%"class.base::Location"* nonnull dereferenceable(32) %8) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #16
  ret i32 %137
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net19SSLClientSocketImpl17CancelReadIfReadyEv(%"class.net::SSLClientSocketImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %2) #16
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net19SSLClientSocketImpl5WriteEPNS_8IOBufferEiN4base12OnceCallbackIFviEEERKNS_27NetworkTrafficAnnotationTagE(%"class.net::SSLClientSocketImpl"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, %"struct.net::NetworkTrafficAnnotationTag"* nocapture readnone dereferenceable(4)) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 7
  %7 = icmp eq %"class.net::IOBuffer"* %1, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw add i32* %9, i32 1 monotonic
  br label %11

11:                                               ; preds = %8, %5
  %12 = ptrtoint %"class.net::IOBuffer"* %1 to i64
  %13 = bitcast %class.scoped_refptr.7* %6 to i64*
  %14 = getelementptr inbounds %class.scoped_refptr.7, %class.scoped_refptr.7* %6, i64 0, i32 0
  %15 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %14, align 8
  store i64 %12, i64* %13, align 8
  %16 = icmp eq %"class.net::IOBuffer"* %15, null
  br i1 %16, label %29, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %15, i64 0, i32 1
  %19 = getelementptr inbounds %"class.base::RefCountedThreadSafe.8", %"class.base::RefCountedThreadSafe.8"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw sub i32* %19, i32 1 acq_rel
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %29

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.base::RefCountedThreadSafe.8", %"class.base::RefCountedThreadSafe.8"* %18, i64 -2
  %24 = bitcast %"class.base::RefCountedThreadSafe.8"* %23 to %"class.net::IOBuffer"*
  %25 = bitcast %"class.base::RefCountedThreadSafe.8"* %23 to void (%"class.net::IOBuffer"*)***
  %26 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %26, i64 1
  %28 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %27, align 8
  tail call void %28(%"class.net::IOBuffer"* nonnull %24) #16
  br label %29

29:                                               ; preds = %11, %17, %22
  %30 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 8
  store i32 %2, i32* %30, align 8
  %31 = tail call i32 @_ZN3net19SSLClientSocketImpl14DoPayloadWriteEv(%"class.net::SSLClientSocketImpl"* %0)
  %32 = icmp eq i32 %31, -1
  br i1 %32, label %33, label %37

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 4, i32 0
  %35 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %36 = tail call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %34, %"class.base::internal::CallbackBase"* dereferenceable(8) %35) #16
  br label %57

37:                                               ; preds = %29
  %38 = icmp sgt i32 %31, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 17
  store i8 1, i8* %40, align 1
  br label %41

41:                                               ; preds = %39, %37
  %42 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %14, align 8
  store i64 0, i64* %13, align 8
  %43 = icmp eq %"class.net::IOBuffer"* %42, null
  br i1 %43, label %56, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %42, i64 0, i32 1
  %46 = getelementptr inbounds %"class.base::RefCountedThreadSafe.8", %"class.base::RefCountedThreadSafe.8"* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = atomicrmw sub i32* %46, i32 1 acq_rel
  %48 = icmp eq i32 %47, 1
  br i1 %48, label %49, label %56

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.base::RefCountedThreadSafe.8", %"class.base::RefCountedThreadSafe.8"* %45, i64 -2
  %51 = bitcast %"class.base::RefCountedThreadSafe.8"* %50 to %"class.net::IOBuffer"*
  %52 = bitcast %"class.base::RefCountedThreadSafe.8"* %50 to void (%"class.net::IOBuffer"*)***
  %53 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %53, i64 1
  %55 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %54, align 8
  tail call void %55(%"class.net::IOBuffer"* nonnull %51) #16
  br label %56

56:                                               ; preds = %41, %44, %49
  store i32 0, i32* %30, align 8
  br label %57

57:                                               ; preds = %56, %33
  ret i32 %31
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net19SSLClientSocketImpl14DoPayloadWriteEv(%"class.net::SSLClientSocketImpl"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.crypto::OpenSSLErrStackTracer", align 8
  %3 = alloca %"class.base::Location", align 8
  %4 = alloca %"struct.net::OpenSSLErrorInfo", align 8
  %5 = bitcast %"class.crypto::OpenSSLErrStackTracer"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 32, i1 false)
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #16
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.34, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str, i64 0, i64 0), i32 1504) #16
  %7 = getelementptr inbounds %"class.crypto::OpenSSLErrStackTracer", %"class.crypto::OpenSSLErrStackTracer"* %2, i64 0, i32 0
  call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* nonnull %7, %"class.base::Location"* nonnull dereferenceable(32) %3) #16
  call void @_ZN6crypto17EnsureOpenSSLInitEv() #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #16
  %8 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 22, i32 0, i32 0, i32 0
  %9 = load %struct.ssl_st*, %struct.ssl_st** %8, align 8
  %10 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 7, i32 0
  %11 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %10, align 8
  %12 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %11, i64 0, i32 2
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 8
  %15 = load i32, i32* %14, align 8
  %16 = call i32 @SSL_write(%struct.ssl_st* %9, i8* %13, i32 %15) #16
  %17 = icmp sgt i32 %16, -1
  br i1 %17, label %18, label %40

18:                                               ; preds = %1
  %19 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 41
  %20 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %10, align 8
  %21 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %20, i64 0, i32 2
  %22 = load i8*, i8** %21, align 8
  call void @_ZNK3net16NetLogWithSource20AddByteTransferEventENS_15NetLogEventTypeEiPKc(%"class.net::NetLogWithSource"* %19, i32 63, i32 %16, i8* %22) #16
  %23 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 9
  %24 = load i8, i8* %23, align 4, !range !2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %81, label %26

26:                                               ; preds = %18
  %27 = load %struct.ssl_st*, %struct.ssl_st** %8, align 8
  %28 = call i32 @SSL_is_init_finished(%struct.ssl_st* %27) #16
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %81, label %30

30:                                               ; preds = %26
  %31 = call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN3net8features15kTLS13KeyUpdateE) #16
  br i1 %31, label %32, label %39

32:                                               ; preds = %30
  %33 = load %struct.ssl_st*, %struct.ssl_st** %8, align 8
  %34 = call i32 @SSL_version(%struct.ssl_st* %33) #16
  %35 = icmp eq i32 %34, 772
  br i1 %35, label %36, label %39

36:                                               ; preds = %32
  %37 = load %struct.ssl_st*, %struct.ssl_st** %8, align 8
  %38 = call i32 @SSL_key_update(%struct.ssl_st* %37, i32 1) #16
  br label %39

39:                                               ; preds = %36, %32, %30
  store i8 0, i8* %23, align 4
  br label %81

40:                                               ; preds = %1
  %41 = load %struct.ssl_st*, %struct.ssl_st** %8, align 8
  %42 = call i32 @SSL_get_error(%struct.ssl_st* %41, i32 %16) #16
  %43 = icmp eq i32 %42, 13
  br i1 %43, label %81, label %44

44:                                               ; preds = %40
  %45 = bitcast %"struct.net::OpenSSLErrorInfo"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #16
  %46 = getelementptr inbounds %"struct.net::OpenSSLErrorInfo", %"struct.net::OpenSSLErrorInfo"* %4, i64 0, i32 0
  %47 = getelementptr inbounds %"struct.net::OpenSSLErrorInfo", %"struct.net::OpenSSLErrorInfo"* %4, i64 0, i32 2
  %48 = getelementptr inbounds %"struct.net::OpenSSLErrorInfo", %"struct.net::OpenSSLErrorInfo"* %4, i64 0, i32 3
  %49 = bitcast %"struct.net::OpenSSLErrorInfo"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 24, i1 false)
  store i32 0, i32* %46, align 8
  store i8* null, i8** %47, align 8
  store i32 0, i32* %48, align 8
  %50 = call i32 @_ZN3net26MapOpenSSLErrorWithDetailsEiRKN6crypto21OpenSSLErrStackTracerEPNS_16OpenSSLErrorInfoE(i32 %42, %"class.crypto::OpenSSLErrStackTracer"* nonnull dereferenceable(32) %2, %"struct.net::OpenSSLErrorInfo"* nonnull %4) #16
  %51 = icmp eq i32 %42, 1
  br i1 %51, label %52, label %74

52:                                               ; preds = %44
  %53 = load i32, i32* %46, align 8
  %54 = and i32 %53, -16777216
  %55 = icmp eq i32 %54, 268435456
  br i1 %55, label %56, label %74

56:                                               ; preds = %52
  %57 = and i32 %53, 4095
  switch i32 %57, label %74 [
    i32 1040, label %58
    i32 1049, label %70
    i32 253, label %76
  ]

58:                                               ; preds = %56
  %59 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 32
  %60 = load i8, i8* %59, align 4, !range !2
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %74, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 38
  %64 = load i8, i8* %63, align 2, !range !2
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %74, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 39, i32 0
  %68 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %67, align 8
  %69 = icmp eq %"class.net::X509Certificate"* %68, null
  br i1 %69, label %76, label %74

70:                                               ; preds = %56
  %71 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 32
  %72 = load i8, i8* %71, align 4, !range !2
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %76, label %74

74:                                               ; preds = %56, %70, %66, %58, %62, %44, %52
  %75 = icmp eq i32 %50, -1
  br i1 %75, label %79, label %76

76:                                               ; preds = %56, %70, %66, %74
  %77 = phi i32 [ %50, %74 ], [ -117, %66 ], [ -107, %70 ], [ -177, %56 ]
  %78 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 41
  call void @_ZN3net18NetLogOpenSSLErrorERKNS_16NetLogWithSourceENS_15NetLogEventTypeEiiRKNS_16OpenSSLErrorInfoE(%"class.net::NetLogWithSource"* dereferenceable(24) %78, i32 55, i32 %77, i32 %42, %"struct.net::OpenSSLErrorInfo"* nonnull dereferenceable(24) %4) #16
  br label %79

79:                                               ; preds = %74, %76
  %80 = phi i32 [ -1, %74 ], [ %77, %76 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #16
  br label %81

81:                                               ; preds = %79, %40, %39, %18, %26
  %82 = phi i32 [ %16, %26 ], [ %16, %18 ], [ %16, %39 ], [ %80, %79 ], [ -1, %40 ]
  call void @_ZN6crypto20ClearOpenSSLERRStackERKN4base8LocationE(%"class.base::Location"* nonnull dereferenceable(32) %7) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #16
  ret i32 %82
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net19SSLClientSocketImpl20SetReceiveBufferSizeEi(%"class.net::SSLClientSocketImpl"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 23, i32 0, i32 0, i32 0
  %4 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %3, align 8
  %5 = getelementptr inbounds %"class.net::StreamSocket", %"class.net::StreamSocket"* %4, i64 0, i32 0
  %6 = bitcast %"class.net::StreamSocket"* %4 to i32 (%"class.net::Socket"*, i32)***
  %7 = load i32 (%"class.net::Socket"*, i32)**, i32 (%"class.net::Socket"*, i32)*** %6, align 8
  %8 = getelementptr inbounds i32 (%"class.net::Socket"*, i32)*, i32 (%"class.net::Socket"*, i32)** %7, i64 6
  %9 = load i32 (%"class.net::Socket"*, i32)*, i32 (%"class.net::Socket"*, i32)** %8, align 8
  %10 = tail call i32 %9(%"class.net::Socket"* %5, i32 %1) #16
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net19SSLClientSocketImpl17SetSendBufferSizeEi(%"class.net::SSLClientSocketImpl"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 23, i32 0, i32 0, i32 0
  %4 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %3, align 8
  %5 = getelementptr inbounds %"class.net::StreamSocket", %"class.net::StreamSocket"* %4, i64 0, i32 0
  %6 = bitcast %"class.net::StreamSocket"* %4 to i32 (%"class.net::Socket"*, i32)***
  %7 = load i32 (%"class.net::Socket"*, i32)**, i32 (%"class.net::Socket"*, i32)*** %6, align 8
  %8 = getelementptr inbounds i32 (%"class.net::Socket"*, i32)*, i32 (%"class.net::Socket"*, i32)** %7, i64 7
  %9 = load i32 (%"class.net::Socket"*, i32)*, i32 (%"class.net::Socket"*, i32)** %8, align 8
  %10 = tail call i32 %9(%"class.net::Socket"* %5, i32 %1) #16
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19SSLClientSocketImpl11OnReadReadyEv(%"class.net::SSLClientSocketImpl"*) unnamed_addr #0 align 2 {
  tail call void @_ZN3net19SSLClientSocketImpl18RetryAllOperationsEv(%"class.net::SSLClientSocketImpl"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19SSLClientSocketImpl18RetryAllOperationsEv(%"class.net::SSLClientSocketImpl"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.base::internal::WeakReference", align 8
  %6 = alloca %"class.base::WeakPtr.304", align 8
  %7 = bitcast %"class.base::WeakPtr.304"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #16
  %8 = getelementptr inbounds %"class.base::WeakPtr.304", %"class.base::WeakPtr.304"* %6, i64 0, i32 0, i32 1
  %9 = bitcast %"class.base::internal::WeakReference"* %5 to i8*
  %10 = bitcast %"class.base::WeakPtr.304"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #16, !noalias !10
  %11 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 42, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %5, %"class.base::internal::WeakReferenceOwner"* %11) #16, !noalias !10
  %12 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 42, i32 0, i32 1
  %13 = load i64, i64* %12, align 8, !noalias !10
  %14 = getelementptr inbounds %"class.base::WeakPtr.304", %"class.base::WeakPtr.304"* %6, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %14, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %5, i64 %13) #16
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #16, !noalias !10
  %15 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 27
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %18, label %42

18:                                               ; preds = %1
  %19 = call i32 @_ZN3net19SSLClientSocketImpl15DoHandshakeLoopEi(%"class.net::SSLClientSocketImpl"* %0, i32 0) #16
  %20 = icmp eq i32 %19, -1
  br i1 %20, label %42, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 28
  %23 = load i8, i8* %22, align 4, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  store i8 0, i8* %22, align 4
  %26 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 41
  call void @_ZNK3net16NetLogWithSource8EndEventENS_15NetLogEventTypeE(%"class.net::NetLogWithSource"* %26, i32 59) #16
  br label %28

27:                                               ; preds = %21
  call void @_ZN3net19SSLClientSocketImpl18LogConnectEndEventEi(%"class.net::SSLClientSocketImpl"* %0, i32 %19) #16
  br label %28

28:                                               ; preds = %27, %25
  %29 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %30 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %29, align 8
  %31 = icmp eq %"class.base::internal::BindStateBase"* %30, null
  br i1 %31, label %42, label %32

32:                                               ; preds = %28
  %33 = ptrtoint %"class.base::internal::BindStateBase"* %30 to i64
  %34 = icmp slt i32 %19, 0
  %35 = select i1 %34, i32 %19, i32 0
  %36 = bitcast %"class.base::OnceCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #16
  %37 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %33, i64* %37, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %29, align 8
  %38 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  %39 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %30, i64 0, i32 1
  %40 = bitcast void ()** %39 to void (%"class.base::internal::BindStateBase"*, i32)**
  %41 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %40, align 8
  call void %41(%"class.base::internal::BindStateBase"* nonnull %30, i32 %35) #16
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %38) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #16
  br label %42

42:                                               ; preds = %32, %28, %18, %1
  %43 = getelementptr inbounds %"class.base::WeakPtr.304", %"class.base::WeakPtr.304"* %6, i64 0, i32 0, i32 0
  %44 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* nonnull %43) #16
  br i1 %44, label %45, label %147

45:                                               ; preds = %42
  %46 = bitcast i64* %8 to %"class.net::SSLClientSocketImpl"**
  %47 = load %"class.net::SSLClientSocketImpl"*, %"class.net::SSLClientSocketImpl"** %46, align 8
  %48 = icmp eq %"class.net::SSLClientSocketImpl"* %47, null
  br i1 %48, label %147, label %49

49:                                               ; preds = %45
  call void @_ZN3net19SSLClientSocketImpl6DoPeekEv(%"class.net::SSLClientSocketImpl"* %0)
  %50 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 5
  %51 = getelementptr inbounds %class.scoped_refptr.7, %class.scoped_refptr.7* %50, i64 0, i32 0
  %52 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %51, align 8
  %53 = icmp eq %"class.net::IOBuffer"* %52, null
  br i1 %53, label %58, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 6
  %56 = load i32, i32* %55, align 8
  %57 = call i32 @_ZN3net19SSLClientSocketImpl13DoPayloadReadEPNS_8IOBufferEi(%"class.net::SSLClientSocketImpl"* %0, %"class.net::IOBuffer"* nonnull %52, i32 %56)
  br label %63

58:                                               ; preds = %49
  %59 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %60 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %59, align 8
  %61 = icmp eq %"class.base::internal::BindStateBase"* %60, null
  %62 = sext i1 %61 to i32
  br label %63

63:                                               ; preds = %58, %54
  %64 = phi i32 [ %57, %54 ], [ %62, %58 ]
  %65 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 7
  %66 = getelementptr inbounds %class.scoped_refptr.7, %class.scoped_refptr.7* %65, i64 0, i32 0
  %67 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %66, align 8
  %68 = icmp eq %"class.net::IOBuffer"* %67, null
  br i1 %68, label %71, label %69

69:                                               ; preds = %63
  %70 = call i32 @_ZN3net19SSLClientSocketImpl14DoPayloadWriteEv(%"class.net::SSLClientSocketImpl"* %0)
  br label %71

71:                                               ; preds = %63, %69
  %72 = phi i32 [ %70, %69 ], [ -1, %63 ]
  %73 = icmp eq i32 %64, -1
  br i1 %73, label %107, label %74

74:                                               ; preds = %71
  %75 = icmp sgt i32 %64, 0
  br i1 %75, label %76, label %78

76:                                               ; preds = %74
  %77 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 17
  store i8 1, i8* %77, align 1
  br label %78

78:                                               ; preds = %76, %74
  %79 = bitcast %class.scoped_refptr.7* %50 to i64*
  %80 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %51, align 8
  store i64 0, i64* %79, align 8
  %81 = icmp eq %"class.net::IOBuffer"* %80, null
  br i1 %81, label %94, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %80, i64 0, i32 1
  %84 = getelementptr inbounds %"class.base::RefCountedThreadSafe.8", %"class.base::RefCountedThreadSafe.8"* %83, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = atomicrmw sub i32* %84, i32 1 acq_rel
  %86 = icmp eq i32 %85, 1
  br i1 %86, label %87, label %94

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.base::RefCountedThreadSafe.8", %"class.base::RefCountedThreadSafe.8"* %83, i64 -2
  %89 = bitcast %"class.base::RefCountedThreadSafe.8"* %88 to %"class.net::IOBuffer"*
  %90 = bitcast %"class.base::RefCountedThreadSafe.8"* %88 to void (%"class.net::IOBuffer"*)***
  %91 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %90, align 8
  %92 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %91, i64 1
  %93 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %92, align 8
  call void %93(%"class.net::IOBuffer"* nonnull %89) #16
  br label %94

94:                                               ; preds = %78, %82, %87
  %95 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 6
  store i32 0, i32* %95, align 8
  %96 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 3
  %97 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %97) #16
  %98 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %96, i64 0, i32 0, i32 0, i32 0
  %99 = bitcast %"class.base::OnceCallback"* %96 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %100, i64* %101, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %98, align 8
  %102 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %103 = inttoptr i64 %100 to %"class.base::internal::BindStateBase"*
  %104 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %103, i64 0, i32 1
  %105 = bitcast void ()** %104 to void (%"class.base::internal::BindStateBase"*, i32)**
  %106 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %105, align 8
  call void %106(%"class.base::internal::BindStateBase"* %103, i32 %64) #16
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %102) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97) #16
  br label %107

107:                                              ; preds = %71, %94
  %108 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* nonnull %43) #16
  br i1 %108, label %109, label %147

109:                                              ; preds = %107
  %110 = load %"class.net::SSLClientSocketImpl"*, %"class.net::SSLClientSocketImpl"** %46, align 8
  %111 = icmp eq %"class.net::SSLClientSocketImpl"* %110, null
  %112 = icmp eq i32 %72, -1
  %113 = or i1 %112, %111
  br i1 %113, label %147, label %114

114:                                              ; preds = %109
  %115 = icmp sgt i32 %72, 0
  br i1 %115, label %116, label %118

116:                                              ; preds = %114
  %117 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 17
  store i8 1, i8* %117, align 1
  br label %118

118:                                              ; preds = %116, %114
  %119 = bitcast %class.scoped_refptr.7* %65 to i64*
  %120 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %66, align 8
  store i64 0, i64* %119, align 8
  %121 = icmp eq %"class.net::IOBuffer"* %120, null
  br i1 %121, label %134, label %122

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %120, i64 0, i32 1
  %124 = getelementptr inbounds %"class.base::RefCountedThreadSafe.8", %"class.base::RefCountedThreadSafe.8"* %123, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = atomicrmw sub i32* %124, i32 1 acq_rel
  %126 = icmp eq i32 %125, 1
  br i1 %126, label %127, label %134

127:                                              ; preds = %122
  %128 = getelementptr inbounds %"class.base::RefCountedThreadSafe.8", %"class.base::RefCountedThreadSafe.8"* %123, i64 -2
  %129 = bitcast %"class.base::RefCountedThreadSafe.8"* %128 to %"class.net::IOBuffer"*
  %130 = bitcast %"class.base::RefCountedThreadSafe.8"* %128 to void (%"class.net::IOBuffer"*)***
  %131 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %130, align 8
  %132 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %131, i64 1
  %133 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %132, align 8
  call void %133(%"class.net::IOBuffer"* nonnull %129) #16
  br label %134

134:                                              ; preds = %118, %122, %127
  %135 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 8
  store i32 0, i32* %135, align 8
  %136 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 4
  %137 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %137) #16
  %138 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %136, i64 0, i32 0, i32 0, i32 0
  %139 = bitcast %"class.base::OnceCallback"* %136 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %140, i64* %141, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %138, align 8
  %142 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  %143 = inttoptr i64 %140 to %"class.base::internal::BindStateBase"*
  %144 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %143, i64 0, i32 1
  %145 = bitcast void ()** %144 to void (%"class.base::internal::BindStateBase"*, i32)**
  %146 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %145, align 8
  call void %146(%"class.base::internal::BindStateBase"* %143, i32 %72) #16
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %142) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %137) #16
  br label %147

147:                                              ; preds = %107, %42, %109, %134, %45
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %14) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn40_N3net19SSLClientSocketImpl11OnReadReadyEv(%"class.net::SSLClientSocketImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 -1, i32 41
  %3 = bitcast %"class.net::NetLogWithSource"* %2 to %"class.net::SSLClientSocketImpl"*
  tail call void @_ZN3net19SSLClientSocketImpl18RetryAllOperationsEv(%"class.net::SSLClientSocketImpl"* %3) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19SSLClientSocketImpl12OnWriteReadyEv(%"class.net::SSLClientSocketImpl"*) unnamed_addr #0 align 2 {
  tail call void @_ZN3net19SSLClientSocketImpl18RetryAllOperationsEv(%"class.net::SSLClientSocketImpl"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn40_N3net19SSLClientSocketImpl12OnWriteReadyEv(%"class.net::SSLClientSocketImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 -1, i32 41
  %3 = bitcast %"class.net::NetLogWithSource"* %2 to %"class.net::SSLClientSocketImpl"*
  tail call void @_ZN3net19SSLClientSocketImpl18RetryAllOperationsEv(%"class.net::SSLClientSocketImpl"* %3) #16
  ret void
}

declare %struct.ssl_st* @SSL_new(%struct.ssl_ctx_st*) local_unnamed_addr #1

declare void @_ZN3net9IPAddressC1Ev(%"class.net::IPAddress"*) unnamed_addr #1

declare zeroext i1 @_ZN3net9IPAddress19AssignFromIPLiteralERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::IPAddress"*, %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #1

declare i32 @SSL_set_tlsext_host_name(%struct.ssl_st*, i8*) local_unnamed_addr #1

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #1

declare i32 @SSL_set1_curves(%struct.ssl_st*, i32*, i64) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3net19SSLClientSocketImpl16IsCachingEnabledEv(%"class.net::SSLClientSocketImpl"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 18
  %3 = load %"class.net::SSLClientContext"*, %"class.net::SSLClientContext"** %2, align 8
  %4 = getelementptr inbounds %"class.net::SSLClientContext", %"class.net::SSLClientContext"* %3, i64 0, i32 7
  %5 = load %"class.net::SSLClientSessionCache"*, %"class.net::SSLClientSessionCache"** %4, align 8
  %6 = icmp ne %"class.net::SSLClientSessionCache"* %5, null
  ret i1 %6
}

declare %struct.ssl_session_st* @_ZN3net21SSLClientSessionCache6LookupERKNS0_3KeyE(%"class.net::SSLClientSessionCache"*, %"struct.net::SSLClientSessionCache::Key"* dereferenceable(248)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net19SSLClientSocketImpl18GetSessionCacheKeyEN4absl8optionalINS_9IPAddressEEE(%"struct.net::SSLClientSessionCache::Key"* noalias sret, %"class.net::SSLClientSocketImpl"*, %"class.absl::optional.285"*) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"struct.net::SSLClientSessionCache::Key"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 -86, i64 248, i1 false)
  tail call void @_ZN3net21SSLClientSessionCache3KeyC1Ev(%"struct.net::SSLClientSessionCache::Key"* %0) #16
  %5 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %1, i64 0, i32 25
  %6 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %0, i64 0, i32 0
  %7 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %0, i64 0, i32 0, i32 0
  %8 = icmp eq %"class.net::HostPortPair"* %6, %5
  br i1 %8, label %37, label %9

9:                                                ; preds = %3
  %10 = bitcast %"struct.net::SSLClientSessionCache::Key"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = bitcast %"class.net::HostPortPair"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %13, label %27, label %18

18:                                               ; preds = %9
  br i1 %17, label %21, label %19

19:                                               ; preds = %18
  %20 = bitcast %"class.net::HostPortPair"* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %20, i64 24, i1 false) #16
  br label %37

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %1, i64 0, i32 25, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %7, i8* %23, i64 %25) #16
  br label %37

27:                                               ; preds = %9
  %28 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %1, i64 0, i32 25, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.net::HostPortPair"* %5 to i8*
  %33 = zext i8 %16 to i64
  %34 = select i1 %17, i8* %29, i8* %32
  %35 = select i1 %17, i64 %31, i64 %33
  %36 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %7, i8* %34, i64 %35) #16
  br label %37

37:                                               ; preds = %3, %19, %21, %27
  %38 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %1, i64 0, i32 25, i32 1
  %39 = load i16, i16* %38, align 8
  %40 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %0, i64 0, i32 0, i32 1
  store i16 %39, i16* %40, align 8
  %41 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %0, i64 0, i32 1
  %42 = getelementptr inbounds %"class.absl::optional.285", %"class.absl::optional.285"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8, i8* %42, align 1, !range !2
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %55, label %45

45:                                               ; preds = %37
  %46 = getelementptr inbounds %"class.absl::optional.285", %"class.absl::optional.285"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %47 = getelementptr inbounds %"class.absl::optional.285", %"class.absl::optional.285"* %41, i64 0, i32 0, i32 0, i32 0, i32 0
  %48 = load i8, i8* %47, align 1, !range !2
  %49 = icmp eq i8 %48, 0
  %50 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 0
  br i1 %49, label %53, label %51

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %46, i64 0, i32 0, i32 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %50, i8* align 1 %52, i64 17, i1 false) #16
  br label %61

53:                                               ; preds = %45
  %54 = bitcast i8* %50 to %"class.net::IPAddress"*
  tail call void @_ZN3net9IPAddressC1ERKS0_(%"class.net::IPAddress"* %54, %"class.net::IPAddress"* dereferenceable(17) %46) #16
  store i8 1, i8* %47, align 1
  br label %61

55:                                               ; preds = %37
  %56 = getelementptr inbounds %"class.absl::optional.285", %"class.absl::optional.285"* %41, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8, i8* %56, align 1, !range !2
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %61, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %60) #16
  store i8 0, i8* %56, align 1
  br label %61

61:                                               ; preds = %51, %53, %55, %59
  %62 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN3net8features42kPartitionSSLSessionsByNetworkIsolationKeyE) #16
  br i1 %62, label %63, label %67

63:                                               ; preds = %61
  %64 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %1, i64 0, i32 26, i32 15
  %65 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %0, i64 0, i32 3
  %66 = tail call dereferenceable(184) %"class.net::NetworkIsolationKey"* @_ZN3net19NetworkIsolationKeyaSERKS0_(%"class.net::NetworkIsolationKey"* %65, %"class.net::NetworkIsolationKey"* dereferenceable(184) %64) #16
  br label %67

67:                                               ; preds = %63, %61
  %68 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %1, i64 0, i32 26, i32 16
  %69 = load i32, i32* %68, align 8
  %70 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %0, i64 0, i32 4
  store i32 %69, i32* %70, align 8
  %71 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %1, i64 0, i32 26, i32 4
  %72 = load i8, i8* %71, align 2, !range !2
  %73 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %0, i64 0, i32 5
  store i8 %72, i8* %73, align 4
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3net21SSLClientSessionCache3KeyD1Ev(%"struct.net::SSLClientSessionCache::Key"*) unnamed_addr #3

declare void @_ZN3net10IPEndPointC1Ev(%"class.net::IPEndPoint"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"*) unnamed_addr #3

declare i32 @SSL_set_session(%struct.ssl_st*, %struct.ssl_session_st*) local_unnamed_addr #1

declare i32 @BIO_up_ref(%struct.bio_st*) local_unnamed_addr #1

declare void @SSL_set0_rbio(%struct.ssl_st*, %struct.bio_st*) local_unnamed_addr #1

declare void @SSL_set0_wbio(%struct.ssl_st*, %struct.bio_st*) local_unnamed_addr #1

declare i32 @SSL_set_min_proto_version(%struct.ssl_st*, i16 zeroext) local_unnamed_addr #1

declare i32 @SSL_set_max_proto_version(%struct.ssl_st*, i16 zeroext) local_unnamed_addr #1

declare void @SSL_set_early_data_enabled(%struct.ssl_st*, i32) local_unnamed_addr #1

declare void @_ZN3net15SslSetClearMaskC1Ev(%"struct.net::SslSetClearMask"*) unnamed_addr #1

declare void @_ZN3net15SslSetClearMask13ConfigureFlagElb(%"struct.net::SslSetClearMask"*, i64, i1 zeroext) local_unnamed_addr #1

declare i32 @SSL_set_options(%struct.ssl_st*, i32) local_unnamed_addr #1

declare i32 @SSL_clear_options(%struct.ssl_st*, i32) local_unnamed_addr #1

declare i32 @SSL_set_mode(%struct.ssl_st*, i32) local_unnamed_addr #1

declare i32 @SSL_clear_mode(%struct.ssl_st*, i32) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #1

declare %struct.ssl_cipher_st* @SSL_get_cipher_by_value(i16 zeroext) local_unnamed_addr #1

declare i8* @SSL_CIPHER_get_name(%struct.ssl_cipher_st*) local_unnamed_addr #1

declare i32 @SSL_set_strict_cipher_list(%struct.ssl_st*, i8*) local_unnamed_addr #1

declare i32 @SSL_set_verify_algorithm_prefs(%struct.ssl_st*, i16*, i64) local_unnamed_addr #1

declare void @_ZN3net15SSLClientSocket19SerializeNextProtosERKNSt3__16vectorINS_9NextProtoENS1_9allocatorIS3_EEEE(%"class.std::__1::vector.210"* sret, %"class.std::__1::vector.201"* dereferenceable(24)) local_unnamed_addr #1

declare i32 @SSL_set_alpn_protos(%struct.ssl_st*, i8*, i32) local_unnamed_addr #1

declare i8* @_ZN3net17NextProtoToStringENS_9NextProtoE(i32) local_unnamed_addr #1

declare i32 @SSL_add_application_settings(%struct.ssl_st*, i8*, i64, i8*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

declare void @SSL_enable_signed_cert_timestamps(%struct.ssl_st*) local_unnamed_addr #1

declare void @SSL_enable_ocsp_stapling(%struct.ssl_st*) local_unnamed_addr #1

declare void @SSL_set_renegotiate_mode(%struct.ssl_st*, i32) local_unnamed_addr #1

declare void @SSL_set_shed_handshake_config(%struct.ssl_st*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN3net16SSLClientContext20GetClientCertificateERKNS_12HostPortPairEP13scoped_refptrINS_15X509CertificateEEPS4_INS_13SSLPrivateKeyEE(%"class.net::SSLClientContext"*, %"class.net::HostPortPair"* dereferenceable(32), %class.scoped_refptr.9*, %class.scoped_refptr.232*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19SSLClientSocketImpl14DoReadCallbackEi(%"class.net::SSLClientSocketImpl"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = icmp sgt i32 %1, 0
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 17
  store i8 1, i8* %6, align 1
  br label %7

7:                                                ; preds = %5, %2
  %8 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 5
  %9 = bitcast %class.scoped_refptr.7* %8 to i64*
  %10 = getelementptr inbounds %class.scoped_refptr.7, %class.scoped_refptr.7* %8, i64 0, i32 0
  %11 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %10, align 8
  store i64 0, i64* %9, align 8
  %12 = icmp eq %"class.net::IOBuffer"* %11, null
  br i1 %12, label %25, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %11, i64 0, i32 1
  %15 = getelementptr inbounds %"class.base::RefCountedThreadSafe.8", %"class.base::RefCountedThreadSafe.8"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw sub i32* %15, i32 1 acq_rel
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %18, label %25

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.base::RefCountedThreadSafe.8", %"class.base::RefCountedThreadSafe.8"* %14, i64 -2
  %20 = bitcast %"class.base::RefCountedThreadSafe.8"* %19 to %"class.net::IOBuffer"*
  %21 = bitcast %"class.base::RefCountedThreadSafe.8"* %19 to void (%"class.net::IOBuffer"*)***
  %22 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %22, i64 1
  %24 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %23, align 8
  tail call void %24(%"class.net::IOBuffer"* nonnull %20) #16
  br label %25

25:                                               ; preds = %7, %13, %18
  %26 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 6
  store i32 0, i32* %26, align 8
  %27 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 3
  %28 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #16
  %29 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %27, i64 0, i32 0, i32 0, i32 0
  %30 = bitcast %"class.base::OnceCallback"* %27 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %31, i64* %32, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %29, align 8
  %33 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %34 = inttoptr i64 %31 to %"class.base::internal::BindStateBase"*
  %35 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %34, i64 0, i32 1
  %36 = bitcast void ()** %35 to void (%"class.base::internal::BindStateBase"*, i32)**
  %37 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %36, align 8
  tail call void %37(%"class.base::internal::BindStateBase"* %34, i32 %1) #16
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %33) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19SSLClientSocketImpl15DoWriteCallbackEi(%"class.net::SSLClientSocketImpl"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = icmp sgt i32 %1, 0
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 17
  store i8 1, i8* %6, align 1
  br label %7

7:                                                ; preds = %5, %2
  %8 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 7
  %9 = bitcast %class.scoped_refptr.7* %8 to i64*
  %10 = getelementptr inbounds %class.scoped_refptr.7, %class.scoped_refptr.7* %8, i64 0, i32 0
  %11 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %10, align 8
  store i64 0, i64* %9, align 8
  %12 = icmp eq %"class.net::IOBuffer"* %11, null
  br i1 %12, label %25, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %11, i64 0, i32 1
  %15 = getelementptr inbounds %"class.base::RefCountedThreadSafe.8", %"class.base::RefCountedThreadSafe.8"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw sub i32* %15, i32 1 acq_rel
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %18, label %25

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.base::RefCountedThreadSafe.8", %"class.base::RefCountedThreadSafe.8"* %14, i64 -2
  %20 = bitcast %"class.base::RefCountedThreadSafe.8"* %19 to %"class.net::IOBuffer"*
  %21 = bitcast %"class.base::RefCountedThreadSafe.8"* %19 to void (%"class.net::IOBuffer"*)***
  %22 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %22, i64 1
  %24 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %23, align 8
  tail call void %24(%"class.net::IOBuffer"* nonnull %20) #16
  br label %25

25:                                               ; preds = %7, %13, %18
  %26 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 8
  store i32 0, i32* %26, align 8
  %27 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 4
  %28 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #16
  %29 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %27, i64 0, i32 0, i32 0, i32 0
  %30 = bitcast %"class.base::OnceCallback"* %27 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %31, i64* %32, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %29, align 8
  %33 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %34 = inttoptr i64 %31 to %"class.base::internal::BindStateBase"*
  %35 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %34, i64 0, i32 1
  %36 = bitcast void ()** %35 to void (%"class.base::internal::BindStateBase"*, i32)**
  %37 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %36, align 8
  tail call void %37(%"class.base::internal::BindStateBase"* %34, i32 %1) #16
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %33) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net19SSLClientSocketImpl11DoHandshakeEv(%"class.net::SSLClientSocketImpl"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.crypto::OpenSSLErrStackTracer", align 8
  %3 = alloca %"class.base::Location", align 8
  %4 = alloca %"struct.net::OpenSSLErrorInfo", align 8
  %5 = alloca %"class.logging::LogMessage", align 8
  %6 = bitcast %"class.crypto::OpenSSLErrStackTracer"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 32, i1 false)
  %7 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #16
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str, i64 0, i64 0), i32 952) #16
  %8 = getelementptr inbounds %"class.crypto::OpenSSLErrStackTracer", %"class.crypto::OpenSSLErrStackTracer"* %2, i64 0, i32 0
  call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* nonnull %8, %"class.base::Location"* nonnull dereferenceable(32) %3) #16
  call void @_ZN6crypto17EnsureOpenSSLInitEv() #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #16
  %9 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 22, i32 0, i32 0, i32 0
  %10 = load %struct.ssl_st*, %struct.ssl_st** %9, align 8
  %11 = call i32 @SSL_do_handshake(%struct.ssl_st* %10) #16
  %12 = icmp slt i32 %11, 1
  br i1 %12, label %13, label %73

13:                                               ; preds = %1
  %14 = load %struct.ssl_st*, %struct.ssl_st** %9, align 8
  %15 = call i32 @SSL_get_error(%struct.ssl_st* %14, i32 %11) #16
  switch i32 %15, label %24 [
    i32 4, label %16
    i32 13, label %20
    i32 16, label %22
  ]

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 38
  %18 = load i8, i8* %17, align 2, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %76, label %24

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 27
  store i32 1, i32* %21, align 8
  br label %76

22:                                               ; preds = %13
  %23 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 27
  store i32 1, i32* %23, align 8
  br label %76

24:                                               ; preds = %16, %13
  %25 = bitcast %"struct.net::OpenSSLErrorInfo"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #16
  %26 = getelementptr inbounds %"struct.net::OpenSSLErrorInfo", %"struct.net::OpenSSLErrorInfo"* %4, i64 0, i32 0
  %27 = getelementptr inbounds %"struct.net::OpenSSLErrorInfo", %"struct.net::OpenSSLErrorInfo"* %4, i64 0, i32 2
  %28 = getelementptr inbounds %"struct.net::OpenSSLErrorInfo", %"struct.net::OpenSSLErrorInfo"* %4, i64 0, i32 3
  %29 = bitcast %"struct.net::OpenSSLErrorInfo"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 24, i1 false)
  store i32 0, i32* %26, align 8
  store i8* null, i8** %27, align 8
  store i32 0, i32* %28, align 8
  %30 = call i32 @_ZN3net26MapOpenSSLErrorWithDetailsEiRKN6crypto21OpenSSLErrStackTracerEPNS_16OpenSSLErrorInfoE(i32 %15, %"class.crypto::OpenSSLErrStackTracer"* nonnull dereferenceable(32) %2, %"struct.net::OpenSSLErrorInfo"* nonnull %4) #16
  %31 = icmp eq i32 %15, 1
  br i1 %31, label %32, label %54

32:                                               ; preds = %24
  %33 = load i32, i32* %26, align 8
  %34 = and i32 %33, -16777216
  %35 = icmp eq i32 %34, 268435456
  br i1 %35, label %36, label %54

36:                                               ; preds = %32
  %37 = and i32 %33, 4095
  switch i32 %37, label %54 [
    i32 1040, label %38
    i32 1049, label %50
    i32 253, label %56
  ]

38:                                               ; preds = %36
  %39 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 32
  %40 = load i8, i8* %39, align 4, !range !2
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %54, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 38
  %44 = load i8, i8* %43, align 2, !range !2
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %54, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 39, i32 0
  %48 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %47, align 8
  %49 = icmp eq %"class.net::X509Certificate"* %48, null
  br i1 %49, label %56, label %54

50:                                               ; preds = %36
  %51 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 32
  %52 = load i8, i8* %51, align 4, !range !2
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %56, label %54

54:                                               ; preds = %36, %50, %46, %38, %42, %24, %32
  %55 = icmp eq i32 %30, -1
  br i1 %55, label %71, label %56

56:                                               ; preds = %36, %50, %46, %54
  %57 = phi i32 [ %30, %54 ], [ -117, %46 ], [ -107, %50 ], [ -177, %36 ]
  %58 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #16
  br i1 %58, label %59, label %69

59:                                               ; preds = %56
  %60 = bitcast %"class.logging::LogMessage"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %60) #16
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %5, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str, i64 0, i64 0), i32 981, i32 2) #16
  %61 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %5, i64 0, i32 2
  %62 = bitcast %"class.std::__1::basic_ostringstream"* %61 to %"class.std::__1::basic_ostream"*
  %63 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %62, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.16, i64 0, i64 0), i64 27) #16
  %64 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %63, i32 %11) #16
  %65 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %64, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.17, i64 0, i64 0), i64 17) #16
  %66 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %65, i32 %15) #16
  %67 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %66, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0), i64 12) #16
  %68 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %67, i32 %57) #16
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %60) #16
  br label %69

69:                                               ; preds = %59, %56
  %70 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 41
  call void @_ZN3net18NetLogOpenSSLErrorERKNS_16NetLogWithSourceENS_15NetLogEventTypeEiiRKNS_16OpenSSLErrorInfoE(%"class.net::NetLogWithSource"* dereferenceable(24) %70, i32 53, i32 %57, i32 %15, %"struct.net::OpenSSLErrorInfo"* nonnull dereferenceable(24) %4) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #16
  br label %73

71:                                               ; preds = %54
  %72 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 27
  store i32 1, i32* %72, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #16
  br label %76

73:                                               ; preds = %69, %1
  %74 = phi i32 [ 0, %1 ], [ %57, %69 ]
  %75 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 27
  store i32 2, i32* %75, align 8
  br label %76

76:                                               ; preds = %16, %22, %20, %71, %73
  %77 = phi i32 [ %74, %73 ], [ -1, %71 ], [ -110, %16 ], [ -1, %22 ], [ -1, %20 ]
  call void @_ZN6crypto20ClearOpenSSLERRStackERKN4base8LocationE(%"class.base::Location"* nonnull dereferenceable(32) %8) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #16
  ret i32 %77
}

declare i32 @SSL_do_handshake(%struct.ssl_st*) local_unnamed_addr #1

declare i32 @SSL_get_error(%struct.ssl_st*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net19SSLClientSocketImpl19MapLastOpenSSLErrorEiRKN6crypto21OpenSSLErrStackTracerEPNS_16OpenSSLErrorInfoE(%"class.net::SSLClientSocketImpl"* nocapture readonly, i32, %"class.crypto::OpenSSLErrStackTracer"* dereferenceable(32), %"struct.net::OpenSSLErrorInfo"*) local_unnamed_addr #0 align 2 {
  %5 = tail call i32 @_ZN3net26MapOpenSSLErrorWithDetailsEiRKN6crypto21OpenSSLErrStackTracerEPNS_16OpenSSLErrorInfoE(i32 %1, %"class.crypto::OpenSSLErrStackTracer"* dereferenceable(32) %2, %"struct.net::OpenSSLErrorInfo"* %3) #16
  %6 = icmp eq i32 %1, 1
  br i1 %6, label %7, label %36

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"struct.net::OpenSSLErrorInfo", %"struct.net::OpenSSLErrorInfo"* %3, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, -16777216
  %11 = icmp eq i32 %10, 268435456
  br i1 %11, label %12, label %36

12:                                               ; preds = %7
  %13 = and i32 %9, 4095
  switch i32 %13, label %32 [
    i32 1040, label %14
    i32 1049, label %27
  ]

14:                                               ; preds = %12
  %15 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 32
  %16 = load i8, i8* %15, align 4, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %32, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 38
  %20 = load i8, i8* %19, align 2, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %32, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 39, i32 0
  %24 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %23, align 8
  %25 = icmp eq %"class.net::X509Certificate"* %24, null
  %26 = select i1 %25, i32 -117, i32 %5
  br label %32

27:                                               ; preds = %12
  %28 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 32
  %29 = load i8, i8* %28, align 4, !range !2
  %30 = icmp eq i8 %29, 0
  %31 = select i1 %30, i32 -107, i32 %5
  br label %32

32:                                               ; preds = %12, %14, %18, %22, %27
  %33 = phi i32 [ %31, %27 ], [ %26, %22 ], [ %5, %14 ], [ %5, %18 ], [ %5, %12 ]
  %34 = icmp eq i32 %13, 253
  %35 = select i1 %34, i32 -177, i32 %33
  ret i32 %35

36:                                               ; preds = %7, %4
  ret i32 %5
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #1

declare void @_ZN3net18NetLogOpenSSLErrorERKNS_16NetLogWithSourceENS_15NetLogEventTypeEiiRKNS_16OpenSSLErrorInfoE(%"class.net::NetLogWithSource"* dereferenceable(24), i32, i32, i32, %"struct.net::OpenSSLErrorInfo"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net19SSLClientSocketImpl19DoHandshakeCompleteEi(%"class.net::SSLClientSocketImpl"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.net::der::Input", align 8
  %4 = alloca %"class.net::der::Input", align 8
  %5 = alloca %"class.net::der::BitString", align 8
  %6 = alloca %"struct.net::ParsedTbsCertificate", align 8
  %7 = alloca %"class.net::der::Input", align 8
  %8 = alloca %"struct.net::ParseCertificateOptions", align 1
  %9 = alloca %"class.std::__1::map.327", align 8
  %10 = alloca %"struct.net::ParsedExtension", align 8
  %11 = alloca %"class.net::der::Input", align 8
  %12 = alloca %"class.net::der::BitString", align 8
  %13 = alloca %"class.base::internal::WeakReference", align 8
  %14 = alloca i8*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i8*, align 8
  %17 = alloca i64, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i64, align 8
  %20 = alloca %"class.net::SSLInfo", align 8
  %21 = alloca %"class.logging::CheckError", align 8
  %22 = alloca %"class.base::Location", align 8
  %23 = alloca %"class.base::OnceCallback.303", align 8
  %24 = alloca %"class.base::WeakPtr.304", align 8
  %25 = icmp slt i32 %1, 0
  br i1 %25, label %270, label %26

26:                                               ; preds = %2
  %27 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 28
  %28 = load i8, i8* %27, align 4, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 27
  store i32 0, i32* %31, align 8
  br label %270

32:                                               ; preds = %26
  %33 = bitcast i8** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #16
  store i8* null, i8** %14, align 8
  %34 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %34) #16
  store i32 0, i32* %15, align 4
  %35 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 22, i32 0, i32 0, i32 0
  %36 = load %struct.ssl_st*, %struct.ssl_st** %35, align 8
  call void @SSL_get0_alpn_selected(%struct.ssl_st* %36, i8** nonnull %14, i32* nonnull %15) #16
  %37 = load i32, i32* %15, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %44, label %39

39:                                               ; preds = %32
  %40 = load i8*, i8** %14, align 8
  %41 = zext i32 %37 to i64
  %42 = call i32 @_ZN3net19NextProtoFromStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %40, i64 %41) #16
  %43 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 31
  store i32 %42, i32* %43, align 8
  br label %44

44:                                               ; preds = %32, %39
  %45 = load atomic i64, i64* @_ZZNK3net19SSLClientSocketImpl24RecordNegotiatedProtocolEvE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %46 = inttoptr i64 %45 to %"class.base::HistogramBase"*
  %47 = icmp eq i64 %45, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %44
  %49 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.41, i64 0, i64 0), i32 1, i32 4, i32 5, i32 1) #16
  %50 = ptrtoint %"class.base::HistogramBase"* %49 to i64
  store atomic i64 %50, i64* @_ZZNK3net19SSLClientSocketImpl24RecordNegotiatedProtocolEvE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %51

51:                                               ; preds = %44, %48
  %52 = phi %"class.base::HistogramBase"* [ %46, %44 ], [ %49, %48 ]
  %53 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 31
  %54 = load i32, i32* %53, align 8
  %55 = bitcast %"class.base::HistogramBase"* %52 to void (%"class.base::HistogramBase"*, i32)***
  %56 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %55, align 8
  %57 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %56, i64 6
  %58 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %57, align 8
  call void %58(%"class.base::HistogramBase"* %52, i32 %54) #16
  %59 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #16
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %16, align 8
  %60 = bitcast i64* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #16
  store i64 -6148914691236517206, i64* %17, align 8
  %61 = load %struct.ssl_st*, %struct.ssl_st** %35, align 8
  call void @SSL_get0_ocsp_response(%struct.ssl_st* %61, i8** nonnull %16, i64* nonnull %17) #16
  %62 = load i64, i64* %17, align 8
  %63 = icmp ne i64 %62, 0
  %64 = zext i1 %63 to i8
  %65 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 0, i32 2
  store i8 %64, i8* %65, align 1
  %66 = bitcast i8** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #16
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %67 = bitcast i64* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #16
  store i64 -6148914691236517206, i64* %19, align 8
  %68 = load %struct.ssl_st*, %struct.ssl_st** %35, align 8
  call void @SSL_get0_signed_cert_timestamp_list(%struct.ssl_st* %68, i8** nonnull %18, i64* nonnull %19) #16
  %69 = load i64, i64* %19, align 8
  %70 = icmp ne i64 %69, 0
  %71 = zext i1 %70 to i8
  %72 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 0, i32 1
  store i8 %71, i8* %72, align 8
  %73 = load i32, i32* %53, align 8
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %88, label %75

75:                                               ; preds = %51
  %76 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 26, i32 13, i32 0, i32 0
  %77 = load i32*, i32** %76, align 8
  %78 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 26, i32 13, i32 0, i32 1
  %79 = load i32*, i32** %78, align 8
  %80 = icmp eq i32* %77, %79
  br i1 %80, label %92, label %83

81:                                               ; preds = %83
  %82 = icmp eq i32* %87, %79
  br i1 %82, label %92, label %83

83:                                               ; preds = %75, %81
  %84 = phi i32* [ %87, %81 ], [ %77, %75 ]
  %85 = load i32, i32* %84, align 4
  %86 = icmp eq i32 %73, %85
  %87 = getelementptr inbounds i32, i32* %84, i64 1
  br i1 %86, label %94, label %81

88:                                               ; preds = %51
  %89 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 26, i32 11
  %90 = load i8, i8* %89, align 8, !range !2
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %92, label %94

92:                                               ; preds = %81, %88, %75
  %93 = load %struct.ssl_st*, %struct.ssl_st** %35, align 8
  call void @SSL_set_renegotiate_mode(%struct.ssl_st* %93, i32 0) #16
  br label %94

94:                                               ; preds = %83, %88, %92
  %95 = load %struct.ssl_st*, %struct.ssl_st** %35, align 8
  %96 = call zeroext i16 @SSL_get_peer_signature_algorithm(%struct.ssl_st* %95) #16
  %97 = icmp eq i16 %96, 0
  br i1 %97, label %100, label %98

98:                                               ; preds = %94
  %99 = zext i16 %96 to i32
  call void @_ZN4base18UmaHistogramSparseEPKci(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.19, i64 0, i64 0), i32 %99) #16
  br label %100

100:                                              ; preds = %94, %98
  %101 = bitcast %"class.net::SSLInfo"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %101) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %101, i8 -86, i64 128, i1 false)
  call void @_ZN3net7SSLInfoC1Ev(%"class.net::SSLInfo"* nonnull %20) #16
  %102 = bitcast %"class.net::SSLClientSocketImpl"* %0 to i1 (%"class.net::SSLClientSocketImpl"*, %"class.net::SSLInfo"*)***
  %103 = load i1 (%"class.net::SSLClientSocketImpl"*, %"class.net::SSLInfo"*)**, i1 (%"class.net::SSLClientSocketImpl"*, %"class.net::SSLInfo"*)*** %102, align 8
  %104 = getelementptr inbounds i1 (%"class.net::SSLClientSocketImpl"*, %"class.net::SSLInfo"*)*, i1 (%"class.net::SSLClientSocketImpl"*, %"class.net::SSLInfo"*)** %103, i64 23
  %105 = load i1 (%"class.net::SSLClientSocketImpl"*, %"class.net::SSLInfo"*)*, i1 (%"class.net::SSLClientSocketImpl"*, %"class.net::SSLInfo"*)** %104, align 8
  %106 = call zeroext i1 %105(%"class.net::SSLClientSocketImpl"* %0, %"class.net::SSLInfo"* nonnull %20) #16
  br i1 %106, label %110, label %107

107:                                              ; preds = %100
  %108 = bitcast %"class.logging::CheckError"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %108) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %21, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str, i64 0, i64 0), i32 1033, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0)) #16
  %109 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %21) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %21) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %108) #16
  br label %110

110:                                              ; preds = %100, %107
  %111 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 15, i32 11
  %112 = load i8, i8* %111, align 8, !range !2
  %113 = icmp eq i8 %112, 0
  br i1 %113, label %114, label %203

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 14, i32 0
  %116 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %115, align 8
  %117 = load %struct.ssl_st*, %struct.ssl_st** %35, align 8
  %118 = call %struct.ssl_cipher_st* @SSL_get_current_cipher(%struct.ssl_st* %117) #16
  %119 = call i32 @SSL_CIPHER_get_kx_nid(%struct.ssl_cipher_st* %118) #16
  switch i32 %119, label %203 [
    i32 951, label %123
    i32 952, label %120
  ]

120:                                              ; preds = %114
  %121 = call i32 @SSL_CIPHER_get_auth_nid(%struct.ssl_cipher_st* %118) #16
  %122 = icmp eq i32 %121, 954
  br i1 %122, label %123, label %203

123:                                              ; preds = %120, %114
  %124 = phi i1 [ false, %120 ], [ true, %114 ]
  %125 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %116, i64 0, i32 6, i32 0, i32 0, i32 0
  %126 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %125, align 8
  %127 = bitcast %"class.net::der::Input"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %127) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %127, i8 -86, i64 16, i1 false) #16
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* nonnull %3) #16
  %128 = bitcast %"class.net::der::Input"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %128) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %128, i8 -86, i64 16, i1 false) #16
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* nonnull %4) #16
  %129 = bitcast %"class.net::der::BitString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %129) #16
  %130 = getelementptr inbounds %"class.net::der::BitString", %"class.net::der::BitString"* %5, i64 0, i32 1
  %131 = getelementptr inbounds %"class.net::der::BitString", %"class.net::der::BitString"* %5, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %129, i8 -86, i64 24, i1 false) #16
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* nonnull %131) #16
  store i8 0, i8* %130, align 8
  %132 = bitcast %"struct.net::ParsedTbsCertificate"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 192, i8* nonnull %132) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %132, i8 -86, i64 192, i1 false) #16
  call void @_ZN3net20ParsedTbsCertificateC1Ev(%"struct.net::ParsedTbsCertificate"* nonnull %6) #16
  %133 = bitcast %"class.net::der::Input"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %133) #16
  %134 = call i8* @CRYPTO_BUFFER_data(%struct.crypto_buffer_st* %126) #16
  %135 = call i64 @CRYPTO_BUFFER_len(%struct.crypto_buffer_st* %126) #16
  call void @_ZN3net3der5InputC1EPKhm(%"class.net::der::Input"* nonnull %7, i8* %134, i64 %135) #16
  %136 = call zeroext i1 @_ZN3net16ParseCertificateERKNS_3der5InputEPS1_S4_PNS0_9BitStringEPNS_10CertErrorsE(%"class.net::der::Input"* nonnull dereferenceable(16) %7, %"class.net::der::Input"* nonnull %3, %"class.net::der::Input"* nonnull %4, %"class.net::der::BitString"* nonnull %5, %"class.net::CertErrors"* null) #16
  %137 = getelementptr inbounds %"struct.net::ParseCertificateOptions", %"struct.net::ParseCertificateOptions"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %137) #16
  br i1 %136, label %138, label %141

138:                                              ; preds = %123
  %139 = call i8 @_ZN3net9x509_util30DefaultParseCertificateOptionsEv() #16
  store i8 %139, i8* %137, align 1
  %140 = call zeroext i1 @_ZN3net19ParseTbsCertificateERKNS_3der5InputERKNS_23ParseCertificateOptionsEPNS_20ParsedTbsCertificateEPNS_10CertErrorsE(%"class.net::der::Input"* nonnull dereferenceable(16) %3, %"struct.net::ParseCertificateOptions"* nonnull dereferenceable(1) %8, %"struct.net::ParsedTbsCertificate"* nonnull %6, %"class.net::CertErrors"* null) #16
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %137) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %133) #16
  br i1 %140, label %142, label %189

141:                                              ; preds = %123
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %137) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %133) #16
  br label %189

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"struct.net::ParsedTbsCertificate", %"struct.net::ParsedTbsCertificate"* %6, i64 0, i32 14
  %144 = load i8, i8* %143, align 8, !range !2
  %145 = icmp eq i8 %144, 0
  br i1 %145, label %189, label %146

146:                                              ; preds = %142
  %147 = bitcast %"class.std::__1::map.327"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %147) #16
  %148 = getelementptr inbounds %"class.std::__1::map.327", %"class.std::__1::map.327"* %9, i64 0, i32 0, i32 0
  %149 = getelementptr inbounds %"class.std::__1::map.327", %"class.std::__1::map.327"* %9, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %150 = getelementptr inbounds %"class.std::__1::map.327", %"class.std::__1::map.327"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  %151 = bitcast %"class.std::__1::__tree_node_base"** %149 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %151, i8 0, i64 16, i1 false) #16
  store %"class.std::__1::__tree_end_node"* %150, %"class.std::__1::__tree_end_node"** %148, align 8
  %152 = getelementptr inbounds %"struct.net::ParsedTbsCertificate", %"struct.net::ParsedTbsCertificate"* %6, i64 0, i32 15
  %153 = call zeroext i1 @_ZN3net15ParseExtensionsERKNS_3der5InputEPNSt3__13mapIS1_NS_15ParsedExtensionENS4_4lessIS1_EENS4_9allocatorINS4_4pairIS2_S6_EEEEEE(%"class.net::der::Input"* dereferenceable(16) %152, %"class.std::__1::map.327"* nonnull %9) #16
  br i1 %153, label %154, label %184

154:                                              ; preds = %146
  %155 = bitcast %"struct.net::ParsedExtension"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %155) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %155, i8 -86, i64 40, i1 false) #16
  %156 = getelementptr inbounds %"struct.net::ParsedExtension", %"struct.net::ParsedExtension"* %10, i64 0, i32 0
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* nonnull %156) #16
  %157 = getelementptr inbounds %"struct.net::ParsedExtension", %"struct.net::ParsedExtension"* %10, i64 0, i32 1
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* %157) #16
  %158 = getelementptr inbounds %"struct.net::ParsedExtension", %"struct.net::ParsedExtension"* %10, i64 0, i32 2
  store i8 0, i8* %158, align 8
  %159 = bitcast %"class.net::der::Input"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %159) #16
  %160 = call { i8*, i64 } @_ZN3net11KeyUsageOidEv() #16
  %161 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %11, i64 0, i32 0
  %162 = extractvalue { i8*, i64 } %160, 0
  store i8* %162, i8** %161, align 8
  %163 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %11, i64 0, i32 1
  %164 = extractvalue { i8*, i64 } %160, 1
  store i64 %164, i64* %163, align 8
  %165 = call zeroext i1 @_ZN3net16ConsumeExtensionERKNS_3der5InputEPNSt3__13mapIS1_NS_15ParsedExtensionENS4_4lessIS1_EENS4_9allocatorINS4_4pairIS2_S6_EEEEEEPS6_(%"class.net::der::Input"* nonnull dereferenceable(16) %11, %"class.std::__1::map.327"* nonnull %9, %"struct.net::ParsedExtension"* nonnull %10) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %159) #16
  br i1 %165, label %166, label %182

166:                                              ; preds = %154
  %167 = bitcast %"class.net::der::BitString"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %167) #16
  %168 = getelementptr inbounds %"class.net::der::BitString", %"class.net::der::BitString"* %12, i64 0, i32 1
  %169 = getelementptr inbounds %"class.net::der::BitString", %"class.net::der::BitString"* %12, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %167, i8 -86, i64 24, i1 false) #16
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* nonnull %169) #16
  store i8 0, i8* %168, align 8
  %170 = call zeroext i1 @_ZN3net13ParseKeyUsageERKNS_3der5InputEPNS0_9BitStringE(%"class.net::der::Input"* dereferenceable(16) %157, %"class.net::der::BitString"* nonnull %12) #16
  br i1 %170, label %171, label %180

171:                                              ; preds = %166
  %172 = call zeroext i1 @_ZNK3net3der9BitString10AssertsBitEm(%"class.net::der::BitString"* nonnull %12, i64 0) #16
  %173 = call zeroext i1 @_ZNK3net3der9BitString10AssertsBitEm(%"class.net::der::BitString"* nonnull %12, i64 2) #16
  %174 = and i1 %172, %173
  br i1 %174, label %180, label %175

175:                                              ; preds = %171
  br i1 %124, label %176, label %178

176:                                              ; preds = %175
  %177 = select i1 %173, i32 4, i32 6
  br label %180

178:                                              ; preds = %175
  %179 = select i1 %172, i32 3, i32 5
  br label %180

180:                                              ; preds = %178, %176, %171, %166
  %181 = phi i32 [ 7, %166 ], [ %177, %176 ], [ %179, %178 ], [ 2, %171 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %167) #16
  br label %182

182:                                              ; preds = %180, %154
  %183 = phi i32 [ %181, %180 ], [ 1, %154 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %155) #16
  br label %184

184:                                              ; preds = %182, %146
  %185 = phi i32 [ %183, %182 ], [ 7, %146 ]
  %186 = getelementptr inbounds %"class.std::__1::map.327", %"class.std::__1::map.327"* %9, i64 0, i32 0
  %187 = bitcast %"class.std::__1::__tree_end_node"* %150 to %"class.std::__1::__tree_node"**
  %188 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %187, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIN3net3der5InputENS2_15ParsedExtensionEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.328"* nonnull %186, %"class.std::__1::__tree_node"* %188) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %147) #16
  br label %189

189:                                              ; preds = %184, %142, %141, %138
  %190 = phi i32 [ %185, %184 ], [ 7, %138 ], [ 7, %141 ], [ 1, %142 ]
  call void @_ZN3net20ParsedTbsCertificateD1Ev(%"struct.net::ParsedTbsCertificate"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 192, i8* nonnull %132) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %129) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %128) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %127) #16
  %191 = load atomic i64, i64* @_ZZN3net19SSLClientSocketImpl19DoHandshakeCompleteEiE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %192 = inttoptr i64 %191 to %"class.base::HistogramBase"*
  %193 = icmp eq i64 %191, 0
  br i1 %193, label %194, label %197

194:                                              ; preds = %189
  %195 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.21, i64 0, i64 0), i32 1, i32 8, i32 9, i32 1) #16
  %196 = ptrtoint %"class.base::HistogramBase"* %195 to i64
  store atomic i64 %196, i64* @_ZZN3net19SSLClientSocketImpl19DoHandshakeCompleteEiE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %197

197:                                              ; preds = %189, %194
  %198 = phi %"class.base::HistogramBase"* [ %192, %189 ], [ %195, %194 ]
  %199 = bitcast %"class.base::HistogramBase"* %198 to void (%"class.base::HistogramBase"*, i32)***
  %200 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %199, align 8
  %201 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %200, i64 6
  %202 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %201, align 8
  call void %202(%"class.base::HistogramBase"* %198, i32 %190) #16
  br label %203

203:                                              ; preds = %114, %120, %197, %110
  %204 = load %struct.ssl_st*, %struct.ssl_st** %35, align 8
  %205 = call i32 @SSL_version(%struct.ssl_st* %204) #16
  %206 = icmp slt i32 %205, 772
  %207 = load %struct.ssl_st*, %struct.ssl_st** %35, align 8
  br i1 %206, label %208, label %216

208:                                              ; preds = %203
  %209 = call i32 @SSL_session_reused(%struct.ssl_st* %207) #16
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %211, label %230

211:                                              ; preds = %208
  %212 = load %struct.ssl_st*, %struct.ssl_st** %35, align 8
  %213 = call i32 @SSL_in_false_start(%struct.ssl_st* %212) #16
  %214 = icmp eq i32 %213, 0
  %215 = select i1 %214, i32 0, i32 2
  br label %230

216:                                              ; preds = %203
  %217 = call i32 @SSL_used_hello_retry_request(%struct.ssl_st* %207) #16
  %218 = icmp ne i32 %217, 0
  %219 = load %struct.ssl_st*, %struct.ssl_st** %35, align 8
  %220 = call i32 @SSL_in_early_data(%struct.ssl_st* %219) #16
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %222, label %230

222:                                              ; preds = %216
  %223 = load %struct.ssl_st*, %struct.ssl_st** %35, align 8
  %224 = call i32 @SSL_session_reused(%struct.ssl_st* %223) #16
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %228, label %226

226:                                              ; preds = %222
  %227 = select i1 %218, i32 9, i32 7
  br label %230

228:                                              ; preds = %222
  %229 = select i1 %218, i32 8, i32 6
  br label %230

230:                                              ; preds = %228, %226, %216, %211, %208
  %231 = phi i32 [ 1, %208 ], [ %215, %211 ], [ %227, %226 ], [ %229, %228 ], [ 5, %216 ]
  %232 = load atomic i64, i64* @_ZZN3net19SSLClientSocketImpl19DoHandshakeCompleteEiE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %233 = inttoptr i64 %232 to %"class.base::HistogramBase"*
  %234 = icmp eq i64 %232, 0
  br i1 %234, label %235, label %238

235:                                              ; preds = %230
  %236 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.22, i64 0, i64 0), i32 1, i32 10, i32 11, i32 1) #16
  %237 = ptrtoint %"class.base::HistogramBase"* %236 to i64
  store atomic i64 %237, i64* @_ZZN3net19SSLClientSocketImpl19DoHandshakeCompleteEiE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %238

238:                                              ; preds = %230, %235
  %239 = phi %"class.base::HistogramBase"* [ %233, %230 ], [ %236, %235 ]
  %240 = bitcast %"class.base::HistogramBase"* %239 to void (%"class.base::HistogramBase"*, i32)***
  %241 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %240, align 8
  %242 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %241, i64 6
  %243 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %242, align 8
  call void %243(%"class.base::HistogramBase"* %239, i32 %231) #16
  %244 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 16
  store i8 1, i8* %244, align 8
  %245 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 27
  store i32 0, i32* %245, align 8
  %246 = call dereferenceable(8) %class.scoped_refptr.301* @_ZN4base25SequencedTaskRunnerHandle3GetEv() #16
  %247 = bitcast %class.scoped_refptr.301* %246 to %"class.base::TaskRunner"**
  %248 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %247, align 8
  %249 = bitcast %"class.base::Location"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %249) #16
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %22, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.23, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str, i64 0, i64 0), i32 1090) #16
  %250 = bitcast %"class.base::WeakPtr.304"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %250) #16
  %251 = bitcast %"class.base::internal::WeakReference"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %251) #16, !noalias !13
  %252 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 42, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %13, %"class.base::internal::WeakReferenceOwner"* %252) #16, !noalias !13
  %253 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 42, i32 0, i32 1
  %254 = load i64, i64* %253, align 8, !noalias !13
  %255 = getelementptr inbounds %"class.base::WeakPtr.304", %"class.base::WeakPtr.304"* %24, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %255, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %13, i64 %254) #16
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %13) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %251) #16, !noalias !13
  %256 = call i8* @_Znwm(i64 64) #17, !noalias !16
  %257 = bitcast i8* %256 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %257, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net19SSLClientSocketImplEFvvEJNS_7WeakPtrIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net19SSLClientSocketImplEFvvEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net19SSLClientSocketImplEFvvEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE) #16, !noalias !16
  %258 = getelementptr inbounds i8, i8* %256, i64 32
  %259 = bitcast i8* %258 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::SSLClientSocketImpl"*)* @_ZN3net19SSLClientSocketImpl6DoPeekEv to i64), i64 0>, <2 x i64>* %259, align 8, !noalias !16
  %260 = getelementptr inbounds i8, i8* %256, i64 48
  %261 = bitcast i8* %260 to %"class.base::internal::WeakReference"*
  %262 = getelementptr inbounds %"class.base::WeakPtr.304", %"class.base::WeakPtr.304"* %24, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %261, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %262) #16, !noalias !16
  %263 = getelementptr inbounds i8, i8* %256, i64 56
  %264 = bitcast i8* %263 to i64*
  %265 = getelementptr inbounds %"class.base::WeakPtr.304", %"class.base::WeakPtr.304"* %24, i64 0, i32 0, i32 1
  %266 = load i64, i64* %265, align 8, !noalias !16
  store i64 %266, i64* %264, align 8, !noalias !16
  %267 = bitcast %"class.base::OnceCallback.303"* %23 to i8**
  store i8* %256, i8** %267, align 8, !alias.scope !16
  %268 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %248, %"class.base::Location"* nonnull dereferenceable(32) %22, %"class.base::OnceCallback.303"* nonnull %23) #16
  %269 = getelementptr inbounds %"class.base::OnceCallback.303", %"class.base::OnceCallback.303"* %23, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %269) #16
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %255) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %250) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %249) #16
  call void @_ZN3net7SSLInfoD1Ev(%"class.net::SSLInfo"* nonnull %20) #16
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %101) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %34) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #16
  br label %270

270:                                              ; preds = %2, %238, %30
  %271 = phi i32 [ 0, %30 ], [ 0, %238 ], [ %1, %2 ]
  ret i32 %271
}

declare void @SSL_get0_alpn_selected(%struct.ssl_st*, i8**, i32*) local_unnamed_addr #1

declare i32 @_ZN3net19NextProtoFromStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net19SSLClientSocketImpl24RecordNegotiatedProtocolEv(%"class.net::SSLClientSocketImpl"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = load atomic i64, i64* @_ZZNK3net19SSLClientSocketImpl24RecordNegotiatedProtocolEvE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %3 = inttoptr i64 %2 to %"class.base::HistogramBase"*
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = tail call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.41, i64 0, i64 0), i32 1, i32 4, i32 5, i32 1) #16
  %7 = ptrtoint %"class.base::HistogramBase"* %6 to i64
  store atomic i64 %7, i64* @_ZZNK3net19SSLClientSocketImpl24RecordNegotiatedProtocolEvE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.base::HistogramBase"* [ %3, %1 ], [ %6, %5 ]
  %10 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 31
  %11 = load i32, i32* %10, align 8
  %12 = bitcast %"class.base::HistogramBase"* %9 to void (%"class.base::HistogramBase"*, i32)***
  %13 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %13, i64 6
  %15 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %14, align 8
  tail call void %15(%"class.base::HistogramBase"* %9, i32 %11) #16
  ret void
}

declare void @SSL_get0_ocsp_response(%struct.ssl_st*, i8**, i64*) local_unnamed_addr #1

declare void @SSL_get0_signed_cert_timestamp_list(%struct.ssl_st*, i8**, i64*) local_unnamed_addr #1

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3net19SSLClientSocketImpl22IsRenegotiationAllowedEv(%"class.net::SSLClientSocketImpl"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 31
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 26, i32 11
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp ne i8 %7, 0
  ret i1 %8

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 26, i32 13, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  %12 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 26, i32 13, i32 0, i32 1
  %13 = load i32*, i32** %12, align 8
  %14 = icmp eq i32* %11, %13
  br i1 %14, label %22, label %17

15:                                               ; preds = %17
  %16 = icmp eq i32* %21, %13
  br i1 %16, label %22, label %17

17:                                               ; preds = %9, %15
  %18 = phi i32* [ %21, %15 ], [ %11, %9 ]
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %3, %19
  %21 = getelementptr inbounds i32, i32* %18, i64 1
  br i1 %20, label %22, label %15

22:                                               ; preds = %15, %17, %9
  %23 = phi i1 [ false, %9 ], [ true, %17 ], [ false, %15 ]
  ret i1 %23
}

declare void @_ZN4base18UmaHistogramSparseEPKci(i8*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN3net7SSLInfoC1Ev(%"class.net::SSLInfo"*) unnamed_addr #1

declare %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #1

declare i32 @SSL_version(%struct.ssl_st*) local_unnamed_addr #1

declare i32 @SSL_in_false_start(%struct.ssl_st*) local_unnamed_addr #1

declare i32 @SSL_used_hello_retry_request(%struct.ssl_st*) local_unnamed_addr #1

declare dereferenceable(8) %class.scoped_refptr.301* @_ZN4base25SequencedTaskRunnerHandle3GetEv() local_unnamed_addr #1

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback.303"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19SSLClientSocketImpl6DoPeekEv(%"class.net::SSLClientSocketImpl"*) #0 align 2 {
  %2 = alloca %"class.crypto::OpenSSLErrStackTracer", align 8
  %3 = alloca %"class.base::Location", align 8
  %4 = alloca %"struct.net::SSLClientSessionCache::Key", align 8
  %5 = alloca %"class.absl::optional.285", align 1
  %6 = alloca i8, align 1
  %7 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 16
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %84, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.crypto::OpenSSLErrStackTracer"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 32, i1 false)
  %12 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #16
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str, i64 0, i64 0), i32 1539) #16
  %13 = getelementptr inbounds %"class.crypto::OpenSSLErrStackTracer", %"class.crypto::OpenSSLErrStackTracer"* %2, i64 0, i32 0
  call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* nonnull %13, %"class.base::Location"* nonnull dereferenceable(32) %3) #16
  call void @_ZN6crypto17EnsureOpenSSLInitEv() #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #16
  %14 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 26, i32 2
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %65, label %17

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 10
  %19 = load i8, i8* %18, align 1, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %65

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 22, i32 0, i32 0, i32 0
  %23 = load %struct.ssl_st*, %struct.ssl_st** %22, align 8
  %24 = call i32 @SSL_do_handshake(%struct.ssl_st* %23) #16
  %25 = load %struct.ssl_st*, %struct.ssl_st** %22, align 8
  %26 = call i32 @SSL_get_error(%struct.ssl_st* %25, i32 %24) #16
  %27 = icmp sgt i32 %24, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %21
  %29 = call i32 @_ZN3net15MapOpenSSLErrorEiRKN6crypto21OpenSSLErrStackTracerE(i32 %26, %"class.crypto::OpenSSLErrStackTracer"* nonnull dereferenceable(32) %2) #16
  %30 = icmp eq i32 %29, -1
  br i1 %30, label %83, label %31

31:                                               ; preds = %21, %28
  %32 = phi i32 [ %29, %28 ], [ 0, %21 ]
  %33 = load atomic i64, i64* @_ZZN3net19SSLClientSocketImpl6DoPeekEvE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %34 = inttoptr i64 %33 to %"class.base::HistogramBase"*
  %35 = icmp eq i64 %33, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %31
  %37 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.36, i64 0, i64 0), i32 1, i32 15, i32 16, i32 1) #16
  %38 = ptrtoint %"class.base::HistogramBase"* %37 to i64
  store atomic i64 %38, i64* @_ZZN3net19SSLClientSocketImpl6DoPeekEvE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %39

39:                                               ; preds = %31, %36
  %40 = phi %"class.base::HistogramBase"* [ %34, %31 ], [ %37, %36 ]
  %41 = load %struct.ssl_st*, %struct.ssl_st** %22, align 8
  %42 = call i32 @SSL_get_early_data_reason(%struct.ssl_st* %41) #16
  %43 = bitcast %"class.base::HistogramBase"* %40 to void (%"class.base::HistogramBase"*, i32)***
  %44 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %44, i64 6
  %46 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %45, align 8
  call void %46(%"class.base::HistogramBase"* %40, i32 %42) #16
  %47 = add i32 %32, 179
  %48 = icmp ult i32 %47, 2
  br i1 %48, label %49, label %61

49:                                               ; preds = %39
  %50 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 18
  %51 = load %"class.net::SSLClientContext"*, %"class.net::SSLClientContext"** %50, align 8
  %52 = getelementptr inbounds %"class.net::SSLClientContext", %"class.net::SSLClientContext"* %51, i64 0, i32 7
  %53 = load %"class.net::SSLClientSessionCache"*, %"class.net::SSLClientSessionCache"** %52, align 8
  %54 = bitcast %"struct.net::SSLClientSessionCache::Key"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 248, i8* nonnull %54) #16
  %55 = getelementptr inbounds %"class.absl::optional.285", %"class.absl::optional.285"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %55, i8 0, i64 18, i1 false) #16
  call void @_ZNK3net19SSLClientSocketImpl18GetSessionCacheKeyEN4absl8optionalINS_9IPAddressEEE(%"struct.net::SSLClientSessionCache::Key"* nonnull sret %4, %"class.net::SSLClientSocketImpl"* %0, %"class.absl::optional.285"* nonnull %5)
  call void @_ZN3net21SSLClientSessionCache14ClearEarlyDataERKNS0_3KeyE(%"class.net::SSLClientSessionCache"* %53, %"struct.net::SSLClientSessionCache::Key"* nonnull dereferenceable(248) %4) #16
  call void @_ZN3net21SSLClientSessionCache3KeyD1Ev(%"struct.net::SSLClientSessionCache::Key"* nonnull %4) #16
  %56 = load i8, i8* %55, align 1, !range !2
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %60, label %58

58:                                               ; preds = %49
  %59 = getelementptr inbounds %"class.absl::optional.285", %"class.absl::optional.285"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %59) #16
  store i8 0, i8* %55, align 1
  br label %60

60:                                               ; preds = %58, %49
  call void @llvm.lifetime.end.p0i8(i64 248, i8* nonnull %54) #16
  store i8 1, i8* %18, align 1
  br label %63

61:                                               ; preds = %39
  store i8 1, i8* %18, align 1
  %62 = icmp eq i32 %32, 0
  br i1 %62, label %65, label %63

63:                                               ; preds = %60, %61
  %64 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 29
  store i8 1, i8* %64, align 1
  br label %83

65:                                               ; preds = %61, %17, %10
  %66 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 26, i32 17
  %67 = load i8, i8* %66, align 4, !range !2
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %69, label %83

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 29
  %71 = load i8, i8* %70, align 1, !range !2
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %73, label %83

73:                                               ; preds = %69
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #16
  store i8 -86, i8* %6, align 1
  %74 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 22, i32 0, i32 0, i32 0
  %75 = load %struct.ssl_st*, %struct.ssl_st** %74, align 8
  %76 = call i32 @SSL_peek(%struct.ssl_st* %75, i8* nonnull %6, i32 1) #16
  %77 = load %struct.ssl_st*, %struct.ssl_st** %74, align 8
  %78 = call i32 @SSL_get_error(%struct.ssl_st* %77, i32 %76) #16
  %79 = or i32 %78, 1
  %80 = icmp eq i32 %79, 3
  br i1 %80, label %82, label %81

81:                                               ; preds = %73
  store i8 1, i8* %70, align 1
  br label %82

82:                                               ; preds = %73, %81
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #16
  br label %83

83:                                               ; preds = %28, %65, %69, %63, %82
  call void @_ZN6crypto20ClearOpenSSLERRStackERKN4base8LocationE(%"class.base::Location"* nonnull dereferenceable(32) %13) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #16
  br label %84

84:                                               ; preds = %1, %83
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net7SSLInfoD1Ev(%"class.net::SSLInfo"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net19SSLClientSocketImpl18VerifyCertCallbackEP6ssl_stPh(%struct.ssl_st*, i8* nocapture readnone) #0 align 2 {
  %3 = load atomic i64, i64* @_ZN4base9SingletonIN3net19SSLClientSocketImpl10SSLContextENS_20LeakySingletonTraitsIS3_EES3_E9instance_E acquire, align 8
  %4 = icmp ugt i64 %3, 1
  br i1 %4, label %13, label %5

5:                                                ; preds = %2
  %6 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* nonnull @_ZN4base9SingletonIN3net19SSLClientSocketImpl10SSLContextENS_20LeakySingletonTraitsIS3_EES3_E9instance_E) #16
  br i1 %6, label %7, label %11

7:                                                ; preds = %5
  %8 = tail call i8* @_Znwm(i64 16) #17
  %9 = bitcast i8* %8 to %"class.net::SSLClientSocketImpl::SSLContext"*
  tail call void @_ZN3net19SSLClientSocketImpl10SSLContextC2Ev(%"class.net::SSLClientSocketImpl::SSLContext"* nonnull %9) #16
  %10 = ptrtoint i8* %8 to i64
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* nonnull @_ZN4base9SingletonIN3net19SSLClientSocketImpl10SSLContextENS_20LeakySingletonTraitsIS3_EES3_E9instance_E, i64 %10, void (i8*)* null, i8* null) #16
  br label %13

11:                                               ; preds = %5
  %12 = load atomic i64, i64* @_ZN4base9SingletonIN3net19SSLClientSocketImpl10SSLContextENS_20LeakySingletonTraitsIS3_EES3_E9instance_E acquire, align 8
  br label %13

13:                                               ; preds = %2, %7, %11
  %14 = phi i64 [ %3, %2 ], [ %10, %7 ], [ %12, %11 ]
  %15 = inttoptr i64 %14 to %"class.net::SSLClientSocketImpl::SSLContext"*
  %16 = getelementptr inbounds %"class.net::SSLClientSocketImpl::SSLContext", %"class.net::SSLClientSocketImpl::SSLContext"* %15, i64 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = tail call i8* @SSL_get_ex_data(%struct.ssl_st* %0, i32 %17) #16
  %19 = bitcast i8* %18 to %"class.net::SSLClientSocketImpl"*
  %20 = tail call i32 @_ZN3net19SSLClientSocketImpl10VerifyCertEv(%"class.net::SSLClientSocketImpl"* %19)
  ret i32 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net19SSLClientSocketImpl10VerifyCertEv(%"class.net::SSLClientSocketImpl"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::Value", align 8
  %3 = alloca %"class.base::Value", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.base::Location", align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i64, align 8
  %11 = alloca %"class.net::CertVerifier::RequestParams", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca %"class.base::OnceCallback", align 8
  %15 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 21
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %20, label %18

18:                                               ; preds = %1
  %19 = tail call i32 @_ZN3net19SSLClientSocketImpl18HandleVerifyResultEv(%"class.net::SSLClientSocketImpl"* %0)
  br label %205

20:                                               ; preds = %1
  %21 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 14
  %22 = getelementptr inbounds %class.scoped_refptr.9, %class.scoped_refptr.9* %21, i64 0, i32 0
  %23 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %22, align 8
  %24 = icmp eq %"class.net::X509Certificate"* %23, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str, i64 0, i64 0), i32 1120, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.24, i64 0, i64 0)) #16
  %27 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #16
  br label %28

28:                                               ; preds = %20, %25
  %29 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 22, i32 0, i32 0, i32 0
  %30 = load %struct.ssl_st*, %struct.ssl_st** %29, align 8
  %31 = call %struct.stack_st_CRYPTO_BUFFER* @SSL_get0_peer_certificates(%struct.ssl_st* %30) #16
  %32 = call %"class.net::X509Certificate"* @_ZN3net9x509_util32CreateX509CertificateFromBuffersEPK22stack_st_CRYPTO_BUFFER(%struct.stack_st_CRYPTO_BUFFER* %31) #16
  %33 = ptrtoint %"class.net::X509Certificate"* %32 to i64
  %34 = bitcast %class.scoped_refptr.9* %21 to i64*
  %35 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %22, align 8
  store i64 %33, i64* %34, align 8
  %36 = icmp eq %"class.net::X509Certificate"* %35, null
  br i1 %36, label %45, label %37

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = atomicrmw sub i32* %38, i32 1 acq_rel
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  call void @_ZN3net15X509CertificateD1Ev(%"class.net::X509Certificate"* nonnull %35) #16
  %42 = bitcast %"class.net::X509Certificate"* %35 to i8*
  call void @_ZdlPv(i8* %42) #17
  br label %43

43:                                               ; preds = %41, %37
  %44 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %22, align 8
  br label %45

45:                                               ; preds = %43, %28
  %46 = phi %"class.net::X509Certificate"* [ %44, %43 ], [ %32, %28 ]
  %47 = icmp eq %"class.net::X509Certificate"* %46, null
  br i1 %47, label %48, label %50

48:                                               ; preds = %45
  %49 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %49) #16
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str, i64 0, i64 0), i32 1128) #16
  call void @_ZN3net18OpenSSLPutNetErrorERKN4base8LocationEi(%"class.base::Location"* nonnull dereferenceable(32) %5, i32 -167) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %49) #16
  br label %205

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 41
  %52 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 41, i32 1
  %53 = load %"class.net::NetLog"*, %"class.net::NetLog"** %52, align 8
  %54 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %53, i64 0, i32 3
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %65, label %57, !prof !3

57:                                               ; preds = %50
  %58 = getelementptr inbounds %"class.net::NetLogWithSource", %"class.net::NetLogWithSource"* %51, i64 0, i32 0
  %59 = bitcast %"class.base::Value"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %59) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 -86, i64 32, i1 false) #16, !alias.scope !21
  call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* nonnull %3, i8 zeroext 6) #16
  %60 = bitcast %"class.base::Value"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %60) #16, !noalias !21
  %61 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 14, i32 0
  %62 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %61, align 8
  call void @_ZN3net25NetLogX509CertificateListEPKNS_15X509CertificateE(%"class.base::Value"* nonnull sret %2, %"class.net::X509Certificate"* %62) #16
  %63 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* nonnull %3, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.47, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %2) #16
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %2) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %60) #16, !noalias !21
  call void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"* %53, i32 69, %"struct.net::NetLogSource"* dereferenceable(16) %58, i32 0, %"class.base::Value"* nonnull dereferenceable(32) %3) #16
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %59) #16
  %64 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %22, align 8
  br label %65

65:                                               ; preds = %50, %57
  %66 = phi %"class.net::X509Certificate"* [ %46, %50 ], [ %64, %57 ]
  %67 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %67) #16
  store i32 -1431655766, i32* %6, align 4
  %68 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 26
  %69 = call zeroext i1 @_ZNK3net9SSLConfig16IsAllowedBadCertEPNS_15X509CertificateEPj(%"struct.net::SSLConfig"* %68, %"class.net::X509Certificate"* %66, i32* nonnull %6) #16
  br i1 %69, label %70, label %94

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 15
  call void @_ZN3net16CertVerifyResult5ResetEv(%"class.net::CertVerifyResult"* %71) #16
  %72 = load i32, i32* %6, align 4
  %73 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 15, i32 3
  store i32 %72, i32* %73, align 8
  %74 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %22, align 8
  %75 = icmp eq %"class.net::X509Certificate"* %74, null
  br i1 %75, label %79, label %76

76:                                               ; preds = %70
  %77 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = atomicrmw add i32* %77, i32 1 monotonic
  br label %79

79:                                               ; preds = %70, %76
  %80 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 15, i32 2
  %81 = ptrtoint %"class.net::X509Certificate"* %74 to i64
  %82 = bitcast %class.scoped_refptr.9* %80 to i64*
  %83 = getelementptr inbounds %class.scoped_refptr.9, %class.scoped_refptr.9* %80, i64 0, i32 0
  %84 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %83, align 8
  store i64 %81, i64* %82, align 8
  %85 = icmp eq %"class.net::X509Certificate"* %84, null
  br i1 %85, label %92, label %86

86:                                               ; preds = %79
  %87 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %84, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = atomicrmw sub i32* %87, i32 1 acq_rel
  %89 = icmp eq i32 %88, 1
  br i1 %89, label %90, label %92

90:                                               ; preds = %86
  call void @_ZN3net15X509CertificateD1Ev(%"class.net::X509Certificate"* nonnull %84) #16
  %91 = bitcast %"class.net::X509Certificate"* %84 to i8*
  call void @_ZdlPv(i8* %91) #17
  br label %92

92:                                               ; preds = %79, %86, %90
  store i32 0, i32* %15, align 8
  %93 = call i32 @_ZN3net19SSLClientSocketImpl18HandleVerifyResultEv(%"class.net::SSLClientSocketImpl"* %0)
  br label %203

94:                                               ; preds = %65
  %95 = call i64 @_ZN4base9TimeTicks3NowEv() #16
  %96 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 20, i32 0, i32 0
  store i64 %95, i64* %96, align 8
  %97 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %97) #16
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %98 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %98) #16
  store i64 -6148914691236517206, i64* %8, align 8
  %99 = load %struct.ssl_st*, %struct.ssl_st** %29, align 8
  call void @SSL_get0_ocsp_response(%struct.ssl_st* %99, i8** nonnull %7, i64* nonnull %8) #16
  %100 = load i8*, i8** %7, align 8
  %101 = load i64, i64* %8, align 8
  %102 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %102) #16
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %9, align 8
  %103 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %103) #16
  store i64 -6148914691236517206, i64* %10, align 8
  %104 = load %struct.ssl_st*, %struct.ssl_st** %29, align 8
  call void @SSL_get0_signed_cert_timestamp_list(%struct.ssl_st* %104, i8** nonnull %9, i64* nonnull %10) #16
  %105 = load i8*, i8** %9, align 8
  %106 = load i64, i64* %10, align 8
  %107 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 18
  %108 = load %"class.net::SSLClientContext"*, %"class.net::SSLClientContext"** %107, align 8
  %109 = getelementptr inbounds %"class.net::SSLClientContext", %"class.net::SSLClientContext"* %108, i64 0, i32 4
  %110 = load %"class.net::CertVerifier"*, %"class.net::CertVerifier"** %109, align 8
  %111 = bitcast %"class.net::CertVerifier::RequestParams"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %111) #16
  %112 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %22, align 8
  %113 = icmp eq %"class.net::X509Certificate"* %112, null
  br i1 %113, label %117, label %114

114:                                              ; preds = %94
  %115 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %112, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = atomicrmw add i32* %115, i32 1 monotonic
  br label %117

117:                                              ; preds = %94, %114
  %118 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 25, i32 0
  %119 = call i32 @_ZNK3net9SSLConfig18GetCertVerifyFlagsEv(%"struct.net::SSLConfig"* %68) #16
  %120 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %120) #16
  %121 = icmp ugt i64 %101, -17
  br i1 %121, label %122, label %124

122:                                              ; preds = %117
  %123 = bitcast %"class.std::__1::basic_string"* %12 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %123) #19
  unreachable

124:                                              ; preds = %117
  %125 = icmp ult i64 %101, 23
  br i1 %125, label %134, label %126

126:                                              ; preds = %124
  %127 = add nuw i64 %101, 16
  %128 = and i64 %127, -16
  %129 = call i8* @_Znwm(i64 %128) #17
  %130 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %129, i8** %130, align 8, !alias.scope !24
  %131 = or i64 %128, -9223372036854775808
  %132 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %131, i64* %132, align 8, !alias.scope !24
  %133 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %101, i64* %133, align 8, !alias.scope !24
  br label %139

134:                                              ; preds = %124
  %135 = trunc i64 %101 to i8
  %136 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %137 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %136, i64 0, i32 1, i32 0
  store i8 %135, i8* %137, align 1, !alias.scope !24
  %138 = icmp eq i64 %101, 0
  br i1 %138, label %141, label %139

139:                                              ; preds = %134, %126
  %140 = phi i8* [ %129, %126 ], [ %120, %134 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %140, i8* align 1 %100, i64 %101, i1 false) #16
  br label %141

141:                                              ; preds = %134, %139
  %142 = phi i8* [ %120, %134 ], [ %140, %139 ]
  %143 = getelementptr inbounds i8, i8* %142, i64 %101
  store i8 0, i8* %143, align 1
  %144 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %144) #16
  %145 = icmp ugt i64 %106, -17
  br i1 %145, label %146, label %148

146:                                              ; preds = %141
  %147 = bitcast %"class.std::__1::basic_string"* %13 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %147) #19
  unreachable

148:                                              ; preds = %141
  %149 = icmp ult i64 %106, 23
  br i1 %149, label %159, label %150

150:                                              ; preds = %148
  %151 = add nuw i64 %106, 16
  %152 = and i64 %151, -16
  %153 = call i8* @_Znwm(i64 %152) #17
  %154 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %153, i8** %154, align 8, !alias.scope !27
  %155 = or i64 %152, -9223372036854775808
  %156 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %155, i64* %156, align 8, !alias.scope !27
  %157 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %106, i64* %157, align 8, !alias.scope !27
  %158 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %164

159:                                              ; preds = %148
  %160 = trunc i64 %106 to i8
  %161 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %162 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %161, i64 0, i32 1, i32 0
  store i8 %160, i8* %162, align 1, !alias.scope !27
  %163 = icmp eq i64 %106, 0
  br i1 %163, label %167, label %164

164:                                              ; preds = %159, %150
  %165 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %161, %159 ], [ %158, %150 ]
  %166 = phi i8* [ %144, %159 ], [ %153, %150 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %166, i8* align 1 %105, i64 %106, i1 false) #16
  br label %167

167:                                              ; preds = %159, %164
  %168 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %161, %159 ], [ %165, %164 ]
  %169 = phi i8* [ %144, %159 ], [ %166, %164 ]
  %170 = getelementptr inbounds i8, i8* %169, i64 %106
  store i8 0, i8* %170, align 1
  call void @_ZN3net12CertVerifier13RequestParamsC1E13scoped_refptrINS_15X509CertificateEERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEiSD_SD_(%"class.net::CertVerifier::RequestParams"* nonnull %11, %"class.net::X509Certificate"* %112, %"class.std::__1::basic_string"* dereferenceable(24) %118, i32 %119, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %12, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %13) #16
  %171 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 15
  %172 = ptrtoint %"class.net::SSLClientSocketImpl"* %0 to i64
  %173 = call i8* @_Znwm(i64 56) #17, !noalias !30
  %174 = bitcast i8* %173 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %174, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net19SSLClientSocketImplEFviEJNS0_17UnretainedWrapperIS4_EEEEEFviEE7RunOnceEPNS0_13BindStateBaseEi to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net19SSLClientSocketImplEFviEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #16, !noalias !30
  %175 = getelementptr inbounds i8, i8* %173, i64 32
  %176 = bitcast i8* %175 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::SSLClientSocketImpl"*, i32)* @_ZN3net19SSLClientSocketImpl16OnVerifyCompleteEi to i64), i64 0>, <2 x i64>* %176, align 8, !noalias !30
  %177 = getelementptr inbounds i8, i8* %173, i64 48
  %178 = bitcast i8* %177 to i64*
  store i64 %172, i64* %178, align 8, !noalias !30
  %179 = bitcast %"class.base::OnceCallback"* %14 to i8**
  store i8* %173, i8** %179, align 8, !alias.scope !30
  %180 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 19
  %181 = bitcast %"class.net::CertVerifier"* %110 to i32 (%"class.net::CertVerifier"*, %"class.net::CertVerifier::RequestParams"*, %"class.net::CertVerifyResult"*, %"class.base::OnceCallback"*, %"class.std::__1::unique_ptr.157"*, %"class.net::NetLogWithSource"*)***
  %182 = load i32 (%"class.net::CertVerifier"*, %"class.net::CertVerifier::RequestParams"*, %"class.net::CertVerifyResult"*, %"class.base::OnceCallback"*, %"class.std::__1::unique_ptr.157"*, %"class.net::NetLogWithSource"*)**, i32 (%"class.net::CertVerifier"*, %"class.net::CertVerifier::RequestParams"*, %"class.net::CertVerifyResult"*, %"class.base::OnceCallback"*, %"class.std::__1::unique_ptr.157"*, %"class.net::NetLogWithSource"*)*** %181, align 8
  %183 = getelementptr inbounds i32 (%"class.net::CertVerifier"*, %"class.net::CertVerifier::RequestParams"*, %"class.net::CertVerifyResult"*, %"class.base::OnceCallback"*, %"class.std::__1::unique_ptr.157"*, %"class.net::NetLogWithSource"*)*, i32 (%"class.net::CertVerifier"*, %"class.net::CertVerifier::RequestParams"*, %"class.net::CertVerifyResult"*, %"class.base::OnceCallback"*, %"class.std::__1::unique_ptr.157"*, %"class.net::NetLogWithSource"*)** %182, i64 2
  %184 = load i32 (%"class.net::CertVerifier"*, %"class.net::CertVerifier::RequestParams"*, %"class.net::CertVerifyResult"*, %"class.base::OnceCallback"*, %"class.std::__1::unique_ptr.157"*, %"class.net::NetLogWithSource"*)*, i32 (%"class.net::CertVerifier"*, %"class.net::CertVerifier::RequestParams"*, %"class.net::CertVerifyResult"*, %"class.base::OnceCallback"*, %"class.std::__1::unique_ptr.157"*, %"class.net::NetLogWithSource"*)** %183, align 8
  %185 = call i32 %184(%"class.net::CertVerifier"* %110, %"class.net::CertVerifier::RequestParams"* nonnull dereferenceable(112) %11, %"class.net::CertVerifyResult"* %171, %"class.base::OnceCallback"* nonnull %14, %"class.std::__1::unique_ptr.157"* %180, %"class.net::NetLogWithSource"* dereferenceable(24) %51) #16
  store i32 %185, i32* %15, align 8
  %186 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %14, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %186) #16
  call void @_ZN3net12CertVerifier13RequestParamsD1Ev(%"class.net::CertVerifier::RequestParams"* nonnull %11) #16
  %187 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %168, i64 0, i32 1, i32 0
  %188 = load i8, i8* %187, align 1
  %189 = icmp slt i8 %188, 0
  br i1 %189, label %190, label %193

190:                                              ; preds = %167
  %191 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %192 = load i8*, i8** %191, align 8
  call void @_ZdlPv(i8* %192) #17
  br label %193

193:                                              ; preds = %167, %190
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %144) #16
  %194 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %195 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %194, i64 0, i32 1, i32 0
  %196 = load i8, i8* %195, align 1
  %197 = icmp slt i8 %196, 0
  br i1 %197, label %198, label %201

198:                                              ; preds = %193
  %199 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %200 = load i8*, i8** %199, align 8
  call void @_ZdlPv(i8* %200) #17
  br label %201

201:                                              ; preds = %193, %198
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %120) #16
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %111) #16
  %202 = call i32 @_ZN3net19SSLClientSocketImpl18HandleVerifyResultEv(%"class.net::SSLClientSocketImpl"* %0)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %103) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %98) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97) #16
  br label %203

203:                                              ; preds = %201, %92
  %204 = phi i32 [ %93, %92 ], [ %202, %201 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %67) #16
  br label %205

205:                                              ; preds = %203, %48, %18
  %206 = phi i32 [ %19, %18 ], [ %204, %203 ], [ 1, %48 ]
  ret i32 %206
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net19SSLClientSocketImpl18HandleVerifyResultEv(%"class.net::SSLClientSocketImpl"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::TimeDelta", align 8
  %3 = alloca %"class.base::Location", align 8
  %4 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 21
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, -1
  br i1 %6, label %132, label %7

7:                                                ; preds = %1
  store i32 1, i32* %4, align 8
  %8 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 19, i32 0, i32 0, i32 0
  %9 = load %"class.net::CertVerifier::Request"*, %"class.net::CertVerifier::Request"** %8, align 8
  store %"class.net::CertVerifier::Request"* null, %"class.net::CertVerifier::Request"** %8, align 8
  %10 = icmp eq %"class.net::CertVerifier::Request"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = bitcast %"class.net::CertVerifier::Request"* %9 to void (%"class.net::CertVerifier::Request"*)***
  %13 = load void (%"class.net::CertVerifier::Request"*)**, void (%"class.net::CertVerifier::Request"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.net::CertVerifier::Request"*)*, void (%"class.net::CertVerifier::Request"*)** %13, i64 1
  %15 = load void (%"class.net::CertVerifier::Request"*)*, void (%"class.net::CertVerifier::Request"*)** %14, align 8
  tail call void %15(%"class.net::CertVerifier::Request"* nonnull %9) #16
  br label %16

16:                                               ; preds = %7, %11
  %17 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 20, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %43, label %20

20:                                               ; preds = %16
  %21 = bitcast %"class.base::TimeDelta"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #16
  %22 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %2, i64 0, i32 0
  %23 = tail call i64 @_ZN4base9TimeTicks3NowEv() #16
  %24 = load i64, i64* %17, align 8
  %25 = sub nsw i64 %23, %24
  store i64 %25, i64* %22, align 8
  %26 = icmp eq i32 %5, 0
  br i1 %26, label %27, label %34

27:                                               ; preds = %20
  %28 = load atomic i64, i64* @_ZZN3net19SSLClientSocketImpl18HandleVerifyResultEvE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %29 = inttoptr i64 %28 to %"class.base::HistogramBase"*
  %30 = icmp eq i64 %28, 0
  br i1 %30, label %31, label %41

31:                                               ; preds = %27
  %32 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.26, i64 0, i64 0), i64 1000, i64 10000000, i32 50, i32 1) #16
  %33 = ptrtoint %"class.base::HistogramBase"* %32 to i64
  store atomic i64 %33, i64* @_ZZN3net19SSLClientSocketImpl18HandleVerifyResultEvE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %41

34:                                               ; preds = %20
  %35 = load atomic i64, i64* @_ZZN3net19SSLClientSocketImpl18HandleVerifyResultEvE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %36 = inttoptr i64 %35 to %"class.base::HistogramBase"*
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %34
  %39 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.27, i64 0, i64 0), i64 1000, i64 10000000, i32 50, i32 1) #16
  %40 = ptrtoint %"class.base::HistogramBase"* %39 to i64
  store atomic i64 %40, i64* @_ZZN3net19SSLClientSocketImpl18HandleVerifyResultEvE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %41

41:                                               ; preds = %38, %34, %31, %27
  %42 = phi %"class.base::HistogramBase"* [ %29, %27 ], [ %32, %31 ], [ %36, %34 ], [ %39, %38 ]
  call void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"* %42, %"class.base::TimeDelta"* nonnull dereferenceable(8) %2) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #16
  br label %43

43:                                               ; preds = %41, %16
  %44 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 15, i32 11
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 22, i32 0, i32 0, i32 0
  %49 = load %struct.ssl_st*, %struct.ssl_st** %48, align 8
  call void @SSL_set_enforce_rsa_key_usage(%struct.ssl_st* %49, i32 1) #16
  br label %50

50:                                               ; preds = %43, %47
  %51 = icmp eq i32 %5, 0
  br i1 %51, label %52, label %101

52:                                               ; preds = %50
  %53 = call i32 @_ZN3net19SSLClientSocketImpl17CheckCTComplianceEv(%"class.net::SSLClientSocketImpl"* %0)
  %54 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 18
  %55 = load %"class.net::SSLClientContext"*, %"class.net::SSLClientContext"** %54, align 8
  %56 = getelementptr inbounds %"class.net::SSLClientContext", %"class.net::SSLClientContext"* %55, i64 0, i32 5
  %57 = load %"class.net::TransportSecurityState"*, %"class.net::TransportSecurityState"** %56, align 8
  %58 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 25
  %59 = load i8, i8* %44, align 8, !range !2
  %60 = icmp ne i8 %59, 0
  %61 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 15, i32 10
  %62 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 14, i32 0
  %63 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %62, align 8
  %64 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 15, i32 2, i32 0
  %65 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %64, align 8
  %66 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 26, i32 15
  %67 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 35
  %68 = call i32 @_ZN3net22TransportSecurityState18CheckPublicKeyPinsERKNS_12HostPortPairEbRKNSt3__16vectorINS_9HashValueENS4_9allocatorIS6_EEEEPKNS_15X509CertificateESE_NS0_24PublicKeyPinReportStatusERKNS_19NetworkIsolationKeyEPNS4_12basic_stringIcNS4_11char_traitsIcEENS7_IcEEEE(%"class.net::TransportSecurityState"* %57, %"class.net::HostPortPair"* dereferenceable(32) %58, i1 zeroext %60, %"class.std::__1::vector.29"* dereferenceable(24) %61, %"class.net::X509Certificate"* %63, %"class.net::X509Certificate"* %65, i32 0, %"class.net::NetworkIsolationKey"* dereferenceable(184) %66, %"class.std::__1::basic_string"* %67) #16
  switch i32 %68, label %75 [
    i32 0, label %69
    i32 2, label %73
  ]

69:                                               ; preds = %52
  %70 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 15, i32 3
  %71 = load i32, i32* %70, align 8
  %72 = or i32 %71, 8192
  store i32 %72, i32* %70, align 8
  br label %75

73:                                               ; preds = %52
  %74 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 36
  store i8 1, i8* %74, align 8
  br label %75

75:                                               ; preds = %69, %73, %52
  %76 = phi i32 [ 0, %52 ], [ 0, %73 ], [ -150, %69 ]
  %77 = icmp ne i32 %76, -150
  %78 = icmp ne i32 %53, 0
  %79 = and i1 %78, %77
  %80 = select i1 %79, i32 %53, i32 %76
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %101

82:                                               ; preds = %75
  %83 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 22, i32 0, i32 0, i32 0
  %84 = load %struct.ssl_st*, %struct.ssl_st** %83, align 8
  %85 = call i32 @SSL_version(%struct.ssl_st* %84) #16
  %86 = load %"class.net::SSLClientContext"*, %"class.net::SSLClientContext"** %54, align 8
  %87 = getelementptr inbounds %"class.net::SSLClientContext", %"class.net::SSLClientContext"* %86, i64 0, i32 2, i32 1
  %88 = load i16, i16* %87, align 2
  %89 = zext i16 %88 to i32
  %90 = icmp slt i32 %85, %89
  br i1 %90, label %91, label %101

91:                                               ; preds = %82
  %92 = call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN3net8features18kLegacyTLSEnforcedE) #16
  br i1 %92, label %93, label %101

93:                                               ; preds = %91
  %94 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 15, i32 3
  %95 = load i32, i32* %94, align 8
  %96 = or i32 %95, 134217728
  store i32 %96, i32* %94, align 8
  %97 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 26
  %98 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %62, align 8
  %99 = call zeroext i1 @_ZNK3net9SSLConfig16IsAllowedBadCertEPNS_15X509CertificateEPj(%"struct.net::SSLConfig"* %97, %"class.net::X509Certificate"* %98, i32* null) #16
  %100 = select i1 %99, i32 0, i32 -218
  br label %101

101:                                              ; preds = %50, %93, %91, %82, %75
  %102 = phi i32 [ 0, %91 ], [ 0, %82 ], [ %80, %75 ], [ %100, %93 ], [ %5, %50 ]
  %103 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 15, i32 3
  %104 = load i32, i32* %103, align 8
  %105 = and i32 %104, -16711681
  %106 = icmp ne i32 %105, 0
  %107 = or i32 %102, 1
  %108 = icmp ne i32 %107, -217
  %109 = and i1 %108, %106
  br i1 %109, label %110, label %118

110:                                              ; preds = %101
  %111 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 18
  %112 = load %"class.net::SSLClientContext"*, %"class.net::SSLClientContext"** %111, align 8
  %113 = getelementptr inbounds %"class.net::SSLClientContext", %"class.net::SSLClientContext"* %112, i64 0, i32 5
  %114 = load %"class.net::TransportSecurityState"*, %"class.net::TransportSecurityState"** %113, align 8
  %115 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 25, i32 0
  %116 = call zeroext i1 @_ZN3net22TransportSecurityState22ShouldSSLErrorsBeFatalERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.net::TransportSecurityState"* %114, %"class.std::__1::basic_string"* dereferenceable(24) %115) #16
  %117 = zext i1 %116 to i8
  br label %118

118:                                              ; preds = %110, %101
  %119 = phi i8 [ 0, %101 ], [ %117, %110 ]
  %120 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 37
  store i8 %119, i8* %120, align 1
  %121 = call zeroext i1 @_ZN3net18IsCertificateErrorEi(i32 %102) #16
  br i1 %121, label %122, label %128

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 26, i32 7
  %124 = load i8, i8* %123, align 8, !range !2
  %125 = icmp ne i8 %124, 0
  %126 = icmp eq i32 %102, 0
  %127 = or i1 %126, %125
  br i1 %127, label %132, label %130

128:                                              ; preds = %118
  %129 = icmp eq i32 %102, 0
  br i1 %129, label %132, label %130

130:                                              ; preds = %122, %128
  %131 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %131) #16
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str, i64 0, i64 0), i32 1271) #16
  call void @_ZN3net18OpenSSLPutNetErrorERKN4base8LocationEi(%"class.base::Location"* nonnull dereferenceable(32) %3, i32 %102) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %131) #16
  br label %132

132:                                              ; preds = %122, %130, %128, %1
  %133 = phi i32 [ 2, %1 ], [ 1, %130 ], [ 0, %128 ], [ 0, %122 ]
  ret i32 %133
}

declare %"class.net::X509Certificate"* @_ZN3net9x509_util32CreateX509CertificateFromBuffersEPK22stack_st_CRYPTO_BUFFER(%struct.stack_st_CRYPTO_BUFFER*) local_unnamed_addr #1

declare void @_ZN3net18OpenSSLPutNetErrorERKN4base8LocationEi(%"class.base::Location"* dereferenceable(32), i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK3net9SSLConfig16IsAllowedBadCertEPNS_15X509CertificateEPj(%"struct.net::SSLConfig"*, %"class.net::X509Certificate"*, i32*) local_unnamed_addr #1

declare void @_ZN3net16CertVerifyResult5ResetEv(%"class.net::CertVerifyResult"*) local_unnamed_addr #1

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #1

declare i32 @_ZNK3net9SSLConfig18GetCertVerifyFlagsEv(%"struct.net::SSLConfig"*) local_unnamed_addr #1

declare void @_ZN3net12CertVerifier13RequestParamsC1E13scoped_refptrINS_15X509CertificateEERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEiSD_SD_(%"class.net::CertVerifier::RequestParams"*, %"class.net::X509Certificate"*, %"class.std::__1::basic_string"* dereferenceable(24), i32, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19SSLClientSocketImpl16OnVerifyCompleteEi(%"class.net::SSLClientSocketImpl"*, i32) #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 21
  store i32 %1, i32* %4, align 8
  %5 = tail call i32 @_ZN3net19SSLClientSocketImpl15DoHandshakeLoopEi(%"class.net::SSLClientSocketImpl"* %0, i32 0) #16
  %6 = icmp eq i32 %5, -1
  br i1 %6, label %28, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 28
  %9 = load i8, i8* %8, align 4, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  store i8 0, i8* %8, align 4
  %12 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 41
  tail call void @_ZNK3net16NetLogWithSource8EndEventENS_15NetLogEventTypeE(%"class.net::NetLogWithSource"* %12, i32 59) #16
  br label %14

13:                                               ; preds = %7
  tail call void @_ZN3net19SSLClientSocketImpl18LogConnectEndEventEi(%"class.net::SSLClientSocketImpl"* %0, i32 %5) #16
  br label %14

14:                                               ; preds = %13, %11
  %15 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %16 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %15, align 8
  %17 = icmp eq %"class.base::internal::BindStateBase"* %16, null
  br i1 %17, label %28, label %18

18:                                               ; preds = %14
  %19 = ptrtoint %"class.base::internal::BindStateBase"* %16 to i64
  %20 = icmp slt i32 %5, 0
  %21 = select i1 %20, i32 %5, i32 0
  %22 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #16
  %23 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %19, i64* %23, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %15, align 8
  %24 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %25 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %16, i64 0, i32 1
  %26 = bitcast void ()** %25 to void (%"class.base::internal::BindStateBase"*, i32)**
  %27 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %26, align 8
  tail call void %27(%"class.base::internal::BindStateBase"* nonnull %16, i32 %21) #16
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %24) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #16
  br label %28

28:                                               ; preds = %2, %14, %18
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3net12CertVerifier13RequestParamsD1Ev(%"class.net::CertVerifier::RequestParams"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19SSLClientSocketImpl21OnHandshakeIOCompleteEi(%"class.net::SSLClientSocketImpl"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = tail call i32 @_ZN3net19SSLClientSocketImpl15DoHandshakeLoopEi(%"class.net::SSLClientSocketImpl"* %0, i32 %1)
  %5 = icmp eq i32 %4, -1
  br i1 %5, label %27, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 28
  %8 = load i8, i8* %7, align 4, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %6
  store i8 0, i8* %7, align 4
  %11 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 41
  tail call void @_ZNK3net16NetLogWithSource8EndEventENS_15NetLogEventTypeE(%"class.net::NetLogWithSource"* %11, i32 59) #16
  br label %13

12:                                               ; preds = %6
  tail call void @_ZN3net19SSLClientSocketImpl18LogConnectEndEventEi(%"class.net::SSLClientSocketImpl"* %0, i32 %4)
  br label %13

13:                                               ; preds = %12, %10
  %14 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %15 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %14, align 8
  %16 = icmp eq %"class.base::internal::BindStateBase"* %15, null
  br i1 %16, label %27, label %17

17:                                               ; preds = %13
  %18 = ptrtoint %"class.base::internal::BindStateBase"* %15 to i64
  %19 = icmp slt i32 %4, 0
  %20 = select i1 %19, i32 %4, i32 0
  %21 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #16
  %22 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %18, i64* %22, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %14, align 8
  %23 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %24 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %15, i64 0, i32 1
  %25 = bitcast void ()** %24 to void (%"class.base::internal::BindStateBase"*, i32)**
  %26 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %25, align 8
  tail call void %26(%"class.base::internal::BindStateBase"* nonnull %15, i32 %20) #16
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %23) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #16
  br label %27

27:                                               ; preds = %17, %13, %2
  ret void
}

declare %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8*, i64, i64, i32, i32) local_unnamed_addr #1

declare void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"*, %"class.base::TimeDelta"* dereferenceable(8)) local_unnamed_addr #1

declare void @SSL_set_enforce_rsa_key_usage(%struct.ssl_st*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net19SSLClientSocketImpl17CheckCTComplianceEv(%"class.net::SSLClientSocketImpl"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::vector.305", align 8
  %3 = bitcast %"class.std::__1::vector.305"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #16
  %4 = getelementptr inbounds %"class.std::__1::vector.305", %"class.std::__1::vector.305"* %2, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::vector.305", %"class.std::__1::vector.305"* %2, i64 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.std::__1::vector.305", %"class.std::__1::vector.305"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 0, i64 24, i1 false) #16
  %7 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 15, i32 16
  %8 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %7, i64 0, i32 0, i32 0
  %9 = load %"struct.net::SignedCertificateTimestampAndStatus"*, %"struct.net::SignedCertificateTimestampAndStatus"** %8, align 8
  %10 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 15, i32 16, i32 0, i32 1
  %11 = load %"struct.net::SignedCertificateTimestampAndStatus"*, %"struct.net::SignedCertificateTimestampAndStatus"** %10, align 8
  %12 = icmp eq %"struct.net::SignedCertificateTimestampAndStatus"* %9, %11
  br i1 %12, label %15, label %13

13:                                               ; preds = %1
  %14 = bitcast %class.scoped_refptr.39** %5 to i64*
  br label %33

15:                                               ; preds = %55, %1
  %16 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 18
  %17 = load %"class.net::SSLClientContext"*, %"class.net::SSLClientContext"** %16, align 8
  %18 = getelementptr inbounds %"class.net::SSLClientContext", %"class.net::SSLClientContext"* %17, i64 0, i32 6
  %19 = load %"class.net::CTPolicyEnforcer"*, %"class.net::CTPolicyEnforcer"** %18, align 8
  %20 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 15, i32 2, i32 0
  %21 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %20, align 8
  %22 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 41
  %23 = bitcast %"class.net::CTPolicyEnforcer"* %19 to i32 (%"class.net::CTPolicyEnforcer"*, %"class.net::X509Certificate"*, %"class.std::__1::vector.305"*, %"class.net::NetLogWithSource"*)***
  %24 = load i32 (%"class.net::CTPolicyEnforcer"*, %"class.net::X509Certificate"*, %"class.std::__1::vector.305"*, %"class.net::NetLogWithSource"*)**, i32 (%"class.net::CTPolicyEnforcer"*, %"class.net::X509Certificate"*, %"class.std::__1::vector.305"*, %"class.net::NetLogWithSource"*)*** %23, align 8
  %25 = getelementptr inbounds i32 (%"class.net::CTPolicyEnforcer"*, %"class.net::X509Certificate"*, %"class.std::__1::vector.305"*, %"class.net::NetLogWithSource"*)*, i32 (%"class.net::CTPolicyEnforcer"*, %"class.net::X509Certificate"*, %"class.std::__1::vector.305"*, %"class.net::NetLogWithSource"*)** %24, i64 2
  %26 = load i32 (%"class.net::CTPolicyEnforcer"*, %"class.net::X509Certificate"*, %"class.std::__1::vector.305"*, %"class.net::NetLogWithSource"*)*, i32 (%"class.net::CTPolicyEnforcer"*, %"class.net::X509Certificate"*, %"class.std::__1::vector.305"*, %"class.net::NetLogWithSource"*)** %25, align 8
  %27 = call i32 %26(%"class.net::CTPolicyEnforcer"* %19, %"class.net::X509Certificate"* %21, %"class.std::__1::vector.305"* nonnull dereferenceable(24) %2, %"class.net::NetLogWithSource"* dereferenceable(24) %22) #16
  %28 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 15, i32 17
  store i32 %27, i32* %28, align 8
  %29 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 15, i32 3
  %30 = load i32, i32* %29, align 8
  %31 = and i32 %30, 65536
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %80, label %58

33:                                               ; preds = %13, %55
  %34 = phi %"struct.net::SignedCertificateTimestampAndStatus"* [ %9, %13 ], [ %56, %55 ]
  %35 = getelementptr inbounds %"struct.net::SignedCertificateTimestampAndStatus", %"struct.net::SignedCertificateTimestampAndStatus"* %34, i64 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = icmp eq i32 %36, 3
  br i1 %37, label %38, label %55

38:                                               ; preds = %33
  %39 = load %class.scoped_refptr.39*, %class.scoped_refptr.39** %5, align 8
  %40 = load %class.scoped_refptr.39*, %class.scoped_refptr.39** %6, align 8
  %41 = icmp eq %class.scoped_refptr.39* %39, %40
  br i1 %41, label %53, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"struct.net::SignedCertificateTimestampAndStatus", %"struct.net::SignedCertificateTimestampAndStatus"* %34, i64 0, i32 0, i32 0
  %44 = load %"struct.net::ct::SignedCertificateTimestamp"*, %"struct.net::ct::SignedCertificateTimestamp"** %43, align 8
  %45 = getelementptr inbounds %class.scoped_refptr.39, %class.scoped_refptr.39* %39, i64 0, i32 0
  store %"struct.net::ct::SignedCertificateTimestamp"* %44, %"struct.net::ct::SignedCertificateTimestamp"** %45, align 8
  %46 = icmp eq %"struct.net::ct::SignedCertificateTimestamp"* %44, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = atomicrmw add i32* %48, i32 1 monotonic
  br label %50

50:                                               ; preds = %47, %42
  %51 = getelementptr inbounds %class.scoped_refptr.39, %class.scoped_refptr.39* %39, i64 1
  %52 = ptrtoint %class.scoped_refptr.39* %51 to i64
  store i64 %52, i64* %14, align 8
  br label %55

53:                                               ; preds = %38
  %54 = getelementptr inbounds %"struct.net::SignedCertificateTimestampAndStatus", %"struct.net::SignedCertificateTimestampAndStatus"* %34, i64 0, i32 0
  call void @_ZNSt3__16vectorI13scoped_refptrIN3net2ct26SignedCertificateTimestampEENS_9allocatorIS5_EEE21__push_back_slow_pathIRKS5_EEvOT_(%"class.std::__1::vector.305"* nonnull %2, %class.scoped_refptr.39* dereferenceable(8) %54) #16
  br label %55

55:                                               ; preds = %53, %50, %33
  %56 = getelementptr inbounds %"struct.net::SignedCertificateTimestampAndStatus", %"struct.net::SignedCertificateTimestampAndStatus"* %34, i64 1
  %57 = icmp eq %"struct.net::SignedCertificateTimestampAndStatus"* %56, %11
  br i1 %57, label %15, label %33

58:                                               ; preds = %15
  switch i32 %27, label %59 [
    i32 0, label %62
    i32 3, label %62
  ]

59:                                               ; preds = %58
  %60 = and i32 %30, -1114113
  %61 = or i32 %60, 1048576
  store i32 %61, i32* %29, align 8
  br label %62

62:                                               ; preds = %58, %58, %59
  %63 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 15, i32 11
  %64 = load i8, i8* %63, align 8, !range !2
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %80, label %66

66:                                               ; preds = %62
  %67 = load atomic i64, i64* @_ZZN3net19SSLClientSocketImpl17CheckCTComplianceEvE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %68 = inttoptr i64 %67 to %"class.base::HistogramBase"*
  %69 = icmp eq i64 %67, 0
  br i1 %69, label %70, label %73

70:                                               ; preds = %66
  %71 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.29, i64 0, i64 0), i32 1, i32 5, i32 6, i32 1) #16
  %72 = ptrtoint %"class.base::HistogramBase"* %71 to i64
  store atomic i64 %72, i64* @_ZZN3net19SSLClientSocketImpl17CheckCTComplianceEvE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %73

73:                                               ; preds = %66, %70
  %74 = phi %"class.base::HistogramBase"* [ %68, %66 ], [ %71, %70 ]
  %75 = load i32, i32* %28, align 8
  %76 = bitcast %"class.base::HistogramBase"* %74 to void (%"class.base::HistogramBase"*, i32)***
  %77 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %77, i64 6
  %79 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %78, align 8
  call void %79(%"class.base::HistogramBase"* %74, i32 %75) #16
  br label %80

80:                                               ; preds = %62, %15, %73
  %81 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 15, i32 11
  %82 = load i8, i8* %81, align 8, !range !2
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %100, label %84

84:                                               ; preds = %80
  %85 = load atomic i64, i64* @_ZZN3net19SSLClientSocketImpl17CheckCTComplianceEvE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %86 = inttoptr i64 %85 to %"class.base::HistogramBase"*
  %87 = icmp eq i64 %85, 0
  br i1 %87, label %88, label %91

88:                                               ; preds = %84
  %89 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.30, i64 0, i64 0), i32 1, i32 5, i32 6, i32 1) #16
  %90 = ptrtoint %"class.base::HistogramBase"* %89 to i64
  store atomic i64 %90, i64* @_ZZN3net19SSLClientSocketImpl17CheckCTComplianceEvE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %91

91:                                               ; preds = %84, %88
  %92 = phi %"class.base::HistogramBase"* [ %86, %84 ], [ %89, %88 ]
  %93 = load i32, i32* %28, align 8
  %94 = bitcast %"class.base::HistogramBase"* %92 to void (%"class.base::HistogramBase"*, i32)***
  %95 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %94, align 8
  %96 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %95, i64 6
  %97 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %96, align 8
  call void %97(%"class.base::HistogramBase"* %92, i32 %93) #16
  %98 = load i8, i8* %81, align 8, !range !2
  %99 = icmp ne i8 %98, 0
  br label %100

100:                                              ; preds = %80, %91
  %101 = phi i1 [ false, %80 ], [ %99, %91 ]
  %102 = load %"class.net::SSLClientContext"*, %"class.net::SSLClientContext"** %16, align 8
  %103 = getelementptr inbounds %"class.net::SSLClientContext", %"class.net::SSLClientContext"* %102, i64 0, i32 5
  %104 = load %"class.net::TransportSecurityState"*, %"class.net::TransportSecurityState"** %103, align 8
  %105 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 25
  %106 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 15, i32 10
  %107 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %20, align 8
  %108 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 14, i32 0
  %109 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %108, align 8
  %110 = load i32, i32* %28, align 8
  %111 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 26, i32 15
  %112 = call i32 @_ZN3net22TransportSecurityState19CheckCTRequirementsERKNS_12HostPortPairEbRKNSt3__16vectorINS_9HashValueENS4_9allocatorIS6_EEEEPKNS_15X509CertificateESE_RKNS5_INS_35SignedCertificateTimestampAndStatusENS7_ISF_EEEENS0_20ExpectCTReportStatusENS_2ct18CTPolicyComplianceERKNS_19NetworkIsolationKeyE(%"class.net::TransportSecurityState"* %104, %"class.net::HostPortPair"* dereferenceable(32) %105, i1 zeroext %101, %"class.std::__1::vector.29"* dereferenceable(24) %106, %"class.net::X509Certificate"* %107, %"class.net::X509Certificate"* %109, %"class.std::__1::vector.37"* dereferenceable(24) %7, i32 0, i32 %110, %"class.net::NetworkIsolationKey"* dereferenceable(184) %111) #16
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %131, label %114

114:                                              ; preds = %100
  %115 = load i8, i8* %81, align 8, !range !2
  %116 = icmp eq i8 %115, 0
  br i1 %116, label %131, label %117

117:                                              ; preds = %114
  %118 = load atomic i64, i64* @_ZZN3net19SSLClientSocketImpl17CheckCTComplianceEvE24atomic_histogram_pointer_1.0.0.0.0.0 acquire, align 8
  %119 = inttoptr i64 %118 to %"class.base::HistogramBase"*
  %120 = icmp eq i64 %118, 0
  br i1 %120, label %121, label %124

121:                                              ; preds = %117
  %122 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.31, i64 0, i64 0), i32 1, i32 5, i32 6, i32 1) #16
  %123 = ptrtoint %"class.base::HistogramBase"* %122 to i64
  store atomic i64 %123, i64* @_ZZN3net19SSLClientSocketImpl17CheckCTComplianceEvE24atomic_histogram_pointer_1.0.0.0.0.0 release, align 8
  br label %124

124:                                              ; preds = %117, %121
  %125 = phi %"class.base::HistogramBase"* [ %119, %117 ], [ %122, %121 ]
  %126 = load i32, i32* %28, align 8
  %127 = bitcast %"class.base::HistogramBase"* %125 to void (%"class.base::HistogramBase"*, i32)***
  %128 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %127, align 8
  %129 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %128, i64 6
  %130 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %129, align 8
  call void %130(%"class.base::HistogramBase"* %125, i32 %126) #16
  br label %131

131:                                              ; preds = %114, %100, %124
  %132 = load %"class.net::SSLClientContext"*, %"class.net::SSLClientContext"** %16, align 8
  %133 = getelementptr inbounds %"class.net::SSLClientContext", %"class.net::SSLClientContext"* %132, i64 0, i32 8
  %134 = load %"class.net::SCTAuditingDelegate"*, %"class.net::SCTAuditingDelegate"** %133, align 8
  %135 = icmp eq %"class.net::SCTAuditingDelegate"* %134, null
  br i1 %135, label %151, label %136

136:                                              ; preds = %131
  %137 = bitcast %"class.net::SCTAuditingDelegate"* %134 to i1 (%"class.net::SCTAuditingDelegate"*)***
  %138 = load i1 (%"class.net::SCTAuditingDelegate"*)**, i1 (%"class.net::SCTAuditingDelegate"*)*** %137, align 8
  %139 = getelementptr inbounds i1 (%"class.net::SCTAuditingDelegate"*)*, i1 (%"class.net::SCTAuditingDelegate"*)** %138, i64 3
  %140 = load i1 (%"class.net::SCTAuditingDelegate"*)*, i1 (%"class.net::SCTAuditingDelegate"*)** %139, align 8
  %141 = call zeroext i1 %140(%"class.net::SCTAuditingDelegate"* nonnull %134) #16
  br i1 %141, label %142, label %151

142:                                              ; preds = %136
  %143 = load %"class.net::SSLClientContext"*, %"class.net::SSLClientContext"** %16, align 8
  %144 = getelementptr inbounds %"class.net::SSLClientContext", %"class.net::SSLClientContext"* %143, i64 0, i32 8
  %145 = load %"class.net::SCTAuditingDelegate"*, %"class.net::SCTAuditingDelegate"** %144, align 8
  %146 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %20, align 8
  %147 = bitcast %"class.net::SCTAuditingDelegate"* %145 to void (%"class.net::SCTAuditingDelegate"*, %"class.net::HostPortPair"*, %"class.net::X509Certificate"*, %"class.std::__1::vector.37"*)***
  %148 = load void (%"class.net::SCTAuditingDelegate"*, %"class.net::HostPortPair"*, %"class.net::X509Certificate"*, %"class.std::__1::vector.37"*)**, void (%"class.net::SCTAuditingDelegate"*, %"class.net::HostPortPair"*, %"class.net::X509Certificate"*, %"class.std::__1::vector.37"*)*** %147, align 8
  %149 = getelementptr inbounds void (%"class.net::SCTAuditingDelegate"*, %"class.net::HostPortPair"*, %"class.net::X509Certificate"*, %"class.std::__1::vector.37"*)*, void (%"class.net::SCTAuditingDelegate"*, %"class.net::HostPortPair"*, %"class.net::X509Certificate"*, %"class.std::__1::vector.37"*)** %148, i64 2
  %150 = load void (%"class.net::SCTAuditingDelegate"*, %"class.net::HostPortPair"*, %"class.net::X509Certificate"*, %"class.std::__1::vector.37"*)*, void (%"class.net::SCTAuditingDelegate"*, %"class.net::HostPortPair"*, %"class.net::X509Certificate"*, %"class.std::__1::vector.37"*)** %149, align 8
  call void %150(%"class.net::SCTAuditingDelegate"* %145, %"class.net::HostPortPair"* dereferenceable(32) %105, %"class.net::X509Certificate"* %146, %"class.std::__1::vector.37"* dereferenceable(24) %7) #16
  br label %151

151:                                              ; preds = %131, %142, %136
  %152 = icmp eq i32 %112, 2
  br i1 %152, label %153, label %156

153:                                              ; preds = %151
  %154 = load i32, i32* %29, align 8
  %155 = or i32 %154, 16777216
  store i32 %155, i32* %29, align 8
  br label %156

156:                                              ; preds = %151, %153
  %157 = phi i32 [ -214, %153 ], [ 0, %151 ]
  %158 = load %class.scoped_refptr.39*, %class.scoped_refptr.39** %4, align 8
  %159 = icmp eq %class.scoped_refptr.39* %158, null
  br i1 %159, label %183, label %160

160:                                              ; preds = %156
  %161 = bitcast %class.scoped_refptr.39* %158 to i8*
  %162 = load %class.scoped_refptr.39*, %class.scoped_refptr.39** %5, align 8
  %163 = icmp eq %class.scoped_refptr.39* %162, %158
  br i1 %163, label %181, label %164

164:                                              ; preds = %160, %176
  %165 = phi %class.scoped_refptr.39* [ %166, %176 ], [ %162, %160 ]
  %166 = getelementptr inbounds %class.scoped_refptr.39, %class.scoped_refptr.39* %165, i64 -1
  %167 = getelementptr inbounds %class.scoped_refptr.39, %class.scoped_refptr.39* %166, i64 0, i32 0
  %168 = load %"struct.net::ct::SignedCertificateTimestamp"*, %"struct.net::ct::SignedCertificateTimestamp"** %167, align 8
  %169 = icmp eq %"struct.net::ct::SignedCertificateTimestamp"* %168, null
  br i1 %169, label %176, label %170

170:                                              ; preds = %164
  %171 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %168, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %172 = atomicrmw sub i32* %171, i32 1 acq_rel
  %173 = icmp eq i32 %172, 1
  br i1 %173, label %174, label %176

174:                                              ; preds = %170
  call void @_ZN3net2ct26SignedCertificateTimestampD1Ev(%"struct.net::ct::SignedCertificateTimestamp"* nonnull %168) #16
  %175 = bitcast %"struct.net::ct::SignedCertificateTimestamp"* %168 to i8*
  call void @_ZdlPv(i8* %175) #17
  br label %176

176:                                              ; preds = %174, %170, %164
  %177 = icmp eq %class.scoped_refptr.39* %166, %158
  br i1 %177, label %178, label %164

178:                                              ; preds = %176
  %179 = bitcast %"class.std::__1::vector.305"* %2 to i8**
  %180 = load i8*, i8** %179, align 8
  br label %181

181:                                              ; preds = %178, %160
  %182 = phi i8* [ %180, %178 ], [ %161, %160 ]
  store %class.scoped_refptr.39* %158, %class.scoped_refptr.39** %5, align 8
  call void @_ZdlPv(i8* %182) #17
  br label %183

183:                                              ; preds = %156, %181
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #16
  ret i32 %157
}

declare i32 @_ZN3net22TransportSecurityState18CheckPublicKeyPinsERKNS_12HostPortPairEbRKNSt3__16vectorINS_9HashValueENS4_9allocatorIS6_EEEEPKNS_15X509CertificateESE_NS0_24PublicKeyPinReportStatusERKNS_19NetworkIsolationKeyEPNS4_12basic_stringIcNS4_11char_traitsIcEENS7_IcEEEE(%"class.net::TransportSecurityState"*, %"class.net::HostPortPair"* dereferenceable(32), i1 zeroext, %"class.std::__1::vector.29"* dereferenceable(24), %"class.net::X509Certificate"*, %"class.net::X509Certificate"*, i32, %"class.net::NetworkIsolationKey"* dereferenceable(184), %"class.std::__1::basic_string"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3net22TransportSecurityState22ShouldSSLErrorsBeFatalERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.net::TransportSecurityState"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare zeroext i1 @_ZN3net18IsCertificateErrorEi(i32) local_unnamed_addr #1

declare i32 @_ZN3net22TransportSecurityState19CheckCTRequirementsERKNS_12HostPortPairEbRKNSt3__16vectorINS_9HashValueENS4_9allocatorIS6_EEEEPKNS_15X509CertificateESE_RKNS5_INS_35SignedCertificateTimestampAndStatusENS7_ISF_EEEENS0_20ExpectCTReportStatusENS_2ct18CTPolicyComplianceERKNS_19NetworkIsolationKeyE(%"class.net::TransportSecurityState"*, %"class.net::HostPortPair"* dereferenceable(32), i1 zeroext, %"class.std::__1::vector.29"* dereferenceable(24), %"class.net::X509Certificate"*, %"class.net::X509Certificate"*, %"class.std::__1::vector.37"* dereferenceable(24), i32, i32, %"class.net::NetworkIsolationKey"* dereferenceable(184)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19SSLClientSocketImpl17DoConnectCallbackEi(%"class.net::SSLClientSocketImpl"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %5 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %4, align 8
  %6 = icmp eq %"class.base::internal::BindStateBase"* %5, null
  br i1 %6, label %17, label %7

7:                                                ; preds = %2
  %8 = ptrtoint %"class.base::internal::BindStateBase"* %5 to i64
  %9 = icmp slt i32 %1, 0
  %10 = select i1 %9, i32 %1, i32 0
  %11 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #16
  %12 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %8, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %4, align 8
  %13 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %14 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %5, i64 0, i32 1
  %15 = bitcast void ()** %14 to void (%"class.base::internal::BindStateBase"*, i32)**
  %16 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %15, align 8
  tail call void %16(%"class.base::internal::BindStateBase"* nonnull %5, i32 %10) #16
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %13) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #16
  br label %17

17:                                               ; preds = %7, %2
  ret void
}

declare void @_ZNK3net16NetLogWithSource20AddByteTransferEventENS_15NetLogEventTypeEiPKc(%"class.net::NetLogWithSource"*, i32, i32, i8*) local_unnamed_addr #1

declare i32 @SSL_read(%struct.ssl_st*, i8*, i32) local_unnamed_addr #1

declare i32 @SSL_renegotiate(%struct.ssl_st*) local_unnamed_addr #1

declare i32 @SSL_write(%struct.ssl_st*, i8*, i32) local_unnamed_addr #1

declare i32 @SSL_is_init_finished(%struct.ssl_st*) local_unnamed_addr #1

declare i32 @SSL_key_update(%struct.ssl_st*, i32) local_unnamed_addr #1

declare i32 @_ZN3net15MapOpenSSLErrorEiRKN6crypto21OpenSSLErrStackTracerE(i32, %"class.crypto::OpenSSLErrStackTracer"* dereferenceable(32)) local_unnamed_addr #1

declare i32 @SSL_get_early_data_reason(%struct.ssl_st*) local_unnamed_addr #1

declare void @_ZN3net21SSLClientSessionCache14ClearEarlyDataERKNS0_3KeyE(%"class.net::SSLClientSessionCache"*, %"struct.net::SSLClientSessionCache::Key"* dereferenceable(248)) local_unnamed_addr #1

declare i32 @SSL_peek(%struct.ssl_st*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net19SSLClientSocketImpl25ClientCertRequestCallbackEP6ssl_st(%"class.net::SSLClientSocketImpl"*, %struct.ssl_st* nocapture readnone) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::LogMessage", align 8
  %4 = alloca %"class.base::Location", align 8
  %5 = alloca %"class.base::Location", align 8
  %6 = alloca %"class.std::__1::vector.46", align 8
  %7 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 41
  tail call void @_ZNK3net16NetLogWithSource8AddEventENS_15NetLogEventTypeE(%"class.net::NetLogWithSource"* %7, i32 50) #16
  %8 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 32
  store i8 1, i8* %8, align 4
  %9 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 22, i32 0, i32 0, i32 0
  %10 = load %struct.ssl_st*, %struct.ssl_st** %9, align 8
  tail call void @SSL_certs_clear(%struct.ssl_st* %10) #16
  %11 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 38
  %12 = load i8, i8* %11, align 2, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %75, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 39, i32 0
  %16 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %15, align 8
  %17 = icmp eq %"class.net::X509Certificate"* %16, null
  br i1 %17, label %74, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 40, i32 0
  %20 = load %"class.net::SSLPrivateKey"*, %"class.net::SSLPrivateKey"** %19, align 8
  %21 = icmp eq %"class.net::SSLPrivateKey"* %20, null
  br i1 %21, label %22, label %31

22:                                               ; preds = %18
  %23 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 1) #16
  br i1 %23, label %24, label %29

24:                                               ; preds = %22
  %25 = bitcast %"class.logging::LogMessage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %25) #16
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %3, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str, i64 0, i64 0), i32 1655, i32 1) #16
  %26 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %3, i64 0, i32 2
  %27 = bitcast %"class.std::__1::basic_ostringstream"* %26 to %"class.std::__1::basic_ostream"*
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %27, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.37, i64 0, i64 0), i64 37) #16
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %25) #16
  br label %29

29:                                               ; preds = %22, %24
  %30 = bitcast %"class.base::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #16
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %4, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.38, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str, i64 0, i64 0), i32 1656) #16
  call void @_ZN3net18OpenSSLPutNetErrorERKN4base8LocationEi(%"class.base::Location"* nonnull dereferenceable(32) %4, i32 -135) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #16
  br label %75

31:                                               ; preds = %18
  %32 = load %struct.ssl_st*, %struct.ssl_st** %9, align 8
  %33 = tail call zeroext i1 @_ZN3net17SetSSLChainAndKeyEP6ssl_stPNS_15X509CertificateEP11evp_pkey_stPK25ssl_private_key_method_st(%struct.ssl_st* %32, %"class.net::X509Certificate"* nonnull %16, %struct.evp_pkey_st* null, %struct.ssl_private_key_method_st* nonnull @_ZN3net19SSLClientSocketImpl10SSLContext17kPrivateKeyMethodE) #16
  br i1 %33, label %36, label %34

34:                                               ; preds = %31
  %35 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %35) #16
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.38, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str, i64 0, i64 0), i32 1662) #16
  call void @_ZN3net18OpenSSLPutNetErrorERKN4base8LocationEi(%"class.base::Location"* nonnull dereferenceable(32) %5, i32 -164) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %35) #16
  br label %75

36:                                               ; preds = %31
  %37 = bitcast %"class.std::__1::vector.46"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #16
  %38 = getelementptr inbounds %"class.std::__1::vector.46", %"class.std::__1::vector.46"* %6, i64 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.std::__1::vector.46", %"class.std::__1::vector.46"* %6, i64 0, i32 0, i32 1
  %40 = bitcast %"class.std::__1::vector.46"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 24, i1 false)
  %41 = load %"class.net::SSLPrivateKey"*, %"class.net::SSLPrivateKey"** %19, align 8
  %42 = bitcast %"class.net::SSLPrivateKey"* %41 to void (%"class.std::__1::vector.46"*, %"class.net::SSLPrivateKey"*)***
  %43 = load void (%"class.std::__1::vector.46"*, %"class.net::SSLPrivateKey"*)**, void (%"class.std::__1::vector.46"*, %"class.net::SSLPrivateKey"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.std::__1::vector.46"*, %"class.net::SSLPrivateKey"*)*, void (%"class.std::__1::vector.46"*, %"class.net::SSLPrivateKey"*)** %43, i64 1
  %45 = load void (%"class.std::__1::vector.46"*, %"class.net::SSLPrivateKey"*)*, void (%"class.std::__1::vector.46"*, %"class.net::SSLPrivateKey"*)** %44, align 8
  call void %45(%"class.std::__1::vector.46"* nonnull sret %6, %"class.net::SSLPrivateKey"* %41) #16
  %46 = load %struct.ssl_st*, %struct.ssl_st** %9, align 8
  %47 = load i16*, i16** %38, align 8
  %48 = bitcast i16** %39 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = ptrtoint i16* %47 to i64
  %51 = sub i64 %49, %50
  %52 = ashr exact i64 %51, 1
  %53 = call i32 @SSL_set_signing_algorithm_prefs(%struct.ssl_st* %46, i16* %47, i64 %52) #16
  %54 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %15, align 8
  %55 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %54, i64 0, i32 7
  %56 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %54, i64 0, i32 7, i32 0, i32 1
  %57 = bitcast %"class.std::__1::unique_ptr"** %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"class.std::__1::vector.14"* %55 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = sub i64 %58, %60
  %62 = ashr exact i64 %61, 3
  %63 = add nsw i64 %62, 1
  %64 = icmp ult i64 %63, 2147483648
  br i1 %64, label %66, label %65, !prof !3

65:                                               ; preds = %36
  call void @llvm.trap() #16
  unreachable

66:                                               ; preds = %36
  %67 = trunc i64 %63 to i32
  call void @_ZNK3net16NetLogWithSource21AddEventWithIntParamsENS_15NetLogEventTypeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.net::NetLogWithSource"* %7, i32 52, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.39, i64 0, i64 0), i64 10, i32 %67) #16
  %68 = load i16*, i16** %38, align 8
  %69 = icmp eq i16* %68, null
  br i1 %69, label %73, label %70

70:                                               ; preds = %66
  %71 = ptrtoint i16* %68 to i64
  store i64 %71, i64* %48, align 8
  %72 = bitcast i16* %68 to i8*
  call void @_ZdlPv(i8* %72) #17
  br label %73

73:                                               ; preds = %66, %70
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #16
  br label %75

74:                                               ; preds = %14
  tail call void @_ZNK3net16NetLogWithSource21AddEventWithIntParamsENS_15NetLogEventTypeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.net::NetLogWithSource"* %7, i32 52, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.39, i64 0, i64 0), i64 10, i32 0) #16
  br label %75

75:                                               ; preds = %2, %74, %73, %34, %29
  %76 = phi i32 [ 1, %73 ], [ -1, %34 ], [ -1, %29 ], [ 1, %74 ], [ -1, %2 ]
  ret i32 %76
}

declare void @_ZNK3net16NetLogWithSource8AddEventENS_15NetLogEventTypeE(%"class.net::NetLogWithSource"*, i32) local_unnamed_addr #1

declare void @SSL_certs_clear(%struct.ssl_st*) local_unnamed_addr #1

declare zeroext i1 @_ZN3net17SetSSLChainAndKeyEP6ssl_stPNS_15X509CertificateEP11evp_pkey_stPK25ssl_private_key_method_st(%struct.ssl_st*, %"class.net::X509Certificate"*, %struct.evp_pkey_st*, %struct.ssl_private_key_method_st*) local_unnamed_addr #1

declare i32 @SSL_set_signing_algorithm_prefs(%struct.ssl_st*, i16*, i64) local_unnamed_addr #1

declare void @_ZNK3net16NetLogWithSource21AddEventWithIntParamsENS_15NetLogEventTypeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.net::NetLogWithSource"*, i32, i8*, i64, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net19SSLClientSocketImpl18NewSessionCallbackEP14ssl_session_st(%"class.net::SSLClientSocketImpl"*, %struct.ssl_session_st*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.absl::optional.285", align 1
  %4 = alloca %"class.net::IPEndPoint", align 2
  %5 = alloca %"struct.net::SSLClientSessionCache::Key", align 8
  %6 = alloca %"class.absl::optional.285", align 1
  %7 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 18
  %8 = load %"class.net::SSLClientContext"*, %"class.net::SSLClientContext"** %7, align 8
  %9 = getelementptr inbounds %"class.net::SSLClientContext", %"class.net::SSLClientContext"* %8, i64 0, i32 7
  %10 = load %"class.net::SSLClientSessionCache"*, %"class.net::SSLClientSessionCache"** %9, align 8
  %11 = icmp eq %"class.net::SSLClientSessionCache"* %10, null
  br i1 %11, label %63, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.absl::optional.285", %"class.absl::optional.285"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 18, i8* nonnull %13) #16
  %14 = getelementptr inbounds %"class.absl::optional.285", %"class.absl::optional.285"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %13, i8 0, i64 18, i1 false) #16
  %15 = tail call %struct.ssl_cipher_st* @SSL_SESSION_get0_cipher(%struct.ssl_session_st* %1) #16
  %16 = tail call i32 @SSL_CIPHER_get_kx_nid(%struct.ssl_cipher_st* %15) #16
  %17 = icmp eq i32 %16, 951
  br i1 %17, label %18, label %39

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %19) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %19, i8 -86, i64 20, i1 false)
  call void @_ZN3net10IPEndPointC1Ev(%"class.net::IPEndPoint"* nonnull %4) #16
  %20 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 23, i32 0, i32 0, i32 0
  %21 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %20, align 8
  %22 = bitcast %"class.net::StreamSocket"* %21 to i32 (%"class.net::StreamSocket"*, %"class.net::IPEndPoint"*)***
  %23 = load i32 (%"class.net::StreamSocket"*, %"class.net::IPEndPoint"*)**, i32 (%"class.net::StreamSocket"*, %"class.net::IPEndPoint"*)*** %22, align 8
  %24 = getelementptr inbounds i32 (%"class.net::StreamSocket"*, %"class.net::IPEndPoint"*)*, i32 (%"class.net::StreamSocket"*, %"class.net::IPEndPoint"*)** %23, i64 16
  %25 = load i32 (%"class.net::StreamSocket"*, %"class.net::IPEndPoint"*)*, i32 (%"class.net::StreamSocket"*, %"class.net::IPEndPoint"*)** %24, align 8
  %26 = call i32 %25(%"class.net::StreamSocket"* %21, %"class.net::IPEndPoint"* nonnull %4) #16
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %38

28:                                               ; preds = %18
  %29 = load i8, i8* %13, align 1, !range !2
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %32, label %31

31:                                               ; preds = %28
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %14, i8* nonnull align 2 %19, i64 17, i1 false) #16
  br label %35

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %4, i64 0, i32 0
  %34 = bitcast i8* %14 to %"class.net::IPAddress"*
  call void @_ZN3net9IPAddressC1ERKS0_(%"class.net::IPAddress"* %34, %"class.net::IPAddress"* nonnull dereferenceable(17) %33) #16
  store i8 1, i8* %13, align 1
  br label %35

35:                                               ; preds = %31, %32
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %19) #16
  %36 = load i8, i8* %13, align 1, !range !2
  %37 = icmp eq i8 %36, 0
  br label %39

38:                                               ; preds = %18
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %19) #16
  br label %56

39:                                               ; preds = %35, %12
  %40 = phi i1 [ %37, %35 ], [ true, %12 ]
  %41 = load %"class.net::SSLClientContext"*, %"class.net::SSLClientContext"** %7, align 8
  %42 = getelementptr inbounds %"class.net::SSLClientContext", %"class.net::SSLClientContext"* %41, i64 0, i32 7
  %43 = load %"class.net::SSLClientSessionCache"*, %"class.net::SSLClientSessionCache"** %42, align 8
  %44 = bitcast %"struct.net::SSLClientSessionCache::Key"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 248, i8* nonnull %44) #16
  %45 = getelementptr inbounds %"class.absl::optional.285", %"class.absl::optional.285"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %45, i8 0, i64 18, i1 false) #16
  br i1 %40, label %50, label %46

46:                                               ; preds = %39
  %47 = getelementptr inbounds %"class.absl::optional.285", %"class.absl::optional.285"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %48 = getelementptr inbounds %"class.absl::optional.285", %"class.absl::optional.285"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 0
  %49 = bitcast i8* %48 to %"class.net::IPAddress"*
  call void @_ZN3net9IPAddressC1ERKS0_(%"class.net::IPAddress"* %49, %"class.net::IPAddress"* dereferenceable(17) %47) #16
  store i8 1, i8* %45, align 1
  br label %50

50:                                               ; preds = %39, %46
  call void @_ZNK3net19SSLClientSocketImpl18GetSessionCacheKeyEN4absl8optionalINS_9IPAddressEEE(%"struct.net::SSLClientSessionCache::Key"* nonnull sret %5, %"class.net::SSLClientSocketImpl"* %0, %"class.absl::optional.285"* nonnull %6)
  call void @_ZN3net21SSLClientSessionCache6InsertERKNS0_3KeyENSt3__110unique_ptrI14ssl_session_stN4bssl8internal7DeleterIS6_EEEE(%"class.net::SSLClientSessionCache"* %43, %"struct.net::SSLClientSessionCache::Key"* nonnull dereferenceable(248) %5, %struct.ssl_session_st* %1) #16
  call void @_ZN3net21SSLClientSessionCache3KeyD1Ev(%"struct.net::SSLClientSessionCache::Key"* nonnull %5) #16
  %51 = load i8, i8* %45, align 1, !range !2
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %55, label %53

53:                                               ; preds = %50
  %54 = getelementptr inbounds %"class.absl::optional.285", %"class.absl::optional.285"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %54) #16
  store i8 0, i8* %45, align 1
  br label %55

55:                                               ; preds = %50, %53
  call void @llvm.lifetime.end.p0i8(i64 248, i8* nonnull %44) #16
  br label %56

56:                                               ; preds = %38, %55
  %57 = phi i32 [ 1, %55 ], [ 0, %38 ]
  %58 = load i8, i8* %13, align 1, !range !2
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %62, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.absl::optional.285", %"class.absl::optional.285"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %61) #16
  store i8 0, i8* %13, align 1
  br label %62

62:                                               ; preds = %56, %60
  call void @llvm.lifetime.end.p0i8(i64 18, i8* nonnull %13) #16
  br label %63

63:                                               ; preds = %2, %62
  %64 = phi i32 [ %57, %62 ], [ 0, %2 ]
  ret i32 %64
}

declare i32 @SSL_CIPHER_get_kx_nid(%struct.ssl_cipher_st*) local_unnamed_addr #1

declare %struct.ssl_cipher_st* @SSL_SESSION_get0_cipher(%struct.ssl_session_st*) local_unnamed_addr #1

declare void @_ZN3net21SSLClientSessionCache6InsertERKNS0_3KeyENSt3__110unique_ptrI14ssl_session_stN4bssl8internal7DeleterIS6_EEEE(%"class.net::SSLClientSessionCache"*, %"struct.net::SSLClientSessionCache::Key"* dereferenceable(248), %struct.ssl_session_st*) local_unnamed_addr #1

declare void @_ZN3net21SSLClientSessionCache3KeyC1Ev(%"struct.net::SSLClientSessionCache::Key"*) unnamed_addr #1

declare dereferenceable(184) %"class.net::NetworkIsolationKey"* @_ZN3net19NetworkIsolationKeyaSERKS0_(%"class.net::NetworkIsolationKey"*, %"class.net::NetworkIsolationKey"* dereferenceable(184)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net19SSLClientSocketImpl22PrivateKeySignCallbackEPhPmmtPKhm(%"class.net::SSLClientSocketImpl"*, i8* nocapture readnone, i64* nocapture readnone, i64, i16 zeroext, i8*, i64) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.base::internal::WeakReference", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.base::Value", align 8
  %11 = alloca %"class.base::OnceCallback.316", align 8
  %12 = alloca %"class.base::WeakPtr.304", align 8
  %13 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 41, i32 1
  %14 = load %"class.net::NetLog"*, %"class.net::NetLog"** %13, align 8
  %15 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 41, i32 0
  %16 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %14, i64 0, i32 3
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %38, label %19, !prof !3

19:                                               ; preds = %7
  %20 = bitcast %"class.base::Value"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #16
  %21 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 40, i32 0
  %22 = load %"class.net::SSLPrivateKey"*, %"class.net::SSLPrivateKey"** %21, align 8, !noalias !35
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 32, i1 false) #16, !alias.scope !38
  call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* nonnull %10, i8 zeroext 6) #16
  %23 = call i8* @SSL_get_signature_algorithm_name(i16 zeroext %4, i32 0) #16
  %24 = call %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPKc(%"class.base::Value"* nonnull %10, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.48, i64 0, i64 0), i64 9, i8* %23) #16
  %25 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #16, !noalias !38
  %26 = bitcast %"class.net::SSLPrivateKey"* %22 to void (%"class.std::__1::basic_string"*, %"class.net::SSLPrivateKey"*)***
  %27 = load void (%"class.std::__1::basic_string"*, %"class.net::SSLPrivateKey"*)**, void (%"class.std::__1::basic_string"*, %"class.net::SSLPrivateKey"*)*** %26, align 8, !noalias !41
  %28 = load void (%"class.std::__1::basic_string"*, %"class.net::SSLPrivateKey"*)*, void (%"class.std::__1::basic_string"*, %"class.net::SSLPrivateKey"*)** %27, align 8
  call void %28(%"class.std::__1::basic_string"* nonnull sret %9, %"class.net::SSLPrivateKey"* %22) #16
  %29 = call %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEONS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(%"class.base::Value"* nonnull %10, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.49, i64 0, i64 0), i64 8, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %9) #16
  %30 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1, !noalias !38
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %19
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8, !noalias !38
  call void @_ZdlPv(i8* %36) #17
  br label %37

37:                                               ; preds = %34, %19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #16, !noalias !38
  call void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"* %14, i32 51, %"struct.net::NetLogSource"* dereferenceable(16) %15, i32 1, %"class.base::Value"* nonnull dereferenceable(32) %10) #16
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %10) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #16
  br label %38

38:                                               ; preds = %7, %37
  %39 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 33
  store i32 -1, i32* %39, align 8
  %40 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 40, i32 0
  %41 = load %"class.net::SSLPrivateKey"*, %"class.net::SSLPrivateKey"** %40, align 8
  %42 = bitcast %"class.base::WeakPtr.304"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #16
  %43 = bitcast %"class.base::internal::WeakReference"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #16, !noalias !42
  %44 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 42, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %8, %"class.base::internal::WeakReferenceOwner"* %44) #16, !noalias !42
  %45 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 42, i32 0, i32 1
  %46 = load i64, i64* %45, align 8, !noalias !42
  %47 = getelementptr inbounds %"class.base::WeakPtr.304", %"class.base::WeakPtr.304"* %12, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %47, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %8, i64 %46) #16
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %8) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #16, !noalias !42
  %48 = call i8* @_Znwm(i64 64) #17, !noalias !45
  %49 = bitcast i8* %48 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %49, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32, %"class.std::__1::vector.210"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net19SSLClientSocketImplEFvNS3_5ErrorERKNSt3__16vectorIhNS6_9allocatorIhEEEEEJNS_7WeakPtrIS4_EEEEEFvS5_SC_EE7RunOnceEPNS0_13BindStateBaseES5_SC_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net19SSLClientSocketImplEFvNS2_5ErrorERKNSt3__16vectorIhNS5_9allocatorIhEEEEEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net19SSLClientSocketImplEFvNS3_5ErrorERKNSt3__16vectorIhNS6_9allocatorIhEEEEEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSI_21CancellationQueryModeE) #16, !noalias !45
  %50 = getelementptr inbounds i8, i8* %48, i64 32
  %51 = bitcast i8* %50 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::SSLClientSocketImpl"*, i32, %"class.std::__1::vector.210"*)* @_ZN3net19SSLClientSocketImpl20OnPrivateKeyCompleteENS_5ErrorERKNSt3__16vectorIhNS2_9allocatorIhEEEE to i64), i64 0>, <2 x i64>* %51, align 8, !noalias !45
  %52 = getelementptr inbounds i8, i8* %48, i64 48
  %53 = bitcast i8* %52 to %"class.base::internal::WeakReference"*
  %54 = getelementptr inbounds %"class.base::WeakPtr.304", %"class.base::WeakPtr.304"* %12, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %53, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %54) #16, !noalias !45
  %55 = getelementptr inbounds i8, i8* %48, i64 56
  %56 = bitcast i8* %55 to i64*
  %57 = getelementptr inbounds %"class.base::WeakPtr.304", %"class.base::WeakPtr.304"* %12, i64 0, i32 0, i32 1
  %58 = load i64, i64* %57, align 8, !noalias !45
  store i64 %58, i64* %56, align 8, !noalias !45
  %59 = bitcast %"class.base::OnceCallback.316"* %11 to i8**
  store i8* %48, i8** %59, align 8, !alias.scope !45
  %60 = bitcast %"class.net::SSLPrivateKey"* %41 to void (%"class.net::SSLPrivateKey"*, i16, i64, i8*, %"class.base::OnceCallback.316"*)***
  %61 = load void (%"class.net::SSLPrivateKey"*, i16, i64, i8*, %"class.base::OnceCallback.316"*)**, void (%"class.net::SSLPrivateKey"*, i16, i64, i8*, %"class.base::OnceCallback.316"*)*** %60, align 8
  %62 = getelementptr inbounds void (%"class.net::SSLPrivateKey"*, i16, i64, i8*, %"class.base::OnceCallback.316"*)*, void (%"class.net::SSLPrivateKey"*, i16, i64, i8*, %"class.base::OnceCallback.316"*)** %61, i64 2
  %63 = load void (%"class.net::SSLPrivateKey"*, i16, i64, i8*, %"class.base::OnceCallback.316"*)*, void (%"class.net::SSLPrivateKey"*, i16, i64, i8*, %"class.base::OnceCallback.316"*)** %62, align 8
  call void %63(%"class.net::SSLPrivateKey"* %41, i16 zeroext %4, i64 %6, i8* %5, %"class.base::OnceCallback.316"* nonnull %11) #16
  %64 = getelementptr inbounds %"class.base::OnceCallback.316", %"class.base::OnceCallback.316"* %11, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %64) #16
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %47) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #16
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19SSLClientSocketImpl20OnPrivateKeyCompleteENS_5ErrorERKNSt3__16vectorIhNS2_9allocatorIhEEEE(%"class.net::SSLClientSocketImpl"*, i32, %"class.std::__1::vector.210"* readonly dereferenceable(24)) #0 align 2 {
  %4 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 41
  tail call void @_ZNK3net16NetLogWithSource24EndEventWithNetErrorCodeENS_15NetLogEventTypeEi(%"class.net::NetLogWithSource"* %4, i32 51, i32 %1) #16
  %5 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 33
  store i32 %1, i32* %5, align 8
  %6 = icmp eq i32 %1, 0
  br i1 %6, label %7, label %15

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 34
  %9 = icmp eq %"class.std::__1::vector.210"* %8, %2
  br i1 %9, label %15, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %"class.std::__1::vector.210", %"class.std::__1::vector.210"* %2, i64 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %"class.std::__1::vector.210", %"class.std::__1::vector.210"* %2, i64 0, i32 0, i32 1
  %14 = load i8*, i8** %13, align 8
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE6assignIPhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.210"* %8, i8* %12, i8* %14) #16
  br label %15

15:                                               ; preds = %10, %7, %3
  tail call void @_ZN3net19SSLClientSocketImpl18RetryAllOperationsEv(%"class.net::SSLClientSocketImpl"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net19SSLClientSocketImpl26PrivateKeyCompleteCallbackEPhPmm(%"class.net::SSLClientSocketImpl"* nocapture, i8* nocapture, i64* nocapture, i64) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::Location", align 8
  %6 = alloca %"class.base::Location", align 8
  %7 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 33
  %8 = load i32, i32* %7, align 8
  switch i32 %8, label %9 [
    i32 -1, label %29
    i32 0, label %12
  ]

9:                                                ; preds = %4
  %10 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #16
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.40, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str, i64 0, i64 0), i32 1775) #16
  %11 = load i32, i32* %7, align 8
  call void @_ZN3net18OpenSSLPutNetErrorERKN4base8LocationEi(%"class.base::Location"* nonnull dereferenceable(32) %5, i32 %11) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #16
  br label %29

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 34
  %14 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 34, i32 0, i32 1
  %15 = bitcast i8** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::vector.210"* %13 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %16, %18
  %20 = icmp ugt i64 %19, %3
  br i1 %20, label %21, label %23

21:                                               ; preds = %12
  %22 = bitcast %"class.base::Location"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %22) #16
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %6, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.40, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str, i64 0, i64 0), i32 1779) #16
  call void @_ZN3net18OpenSSLPutNetErrorERKN4base8LocationEi(%"class.base::Location"* nonnull dereferenceable(32) %6, i32 -141) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %22) #16
  br label %29

23:                                               ; preds = %12
  %24 = inttoptr i64 %18 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %24, i64 %19, i1 false)
  %25 = load i64, i64* %15, align 8
  %26 = load i64, i64* %17, align 8
  %27 = sub i64 %25, %26
  store i64 %27, i64* %2, align 8
  %28 = load i64, i64* %17, align 8
  store i64 %28, i64* %15, align 8
  br label %29

29:                                               ; preds = %4, %23, %21, %9
  %30 = phi i32 [ 2, %9 ], [ 2, %21 ], [ 0, %23 ], [ 1, %4 ]
  ret i32 %30
}

declare void @_ZNK3net16NetLogWithSource24EndEventWithNetErrorCodeENS_15NetLogEventTypeEi(%"class.net::NetLogWithSource"*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19SSLClientSocketImpl15MessageCallbackEiiPKvm(%"class.net::SSLClientSocketImpl"*, i32, i32, i8*, i64) local_unnamed_addr #0 align 2 {
  %6 = alloca %class.GetParamsImpl, align 8
  %7 = alloca %"class.base::Value", align 8
  %8 = alloca %"class.base::Value", align 8
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca %class.anon.318, align 8
  store i32 %1, i32* %9, align 4
  store i8* %3, i8** %10, align 8
  store i64 %4, i64* %11, align 8
  switch i32 %2, label %45 [
    i32 21, label %13
    i32 22, label %26
  ]

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 41, i32 1
  %15 = load %"class.net::NetLog"*, %"class.net::NetLog"** %14, align 8
  %16 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %15, i64 0, i32 3
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %45, label %19, !prof !3

19:                                               ; preds = %13
  %20 = icmp eq i32 %1, 0
  %21 = select i1 %20, i32 57, i32 58
  %22 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 41, i32 0
  %23 = bitcast %"class.base::Value"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 32, i1 false) #16, !alias.scope !50
  call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* nonnull %8, i8 zeroext 6) #16
  %24 = bitcast %"class.base::Value"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #16, !noalias !50
  call void @_ZN3net17NetLogBinaryValueEPKvm(%"class.base::Value"* nonnull sret %7, i8* %3, i64 %4) #16
  %25 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* nonnull %8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.50, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %7) #16
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %7) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #16, !noalias !50
  call void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"* %15, i32 %21, %"struct.net::NetLogSource"* dereferenceable(16) %22, i32 0, %"class.base::Value"* nonnull dereferenceable(32) %8) #16
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %8) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #16
  br label %45

26:                                               ; preds = %5
  %27 = bitcast %class.anon.318* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #16
  %28 = getelementptr inbounds %class.anon.318, %class.anon.318* %12, i64 0, i32 0
  store i32* %9, i32** %28, align 8
  %29 = getelementptr inbounds %class.anon.318, %class.anon.318* %12, i64 0, i32 1
  store i8** %10, i8*** %29, align 8
  %30 = getelementptr inbounds %class.anon.318, %class.anon.318* %12, i64 0, i32 2
  store i64* %11, i64** %30, align 8
  %31 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 41, i32 1
  %32 = load %"class.net::NetLog"*, %"class.net::NetLog"** %31, align 8
  %33 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %32, i64 0, i32 3
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %44, label %36, !prof !3

36:                                               ; preds = %26
  %37 = icmp eq i32 %1, 0
  %38 = select i1 %37, i32 60, i32 61
  %39 = getelementptr inbounds %"class.net::SSLClientSocketImpl", %"class.net::SSLClientSocketImpl"* %0, i64 0, i32 41, i32 0
  %40 = bitcast %class.GetParamsImpl* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #16
  %41 = getelementptr inbounds %class.GetParamsImpl, %class.GetParamsImpl* %6, i64 0, i32 0, i32 0
  %42 = getelementptr inbounds %class.GetParamsImpl, %class.GetParamsImpl* %6, i64 0, i32 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @"_ZTVZN3net6NetLog8AddEntryIZNS_19SSLClientSocketImpl15MessageCallbackEiiPKvmE3$_3EENSt3__19enable_ifIXsr18ExpectsCaptureModeIT_EE5valueEvE4typeENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseERKS8_E13GetParamsImpl", i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %41, align 8
  store %class.anon.318* %12, %class.anon.318** %42, align 8
  %43 = getelementptr inbounds %class.GetParamsImpl, %class.GetParamsImpl* %6, i64 0, i32 0
  call void @_ZN3net6NetLog16AddEntryInternalENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEPKNS0_18GetParamsInterfaceE(%"class.net::NetLog"* %32, i32 %38, %"struct.net::NetLogSource"* dereferenceable(16) %39, i32 0, %"class.net::NetLog::GetParamsInterface"* nonnull %43) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #16
  br label %44

44:                                               ; preds = %26, %36
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #16
  br label %45

45:                                               ; preds = %19, %13, %5, %44
  ret void
}

declare i32 @_ZN3net26MapOpenSSLErrorWithDetailsEiRKN6crypto21OpenSSLErrStackTracerEPNS_16OpenSSLErrorInfoE(i32, %"class.crypto::OpenSSLErrStackTracer"* dereferenceable(32), %"struct.net::OpenSSLErrorInfo"*) local_unnamed_addr #1

declare void @_ZN3net6Socket13SetDnsAliasesENSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEE(%"class.net::Socket"*, %"class.std::__1::vector"*) unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::vector"* @_ZNK3net6Socket13GetDnsAliasesEv(%"class.net::Socket"*) unnamed_addr #1

declare void @_ZN3net12StreamSocket24SetBeforeConnectCallbackERKN4base17RepeatingCallbackIFivEEE(%"class.net::StreamSocket"*, %"class.base::RepeatingCallback.320"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19SSLClientSocketImpl23ClearConnectionAttemptsEv(%"class.net::SSLClientSocketImpl"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19SSLClientSocketImpl21AddConnectionAttemptsERKNSt3__16vectorINS_17ConnectionAttemptENS1_9allocatorIS3_EEEE(%"class.net::SSLClientSocketImpl"*, %"class.std::__1::vector.265"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64*) local_unnamed_addr #1

declare void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64*, i64, void (i8*)*, i8*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19SSLClientSocketImpl10SSLContextC2Ev(%"class.net::SSLClientSocketImpl::SSLContext"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.net::SSLClientSocketImpl::SSLContext", %"class.net::SSLClientSocketImpl::SSLContext"* %0, i64 0, i32 1
  %3 = bitcast %"class.std::__1::unique_ptr.255"* %2 to i64*
  store i64 0, i64* %3, align 8
  tail call void @_ZN6crypto17EnsureOpenSSLInitEv() #16
  %4 = tail call i32 @SSL_get_ex_new_index(i64 0, i8* null, i32* null, i32 (%struct.crypto_ex_data_st*, %struct.crypto_ex_data_st*, i8**, i32, i64, i8*)* null, void (i8*, i8*, %struct.crypto_ex_data_st*, i32, i64, i8*)* null) #16
  %5 = getelementptr inbounds %"class.net::SSLClientSocketImpl::SSLContext", %"class.net::SSLClientSocketImpl::SSLContext"* %0, i64 0, i32 0
  store i32 %4, i32* %5, align 8
  %6 = tail call %struct.ssl_method_st* @TLS_with_buffers_method() #16
  %7 = tail call %struct.ssl_ctx_st* @SSL_CTX_new(%struct.ssl_method_st* %6) #16
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.255", %"class.std::__1::unique_ptr.255"* %2, i64 0, i32 0, i32 0, i32 0
  %9 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %8, align 8
  store %struct.ssl_ctx_st* %7, %struct.ssl_ctx_st** %8, align 8
  %10 = icmp eq %struct.ssl_ctx_st* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %1
  tail call void @SSL_CTX_free(%struct.ssl_ctx_st* nonnull %9) #16
  %12 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %8, align 8
  br label %13

13:                                               ; preds = %1, %11
  %14 = phi %struct.ssl_ctx_st* [ %7, %1 ], [ %12, %11 ]
  tail call void @SSL_CTX_set_cert_cb(%struct.ssl_ctx_st* %14, i32 (%struct.ssl_st*, i8*)* nonnull @_ZN3net19SSLClientSocketImpl10SSLContext25ClientCertRequestCallbackEP6ssl_stPv, i8* null) #16
  %15 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %8, align 8
  tail call void @SSL_CTX_set_reverify_on_resume(%struct.ssl_ctx_st* %15, i32 1) #16
  %16 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %8, align 8
  tail call void @SSL_CTX_set_custom_verify(%struct.ssl_ctx_st* %16, i32 1, i32 (%struct.ssl_st*, i8*)* nonnull @_ZN3net19SSLClientSocketImpl18VerifyCertCallbackEP6ssl_stPh) #16
  %17 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %8, align 8
  %18 = tail call i32 @SSL_CTX_set_session_cache_mode(%struct.ssl_ctx_st* %17, i32 769) #16
  %19 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %8, align 8
  tail call void @SSL_CTX_sess_set_new_cb(%struct.ssl_ctx_st* %19, i32 (%struct.ssl_st*, %struct.ssl_session_st*)* nonnull @_ZN3net19SSLClientSocketImpl10SSLContext18NewSessionCallbackEP6ssl_stP14ssl_session_st) #16
  %20 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %8, align 8
  %21 = tail call i32 @SSL_CTX_set_timeout(%struct.ssl_ctx_st* %20, i32 3600) #16
  %22 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %8, align 8
  tail call void @SSL_CTX_set_grease_enabled(%struct.ssl_ctx_st* %22, i32 1) #16
  %23 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %8, align 8
  %24 = tail call %struct.crypto_buffer_pool_st* @_ZN3net9x509_util13GetBufferPoolEv() #16
  tail call void @SSL_CTX_set0_buffer_pool(%struct.ssl_ctx_st* %23, %struct.crypto_buffer_pool_st* %24) #16
  %25 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %8, align 8
  tail call void @SSL_CTX_set_msg_callback(%struct.ssl_ctx_st* %25, void (i32, i32, i32, i8*, i64, %struct.ssl_st*, i8*)* nonnull @_ZN3net19SSLClientSocketImpl10SSLContext15MessageCallbackEiiiPKvmP6ssl_stPv) #16
  %26 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %8, align 8
  tail call void @_ZN3net31ConfigureCertificateCompressionEP10ssl_ctx_st(%struct.ssl_ctx_st* %26) #16
  ret void
}

declare void @_ZN6crypto17EnsureOpenSSLInitEv() local_unnamed_addr #1

declare i32 @SSL_get_ex_new_index(i64, i8*, i32*, i32 (%struct.crypto_ex_data_st*, %struct.crypto_ex_data_st*, i8**, i32, i64, i8*)*, void (i8*, i8*, %struct.crypto_ex_data_st*, i32, i64, i8*)*) local_unnamed_addr #1

declare %struct.ssl_ctx_st* @SSL_CTX_new(%struct.ssl_method_st*) local_unnamed_addr #1

declare %struct.ssl_method_st* @TLS_with_buffers_method() local_unnamed_addr #1

declare void @SSL_CTX_set_cert_cb(%struct.ssl_ctx_st*, i32 (%struct.ssl_st*, i8*)*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN3net19SSLClientSocketImpl10SSLContext25ClientCertRequestCallbackEP6ssl_stPv(%struct.ssl_st*, i8*) #0 comdat align 2 {
  %3 = load atomic i64, i64* @_ZN4base9SingletonIN3net19SSLClientSocketImpl10SSLContextENS_20LeakySingletonTraitsIS3_EES3_E9instance_E acquire, align 8
  %4 = icmp ugt i64 %3, 1
  br i1 %4, label %13, label %5

5:                                                ; preds = %2
  %6 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* nonnull @_ZN4base9SingletonIN3net19SSLClientSocketImpl10SSLContextENS_20LeakySingletonTraitsIS3_EES3_E9instance_E) #16
  br i1 %6, label %7, label %11

7:                                                ; preds = %5
  %8 = tail call i8* @_Znwm(i64 16) #17
  %9 = bitcast i8* %8 to %"class.net::SSLClientSocketImpl::SSLContext"*
  tail call void @_ZN3net19SSLClientSocketImpl10SSLContextC2Ev(%"class.net::SSLClientSocketImpl::SSLContext"* nonnull %9) #16
  %10 = ptrtoint i8* %8 to i64
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* nonnull @_ZN4base9SingletonIN3net19SSLClientSocketImpl10SSLContextENS_20LeakySingletonTraitsIS3_EES3_E9instance_E, i64 %10, void (i8*)* null, i8* null) #16
  br label %13

11:                                               ; preds = %5
  %12 = load atomic i64, i64* @_ZN4base9SingletonIN3net19SSLClientSocketImpl10SSLContextENS_20LeakySingletonTraitsIS3_EES3_E9instance_E acquire, align 8
  br label %13

13:                                               ; preds = %2, %7, %11
  %14 = phi i64 [ %3, %2 ], [ %10, %7 ], [ %12, %11 ]
  %15 = inttoptr i64 %14 to %"class.net::SSLClientSocketImpl::SSLContext"*
  %16 = getelementptr inbounds %"class.net::SSLClientSocketImpl::SSLContext", %"class.net::SSLClientSocketImpl::SSLContext"* %15, i64 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = tail call i8* @SSL_get_ex_data(%struct.ssl_st* %0, i32 %17) #16
  %19 = bitcast i8* %18 to %"class.net::SSLClientSocketImpl"*
  %20 = tail call i32 @_ZN3net19SSLClientSocketImpl25ClientCertRequestCallbackEP6ssl_st(%"class.net::SSLClientSocketImpl"* %19, %struct.ssl_st* undef)
  ret i32 %20
}

declare void @SSL_CTX_set_reverify_on_resume(%struct.ssl_ctx_st*, i32) local_unnamed_addr #1

declare void @SSL_CTX_set_custom_verify(%struct.ssl_ctx_st*, i32, i32 (%struct.ssl_st*, i8*)*) local_unnamed_addr #1

declare i32 @SSL_CTX_set_session_cache_mode(%struct.ssl_ctx_st*, i32) local_unnamed_addr #1

declare void @SSL_CTX_sess_set_new_cb(%struct.ssl_ctx_st*, i32 (%struct.ssl_st*, %struct.ssl_session_st*)*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN3net19SSLClientSocketImpl10SSLContext18NewSessionCallbackEP6ssl_stP14ssl_session_st(%struct.ssl_st*, %struct.ssl_session_st*) #0 comdat align 2 {
  %3 = load atomic i64, i64* @_ZN4base9SingletonIN3net19SSLClientSocketImpl10SSLContextENS_20LeakySingletonTraitsIS3_EES3_E9instance_E acquire, align 8
  %4 = icmp ugt i64 %3, 1
  br i1 %4, label %13, label %5

5:                                                ; preds = %2
  %6 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* nonnull @_ZN4base9SingletonIN3net19SSLClientSocketImpl10SSLContextENS_20LeakySingletonTraitsIS3_EES3_E9instance_E) #16
  br i1 %6, label %7, label %11

7:                                                ; preds = %5
  %8 = tail call i8* @_Znwm(i64 16) #17
  %9 = bitcast i8* %8 to %"class.net::SSLClientSocketImpl::SSLContext"*
  tail call void @_ZN3net19SSLClientSocketImpl10SSLContextC2Ev(%"class.net::SSLClientSocketImpl::SSLContext"* nonnull %9) #16
  %10 = ptrtoint i8* %8 to i64
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* nonnull @_ZN4base9SingletonIN3net19SSLClientSocketImpl10SSLContextENS_20LeakySingletonTraitsIS3_EES3_E9instance_E, i64 %10, void (i8*)* null, i8* null) #16
  br label %13

11:                                               ; preds = %5
  %12 = load atomic i64, i64* @_ZN4base9SingletonIN3net19SSLClientSocketImpl10SSLContextENS_20LeakySingletonTraitsIS3_EES3_E9instance_E acquire, align 8
  br label %13

13:                                               ; preds = %2, %7, %11
  %14 = phi i64 [ %3, %2 ], [ %10, %7 ], [ %12, %11 ]
  %15 = inttoptr i64 %14 to %"class.net::SSLClientSocketImpl::SSLContext"*
  %16 = getelementptr inbounds %"class.net::SSLClientSocketImpl::SSLContext", %"class.net::SSLClientSocketImpl::SSLContext"* %15, i64 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = tail call i8* @SSL_get_ex_data(%struct.ssl_st* %0, i32 %17) #16
  %19 = bitcast i8* %18 to %"class.net::SSLClientSocketImpl"*
  %20 = tail call i32 @_ZN3net19SSLClientSocketImpl18NewSessionCallbackEP14ssl_session_st(%"class.net::SSLClientSocketImpl"* %19, %struct.ssl_session_st* %1)
  ret i32 %20
}

declare i32 @SSL_CTX_set_timeout(%struct.ssl_ctx_st*, i32) local_unnamed_addr #1

declare void @SSL_CTX_set_grease_enabled(%struct.ssl_ctx_st*, i32) local_unnamed_addr #1

declare void @SSL_CTX_set0_buffer_pool(%struct.ssl_ctx_st*, %struct.crypto_buffer_pool_st*) local_unnamed_addr #1

declare %struct.crypto_buffer_pool_st* @_ZN3net9x509_util13GetBufferPoolEv() local_unnamed_addr #1

declare void @SSL_CTX_set_msg_callback(%struct.ssl_ctx_st*, void (i32, i32, i32, i8*, i64, %struct.ssl_st*, i8*)*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19SSLClientSocketImpl10SSLContext15MessageCallbackEiiiPKvmP6ssl_stPv(i32, i32, i32, i8*, i64, %struct.ssl_st*, i8*) #0 comdat align 2 {
  %8 = load atomic i64, i64* @_ZN4base9SingletonIN3net19SSLClientSocketImpl10SSLContextENS_20LeakySingletonTraitsIS3_EES3_E9instance_E acquire, align 8
  %9 = icmp ugt i64 %8, 1
  br i1 %9, label %18, label %10

10:                                               ; preds = %7
  %11 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* nonnull @_ZN4base9SingletonIN3net19SSLClientSocketImpl10SSLContextENS_20LeakySingletonTraitsIS3_EES3_E9instance_E) #16
  br i1 %11, label %12, label %16

12:                                               ; preds = %10
  %13 = tail call i8* @_Znwm(i64 16) #17
  %14 = bitcast i8* %13 to %"class.net::SSLClientSocketImpl::SSLContext"*
  tail call void @_ZN3net19SSLClientSocketImpl10SSLContextC2Ev(%"class.net::SSLClientSocketImpl::SSLContext"* nonnull %14) #16
  %15 = ptrtoint i8* %13 to i64
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* nonnull @_ZN4base9SingletonIN3net19SSLClientSocketImpl10SSLContextENS_20LeakySingletonTraitsIS3_EES3_E9instance_E, i64 %15, void (i8*)* null, i8* null) #16
  br label %18

16:                                               ; preds = %10
  %17 = load atomic i64, i64* @_ZN4base9SingletonIN3net19SSLClientSocketImpl10SSLContextENS_20LeakySingletonTraitsIS3_EES3_E9instance_E acquire, align 8
  br label %18

18:                                               ; preds = %7, %12, %16
  %19 = phi i64 [ %8, %7 ], [ %15, %12 ], [ %17, %16 ]
  %20 = inttoptr i64 %19 to %"class.net::SSLClientSocketImpl::SSLContext"*
  %21 = getelementptr inbounds %"class.net::SSLClientSocketImpl::SSLContext", %"class.net::SSLClientSocketImpl::SSLContext"* %20, i64 0, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = tail call i8* @SSL_get_ex_data(%struct.ssl_st* %5, i32 %22) #16
  %24 = bitcast i8* %23 to %"class.net::SSLClientSocketImpl"*
  tail call void @_ZN3net19SSLClientSocketImpl15MessageCallbackEiiPKvm(%"class.net::SSLClientSocketImpl"* %24, i32 %0, i32 %2, i8* %3, i64 %4)
  ret void
}

declare void @_ZN3net31ConfigureCertificateCompressionEP10ssl_ctx_st(%struct.ssl_ctx_st*) local_unnamed_addr #1

declare void @SSL_CTX_free(%struct.ssl_ctx_st*) local_unnamed_addr #1

declare void @_ZN3net19SSLKeyLoggerManager15SetSSLKeyLoggerENSt3__110unique_ptrINS_12SSLKeyLoggerENS1_14default_deleteIS3_EEEE(%"class.net::SSLKeyLogger"*) local_unnamed_addr #1

declare void @SSL_CTX_set_keylog_callback(%struct.ssl_ctx_st*, void (%struct.ssl_st*, i8*)*) local_unnamed_addr #1

declare void @_ZN3net19SSLKeyLoggerManager14KeyLogCallbackEPK6ssl_stPKc(%struct.ssl_st*, i8*) #1

declare void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"*, %"class.base::Location"* dereferenceable(32)) unnamed_addr #1

declare void @_ZN6crypto20ClearOpenSSLERRStackERKN4base8LocationE(%"class.base::Location"* dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBase"* dereferenceable(8)) local_unnamed_addr #3

declare i64 @sk_num(%struct.stack_st*) local_unnamed_addr #1

declare i32 @SSL_set_ex_data(%struct.ssl_st*, i32, i8*) local_unnamed_addr #1

declare void @_ZN3net27registry_controlled_domains20GetDomainAndRegistryEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_21PrivateRegistryFilterE(%"class.std::__1::basic_string"* sret, i8*, i64, i32) local_unnamed_addr #1

declare void @_ZNK4base12FeatureParamINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEELb0EE3GetEv(%"class.std::__1::basic_string"* sret, %"struct.base::FeatureParam"*) local_unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #11

declare void @_ZN3net9IPAddressC1ERKS0_(%"class.net::IPAddress"*, %"class.net::IPAddress"* dereferenceable(17)) unnamed_addr #1

declare i32 @SSL_CIPHER_get_auth_nid(%struct.ssl_cipher_st*) local_unnamed_addr #1

declare void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"*) unnamed_addr #1

declare void @_ZN3net20ParsedTbsCertificateC1Ev(%"struct.net::ParsedTbsCertificate"*) unnamed_addr #1

declare zeroext i1 @_ZN3net16ParseCertificateERKNS_3der5InputEPS1_S4_PNS0_9BitStringEPNS_10CertErrorsE(%"class.net::der::Input"* dereferenceable(16), %"class.net::der::Input"*, %"class.net::der::Input"*, %"class.net::der::BitString"*, %"class.net::CertErrors"*) local_unnamed_addr #1

declare void @_ZN3net3der5InputC1EPKhm(%"class.net::der::Input"*, i8*, i64) unnamed_addr #1

declare zeroext i1 @_ZN3net19ParseTbsCertificateERKNS_3der5InputERKNS_23ParseCertificateOptionsEPNS_20ParsedTbsCertificateEPNS_10CertErrorsE(%"class.net::der::Input"* dereferenceable(16), %"struct.net::ParseCertificateOptions"* dereferenceable(1), %"struct.net::ParsedTbsCertificate"*, %"class.net::CertErrors"*) local_unnamed_addr #1

declare i8 @_ZN3net9x509_util30DefaultParseCertificateOptionsEv() local_unnamed_addr #1

declare zeroext i1 @_ZN3net15ParseExtensionsERKNS_3der5InputEPNSt3__13mapIS1_NS_15ParsedExtensionENS4_4lessIS1_EENS4_9allocatorINS4_4pairIS2_S6_EEEEEE(%"class.net::der::Input"* dereferenceable(16), %"class.std::__1::map.327"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3net16ConsumeExtensionERKNS_3der5InputEPNSt3__13mapIS1_NS_15ParsedExtensionENS4_4lessIS1_EENS4_9allocatorINS4_4pairIS2_S6_EEEEEEPS6_(%"class.net::der::Input"* dereferenceable(16), %"class.std::__1::map.327"*, %"struct.net::ParsedExtension"*) local_unnamed_addr #1

declare { i8*, i64 } @_ZN3net11KeyUsageOidEv() local_unnamed_addr #1

declare zeroext i1 @_ZN3net13ParseKeyUsageERKNS_3der5InputEPNS0_9BitStringE(%"class.net::der::Input"* dereferenceable(16), %"class.net::der::BitString"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK3net3der9BitString10AssertsBitEm(%"class.net::der::BitString"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3net20ParsedTbsCertificateD1Ev(%"struct.net::ParsedTbsCertificate"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIN3net3der5InputENS2_15ParsedExtensionEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.328"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3net3der5InputENS2_15ParsedExtensionEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.328"* %0, %"class.std::__1::__tree_node"* %6) #16
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3net3der5InputENS2_15ParsedExtensionEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.328"* %0, %"class.std::__1::__tree_node"* %9) #16
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #17
  ret void

11:                                               ; preds = %2
  ret void
}

declare i8* @SSL_get_ex_data(%struct.ssl_st*, i32) local_unnamed_addr #1

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #1

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #1

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #1

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #12

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #16
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #16
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #16
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #16
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #16
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #16
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #16
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #16
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #16
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #16
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #17
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #16
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #16
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #17
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #16
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #16
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare void @SSL_SESSION_free(%struct.ssl_session_st*) local_unnamed_addr #1

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3net15X509CertificateD1Ev(%"class.net::X509Certificate"*) unnamed_addr #3

declare void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3net16SocketBIOAdapterD1Ev(%"class.net::SocketBIOAdapter"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3net9HashValueENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.29"*, %"class.net::HashValue"*, %"class.net::HashValue"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.net::HashValue"* %2 to i64
  %5 = ptrtoint %"class.net::HashValue"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 36
  %8 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.net::HashValue"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.29"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 36
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.net::HashValue"*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.net::HashValue"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 36
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %1, i64 %22
  %25 = select i1 %23, %"class.net::HashValue"* %24, %"class.net::HashValue"* %2
  %26 = ptrtoint %"class.net::HashValue"* %25 to i64
  %27 = sub i64 %26, %5
  %28 = sdiv exact i64 %27, 36
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast %"class.net::HashValue"* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #16
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = udiv exact i64 %36, 36
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast %"class.net::HashValue"* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #16
  %42 = inttoptr i64 %35 to %"class.net::HashValue"*
  %43 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %42, i64 %39
  %44 = ptrtoint %"class.net::HashValue"* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %87

47:                                               ; preds = %33
  %48 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %16, i64 %28
  store %"class.net::HashValue"* %48, %"class.net::HashValue"** %18, align 8
  br label %87

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %0, i64 0, i32 0, i32 1
  %53 = bitcast %"class.net::HashValue"** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #17
  %55 = bitcast %"class.std::__1::vector.29"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #16
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 512409557603043100
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.29"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #19
  unreachable

61:                                               ; preds = %56
  %62 = sdiv exact i64 %57, 36
  %63 = icmp ult i64 %62, 256204778801521550
  br i1 %63, label %64, label %68

64:                                               ; preds = %61
  %65 = shl nsw i64 %62, 1
  %66 = icmp ult i64 %65, %7
  %67 = select i1 %66, i64 %7, i64 %65
  br label %68

68:                                               ; preds = %64, %61
  %69 = phi i64 [ %67, %64 ], [ 512409557603043100, %61 ]
  %70 = mul i64 %69, 36
  %71 = tail call i8* @_Znwm(i64 %70) #17
  %72 = bitcast i8* %71 to %"class.net::HashValue"*
  %73 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %0, i64 0, i32 0, i32 1
  %74 = bitcast %"class.net::HashValue"** %73 to i8**
  store i8* %71, i8** %74, align 8
  %75 = bitcast %"class.std::__1::vector.29"* %0 to i8**
  store i8* %71, i8** %75, align 8
  %76 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %72, i64 %69
  store %"class.net::HashValue"* %76, %"class.net::HashValue"** %8, align 8
  %77 = bitcast %"class.net::HashValue"** %73 to i64*
  %78 = ptrtoint i8* %71 to i64
  %79 = icmp sgt i64 %6, 0
  br i1 %79, label %80, label %85

80:                                               ; preds = %68
  %81 = udiv exact i64 %6, 36
  %82 = bitcast %"class.net::HashValue"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %71, i8* align 4 %82, i64 %6, i1 false) #16
  %83 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %72, i64 %81
  %84 = ptrtoint %"class.net::HashValue"* %83 to i64
  br label %85

85:                                               ; preds = %68, %80
  %86 = phi i64 [ %84, %80 ], [ %78, %68 ]
  store i64 %86, i64* %77, align 8
  br label %87

87:                                               ; preds = %45, %47, %85
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3net35SignedCertificateTimestampAndStatusENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.37"*, %"struct.net::SignedCertificateTimestampAndStatus"*, %"struct.net::SignedCertificateTimestampAndStatus"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.net::SignedCertificateTimestampAndStatus"* %2 to i64
  %5 = ptrtoint %"struct.net::SignedCertificateTimestampAndStatus"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 4
  %8 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.net::SignedCertificateTimestampAndStatus"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.37"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 4
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"struct.net::SignedCertificateTimestampAndStatus"*
  br i1 %15, label %80, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"struct.net::SignedCertificateTimestampAndStatus"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 4
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"struct.net::SignedCertificateTimestampAndStatus", %"struct.net::SignedCertificateTimestampAndStatus"* %1, i64 %22
  %25 = select i1 %23, %"struct.net::SignedCertificateTimestampAndStatus"* %24, %"struct.net::SignedCertificateTimestampAndStatus"* %2
  %26 = icmp eq %"struct.net::SignedCertificateTimestampAndStatus"* %25, %1
  br i1 %26, label %55, label %27

27:                                               ; preds = %17, %48
  %28 = phi %"struct.net::SignedCertificateTimestampAndStatus"* [ %53, %48 ], [ %16, %17 ]
  %29 = phi %"struct.net::SignedCertificateTimestampAndStatus"* [ %52, %48 ], [ %1, %17 ]
  %30 = getelementptr inbounds %"struct.net::SignedCertificateTimestampAndStatus", %"struct.net::SignedCertificateTimestampAndStatus"* %29, i64 0, i32 0, i32 0
  %31 = load %"struct.net::ct::SignedCertificateTimestamp"*, %"struct.net::ct::SignedCertificateTimestamp"** %30, align 8
  %32 = icmp eq %"struct.net::ct::SignedCertificateTimestamp"* %31, null
  br i1 %32, label %36, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw add i32* %34, i32 1 monotonic
  br label %36

36:                                               ; preds = %33, %27
  %37 = ptrtoint %"struct.net::ct::SignedCertificateTimestamp"* %31 to i64
  %38 = bitcast %"struct.net::SignedCertificateTimestampAndStatus"* %28 to i64*
  %39 = getelementptr inbounds %"struct.net::SignedCertificateTimestampAndStatus", %"struct.net::SignedCertificateTimestampAndStatus"* %28, i64 0, i32 0, i32 0
  %40 = load %"struct.net::ct::SignedCertificateTimestamp"*, %"struct.net::ct::SignedCertificateTimestamp"** %39, align 8
  store i64 %37, i64* %38, align 8
  %41 = icmp eq %"struct.net::ct::SignedCertificateTimestamp"* %40, null
  br i1 %41, label %48, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = atomicrmw sub i32* %43, i32 1 acq_rel
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %46, label %48

46:                                               ; preds = %42
  tail call void @_ZN3net2ct26SignedCertificateTimestampD1Ev(%"struct.net::ct::SignedCertificateTimestamp"* nonnull %40) #16
  %47 = bitcast %"struct.net::ct::SignedCertificateTimestamp"* %40 to i8*
  tail call void @_ZdlPv(i8* %47) #17
  br label %48

48:                                               ; preds = %46, %42, %36
  %49 = getelementptr inbounds %"struct.net::SignedCertificateTimestampAndStatus", %"struct.net::SignedCertificateTimestampAndStatus"* %29, i64 0, i32 1
  %50 = load i32, i32* %49, align 8
  %51 = getelementptr inbounds %"struct.net::SignedCertificateTimestampAndStatus", %"struct.net::SignedCertificateTimestampAndStatus"* %28, i64 0, i32 1
  store i32 %50, i32* %51, align 8
  %52 = getelementptr inbounds %"struct.net::SignedCertificateTimestampAndStatus", %"struct.net::SignedCertificateTimestampAndStatus"* %29, i64 1
  %53 = getelementptr inbounds %"struct.net::SignedCertificateTimestampAndStatus", %"struct.net::SignedCertificateTimestampAndStatus"* %28, i64 1
  %54 = icmp eq %"struct.net::SignedCertificateTimestampAndStatus"* %52, %25
  br i1 %54, label %55, label %27

55:                                               ; preds = %48, %17
  %56 = phi %"struct.net::SignedCertificateTimestampAndStatus"* [ %16, %17 ], [ %53, %48 ]
  br i1 %23, label %57, label %72

57:                                               ; preds = %55
  %58 = load i64, i64* %19, align 8
  %59 = icmp eq %"struct.net::SignedCertificateTimestampAndStatus"* %25, %2
  br i1 %59, label %70, label %60

60:                                               ; preds = %57
  %61 = inttoptr i64 %58 to %"struct.net::SignedCertificateTimestampAndStatus"*
  br label %62

62:                                               ; preds = %62, %60
  %63 = phi %"struct.net::SignedCertificateTimestampAndStatus"* [ %66, %62 ], [ %61, %60 ]
  %64 = phi %"struct.net::SignedCertificateTimestampAndStatus"* [ %65, %62 ], [ %24, %60 ]
  tail call void @_ZN3net35SignedCertificateTimestampAndStatusC1ERKS0_(%"struct.net::SignedCertificateTimestampAndStatus"* %63, %"struct.net::SignedCertificateTimestampAndStatus"* dereferenceable(16) %64) #16
  %65 = getelementptr inbounds %"struct.net::SignedCertificateTimestampAndStatus", %"struct.net::SignedCertificateTimestampAndStatus"* %64, i64 1
  %66 = getelementptr inbounds %"struct.net::SignedCertificateTimestampAndStatus", %"struct.net::SignedCertificateTimestampAndStatus"* %63, i64 1
  %67 = icmp eq %"struct.net::SignedCertificateTimestampAndStatus"* %65, %2
  br i1 %67, label %68, label %62

68:                                               ; preds = %62
  %69 = ptrtoint %"struct.net::SignedCertificateTimestampAndStatus"* %66 to i64
  br label %70

70:                                               ; preds = %57, %68
  %71 = phi i64 [ %58, %57 ], [ %69, %68 ]
  store i64 %71, i64* %19, align 8
  br label %134

72:                                               ; preds = %55
  %73 = load %"struct.net::SignedCertificateTimestampAndStatus"*, %"struct.net::SignedCertificateTimestampAndStatus"** %18, align 8
  %74 = icmp eq %"struct.net::SignedCertificateTimestampAndStatus"* %73, %56
  br i1 %74, label %79, label %75

75:                                               ; preds = %72, %75
  %76 = phi %"struct.net::SignedCertificateTimestampAndStatus"* [ %77, %75 ], [ %73, %72 ]
  %77 = getelementptr inbounds %"struct.net::SignedCertificateTimestampAndStatus", %"struct.net::SignedCertificateTimestampAndStatus"* %76, i64 -1
  tail call void @_ZN3net35SignedCertificateTimestampAndStatusD1Ev(%"struct.net::SignedCertificateTimestampAndStatus"* %77) #16
  %78 = icmp eq %"struct.net::SignedCertificateTimestampAndStatus"* %77, %56
  br i1 %78, label %79, label %75

79:                                               ; preds = %75, %72
  store %"struct.net::SignedCertificateTimestampAndStatus"* %56, %"struct.net::SignedCertificateTimestampAndStatus"** %18, align 8
  br label %134

80:                                               ; preds = %3
  %81 = icmp eq i64 %12, 0
  br i1 %81, label %97, label %82

82:                                               ; preds = %80
  %83 = inttoptr i64 %12 to i8*
  %84 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %0, i64 0, i32 0, i32 1
  %85 = load %"struct.net::SignedCertificateTimestampAndStatus"*, %"struct.net::SignedCertificateTimestampAndStatus"** %84, align 8
  %86 = icmp eq %"struct.net::SignedCertificateTimestampAndStatus"* %85, %16
  br i1 %86, label %94, label %87

87:                                               ; preds = %82, %87
  %88 = phi %"struct.net::SignedCertificateTimestampAndStatus"* [ %89, %87 ], [ %85, %82 ]
  %89 = getelementptr inbounds %"struct.net::SignedCertificateTimestampAndStatus", %"struct.net::SignedCertificateTimestampAndStatus"* %88, i64 -1
  tail call void @_ZN3net35SignedCertificateTimestampAndStatusD1Ev(%"struct.net::SignedCertificateTimestampAndStatus"* %89) #16
  %90 = icmp eq %"struct.net::SignedCertificateTimestampAndStatus"* %89, %16
  br i1 %90, label %91, label %87

91:                                               ; preds = %87
  %92 = bitcast %"class.std::__1::vector.37"* %0 to i8**
  %93 = load i8*, i8** %92, align 8
  br label %94

94:                                               ; preds = %91, %82
  %95 = phi i8* [ %93, %91 ], [ %83, %82 ]
  store %"struct.net::SignedCertificateTimestampAndStatus"* %16, %"struct.net::SignedCertificateTimestampAndStatus"** %84, align 8
  tail call void @_ZdlPv(i8* %95) #17
  %96 = bitcast %"class.std::__1::vector.37"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %96, i8 0, i64 24, i1 false) #16
  br label %97

97:                                               ; preds = %80, %94
  %98 = phi i64 [ %10, %80 ], [ 0, %94 ]
  %99 = icmp ugt i64 %7, 1152921504606846975
  br i1 %99, label %100, label %102

100:                                              ; preds = %97
  %101 = bitcast %"class.std::__1::vector.37"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %101) #19
  unreachable

102:                                              ; preds = %97
  %103 = ashr exact i64 %98, 4
  %104 = icmp ult i64 %103, 576460752303423487
  br i1 %104, label %105, label %112

105:                                              ; preds = %102
  %106 = ashr exact i64 %98, 3
  %107 = icmp ult i64 %106, %7
  br i1 %107, label %112, label %108

108:                                              ; preds = %105
  %109 = icmp ugt i64 %106, 1152921504606846975
  br i1 %109, label %110, label %112

110:                                              ; preds = %108
  %111 = bitcast %"class.std::__1::vector.37"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %111) #19
  unreachable

112:                                              ; preds = %105, %102, %108
  %113 = phi i64 [ %106, %108 ], [ 1152921504606846975, %102 ], [ %7, %105 ]
  %114 = shl i64 %113, 4
  %115 = tail call i8* @_Znwm(i64 %114) #17
  %116 = bitcast i8* %115 to %"struct.net::SignedCertificateTimestampAndStatus"*
  %117 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %0, i64 0, i32 0, i32 1
  %118 = bitcast %"struct.net::SignedCertificateTimestampAndStatus"** %117 to i8**
  store i8* %115, i8** %118, align 8
  %119 = bitcast %"class.std::__1::vector.37"* %0 to i8**
  store i8* %115, i8** %119, align 8
  %120 = getelementptr inbounds %"struct.net::SignedCertificateTimestampAndStatus", %"struct.net::SignedCertificateTimestampAndStatus"* %116, i64 %113
  store %"struct.net::SignedCertificateTimestampAndStatus"* %120, %"struct.net::SignedCertificateTimestampAndStatus"** %8, align 8
  %121 = bitcast %"struct.net::SignedCertificateTimestampAndStatus"** %117 to i64*
  %122 = ptrtoint i8* %115 to i64
  %123 = icmp eq %"struct.net::SignedCertificateTimestampAndStatus"* %1, %2
  br i1 %123, label %132, label %124

124:                                              ; preds = %112, %124
  %125 = phi %"struct.net::SignedCertificateTimestampAndStatus"* [ %128, %124 ], [ %116, %112 ]
  %126 = phi %"struct.net::SignedCertificateTimestampAndStatus"* [ %127, %124 ], [ %1, %112 ]
  tail call void @_ZN3net35SignedCertificateTimestampAndStatusC1ERKS0_(%"struct.net::SignedCertificateTimestampAndStatus"* %125, %"struct.net::SignedCertificateTimestampAndStatus"* dereferenceable(16) %126) #16
  %127 = getelementptr inbounds %"struct.net::SignedCertificateTimestampAndStatus", %"struct.net::SignedCertificateTimestampAndStatus"* %126, i64 1
  %128 = getelementptr inbounds %"struct.net::SignedCertificateTimestampAndStatus", %"struct.net::SignedCertificateTimestampAndStatus"* %125, i64 1
  %129 = icmp eq %"struct.net::SignedCertificateTimestampAndStatus"* %127, %2
  br i1 %129, label %130, label %124

130:                                              ; preds = %124
  %131 = ptrtoint %"struct.net::SignedCertificateTimestampAndStatus"* %128 to i64
  br label %132

132:                                              ; preds = %112, %130
  %133 = phi i64 [ %122, %112 ], [ %131, %130 ]
  store i64 %133, i64* %121, align 8
  br label %134

134:                                              ; preds = %70, %79, %132
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3net2ct26SignedCertificateTimestampD1Ev(%"struct.net::ct::SignedCertificateTimestamp"*) unnamed_addr #3

declare void @_ZN3net35SignedCertificateTimestampAndStatusC1ERKS0_(%"struct.net::SignedCertificateTimestampAndStatus"*, %"struct.net::SignedCertificateTimestampAndStatus"* dereferenceable(16)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3net35SignedCertificateTimestampAndStatusD1Ev(%"struct.net::SignedCertificateTimestampAndStatus"*) unnamed_addr #3

declare i8* @sk_value(%struct.stack_st*, i64) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #14 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #19
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #17
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %38 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false) #16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #16
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %40 = ptrtoint %"class.std::__1::basic_string"* %39 to i64
  %41 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %42 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %41, align 8
  %43 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %44 = icmp eq %"class.std::__1::basic_string"* %43, %42
  br i1 %44, label %45, label %47

45:                                               ; preds = %31
  %46 = ptrtoint %"class.std::__1::basic_string"* %42 to i64
  br label %58

47:                                               ; preds = %31, %47
  %48 = phi %"class.std::__1::basic_string"* [ %50, %47 ], [ %34, %31 ]
  %49 = phi %"class.std::__1::basic_string"* [ %51, %47 ], [ %43, %31 ]
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 -1
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 -1
  %52 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  %53 = bitcast %"class.std::__1::basic_string"* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 24, i1 false) #16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #16
  %54 = icmp eq %"class.std::__1::basic_string"* %51, %42
  br i1 %54, label %55, label %47

55:                                               ; preds = %47
  %56 = load i64, i64* %6, align 8
  %57 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %58

58:                                               ; preds = %45, %55
  %59 = phi %"class.std::__1::basic_string"* [ %42, %45 ], [ %57, %55 ]
  %60 = phi %"class.std::__1::basic_string"* [ %34, %45 ], [ %50, %55 ]
  %61 = phi i64 [ %46, %45 ], [ %56, %55 ]
  %62 = ptrtoint %"class.std::__1::basic_string"* %60 to i64
  store i64 %62, i64* %6, align 8
  store i64 %40, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %63 = inttoptr i64 %61 to %"class.std::__1::basic_string"*
  %64 = icmp eq %"class.std::__1::basic_string"* %59, %63
  br i1 %64, label %77, label %65

65:                                               ; preds = %58, %75
  %66 = phi %"class.std::__1::basic_string"* [ %67, %75 ], [ %59, %58 ]
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 -1
  %68 = bitcast %"class.std::__1::basic_string"* %67 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  tail call void @_ZdlPv(i8* %74) #17
  br label %75

75:                                               ; preds = %72, %65
  %76 = icmp eq %"class.std::__1::basic_string"* %67, %63
  br i1 %76, label %77, label %65

77:                                               ; preds = %75, %58
  %78 = icmp eq i64 %61, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %77
  %80 = inttoptr i64 %61 to i8*
  tail call void @_ZdlPv(i8* %80) #17
  br label %81

81:                                               ; preds = %77, %79
  ret void
}

declare void @SSL_free(%struct.ssl_st*) local_unnamed_addr #1

declare void @_ZN3net16SocketBIOAdapterC1EPNS_12StreamSocketEiiPNS0_8DelegateE(%"class.net::SocketBIOAdapter"*, %"class.net::StreamSocket"*, i32, i32, %"class.net::SocketBIOAdapter::Delegate"*) unnamed_addr #1

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #3

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net19SSLClientSocketImplEFvvEJNS_7WeakPtrIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #16
  br i1 %6, label %7, label %42

7:                                                ; preds = %1
  %8 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to %"class.net::SSLClientSocketImpl"**
  %10 = load %"class.net::SSLClientSocketImpl"*, %"class.net::SSLClientSocketImpl"** %9, align 8
  %11 = icmp eq %"class.net::SSLClientSocketImpl"* %10, null
  br i1 %11, label %42, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %16 = bitcast void ()** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #16
  br i1 %18, label %22, label %19

19:                                               ; preds = %12
  %20 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.45, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.46, i64 0, i64 0)) #16
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #16
  br label %22

22:                                               ; preds = %19, %12
  %23 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #16
  %24 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = select i1 %23, i8* %25, i8* null
  %27 = getelementptr inbounds i8, i8* %26, i64 %17
  %28 = bitcast i8* %27 to %"class.net::SSLClientSocketImpl"*
  %29 = and i64 %14, 1
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %22
  %32 = bitcast i8* %27 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = add i64 %14, -1
  %35 = getelementptr i8, i8* %33, i64 %34
  %36 = bitcast i8* %35 to void (%"class.net::SSLClientSocketImpl"*)**
  %37 = load void (%"class.net::SSLClientSocketImpl"*)*, void (%"class.net::SSLClientSocketImpl"*)** %36, align 8
  br label %40

38:                                               ; preds = %22
  %39 = inttoptr i64 %14 to void (%"class.net::SSLClientSocketImpl"*)*
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi void (%"class.net::SSLClientSocketImpl"*)* [ %37, %31 ], [ %39, %38 ]
  call void %41(%"class.net::SSLClientSocketImpl"* %28) #16
  br label %42

42:                                               ; preds = %1, %7, %40
  ret void
}

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net19SSLClientSocketImplEFvvEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #16
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #17
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net19SSLClientSocketImplEFvvEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #16
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.net::SSLClientSocketImpl"**
  %9 = load %"class.net::SSLClientSocketImpl"*, %"class.net::SSLClientSocketImpl"** %8, align 8
  %10 = icmp ne %"class.net::SSLClientSocketImpl"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #16
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #1

declare zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #3

declare void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"*, i32, %"struct.net::NetLogSource"* dereferenceable(16), i32, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #3

declare void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"*, i8 zeroext) unnamed_addr #1

declare %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"*, i8*, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #1

declare void @_ZN3net25NetLogX509CertificateListEPKNS_15X509CertificateE(%"class.base::Value"* sret, %"class.net::X509Certificate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net19SSLClientSocketImplEFviEJNS0_17UnretainedWrapperIS4_EEEEEFviEE7RunOnceEPNS0_13BindStateBaseEi(%"class.base::internal::BindStateBase"*, i32) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %10 = bitcast void ()** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds i8, i8* %6, i64 %11
  %13 = bitcast i8* %12 to %"class.net::SSLClientSocketImpl"*
  %14 = and i64 %8, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %2
  %17 = bitcast i8* %12 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = add i64 %8, -1
  %20 = getelementptr i8, i8* %18, i64 %19
  %21 = bitcast i8* %20 to void (%"class.net::SSLClientSocketImpl"*, i32)**
  %22 = load void (%"class.net::SSLClientSocketImpl"*, i32)*, void (%"class.net::SSLClientSocketImpl"*, i32)** %21, align 8
  br label %25

23:                                               ; preds = %2
  %24 = inttoptr i64 %8 to void (%"class.net::SSLClientSocketImpl"*, i32)*
  br label %25

25:                                               ; preds = %16, %23
  %26 = phi void (%"class.net::SSLClientSocketImpl"*, i32)* [ %22, %16 ], [ %24, %23 ]
  tail call void %26(%"class.net::SSLClientSocketImpl"* %13, i32 %1) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net19SSLClientSocketImplEFviEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #17
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI13scoped_refptrIN3net2ct26SignedCertificateTimestampEENS_9allocatorIS5_EEE21__push_back_slow_pathIRKS5_EEvOT_(%"class.std::__1::vector.305"*, %class.scoped_refptr.39* dereferenceable(8)) local_unnamed_addr #14 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.305", %"class.std::__1::vector.305"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %class.scoped_refptr.39** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.305"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.305"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #19
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.305", %"class.std::__1::vector.305"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %class.scoped_refptr.39** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #19
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #17
  %33 = bitcast i8* %32 to %class.scoped_refptr.39*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %class.scoped_refptr.39* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %class.scoped_refptr.39, %class.scoped_refptr.39* %36, i64 %9
  %38 = getelementptr inbounds %class.scoped_refptr.39, %class.scoped_refptr.39* %36, i64 %35
  %39 = ptrtoint %class.scoped_refptr.39* %38 to i64
  %40 = getelementptr inbounds %class.scoped_refptr.39, %class.scoped_refptr.39* %1, i64 0, i32 0
  %41 = load %"struct.net::ct::SignedCertificateTimestamp"*, %"struct.net::ct::SignedCertificateTimestamp"** %40, align 8
  %42 = getelementptr inbounds %class.scoped_refptr.39, %class.scoped_refptr.39* %37, i64 0, i32 0
  store %"struct.net::ct::SignedCertificateTimestamp"* %41, %"struct.net::ct::SignedCertificateTimestamp"** %42, align 8
  %43 = icmp eq %"struct.net::ct::SignedCertificateTimestamp"* %41, null
  br i1 %43, label %47, label %44

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = atomicrmw add i32* %45, i32 1 monotonic
  br label %47

47:                                               ; preds = %34, %44
  %48 = getelementptr inbounds %class.scoped_refptr.39, %class.scoped_refptr.39* %37, i64 1
  %49 = ptrtoint %class.scoped_refptr.39* %48 to i64
  %50 = getelementptr inbounds %"class.std::__1::vector.305", %"class.std::__1::vector.305"* %0, i64 0, i32 0, i32 0
  %51 = load %class.scoped_refptr.39*, %class.scoped_refptr.39** %50, align 8
  %52 = ptrtoint %class.scoped_refptr.39* %51 to i64
  %53 = load %class.scoped_refptr.39*, %class.scoped_refptr.39** %3, align 8
  %54 = icmp eq %class.scoped_refptr.39* %53, %51
  br i1 %54, label %136, label %55

55:                                               ; preds = %47
  %56 = getelementptr %class.scoped_refptr.39, %class.scoped_refptr.39* %53, i64 -1, i32 0
  %57 = ptrtoint %"struct.net::ct::SignedCertificateTimestamp"** %56 to i64
  %58 = sub i64 %57, %52
  %59 = lshr i64 %58, 3
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 7
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %75, label %63

63:                                               ; preds = %55, %63
  %64 = phi %class.scoped_refptr.39* [ %67, %63 ], [ %37, %55 ]
  %65 = phi %class.scoped_refptr.39* [ %68, %63 ], [ %53, %55 ]
  %66 = phi i64 [ %73, %63 ], [ %61, %55 ]
  %67 = getelementptr inbounds %class.scoped_refptr.39, %class.scoped_refptr.39* %64, i64 -1
  %68 = getelementptr inbounds %class.scoped_refptr.39, %class.scoped_refptr.39* %65, i64 -1
  %69 = getelementptr inbounds %class.scoped_refptr.39, %class.scoped_refptr.39* %68, i64 0, i32 0
  %70 = bitcast %class.scoped_refptr.39* %68 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = bitcast %class.scoped_refptr.39* %67 to i64*
  store i64 %71, i64* %72, align 8
  store %"struct.net::ct::SignedCertificateTimestamp"* null, %"struct.net::ct::SignedCertificateTimestamp"** %69, align 8
  %73 = add i64 %66, -1
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %75, label %63, !llvm.loop !55

75:                                               ; preds = %63, %55
  %76 = phi %class.scoped_refptr.39* [ undef, %55 ], [ %67, %63 ]
  %77 = phi %class.scoped_refptr.39* [ %37, %55 ], [ %67, %63 ]
  %78 = phi %class.scoped_refptr.39* [ %53, %55 ], [ %68, %63 ]
  %79 = icmp ult i64 %58, 56
  br i1 %79, label %132, label %80

80:                                               ; preds = %75, %80
  %81 = phi %class.scoped_refptr.39* [ %125, %80 ], [ %77, %75 ]
  %82 = phi %class.scoped_refptr.39* [ %126, %80 ], [ %78, %75 ]
  %83 = getelementptr inbounds %class.scoped_refptr.39, %class.scoped_refptr.39* %81, i64 -1
  %84 = getelementptr inbounds %class.scoped_refptr.39, %class.scoped_refptr.39* %82, i64 -1
  %85 = getelementptr inbounds %class.scoped_refptr.39, %class.scoped_refptr.39* %84, i64 0, i32 0
  %86 = bitcast %class.scoped_refptr.39* %84 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = bitcast %class.scoped_refptr.39* %83 to i64*
  store i64 %87, i64* %88, align 8
  store %"struct.net::ct::SignedCertificateTimestamp"* null, %"struct.net::ct::SignedCertificateTimestamp"** %85, align 8
  %89 = getelementptr inbounds %class.scoped_refptr.39, %class.scoped_refptr.39* %81, i64 -2
  %90 = getelementptr inbounds %class.scoped_refptr.39, %class.scoped_refptr.39* %82, i64 -2
  %91 = getelementptr inbounds %class.scoped_refptr.39, %class.scoped_refptr.39* %90, i64 0, i32 0
  %92 = bitcast %class.scoped_refptr.39* %90 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %class.scoped_refptr.39* %89 to i64*
  store i64 %93, i64* %94, align 8
  store %"struct.net::ct::SignedCertificateTimestamp"* null, %"struct.net::ct::SignedCertificateTimestamp"** %91, align 8
  %95 = getelementptr inbounds %class.scoped_refptr.39, %class.scoped_refptr.39* %81, i64 -3
  %96 = getelementptr inbounds %class.scoped_refptr.39, %class.scoped_refptr.39* %82, i64 -3
  %97 = getelementptr inbounds %class.scoped_refptr.39, %class.scoped_refptr.39* %96, i64 0, i32 0
  %98 = bitcast %class.scoped_refptr.39* %96 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %class.scoped_refptr.39* %95 to i64*
  store i64 %99, i64* %100, align 8
  store %"struct.net::ct::SignedCertificateTimestamp"* null, %"struct.net::ct::SignedCertificateTimestamp"** %97, align 8
  %101 = getelementptr inbounds %class.scoped_refptr.39, %class.scoped_refptr.39* %81, i64 -4
  %102 = getelementptr inbounds %class.scoped_refptr.39, %class.scoped_refptr.39* %82, i64 -4
  %103 = getelementptr inbounds %class.scoped_refptr.39, %class.scoped_refptr.39* %102, i64 0, i32 0
  %104 = bitcast %class.scoped_refptr.39* %102 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = bitcast %class.scoped_refptr.39* %101 to i64*
  store i64 %105, i64* %106, align 8
  store %"struct.net::ct::SignedCertificateTimestamp"* null, %"struct.net::ct::SignedCertificateTimestamp"** %103, align 8
  %107 = getelementptr inbounds %class.scoped_refptr.39, %class.scoped_refptr.39* %81, i64 -5
  %108 = getelementptr inbounds %class.scoped_refptr.39, %class.scoped_refptr.39* %82, i64 -5
  %109 = getelementptr inbounds %class.scoped_refptr.39, %class.scoped_refptr.39* %108, i64 0, i32 0
  %110 = bitcast %class.scoped_refptr.39* %108 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = bitcast %class.scoped_refptr.39* %107 to i64*
  store i64 %111, i64* %112, align 8
  store %"struct.net::ct::SignedCertificateTimestamp"* null, %"struct.net::ct::SignedCertificateTimestamp"** %109, align 8
  %113 = getelementptr inbounds %class.scoped_refptr.39, %class.scoped_refptr.39* %81, i64 -6
  %114 = getelementptr inbounds %class.scoped_refptr.39, %class.scoped_refptr.39* %82, i64 -6
  %115 = getelementptr inbounds %class.scoped_refptr.39, %class.scoped_refptr.39* %114, i64 0, i32 0
  %116 = bitcast %class.scoped_refptr.39* %114 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = bitcast %class.scoped_refptr.39* %113 to i64*
  store i64 %117, i64* %118, align 8
  store %"struct.net::ct::SignedCertificateTimestamp"* null, %"struct.net::ct::SignedCertificateTimestamp"** %115, align 8
  %119 = getelementptr inbounds %class.scoped_refptr.39, %class.scoped_refptr.39* %81, i64 -7
  %120 = getelementptr inbounds %class.scoped_refptr.39, %class.scoped_refptr.39* %82, i64 -7
  %121 = getelementptr inbounds %class.scoped_refptr.39, %class.scoped_refptr.39* %120, i64 0, i32 0
  %122 = bitcast %class.scoped_refptr.39* %120 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %class.scoped_refptr.39* %119 to i64*
  store i64 %123, i64* %124, align 8
  store %"struct.net::ct::SignedCertificateTimestamp"* null, %"struct.net::ct::SignedCertificateTimestamp"** %121, align 8
  %125 = getelementptr inbounds %class.scoped_refptr.39, %class.scoped_refptr.39* %81, i64 -8
  %126 = getelementptr inbounds %class.scoped_refptr.39, %class.scoped_refptr.39* %82, i64 -8
  %127 = getelementptr inbounds %class.scoped_refptr.39, %class.scoped_refptr.39* %126, i64 0, i32 0
  %128 = bitcast %class.scoped_refptr.39* %126 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %class.scoped_refptr.39* %125 to i64*
  store i64 %129, i64* %130, align 8
  store %"struct.net::ct::SignedCertificateTimestamp"* null, %"struct.net::ct::SignedCertificateTimestamp"** %127, align 8
  %131 = icmp eq %class.scoped_refptr.39* %126, %51
  br i1 %131, label %132, label %80

132:                                              ; preds = %80, %75
  %133 = phi %class.scoped_refptr.39* [ %76, %75 ], [ %125, %80 ]
  %134 = load i64, i64* %6, align 8
  %135 = load %class.scoped_refptr.39*, %class.scoped_refptr.39** %3, align 8
  br label %136

136:                                              ; preds = %47, %132
  %137 = phi %class.scoped_refptr.39* [ %135, %132 ], [ %51, %47 ]
  %138 = phi %class.scoped_refptr.39* [ %133, %132 ], [ %37, %47 ]
  %139 = phi i64 [ %134, %132 ], [ %52, %47 ]
  %140 = ptrtoint %class.scoped_refptr.39* %138 to i64
  store i64 %140, i64* %6, align 8
  store i64 %49, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %141 = inttoptr i64 %139 to %class.scoped_refptr.39*
  %142 = icmp eq %class.scoped_refptr.39* %137, %141
  br i1 %142, label %157, label %143

143:                                              ; preds = %136, %155
  %144 = phi %class.scoped_refptr.39* [ %145, %155 ], [ %137, %136 ]
  %145 = getelementptr inbounds %class.scoped_refptr.39, %class.scoped_refptr.39* %144, i64 -1
  %146 = getelementptr inbounds %class.scoped_refptr.39, %class.scoped_refptr.39* %145, i64 0, i32 0
  %147 = load %"struct.net::ct::SignedCertificateTimestamp"*, %"struct.net::ct::SignedCertificateTimestamp"** %146, align 8
  %148 = icmp eq %"struct.net::ct::SignedCertificateTimestamp"* %147, null
  br i1 %148, label %155, label %149

149:                                              ; preds = %143
  %150 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %147, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %151 = atomicrmw sub i32* %150, i32 1 acq_rel
  %152 = icmp eq i32 %151, 1
  br i1 %152, label %153, label %155

153:                                              ; preds = %149
  tail call void @_ZN3net2ct26SignedCertificateTimestampD1Ev(%"struct.net::ct::SignedCertificateTimestamp"* nonnull %147) #16
  %154 = bitcast %"struct.net::ct::SignedCertificateTimestamp"* %147 to i8*
  tail call void @_ZdlPv(i8* %154) #17
  br label %155

155:                                              ; preds = %153, %149, %143
  %156 = icmp eq %class.scoped_refptr.39* %145, %141
  br i1 %156, label %157, label %143

157:                                              ; preds = %155, %136
  %158 = icmp eq i64 %139, 0
  br i1 %158, label %161, label %159

159:                                              ; preds = %157
  %160 = inttoptr i64 %139 to i8*
  tail call void @_ZdlPv(i8* %160) #17
  br label %161

161:                                              ; preds = %157, %159
  ret void
}

declare %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPKc(%"class.base::Value"*, i8*, i64, i8*) local_unnamed_addr #1

declare i8* @SSL_get_signature_algorithm_name(i16 zeroext, i32) local_unnamed_addr #1

declare %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEONS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(%"class.base::Value"*, i8*, i64, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net19SSLClientSocketImplEFvNS3_5ErrorERKNSt3__16vectorIhNS6_9allocatorIhEEEEEJNS_7WeakPtrIS4_EEEEEFvS5_SC_EE7RunOnceEPNS0_13BindStateBaseES5_SC_(%"class.base::internal::BindStateBase"*, i32, %"class.std::__1::vector.210"* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to %"class.base::internal::WeakReference"*
  %8 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #16
  br i1 %8, label %9, label %44

9:                                                ; preds = %3
  %10 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %6, i64 1
  %11 = bitcast void (%"class.base::internal::BindStateBase"*)** %10 to %"class.net::SSLClientSocketImpl"**
  %12 = load %"class.net::SSLClientSocketImpl"*, %"class.net::SSLClientSocketImpl"** %11, align 8
  %13 = icmp eq %"class.net::SSLClientSocketImpl"* %12, null
  br i1 %13, label %44, label %14

14:                                               ; preds = %9
  %15 = bitcast %"class.base::internal::BindStateBase"* %5 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %18 = bitcast void ()** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #16
  br i1 %20, label %24, label %21

21:                                               ; preds = %14
  %22 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.45, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.46, i64 0, i64 0)) #16
  %23 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #16
  br label %24

24:                                               ; preds = %21, %14
  %25 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #16
  %26 = bitcast void (%"class.base::internal::BindStateBase"*)** %10 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = select i1 %25, i8* %27, i8* null
  %29 = getelementptr inbounds i8, i8* %28, i64 %19
  %30 = bitcast i8* %29 to %"class.net::SSLClientSocketImpl"*
  %31 = and i64 %16, 1
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %40, label %33

33:                                               ; preds = %24
  %34 = bitcast i8* %29 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = add i64 %16, -1
  %37 = getelementptr i8, i8* %35, i64 %36
  %38 = bitcast i8* %37 to void (%"class.net::SSLClientSocketImpl"*, i32, %"class.std::__1::vector.210"*)**
  %39 = load void (%"class.net::SSLClientSocketImpl"*, i32, %"class.std::__1::vector.210"*)*, void (%"class.net::SSLClientSocketImpl"*, i32, %"class.std::__1::vector.210"*)** %38, align 8
  br label %42

40:                                               ; preds = %24
  %41 = inttoptr i64 %16 to void (%"class.net::SSLClientSocketImpl"*, i32, %"class.std::__1::vector.210"*)*
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi void (%"class.net::SSLClientSocketImpl"*, i32, %"class.std::__1::vector.210"*)* [ %39, %33 ], [ %41, %40 ]
  call void %43(%"class.net::SSLClientSocketImpl"* %30, i32 %1, %"class.std::__1::vector.210"* dereferenceable(24) %2) #16
  br label %44

44:                                               ; preds = %3, %9, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net19SSLClientSocketImplEFvNS2_5ErrorERKNSt3__16vectorIhNS5_9allocatorIhEEEEEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #16
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #17
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net19SSLClientSocketImplEFvNS3_5ErrorERKNSt3__16vectorIhNS6_9allocatorIhEEEEEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSI_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #16
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.net::SSLClientSocketImpl"**
  %9 = load %"class.net::SSLClientSocketImpl"*, %"class.net::SSLClientSocketImpl"** %8, align 8
  %10 = icmp ne %"class.net::SSLClientSocketImpl"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #16
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIhNS_9allocatorIhEEE6assignIPhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.210"*, i8*, i8*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i8* %2 to i64
  %5 = ptrtoint i8* %1 to i64
  %6 = sub i64 %4, %5
  %7 = getelementptr inbounds %"class.std::__1::vector.210", %"class.std::__1::vector.210"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = bitcast i8** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.210"* %0 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = icmp ugt i64 %6, %12
  %14 = inttoptr i64 %11 to i8*
  br i1 %13, label %40, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.std::__1::vector.210", %"class.std::__1::vector.210"* %0, i64 0, i32 0, i32 1
  %17 = bitcast i8** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %11
  %20 = icmp ugt i64 %6, %19
  %21 = getelementptr inbounds i8, i8* %1, i64 %19
  %22 = select i1 %20, i8* %21, i8* %2
  %23 = ptrtoint i8* %22 to i64
  %24 = sub i64 %23, %5
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %27, label %26

26:                                               ; preds = %15
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %14, i8* align 1 %1, i64 %24, i1 false) #16
  br label %27

27:                                               ; preds = %15, %26
  br i1 %20, label %28, label %38

28:                                               ; preds = %27
  %29 = load i64, i64* %17, align 8
  %30 = sub i64 %4, %23
  %31 = icmp sgt i64 %30, 0
  br i1 %31, label %32, label %36

32:                                               ; preds = %28
  %33 = inttoptr i64 %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %33, i8* align 1 %22, i64 %30, i1 false) #16
  %34 = getelementptr inbounds i8, i8* %33, i64 %30
  %35 = ptrtoint i8* %34 to i64
  br label %36

36:                                               ; preds = %28, %32
  %37 = phi i64 [ %35, %32 ], [ %29, %28 ]
  store i64 %37, i64* %17, align 8
  br label %66

38:                                               ; preds = %27
  %39 = getelementptr inbounds i8, i8* %14, i64 %24
  store i8* %39, i8** %16, align 8
  br label %66

40:                                               ; preds = %3
  %41 = getelementptr inbounds %"class.std::__1::vector.210", %"class.std::__1::vector.210"* %0, i64 0, i32 0, i32 0
  %42 = icmp eq i64 %11, 0
  br i1 %42, label %47, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.std::__1::vector.210", %"class.std::__1::vector.210"* %0, i64 0, i32 0, i32 1
  %45 = bitcast i8** %44 to i64*
  store i64 %11, i64* %45, align 8
  tail call void @_ZdlPv(i8* nonnull %14) #17
  %46 = bitcast %"class.std::__1::vector.210"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 24, i1 false) #16
  br label %47

47:                                               ; preds = %40, %43
  %48 = phi i64 [ %9, %40 ], [ 0, %43 ]
  %49 = icmp slt i64 %6, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %47
  %51 = bitcast %"class.std::__1::vector.210"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %51) #19
  unreachable

52:                                               ; preds = %47
  %53 = icmp ult i64 %48, 4611686018427387903
  br i1 %53, label %54, label %58

54:                                               ; preds = %52
  %55 = shl i64 %48, 1
  %56 = icmp ult i64 %55, %6
  %57 = select i1 %56, i64 %6, i64 %55
  br label %58

58:                                               ; preds = %54, %52
  %59 = phi i64 [ %57, %54 ], [ 9223372036854775807, %52 ]
  %60 = tail call i8* @_Znwm(i64 %59) #17
  %61 = getelementptr inbounds %"class.std::__1::vector.210", %"class.std::__1::vector.210"* %0, i64 0, i32 0, i32 1
  store i8* %60, i8** %61, align 8
  store i8* %60, i8** %41, align 8
  %62 = getelementptr inbounds i8, i8* %60, i64 %59
  store i8* %62, i8** %7, align 8
  %63 = bitcast i8** %61 to i64*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %60, i8* align 1 %1, i64 %6, i1 false) #16
  %64 = getelementptr inbounds i8, i8* %60, i64 %6
  %65 = ptrtoint i8* %64 to i64
  store i64 %65, i64* %63, align 8
  br label %66

66:                                               ; preds = %36, %38, %58
  ret void
}

declare void @_ZN3net17NetLogBinaryValueEPKvm(%"class.base::Value"* sret, i8*, i64) local_unnamed_addr #1

declare void @_ZN3net6NetLog16AddEntryInternalENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEPKNS0_18GetParamsInterfaceE(%"class.net::NetLog"*, i32, %"struct.net::NetLogSource"* dereferenceable(16), i32, %"class.net::NetLog::GetParamsInterface"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net6NetLog18GetParamsInterfaceD2Ev(%"class.net::NetLog::GetParamsInterface"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZZN3net6NetLog8AddEntryIZNS_19SSLClientSocketImpl15MessageCallbackEiiPKvmE3$_3EENSt3__19enable_ifIXsr18ExpectsCaptureModeIT_EE5valueEvE4typeENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseERKS8_ENK13GetParamsImpl9GetParamsENS_17NetLogCaptureModeE"(%"class.base::Value"* noalias sret, %class.GetParamsImpl* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::Value", align 8
  %5 = getelementptr inbounds %class.GetParamsImpl, %class.GetParamsImpl* %1, i64 0, i32 1
  %6 = load %class.anon.318*, %class.anon.318** %5, align 8
  %7 = getelementptr inbounds %class.anon.318, %class.anon.318* %6, i64 0, i32 0
  %8 = load i32*, i32** %7, align 8, !noalias !57
  %9 = load i32, i32* %8, align 4, !noalias !57
  %10 = getelementptr inbounds %class.anon.318, %class.anon.318* %6, i64 0, i32 1
  %11 = load i8**, i8*** %10, align 8, !noalias !57
  %12 = load i8*, i8** %11, align 8, !noalias !57
  %13 = getelementptr inbounds %class.anon.318, %class.anon.318* %6, i64 0, i32 2
  %14 = load i64*, i64** %13, align 8, !noalias !57
  %15 = load i64, i64* %14, align 8, !noalias !57
  %16 = bitcast %"class.base::Value"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 -86, i64 32, i1 false) #16, !alias.scope !60
  tail call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* %0, i8 zeroext 6) #16
  %17 = icmp eq i64 %15, 0
  br i1 %17, label %30, label %18

18:                                               ; preds = %3
  %19 = icmp ne i32 %9, 0
  %20 = load i8, i8* %12, align 1, !noalias !63
  %21 = zext i8 %20 to i32
  %22 = tail call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.51, i64 0, i64 0), i64 4, i32 %21) #16
  %23 = icmp eq i8 %20, 11
  %24 = and i1 %19, %23
  br i1 %24, label %25, label %27

25:                                               ; preds = %18
  %26 = tail call zeroext i1 @_ZN3net32NetLogCaptureIncludesSocketBytesENS_17NetLogCaptureModeE(i32 %2) #16
  br i1 %26, label %27, label %30

27:                                               ; preds = %25, %18
  %28 = bitcast %"class.base::Value"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %28) #16, !noalias !60
  call void @_ZN3net17NetLogBinaryValueEPKvm(%"class.base::Value"* nonnull sret %4, i8* %12, i64 %15) #16
  %29 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.50, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %4) #16
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %28) #16, !noalias !60
  br label %30

30:                                               ; preds = %3, %25, %27
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @"_ZZN3net6NetLog8AddEntryIZNS_19SSLClientSocketImpl15MessageCallbackEiiPKvmE3$_3EENSt3__19enable_ifIXsr18ExpectsCaptureModeIT_EE5valueEvE4typeENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseERKS8_EN13GetParamsImplD0Ev"(%class.GetParamsImpl*) unnamed_addr #14 align 2 {
  %2 = bitcast %class.GetParamsImpl* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

declare %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"*, i8*, i64, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN3net32NetLogCaptureIncludesSocketBytesENS_17NetLogCaptureModeE(i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base5ValueC1Ev(%"class.base::Value"*) unnamed_addr #3

declare void @_ZN3net18SSLVersionToStringEPPKci(i8**, i32) local_unnamed_addr #1

declare %"class.base::Value"* @_ZN4base5Value10SetBoolKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.base::Value"*, i8*, i64, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base5ValueC1EOS0_(%"class.base::Value"*, %"class.base::Value"* dereferenceable(32)) unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #15

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nofree nounwind readonly }
attributes #16 = { nounwind }
attributes #17 = { builtin nounwind }
attributes #18 = { nounwind readonly }
attributes #19 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!5, !7}
!5 = distinct !{!5, !6, !"_ZN3net12_GLOBAL__N_119NetLogSSLInfoParamsEPNS_19SSLClientSocketImplE: argument 0"}
!6 = distinct !{!6, !"_ZN3net12_GLOBAL__N_119NetLogSSLInfoParamsEPNS_19SSLClientSocketImplE"}
!7 = distinct !{!7, !8, !"_ZZN3net19SSLClientSocketImpl18LogConnectEndEventEiENK3$_4clEv: argument 0"}
!8 = distinct !{!8, !"_ZZN3net19SSLClientSocketImpl18LogConnectEndEventEiENK3$_4clEv"}
!9 = !{!5}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZNK4base14WeakPtrFactoryIN3net19SSLClientSocketImplEE10GetWeakPtrEv: argument 0"}
!12 = distinct !{!12, !"_ZNK4base14WeakPtrFactoryIN3net19SSLClientSocketImplEE10GetWeakPtrEv"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNK4base14WeakPtrFactoryIN3net19SSLClientSocketImplEE10GetWeakPtrEv: argument 0"}
!15 = distinct !{!15, !"_ZNK4base14WeakPtrFactoryIN3net19SSLClientSocketImplEE10GetWeakPtrEv"}
!16 = !{!17, !19}
!17 = distinct !{!17, !18, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net19SSLClientSocketImplEFvvEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!18 = distinct !{!18, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net19SSLClientSocketImplEFvvEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_"}
!19 = distinct !{!19, !20, !"_ZN4base8BindOnceIMN3net19SSLClientSocketImplEFvvEJNS_7WeakPtrIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!20 = distinct !{!20, !"_ZN4base8BindOnceIMN3net19SSLClientSocketImplEFvvEJNS_7WeakPtrIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZZN3net19SSLClientSocketImpl10VerifyCertEvENK3$_0clEv: argument 0"}
!23 = distinct !{!23, !"_ZZN3net19SSLClientSocketImpl10VerifyCertEvENK3$_0clEv"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!26 = distinct !{!26, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!29 = distinct !{!29, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!30 = !{!31, !33}
!31 = distinct !{!31, !32, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net19SSLClientSocketImplEFviEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!32 = distinct !{!32, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net19SSLClientSocketImplEFviEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!33 = distinct !{!33, !34, !"_ZN4base8BindOnceIMN3net19SSLClientSocketImplEFviEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!34 = distinct !{!34, !"_ZN4base8BindOnceIMN3net19SSLClientSocketImplEFviEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZZN3net19SSLClientSocketImpl22PrivateKeySignCallbackEPhPmmtPKhmENK3$_1clEv: argument 0"}
!37 = distinct !{!37, !"_ZZN3net19SSLClientSocketImpl22PrivateKeySignCallbackEPhPmmtPKhmENK3$_1clEv"}
!38 = !{!39, !36}
!39 = distinct !{!39, !40, !"_ZN3net12_GLOBAL__N_131NetLogPrivateKeyOperationParamsEtPNS_13SSLPrivateKeyE: argument 0"}
!40 = distinct !{!40, !"_ZN3net12_GLOBAL__N_131NetLogPrivateKeyOperationParamsEtPNS_13SSLPrivateKeyE"}
!41 = !{!39}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZNK4base14WeakPtrFactoryIN3net19SSLClientSocketImplEE10GetWeakPtrEv: argument 0"}
!44 = distinct !{!44, !"_ZNK4base14WeakPtrFactoryIN3net19SSLClientSocketImplEE10GetWeakPtrEv"}
!45 = !{!46, !48}
!46 = distinct !{!46, !47, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net19SSLClientSocketImplEFvNS3_5ErrorERKNSt3__16vectorIhNS6_9allocatorIhEEEEEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!47 = distinct !{!47, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net19SSLClientSocketImplEFvNS3_5ErrorERKNSt3__16vectorIhNS6_9allocatorIhEEEEEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_"}
!48 = distinct !{!48, !49, !"_ZN4base8BindOnceIMN3net19SSLClientSocketImplEFvNS1_5ErrorERKNSt3__16vectorIhNS4_9allocatorIhEEEEEJNS_7WeakPtrIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_: argument 0"}
!49 = distinct !{!49, !"_ZN4base8BindOnceIMN3net19SSLClientSocketImplEFvNS1_5ErrorERKNSt3__16vectorIhNS4_9allocatorIhEEEEEJNS_7WeakPtrIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_"}
!50 = !{!51, !53}
!51 = distinct !{!51, !52, !"_ZN3net12_GLOBAL__N_120NetLogSSLAlertParamsEPKvm: argument 0"}
!52 = distinct !{!52, !"_ZN3net12_GLOBAL__N_120NetLogSSLAlertParamsEPKvm"}
!53 = distinct !{!53, !54, !"_ZZN3net19SSLClientSocketImpl15MessageCallbackEiiPKvmENK3$_2clEv: argument 0"}
!54 = distinct !{!54, !"_ZZN3net19SSLClientSocketImpl15MessageCallbackEiiPKvmENK3$_2clEv"}
!55 = distinct !{!55, !56}
!56 = !{!"llvm.loop.unroll.disable"}
!57 = !{!58}
!58 = distinct !{!58, !59, !"_ZZN3net19SSLClientSocketImpl15MessageCallbackEiiPKvmENK3$_3clENS_17NetLogCaptureModeE: argument 0"}
!59 = distinct !{!59, !"_ZZN3net19SSLClientSocketImpl15MessageCallbackEiiPKvmENK3$_3clENS_17NetLogCaptureModeE"}
!60 = !{!61, !58}
!61 = distinct !{!61, !62, !"_ZN3net12_GLOBAL__N_122NetLogSSLMessageParamsEbPKvmNS_17NetLogCaptureModeE: argument 0"}
!62 = distinct !{!62, !"_ZN3net12_GLOBAL__N_122NetLogSSLMessageParamsEbPKvmNS_17NetLogCaptureModeE"}
!63 = !{!61}
