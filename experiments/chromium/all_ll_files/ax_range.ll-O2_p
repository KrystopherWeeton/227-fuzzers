; ModuleID = '../../third_party/blink/renderer/modules/accessibility/ax_range.cc'
source_filename = "../../third_party/blink/renderer/modules/accessibility/ax_range.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.130", %"class.std::__1::unique_ptr.130", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.140", %"class.std::__1::unique_ptr.146", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.158", %"class.std::__1::unique_ptr.164", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.170", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.60", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.111", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.35" }
%"struct.std::__1::__atomic_base.35" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.blink::Worklist.42"* }
%"class.blink::Worklist.42" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.blink::Worklist.49"* }
%"class.blink::Worklist.49" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.blink::Worklist.56"* }
%"class.blink::Worklist.56" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.blink::Worklist.63"* }
%"class.blink::Worklist.63" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.blink::Worklist.70"* }
%"class.blink::Worklist.70" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::Worklist.77"* }
%"class.blink::Worklist.77" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.blink::Worklist.84"* }
%"class.blink::Worklist.84" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.91", %"class.std::__1::__compressed_pair.98", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.105", [4 x i8] }>
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93", %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { i64 }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { float }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.114", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.123" }
%"class.WTF::Vector.123" = type { %"class.WTF::VectorBuffer.124" }
%"class.WTF::VectorBuffer.124" = type { %"class.WTF::VectorBufferBase.125" }
%"class.WTF::VectorBufferBase.125" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.138" }
%"class.WTF::VectorBuffer.138" = type { %"class.WTF::VectorBufferBase.139" }
%"class.WTF::VectorBufferBase.139" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.152" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.42"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.49"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.56"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.63"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.70"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.174" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.170" = type { %"struct.std::__1::__atomic_base.171" }
%"struct.std::__1::__atomic_base.171" = type { %"struct.std::__1::__cxx_atomic_impl.172" }
%"struct.std::__1::__cxx_atomic_impl.172" = type { %"struct.std::__1::__cxx_atomic_base_impl.173" }
%"struct.std::__1::__cxx_atomic_base_impl.173" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.180" }
%"struct.std::__1::atomic.180" = type { %"struct.std::__1::__atomic_base.181" }
%"struct.std::__1::__atomic_base.181" = type { %"struct.std::__1::__atomic_base.182" }
%"struct.std::__1::__atomic_base.182" = type { %"struct.std::__1::__cxx_atomic_impl.183" }
%"struct.std::__1::__cxx_atomic_impl.183" = type { %"struct.std::__1::__cxx_atomic_base_impl.184" }
%"struct.std::__1::__cxx_atomic_base_impl.184" = type { i32 }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.blink::AXRange" = type { %"class.blink::AXPosition", %"class.blink::AXPosition" }
%"class.blink::AXPosition" = type { %"class.blink::WeakPersistent", i32, i32 }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::AXObject"*, %"class.blink::PersistentNodePtr" }
%"class.blink::AXObject" = type { i32 (...)**, i32, %"class.blink::Member", %"class.blink::HeapVector", i8, i32, %"class.blink::LayoutRect", i32, i32, i8, %"class.blink::Member", i32, i32, %"class.blink::FloatRect", %"class.blink::Member.2" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::AXObject"* }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::AXObjectCacheImpl"* }
%"class.blink::AXObjectCacheImpl" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.WTF::String" = type { %class.scoped_refptr.179 }
%class.scoped_refptr.179 = type { %"class.WTF::StringImpl"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.263", %"class.WTF::Vector.263", i8, i32, %"class.blink::Member.274", %"class.blink::Member.276", %"class.blink::Member.278", %"class.blink::Member.280", %"class.blink::Member.282", %"class.blink::Member.284", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.292", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.298", %"class.blink::Member.300", %"class.blink::Member.253", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.303", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.229", %"class.blink::Member.210", %"class.blink::Member.318", %"class.blink::Member.210", %"class.blink::Member.210", %"class.blink::Member.210", %"class.blink::UserActionElementSet", %"class.blink::Member.327", double, double, i64, i64, %"class.blink::HeapHashSet", %"class.blink::HeapHashSet.334", i16, i8, %"class.blink::Member.341", %"class.blink::Member.343", %"class.blink::Member.345", %"class.blink::Member.347", %"class.blink::TextLinkColors", %"class.blink::Member.349", i8, [7 x i8], %"class.blink::HeapHashMap.351", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.210", %"class.WTF::Vector.358", %"class.blink::Member.363", %"class.blink::Member.365", i8, %"class.blink::Member.210", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.367", %"class.blink::HeapVector.369", %"class.std::__1::unique_ptr.377", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.383", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.396", %"class.WTF::Vector.398", i8, i8, %"class.std::__1::unique_ptr.403", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.229", %"class.blink::HeapVector.409", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.417", i8, i32, %"class.blink::Member.419", %"class.blink::Member.421", %"class.blink::Member.423", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.425", %"class.WTF::HashMap.427", %"class.blink::Member.432", %"class.blink::Member.434", %"class.blink::Member.436", %"class.blink::Member.438", %"class.blink::Member.197", %"class.blink::Member.197", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.440", i8, i32, %"class.blink::Member.447", %"class.blink::Member.449", i32, %"class.blink::Member.451", %"class.blink::Member.453", %"class.blink::Member.455", %"class.std::__1::unique_ptr.457", i64, %"class.std::__1::unique_ptr.463", i32, i32, %"class.blink::Member.469", %"class.blink::Member.471", %"class.blink::Member.473", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.475", %"class.WTF::Vector.477", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.482", %"class.blink::Member.489", %"class.std::__1::unique_ptr.491", %"class.blink::Member.497", i8, i8, %"class.WTF::String", %"class.blink::Member.499", i8, [7 x i8], %"class.blink::HeapHashMap.501", %"class.blink::HeapObserverSet", %"class.blink::Member.515", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.517", i32, i8, i8, %"class.blink::WeakMember.519", %"class.blink::Member.520" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.187", %"class.blink::Member.187" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.187", %"class.blink::Member.189", %"class.blink::Member.187", %"class.blink::Member.187", %"class.blink::Member.191" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.189" = type { %"class.blink::MemberBase.190" }
%"class.blink::MemberBase.190" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.191" = type { %"class.blink::MemberBase.192" }
%"class.blink::MemberBase.192" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.187" = type { %"class.blink::MemberBase.188" }
%"class.blink::MemberBase.188" = type { %"class.blink::Node"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.195", %"class.blink::Member.197", %"class.blink::Member.189", %"class.blink::Member.199", %"class.blink::Member.199", %"class.blink::Member.236", %"class.blink::Member.238", %"class.blink::Member.240", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.245", %"class.blink::HeapVector.247" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.195" = type { %"class.blink::MemberBase.196" }
%"class.blink::MemberBase.196" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.199" = type { %"class.blink::MemberBase.200" }
%"class.blink::MemberBase.200" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.206" }
%"class.blink::Member.206" = type { %"class.blink::MemberBase.207" }
%"class.blink::MemberBase.207" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.210", i32, %"class.blink::HeapVector.229" }
%"class.blink::Member.236" = type { %"class.blink::MemberBase.237" }
%"class.blink::MemberBase.237" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.238" = type { %"class.blink::MemberBase.239" }
%"class.blink::MemberBase.239" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.240" = type { %"class.blink::MemberBase.241" }
%"class.blink::MemberBase.241" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.242" }
%"class.blink::Member.242" = type { %"class.blink::MemberBase.243" }
%"class.blink::MemberBase.243" = type { %"class.blink::HeapHashMap.244"* }
%"class.blink::HeapHashMap.244" = type opaque
%"class.blink::Member.245" = type { %"class.blink::MemberBase.246" }
%"class.blink::MemberBase.246" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.247" = type { %"class.WTF::Vector.250" }
%"class.WTF::Vector.250" = type { %"class.WTF::VectorBuffer.251" }
%"class.WTF::VectorBuffer.251" = type { %"class.WTF::VectorBufferBase.252" }
%"class.WTF::VectorBufferBase.252" = type { %"class.blink::Member.253"*, i32, i32 }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.256" }
%"class.blink::HeapHashMap.256" = type { %"class.WTF::HashMap.259" }
%"class.WTF::HashMap.259" = type { %"class.WTF::HashTable.260" }
%"class.WTF::HashTable.260" = type <{ %"struct.WTF::KeyValuePair.262"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.262" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.263" = type { %"class.WTF::VectorBuffer.264" }
%"class.WTF::VectorBuffer.264" = type { %"class.WTF::VectorBufferBase.265" }
%"class.WTF::VectorBufferBase.265" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.266 }
%class.scoped_refptr.266 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.267" }
%"struct.std::__1::atomic.267" = type { %"struct.std::__1::__atomic_base.268" }
%"struct.std::__1::__atomic_base.268" = type { %"struct.std::__1::__atomic_base.269" }
%"struct.std::__1::__atomic_base.269" = type { %"struct.std::__1::__cxx_atomic_impl.270" }
%"struct.std::__1::__cxx_atomic_impl.270" = type { %"struct.std::__1::__cxx_atomic_base_impl.271" }
%"struct.std::__1::__cxx_atomic_base_impl.271" = type { i32 }
%"class.blink::Member.274" = type { %"class.blink::MemberBase.275" }
%"class.blink::MemberBase.275" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.276" = type { %"class.blink::MemberBase.277" }
%"class.blink::MemberBase.277" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type opaque
%"class.blink::Member.278" = type { %"class.blink::MemberBase.279" }
%"class.blink::MemberBase.279" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.280" = type { %"class.blink::MemberBase.281" }
%"class.blink::MemberBase.281" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.282" = type { %"class.blink::MemberBase.283" }
%"class.blink::MemberBase.283" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.284" = type { %"class.blink::MemberBase.285" }
%"class.blink::MemberBase.285" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.292" = type { %"class.std::__1::__compressed_pair.293" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.286" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.286" = type { %"class.std::__1::__compressed_pair.287" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"struct.std::__1::__compressed_pair_elem.288" = type { %"class.blink::KURL"* }
%"class.blink::Member.298" = type { %"class.blink::MemberBase.299" }
%"class.blink::MemberBase.299" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.300" = type { %"class.blink::MemberBase.301" }
%"class.blink::MemberBase.301" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.253" = type { %"class.blink::MemberBase.254" }
%"class.blink::MemberBase.254" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.302 }
%class.scoped_refptr.302 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.303" = type { %"class.WTF::VectorBuffer.304" }
%"class.WTF::VectorBuffer.304" = type { %"class.WTF::VectorBufferBase.305" }
%"class.WTF::VectorBufferBase.305" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.306 }
%class.scoped_refptr.306 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type opaque
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.320" }
%"class.blink::HeapHashMap.320" = type { %"class.WTF::HashMap.323" }
%"class.WTF::HashMap.323" = type { %"class.WTF::HashTable.324" }
%"class.WTF::HashTable.324" = type <{ %"struct.WTF::KeyValuePair.326"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.326" = type opaque
%"class.blink::Member.327" = type { %"class.blink::MemberBase.328" }
%"class.blink::MemberBase.328" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.331" }
%"class.WTF::HashTable.331" = type <{ %"class.blink::WeakMember.333"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.333" = type opaque
%"class.blink::HeapHashSet.334" = type { %"class.WTF::HashSet.337" }
%"class.WTF::HashSet.337" = type { %"class.WTF::HashTable.338" }
%"class.WTF::HashTable.338" = type <{ %"class.blink::WeakMember.340"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.340" = type opaque
%"class.blink::Member.341" = type { %"class.blink::MemberBase.342" }
%"class.blink::MemberBase.342" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.345" = type { %"class.blink::MemberBase.346" }
%"class.blink::MemberBase.346" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.347" = type { %"class.blink::MemberBase.348" }
%"class.blink::MemberBase.348" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.349" = type { %"class.blink::MemberBase.350" }
%"class.blink::MemberBase.350" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.351" = type { %"class.WTF::HashMap.354" }
%"class.WTF::HashMap.354" = type { %"class.WTF::HashTable.355" }
%"class.WTF::HashTable.355" = type <{ %"struct.WTF::KeyValuePair.357"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.357" = type opaque
%"class.WTF::Vector.358" = type { %"class.WTF::VectorBuffer.359" }
%"class.WTF::VectorBuffer.359" = type { %"class.WTF::VectorBufferBase.360" }
%"class.WTF::VectorBufferBase.360" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.363" = type { %"class.blink::MemberBase.364" }
%"class.blink::MemberBase.364" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.365" = type { %"class.blink::MemberBase.366" }
%"class.blink::MemberBase.366" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.210" = type { %"class.blink::MemberBase.211" }
%"class.blink::MemberBase.211" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.213" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.212 }
%class.scoped_refptr.212 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Member.213" = type { %"class.blink::MemberBase.214" }
%"class.blink::MemberBase.214" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.217", %"class.blink::Member.219", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.217" = type { %"class.WTF::SingleThreadedBitField.218" }
%"class.WTF::SingleThreadedBitField.218" = type { i32 }
%"class.blink::Member.219" = type { %"class.blink::MemberBase.220" }
%"class.blink::MemberBase.220" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.221 }
%class.scoped_refptr.221 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.222", %"class.WTF::AtomicString", %"class.WTF::Vector.224" }
%"class.WTF::RefCounted.222" = type { %"class.base::RefCounted.223" }
%"class.base::RefCounted.223" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.224" = type { %"class.WTF::VectorBuffer.225" }
%"class.WTF::VectorBuffer.225" = type { %"class.WTF::VectorBufferBase.226", [32 x i8] }
%"class.WTF::VectorBufferBase.226" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.367" = type { %"class.blink::MemberBase.368" }
%"class.blink::MemberBase.368" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.369" = type { %"class.WTF::Vector.372" }
%"class.WTF::Vector.372" = type { %"class.WTF::VectorBuffer.373" }
%"class.WTF::VectorBuffer.373" = type { %"class.WTF::VectorBufferBase.374" }
%"class.WTF::VectorBufferBase.374" = type { %"class.blink::Member.375"*, i32, i32 }
%"class.blink::Member.375" = type opaque
%"class.std::__1::unique_ptr.377" = type { %"class.std::__1::__compressed_pair.378" }
%"class.std::__1::__compressed_pair.378" = type { %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.383" = type { %"class.WTF::HashSet.386" }
%"class.WTF::HashSet.386" = type { %"class.WTF::HashTable.387" }
%"class.WTF::HashTable.387" = type <{ %"class.blink::WeakMember.389"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.389" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.390", i32, [4 x i8] }>
%"class.WTF::Vector.390" = type { %"class.WTF::VectorBuffer.391" }
%"class.WTF::VectorBuffer.391" = type { %"class.WTF::VectorBufferBase.392" }
%"class.WTF::VectorBufferBase.392" = type { %"struct.std::__1::pair.393"*, i32, i32 }
%"struct.std::__1::pair.393" = type opaque
%"class.blink::Member.396" = type { %"class.blink::MemberBase.397" }
%"class.blink::MemberBase.397" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.398" = type { %"class.WTF::VectorBuffer.399" }
%"class.WTF::VectorBuffer.399" = type { %"class.WTF::VectorBufferBase.400" }
%"class.WTF::VectorBufferBase.400" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.403" = type { %"class.std::__1::__compressed_pair.404" }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.405" }
%"struct.std::__1::__compressed_pair_elem.405" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.229" = type { %"class.WTF::Vector.232" }
%"class.WTF::Vector.232" = type { %"class.WTF::VectorBuffer.233" }
%"class.WTF::VectorBuffer.233" = type { %"class.WTF::VectorBufferBase.234" }
%"class.WTF::VectorBufferBase.234" = type { %"class.blink::Member.210"*, i32, i32 }
%"class.blink::HeapVector.409" = type { %"class.WTF::Vector.412" }
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::Member.415"*, i32, i32 }
%"class.blink::Member.415" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.197" }
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.421" = type { %"class.blink::MemberBase.422" }
%"class.blink::MemberBase.422" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.423" = type { %"class.blink::MemberBase.424" }
%"class.blink::MemberBase.424" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.425" = type { %"class.blink::MemberBase.426" }
%"class.blink::MemberBase.426" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.427" = type { %"class.WTF::HashTable.428" }
%"class.WTF::HashTable.428" = type <{ %"struct.WTF::KeyValuePair.431"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.431" = type opaque
%"class.blink::Member.432" = type { %"class.blink::MemberBase.433" }
%"class.blink::MemberBase.433" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.434" = type { %"class.blink::MemberBase.435" }
%"class.blink::MemberBase.435" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.436" = type { %"class.blink::MemberBase.437" }
%"class.blink::MemberBase.437" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::Member.197" = type { %"class.blink::MemberBase.198" }
%"class.blink::MemberBase.198" = type { %"class.blink::Document"* }
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.309, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.309 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.310" }>
%"class.base::RefCountedThreadSafe.310" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.311 }
%class.scoped_refptr.311 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.312", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.312" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.313" }
%"struct.std::__1::atomic.313" = type { %"struct.std::__1::__atomic_base.314" }
%"struct.std::__1::__atomic_base.314" = type { %"struct.std::__1::__atomic_base.315" }
%"struct.std::__1::__atomic_base.315" = type { %"struct.std::__1::__cxx_atomic_impl.316" }
%"struct.std::__1::__cxx_atomic_impl.316" = type { %"struct.std::__1::__cxx_atomic_base_impl.317" }
%"struct.std::__1::__cxx_atomic_base_impl.317" = type { i8 }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.198" }
%"class.blink::HeapHashSet.440" = type { %"class.WTF::HashSet.443" }
%"class.WTF::HashSet.443" = type { %"class.WTF::HashTable.444" }
%"class.WTF::HashTable.444" = type <{ %"class.blink::Member.446"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.446" = type opaque
%"class.blink::Member.447" = type { %"class.blink::MemberBase.448" }
%"class.blink::MemberBase.448" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.449" = type { %"class.blink::MemberBase.450" }
%"class.blink::MemberBase.450" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.451" = type { %"class.blink::MemberBase.452" }
%"class.blink::MemberBase.452" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.453" = type { %"class.blink::MemberBase.454" }
%"class.blink::MemberBase.454" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.455" = type { %"class.blink::MemberBase.456" }
%"class.blink::MemberBase.456" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.457" = type { %"class.std::__1::__compressed_pair.458" }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.459" }
%"struct.std::__1::__compressed_pair_elem.459" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.463" = type { %"class.std::__1::__compressed_pair.464" }
%"class.std::__1::__compressed_pair.464" = type { %"struct.std::__1::__compressed_pair_elem.465" }
%"struct.std::__1::__compressed_pair_elem.465" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.469" = type { %"class.blink::MemberBase.470" }
%"class.blink::MemberBase.470" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.471" = type { %"class.blink::MemberBase.472" }
%"class.blink::MemberBase.472" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.473" = type { %"class.blink::MemberBase.474" }
%"class.blink::MemberBase.474" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.475" = type { %"class.blink::MemberBase.476" }
%"class.blink::MemberBase.476" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.477" = type { %"class.WTF::VectorBuffer.478" }
%"class.WTF::VectorBuffer.478" = type { %"class.WTF::VectorBufferBase.479" }
%"class.WTF::VectorBufferBase.479" = type { i8*, i32, i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::HeapHashMap.482" = type { %"class.WTF::HashMap.485" }
%"class.WTF::HashMap.485" = type { %"class.WTF::HashTable.486" }
%"class.WTF::HashTable.486" = type <{ %"struct.WTF::KeyValuePair.488"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.488" = type opaque
%"class.blink::Member.489" = type { %"class.blink::MemberBase.490" }
%"class.blink::MemberBase.490" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.491" = type { %"class.std::__1::__compressed_pair.492" }
%"class.std::__1::__compressed_pair.492" = type { %"struct.std::__1::__compressed_pair_elem.493" }
%"struct.std::__1::__compressed_pair_elem.493" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.497" = type { %"class.blink::MemberBase.498" }
%"class.blink::MemberBase.498" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.499" = type { %"class.blink::MemberBase.500" }
%"class.blink::MemberBase.500" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.501" = type { %"class.WTF::HashMap.504" }
%"class.WTF::HashMap.504" = type { %"class.WTF::HashTable.505" }
%"class.WTF::HashTable.505" = type <{ %"struct.WTF::KeyValuePair.507"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.507" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.508" }
%"class.blink::HeapHashSet.508" = type { %"class.WTF::HashSet.511" }
%"class.WTF::HashSet.511" = type { %"class.WTF::HashTable.512" }
%"class.WTF::HashTable.512" = type <{ %"class.blink::WeakMember.514"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.514" = type opaque
%"class.blink::Member.515" = type { %"class.blink::MemberBase.516" }
%"class.blink::MemberBase.516" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.517" = type { %"class.blink::MemberBase.518" }
%"class.blink::MemberBase.518" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.197", %"class.blink::HeapHashSet.524", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.531", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.524" = type { %"class.WTF::HashSet.527" }
%"class.WTF::HashSet.527" = type { %"class.WTF::HashTable.528" }
%"class.WTF::HashTable.528" = type <{ %"class.blink::Member.530"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.530" = type opaque
%"class.blink::HeapTaskRunnerTimer.531" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.532", { i64, i64 } }
%"class.blink::WeakMember.532" = type { %"class.blink::MemberBase.518" }
%"class.blink::WeakMember.519" = type { %"class.blink::MemberBase.188" }
%"class.blink::Member.520" = type { %"class.blink::MemberBase.521" }
%"class.blink::MemberBase.521" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.WTF::StringAppend" = type { %"class.WTF::StringAppend.533", %"class.WTF::String" }
%"class.WTF::StringAppend.533" = type { %"class.WTF::StringAppend.534", i8* }
%"class.WTF::StringAppend.534" = type { i8*, %"class.WTF::String" }
%"class.WTF::StringTypeAdapter.541" = type { %"class.WTF::StringTypeAdapter.542" }
%"class.WTF::StringTypeAdapter.542" = type { %"class.WTF::StringView" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::StringTypeAdapter.544" = type <{ i8*, i32, [4 x i8] }>
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.535" }
%"class.std::__1::__compressed_pair.535" = type { %"struct.std::__1::__compressed_pair_elem.536" }
%"struct.std::__1::__compressed_pair_elem.536" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZN5blink10AXPositionaSERKS0_ = comdat any

$_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EcvS3_Ev = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_8AXObjectELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv = comdat any

$_ZN5blink14PersistentBaseIKNS_8AXObjectELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv = comdat any

$_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@.str = private unnamed_addr constant [16 x i8] c"Invalid AXRange\00", align 1
@.str.1 = private unnamed_addr constant [14 x i8] c"AXRange from \00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c" to \00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.3 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.4 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.5 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN5blink7AXRangeC1ERKNS_10AXPositionES3_ = hidden unnamed_addr alias void (%"class.blink::AXRange"*, %"class.blink::AXPosition"*, %"class.blink::AXPosition"*), void (%"class.blink::AXRange"*, %"class.blink::AXPosition"*, %"class.blink::AXPosition"*)* @_ZN5blink7AXRangeC2ERKNS_10AXPositionES3_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink7AXRangeC2ERKNS_10AXPositionES3_(%"class.blink::AXRange"*, %"class.blink::AXPosition"* dereferenceable(24), %"class.blink::AXPosition"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::AXRange", %"class.blink::AXRange"* %0, i64 0, i32 0
  tail call void @_ZN5blink10AXPositionC1Ev(%"class.blink::AXPosition"* %4) #8
  %5 = getelementptr inbounds %"class.blink::AXRange", %"class.blink::AXRange"* %0, i64 0, i32 1
  tail call void @_ZN5blink10AXPositionC1Ev(%"class.blink::AXPosition"* %5) #8
  %6 = tail call zeroext i1 @_ZNK5blink10AXPosition7IsValidEPN3WTF6StringE(%"class.blink::AXPosition"* %1, %"class.WTF::String"* null) #8
  br i1 %6, label %7, label %30

7:                                                ; preds = %3
  %8 = tail call zeroext i1 @_ZNK5blink10AXPosition7IsValidEPN3WTF6StringE(%"class.blink::AXPosition"* %2, %"class.WTF::String"* null) #8
  br i1 %8, label %9, label %30

9:                                                ; preds = %7
  %10 = tail call zeroext i1 @_ZN5blinkgtERKNS_10AXPositionES2_(%"class.blink::AXPosition"* dereferenceable(24) %1, %"class.blink::AXPosition"* dereferenceable(24) %2) #8
  br i1 %10, label %30, label %11

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %1, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %12, align 8
  %14 = bitcast %"class.blink::AXObject"* %13 to %"class.blink::Document"* (%"class.blink::AXObject"*)***
  %15 = load %"class.blink::Document"* (%"class.blink::AXObject"*)**, %"class.blink::Document"* (%"class.blink::AXObject"*)*** %14, align 8
  %16 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %15, i64 126
  %17 = load %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %16, align 8
  %18 = tail call %"class.blink::Document"* %17(%"class.blink::AXObject"* %13) #8
  %19 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %2, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %19, align 8
  %21 = bitcast %"class.blink::AXObject"* %20 to %"class.blink::Document"* (%"class.blink::AXObject"*)***
  %22 = load %"class.blink::Document"* (%"class.blink::AXObject"*)**, %"class.blink::Document"* (%"class.blink::AXObject"*)*** %21, align 8
  %23 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %22, i64 126
  %24 = load %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %23, align 8
  %25 = tail call %"class.blink::Document"* %24(%"class.blink::AXObject"* %20) #8
  %26 = icmp eq %"class.blink::Document"* %25, %18
  br i1 %26, label %27, label %30

27:                                               ; preds = %11
  %28 = tail call dereferenceable(24) %"class.blink::AXPosition"* @_ZN5blink10AXPositionaSERKS0_(%"class.blink::AXPosition"* %4, %"class.blink::AXPosition"* dereferenceable(24) %1)
  %29 = tail call dereferenceable(24) %"class.blink::AXPosition"* @_ZN5blink10AXPositionaSERKS0_(%"class.blink::AXPosition"* %5, %"class.blink::AXPosition"* dereferenceable(24) %2)
  br label %30

30:                                               ; preds = %27, %11, %3, %7, %9
  ret void
}

declare void @_ZN5blink10AXPositionC1Ev(%"class.blink::AXPosition"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink10AXPosition7IsValidEPN3WTF6StringE(%"class.blink::AXPosition"*, %"class.WTF::String"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blinkgtERKNS_10AXPositionES2_(%"class.blink::AXPosition"* dereferenceable(24), %"class.blink::AXPosition"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.blink::AXPosition"* @_ZN5blink10AXPositionaSERKS0_(%"class.blink::AXPosition"*, %"class.blink::AXPosition"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::AXObject"* %5, %"class.blink::AXObject"** %6, align 8
  %7 = ptrtoint %"class.blink::AXObject"* %5 to i64
  switch i64 %7, label %8 [
    i64 0, label %38
    i64 -1, label %38
  ]

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %10 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %9, align 8
  %11 = icmp eq %"class.blink::PersistentNode"* %10, null
  br i1 %11, label %12, label %61

12:                                               ; preds = %8
  %13 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %14 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %13, i64 0, i32 1
  %15 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %14) #8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %19, !prof !2

17:                                               ; preds = %12
  %18 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %14, i8* %18) #8
  br label %19

19:                                               ; preds = %17, %12
  %20 = phi i8* [ %18, %17 ], [ %15, %12 ]
  %21 = bitcast i8* %20 to %"class.blink::ThreadState"**
  %22 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %22, i64 0, i32 4, i32 0, i32 0, i32 0
  %24 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %24, i64 0, i32 0, i32 0
  %26 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %25, align 8
  %27 = icmp eq %"class.blink::PersistentNode"* %26, null
  br i1 %27, label %28, label %31, !prof !2

28:                                               ; preds = %19
  %29 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %24, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %29) #8
  %30 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %25, align 8
  br label %31

31:                                               ; preds = %28, %19
  %32 = phi %"class.blink::PersistentNode"* [ %30, %28 ], [ %26, %19 ]
  %33 = bitcast %"class.blink::PersistentNode"* %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.blink::PersistentRegion"* %24 to i64*
  store i64 %34, i64* %35, align 8
  %36 = bitcast %"class.blink::PersistentNode"* %32 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %3, %"class.blink::PersistentBase"** %36, align 8
  %37 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %32, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_8AXObjectELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %37, align 8
  store %"class.blink::PersistentNode"* %32, %"class.blink::PersistentNode"** %9, align 8
  br label %61

38:                                               ; preds = %2, %2
  %39 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %40 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %39, align 8
  %41 = icmp eq %"class.blink::PersistentNode"* %40, null
  br i1 %41, label %61, label %42

42:                                               ; preds = %38
  %43 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %44 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %43, i64 0, i32 1
  %45 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %44) #8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %47, label %49, !prof !2

47:                                               ; preds = %42
  %48 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %44, i8* %48) #8
  br label %49

49:                                               ; preds = %47, %42
  %50 = phi i8* [ %48, %47 ], [ %45, %42 ]
  %51 = bitcast i8* %50 to %"class.blink::ThreadState"**
  %52 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %52, i64 0, i32 4, i32 0, i32 0, i32 0
  %54 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %53, align 8
  %55 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %39, align 8
  %56 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %54, i64 0, i32 0, i32 0
  %57 = bitcast %"class.blink::PersistentRegion"* %54 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"class.blink::PersistentNode"* %55 to i64*
  store i64 %58, i64* %59, align 8
  %60 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %55, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %60, align 8
  store %"class.blink::PersistentNode"* %55, %"class.blink::PersistentNode"** %56, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %39, align 8
  br label %61

61:                                               ; preds = %49, %38, %31, %8
  %62 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %0, i64 0, i32 1
  %63 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %1, i64 0, i32 1
  %64 = bitcast i32* %63 to i64*
  %65 = bitcast i32* %62 to i64*
  %66 = load i64, i64* %64, align 8
  store i64 %66, i64* %65, align 8
  ret %"class.blink::AXPosition"* %0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AXObject"* @_ZNK5blink7AXRange23CommonAncestorContainerEv(%"class.blink::AXRange"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %"class.blink::AXRange", %"class.blink::AXRange"* %0, i64 0, i32 0
  %5 = tail call zeroext i1 @_ZNK5blink10AXPosition7IsValidEPN3WTF6StringE(%"class.blink::AXPosition"* %4, %"class.WTF::String"* null) #8
  br i1 %5, label %6, label %32

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::AXRange", %"class.blink::AXRange"* %0, i64 0, i32 1
  %8 = tail call zeroext i1 @_ZNK5blink10AXPosition7IsValidEPN3WTF6StringE(%"class.blink::AXPosition"* %7, %"class.WTF::String"* null) #8
  br i1 %8, label %9, label %32

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.blink::AXRange", %"class.blink::AXRange"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %10, align 8
  %12 = bitcast %"class.blink::AXObject"* %11 to %"class.blink::Document"* (%"class.blink::AXObject"*)***
  %13 = load %"class.blink::Document"* (%"class.blink::AXObject"*)**, %"class.blink::Document"* (%"class.blink::AXObject"*)*** %12, align 8
  %14 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %13, i64 126
  %15 = load %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %14, align 8
  %16 = tail call %"class.blink::Document"* %15(%"class.blink::AXObject"* %11) #8
  %17 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %7, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %17, align 8
  %19 = bitcast %"class.blink::AXObject"* %18 to %"class.blink::Document"* (%"class.blink::AXObject"*)***
  %20 = load %"class.blink::Document"* (%"class.blink::AXObject"*)**, %"class.blink::Document"* (%"class.blink::AXObject"*)*** %19, align 8
  %21 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %20, i64 126
  %22 = load %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %21, align 8
  %23 = tail call %"class.blink::Document"* %22(%"class.blink::AXObject"* %18) #8
  %24 = icmp eq %"class.blink::Document"* %16, %23
  br i1 %24, label %25, label %32

25:                                               ; preds = %9
  %26 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %26) #8
  store i32 -1431655766, i32* %2, align 4
  %27 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27) #8
  store i32 -1431655766, i32* %3, align 4
  %28 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %10, align 8
  %29 = getelementptr inbounds %"class.blink::AXRange", %"class.blink::AXRange"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %30 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %29, align 8
  %31 = call %"class.blink::AXObject"* @_ZN5blink8AXObject20LowestCommonAncestorERKS0_S2_PiS3_(%"class.blink::AXObject"* dereferenceable(120) %28, %"class.blink::AXObject"* dereferenceable(120) %30, i32* nonnull %2, i32* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26) #8
  br label %32

32:                                               ; preds = %1, %6, %9, %25
  %33 = phi %"class.blink::AXObject"* [ %31, %25 ], [ null, %9 ], [ null, %6 ], [ null, %1 ]
  ret %"class.blink::AXObject"* %33
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink7AXRange7IsValidEv(%"class.blink::AXRange"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXRange", %"class.blink::AXRange"* %0, i64 0, i32 0
  %3 = tail call zeroext i1 @_ZNK5blink10AXPosition7IsValidEPN3WTF6StringE(%"class.blink::AXPosition"* %2, %"class.WTF::String"* null) #8
  br i1 %3, label %4, label %23

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::AXRange", %"class.blink::AXRange"* %0, i64 0, i32 1
  %6 = tail call zeroext i1 @_ZNK5blink10AXPosition7IsValidEPN3WTF6StringE(%"class.blink::AXPosition"* %5, %"class.WTF::String"* null) #8
  br i1 %6, label %7, label %23

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.blink::AXRange", %"class.blink::AXRange"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %8, align 8
  %10 = bitcast %"class.blink::AXObject"* %9 to %"class.blink::Document"* (%"class.blink::AXObject"*)***
  %11 = load %"class.blink::Document"* (%"class.blink::AXObject"*)**, %"class.blink::Document"* (%"class.blink::AXObject"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %11, i64 126
  %13 = load %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %12, align 8
  %14 = tail call %"class.blink::Document"* %13(%"class.blink::AXObject"* %9) #8
  %15 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %5, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %15, align 8
  %17 = bitcast %"class.blink::AXObject"* %16 to %"class.blink::Document"* (%"class.blink::AXObject"*)***
  %18 = load %"class.blink::Document"* (%"class.blink::AXObject"*)**, %"class.blink::Document"* (%"class.blink::AXObject"*)*** %17, align 8
  %19 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %18, i64 126
  %20 = load %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %19, align 8
  %21 = tail call %"class.blink::Document"* %20(%"class.blink::AXObject"* %16) #8
  %22 = icmp eq %"class.blink::Document"* %14, %21
  br label %23

23:                                               ; preds = %7, %1, %4
  %24 = phi i1 [ false, %4 ], [ false, %1 ], [ %22, %7 ]
  ret i1 %24
}

declare %"class.blink::AXObject"* @_ZN5blink8AXObject20LowestCommonAncestorERKS0_S2_PiS3_(%"class.blink::AXObject"* dereferenceable(120), %"class.blink::AXObject"* dereferenceable(120), i32*, i32*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink7AXRange11IsCollapsedEv(%"class.blink::AXRange"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXRange", %"class.blink::AXRange"* %0, i64 0, i32 0
  %3 = tail call zeroext i1 @_ZNK5blink10AXPosition7IsValidEPN3WTF6StringE(%"class.blink::AXPosition"* %2, %"class.WTF::String"* null) #8
  br i1 %3, label %4, label %25

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::AXRange", %"class.blink::AXRange"* %0, i64 0, i32 1
  %6 = tail call zeroext i1 @_ZNK5blink10AXPosition7IsValidEPN3WTF6StringE(%"class.blink::AXPosition"* %5, %"class.WTF::String"* null) #8
  br i1 %6, label %7, label %25

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.blink::AXRange", %"class.blink::AXRange"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %8, align 8
  %10 = bitcast %"class.blink::AXObject"* %9 to %"class.blink::Document"* (%"class.blink::AXObject"*)***
  %11 = load %"class.blink::Document"* (%"class.blink::AXObject"*)**, %"class.blink::Document"* (%"class.blink::AXObject"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %11, i64 126
  %13 = load %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %12, align 8
  %14 = tail call %"class.blink::Document"* %13(%"class.blink::AXObject"* %9) #8
  %15 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %5, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %15, align 8
  %17 = bitcast %"class.blink::AXObject"* %16 to %"class.blink::Document"* (%"class.blink::AXObject"*)***
  %18 = load %"class.blink::Document"* (%"class.blink::AXObject"*)**, %"class.blink::Document"* (%"class.blink::AXObject"*)*** %17, align 8
  %19 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %18, i64 126
  %20 = load %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %19, align 8
  %21 = tail call %"class.blink::Document"* %20(%"class.blink::AXObject"* %16) #8
  %22 = icmp eq %"class.blink::Document"* %14, %21
  br i1 %22, label %23, label %25

23:                                               ; preds = %7
  %24 = tail call zeroext i1 @_ZN5blinkeqERKNS_10AXPositionES2_(%"class.blink::AXPosition"* dereferenceable(24) %2, %"class.blink::AXPosition"* dereferenceable(24) %5) #8
  br label %25

25:                                               ; preds = %1, %4, %23, %7
  %26 = phi i1 [ false, %7 ], [ %24, %23 ], [ false, %4 ], [ false, %1 ]
  ret i1 %26
}

declare zeroext i1 @_ZN5blinkeqERKNS_10AXPositionES2_(%"class.blink::AXPosition"* dereferenceable(24), %"class.blink::AXPosition"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink7AXRange15RangeOfContentsERKNS_8AXObjectE(%"class.blink::AXRange"* noalias sret, %"class.blink::AXObject"* dereferenceable(120)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::AXPosition", align 8
  %4 = alloca %"class.blink::AXPosition", align 8
  %5 = bitcast %"class.blink::AXPosition"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #8
  call void @_ZN5blink10AXPosition27CreateFirstPositionInObjectERKNS_8AXObjectENS_28AXPositionAdjustmentBehaviorE(%"class.blink::AXPosition"* nonnull sret %3, %"class.blink::AXObject"* dereferenceable(120) %1, i32 1) #8
  %6 = bitcast %"class.blink::AXPosition"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8
  call void @_ZN5blink10AXPosition26CreateLastPositionInObjectERKNS_8AXObjectENS_28AXPositionAdjustmentBehaviorE(%"class.blink::AXPosition"* nonnull sret %4, %"class.blink::AXObject"* dereferenceable(120) %1, i32 1) #8
  call void @_ZN5blink7AXRangeC2ERKNS_10AXPositionES3_(%"class.blink::AXRange"* %0, %"class.blink::AXPosition"* nonnull dereferenceable(24) %3, %"class.blink::AXPosition"* nonnull dereferenceable(24) %4)
  %7 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %4, i64 0, i32 0, i32 0, i32 1, i32 0
  %8 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %7, align 8
  %9 = icmp eq %"class.blink::PersistentNode"* %8, null
  br i1 %9, label %29, label %10

10:                                               ; preds = %2
  %11 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %12 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %11, i64 0, i32 1
  %13 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %12) #8
  %14 = icmp eq i8* %13, null
  br i1 %14, label %15, label %17, !prof !2

15:                                               ; preds = %10
  %16 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %12, i8* %16) #8
  br label %17

17:                                               ; preds = %15, %10
  %18 = phi i8* [ %16, %15 ], [ %13, %10 ]
  %19 = bitcast i8* %18 to %"class.blink::ThreadState"**
  %20 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %20, i64 0, i32 4, i32 0, i32 0, i32 0
  %22 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %21, align 8
  %23 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %7, align 8
  %24 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %22, i64 0, i32 0, i32 0
  %25 = bitcast %"class.blink::PersistentRegion"* %22 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.blink::PersistentNode"* %23 to i64*
  store i64 %26, i64* %27, align 8
  %28 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %23, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %28, align 8
  store %"class.blink::PersistentNode"* %23, %"class.blink::PersistentNode"** %24, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %7, align 8
  br label %29

29:                                               ; preds = %2, %17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8
  %30 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %3, i64 0, i32 0, i32 0, i32 1, i32 0
  %31 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %30, align 8
  %32 = icmp eq %"class.blink::PersistentNode"* %31, null
  br i1 %32, label %52, label %33

33:                                               ; preds = %29
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #8
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #8
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 4, i32 0, i32 0, i32 0
  %45 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %44, align 8
  %46 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %30, align 8
  %47 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %45, i64 0, i32 0, i32 0
  %48 = bitcast %"class.blink::PersistentRegion"* %45 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = bitcast %"class.blink::PersistentNode"* %46 to i64*
  store i64 %49, i64* %50, align 8
  %51 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %46, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %51, align 8
  store %"class.blink::PersistentNode"* %46, %"class.blink::PersistentNode"** %47, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %30, align 8
  br label %52

52:                                               ; preds = %29, %40
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #8
  ret void
}

declare void @_ZN5blink10AXPosition27CreateFirstPositionInObjectERKNS_8AXObjectENS_28AXPositionAdjustmentBehaviorE(%"class.blink::AXPosition"* sret, %"class.blink::AXObject"* dereferenceable(120), i32) local_unnamed_addr #1

declare void @_ZN5blink10AXPosition26CreateLastPositionInObjectERKNS_8AXObjectENS_28AXPositionAdjustmentBehaviorE(%"class.blink::AXPosition"* sret, %"class.blink::AXObject"* dereferenceable(120), i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink7AXRange8ToStringEv(%"class.blink::AXRange"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.WTF::StringAppend", align 8
  %4 = alloca %"class.WTF::StringAppend.533", align 8
  %5 = alloca %"class.blink::AXPosition", align 8
  %6 = alloca %"class.blink::AXPosition", align 8
  %7 = getelementptr inbounds %"class.blink::AXRange", %"class.blink::AXRange"* %0, i64 0, i32 0
  %8 = tail call zeroext i1 @_ZNK5blink10AXPosition7IsValidEPN3WTF6StringE(%"class.blink::AXPosition"* %7, %"class.WTF::String"* null) #8
  br i1 %8, label %9, label %28

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::AXRange", %"class.blink::AXRange"* %0, i64 0, i32 1
  %11 = tail call zeroext i1 @_ZNK5blink10AXPosition7IsValidEPN3WTF6StringE(%"class.blink::AXPosition"* %10, %"class.WTF::String"* null) #8
  br i1 %11, label %12, label %28

12:                                               ; preds = %9
  %13 = getelementptr inbounds %"class.blink::AXRange", %"class.blink::AXRange"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %13, align 8
  %15 = bitcast %"class.blink::AXObject"* %14 to %"class.blink::Document"* (%"class.blink::AXObject"*)***
  %16 = load %"class.blink::Document"* (%"class.blink::AXObject"*)**, %"class.blink::Document"* (%"class.blink::AXObject"*)*** %15, align 8
  %17 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %16, i64 126
  %18 = load %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %17, align 8
  %19 = tail call %"class.blink::Document"* %18(%"class.blink::AXObject"* %14) #8
  %20 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %10, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %20, align 8
  %22 = bitcast %"class.blink::AXObject"* %21 to %"class.blink::Document"* (%"class.blink::AXObject"*)***
  %23 = load %"class.blink::Document"* (%"class.blink::AXObject"*)**, %"class.blink::Document"* (%"class.blink::AXObject"*)*** %22, align 8
  %24 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %23, i64 126
  %25 = load %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %24, align 8
  %26 = tail call %"class.blink::Document"* %25(%"class.blink::AXObject"* %21) #8
  %27 = icmp eq %"class.blink::Document"* %19, %26
  br i1 %27, label %29, label %28

28:                                               ; preds = %1, %9, %12
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0), i64 15) #8
  br label %326

29:                                               ; preds = %12
  %30 = bitcast %"class.WTF::StringAppend"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #8
  %31 = bitcast %"class.WTF::StringAppend.533"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #8
  %32 = bitcast %"class.blink::AXPosition"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #8
  %33 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %5, i64 0, i32 0, i32 0
  %34 = bitcast %"class.blink::AXRange"* %0 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.blink::AXPosition"* %5 to i64*
  store i64 %35, i64* %36, align 8
  %37 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %5, i64 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %37, align 8
  switch i64 %35, label %38 [
    i64 0, label %64
    i64 -1, label %64
  ]

38:                                               ; preds = %29
  %39 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %40 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %39, i64 0, i32 1
  %41 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %40) #8
  %42 = icmp eq i8* %41, null
  br i1 %42, label %43, label %45, !prof !2

43:                                               ; preds = %38
  %44 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %40, i8* %44) #8
  br label %45

45:                                               ; preds = %43, %38
  %46 = phi i8* [ %44, %43 ], [ %41, %38 ]
  %47 = bitcast i8* %46 to %"class.blink::ThreadState"**
  %48 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %48, i64 0, i32 4, i32 0, i32 0, i32 0
  %50 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %50, i64 0, i32 0, i32 0
  %52 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %51, align 8
  %53 = icmp eq %"class.blink::PersistentNode"* %52, null
  br i1 %53, label %54, label %57, !prof !2

54:                                               ; preds = %45
  %55 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %50, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %55) #8
  %56 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %51, align 8
  br label %57

57:                                               ; preds = %54, %45
  %58 = phi %"class.blink::PersistentNode"* [ %56, %54 ], [ %52, %45 ]
  %59 = bitcast %"class.blink::PersistentNode"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = bitcast %"class.blink::PersistentRegion"* %50 to i64*
  store i64 %60, i64* %61, align 8
  %62 = bitcast %"class.blink::PersistentNode"* %58 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %33, %"class.blink::PersistentBase"** %62, align 8
  %63 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %58, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_8AXObjectELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %63, align 8
  store %"class.blink::PersistentNode"* %58, %"class.blink::PersistentNode"** %37, align 8
  br label %64

64:                                               ; preds = %29, %29, %57
  %65 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %5, i64 0, i32 1
  %66 = getelementptr inbounds %"class.blink::AXRange", %"class.blink::AXRange"* %0, i64 0, i32 0, i32 1
  %67 = bitcast i32* %66 to i64*
  %68 = bitcast i32* %65 to i64*
  %69 = load i64, i64* %67, align 8
  store i64 %69, i64* %68, align 8
  %70 = call %"class.WTF::StringImpl"* @_ZNK5blink10AXPosition8ToStringEv(%"class.blink::AXPosition"* nonnull %5) #8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %147, label %72

72:                                               ; preds = %64
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = and i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 0
  %78 = load i32, i32* %77, align 4
  br i1 %76, label %79, label %89

79:                                               ; preds = %72
  %80 = zext i32 %78 to i33
  %81 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %80, i33 1) #8
  %82 = extractvalue { i33, i1 } %81, 1
  %83 = extractvalue { i33, i1 } %81, 0
  %84 = icmp slt i33 %83, 0
  %85 = or i1 %82, %84
  br i1 %85, label %86, label %87, !prof !2

86:                                               ; preds = %79
  call void @llvm.trap() #8
  unreachable

87:                                               ; preds = %79
  %88 = trunc i33 %83 to i32
  store i32 %88, i32* %77, align 4
  br label %89

89:                                               ; preds = %87, %72
  %90 = phi i32 [ %88, %87 ], [ %78, %72 ]
  %91 = load atomic i32, i32* %73 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %104

94:                                               ; preds = %89
  %95 = zext i32 %90 to i33
  %96 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %95, i33 1) #8
  %97 = extractvalue { i33, i1 } %96, 1
  %98 = extractvalue { i33, i1 } %96, 0
  %99 = icmp slt i33 %98, 0
  %100 = or i1 %97, %99
  br i1 %100, label %101, label %102, !prof !2

101:                                              ; preds = %94
  call void @llvm.trap() #8
  unreachable

102:                                              ; preds = %94
  %103 = trunc i33 %98 to i32
  store i32 %103, i32* %77, align 4
  br label %104

104:                                              ; preds = %102, %89
  %105 = phi i32 [ %103, %102 ], [ %90, %89 ]
  %106 = load atomic i32, i32* %73 monotonic, align 4
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %111

109:                                              ; preds = %104
  %110 = add i32 %105, -1
  store i32 %110, i32* %77, align 4
  br label %111

111:                                              ; preds = %109, %104
  %112 = phi i32 [ %110, %109 ], [ %105, %104 ]
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %115

114:                                              ; preds = %111
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %70) #8
  br label %115

115:                                              ; preds = %111, %114
  %116 = load atomic i32, i32* %73 monotonic, align 4
  %117 = and i32 %116, 2
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %130

119:                                              ; preds = %115
  %120 = load i32, i32* %77, align 4
  %121 = zext i32 %120 to i33
  %122 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %121, i33 1) #8
  %123 = extractvalue { i33, i1 } %122, 1
  %124 = extractvalue { i33, i1 } %122, 0
  %125 = icmp slt i33 %124, 0
  %126 = or i1 %123, %125
  br i1 %126, label %127, label %128, !prof !2

127:                                              ; preds = %119
  call void @llvm.trap() #8
  unreachable

128:                                              ; preds = %119
  %129 = trunc i33 %124 to i32
  store i32 %129, i32* %77, align 4
  br label %130

130:                                              ; preds = %115, %128
  %131 = bitcast %"class.WTF::StringAppend.533"* %4 to i64*
  store i64 ptrtoint ([14 x i8]* @.str.1 to i64), i64* %131, align 8
  %132 = getelementptr inbounds %"class.WTF::StringAppend.533", %"class.WTF::StringAppend.533"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %70, %"class.WTF::StringImpl"** %132, align 8
  %133 = load atomic i32, i32* %73 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %151

136:                                              ; preds = %130
  %137 = load i32, i32* %77, align 4
  %138 = zext i32 %137 to i33
  %139 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %138, i33 1) #8
  %140 = extractvalue { i33, i1 } %139, 1
  %141 = extractvalue { i33, i1 } %139, 0
  %142 = icmp slt i33 %141, 0
  %143 = or i1 %140, %142
  br i1 %143, label %144, label %145, !prof !2

144:                                              ; preds = %136
  call void @llvm.trap() #8
  unreachable

145:                                              ; preds = %136
  %146 = trunc i33 %141 to i32
  store i32 %146, i32* %77, align 4
  br label %151

147:                                              ; preds = %64
  %148 = bitcast %"class.WTF::StringAppend.533"* %4 to i64*
  store i64 ptrtoint ([14 x i8]* @.str.1 to i64), i64* %148, align 8
  %149 = getelementptr inbounds %"class.WTF::StringAppend.533", %"class.WTF::StringAppend.533"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %149, align 8
  %150 = getelementptr inbounds %"class.WTF::StringAppend.533", %"class.WTF::StringAppend.533"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i8** %150, align 8
  br label %163

151:                                              ; preds = %145, %130
  %152 = getelementptr inbounds %"class.WTF::StringAppend.533", %"class.WTF::StringAppend.533"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i8** %152, align 8
  %153 = load atomic i32, i32* %73 monotonic, align 4
  %154 = and i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = load i32, i32* %77, align 4
  br i1 %155, label %157, label %159

157:                                              ; preds = %151
  %158 = add i32 %156, -1
  store i32 %158, i32* %77, align 4
  br label %159

159:                                              ; preds = %157, %151
  %160 = phi i32 [ %158, %157 ], [ %156, %151 ]
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %163

162:                                              ; preds = %159
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %70) #8
  br label %163

163:                                              ; preds = %147, %159, %162
  %164 = phi %"class.WTF::StringImpl"** [ %149, %147 ], [ %132, %159 ], [ %132, %162 ]
  %165 = bitcast %"class.blink::AXPosition"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %165) #8
  %166 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %6, i64 0, i32 0, i32 0
  %167 = bitcast %"class.blink::AXPosition"* %10 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = bitcast %"class.blink::AXPosition"* %6 to i64*
  store i64 %168, i64* %169, align 8
  %170 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %6, i64 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %170, align 8
  switch i64 %168, label %171 [
    i64 0, label %197
    i64 -1, label %197
  ]

171:                                              ; preds = %163
  %172 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %173 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %172, i64 0, i32 1
  %174 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %173) #8
  %175 = icmp eq i8* %174, null
  br i1 %175, label %176, label %178, !prof !2

176:                                              ; preds = %171
  %177 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %173, i8* %177) #8
  br label %178

178:                                              ; preds = %176, %171
  %179 = phi i8* [ %177, %176 ], [ %174, %171 ]
  %180 = bitcast i8* %179 to %"class.blink::ThreadState"**
  %181 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %180, align 8
  %182 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %181, i64 0, i32 4, i32 0, i32 0, i32 0
  %183 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %182, align 8
  %184 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %183, i64 0, i32 0, i32 0
  %185 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %184, align 8
  %186 = icmp eq %"class.blink::PersistentNode"* %185, null
  br i1 %186, label %187, label %190, !prof !2

187:                                              ; preds = %178
  %188 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %183, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %188) #8
  %189 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %184, align 8
  br label %190

190:                                              ; preds = %187, %178
  %191 = phi %"class.blink::PersistentNode"* [ %189, %187 ], [ %185, %178 ]
  %192 = bitcast %"class.blink::PersistentNode"* %191 to i64*
  %193 = load i64, i64* %192, align 8
  %194 = bitcast %"class.blink::PersistentRegion"* %183 to i64*
  store i64 %193, i64* %194, align 8
  %195 = bitcast %"class.blink::PersistentNode"* %191 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %166, %"class.blink::PersistentBase"** %195, align 8
  %196 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %191, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_8AXObjectELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %196, align 8
  store %"class.blink::PersistentNode"* %191, %"class.blink::PersistentNode"** %170, align 8
  br label %197

197:                                              ; preds = %163, %163, %190
  %198 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %6, i64 0, i32 1
  %199 = getelementptr inbounds %"class.blink::AXRange", %"class.blink::AXRange"* %0, i64 0, i32 1, i32 1
  %200 = bitcast i32* %199 to i64*
  %201 = bitcast i32* %198 to i64*
  %202 = load i64, i64* %200, align 8
  store i64 %202, i64* %201, align 8
  %203 = call %"class.WTF::StringImpl"* @_ZNK5blink10AXPosition8ToStringEv(%"class.blink::AXPosition"* nonnull %6) #8
  call void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend"* nonnull sret %3, %"class.WTF::StringAppend.533"* nonnull dereferenceable(24) %4, %"class.WTF::StringImpl"* %203)
  %204 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %3)
  %205 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %204, %"class.WTF::StringImpl"** %205, align 8
  %206 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %3, i64 0, i32 1, i32 0, i32 0
  %207 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %206, align 8
  %208 = icmp eq %"class.WTF::StringImpl"* %207, null
  br i1 %208, label %222, label %209

209:                                              ; preds = %197
  %210 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %207, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %211 = load atomic i32, i32* %210 monotonic, align 4
  %212 = and i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %207, i64 0, i32 0
  %215 = load i32, i32* %214, align 4
  br i1 %213, label %216, label %218

216:                                              ; preds = %209
  %217 = add i32 %215, -1
  store i32 %217, i32* %214, align 4
  br label %218

218:                                              ; preds = %216, %209
  %219 = phi i32 [ %217, %216 ], [ %215, %209 ]
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %221, label %222

221:                                              ; preds = %218
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %207) #8
  br label %222

222:                                              ; preds = %221, %218, %197
  %223 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %3, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %224 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %223, align 8
  %225 = icmp eq %"class.WTF::StringImpl"* %224, null
  br i1 %225, label %239, label %226

226:                                              ; preds = %222
  %227 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %224, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %228 = load atomic i32, i32* %227 monotonic, align 4
  %229 = and i32 %228, 2
  %230 = icmp eq i32 %229, 0
  %231 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %224, i64 0, i32 0
  %232 = load i32, i32* %231, align 4
  br i1 %230, label %233, label %235

233:                                              ; preds = %226
  %234 = add i32 %232, -1
  store i32 %234, i32* %231, align 4
  br label %235

235:                                              ; preds = %233, %226
  %236 = phi i32 [ %234, %233 ], [ %232, %226 ]
  %237 = icmp eq i32 %236, 0
  br i1 %237, label %238, label %239

238:                                              ; preds = %235
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %224) #8
  br label %239

239:                                              ; preds = %222, %235, %238
  %240 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %170, align 8
  %241 = icmp eq %"class.blink::PersistentNode"* %240, null
  br i1 %241, label %261, label %242

242:                                              ; preds = %239
  %243 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %244 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %243, i64 0, i32 1
  %245 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %244) #8
  %246 = icmp eq i8* %245, null
  br i1 %246, label %247, label %249, !prof !2

247:                                              ; preds = %242
  %248 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %244, i8* %248) #8
  br label %249

249:                                              ; preds = %247, %242
  %250 = phi i8* [ %248, %247 ], [ %245, %242 ]
  %251 = bitcast i8* %250 to %"class.blink::ThreadState"**
  %252 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %251, align 8
  %253 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %252, i64 0, i32 4, i32 0, i32 0, i32 0
  %254 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %253, align 8
  %255 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %170, align 8
  %256 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %254, i64 0, i32 0, i32 0
  %257 = bitcast %"class.blink::PersistentRegion"* %254 to i64*
  %258 = load i64, i64* %257, align 8
  %259 = bitcast %"class.blink::PersistentNode"* %255 to i64*
  store i64 %258, i64* %259, align 8
  %260 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %255, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %260, align 8
  store %"class.blink::PersistentNode"* %255, %"class.blink::PersistentNode"** %256, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %170, align 8
  br label %261

261:                                              ; preds = %239, %249
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %165) #8
  %262 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %164, align 8
  %263 = icmp eq %"class.WTF::StringImpl"* %262, null
  br i1 %263, label %277, label %264

264:                                              ; preds = %261
  %265 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %262, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %266 = load atomic i32, i32* %265 monotonic, align 4
  %267 = and i32 %266, 2
  %268 = icmp eq i32 %267, 0
  %269 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %262, i64 0, i32 0
  %270 = load i32, i32* %269, align 4
  br i1 %268, label %271, label %273

271:                                              ; preds = %264
  %272 = add i32 %270, -1
  store i32 %272, i32* %269, align 4
  br label %273

273:                                              ; preds = %271, %264
  %274 = phi i32 [ %272, %271 ], [ %270, %264 ]
  %275 = icmp eq i32 %274, 0
  br i1 %275, label %276, label %277

276:                                              ; preds = %273
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %262) #8
  br label %277

277:                                              ; preds = %261, %273, %276
  br i1 %71, label %303, label %278

278:                                              ; preds = %277
  %279 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %280 = load atomic i32, i32* %279 monotonic, align 4
  %281 = and i32 %280, 2
  %282 = icmp eq i32 %281, 0
  %283 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 0
  %284 = load i32, i32* %283, align 4
  br i1 %282, label %285, label %287

285:                                              ; preds = %278
  %286 = add i32 %284, -1
  store i32 %286, i32* %283, align 4
  br label %287

287:                                              ; preds = %285, %278
  %288 = phi i32 [ %286, %285 ], [ %284, %278 ]
  %289 = icmp eq i32 %288, 0
  br i1 %289, label %290, label %292

290:                                              ; preds = %287
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %70) #8
  %291 = load i32, i32* %283, align 4
  br label %292

292:                                              ; preds = %287, %290
  %293 = phi i32 [ %288, %287 ], [ %291, %290 ]
  %294 = load atomic i32, i32* %279 monotonic, align 4
  %295 = and i32 %294, 2
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %297, label %299

297:                                              ; preds = %292
  %298 = add i32 %293, -1
  store i32 %298, i32* %283, align 4
  br label %299

299:                                              ; preds = %297, %292
  %300 = phi i32 [ %298, %297 ], [ %293, %292 ]
  %301 = icmp eq i32 %300, 0
  br i1 %301, label %302, label %303

302:                                              ; preds = %299
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %70) #8
  br label %303

303:                                              ; preds = %277, %299, %302
  %304 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %37, align 8
  %305 = icmp eq %"class.blink::PersistentNode"* %304, null
  br i1 %305, label %325, label %306

306:                                              ; preds = %303
  %307 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %308 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %307, i64 0, i32 1
  %309 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %308) #8
  %310 = icmp eq i8* %309, null
  br i1 %310, label %311, label %313, !prof !2

311:                                              ; preds = %306
  %312 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %308, i8* %312) #8
  br label %313

313:                                              ; preds = %311, %306
  %314 = phi i8* [ %312, %311 ], [ %309, %306 ]
  %315 = bitcast i8* %314 to %"class.blink::ThreadState"**
  %316 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %315, align 8
  %317 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %316, i64 0, i32 4, i32 0, i32 0, i32 0
  %318 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %317, align 8
  %319 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %37, align 8
  %320 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %318, i64 0, i32 0, i32 0
  %321 = bitcast %"class.blink::PersistentRegion"* %318 to i64*
  %322 = load i64, i64* %321, align 8
  %323 = bitcast %"class.blink::PersistentNode"* %319 to i64*
  store i64 %322, i64* %323, align 8
  %324 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %319, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %324, align 8
  store %"class.blink::PersistentNode"* %319, %"class.blink::PersistentNode"** %320, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %37, align 8
  br label %325

325:                                              ; preds = %303, %313
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #8
  br label %326

326:                                              ; preds = %325, %28
  %327 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %328 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %327, align 8
  ret %"class.WTF::StringImpl"* %328
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend"* noalias sret, %"class.WTF::StringAppend.533"* dereferenceable(24), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.WTF::StringAppend.533", align 8
  %5 = bitcast %"class.WTF::StringAppend.533"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.WTF::StringAppend.533"* %4 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.533", %"class.WTF::StringAppend.533"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::StringAppend.533", %"class.WTF::StringAppend.533"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #8
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !2

26:                                               ; preds = %17
  tail call void @llvm.trap() #8
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %3, %12, %27
  %30 = getelementptr inbounds %"class.WTF::StringAppend.533", %"class.WTF::StringAppend.533"* %4, i64 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringAppend.533", %"class.WTF::StringAppend.533"* %1, i64 0, i32 1
  %32 = bitcast i8** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast i8** %30 to i64*
  store i64 %33, i64* %34, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %35, label %53, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %54

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #8
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !2

50:                                               ; preds = %41
  tail call void @llvm.trap() #8
  unreachable

51:                                               ; preds = %41
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %42, align 4
  br label %54

53:                                               ; preds = %29
  tail call void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend"* %0, %"class.WTF::StringAppend.533"* nonnull byval(%"class.WTF::StringAppend.533") align 8 %4, %"class.WTF::StringImpl"* null)
  br label %66

54:                                               ; preds = %36, %51
  tail call void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend"* %0, %"class.WTF::StringAppend.533"* nonnull byval(%"class.WTF::StringAppend.533") align 8 %4, %"class.WTF::StringImpl"* nonnull %2)
  %55 = load atomic i32, i32* %37 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %54
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %54
  %63 = phi i32 [ %61, %60 ], [ %59, %54 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #8
  br label %66

66:                                               ; preds = %53, %62, %65
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK5blink10AXPosition8ToStringEv(%"class.blink::AXPosition"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EcvS3_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.541", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.541", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.544", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.544", align 8
  %6 = alloca i8*, align 8
  %7 = alloca i16*, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %11 = bitcast %"class.WTF::StringTypeAdapter.544"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #8
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #8
  %13 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.544"* nonnull %5, i8* %13) #8
  %14 = bitcast %"class.WTF::StringTypeAdapter.544"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #8
  %15 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false) #8
  %16 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.544"* nonnull %4, i8* %16) #8
  %17 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %21 = select i1 %19, %"class.WTF::StringImpl"* %20, %"class.WTF::StringImpl"* %18
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #8
  br i1 %25, label %92, label %26

26:                                               ; preds = %1
  %27 = icmp eq %"class.WTF::StringImpl"* %9, null
  %28 = select i1 %27, %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"* %9
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 1
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %92, label %33

33:                                               ; preds = %26
  %34 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #8
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %35 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %36 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %35, i8** nonnull dereferenceable(8) %6) #8
  %37 = load i8*, i8** %6, align 8
  %38 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %39 = bitcast %"class.WTF::StringTypeAdapter.541"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #8
  %40 = getelementptr inbounds %"class.WTF::StringTypeAdapter.541", %"class.WTF::StringTypeAdapter.541"* %3, i64 0, i32 0, i32 0, i32 1
  %41 = getelementptr inbounds %"class.WTF::StringTypeAdapter.541", %"class.WTF::StringTypeAdapter.541"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 24, i1 false) #8
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %44, label %46

44:                                               ; preds = %33
  %45 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %52

46:                                               ; preds = %33
  %47 = ptrtoint %"class.WTF::StringImpl"* %42 to i64
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 1
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 1
  %51 = bitcast %"class.WTF::StringImpl"* %50 to i8*
  br label %52

52:                                               ; preds = %44, %46
  %53 = phi i8* [ null, %44 ], [ %51, %46 ]
  %54 = phi i64 [ %45, %44 ], [ %47, %46 ]
  %55 = phi i32 [ 0, %44 ], [ %49, %46 ]
  %56 = bitcast %"class.WTF::StringTypeAdapter.541"* %3 to i64*
  store i64 %54, i64* %56, align 8
  store i8* %53, i8** %40, align 8
  store i32 %55, i32* %41, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.533"* %38, i8* %37) #8
  %57 = getelementptr inbounds %"class.WTF::StringTypeAdapter.541", %"class.WTF::StringTypeAdapter.541"* %3, i64 0, i32 0
  %58 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.533"* %38) #8
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds i8, i8* %37, i64 %59
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.542"* nonnull %57, i8* %60) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #8
  %61 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %61, label %151, label %62

62:                                               ; preds = %52
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %79

69:                                               ; preds = %62
  %70 = zext i32 %68 to i33
  %71 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %70, i33 1) #8
  %72 = extractvalue { i33, i1 } %71, 1
  %73 = extractvalue { i33, i1 } %71, 0
  %74 = icmp slt i33 %73, 0
  %75 = or i1 %72, %74
  br i1 %75, label %76, label %77, !prof !2

76:                                               ; preds = %69
  call void @llvm.trap() #8
  unreachable

77:                                               ; preds = %69
  %78 = trunc i33 %73 to i32
  store i32 %78, i32* %67, align 4
  br label %79

79:                                               ; preds = %62, %77
  %80 = phi i32 [ %78, %77 ], [ %68, %62 ]
  %81 = ptrtoint %"class.WTF::StringImpl"* %36 to i64
  %82 = load atomic i32, i32* %63 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %88

85:                                               ; preds = %79
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %87 = add i32 %80, -1
  store i32 %87, i32* %86, align 4
  br label %88

88:                                               ; preds = %85, %79
  %89 = phi i32 [ %87, %85 ], [ %80, %79 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %151

91:                                               ; preds = %88
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #8
  br label %151

92:                                               ; preds = %26, %1
  %93 = bitcast i16** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93) #8
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %7, align 8
  %94 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %95 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %94, i16** nonnull dereferenceable(8) %7) #8
  %96 = load i16*, i16** %7, align 8
  %97 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %98 = bitcast %"class.WTF::StringTypeAdapter.541"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %98) #8
  %99 = getelementptr inbounds %"class.WTF::StringTypeAdapter.541", %"class.WTF::StringTypeAdapter.541"* %2, i64 0, i32 0, i32 0, i32 1
  %100 = getelementptr inbounds %"class.WTF::StringTypeAdapter.541", %"class.WTF::StringTypeAdapter.541"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %98, i8 -86, i64 24, i1 false) #8
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %102 = icmp eq %"class.WTF::StringImpl"* %101, null
  br i1 %102, label %103, label %105

103:                                              ; preds = %92
  %104 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %111

105:                                              ; preds = %92
  %106 = ptrtoint %"class.WTF::StringImpl"* %101 to i64
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 1
  %108 = load i32, i32* %107, align 4
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 1
  %110 = bitcast %"class.WTF::StringImpl"* %109 to i8*
  br label %111

111:                                              ; preds = %103, %105
  %112 = phi i8* [ null, %103 ], [ %110, %105 ]
  %113 = phi i64 [ %104, %103 ], [ %106, %105 ]
  %114 = phi i32 [ 0, %103 ], [ %108, %105 ]
  %115 = bitcast %"class.WTF::StringTypeAdapter.541"* %2 to i64*
  store i64 %113, i64* %115, align 8
  store i8* %112, i8** %99, align 8
  store i32 %114, i32* %100, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.533"* %97, i16* %96) #8
  %116 = getelementptr inbounds %"class.WTF::StringTypeAdapter.541", %"class.WTF::StringTypeAdapter.541"* %2, i64 0, i32 0
  %117 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.533"* %97) #8
  %118 = zext i32 %117 to i64
  %119 = getelementptr inbounds i16, i16* %96, i64 %118
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.542"* nonnull %116, i16* %119) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %98) #8
  %120 = icmp eq %"class.WTF::StringImpl"* %95, null
  br i1 %120, label %151, label %121

121:                                              ; preds = %111
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load atomic i32, i32* %122 monotonic, align 4
  %124 = and i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 0
  %127 = load i32, i32* %126, align 4
  br i1 %125, label %128, label %138

128:                                              ; preds = %121
  %129 = zext i32 %127 to i33
  %130 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %129, i33 1) #8
  %131 = extractvalue { i33, i1 } %130, 1
  %132 = extractvalue { i33, i1 } %130, 0
  %133 = icmp slt i33 %132, 0
  %134 = or i1 %131, %133
  br i1 %134, label %135, label %136, !prof !2

135:                                              ; preds = %128
  call void @llvm.trap() #8
  unreachable

136:                                              ; preds = %128
  %137 = trunc i33 %132 to i32
  store i32 %137, i32* %126, align 4
  br label %138

138:                                              ; preds = %121, %136
  %139 = phi i32 [ %137, %136 ], [ %127, %121 ]
  %140 = ptrtoint %"class.WTF::StringImpl"* %95 to i64
  %141 = load atomic i32, i32* %122 monotonic, align 4
  %142 = and i32 %141, 2
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %147

144:                                              ; preds = %138
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 0
  %146 = add i32 %139, -1
  store i32 %146, i32* %145, align 4
  br label %147

147:                                              ; preds = %144, %138
  %148 = phi i32 [ %146, %144 ], [ %139, %138 ]
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %151

150:                                              ; preds = %147
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %95) #8
  br label %151

151:                                              ; preds = %150, %147, %111, %91, %88, %52
  %152 = phi i8* [ %34, %52 ], [ %34, %88 ], [ %34, %91 ], [ %93, %111 ], [ %93, %147 ], [ %93, %150 ]
  %153 = phi i64 [ 0, %52 ], [ %81, %88 ], [ %81, %91 ], [ 0, %111 ], [ %140, %147 ], [ %140, %150 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %152) #8
  %154 = inttoptr i64 %153 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %154
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blinkeqERKNS_7AXRangeES2_(%"class.blink::AXRange"* nocapture readonly dereferenceable(48), %"class.blink::AXRange"* nocapture readonly dereferenceable(48)) local_unnamed_addr #0 {
  %3 = alloca %"class.blink::AXPosition", align 8
  %4 = alloca %"class.blink::AXPosition", align 8
  %5 = alloca %"class.blink::AXPosition", align 8
  %6 = alloca %"class.blink::AXPosition", align 8
  %7 = bitcast %"class.blink::AXPosition"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #8
  %8 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %3, i64 0, i32 0, i32 0
  %9 = bitcast %"class.blink::AXRange"* %0 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.blink::AXPosition"* %3 to i64*
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %3, i64 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %12, align 8
  switch i64 %10, label %13 [
    i64 0, label %39
    i64 -1, label %39
  ]

13:                                               ; preds = %2
  %14 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %15 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %14, i64 0, i32 1
  %16 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %15) #8
  %17 = icmp eq i8* %16, null
  br i1 %17, label %18, label %20, !prof !2

18:                                               ; preds = %13
  %19 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %15, i8* %19) #8
  br label %20

20:                                               ; preds = %18, %13
  %21 = phi i8* [ %19, %18 ], [ %16, %13 ]
  %22 = bitcast i8* %21 to %"class.blink::ThreadState"**
  %23 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %23, i64 0, i32 4, i32 0, i32 0, i32 0
  %25 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %25, i64 0, i32 0, i32 0
  %27 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %26, align 8
  %28 = icmp eq %"class.blink::PersistentNode"* %27, null
  br i1 %28, label %29, label %32, !prof !2

29:                                               ; preds = %20
  %30 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %25, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %30) #8
  %31 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %26, align 8
  br label %32

32:                                               ; preds = %29, %20
  %33 = phi %"class.blink::PersistentNode"* [ %31, %29 ], [ %27, %20 ]
  %34 = bitcast %"class.blink::PersistentNode"* %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.blink::PersistentRegion"* %25 to i64*
  store i64 %35, i64* %36, align 8
  %37 = bitcast %"class.blink::PersistentNode"* %33 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %8, %"class.blink::PersistentBase"** %37, align 8
  %38 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %33, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_8AXObjectELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %38, align 8
  store %"class.blink::PersistentNode"* %33, %"class.blink::PersistentNode"** %12, align 8
  br label %39

39:                                               ; preds = %2, %2, %32
  %40 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %3, i64 0, i32 1
  %41 = getelementptr inbounds %"class.blink::AXRange", %"class.blink::AXRange"* %0, i64 0, i32 0, i32 1
  %42 = bitcast i32* %41 to i64*
  %43 = bitcast i32* %40 to i64*
  %44 = load i64, i64* %42, align 8
  store i64 %44, i64* %43, align 8
  %45 = bitcast %"class.blink::AXPosition"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #8
  %46 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %4, i64 0, i32 0, i32 0
  %47 = bitcast %"class.blink::AXRange"* %1 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.blink::AXPosition"* %4 to i64*
  store i64 %48, i64* %49, align 8
  %50 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %4, i64 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %50, align 8
  switch i64 %48, label %51 [
    i64 0, label %77
    i64 -1, label %77
  ]

51:                                               ; preds = %39
  %52 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %53 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %52, i64 0, i32 1
  %54 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %53) #8
  %55 = icmp eq i8* %54, null
  br i1 %55, label %56, label %58, !prof !2

56:                                               ; preds = %51
  %57 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %53, i8* %57) #8
  br label %58

58:                                               ; preds = %56, %51
  %59 = phi i8* [ %57, %56 ], [ %54, %51 ]
  %60 = bitcast i8* %59 to %"class.blink::ThreadState"**
  %61 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %61, i64 0, i32 4, i32 0, i32 0, i32 0
  %63 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %63, i64 0, i32 0, i32 0
  %65 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %64, align 8
  %66 = icmp eq %"class.blink::PersistentNode"* %65, null
  br i1 %66, label %67, label %70, !prof !2

67:                                               ; preds = %58
  %68 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %63, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %68) #8
  %69 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %64, align 8
  br label %70

70:                                               ; preds = %67, %58
  %71 = phi %"class.blink::PersistentNode"* [ %69, %67 ], [ %65, %58 ]
  %72 = bitcast %"class.blink::PersistentNode"* %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = bitcast %"class.blink::PersistentRegion"* %63 to i64*
  store i64 %73, i64* %74, align 8
  %75 = bitcast %"class.blink::PersistentNode"* %71 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %46, %"class.blink::PersistentBase"** %75, align 8
  %76 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %71, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_8AXObjectELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %76, align 8
  store %"class.blink::PersistentNode"* %71, %"class.blink::PersistentNode"** %50, align 8
  br label %77

77:                                               ; preds = %39, %39, %70
  %78 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %4, i64 0, i32 1
  %79 = getelementptr inbounds %"class.blink::AXRange", %"class.blink::AXRange"* %1, i64 0, i32 0, i32 1
  %80 = bitcast i32* %79 to i64*
  %81 = bitcast i32* %78 to i64*
  %82 = load i64, i64* %80, align 8
  store i64 %82, i64* %81, align 8
  %83 = call zeroext i1 @_ZN5blinkeqERKNS_10AXPositionES2_(%"class.blink::AXPosition"* nonnull dereferenceable(24) %3, %"class.blink::AXPosition"* nonnull dereferenceable(24) %4) #8
  br i1 %83, label %84, label %208

84:                                               ; preds = %77
  %85 = bitcast %"class.blink::AXPosition"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %85) #8
  %86 = getelementptr inbounds %"class.blink::AXRange", %"class.blink::AXRange"* %0, i64 0, i32 1
  %87 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %5, i64 0, i32 0, i32 0
  %88 = bitcast %"class.blink::AXPosition"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.blink::AXPosition"* %5 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %5, i64 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %91, align 8
  switch i64 %89, label %92 [
    i64 0, label %118
    i64 -1, label %118
  ]

92:                                               ; preds = %84
  %93 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %94 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %93, i64 0, i32 1
  %95 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %94) #8
  %96 = icmp eq i8* %95, null
  br i1 %96, label %97, label %99, !prof !2

97:                                               ; preds = %92
  %98 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %94, i8* %98) #8
  br label %99

99:                                               ; preds = %97, %92
  %100 = phi i8* [ %98, %97 ], [ %95, %92 ]
  %101 = bitcast i8* %100 to %"class.blink::ThreadState"**
  %102 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %101, align 8
  %103 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %102, i64 0, i32 4, i32 0, i32 0, i32 0
  %104 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %103, align 8
  %105 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %104, i64 0, i32 0, i32 0
  %106 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %105, align 8
  %107 = icmp eq %"class.blink::PersistentNode"* %106, null
  br i1 %107, label %108, label %111, !prof !2

108:                                              ; preds = %99
  %109 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %104, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %109) #8
  %110 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %105, align 8
  br label %111

111:                                              ; preds = %108, %99
  %112 = phi %"class.blink::PersistentNode"* [ %110, %108 ], [ %106, %99 ]
  %113 = bitcast %"class.blink::PersistentNode"* %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.blink::PersistentRegion"* %104 to i64*
  store i64 %114, i64* %115, align 8
  %116 = bitcast %"class.blink::PersistentNode"* %112 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %87, %"class.blink::PersistentBase"** %116, align 8
  %117 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %112, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_8AXObjectELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %117, align 8
  store %"class.blink::PersistentNode"* %112, %"class.blink::PersistentNode"** %91, align 8
  br label %118

118:                                              ; preds = %84, %84, %111
  %119 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %5, i64 0, i32 1
  %120 = getelementptr inbounds %"class.blink::AXRange", %"class.blink::AXRange"* %0, i64 0, i32 1, i32 1
  %121 = bitcast i32* %120 to i64*
  %122 = bitcast i32* %119 to i64*
  %123 = load i64, i64* %121, align 8
  store i64 %123, i64* %122, align 8
  %124 = bitcast %"class.blink::AXPosition"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %124) #8
  %125 = getelementptr inbounds %"class.blink::AXRange", %"class.blink::AXRange"* %1, i64 0, i32 1
  %126 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %6, i64 0, i32 0, i32 0
  %127 = bitcast %"class.blink::AXPosition"* %125 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.blink::AXPosition"* %6 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %6, i64 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %130, align 8
  switch i64 %128, label %131 [
    i64 0, label %157
    i64 -1, label %157
  ]

131:                                              ; preds = %118
  %132 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %133 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %132, i64 0, i32 1
  %134 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %133) #8
  %135 = icmp eq i8* %134, null
  br i1 %135, label %136, label %138, !prof !2

136:                                              ; preds = %131
  %137 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %133, i8* %137) #8
  br label %138

138:                                              ; preds = %136, %131
  %139 = phi i8* [ %137, %136 ], [ %134, %131 ]
  %140 = bitcast i8* %139 to %"class.blink::ThreadState"**
  %141 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %140, align 8
  %142 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %141, i64 0, i32 4, i32 0, i32 0, i32 0
  %143 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %142, align 8
  %144 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %143, i64 0, i32 0, i32 0
  %145 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %144, align 8
  %146 = icmp eq %"class.blink::PersistentNode"* %145, null
  br i1 %146, label %147, label %150, !prof !2

147:                                              ; preds = %138
  %148 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %143, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %148) #8
  %149 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %144, align 8
  br label %150

150:                                              ; preds = %147, %138
  %151 = phi %"class.blink::PersistentNode"* [ %149, %147 ], [ %145, %138 ]
  %152 = bitcast %"class.blink::PersistentNode"* %151 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = bitcast %"class.blink::PersistentRegion"* %143 to i64*
  store i64 %153, i64* %154, align 8
  %155 = bitcast %"class.blink::PersistentNode"* %151 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %126, %"class.blink::PersistentBase"** %155, align 8
  %156 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %151, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_8AXObjectELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %156, align 8
  store %"class.blink::PersistentNode"* %151, %"class.blink::PersistentNode"** %130, align 8
  br label %157

157:                                              ; preds = %150, %118, %118
  %158 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %6, i64 0, i32 1
  %159 = getelementptr inbounds %"class.blink::AXRange", %"class.blink::AXRange"* %1, i64 0, i32 1, i32 1
  %160 = bitcast i32* %159 to i64*
  %161 = bitcast i32* %158 to i64*
  %162 = load i64, i64* %160, align 8
  store i64 %162, i64* %161, align 8
  %163 = call zeroext i1 @_ZN5blinkeqERKNS_10AXPositionES2_(%"class.blink::AXPosition"* nonnull dereferenceable(24) %5, %"class.blink::AXPosition"* nonnull dereferenceable(24) %6) #8
  %164 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %130, align 8
  %165 = icmp eq %"class.blink::PersistentNode"* %164, null
  br i1 %165, label %185, label %166

166:                                              ; preds = %157
  %167 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %168 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %167, i64 0, i32 1
  %169 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %168) #8
  %170 = icmp eq i8* %169, null
  br i1 %170, label %171, label %173, !prof !2

171:                                              ; preds = %166
  %172 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %168, i8* %172) #8
  br label %173

173:                                              ; preds = %171, %166
  %174 = phi i8* [ %172, %171 ], [ %169, %166 ]
  %175 = bitcast i8* %174 to %"class.blink::ThreadState"**
  %176 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %175, align 8
  %177 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %176, i64 0, i32 4, i32 0, i32 0, i32 0
  %178 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %177, align 8
  %179 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %130, align 8
  %180 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %178, i64 0, i32 0, i32 0
  %181 = bitcast %"class.blink::PersistentRegion"* %178 to i64*
  %182 = load i64, i64* %181, align 8
  %183 = bitcast %"class.blink::PersistentNode"* %179 to i64*
  store i64 %182, i64* %183, align 8
  %184 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %179, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %184, align 8
  store %"class.blink::PersistentNode"* %179, %"class.blink::PersistentNode"** %180, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %130, align 8
  br label %185

185:                                              ; preds = %157, %173
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %124) #8
  %186 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %91, align 8
  %187 = icmp eq %"class.blink::PersistentNode"* %186, null
  br i1 %187, label %207, label %188

188:                                              ; preds = %185
  %189 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %190 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %189, i64 0, i32 1
  %191 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %190) #8
  %192 = icmp eq i8* %191, null
  br i1 %192, label %193, label %195, !prof !2

193:                                              ; preds = %188
  %194 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %190, i8* %194) #8
  br label %195

195:                                              ; preds = %193, %188
  %196 = phi i8* [ %194, %193 ], [ %191, %188 ]
  %197 = bitcast i8* %196 to %"class.blink::ThreadState"**
  %198 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %197, align 8
  %199 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %198, i64 0, i32 4, i32 0, i32 0, i32 0
  %200 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %199, align 8
  %201 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %91, align 8
  %202 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %200, i64 0, i32 0, i32 0
  %203 = bitcast %"class.blink::PersistentRegion"* %200 to i64*
  %204 = load i64, i64* %203, align 8
  %205 = bitcast %"class.blink::PersistentNode"* %201 to i64*
  store i64 %204, i64* %205, align 8
  %206 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %201, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %206, align 8
  store %"class.blink::PersistentNode"* %201, %"class.blink::PersistentNode"** %202, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %91, align 8
  br label %207

207:                                              ; preds = %185, %195
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %85) #8
  br label %208

208:                                              ; preds = %77, %207
  %209 = phi i1 [ %163, %207 ], [ false, %77 ]
  %210 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %50, align 8
  %211 = icmp eq %"class.blink::PersistentNode"* %210, null
  br i1 %211, label %231, label %212

212:                                              ; preds = %208
  %213 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %214 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %213, i64 0, i32 1
  %215 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %214) #8
  %216 = icmp eq i8* %215, null
  br i1 %216, label %217, label %219, !prof !2

217:                                              ; preds = %212
  %218 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %214, i8* %218) #8
  br label %219

219:                                              ; preds = %217, %212
  %220 = phi i8* [ %218, %217 ], [ %215, %212 ]
  %221 = bitcast i8* %220 to %"class.blink::ThreadState"**
  %222 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %221, align 8
  %223 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %222, i64 0, i32 4, i32 0, i32 0, i32 0
  %224 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %223, align 8
  %225 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %50, align 8
  %226 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %224, i64 0, i32 0, i32 0
  %227 = bitcast %"class.blink::PersistentRegion"* %224 to i64*
  %228 = load i64, i64* %227, align 8
  %229 = bitcast %"class.blink::PersistentNode"* %225 to i64*
  store i64 %228, i64* %229, align 8
  %230 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %225, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %230, align 8
  store %"class.blink::PersistentNode"* %225, %"class.blink::PersistentNode"** %226, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %50, align 8
  br label %231

231:                                              ; preds = %208, %219
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #8
  %232 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %12, align 8
  %233 = icmp eq %"class.blink::PersistentNode"* %232, null
  br i1 %233, label %253, label %234

234:                                              ; preds = %231
  %235 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %236 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %235, i64 0, i32 1
  %237 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %236) #8
  %238 = icmp eq i8* %237, null
  br i1 %238, label %239, label %241, !prof !2

239:                                              ; preds = %234
  %240 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %236, i8* %240) #8
  br label %241

241:                                              ; preds = %239, %234
  %242 = phi i8* [ %240, %239 ], [ %237, %234 ]
  %243 = bitcast i8* %242 to %"class.blink::ThreadState"**
  %244 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %243, align 8
  %245 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %244, i64 0, i32 4, i32 0, i32 0, i32 0
  %246 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %245, align 8
  %247 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %12, align 8
  %248 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %246, i64 0, i32 0, i32 0
  %249 = bitcast %"class.blink::PersistentRegion"* %246 to i64*
  %250 = load i64, i64* %249, align 8
  %251 = bitcast %"class.blink::PersistentNode"* %247 to i64*
  store i64 %250, i64* %251, align 8
  %252 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %247, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %252, align 8
  store %"class.blink::PersistentNode"* %247, %"class.blink::PersistentNode"** %248, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %12, align 8
  br label %253

253:                                              ; preds = %231, %241
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #8
  ret i1 %209
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blinkneERKNS_7AXRangeES2_(%"class.blink::AXRange"* nocapture readonly dereferenceable(48), %"class.blink::AXRange"* nocapture readonly dereferenceable(48)) local_unnamed_addr #0 {
  %3 = tail call zeroext i1 @_ZN5blinkeqERKNS_7AXRangeES2_(%"class.blink::AXRange"* dereferenceable(48) %0, %"class.blink::AXRange"* dereferenceable(48) %1)
  %4 = xor i1 %3, true
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN5blinklsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_7AXRangeE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"class.blink::AXRange"* dereferenceable(48)) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #8
  %6 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = tail call %"class.WTF::StringImpl"* @_ZNK5blink7AXRange8ToStringEv(%"class.blink::AXRange"* %1)
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"** %8, align 8
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %3, %"class.WTF::String"* nonnull %4, i32 0) #8
  %9 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %11 to i64
  %18 = select i1 %12, i8* %14, i8* %5
  %19 = select i1 %12, i64 %16, i64 %17
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* %18, i64 %19) #8
  %21 = load i8, i8* %10, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %2
  %24 = load i8*, i8** %13, align 8
  call void @_ZdlPv(i8* %24) #9
  br label %25

25:                                               ; preds = %2, %23
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %41, label %28

28:                                               ; preds = %25
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br i1 %32, label %35, label %37

35:                                               ; preds = %28
  %36 = add i32 %34, -1
  store i32 %36, i32* %33, align 4
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %36, %35 ], [ %34, %28 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #8
  br label %41

41:                                               ; preds = %25, %37, %40
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #8
  ret %"class.std::__1::basic_ostream"* %20
}

declare void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_8AXObjectELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %4 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %4, i64 2
  %6 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %5, align 8
  tail call void %6(%"class.blink::Visitor"* %0, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink14PersistentBaseIKNS_8AXObjectELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv, i8* %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseIKNS_8AXObjectELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::AXObject"**
  %4 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %3, align 8
  %5 = icmp eq %"class.blink::AXObject"* %4, null
  br i1 %5, label %49, label %6

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #8
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #8
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %49, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %4, i64 -1, i32 14
  %20 = bitcast %"class.blink::Member.2"* %19 to %"class.blink::HeapObjectHeader"*
  %21 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %20, i64 0, i32 2
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %49

25:                                               ; preds = %18
  store %"class.blink::AXObject"* null, %"class.blink::AXObject"** %3, align 8
  %26 = getelementptr inbounds i8, i8* %1, i64 8
  %27 = bitcast i8* %26 to %"class.blink::PersistentNode"**
  %28 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %29 = icmp eq %"class.blink::PersistentNode"* %28, null
  br i1 %29, label %49, label %30

30:                                               ; preds = %25
  %31 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %32 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %31, i64 0, i32 1
  %33 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %32) #8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %35, label %37, !prof !2

35:                                               ; preds = %30
  %36 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %32, i8* %36) #8
  br label %37

37:                                               ; preds = %35, %30
  %38 = phi i8* [ %36, %35 ], [ %33, %30 ]
  %39 = bitcast i8* %38 to %"class.blink::ThreadState"**
  %40 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %40, i64 0, i32 4, i32 0, i32 0, i32 0
  %42 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %41, align 8
  %43 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %44 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %42, i64 0, i32 0, i32 0
  %45 = bitcast %"class.blink::PersistentRegion"* %42 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.blink::PersistentNode"* %43 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %43, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %48, align 8
  store %"class.blink::PersistentNode"* %43, %"class.blink::PersistentNode"** %44, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %27, align 8
  br label %49

49:                                               ; preds = %18, %13, %37, %25, %2
  ret void
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #1

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend"*, %"class.WTF::StringAppend.533"* byval(%"class.WTF::StringAppend.533") align 8, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend.533"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.533", %"class.WTF::StringAppend.533"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #8
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !2

25:                                               ; preds = %16
  tail call void @llvm.trap() #8
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %3, %11, %26
  %29 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend.533", %"class.WTF::StringAppend.533"* %1, i64 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %34, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %35, label %65, label %36

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %53

43:                                               ; preds = %36
  %44 = zext i32 %42 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #8
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !2

50:                                               ; preds = %43
  tail call void @llvm.trap() #8
  unreachable

51:                                               ; preds = %43
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %41, align 4
  br label %53

53:                                               ; preds = %36, %51
  %54 = phi i32 [ %52, %51 ], [ %42, %36 ]
  %55 = load atomic i32, i32* %37 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %60 = add i32 %54, -1
  store i32 %60, i32* %59, align 4
  br label %61

61:                                               ; preds = %58, %53
  %62 = phi i32 [ %60, %58 ], [ %54, %53 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #8
  br label %65

65:                                               ; preds = %28, %61, %64
  br i1 %10, label %79, label %66

66:                                               ; preds = %65
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  br i1 %70, label %73, label %75

73:                                               ; preds = %66
  %74 = add i32 %72, -1
  store i32 %74, i32* %71, align 4
  br label %75

75:                                               ; preds = %73, %66
  %76 = phi i32 [ %74, %73 ], [ %72, %66 ]
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #8
  br label %79

79:                                               ; preds = %65, %75, %78
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.533"* %8) #8
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #8
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.533"* %8) #8
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #8
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0), i8* %26, i8* %27) #8
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.4, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #8
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #8
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #8
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #8
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #8
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0), i8* %41, i8* %42) #8
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.4, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #8
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #8
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #8
  ret i32 %18
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.544"*, i8*) unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.533"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.544", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.533", %"class.WTF::StringAppend.533"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.544"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #8
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.544", %"class.WTF::StringTypeAdapter.544"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.533", %"class.WTF::StringAppend.533"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.544"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.544"* nonnull %4, i8* %14) #8
  %15 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.534"* %9) #8
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #8
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.534"* %9) #8
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #8
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0), i8* %25, i8* %26) #8
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.4, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #8
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #8
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #8
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #8
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #8
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0), i8* %41, i8* %42) #8
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.4, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #8
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #8
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #8
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.534"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.544", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.544"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter.544", %"class.WTF::StringTypeAdapter.544"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend.534", %"class.WTF::StringAppend.534"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter.544"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.544"* nonnull %4, i8* %13) #8
  %14 = getelementptr inbounds %"class.WTF::StringAppend.534", %"class.WTF::StringAppend.534"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #8
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #8
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0), i8* %30, i8* %31) #8
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.4, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #8
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #8
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #8
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #8
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #8
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0), i8* %45, i8* %46) #8
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.4, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #8
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #8
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #8
  ret i32 %23
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.542"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.533"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.544", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.541", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.544", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.533", %"class.WTF::StringAppend.533"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.544"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.533", %"class.WTF::StringAppend.533"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.544"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.544"* nonnull %5, i8* %10) #8
  %11 = bitcast %"class.WTF::StringTypeAdapter.544"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #8
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.544", %"class.WTF::StringTypeAdapter.544"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.533", %"class.WTF::StringAppend.533"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #8
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.544"* nonnull %3, i8* %14) #8
  %15 = bitcast %"class.WTF::StringTypeAdapter.541"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #8
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.541", %"class.WTF::StringTypeAdapter.541"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.541", %"class.WTF::StringTypeAdapter.541"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend.533", %"class.WTF::StringAppend.533"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #8
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.541"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.544"* nonnull %3, i8* %1) #8
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.541", %"class.WTF::StringTypeAdapter.541"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.542"* nonnull %34, i8* %37) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #8
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.534"* %6) #8
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.544"* nonnull %5, i8* %40) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #8
  ret void
}

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.544"*, i8*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.542"*, i16*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.533"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.544", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.541", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.544", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.533", %"class.WTF::StringAppend.533"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.544"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.533", %"class.WTF::StringAppend.533"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.544"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.544"* nonnull %5, i8* %10) #8
  %11 = bitcast %"class.WTF::StringTypeAdapter.544"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #8
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.544", %"class.WTF::StringTypeAdapter.544"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.533", %"class.WTF::StringAppend.533"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #8
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.544"* nonnull %3, i8* %14) #8
  %15 = bitcast %"class.WTF::StringTypeAdapter.541"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #8
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.541", %"class.WTF::StringTypeAdapter.541"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.541", %"class.WTF::StringTypeAdapter.541"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend.533", %"class.WTF::StringAppend.533"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #8
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.541"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.544"* nonnull %3, i16* %1) #8
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.541", %"class.WTF::StringTypeAdapter.541"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i16, i16* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.542"* nonnull %34, i16* %37) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #8
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.534"* %6) #8
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.544"* nonnull %5, i16* %40) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #8
  ret void
}

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.544"*, i16*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #8
  %7 = load i8, i8* %6, align 8, !range !3
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #8
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #8
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #8
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #8
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #8
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #8
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #8
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #8
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #8
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #9
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #8
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #8
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #9
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #8
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #8
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #6

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
