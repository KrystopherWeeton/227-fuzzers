; ModuleID = '../../third_party/swiftshader/src/OpenGL/compiler/ValidateLimitations.cpp'
source_filename = "../../third_party/swiftshader/src/OpenGL/compiler/ValidateLimitations.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.ValidateLimitations = type { %class.TIntermTraverser, i32, %class.TInfoSinkBase*, i32, %class.TVector.32 }
%class.TIntermTraverser = type { i32 (...)**, i8, i8, i8, i8, i32, %class.TVector, %"class.std::__1::vector.6" }
%class.TVector = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.TIntermNode**, %class.TIntermNode**, %"class.std::__1::__compressed_pair" }
%class.TIntermNode = type { i32 (...)**, %struct.TSourceLoc }
%struct.TSourceLoc = type { i32, i32, i32, i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.TIntermNode** }
%"struct.std::__1::__compressed_pair_elem.0" = type { %class.pool_allocator }
%class.pool_allocator = type { %class.TPoolAllocator* }
%class.TPoolAllocator = type { i64, i64, i64, i64, i64, %"struct.TPoolAllocator::tHeader"*, %"struct.TPoolAllocator::tHeader"*, %"class.std::__1::vector.1", i32, i64 }
%"struct.TPoolAllocator::tHeader" = type { %"struct.TPoolAllocator::tHeader"*, i64 }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"struct.TPoolAllocator::tAllocState"*, %"struct.TPoolAllocator::tAllocState"*, %"class.std::__1::__compressed_pair.3" }
%"struct.TPoolAllocator::tAllocState" = type { i64, %"struct.TPoolAllocator::tHeader"* }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.TPoolAllocator::tAllocState"* }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { %"struct.TIntermTraverser::ParentBlock"*, %"struct.TIntermTraverser::ParentBlock"*, %"class.std::__1::__compressed_pair.19" }
%"struct.TIntermTraverser::ParentBlock" = type { %class.TIntermAggregate*, i64 }
%class.TIntermAggregate = type <{ %class.TIntermOperator.base, [4 x i8], %class.TVector, %"class.std::__1::basic_string", i8, i8, i8, i8, %struct.TSourceLoc, [4 x i8] }>
%class.TIntermOperator.base = type <{ %class.TIntermTyped, i32 }>
%class.TIntermTyped = type { %class.TIntermNode, %class.TType }
%class.TType = type { i8, i8, i8, i8, i8, i8, i32, i32, %class.TType*, %class.TInterfaceBlock*, %struct.TLayoutQualifier, %class.TStructure*, %"class.std::__1::basic_string"* }
%class.TInterfaceBlock = type <{ %class.TFieldListCollection, %"class.std::__1::basic_string"*, i32, i32, i32, [4 x i8] }>
%class.TFieldListCollection = type { i32 (...)**, %"class.std::__1::basic_string"*, %class.TVector.12*, %"class.std::__1::basic_string", i64 }
%class.TVector.12 = type { %"class.std::__1::vector.13" }
%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base.14" }
%"class.std::__1::__vector_base.14" = type { %class.TField**, %class.TField**, %"class.std::__1::__compressed_pair.15" }
%class.TField = type { %class.TType*, %"class.std::__1::basic_string"*, %struct.TSourceLoc }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16", %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %class.TField** }
%"struct.std::__1::__compressed_pair_elem.17" = type { %class.pool_allocator.18 }
%class.pool_allocator.18 = type { %class.TPoolAllocator* }
%struct.TLayoutQualifier = type { i32, i32, i32 }
%class.TStructure = type <{ %class.TFieldListCollection, i32, i32, i8, [7 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::__compressed_pair_elem.10" = type { %class.pool_allocator.11 }
%class.pool_allocator.11 = type { %class.TPoolAllocator* }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.TIntermTraverser::ParentBlock"* }
%class.TVector.32 = type { %"class.std::__1::vector.33" }
%"class.std::__1::vector.33" = type { %"class.std::__1::__vector_base.34" }
%"class.std::__1::__vector_base.34" = type { %struct.TLoopInfo*, %struct.TLoopInfo*, %"class.std::__1::__compressed_pair.35" }
%struct.TLoopInfo = type { %"struct.TLoopInfo::TIndex", %class.TIntermLoop* }
%"struct.TLoopInfo::TIndex" = type { i32 }
%class.TIntermLoop = type <{ %class.TIntermNode, i32, [4 x i8], %class.TIntermNode*, %class.TIntermTyped*, %class.TIntermTyped*, %class.TIntermNode*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36", %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %struct.TLoopInfo* }
%"struct.std::__1::__compressed_pair_elem.37" = type { %class.pool_allocator.38 }
%class.pool_allocator.38 = type { %class.TPoolAllocator* }
%class.TInfoSinkBase = type { %"class.std::__1::basic_string.24" }
%"class.std::__1::basic_string.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.27 }
%union.anon.27 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.TIntermBinary = type { %class.TIntermOperator.base, %class.TIntermTyped*, %class.TIntermTyped* }
%class.TIntermOperator = type <{ %class.TIntermTyped, i32, [4 x i8] }>
%class.TIntermSymbol = type { %class.TIntermTyped, i32, %"class.std::__1::basic_string" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%class.TIntermUnary = type { %class.TIntermOperator.base, %class.TIntermTyped* }
%"class.std::__1::vector.39" = type { %"class.std::__1::__vector_base.40" }
%"class.std::__1::__vector_base.40" = type { i32*, i32*, %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { i32* }
%"class.std::__1::__vector_base_common" = type { i8 }
%class.TParseContext = type <{ %class.TIntermediate*, %class.TSymbolTable*, i32, [4 x i8], i8*, i8, i8, i8, i8, i32, i32, [4 x i8], %class.TIntermNode*, i32, i32, i32, [4 x i8], %class.TType*, i8, i8, [2 x i8], i32, i32, [4 x i8], %class.TDiagnostics, %class.TDirectiveHandler, %"class.pp::Preprocessor", i8*, i8, i8, [6 x i8] }>
%class.TIntermediate = type { %class.TInfoSink* }
%class.TInfoSink = type { %class.TInfoSinkBase, %class.TInfoSinkBase, %class.TInfoSinkBase }
%class.TSymbolTable = type <{ %"class.std::__1::vector.46", %"class.std::__1::vector.60", %"class.std::__1::set", %"class.std::__1::set", i8, [7 x i8] }>
%"class.std::__1::vector.46" = type { %"class.std::__1::__vector_base.47" }
%"class.std::__1::__vector_base.47" = type { %class.TSymbolTableLevel**, %class.TSymbolTableLevel**, %"class.std::__1::__compressed_pair.55" }
%class.TSymbolTableLevel = type { %class.TMap }
%class.TMap = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.48", %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49", %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.std::__1::__tree_end_node" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %class.pool_allocator.51 }
%class.pool_allocator.51 = type { %class.TPoolAllocator* }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { i64 }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %class.TSymbolTableLevel** }
%"class.std::__1::vector.60" = type { %"class.std::__1::__vector_base.61" }
%"class.std::__1::__vector_base.61" = type { %"class.std::__1::map.62"*, %"class.std::__1::map.62"*, %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::map.62" = type { %"class.std::__1::__tree.63" }
%"class.std::__1::__tree.63" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.64", %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.std::__1::map.62"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree.78" }
%"class.std::__1::__tree.78" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%class.TDiagnostics = type <{ %"class.pp::Diagnostics", i32, [4 x i8], %class.TInfoSink*, i32, i32, i32, [4 x i8] }>
%"class.pp::Diagnostics" = type { i32 (...)** }
%class.TDirectiveHandler = type { %"class.pp::DirectiveHandler", %struct.TPragma, %"class.std::__1::map.87"*, %class.TDiagnostics*, i32* }
%"class.pp::DirectiveHandler" = type { i32 (...)** }
%struct.TPragma = type { i8, i8 }
%"class.std::__1::map.87" = type { %"class.std::__1::__tree.88" }
%"class.std::__1::__tree.88" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.89", %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"class.pp::Preprocessor" = type { %"struct.pp::PreprocessorImpl"* }
%"struct.pp::PreprocessorImpl" = type opaque
%class.TSymbol = type <{ i32 (...)**, %"class.std::__1::basic_string"*, i32, [4 x i8] }>
%struct.TParameter = type { %"class.std::__1::basic_string"*, %class.TType* }
%class.TIntermConstantUnion = type { %class.TIntermTyped, %class.ConstantUnion* }
%class.ConstantUnion = type <{ %union.anon.104, i8, [3 x i8] }>
%union.anon.104 = type { i32 }
%"class.(anonymous namespace)::ValidateConstIndexExpr" = type { %class.TIntermTraverser, i8, %class.TVector.32* }
%class.TIntermSelection = type { %class.TIntermTyped, %class.TIntermTyped*, %class.TIntermNode*, %class.TIntermNode* }
%class.TIntermBranch = type { %class.TIntermNode, i32, %class.TIntermTyped* }
%class.TIntermSwitch = type { %class.TIntermNode, %class.TIntermTyped*, %class.TIntermAggregate* }
%class.TIntermCase = type { %class.TIntermNode, %class.TIntermTyped* }

$_ZN19ValidateLimitationsD2Ev = comdat any

$_ZN19ValidateLimitationsD0Ev = comdat any

$_ZN16TIntermTraverser11visitSymbolEP13TIntermSymbol = comdat any

$_ZN16TIntermTraverser18visitConstantUnionEP20TIntermConstantUnion = comdat any

$_ZN16TIntermTraverser14visitSelectionE5VisitP16TIntermSelection = comdat any

$_ZN16TIntermTraverser11visitBranchE5VisitP13TIntermBranch = comdat any

$_ZN16TIntermTraverser11visitSwitchE5VisitP13TIntermSwitch = comdat any

$_ZN16TIntermTraverser9visitCaseE5VisitP11TIntermCase = comdat any

$_ZN16TIntermTraverserD2Ev = comdat any

$_ZN16TIntermTraverserD0Ev = comdat any

$_ZN16TIntermTraverser11visitBinaryE5VisitP13TIntermBinary = comdat any

$_ZN16TIntermTraverser10visitUnaryE5VisitP12TIntermUnary = comdat any

$_ZN16TIntermTraverser14visitAggregateE5VisitP16TIntermAggregate = comdat any

$_ZN16TIntermTraverser9visitLoopE5VisitP11TIntermLoop = comdat any

$_ZNK5TType11isScalarIntEv = comdat any

$_ZTV16TIntermTraverser = comdat any

@_ZTV19ValidateLimitations = hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.ValidateLimitations*)* @_ZN19ValidateLimitationsD2Ev to i8*), i8* bitcast (void (%class.ValidateLimitations*)* @_ZN19ValidateLimitationsD0Ev to i8*), i8* bitcast (void (%class.TIntermTraverser*, %class.TIntermSymbol*)* @_ZN16TIntermTraverser11visitSymbolEP13TIntermSymbol to i8*), i8* bitcast (void (%class.TIntermTraverser*, %class.TIntermConstantUnion*)* @_ZN16TIntermTraverser18visitConstantUnionEP20TIntermConstantUnion to i8*), i8* bitcast (i1 (%class.ValidateLimitations*, i32, %class.TIntermBinary*)* @_ZN19ValidateLimitations11visitBinaryE5VisitP13TIntermBinary to i8*), i8* bitcast (i1 (%class.ValidateLimitations*, i32, %class.TIntermUnary*)* @_ZN19ValidateLimitations10visitUnaryE5VisitP12TIntermUnary to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermSelection*)* @_ZN16TIntermTraverser14visitSelectionE5VisitP16TIntermSelection to i8*), i8* bitcast (i1 (%class.ValidateLimitations*, i32, %class.TIntermAggregate*)* @_ZN19ValidateLimitations14visitAggregateE5VisitP16TIntermAggregate to i8*), i8* bitcast (i1 (%class.ValidateLimitations*, i32, %class.TIntermLoop*)* @_ZN19ValidateLimitations9visitLoopE5VisitP11TIntermLoop to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermBranch*)* @_ZN16TIntermTraverser11visitBranchE5VisitP13TIntermBranch to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermSwitch*)* @_ZN16TIntermTraverser11visitSwitchE5VisitP13TIntermSwitch to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermCase*)* @_ZN16TIntermTraverser9visitCaseE5VisitP11TIntermCase to i8*)] }, align 8
@.str = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"' : \00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.3 = private unnamed_addr constant [33 x i8] c"This type of loop is not allowed\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"while\00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"do\00", align 1
@.str.7 = private unnamed_addr constant [25 x i8] c"Missing init declaration\00", align 1
@.str.8 = private unnamed_addr constant [4 x i8] c"for\00", align 1
@.str.9 = private unnamed_addr constant [25 x i8] c"Invalid init declaration\00", align 1
@.str.10 = private unnamed_addr constant [28 x i8] c"Invalid type for loop index\00", align 1
@.str.11 = private unnamed_addr constant [62 x i8] c"Loop index cannot be initialized with non-constant expression\00", align 1
@.str.12 = private unnamed_addr constant [18 x i8] c"Missing condition\00", align 1
@.str.13 = private unnamed_addr constant [18 x i8] c"Invalid condition\00", align 1
@.str.14 = private unnamed_addr constant [20 x i8] c"Expected loop index\00", align 1
@.str.15 = private unnamed_addr constant [28 x i8] c"Invalid relational operator\00", align 1
@.str.16 = private unnamed_addr constant [59 x i8] c"Loop index cannot be compared with non-constant expression\00", align 1
@.str.17 = private unnamed_addr constant [19 x i8] c"Missing expression\00", align 1
@.str.18 = private unnamed_addr constant [19 x i8] c"Invalid expression\00", align 1
@.str.21 = private unnamed_addr constant [17 x i8] c"Invalid operator\00", align 1
@.str.22 = private unnamed_addr constant [57 x i8] c"Loop index cannot be modified by non-constant expression\00", align 1
@.str.25 = private unnamed_addr constant [75 x i8] c"Loop index cannot be used as argument to a function out or inout parameter\00", align 1
@.str.26 = private unnamed_addr constant [72 x i8] c"Loop index cannot be statically assigned to within the body of the loop\00", align 1
@.str.29 = private unnamed_addr constant [41 x i8] c"Index expression must have integral type\00", align 1
@.str.30 = private unnamed_addr constant [34 x i8] c"Index expression must be constant\00", align 1
@.str.31 = private unnamed_addr constant [3 x i8] c"[]\00", align 1
@_ZTV16TIntermTraverser = linkonce_odr hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.TIntermTraverser*)* @_ZN16TIntermTraverserD2Ev to i8*), i8* bitcast (void (%class.TIntermTraverser*)* @_ZN16TIntermTraverserD0Ev to i8*), i8* bitcast (void (%class.TIntermTraverser*, %class.TIntermSymbol*)* @_ZN16TIntermTraverser11visitSymbolEP13TIntermSymbol to i8*), i8* bitcast (void (%class.TIntermTraverser*, %class.TIntermConstantUnion*)* @_ZN16TIntermTraverser18visitConstantUnionEP20TIntermConstantUnion to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermBinary*)* @_ZN16TIntermTraverser11visitBinaryE5VisitP13TIntermBinary to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermUnary*)* @_ZN16TIntermTraverser10visitUnaryE5VisitP12TIntermUnary to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermSelection*)* @_ZN16TIntermTraverser14visitSelectionE5VisitP16TIntermSelection to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermAggregate*)* @_ZN16TIntermTraverser14visitAggregateE5VisitP16TIntermAggregate to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermLoop*)* @_ZN16TIntermTraverser9visitLoopE5VisitP11TIntermLoop to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermBranch*)* @_ZN16TIntermTraverser11visitBranchE5VisitP13TIntermBranch to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermSwitch*)* @_ZN16TIntermTraverser11visitSwitchE5VisitP13TIntermSwitch to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermCase*)* @_ZN16TIntermTraverser9visitCaseE5VisitP11TIntermCase to i8*)] }, comdat, align 8
@.str.32 = private unnamed_addr constant [5 x i8] c"void\00", align 1
@.str.36 = private unnamed_addr constant [5 x i8] c"bool\00", align 1
@.str.37 = private unnamed_addr constant [10 x i8] c"sampler2D\00", align 1
@.str.38 = private unnamed_addr constant [12 x i8] c"samplerCube\00", align 1
@.str.39 = private unnamed_addr constant [14 x i8] c"sampler2DRect\00", align 1
@.str.40 = private unnamed_addr constant [19 x i8] c"samplerExternalOES\00", align 1
@.str.41 = private unnamed_addr constant [10 x i8] c"sampler3D\00", align 1
@.str.42 = private unnamed_addr constant [10 x i8] c"structure\00", align 1
@.str.45 = private unnamed_addr constant [13 x i8] c"unknown type\00", align 1
@_ZTVN12_GLOBAL__N_122ValidateConstIndexExprE = internal unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.TIntermTraverser*)* @_ZN16TIntermTraverserD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::ValidateConstIndexExpr"*)* @_ZN12_GLOBAL__N_122ValidateConstIndexExprD0Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::ValidateConstIndexExpr"*, %class.TIntermSymbol*)* @_ZN12_GLOBAL__N_122ValidateConstIndexExpr11visitSymbolEP13TIntermSymbol to i8*), i8* bitcast (void (%class.TIntermTraverser*, %class.TIntermConstantUnion*)* @_ZN16TIntermTraverser18visitConstantUnionEP20TIntermConstantUnion to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermBinary*)* @_ZN16TIntermTraverser11visitBinaryE5VisitP13TIntermBinary to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermUnary*)* @_ZN16TIntermTraverser10visitUnaryE5VisitP12TIntermUnary to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermSelection*)* @_ZN16TIntermTraverser14visitSelectionE5VisitP16TIntermSelection to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermAggregate*)* @_ZN16TIntermTraverser14visitAggregateE5VisitP16TIntermAggregate to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermLoop*)* @_ZN16TIntermTraverser9visitLoopE5VisitP11TIntermLoop to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermBranch*)* @_ZN16TIntermTraverser11visitBranchE5VisitP13TIntermBranch to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermSwitch*)* @_ZN16TIntermTraverser11visitSwitchE5VisitP13TIntermSwitch to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermCase*)* @_ZN16TIntermTraverser9visitCaseE5VisitP11TIntermCase to i8*)] }, align 8

@_ZN19ValidateLimitationsC1EjR13TInfoSinkBase = hidden unnamed_addr alias void (%class.ValidateLimitations*, i32, %class.TInfoSinkBase*), void (%class.ValidateLimitations*, i32, %class.TInfoSinkBase*)* @_ZN19ValidateLimitationsC2EjR13TInfoSinkBase

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN19ValidateLimitationsC2EjR13TInfoSinkBase(%class.ValidateLimitations* nocapture, i32, %class.TInfoSinkBase* dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.ValidateLimitations, %class.ValidateLimitations* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTV16TIntermTraverser, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.ValidateLimitations, %class.ValidateLimitations* %0, i64 0, i32 0, i32 1
  store i8 1, i8* %5, align 8
  %6 = getelementptr inbounds %class.ValidateLimitations, %class.ValidateLimitations* %0, i64 0, i32 0, i32 2
  %7 = getelementptr inbounds %class.ValidateLimitations, %class.ValidateLimitations* %0, i64 0, i32 0, i32 6, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %6, i8 0, i64 31, i1 false)
  %8 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  store %class.TPoolAllocator* %8, %class.TPoolAllocator** %7, align 8
  %9 = getelementptr inbounds %class.ValidateLimitations, %class.ValidateLimitations* %0, i64 0, i32 0, i32 7
  %10 = bitcast %"class.std::__1::vector.6"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTV19ValidateLimitations, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %11 = getelementptr inbounds %class.ValidateLimitations, %class.ValidateLimitations* %0, i64 0, i32 1
  store i32 %1, i32* %11, align 8
  %12 = getelementptr inbounds %class.ValidateLimitations, %class.ValidateLimitations* %0, i64 0, i32 2
  store %class.TInfoSinkBase* %2, %class.TInfoSinkBase** %12, align 8
  %13 = getelementptr inbounds %class.ValidateLimitations, %class.ValidateLimitations* %0, i64 0, i32 3
  store i32 0, i32* %13, align 8
  %14 = getelementptr inbounds %class.ValidateLimitations, %class.ValidateLimitations* %0, i64 0, i32 4
  %15 = getelementptr inbounds %class.ValidateLimitations, %class.ValidateLimitations* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %16 = bitcast %class.TVector.32* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #11
  %17 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  store %class.TPoolAllocator* %17, %class.TPoolAllocator** %15, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN19ValidateLimitations11visitBinaryE5VisitP13TIntermBinary(%class.ValidateLimitations*, i32, %class.TIntermBinary*) unnamed_addr #0 align 2 {
  %4 = bitcast %class.TIntermBinary* %2 to %class.TIntermOperator*
  %5 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %2, i64 0, i32 1
  %6 = load %class.TIntermTyped*, %class.TIntermTyped** %5, align 8
  %7 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %6, i64 0, i32 0
  %8 = tail call zeroext i1 @_ZN19ValidateLimitations17validateOperationEP15TIntermOperatorP11TIntermNode(%class.ValidateLimitations* %0, %class.TIntermOperator* %4, %class.TIntermNode* %7) #12
  %9 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %2, i64 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, -2
  %12 = icmp eq i32 %11, 46
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  %14 = tail call zeroext i1 @_ZN19ValidateLimitations16validateIndexingEP13TIntermBinary(%class.ValidateLimitations* %0, %class.TIntermBinary* %2) #12
  br label %15

15:                                               ; preds = %3, %13
  ret i1 true
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN19ValidateLimitations17validateOperationEP15TIntermOperatorP11TIntermNode(%class.ValidateLimitations* nocapture, %class.TIntermOperator*, %class.TIntermNode*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.ValidateLimitations, %class.ValidateLimitations* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %5 = load %struct.TLoopInfo*, %struct.TLoopInfo** %4, align 8
  %6 = getelementptr inbounds %class.ValidateLimitations, %class.ValidateLimitations* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %7 = load %struct.TLoopInfo*, %struct.TLoopInfo** %6, align 8
  %8 = icmp eq %struct.TLoopInfo* %5, %7
  br i1 %8, label %52, label %9

9:                                                ; preds = %3
  %10 = tail call zeroext i1 @_ZNK15TIntermOperator13modifiesStateEv(%class.TIntermOperator* %1) #10
  br i1 %10, label %11, label %52

11:                                               ; preds = %9
  %12 = bitcast %class.TIntermNode* %2 to %class.TIntermSymbol* (%class.TIntermNode*)***
  %13 = load %class.TIntermSymbol* (%class.TIntermNode*)**, %class.TIntermSymbol* (%class.TIntermNode*)*** %12, align 8
  %14 = getelementptr inbounds %class.TIntermSymbol* (%class.TIntermNode*)*, %class.TIntermSymbol* (%class.TIntermNode*)** %13, i64 7
  %15 = load %class.TIntermSymbol* (%class.TIntermNode*)*, %class.TIntermSymbol* (%class.TIntermNode*)** %14, align 8
  %16 = tail call %class.TIntermSymbol* %15(%class.TIntermNode* %2) #10
  %17 = icmp eq %class.TIntermSymbol* %16, null
  br i1 %17, label %52, label %18

18:                                               ; preds = %11
  %19 = load %struct.TLoopInfo*, %struct.TLoopInfo** %4, align 8
  %20 = load %struct.TLoopInfo*, %struct.TLoopInfo** %6, align 8
  %21 = icmp eq %struct.TLoopInfo* %19, %20
  br i1 %21, label %52, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %class.TIntermSymbol, %class.TIntermSymbol* %16, i64 0, i32 1
  %24 = load i32, i32* %23, align 8
  br label %27

25:                                               ; preds = %27
  %26 = icmp eq %struct.TLoopInfo* %32, %20
  br i1 %26, label %52, label %27

27:                                               ; preds = %25, %22
  %28 = phi %struct.TLoopInfo* [ %19, %22 ], [ %32, %25 ]
  %29 = getelementptr inbounds %struct.TLoopInfo, %struct.TLoopInfo* %28, i64 0, i32 0, i32 0
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, %24
  %32 = getelementptr inbounds %struct.TLoopInfo, %struct.TLoopInfo* %28, i64 1
  br i1 %31, label %33, label %25

33:                                               ; preds = %27
  %34 = getelementptr inbounds %class.TIntermOperator, %class.TIntermOperator* %1, i64 0, i32 0, i32 0, i32 1
  %35 = bitcast %struct.TSourceLoc* %34 to i64*
  %36 = load i64, i64* %35, align 4
  %37 = getelementptr inbounds %class.TIntermOperator, %class.TIntermOperator* %1, i64 0, i32 0, i32 0, i32 1, i32 2
  %38 = bitcast i32* %37 to i64*
  %39 = load i64, i64* %38, align 4
  %40 = getelementptr inbounds %class.TIntermSymbol, %class.TIntermSymbol* %16, i64 0, i32 2
  %41 = bitcast %"class.std::__1::basic_string"* %40 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %33
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  br label %50

48:                                               ; preds = %33
  %49 = bitcast %"class.std::__1::basic_string"* %40 to i8*
  br label %50

50:                                               ; preds = %45, %48
  %51 = phi i8* [ %47, %45 ], [ %49, %48 ]
  tail call void @_ZN19ValidateLimitations5errorE10TSourceLocPKcS2_(%class.ValidateLimitations* %0, i64 %36, i64 %39, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.26, i64 0, i64 0), i8* %51) #12
  br label %52

52:                                               ; preds = %25, %3, %18, %50, %11, %9
  ret i1 true
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN19ValidateLimitations16validateIndexingEP13TIntermBinary(%class.ValidateLimitations*, %class.TIntermBinary* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %1, i64 0, i32 2
  %5 = load %class.TIntermTyped*, %class.TIntermTyped** %4, align 8
  %6 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %5, i64 0, i32 1
  %7 = tail call zeroext i1 @_ZNK5TType11isScalarIntEv(%class.TType* %6) #10
  br i1 %7, label %23, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %5, i64 0, i32 0, i32 1
  %10 = bitcast %struct.TSourceLoc* %9 to i64*
  %11 = load i64, i64* %10, align 4
  %12 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %5, i64 0, i32 0, i32 1, i32 2
  %13 = bitcast i32* %12 to i64*
  %14 = load i64, i64* %13, align 4
  %15 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #11
  call void @_ZNK5TType17getCompleteStringEv(%"class.std::__1::basic_string"* nonnull sret %3, %class.TType* %6) #10
  %16 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = select i1 %19, i8* %21, i8* %15
  call void @_ZN19ValidateLimitations5errorE10TSourceLocPKcS2_(%class.ValidateLimitations* %0, i64 %11, i64 %14, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.29, i64 0, i64 0), i8* %22) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #11
  br label %23

23:                                               ; preds = %8, %2
  %24 = phi i8 [ 1, %2 ], [ 0, %8 ]
  %25 = getelementptr inbounds %class.ValidateLimitations, %class.ValidateLimitations* %0, i64 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, 35633
  br i1 %27, label %28, label %34

28:                                               ; preds = %23
  %29 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %1, i64 0, i32 1
  %30 = load %class.TIntermTyped*, %class.TIntermTyped** %29, align 8
  %31 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %30, i64 0, i32 1, i32 2
  %32 = load i8, i8* %31, align 2
  %33 = icmp eq i8 %32, 8
  br i1 %33, label %44, label %34

34:                                               ; preds = %23, %28
  %35 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %5, i64 0, i32 0
  %36 = call zeroext i1 @_ZN19ValidateLimitations16isConstIndexExprEP11TIntermNode(%class.ValidateLimitations* %0, %class.TIntermNode* %35) #12
  br i1 %36, label %44, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %5, i64 0, i32 0, i32 1
  %39 = bitcast %struct.TSourceLoc* %38 to i64*
  %40 = load i64, i64* %39, align 4
  %41 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %5, i64 0, i32 0, i32 1, i32 2
  %42 = bitcast i32* %41 to i64*
  %43 = load i64, i64* %42, align 4
  call void @_ZN19ValidateLimitations5errorE10TSourceLocPKcS2_(%class.ValidateLimitations* %0, i64 %40, i64 %43, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.31, i64 0, i64 0)) #12
  br label %44

44:                                               ; preds = %37, %34, %28
  %45 = phi i8 [ %24, %28 ], [ %24, %34 ], [ 0, %37 ]
  %46 = and i8 %45, 1
  %47 = icmp ne i8 %46, 0
  ret i1 %47
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN19ValidateLimitations10visitUnaryE5VisitP12TIntermUnary(%class.ValidateLimitations* nocapture, i32, %class.TIntermUnary*) unnamed_addr #0 align 2 {
  %4 = bitcast %class.TIntermUnary* %2 to %class.TIntermOperator*
  %5 = getelementptr inbounds %class.TIntermUnary, %class.TIntermUnary* %2, i64 0, i32 1
  %6 = load %class.TIntermTyped*, %class.TIntermTyped** %5, align 8
  %7 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %6, i64 0, i32 0
  %8 = tail call zeroext i1 @_ZN19ValidateLimitations17validateOperationEP15TIntermOperatorP11TIntermNode(%class.ValidateLimitations* %0, %class.TIntermOperator* %4, %class.TIntermNode* %7) #12
  ret i1 true
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN19ValidateLimitations14visitAggregateE5VisitP16TIntermAggregate(%class.ValidateLimitations* nocapture, i32, %class.TIntermAggregate*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %2, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 2
  br i1 %6, label %7, label %9

7:                                                ; preds = %3
  %8 = tail call zeroext i1 @_ZN19ValidateLimitations20validateFunctionCallEP16TIntermAggregate(%class.ValidateLimitations* %0, %class.TIntermAggregate* %2) #12
  br label %9

9:                                                ; preds = %3, %7
  ret i1 true
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN19ValidateLimitations20validateFunctionCallEP16TIntermAggregate(%class.ValidateLimitations* nocapture, %class.TIntermAggregate*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.39", align 8
  %4 = getelementptr inbounds %class.ValidateLimitations, %class.ValidateLimitations* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %5 = load %struct.TLoopInfo*, %struct.TLoopInfo** %4, align 8
  %6 = getelementptr inbounds %class.ValidateLimitations, %class.ValidateLimitations* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %7 = load %struct.TLoopInfo*, %struct.TLoopInfo** %6, align 8
  %8 = icmp eq %struct.TLoopInfo* %5, %7
  br i1 %8, label %205, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.std::__1::vector.39"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %3, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %3, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 24, i1 false) #11
  %14 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %1, i64 0, i32 2, i32 0
  %15 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %1, i64 0, i32 2, i32 0, i32 0, i32 1
  %16 = bitcast %class.TIntermNode*** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.std::__1::vector"* %14 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %17, %19
  br i1 %20, label %203, label %21

21:                                               ; preds = %9
  %22 = bitcast i32** %12 to i64*
  %23 = bitcast %"class.std::__1::vector.39"* %3 to i64*
  %24 = bitcast i32** %13 to i64*
  br label %29

25:                                               ; preds = %116
  %26 = load i32*, i32** %11, align 8
  %27 = bitcast i32* %26 to i8*
  %28 = icmp eq i32* %26, %119
  br i1 %28, label %197, label %128

29:                                               ; preds = %21, %116
  %30 = phi i32* [ null, %21 ], [ %117, %116 ]
  %31 = phi i32* [ null, %21 ], [ %118, %116 ]
  %32 = phi i32* [ null, %21 ], [ %119, %116 ]
  %33 = phi i64 [ 0, %21 ], [ %120, %116 ]
  %34 = phi i32* [ null, %21 ], [ %121, %116 ]
  %35 = phi i64 [ %19, %21 ], [ %124, %116 ]
  %36 = phi i64 [ 0, %21 ], [ %122, %116 ]
  %37 = inttoptr i64 %35 to %class.TIntermNode**
  %38 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %37, i64 %36
  %39 = load %class.TIntermNode*, %class.TIntermNode** %38, align 8
  %40 = bitcast %class.TIntermNode* %39 to %class.TIntermSymbol* (%class.TIntermNode*)***
  %41 = load %class.TIntermSymbol* (%class.TIntermNode*)**, %class.TIntermSymbol* (%class.TIntermNode*)*** %40, align 8
  %42 = getelementptr inbounds %class.TIntermSymbol* (%class.TIntermNode*)*, %class.TIntermSymbol* (%class.TIntermNode*)** %41, i64 7
  %43 = load %class.TIntermSymbol* (%class.TIntermNode*)*, %class.TIntermSymbol* (%class.TIntermNode*)** %42, align 8
  %44 = tail call %class.TIntermSymbol* %43(%class.TIntermNode* %39) #10
  %45 = icmp eq %class.TIntermSymbol* %44, null
  br i1 %45, label %116, label %46

46:                                               ; preds = %29
  %47 = load %struct.TLoopInfo*, %struct.TLoopInfo** %4, align 8
  %48 = load %struct.TLoopInfo*, %struct.TLoopInfo** %6, align 8
  %49 = icmp eq %struct.TLoopInfo* %47, %48
  br i1 %49, label %116, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %class.TIntermSymbol, %class.TIntermSymbol* %44, i64 0, i32 1
  %52 = load i32, i32* %51, align 8
  br label %55

53:                                               ; preds = %55
  %54 = icmp eq %struct.TLoopInfo* %60, %48
  br i1 %54, label %116, label %55

55:                                               ; preds = %53, %50
  %56 = phi %struct.TLoopInfo* [ %47, %50 ], [ %60, %53 ]
  %57 = getelementptr inbounds %struct.TLoopInfo, %struct.TLoopInfo* %56, i64 0, i32 0, i32 0
  %58 = load i32, i32* %57, align 8
  %59 = icmp eq i32 %58, %52
  %60 = getelementptr inbounds %struct.TLoopInfo, %struct.TLoopInfo* %56, i64 1
  br i1 %59, label %61, label %53

61:                                               ; preds = %55
  %62 = trunc i64 %36 to i32
  %63 = load i32*, i32** %13, align 8
  %64 = icmp ult i32* %34, %63
  %65 = ptrtoint i32* %63 to i64
  br i1 %64, label %66, label %69

66:                                               ; preds = %61
  store i32 %62, i32* %34, align 4
  %67 = getelementptr inbounds i32, i32* %34, i64 1
  %68 = ptrtoint i32* %67 to i64
  store i64 %68, i64* %22, align 8
  br label %116

69:                                               ; preds = %61
  %70 = ptrtoint i32* %34 to i64
  %71 = load i64, i64* %23, align 8
  %72 = sub i64 %70, %71
  %73 = ashr exact i64 %72, 2
  %74 = add nsw i64 %73, 1
  %75 = icmp ugt i64 %74, 4611686018427387903
  br i1 %75, label %76, label %78

76:                                               ; preds = %69
  %77 = bitcast %"class.std::__1::vector.39"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %77) #13
  unreachable

78:                                               ; preds = %69
  %79 = sub i64 %65, %71
  %80 = ashr exact i64 %79, 2
  %81 = icmp ult i64 %80, 2305843009213693951
  br i1 %81, label %82, label %90

82:                                               ; preds = %78
  %83 = ashr exact i64 %79, 1
  %84 = icmp ult i64 %83, %74
  %85 = select i1 %84, i64 %74, i64 %83
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %95, label %87

87:                                               ; preds = %82
  %88 = icmp ugt i64 %85, 4611686018427387903
  br i1 %88, label %89, label %90

89:                                               ; preds = %87
  tail call void @abort() #13
  unreachable

90:                                               ; preds = %87, %78
  %91 = phi i64 [ %85, %87 ], [ 4611686018427387903, %78 ]
  %92 = shl i64 %91, 2
  %93 = tail call i8* @_Znwm(i64 %92) #14
  %94 = bitcast i8* %93 to i32*
  br label %95

95:                                               ; preds = %90, %82
  %96 = phi i64 [ %91, %90 ], [ 0, %82 ]
  %97 = phi i32* [ %94, %90 ], [ null, %82 ]
  %98 = getelementptr inbounds i32, i32* %97, i64 %73
  %99 = getelementptr inbounds i32, i32* %97, i64 %96
  %100 = ptrtoint i32* %99 to i64
  store i32 %62, i32* %98, align 4
  %101 = getelementptr inbounds i32, i32* %98, i64 1
  %102 = ptrtoint i32* %101 to i64
  %103 = sub i64 %33, %71
  %104 = ashr exact i64 %103, 2
  %105 = sub nsw i64 0, %104
  %106 = getelementptr inbounds i32, i32* %98, i64 %105
  %107 = ptrtoint i32* %106 to i64
  %108 = icmp sgt i64 %103, 0
  br i1 %108, label %109, label %112

109:                                              ; preds = %95
  %110 = bitcast i32* %106 to i8*
  %111 = inttoptr i64 %71 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %110, i8* align 4 %111, i64 %103, i1 false) #11
  br label %112

112:                                              ; preds = %109, %95
  store i64 %107, i64* %23, align 8
  store i64 %102, i64* %22, align 8
  store i64 %100, i64* %24, align 8
  %113 = icmp eq i64 %71, 0
  br i1 %113, label %116, label %114

114:                                              ; preds = %112
  %115 = inttoptr i64 %71 to i8*
  tail call void @_ZdlPv(i8* %115) #14
  br label %116

116:                                              ; preds = %53, %46, %114, %112, %66, %29
  %117 = phi i32* [ %30, %46 ], [ %101, %114 ], [ %101, %112 ], [ %67, %66 ], [ %30, %29 ], [ %30, %53 ]
  %118 = phi i32* [ %31, %46 ], [ %101, %114 ], [ %101, %112 ], [ %67, %66 ], [ %31, %29 ], [ %31, %53 ]
  %119 = phi i32* [ %32, %46 ], [ %101, %114 ], [ %101, %112 ], [ %67, %66 ], [ %32, %29 ], [ %32, %53 ]
  %120 = phi i64 [ %33, %46 ], [ %102, %114 ], [ %102, %112 ], [ %68, %66 ], [ %33, %29 ], [ %33, %53 ]
  %121 = phi i32* [ %34, %46 ], [ %101, %114 ], [ %101, %112 ], [ %67, %66 ], [ %34, %29 ], [ %34, %53 ]
  %122 = add nuw i64 %36, 1
  %123 = load i64, i64* %16, align 8
  %124 = load i64, i64* %18, align 8
  %125 = sub i64 %123, %124
  %126 = ashr exact i64 %125, 3
  %127 = icmp ult i64 %122, %126
  br i1 %127, label %29, label %25

128:                                              ; preds = %25
  %129 = tail call %class.TParseContext* @_Z21GetGlobalParseContextv() #10
  %130 = getelementptr inbounds %class.TParseContext, %class.TParseContext* %129, i64 0, i32 1
  %131 = load %class.TSymbolTable*, %class.TSymbolTable** %130, align 8
  %132 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %1, i64 0, i32 3
  %133 = tail call %class.TParseContext* @_Z21GetGlobalParseContextv() #10
  %134 = getelementptr inbounds %class.TParseContext, %class.TParseContext* %133, i64 0, i32 10
  %135 = load i32, i32* %134, align 8
  %136 = tail call %class.TSymbol* @_ZNK12TSymbolTable4findERKNSt3__112basic_stringIcNS0_11char_traitsIcEE14pool_allocatorIcEEEiPbS9_(%class.TSymbolTable* %131, %"class.std::__1::basic_string"* dereferenceable(32) %132, i32 %135, i8* null, i8* null) #10
  %137 = icmp eq %class.TSymbol* %136, null
  br i1 %137, label %144, label %138

138:                                              ; preds = %128
  %139 = bitcast %class.TSymbol* %136 to i1 (%class.TSymbol*)***
  %140 = load i1 (%class.TSymbol*)**, i1 (%class.TSymbol*)*** %139, align 8
  %141 = getelementptr inbounds i1 (%class.TSymbol*)*, i1 (%class.TSymbol*)** %140, i64 3
  %142 = load i1 (%class.TSymbol*)*, i1 (%class.TSymbol*)** %141, align 8
  %143 = tail call zeroext i1 %142(%class.TSymbol* nonnull %136) #10
  br label %144

144:                                              ; preds = %138, %128
  %145 = icmp eq i32* %26, %118
  br i1 %145, label %150, label %146

146:                                              ; preds = %144
  %147 = getelementptr inbounds %class.TSymbol, %class.TSymbol* %136, i64 1
  %148 = bitcast %class.TSymbol* %147 to %struct.TParameter**
  %149 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %14, i64 0, i32 0, i32 0
  br label %154

150:                                              ; preds = %193, %144
  %151 = phi i8 [ 1, %144 ], [ %194, %193 ]
  %152 = and i8 %151, 1
  %153 = icmp ne i8 %152, 0
  br label %197

154:                                              ; preds = %146, %193
  %155 = phi i8 [ 1, %146 ], [ %194, %193 ]
  %156 = phi i32* [ %26, %146 ], [ %195, %193 ]
  %157 = load i32, i32* %156, align 4
  %158 = sext i32 %157 to i64
  %159 = load %struct.TParameter*, %struct.TParameter** %148, align 8
  %160 = getelementptr inbounds %struct.TParameter, %struct.TParameter* %159, i64 %158, i32 1
  %161 = load %class.TType*, %class.TType** %160, align 8
  %162 = getelementptr inbounds %class.TType, %class.TType* %161, i64 0, i32 2
  %163 = load i8, i8* %162, align 2
  %164 = and i8 %163, -2
  %165 = icmp eq i8 %164, 16
  br i1 %165, label %166, label %193

166:                                              ; preds = %154
  %167 = load %class.TIntermNode**, %class.TIntermNode*** %149, align 8
  %168 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %167, i64 %158
  %169 = load %class.TIntermNode*, %class.TIntermNode** %168, align 8
  %170 = getelementptr inbounds %class.TIntermNode, %class.TIntermNode* %169, i64 0, i32 1
  %171 = bitcast %struct.TSourceLoc* %170 to i64*
  %172 = load i64, i64* %171, align 4
  %173 = getelementptr inbounds %class.TIntermNode, %class.TIntermNode* %169, i64 0, i32 1, i32 2
  %174 = bitcast i32* %173 to i64*
  %175 = load i64, i64* %174, align 4
  %176 = bitcast %class.TIntermNode* %169 to %class.TIntermSymbol* (%class.TIntermNode*)***
  %177 = load %class.TIntermSymbol* (%class.TIntermNode*)**, %class.TIntermSymbol* (%class.TIntermNode*)*** %176, align 8
  %178 = getelementptr inbounds %class.TIntermSymbol* (%class.TIntermNode*)*, %class.TIntermSymbol* (%class.TIntermNode*)** %177, i64 7
  %179 = load %class.TIntermSymbol* (%class.TIntermNode*)*, %class.TIntermSymbol* (%class.TIntermNode*)** %178, align 8
  %180 = tail call %class.TIntermSymbol* %179(%class.TIntermNode* %169) #10
  %181 = getelementptr inbounds %class.TIntermSymbol, %class.TIntermSymbol* %180, i64 0, i32 2
  %182 = bitcast %"class.std::__1::basic_string"* %181 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %183 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %182, i64 0, i32 1, i32 0
  %184 = load i8, i8* %183, align 1
  %185 = icmp slt i8 %184, 0
  br i1 %185, label %186, label %189

186:                                              ; preds = %166
  %187 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %181, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %188 = load i8*, i8** %187, align 8
  br label %191

189:                                              ; preds = %166
  %190 = bitcast %"class.std::__1::basic_string"* %181 to i8*
  br label %191

191:                                              ; preds = %186, %189
  %192 = phi i8* [ %188, %186 ], [ %190, %189 ]
  tail call void @_ZN19ValidateLimitations5errorE10TSourceLocPKcS2_(%class.ValidateLimitations* %0, i64 %172, i64 %175, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.25, i64 0, i64 0), i8* %192) #12
  br label %193

193:                                              ; preds = %154, %191
  %194 = phi i8 [ 0, %191 ], [ %155, %154 ]
  %195 = getelementptr inbounds i32, i32* %156, i64 1
  %196 = icmp eq i32* %195, %117
  br i1 %196, label %150, label %154

197:                                              ; preds = %25, %150
  %198 = phi i1 [ true, %25 ], [ %153, %150 ]
  %199 = icmp eq i32* %26, null
  br i1 %199, label %203, label %200

200:                                              ; preds = %197
  %201 = ptrtoint i32* %26 to i64
  %202 = bitcast i32** %12 to i64*
  store i64 %201, i64* %202, align 8
  tail call void @_ZdlPv(i8* %27) #14
  br label %203

203:                                              ; preds = %9, %197, %200
  %204 = phi i1 [ %198, %197 ], [ %198, %200 ], [ true, %9 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #11
  br label %205

205:                                              ; preds = %2, %203
  %206 = phi i1 [ %204, %203 ], [ true, %2 ]
  ret i1 %206
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN19ValidateLimitations9visitLoopE5VisitP11TIntermLoop(%class.ValidateLimitations*, i32, %class.TIntermLoop*) unnamed_addr #0 align 2 {
  %4 = alloca %struct.TLoopInfo, align 8
  %5 = tail call zeroext i1 @_ZN19ValidateLimitations16validateLoopTypeEP11TIntermLoop(%class.ValidateLimitations* %0, %class.TIntermLoop* %2) #12
  br i1 %5, label %6, label %88

6:                                                ; preds = %3
  %7 = bitcast %struct.TLoopInfo* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #11
  %8 = bitcast %struct.TLoopInfo* %4 to i64*
  store i64 0, i64* %8, align 8
  %9 = getelementptr inbounds %struct.TLoopInfo, %struct.TLoopInfo* %4, i64 0, i32 1
  store %class.TIntermLoop* %2, %class.TIntermLoop** %9, align 8
  %10 = call zeroext i1 @_ZN19ValidateLimitations21validateForLoopHeaderEP11TIntermLoopP9TLoopInfo(%class.ValidateLimitations* %0, %class.TIntermLoop* %2, %struct.TLoopInfo* nonnull %4) #12
  br i1 %10, label %11, label %87

11:                                               ; preds = %6
  %12 = getelementptr inbounds %class.TIntermLoop, %class.TIntermLoop* %2, i64 0, i32 6
  %13 = load %class.TIntermNode*, %class.TIntermNode** %12, align 8
  %14 = icmp eq %class.TIntermNode* %13, null
  br i1 %14, label %87, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %class.ValidateLimitations, %class.ValidateLimitations* %0, i64 0, i32 4, i32 0
  %17 = getelementptr inbounds %class.ValidateLimitations, %class.ValidateLimitations* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %18 = load %struct.TLoopInfo*, %struct.TLoopInfo** %17, align 8
  %19 = getelementptr inbounds %class.ValidateLimitations, %class.ValidateLimitations* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 0, i32 0
  %20 = load %struct.TLoopInfo*, %struct.TLoopInfo** %19, align 8
  %21 = icmp eq %struct.TLoopInfo* %18, %20
  %22 = ptrtoint %struct.TLoopInfo* %20 to i64
  br i1 %21, label %28, label %23

23:                                               ; preds = %15
  %24 = bitcast %struct.TLoopInfo* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* nonnull align 8 %7, i64 16, i1 false) #11
  %25 = getelementptr inbounds %struct.TLoopInfo, %struct.TLoopInfo* %18, i64 1
  %26 = ptrtoint %struct.TLoopInfo* %25 to i64
  %27 = bitcast %struct.TLoopInfo** %17 to i64*
  store i64 %26, i64* %27, align 8
  br label %80

28:                                               ; preds = %15
  %29 = ptrtoint %struct.TLoopInfo* %18 to i64
  %30 = bitcast %struct.TLoopInfo** %17 to i64*
  %31 = bitcast %"class.std::__1::vector.33"* %16 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %29, %32
  %34 = ashr exact i64 %33, 4
  %35 = add nsw i64 %34, 1
  %36 = icmp ugt i64 %35, 1152921504606846975
  br i1 %36, label %37, label %39

37:                                               ; preds = %28
  %38 = bitcast %"class.std::__1::vector.33"* %16 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %38) #13
  unreachable

39:                                               ; preds = %28
  %40 = bitcast %struct.TLoopInfo** %19 to i64*
  %41 = sub i64 %22, %32
  %42 = ashr exact i64 %41, 4
  %43 = icmp ult i64 %42, 576460752303423487
  br i1 %43, label %44, label %49

44:                                               ; preds = %39
  %45 = ashr exact i64 %41, 3
  %46 = icmp ult i64 %45, %35
  %47 = select i1 %46, i64 %35, i64 %45
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %56, label %49

49:                                               ; preds = %44, %39
  %50 = phi i64 [ %47, %44 ], [ 1152921504606846975, %39 ]
  %51 = getelementptr inbounds %class.ValidateLimitations, %class.ValidateLimitations* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %52 = load %class.TPoolAllocator*, %class.TPoolAllocator** %51, align 8
  %53 = shl i64 %50, 4
  %54 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %52, i64 %53) #10
  %55 = bitcast i8* %54 to %struct.TLoopInfo*
  br label %56

56:                                               ; preds = %49, %44
  %57 = phi i64 [ %50, %49 ], [ 0, %44 ]
  %58 = phi %struct.TLoopInfo* [ %55, %49 ], [ null, %44 ]
  %59 = getelementptr inbounds %struct.TLoopInfo, %struct.TLoopInfo* %58, i64 %34
  %60 = getelementptr inbounds %struct.TLoopInfo, %struct.TLoopInfo* %58, i64 %57
  %61 = ptrtoint %struct.TLoopInfo* %60 to i64
  %62 = bitcast %struct.TLoopInfo* %59 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* nonnull align 8 %7, i64 16, i1 false) #11
  %63 = getelementptr inbounds %struct.TLoopInfo, %struct.TLoopInfo* %59, i64 1
  %64 = ptrtoint %struct.TLoopInfo* %63 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %16, i64 0, i32 0, i32 0
  %66 = load %struct.TLoopInfo*, %struct.TLoopInfo** %65, align 8
  %67 = load %struct.TLoopInfo*, %struct.TLoopInfo** %17, align 8
  %68 = icmp eq %struct.TLoopInfo* %67, %66
  br i1 %68, label %77, label %69

69:                                               ; preds = %56, %69
  %70 = phi %struct.TLoopInfo* [ %72, %69 ], [ %59, %56 ]
  %71 = phi %struct.TLoopInfo* [ %73, %69 ], [ %67, %56 ]
  %72 = getelementptr inbounds %struct.TLoopInfo, %struct.TLoopInfo* %70, i64 -1
  %73 = getelementptr inbounds %struct.TLoopInfo, %struct.TLoopInfo* %71, i64 -1
  %74 = bitcast %struct.TLoopInfo* %72 to i8*
  %75 = bitcast %struct.TLoopInfo* %73 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* align 8 %75, i64 16, i1 false) #11
  %76 = icmp eq %struct.TLoopInfo* %73, %66
  br i1 %76, label %77, label %69

77:                                               ; preds = %69, %56
  %78 = phi %struct.TLoopInfo* [ %59, %56 ], [ %72, %69 ]
  %79 = ptrtoint %struct.TLoopInfo* %78 to i64
  store i64 %79, i64* %31, align 8
  store i64 %64, i64* %30, align 8
  store i64 %61, i64* %40, align 8
  br label %80

80:                                               ; preds = %23, %77
  %81 = getelementptr inbounds %class.ValidateLimitations, %class.ValidateLimitations* %0, i64 0, i32 0
  %82 = bitcast %class.TIntermNode* %13 to void (%class.TIntermNode*, %class.TIntermTraverser*)***
  %83 = load void (%class.TIntermNode*, %class.TIntermTraverser*)**, void (%class.TIntermNode*, %class.TIntermTraverser*)*** %82, align 8
  %84 = load void (%class.TIntermNode*, %class.TIntermTraverser*)*, void (%class.TIntermNode*, %class.TIntermTraverser*)** %83, align 8
  tail call void %84(%class.TIntermNode* nonnull %13, %class.TIntermTraverser* %81) #10
  %85 = load %struct.TLoopInfo*, %struct.TLoopInfo** %17, align 8
  %86 = getelementptr inbounds %struct.TLoopInfo, %struct.TLoopInfo* %85, i64 -1
  store %struct.TLoopInfo* %86, %struct.TLoopInfo** %17, align 8
  br label %87

87:                                               ; preds = %80, %11, %6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #11
  br label %88

88:                                               ; preds = %3, %87
  ret i1 false
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN19ValidateLimitations16validateLoopTypeEP11TIntermLoop(%class.ValidateLimitations* nocapture, %class.TIntermLoop* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.TIntermLoop, %class.TIntermLoop* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %15, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.TIntermLoop, %class.TIntermLoop* %1, i64 0, i32 0, i32 1
  %8 = bitcast %struct.TSourceLoc* %7 to i64*
  %9 = load i64, i64* %8, align 4
  %10 = getelementptr inbounds %class.TIntermLoop, %class.TIntermLoop* %1, i64 0, i32 0, i32 1, i32 2
  %11 = bitcast i32* %10 to i64*
  %12 = load i64, i64* %11, align 4
  %13 = icmp eq i32 %4, 1
  %14 = select i1 %13, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0)
  tail call void @_ZN19ValidateLimitations5errorE10TSourceLocPKcS2_(%class.ValidateLimitations* %0, i64 %9, i64 %12, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3, i64 0, i64 0), i8* %14) #12
  br label %15

15:                                               ; preds = %2, %6
  %16 = phi i1 [ false, %6 ], [ true, %2 ]
  ret i1 %16
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN19ValidateLimitations21validateForLoopHeaderEP11TIntermLoopP9TLoopInfo(%class.ValidateLimitations* nocapture, %class.TIntermLoop* nocapture readonly, %struct.TLoopInfo* nocapture) local_unnamed_addr #0 align 2 {
  %4 = tail call zeroext i1 @_ZN19ValidateLimitations19validateForLoopInitEP11TIntermLoopP9TLoopInfo(%class.ValidateLimitations* %0, %class.TIntermLoop* %1, %struct.TLoopInfo* %2) #12
  br i1 %4, label %5, label %9

5:                                                ; preds = %3
  %6 = tail call zeroext i1 @_ZN19ValidateLimitations19validateForLoopCondEP11TIntermLoopP9TLoopInfo(%class.ValidateLimitations* %0, %class.TIntermLoop* %1, %struct.TLoopInfo* %2) #12
  br i1 %6, label %7, label %9

7:                                                ; preds = %5
  %8 = tail call zeroext i1 @_ZN19ValidateLimitations19validateForLoopExprEP11TIntermLoopP9TLoopInfo(%class.ValidateLimitations* %0, %class.TIntermLoop* %1, %struct.TLoopInfo* %2) #12
  br label %9

9:                                                ; preds = %7, %5, %3
  %10 = phi i1 [ false, %3 ], [ false, %5 ], [ %8, %7 ]
  ret i1 %10
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN19ValidateLimitations5errorE10TSourceLocPKcS2_(%class.ValidateLimitations* nocapture, i64, i64, i8*, i8*) local_unnamed_addr #0 align 2 {
  %6 = alloca { i64, i64 }, align 8
  %7 = bitcast { i64, i64 }* %6 to %struct.TSourceLoc*
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  store i64 %1, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  store i64 %2, i64* %9, align 8
  %10 = getelementptr inbounds %class.ValidateLimitations, %class.ValidateLimitations* %0, i64 0, i32 2
  %11 = load %class.TInfoSinkBase*, %class.TInfoSinkBase** %10, align 8
  tail call void @_ZN13TInfoSinkBase6prefixE11TPrefixType(%class.TInfoSinkBase* %11, i32 3) #10
  %12 = load %class.TInfoSinkBase*, %class.TInfoSinkBase** %10, align 8
  call void @_ZN13TInfoSinkBase8locationERK10TSourceLoc(%class.TInfoSinkBase* %12, %struct.TSourceLoc* nonnull dereferenceable(16) %7) #10
  %13 = load %class.TInfoSinkBase*, %class.TInfoSinkBase** %10, align 8
  %14 = getelementptr inbounds %class.TInfoSinkBase, %class.TInfoSinkBase* %13, i64 0, i32 0
  %15 = call dereferenceable(24) %"class.std::__1::basic_string.24"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.24"* %14, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0)) #10
  %16 = call dereferenceable(24) %"class.std::__1::basic_string.24"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.24"* %14, i8* %4) #10
  %17 = call dereferenceable(24) %"class.std::__1::basic_string.24"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.24"* %14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #10
  %18 = call dereferenceable(24) %"class.std::__1::basic_string.24"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.24"* %14, i8* %3) #10
  %19 = call dereferenceable(24) %"class.std::__1::basic_string.24"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.24"* %14, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #10
  %20 = getelementptr inbounds %class.ValidateLimitations, %class.ValidateLimitations* %0, i64 0, i32 3
  %21 = load i32, i32* %20, align 8
  %22 = add nsw i32 %21, 1
  store i32 %22, i32* %20, align 8
  ret void
}

; Function Attrs: optsize
declare void @_ZN13TInfoSinkBase6prefixE11TPrefixType(%class.TInfoSinkBase*, i32) local_unnamed_addr #2

; Function Attrs: optsize
declare void @_ZN13TInfoSinkBase8locationERK10TSourceLoc(%class.TInfoSinkBase*, %struct.TSourceLoc* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZNK19ValidateLimitations14withinLoopBodyEv(%class.ValidateLimitations* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %class.ValidateLimitations, %class.ValidateLimitations* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %3 = load %struct.TLoopInfo*, %struct.TLoopInfo** %2, align 8
  %4 = getelementptr inbounds %class.ValidateLimitations, %class.ValidateLimitations* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %5 = load %struct.TLoopInfo*, %struct.TLoopInfo** %4, align 8
  %6 = icmp ne %struct.TLoopInfo* %3, %5
  ret i1 %6
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZNK19ValidateLimitations11isLoopIndexEPK13TIntermSymbol(%class.ValidateLimitations* nocapture readonly, %class.TIntermSymbol* nocapture readonly) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %class.ValidateLimitations, %class.ValidateLimitations* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %struct.TLoopInfo*, %struct.TLoopInfo** %3, align 8
  %5 = getelementptr inbounds %class.ValidateLimitations, %class.ValidateLimitations* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %6 = load %struct.TLoopInfo*, %struct.TLoopInfo** %5, align 8
  %7 = icmp eq %struct.TLoopInfo* %4, %6
  br i1 %7, label %19, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.TIntermSymbol, %class.TIntermSymbol* %1, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  br label %13

11:                                               ; preds = %13
  %12 = icmp eq %struct.TLoopInfo* %18, %6
  br i1 %12, label %19, label %13

13:                                               ; preds = %11, %8
  %14 = phi %struct.TLoopInfo* [ %4, %8 ], [ %18, %11 ]
  %15 = getelementptr inbounds %struct.TLoopInfo, %struct.TLoopInfo* %14, i64 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, %10
  %18 = getelementptr inbounds %struct.TLoopInfo, %struct.TLoopInfo* %14, i64 1
  br i1 %17, label %19, label %11

19:                                               ; preds = %11, %13, %2
  %20 = phi i1 [ false, %2 ], [ true, %13 ], [ false, %11 ]
  ret i1 %20
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN19ValidateLimitations19validateForLoopInitEP11TIntermLoopP9TLoopInfo(%class.ValidateLimitations* nocapture, %class.TIntermLoop* nocapture readonly, %struct.TLoopInfo* nocapture) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.TIntermLoop, %class.TIntermLoop* %1, i64 0, i32 3
  %5 = load %class.TIntermNode*, %class.TIntermNode** %4, align 8
  %6 = icmp eq %class.TIntermNode* %5, null
  br i1 %6, label %7, label %14

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.TIntermLoop, %class.TIntermLoop* %1, i64 0, i32 0, i32 1
  %9 = bitcast %struct.TSourceLoc* %8 to i64*
  %10 = load i64, i64* %9, align 4
  %11 = getelementptr inbounds %class.TIntermLoop, %class.TIntermLoop* %1, i64 0, i32 0, i32 1, i32 2
  %12 = bitcast i32* %11 to i64*
  %13 = load i64, i64* %12, align 4
  tail call void @_ZN19ValidateLimitations5errorE10TSourceLocPKcS2_(%class.ValidateLimitations* %0, i64 %10, i64 %13, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0)) #12
  br label %140

14:                                               ; preds = %3
  %15 = bitcast %class.TIntermNode* %5 to %class.TIntermAggregate* (%class.TIntermNode*)***
  %16 = load %class.TIntermAggregate* (%class.TIntermNode*)**, %class.TIntermAggregate* (%class.TIntermNode*)*** %15, align 8
  %17 = getelementptr inbounds %class.TIntermAggregate* (%class.TIntermNode*)*, %class.TIntermAggregate* (%class.TIntermNode*)** %16, i64 3
  %18 = load %class.TIntermAggregate* (%class.TIntermNode*)*, %class.TIntermAggregate* (%class.TIntermNode*)** %17, align 8
  %19 = tail call %class.TIntermAggregate* %18(%class.TIntermNode* nonnull %5) #10
  %20 = icmp eq %class.TIntermAggregate* %19, null
  br i1 %20, label %25, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %19, i64 0, i32 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 5
  br i1 %24, label %32, label %25

25:                                               ; preds = %21, %14
  %26 = getelementptr inbounds %class.TIntermNode, %class.TIntermNode* %5, i64 0, i32 1
  %27 = bitcast %struct.TSourceLoc* %26 to i64*
  %28 = load i64, i64* %27, align 4
  %29 = getelementptr inbounds %class.TIntermNode, %class.TIntermNode* %5, i64 0, i32 1, i32 2
  %30 = bitcast i32* %29 to i64*
  %31 = load i64, i64* %30, align 4
  tail call void @_ZN19ValidateLimitations5errorE10TSourceLocPKcS2_(%class.ValidateLimitations* %0, i64 %28, i64 %31, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0)) #12
  br label %140

32:                                               ; preds = %21
  %33 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %19, i64 0, i32 2, i32 0
  %34 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %19, i64 0, i32 2, i32 0, i32 0, i32 1
  %35 = bitcast %class.TIntermNode*** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.std::__1::vector"* %33 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %36, %38
  %40 = icmp eq i64 %39, 8
  br i1 %40, label %48, label %41

41:                                               ; preds = %32
  %42 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %19, i64 0, i32 0, i32 0, i32 0, i32 1
  %43 = bitcast %struct.TSourceLoc* %42 to i64*
  %44 = load i64, i64* %43, align 4
  %45 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %19, i64 0, i32 0, i32 0, i32 0, i32 1, i32 2
  %46 = bitcast i32* %45 to i64*
  %47 = load i64, i64* %46, align 4
  tail call void @_ZN19ValidateLimitations5errorE10TSourceLocPKcS2_(%class.ValidateLimitations* %0, i64 %44, i64 %47, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0)) #12
  br label %140

48:                                               ; preds = %32
  %49 = inttoptr i64 %38 to %class.TIntermNode**
  %50 = load %class.TIntermNode*, %class.TIntermNode** %49, align 8
  %51 = bitcast %class.TIntermNode* %50 to %class.TIntermBinary* (%class.TIntermNode*)***
  %52 = load %class.TIntermBinary* (%class.TIntermNode*)**, %class.TIntermBinary* (%class.TIntermNode*)*** %51, align 8
  %53 = getelementptr inbounds %class.TIntermBinary* (%class.TIntermNode*)*, %class.TIntermBinary* (%class.TIntermNode*)** %52, i64 4
  %54 = load %class.TIntermBinary* (%class.TIntermNode*)*, %class.TIntermBinary* (%class.TIntermNode*)** %53, align 8
  %55 = tail call %class.TIntermBinary* %54(%class.TIntermNode* %50) #10
  %56 = icmp eq %class.TIntermBinary* %55, null
  br i1 %56, label %61, label %57

57:                                               ; preds = %48
  %58 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %55, i64 0, i32 0, i32 1
  %59 = load i32, i32* %58, align 8
  %60 = icmp eq i32 %59, 145
  br i1 %60, label %68, label %61

61:                                               ; preds = %57, %48
  %62 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %19, i64 0, i32 0, i32 0, i32 0, i32 1
  %63 = bitcast %struct.TSourceLoc* %62 to i64*
  %64 = load i64, i64* %63, align 4
  %65 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %19, i64 0, i32 0, i32 0, i32 0, i32 1, i32 2
  %66 = bitcast i32* %65 to i64*
  %67 = load i64, i64* %66, align 4
  tail call void @_ZN19ValidateLimitations5errorE10TSourceLocPKcS2_(%class.ValidateLimitations* %0, i64 %64, i64 %67, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0)) #12
  br label %140

68:                                               ; preds = %57
  %69 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %55, i64 0, i32 1
  %70 = load %class.TIntermTyped*, %class.TIntermTyped** %69, align 8
  %71 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %70, i64 0, i32 0
  %72 = bitcast %class.TIntermTyped* %70 to %class.TIntermSymbol* (%class.TIntermNode*)***
  %73 = load %class.TIntermSymbol* (%class.TIntermNode*)**, %class.TIntermSymbol* (%class.TIntermNode*)*** %72, align 8
  %74 = getelementptr inbounds %class.TIntermSymbol* (%class.TIntermNode*)*, %class.TIntermSymbol* (%class.TIntermNode*)** %73, i64 7
  %75 = load %class.TIntermSymbol* (%class.TIntermNode*)*, %class.TIntermSymbol* (%class.TIntermNode*)** %74, align 8
  %76 = tail call %class.TIntermSymbol* %75(%class.TIntermNode* %71) #10
  %77 = icmp eq %class.TIntermSymbol* %76, null
  br i1 %77, label %78, label %85

78:                                               ; preds = %68
  %79 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %55, i64 0, i32 0, i32 0, i32 0, i32 1
  %80 = bitcast %struct.TSourceLoc* %79 to i64*
  %81 = load i64, i64* %80, align 4
  %82 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %55, i64 0, i32 0, i32 0, i32 0, i32 1, i32 2
  %83 = bitcast i32* %82 to i64*
  %84 = load i64, i64* %83, align 4
  tail call void @_ZN19ValidateLimitations5errorE10TSourceLocPKcS2_(%class.ValidateLimitations* %0, i64 %81, i64 %84, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0)) #12
  br label %140

85:                                               ; preds = %68
  %86 = getelementptr inbounds %class.TIntermSymbol, %class.TIntermSymbol* %76, i64 0, i32 0, i32 1, i32 0
  %87 = load i8, i8* %86, align 8
  %88 = add i8 %87, -1
  %89 = icmp ult i8 %88, 3
  br i1 %89, label %107, label %90

90:                                               ; preds = %85
  %91 = getelementptr inbounds %class.TIntermSymbol, %class.TIntermSymbol* %76, i64 0, i32 0, i32 0, i32 1
  %92 = bitcast %struct.TSourceLoc* %91 to i64*
  %93 = load i64, i64* %92, align 4
  %94 = getelementptr inbounds %class.TIntermSymbol, %class.TIntermSymbol* %76, i64 0, i32 0, i32 0, i32 1, i32 2
  %95 = bitcast i32* %94 to i64*
  %96 = load i64, i64* %95, align 4
  switch i8 %87, label %104 [
    i8 0, label %105
    i8 37, label %103
    i8 20, label %101
    i8 16, label %102
    i8 4, label %97
    i8 15, label %98
    i8 17, label %99
    i8 19, label %100
  ]

97:                                               ; preds = %90
  br label %105

98:                                               ; preds = %90
  br label %105

99:                                               ; preds = %90
  br label %105

100:                                              ; preds = %90
  br label %105

101:                                              ; preds = %90
  br label %105

102:                                              ; preds = %90
  br label %105

103:                                              ; preds = %90
  br label %105

104:                                              ; preds = %90
  br label %105

105:                                              ; preds = %90, %97, %98, %99, %100, %101, %102, %103, %104
  %106 = phi i8* [ getelementptr inbounds ([13 x i8], [13 x i8]* @.str.45, i64 0, i64 0), %104 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.42, i64 0, i64 0), %103 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.41, i64 0, i64 0), %102 ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @.str.40, i64 0, i64 0), %101 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.39, i64 0, i64 0), %100 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.38, i64 0, i64 0), %99 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.37, i64 0, i64 0), %98 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.36, i64 0, i64 0), %97 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.32, i64 0, i64 0), %90 ]
  tail call void @_ZN19ValidateLimitations5errorE10TSourceLocPKcS2_(%class.ValidateLimitations* %0, i64 %93, i64 %96, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.10, i64 0, i64 0), i8* nonnull %106) #12
  br label %140

107:                                              ; preds = %85
  %108 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %55, i64 0, i32 2
  %109 = load %class.TIntermTyped*, %class.TIntermTyped** %108, align 8
  %110 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %109, i64 0, i32 0
  %111 = bitcast %class.TIntermTyped* %109 to %class.TIntermConstantUnion* (%class.TIntermNode*)***
  %112 = load %class.TIntermConstantUnion* (%class.TIntermNode*)**, %class.TIntermConstantUnion* (%class.TIntermNode*)*** %111, align 8
  %113 = getelementptr inbounds %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %112, i64 2
  %114 = load %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %113, align 8
  %115 = tail call %class.TIntermConstantUnion* %114(%class.TIntermNode* %110) #10
  %116 = icmp eq %class.TIntermConstantUnion* %115, null
  br i1 %116, label %117, label %136

117:                                              ; preds = %107
  %118 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %55, i64 0, i32 0, i32 0, i32 0, i32 1
  %119 = bitcast %struct.TSourceLoc* %118 to i64*
  %120 = load i64, i64* %119, align 4
  %121 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %55, i64 0, i32 0, i32 0, i32 0, i32 1, i32 2
  %122 = bitcast i32* %121 to i64*
  %123 = load i64, i64* %122, align 4
  %124 = getelementptr inbounds %class.TIntermSymbol, %class.TIntermSymbol* %76, i64 0, i32 2
  %125 = bitcast %"class.std::__1::basic_string"* %124 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %126 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %125, i64 0, i32 1, i32 0
  %127 = load i8, i8* %126, align 1
  %128 = icmp slt i8 %127, 0
  br i1 %128, label %129, label %132

129:                                              ; preds = %117
  %130 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %124, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load i8*, i8** %130, align 8
  br label %134

132:                                              ; preds = %117
  %133 = bitcast %"class.std::__1::basic_string"* %124 to i8*
  br label %134

134:                                              ; preds = %129, %132
  %135 = phi i8* [ %131, %129 ], [ %133, %132 ]
  tail call void @_ZN19ValidateLimitations5errorE10TSourceLocPKcS2_(%class.ValidateLimitations* %0, i64 %120, i64 %123, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.11, i64 0, i64 0), i8* %135) #12
  br label %140

136:                                              ; preds = %107
  %137 = getelementptr inbounds %class.TIntermSymbol, %class.TIntermSymbol* %76, i64 0, i32 1
  %138 = load i32, i32* %137, align 8
  %139 = getelementptr inbounds %struct.TLoopInfo, %struct.TLoopInfo* %2, i64 0, i32 0, i32 0
  store i32 %138, i32* %139, align 8
  br label %140

140:                                              ; preds = %25, %61, %105, %134, %136, %78, %41, %7
  %141 = phi i1 [ false, %7 ], [ false, %25 ], [ false, %41 ], [ false, %61 ], [ false, %78 ], [ true, %136 ], [ false, %134 ], [ false, %105 ]
  ret i1 %141
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN19ValidateLimitations19validateForLoopCondEP11TIntermLoopP9TLoopInfo(%class.ValidateLimitations* nocapture, %class.TIntermLoop* nocapture readonly, %struct.TLoopInfo* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.TIntermLoop, %class.TIntermLoop* %1, i64 0, i32 4
  %5 = load %class.TIntermTyped*, %class.TIntermTyped** %4, align 8
  %6 = icmp eq %class.TIntermTyped* %5, null
  br i1 %6, label %7, label %14

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.TIntermLoop, %class.TIntermLoop* %1, i64 0, i32 0, i32 1
  %9 = bitcast %struct.TSourceLoc* %8 to i64*
  %10 = load i64, i64* %9, align 4
  %11 = getelementptr inbounds %class.TIntermLoop, %class.TIntermLoop* %1, i64 0, i32 0, i32 1, i32 2
  %12 = bitcast i32* %11 to i64*
  %13 = load i64, i64* %12, align 4
  tail call void @_ZN19ValidateLimitations5errorE10TSourceLocPKcS2_(%class.ValidateLimitations* %0, i64 %10, i64 %13, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0)) #12
  br label %111

14:                                               ; preds = %3
  %15 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %5, i64 0, i32 0
  %16 = bitcast %class.TIntermTyped* %5 to %class.TIntermBinary* (%class.TIntermNode*)***
  %17 = load %class.TIntermBinary* (%class.TIntermNode*)**, %class.TIntermBinary* (%class.TIntermNode*)*** %16, align 8
  %18 = getelementptr inbounds %class.TIntermBinary* (%class.TIntermNode*)*, %class.TIntermBinary* (%class.TIntermNode*)** %17, i64 4
  %19 = load %class.TIntermBinary* (%class.TIntermNode*)*, %class.TIntermBinary* (%class.TIntermNode*)** %18, align 8
  %20 = tail call %class.TIntermBinary* %19(%class.TIntermNode* %15) #10
  %21 = icmp eq %class.TIntermBinary* %20, null
  br i1 %21, label %22, label %29

22:                                               ; preds = %14
  %23 = getelementptr inbounds %class.TIntermLoop, %class.TIntermLoop* %1, i64 0, i32 0, i32 1
  %24 = bitcast %struct.TSourceLoc* %23 to i64*
  %25 = load i64, i64* %24, align 4
  %26 = getelementptr inbounds %class.TIntermLoop, %class.TIntermLoop* %1, i64 0, i32 0, i32 1, i32 2
  %27 = bitcast i32* %26 to i64*
  %28 = load i64, i64* %27, align 4
  tail call void @_ZN19ValidateLimitations5errorE10TSourceLocPKcS2_(%class.ValidateLimitations* %0, i64 %25, i64 %28, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0)) #12
  br label %111

29:                                               ; preds = %14
  %30 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %20, i64 0, i32 1
  %31 = load %class.TIntermTyped*, %class.TIntermTyped** %30, align 8
  %32 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %31, i64 0, i32 0
  %33 = bitcast %class.TIntermTyped* %31 to %class.TIntermSymbol* (%class.TIntermNode*)***
  %34 = load %class.TIntermSymbol* (%class.TIntermNode*)**, %class.TIntermSymbol* (%class.TIntermNode*)*** %33, align 8
  %35 = getelementptr inbounds %class.TIntermSymbol* (%class.TIntermNode*)*, %class.TIntermSymbol* (%class.TIntermNode*)** %34, i64 7
  %36 = load %class.TIntermSymbol* (%class.TIntermNode*)*, %class.TIntermSymbol* (%class.TIntermNode*)** %35, align 8
  %37 = tail call %class.TIntermSymbol* %36(%class.TIntermNode* %32) #10
  %38 = icmp eq %class.TIntermSymbol* %37, null
  br i1 %38, label %39, label %46

39:                                               ; preds = %29
  %40 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %20, i64 0, i32 0, i32 0, i32 0, i32 1
  %41 = bitcast %struct.TSourceLoc* %40 to i64*
  %42 = load i64, i64* %41, align 4
  %43 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %20, i64 0, i32 0, i32 0, i32 0, i32 1, i32 2
  %44 = bitcast i32* %43 to i64*
  %45 = load i64, i64* %44, align 4
  tail call void @_ZN19ValidateLimitations5errorE10TSourceLocPKcS2_(%class.ValidateLimitations* %0, i64 %42, i64 %45, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0)) #12
  br label %111

46:                                               ; preds = %29
  %47 = getelementptr inbounds %class.TIntermSymbol, %class.TIntermSymbol* %37, i64 0, i32 1
  %48 = load i32, i32* %47, align 8
  %49 = getelementptr inbounds %struct.TLoopInfo, %struct.TLoopInfo* %2, i64 0, i32 0, i32 0
  %50 = load i32, i32* %49, align 8
  %51 = icmp eq i32 %48, %50
  br i1 %51, label %71, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %class.TIntermSymbol, %class.TIntermSymbol* %37, i64 0, i32 0, i32 0, i32 1
  %54 = bitcast %struct.TSourceLoc* %53 to i64*
  %55 = load i64, i64* %54, align 4
  %56 = getelementptr inbounds %class.TIntermSymbol, %class.TIntermSymbol* %37, i64 0, i32 0, i32 0, i32 1, i32 2
  %57 = bitcast i32* %56 to i64*
  %58 = load i64, i64* %57, align 4
  %59 = getelementptr inbounds %class.TIntermSymbol, %class.TIntermSymbol* %37, i64 0, i32 2
  %60 = bitcast %"class.std::__1::basic_string"* %59 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %60, i64 0, i32 1, i32 0
  %62 = load i8, i8* %61, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %67

64:                                               ; preds = %52
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load i8*, i8** %65, align 8
  br label %69

67:                                               ; preds = %52
  %68 = bitcast %"class.std::__1::basic_string"* %59 to i8*
  br label %69

69:                                               ; preds = %64, %67
  %70 = phi i8* [ %66, %64 ], [ %68, %67 ]
  tail call void @_ZN19ValidateLimitations5errorE10TSourceLocPKcS2_(%class.ValidateLimitations* %0, i64 %55, i64 %58, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.14, i64 0, i64 0), i8* %70) #12
  br label %111

71:                                               ; preds = %46
  %72 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %20, i64 0, i32 0, i32 1
  %73 = load i32, i32* %72, align 8
  switch i32 %73, label %74 [
    i32 20, label %82
    i32 21, label %82
    i32 24, label %82
    i32 25, label %82
    i32 26, label %82
    i32 27, label %82
  ]

74:                                               ; preds = %71
  %75 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %20, i64 0, i32 0, i32 0, i32 0, i32 1
  %76 = bitcast %struct.TSourceLoc* %75 to i64*
  %77 = load i64, i64* %76, align 4
  %78 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %20, i64 0, i32 0, i32 0, i32 0, i32 1, i32 2
  %79 = bitcast i32* %78 to i64*
  %80 = load i64, i64* %79, align 4
  %81 = tail call i8* @_Z17getOperatorString9TOperator(i32 %73) #10
  tail call void @_ZN19ValidateLimitations5errorE10TSourceLocPKcS2_(%class.ValidateLimitations* %0, i64 %77, i64 %80, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.15, i64 0, i64 0), i8* %81) #12
  br label %82

82:                                               ; preds = %71, %71, %71, %71, %71, %71, %74
  %83 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %20, i64 0, i32 2
  %84 = load %class.TIntermTyped*, %class.TIntermTyped** %83, align 8
  %85 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %84, i64 0, i32 0
  %86 = bitcast %class.TIntermTyped* %84 to %class.TIntermConstantUnion* (%class.TIntermNode*)***
  %87 = load %class.TIntermConstantUnion* (%class.TIntermNode*)**, %class.TIntermConstantUnion* (%class.TIntermNode*)*** %86, align 8
  %88 = getelementptr inbounds %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %87, i64 2
  %89 = load %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %88, align 8
  %90 = tail call %class.TIntermConstantUnion* %89(%class.TIntermNode* %85) #10
  %91 = icmp eq %class.TIntermConstantUnion* %90, null
  br i1 %91, label %92, label %111

92:                                               ; preds = %82
  %93 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %20, i64 0, i32 0, i32 0, i32 0, i32 1
  %94 = bitcast %struct.TSourceLoc* %93 to i64*
  %95 = load i64, i64* %94, align 4
  %96 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %20, i64 0, i32 0, i32 0, i32 0, i32 1, i32 2
  %97 = bitcast i32* %96 to i64*
  %98 = load i64, i64* %97, align 4
  %99 = getelementptr inbounds %class.TIntermSymbol, %class.TIntermSymbol* %37, i64 0, i32 2
  %100 = bitcast %"class.std::__1::basic_string"* %99 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %100, i64 0, i32 1, i32 0
  %102 = load i8, i8* %101, align 1
  %103 = icmp slt i8 %102, 0
  br i1 %103, label %104, label %107

104:                                              ; preds = %92
  %105 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %99, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  br label %109

107:                                              ; preds = %92
  %108 = bitcast %"class.std::__1::basic_string"* %99 to i8*
  br label %109

109:                                              ; preds = %104, %107
  %110 = phi i8* [ %106, %104 ], [ %108, %107 ]
  tail call void @_ZN19ValidateLimitations5errorE10TSourceLocPKcS2_(%class.ValidateLimitations* %0, i64 %95, i64 %98, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.16, i64 0, i64 0), i8* %110) #12
  br label %111

111:                                              ; preds = %82, %22, %109, %69, %39, %7
  %112 = phi i1 [ false, %7 ], [ false, %22 ], [ false, %69 ], [ false, %109 ], [ false, %39 ], [ true, %82 ]
  ret i1 %112
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN19ValidateLimitations19validateForLoopExprEP11TIntermLoopP9TLoopInfo(%class.ValidateLimitations* nocapture, %class.TIntermLoop* nocapture readonly, %struct.TLoopInfo* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.TIntermLoop, %class.TIntermLoop* %1, i64 0, i32 5
  %5 = load %class.TIntermTyped*, %class.TIntermTyped** %4, align 8
  %6 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %5, i64 0, i32 0
  %7 = icmp eq %class.TIntermTyped* %5, null
  br i1 %7, label %8, label %15

8:                                                ; preds = %3
  %9 = getelementptr inbounds %class.TIntermLoop, %class.TIntermLoop* %1, i64 0, i32 0, i32 1
  %10 = bitcast %struct.TSourceLoc* %9 to i64*
  %11 = load i64, i64* %10, align 4
  %12 = getelementptr inbounds %class.TIntermLoop, %class.TIntermLoop* %1, i64 0, i32 0, i32 1, i32 2
  %13 = bitcast i32* %12 to i64*
  %14 = load i64, i64* %13, align 4
  tail call void @_ZN19ValidateLimitations5errorE10TSourceLocPKcS2_(%class.ValidateLimitations* %0, i64 %11, i64 %14, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0)) #12
  br label %128

15:                                               ; preds = %3
  %16 = bitcast %class.TIntermTyped* %5 to %class.TIntermUnary* (%class.TIntermNode*)***
  %17 = load %class.TIntermUnary* (%class.TIntermNode*)**, %class.TIntermUnary* (%class.TIntermNode*)*** %16, align 8
  %18 = getelementptr inbounds %class.TIntermUnary* (%class.TIntermNode*)*, %class.TIntermUnary* (%class.TIntermNode*)** %17, i64 5
  %19 = load %class.TIntermUnary* (%class.TIntermNode*)*, %class.TIntermUnary* (%class.TIntermNode*)** %18, align 8
  %20 = tail call %class.TIntermUnary* %19(%class.TIntermNode* %6) #10
  %21 = icmp eq %class.TIntermUnary* %20, null
  br i1 %21, label %33, label %22

22:                                               ; preds = %15
  %23 = getelementptr inbounds %class.TIntermUnary, %class.TIntermUnary* %20, i64 0, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = getelementptr inbounds %class.TIntermUnary, %class.TIntermUnary* %20, i64 0, i32 1
  %26 = load %class.TIntermTyped*, %class.TIntermTyped** %25, align 8
  %27 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %26, i64 0, i32 0
  %28 = bitcast %class.TIntermTyped* %26 to %class.TIntermSymbol* (%class.TIntermNode*)***
  %29 = load %class.TIntermSymbol* (%class.TIntermNode*)**, %class.TIntermSymbol* (%class.TIntermNode*)*** %28, align 8
  %30 = getelementptr inbounds %class.TIntermSymbol* (%class.TIntermNode*)*, %class.TIntermSymbol* (%class.TIntermNode*)** %29, i64 7
  %31 = load %class.TIntermSymbol* (%class.TIntermNode*)*, %class.TIntermSymbol* (%class.TIntermNode*)** %30, align 8
  %32 = tail call %class.TIntermSymbol* %31(%class.TIntermNode* %27) #10
  br label %51

33:                                               ; preds = %15
  %34 = bitcast %class.TIntermTyped* %5 to %class.TIntermBinary* (%class.TIntermNode*)***
  %35 = load %class.TIntermBinary* (%class.TIntermNode*)**, %class.TIntermBinary* (%class.TIntermNode*)*** %34, align 8
  %36 = getelementptr inbounds %class.TIntermBinary* (%class.TIntermNode*)*, %class.TIntermBinary* (%class.TIntermNode*)** %35, i64 4
  %37 = load %class.TIntermBinary* (%class.TIntermNode*)*, %class.TIntermBinary* (%class.TIntermNode*)** %36, align 8
  %38 = tail call %class.TIntermBinary* %37(%class.TIntermNode* %6) #10
  %39 = icmp eq %class.TIntermBinary* %38, null
  br i1 %39, label %56, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %38, i64 0, i32 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %38, i64 0, i32 1
  %44 = load %class.TIntermTyped*, %class.TIntermTyped** %43, align 8
  %45 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %44, i64 0, i32 0
  %46 = bitcast %class.TIntermTyped* %44 to %class.TIntermSymbol* (%class.TIntermNode*)***
  %47 = load %class.TIntermSymbol* (%class.TIntermNode*)**, %class.TIntermSymbol* (%class.TIntermNode*)*** %46, align 8
  %48 = getelementptr inbounds %class.TIntermSymbol* (%class.TIntermNode*)*, %class.TIntermSymbol* (%class.TIntermNode*)** %47, i64 7
  %49 = load %class.TIntermSymbol* (%class.TIntermNode*)*, %class.TIntermSymbol* (%class.TIntermNode*)** %48, align 8
  %50 = tail call %class.TIntermSymbol* %49(%class.TIntermNode* %45) #10
  br label %51

51:                                               ; preds = %40, %22
  %52 = phi %class.TIntermBinary* [ null, %22 ], [ %38, %40 ]
  %53 = phi %class.TIntermSymbol* [ %32, %22 ], [ %50, %40 ]
  %54 = phi i32 [ %24, %22 ], [ %42, %40 ]
  %55 = icmp eq %class.TIntermSymbol* %53, null
  br i1 %55, label %56, label %63

56:                                               ; preds = %33, %51
  %57 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %5, i64 0, i32 0, i32 1
  %58 = bitcast %struct.TSourceLoc* %57 to i64*
  %59 = load i64, i64* %58, align 4
  %60 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %5, i64 0, i32 0, i32 1, i32 2
  %61 = bitcast i32* %60 to i64*
  %62 = load i64, i64* %61, align 4
  tail call void @_ZN19ValidateLimitations5errorE10TSourceLocPKcS2_(%class.ValidateLimitations* %0, i64 %59, i64 %62, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0)) #12
  br label %128

63:                                               ; preds = %51
  %64 = getelementptr inbounds %class.TIntermSymbol, %class.TIntermSymbol* %53, i64 0, i32 1
  %65 = load i32, i32* %64, align 8
  %66 = getelementptr inbounds %struct.TLoopInfo, %struct.TLoopInfo* %2, i64 0, i32 0, i32 0
  %67 = load i32, i32* %66, align 8
  %68 = icmp eq i32 %65, %67
  br i1 %68, label %88, label %69

69:                                               ; preds = %63
  %70 = getelementptr inbounds %class.TIntermSymbol, %class.TIntermSymbol* %53, i64 0, i32 0, i32 0, i32 1
  %71 = bitcast %struct.TSourceLoc* %70 to i64*
  %72 = load i64, i64* %71, align 4
  %73 = getelementptr inbounds %class.TIntermSymbol, %class.TIntermSymbol* %53, i64 0, i32 0, i32 0, i32 1, i32 2
  %74 = bitcast i32* %73 to i64*
  %75 = load i64, i64* %74, align 4
  %76 = getelementptr inbounds %class.TIntermSymbol, %class.TIntermSymbol* %53, i64 0, i32 2
  %77 = bitcast %"class.std::__1::basic_string"* %76 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %78 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %77, i64 0, i32 1, i32 0
  %79 = load i8, i8* %78, align 1
  %80 = icmp slt i8 %79, 0
  br i1 %80, label %81, label %84

81:                                               ; preds = %69
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  br label %86

84:                                               ; preds = %69
  %85 = bitcast %"class.std::__1::basic_string"* %76 to i8*
  br label %86

86:                                               ; preds = %81, %84
  %87 = phi i8* [ %83, %81 ], [ %85, %84 ]
  tail call void @_ZN19ValidateLimitations5errorE10TSourceLocPKcS2_(%class.ValidateLimitations* %0, i64 %72, i64 %75, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.14, i64 0, i64 0), i8* %87) #12
  br label %128

88:                                               ; preds = %63
  switch i32 %54, label %89 [
    i32 12, label %97
    i32 13, label %97
    i32 14, label %97
    i32 15, label %97
    i32 146, label %97
    i32 147, label %97
  ]

89:                                               ; preds = %88
  %90 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %5, i64 0, i32 0, i32 1
  %91 = bitcast %struct.TSourceLoc* %90 to i64*
  %92 = load i64, i64* %91, align 4
  %93 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %5, i64 0, i32 0, i32 1, i32 2
  %94 = bitcast i32* %93 to i64*
  %95 = load i64, i64* %94, align 4
  %96 = tail call i8* @_Z17getOperatorString9TOperator(i32 %54) #10
  tail call void @_ZN19ValidateLimitations5errorE10TSourceLocPKcS2_(%class.ValidateLimitations* %0, i64 %92, i64 %95, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.21, i64 0, i64 0), i8* %96) #12
  br label %128

97:                                               ; preds = %88, %88, %88, %88, %88, %88
  %98 = icmp eq %class.TIntermBinary* %52, null
  br i1 %98, label %128, label %99

99:                                               ; preds = %97
  %100 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %52, i64 0, i32 2
  %101 = load %class.TIntermTyped*, %class.TIntermTyped** %100, align 8
  %102 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %101, i64 0, i32 0
  %103 = bitcast %class.TIntermTyped* %101 to %class.TIntermConstantUnion* (%class.TIntermNode*)***
  %104 = load %class.TIntermConstantUnion* (%class.TIntermNode*)**, %class.TIntermConstantUnion* (%class.TIntermNode*)*** %103, align 8
  %105 = getelementptr inbounds %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %104, i64 2
  %106 = load %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %105, align 8
  %107 = tail call %class.TIntermConstantUnion* %106(%class.TIntermNode* %102) #10
  %108 = icmp eq %class.TIntermConstantUnion* %107, null
  br i1 %108, label %109, label %128

109:                                              ; preds = %99
  %110 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %52, i64 0, i32 0, i32 0, i32 0, i32 1
  %111 = bitcast %struct.TSourceLoc* %110 to i64*
  %112 = load i64, i64* %111, align 4
  %113 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %52, i64 0, i32 0, i32 0, i32 0, i32 1, i32 2
  %114 = bitcast i32* %113 to i64*
  %115 = load i64, i64* %114, align 4
  %116 = getelementptr inbounds %class.TIntermSymbol, %class.TIntermSymbol* %53, i64 0, i32 2
  %117 = bitcast %"class.std::__1::basic_string"* %116 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %118 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %117, i64 0, i32 1, i32 0
  %119 = load i8, i8* %118, align 1
  %120 = icmp slt i8 %119, 0
  br i1 %120, label %121, label %124

121:                                              ; preds = %109
  %122 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %116, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load i8*, i8** %122, align 8
  br label %126

124:                                              ; preds = %109
  %125 = bitcast %"class.std::__1::basic_string"* %116 to i8*
  br label %126

126:                                              ; preds = %121, %124
  %127 = phi i8* [ %123, %121 ], [ %125, %124 ]
  tail call void @_ZN19ValidateLimitations5errorE10TSourceLocPKcS2_(%class.ValidateLimitations* %0, i64 %112, i64 %115, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.22, i64 0, i64 0), i8* %127) #12
  br label %128

128:                                              ; preds = %99, %56, %86, %89, %126, %97, %8
  %129 = phi i1 [ false, %8 ], [ false, %86 ], [ false, %89 ], [ false, %126 ], [ false, %56 ], [ true, %97 ], [ true, %99 ]
  ret i1 %129
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN19ValidateLimitations11isConstExprEP11TIntermNode(%class.ValidateLimitations* nocapture readnone, %class.TIntermNode*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %class.TIntermNode* %1 to %class.TIntermConstantUnion* (%class.TIntermNode*)***
  %4 = load %class.TIntermConstantUnion* (%class.TIntermNode*)**, %class.TIntermConstantUnion* (%class.TIntermNode*)*** %3, align 8
  %5 = getelementptr inbounds %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %4, i64 2
  %6 = load %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %5, align 8
  %7 = tail call %class.TIntermConstantUnion* %6(%class.TIntermNode* %1) #10
  %8 = icmp ne %class.TIntermConstantUnion* %7, null
  ret i1 %8
}

; Function Attrs: optsize
declare i8* @_Z17getOperatorString9TOperator(i32) local_unnamed_addr #2

; Function Attrs: optsize
declare %class.TParseContext* @_Z21GetGlobalParseContextv() local_unnamed_addr #2

; Function Attrs: optsize
declare %class.TSymbol* @_ZNK12TSymbolTable4findERKNSt3__112basic_stringIcNS0_11char_traitsIcEE14pool_allocatorIcEEEiPbS9_(%class.TSymbolTable*, %"class.std::__1::basic_string"* dereferenceable(32), i32, i8*, i8*) local_unnamed_addr #2

; Function Attrs: optsize
declare zeroext i1 @_ZNK15TIntermOperator13modifiesStateEv(%class.TIntermOperator*) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN19ValidateLimitations16isConstIndexExprEP11TIntermNode(%class.ValidateLimitations*, %class.TIntermNode*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.(anonymous namespace)::ValidateConstIndexExpr", align 8
  %4 = bitcast %"class.(anonymous namespace)::ValidateConstIndexExpr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %4) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 80, i1 false)
  %5 = getelementptr inbounds %class.ValidateLimitations, %class.ValidateLimitations* %0, i64 0, i32 4
  %6 = getelementptr inbounds %"class.(anonymous namespace)::ValidateConstIndexExpr", %"class.(anonymous namespace)::ValidateConstIndexExpr"* %3, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.(anonymous namespace)::ValidateConstIndexExpr", %"class.(anonymous namespace)::ValidateConstIndexExpr"* %3, i64 0, i32 0, i32 1
  store i8 1, i8* %7, align 8
  %8 = getelementptr inbounds %"class.(anonymous namespace)::ValidateConstIndexExpr", %"class.(anonymous namespace)::ValidateConstIndexExpr"* %3, i64 0, i32 0, i32 2
  %9 = getelementptr inbounds %"class.(anonymous namespace)::ValidateConstIndexExpr", %"class.(anonymous namespace)::ValidateConstIndexExpr"* %3, i64 0, i32 0, i32 6, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %8, i8 0, i64 31, i1 false) #11
  %10 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  store %class.TPoolAllocator* %10, %class.TPoolAllocator** %9, align 8
  %11 = getelementptr inbounds %"class.(anonymous namespace)::ValidateConstIndexExpr", %"class.(anonymous namespace)::ValidateConstIndexExpr"* %3, i64 0, i32 0, i32 7
  %12 = bitcast %"class.std::__1::vector.6"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN12_GLOBAL__N_122ValidateConstIndexExprE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %13 = getelementptr inbounds %"class.(anonymous namespace)::ValidateConstIndexExpr", %"class.(anonymous namespace)::ValidateConstIndexExpr"* %3, i64 0, i32 1
  store i8 1, i8* %13, align 8
  %14 = getelementptr inbounds %"class.(anonymous namespace)::ValidateConstIndexExpr", %"class.(anonymous namespace)::ValidateConstIndexExpr"* %3, i64 0, i32 2
  store %class.TVector.32* %5, %class.TVector.32** %14, align 8
  %15 = getelementptr inbounds %"class.(anonymous namespace)::ValidateConstIndexExpr", %"class.(anonymous namespace)::ValidateConstIndexExpr"* %3, i64 0, i32 0
  %16 = bitcast %class.TIntermNode* %1 to void (%class.TIntermNode*, %class.TIntermTraverser*)***
  %17 = load void (%class.TIntermNode*, %class.TIntermTraverser*)**, void (%class.TIntermNode*, %class.TIntermTraverser*)*** %16, align 8
  %18 = load void (%class.TIntermNode*, %class.TIntermTraverser*)*, void (%class.TIntermNode*, %class.TIntermTraverser*)** %17, align 8
  call void %18(%class.TIntermNode* %1, %class.TIntermTraverser* nonnull %15) #10
  %19 = load i8, i8* %13, align 8, !range !2
  %20 = icmp ne i8 %19, 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTV16TIntermTraverser, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %21 = getelementptr inbounds %"class.(anonymous namespace)::ValidateConstIndexExpr", %"class.(anonymous namespace)::ValidateConstIndexExpr"* %3, i64 0, i32 0, i32 7, i32 0, i32 0
  %22 = load %"struct.TIntermTraverser::ParentBlock"*, %"struct.TIntermTraverser::ParentBlock"** %21, align 8
  %23 = icmp eq %"struct.TIntermTraverser::ParentBlock"* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %2
  %25 = ptrtoint %"struct.TIntermTraverser::ParentBlock"* %22 to i64
  %26 = getelementptr inbounds %"class.(anonymous namespace)::ValidateConstIndexExpr", %"class.(anonymous namespace)::ValidateConstIndexExpr"* %3, i64 0, i32 0, i32 7, i32 0, i32 1
  %27 = bitcast %"struct.TIntermTraverser::ParentBlock"** %26 to i64*
  store i64 %25, i64* %27, align 8
  %28 = bitcast %"struct.TIntermTraverser::ParentBlock"* %22 to i8*
  call void @_ZdlPv(i8* %28) #14
  br label %29

29:                                               ; preds = %24, %2
  %30 = getelementptr inbounds %"class.(anonymous namespace)::ValidateConstIndexExpr", %"class.(anonymous namespace)::ValidateConstIndexExpr"* %3, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0
  %31 = load %class.TIntermNode**, %class.TIntermNode*** %30, align 8
  %32 = icmp eq %class.TIntermNode** %31, null
  br i1 %32, label %37, label %33

33:                                               ; preds = %29
  %34 = ptrtoint %class.TIntermNode** %31 to i64
  %35 = getelementptr inbounds %"class.(anonymous namespace)::ValidateConstIndexExpr", %"class.(anonymous namespace)::ValidateConstIndexExpr"* %3, i64 0, i32 0, i32 6, i32 0, i32 0, i32 1
  %36 = bitcast %class.TIntermNode*** %35 to i64*
  store i64 %34, i64* %36, align 8
  br label %37

37:                                               ; preds = %29, %33
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %4) #11
  ret i1 %20
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN19ValidateLimitationsD2Ev(%class.ValidateLimitations*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %class.ValidateLimitations, %class.ValidateLimitations* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTV19ValidateLimitations, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.ValidateLimitations, %class.ValidateLimitations* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %struct.TLoopInfo*, %struct.TLoopInfo** %3, align 8
  %5 = icmp eq %struct.TLoopInfo* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %struct.TLoopInfo* %4 to i64
  %8 = getelementptr inbounds %class.ValidateLimitations, %class.ValidateLimitations* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %9 = bitcast %struct.TLoopInfo** %8 to i64*
  store i64 %7, i64* %9, align 8
  br label %10

10:                                               ; preds = %1, %6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTV16TIntermTraverser, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %11 = getelementptr inbounds %class.ValidateLimitations, %class.ValidateLimitations* %0, i64 0, i32 0, i32 7, i32 0, i32 0
  %12 = load %"struct.TIntermTraverser::ParentBlock"*, %"struct.TIntermTraverser::ParentBlock"** %11, align 8
  %13 = icmp eq %"struct.TIntermTraverser::ParentBlock"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = ptrtoint %"struct.TIntermTraverser::ParentBlock"* %12 to i64
  %16 = getelementptr inbounds %class.ValidateLimitations, %class.ValidateLimitations* %0, i64 0, i32 0, i32 7, i32 0, i32 1
  %17 = bitcast %"struct.TIntermTraverser::ParentBlock"** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast %"struct.TIntermTraverser::ParentBlock"* %12 to i8*
  tail call void @_ZdlPv(i8* %18) #14
  br label %19

19:                                               ; preds = %14, %10
  %20 = getelementptr inbounds %class.ValidateLimitations, %class.ValidateLimitations* %0, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0
  %21 = load %class.TIntermNode**, %class.TIntermNode*** %20, align 8
  %22 = icmp eq %class.TIntermNode** %21, null
  br i1 %22, label %27, label %23

23:                                               ; preds = %19
  %24 = ptrtoint %class.TIntermNode** %21 to i64
  %25 = getelementptr inbounds %class.ValidateLimitations, %class.ValidateLimitations* %0, i64 0, i32 0, i32 6, i32 0, i32 0, i32 1
  %26 = bitcast %class.TIntermNode*** %25 to i64*
  store i64 %24, i64* %26, align 8
  br label %27

27:                                               ; preds = %19, %23
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN19ValidateLimitationsD0Ev(%class.ValidateLimitations*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %class.ValidateLimitations, %class.ValidateLimitations* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTV19ValidateLimitations, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.ValidateLimitations, %class.ValidateLimitations* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %struct.TLoopInfo*, %struct.TLoopInfo** %3, align 8
  %5 = icmp eq %struct.TLoopInfo* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %struct.TLoopInfo* %4 to i64
  %8 = getelementptr inbounds %class.ValidateLimitations, %class.ValidateLimitations* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %9 = bitcast %struct.TLoopInfo** %8 to i64*
  store i64 %7, i64* %9, align 8
  br label %10

10:                                               ; preds = %6, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTV16TIntermTraverser, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %11 = getelementptr inbounds %class.ValidateLimitations, %class.ValidateLimitations* %0, i64 0, i32 0, i32 7, i32 0, i32 0
  %12 = load %"struct.TIntermTraverser::ParentBlock"*, %"struct.TIntermTraverser::ParentBlock"** %11, align 8
  %13 = icmp eq %"struct.TIntermTraverser::ParentBlock"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = ptrtoint %"struct.TIntermTraverser::ParentBlock"* %12 to i64
  %16 = getelementptr inbounds %class.ValidateLimitations, %class.ValidateLimitations* %0, i64 0, i32 0, i32 7, i32 0, i32 1
  %17 = bitcast %"struct.TIntermTraverser::ParentBlock"** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast %"struct.TIntermTraverser::ParentBlock"* %12 to i8*
  tail call void @_ZdlPv(i8* %18) #14
  br label %19

19:                                               ; preds = %14, %10
  %20 = getelementptr inbounds %class.ValidateLimitations, %class.ValidateLimitations* %0, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0
  %21 = load %class.TIntermNode**, %class.TIntermNode*** %20, align 8
  %22 = icmp eq %class.TIntermNode** %21, null
  br i1 %22, label %27, label %23

23:                                               ; preds = %19
  %24 = ptrtoint %class.TIntermNode** %21 to i64
  %25 = getelementptr inbounds %class.ValidateLimitations, %class.ValidateLimitations* %0, i64 0, i32 0, i32 6, i32 0, i32 0, i32 1
  %26 = bitcast %class.TIntermNode*** %25 to i64*
  store i64 %24, i64* %26, align 8
  br label %27

27:                                               ; preds = %19, %23
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN16TIntermTraverser11visitSymbolEP13TIntermSymbol(%class.TIntermTraverser*, %class.TIntermSymbol*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN16TIntermTraverser18visitConstantUnionEP20TIntermConstantUnion(%class.TIntermTraverser*, %class.TIntermConstantUnion*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN16TIntermTraverser14visitSelectionE5VisitP16TIntermSelection(%class.TIntermTraverser*, i32, %class.TIntermSelection*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN16TIntermTraverser11visitBranchE5VisitP13TIntermBranch(%class.TIntermTraverser*, i32, %class.TIntermBranch*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN16TIntermTraverser11visitSwitchE5VisitP13TIntermSwitch(%class.TIntermTraverser*, i32, %class.TIntermSwitch*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN16TIntermTraverser9visitCaseE5VisitP11TIntermCase(%class.TIntermTraverser*, i32, %class.TIntermCase*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN16TIntermTraverserD2Ev(%class.TIntermTraverser*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.TIntermTraverser, %class.TIntermTraverser* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTV16TIntermTraverser, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.TIntermTraverser, %class.TIntermTraverser* %0, i64 0, i32 7, i32 0, i32 0
  %4 = load %"struct.TIntermTraverser::ParentBlock"*, %"struct.TIntermTraverser::ParentBlock"** %3, align 8
  %5 = icmp eq %"struct.TIntermTraverser::ParentBlock"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.TIntermTraverser::ParentBlock"* %4 to i64
  %8 = getelementptr inbounds %class.TIntermTraverser, %class.TIntermTraverser* %0, i64 0, i32 7, i32 0, i32 1
  %9 = bitcast %"struct.TIntermTraverser::ParentBlock"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.TIntermTraverser::ParentBlock"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #14
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %class.TIntermTraverser, %class.TIntermTraverser* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %13 = load %class.TIntermNode**, %class.TIntermNode*** %12, align 8
  %14 = icmp eq %class.TIntermNode** %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %11
  %16 = ptrtoint %class.TIntermNode** %13 to i64
  %17 = getelementptr inbounds %class.TIntermTraverser, %class.TIntermTraverser* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %18 = bitcast %class.TIntermNode*** %17 to i64*
  store i64 %16, i64* %18, align 8
  br label %19

19:                                               ; preds = %11, %15
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN16TIntermTraverserD0Ev(%class.TIntermTraverser*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.TIntermTraverser, %class.TIntermTraverser* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTV16TIntermTraverser, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.TIntermTraverser, %class.TIntermTraverser* %0, i64 0, i32 7, i32 0, i32 0
  %4 = load %"struct.TIntermTraverser::ParentBlock"*, %"struct.TIntermTraverser::ParentBlock"** %3, align 8
  %5 = icmp eq %"struct.TIntermTraverser::ParentBlock"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.TIntermTraverser::ParentBlock"* %4 to i64
  %8 = getelementptr inbounds %class.TIntermTraverser, %class.TIntermTraverser* %0, i64 0, i32 7, i32 0, i32 1
  %9 = bitcast %"struct.TIntermTraverser::ParentBlock"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.TIntermTraverser::ParentBlock"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #14
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %class.TIntermTraverser, %class.TIntermTraverser* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %13 = load %class.TIntermNode**, %class.TIntermNode*** %12, align 8
  %14 = icmp eq %class.TIntermNode** %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %11
  %16 = ptrtoint %class.TIntermNode** %13 to i64
  %17 = getelementptr inbounds %class.TIntermTraverser, %class.TIntermTraverser* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %18 = bitcast %class.TIntermNode*** %17 to i64*
  store i64 %16, i64* %18, align 8
  br label %19

19:                                               ; preds = %11, %15
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN16TIntermTraverser11visitBinaryE5VisitP13TIntermBinary(%class.TIntermTraverser*, i32, %class.TIntermBinary*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN16TIntermTraverser10visitUnaryE5VisitP12TIntermUnary(%class.TIntermTraverser*, i32, %class.TIntermUnary*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN16TIntermTraverser14visitAggregateE5VisitP16TIntermAggregate(%class.TIntermTraverser*, i32, %class.TIntermAggregate*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN16TIntermTraverser9visitLoopE5VisitP11TIntermLoop(%class.TIntermTraverser*, i32, %class.TIntermLoop*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: optsize
declare %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind optsize
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: optsize
declare dereferenceable(24) %"class.std::__1::basic_string.24"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.24"*, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_122ValidateConstIndexExprD0Ev(%"class.(anonymous namespace)::ValidateConstIndexExpr"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::ValidateConstIndexExpr", %"class.(anonymous namespace)::ValidateConstIndexExpr"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTV16TIntermTraverser, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::ValidateConstIndexExpr", %"class.(anonymous namespace)::ValidateConstIndexExpr"* %0, i64 0, i32 0, i32 7, i32 0, i32 0
  %4 = load %"struct.TIntermTraverser::ParentBlock"*, %"struct.TIntermTraverser::ParentBlock"** %3, align 8
  %5 = icmp eq %"struct.TIntermTraverser::ParentBlock"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.TIntermTraverser::ParentBlock"* %4 to i64
  %8 = getelementptr inbounds %"class.(anonymous namespace)::ValidateConstIndexExpr", %"class.(anonymous namespace)::ValidateConstIndexExpr"* %0, i64 0, i32 0, i32 7, i32 0, i32 1
  %9 = bitcast %"struct.TIntermTraverser::ParentBlock"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.TIntermTraverser::ParentBlock"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #14
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.(anonymous namespace)::ValidateConstIndexExpr", %"class.(anonymous namespace)::ValidateConstIndexExpr"* %0, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0
  %13 = load %class.TIntermNode**, %class.TIntermNode*** %12, align 8
  %14 = icmp eq %class.TIntermNode** %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %11
  %16 = ptrtoint %class.TIntermNode** %13 to i64
  %17 = getelementptr inbounds %"class.(anonymous namespace)::ValidateConstIndexExpr", %"class.(anonymous namespace)::ValidateConstIndexExpr"* %0, i64 0, i32 0, i32 6, i32 0, i32 0, i32 1
  %18 = bitcast %class.TIntermNode*** %17 to i64*
  store i64 %16, i64* %18, align 8
  br label %19

19:                                               ; preds = %11, %15
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_122ValidateConstIndexExpr11visitSymbolEP13TIntermSymbol(%"class.(anonymous namespace)::ValidateConstIndexExpr"* nocapture, %class.TIntermSymbol* nocapture readonly) unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::ValidateConstIndexExpr", %"class.(anonymous namespace)::ValidateConstIndexExpr"* %0, i64 0, i32 1
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %31, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.TIntermSymbol, %class.TIntermSymbol* %1, i64 0, i32 0, i32 1, i32 2
  %8 = load i8, i8* %7, align 2
  %9 = icmp eq i8 %8, 2
  br i1 %9, label %29, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.(anonymous namespace)::ValidateConstIndexExpr", %"class.(anonymous namespace)::ValidateConstIndexExpr"* %0, i64 0, i32 2
  %12 = load %class.TVector.32*, %class.TVector.32** %11, align 8
  %13 = getelementptr inbounds %class.TVector.32, %class.TVector.32* %12, i64 0, i32 0, i32 0, i32 0
  %14 = load %struct.TLoopInfo*, %struct.TLoopInfo** %13, align 8
  %15 = getelementptr inbounds %class.TVector.32, %class.TVector.32* %12, i64 0, i32 0, i32 0, i32 1
  %16 = load %struct.TLoopInfo*, %struct.TLoopInfo** %15, align 8
  %17 = icmp eq %struct.TLoopInfo* %14, %16
  br i1 %17, label %29, label %18

18:                                               ; preds = %10
  %19 = getelementptr inbounds %class.TIntermSymbol, %class.TIntermSymbol* %1, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  br label %23

21:                                               ; preds = %23
  %22 = icmp eq %struct.TLoopInfo* %28, %16
  br i1 %22, label %29, label %23

23:                                               ; preds = %21, %18
  %24 = phi %struct.TLoopInfo* [ %14, %18 ], [ %28, %21 ]
  %25 = getelementptr inbounds %struct.TLoopInfo, %struct.TLoopInfo* %24, i64 0, i32 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, %20
  %28 = getelementptr inbounds %struct.TLoopInfo, %struct.TLoopInfo* %24, i64 1
  br i1 %27, label %29, label %21

29:                                               ; preds = %23, %21, %10, %6
  %30 = phi i8 [ 1, %6 ], [ 0, %10 ], [ 1, %23 ], [ 0, %21 ]
  store i8 %30, i8* %3, align 8
  br label %31

31:                                               ; preds = %2, %29
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5TType11isScalarIntEv(%class.TType*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 3
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 1
  br i1 %4, label %5, label %23

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 4
  %7 = load i8, i8* %6, align 4
  %8 = icmp ugt i8 %7, 1
  br i1 %8, label %23, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 11
  %11 = load %class.TStructure*, %class.TStructure** %10, align 8
  %12 = icmp eq %class.TStructure* %11, null
  br i1 %12, label %13, label %23

13:                                               ; preds = %9
  %14 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 0
  %15 = load i8, i8* %14, align 8
  %16 = icmp ne i8 %15, 38
  %17 = add i8 %15, -15
  %18 = icmp ugt i8 %17, 16
  %19 = and i1 %16, %18
  br i1 %19, label %20, label %23

20:                                               ; preds = %13
  %21 = or i8 %15, 1
  %22 = icmp eq i8 %21, 3
  br label %23

23:                                               ; preds = %13, %1, %5, %9, %20
  %24 = phi i1 [ %22, %20 ], [ false, %13 ], [ false, %9 ], [ false, %5 ], [ false, %1 ]
  ret i1 %24
}

; Function Attrs: optsize
declare void @_ZNK5TType17getCompleteStringEv(%"class.std::__1::basic_string"* sret, %class.TType*) local_unnamed_addr #2

; Function Attrs: noreturn optsize
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: optsize
declare i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator*, i64) local_unnamed_addr #2

; Function Attrs: noreturn nounwind optsize
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree optsize
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

attributes #0 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind optsize readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind optsize }
attributes #11 = { nounwind }
attributes #12 = { optsize }
attributes #13 = { noreturn nounwind optsize }
attributes #14 = { builtin nounwind optsize }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
