; ModuleID = '../../third_party/icu/source/common/ubidiln.cpp'
source_filename = "../../third_party/icu/source/common/ubidiln.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.UBiDi = type { %struct.UBiDi*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, %struct.Opening*, %struct.Para*, %struct.Run*, %struct.Isolate*, i8, i8, i8*, i8*, i8, i32, i32, i8, i8, i8, i16*, i32, i16*, i32, %struct.ImpTabPair*, i32, i32, i32, i32, i32, %struct.Para*, [10 x %struct.Para], i32, %struct.Run*, [1 x %struct.Run], i32, %struct.Isolate*, [5 x %struct.Isolate], %struct.InsertPoints, i32, i32 (i8*, i32)*, i8* }
%struct.Opening = type { i32, i32, i32, i16, i32, i8 }
%struct.ImpTabPair = type opaque
%struct.Para = type { i32, i32 }
%struct.Run = type { i32, i32, i32 }
%struct.Isolate = type { i32, i32, i32, i16 }
%struct.InsertPoints = type { i32, i32, i32, i32, %struct.Point* }
%struct.Point = type { i32, i32 }
%union.BidiMemoryForAllocation = type { i8* }

; Function Attrs: nounwind ssp uwtable
define hidden void @ubidi_setLine_69(%struct.UBiDi*, i32, i32, %struct.UBiDi*, i32*) local_unnamed_addr #0 {
  %6 = icmp eq i32* %4, null
  br i1 %6, label %230, label %7

7:                                                ; preds = %5
  %8 = load i32, i32* %4, align 4
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %10, label %230

10:                                               ; preds = %7
  %11 = icmp eq %struct.UBiDi* %0, null
  br i1 %11, label %16, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 0
  %14 = load %struct.UBiDi*, %struct.UBiDi** %13, align 8
  %15 = icmp eq %struct.UBiDi* %14, %0
  br i1 %15, label %17, label %16

16:                                               ; preds = %10, %12
  store i32 27, i32* %4, align 4
  br label %230

17:                                               ; preds = %12
  %18 = icmp sgt i32 %1, -1
  %19 = icmp sgt i32 %2, %1
  %20 = and i1 %18, %19
  br i1 %20, label %22, label %21

21:                                               ; preds = %17
  store i32 1, i32* %4, align 4
  br label %230

22:                                               ; preds = %17
  %23 = icmp slt i32 %2, 0
  br i1 %23, label %28, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 3
  %26 = load i32, i32* %25, align 4
  %27 = icmp slt i32 %26, %2
  br i1 %27, label %28, label %29

28:                                               ; preds = %24, %22
  store i32 1, i32* %4, align 4
  br label %230

29:                                               ; preds = %24
  %30 = icmp eq %struct.UBiDi* %3, null
  br i1 %30, label %31, label %32

31:                                               ; preds = %29
  store i32 1, i32* %4, align 4
  br label %230

32:                                               ; preds = %29
  %33 = tail call i32 @ubidi_getParagraph_69(%struct.UBiDi* nonnull %0, i32 %1, i32* null, i32* null, i8* null, i32* nonnull %4) #5
  %34 = add nsw i32 %2, -1
  %35 = tail call i32 @ubidi_getParagraph_69(%struct.UBiDi* nonnull %0, i32 %34, i32* null, i32* null, i8* null, i32* nonnull %4) #5
  %36 = icmp eq i32 %33, %35
  br i1 %36, label %38, label %37

37:                                               ; preds = %32
  store i32 1, i32* %4, align 4
  br label %230

38:                                               ; preds = %32
  %39 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %3, i64 0, i32 0
  store %struct.UBiDi* null, %struct.UBiDi** %39, align 8
  %40 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 1
  %41 = load i16*, i16** %40, align 8
  %42 = sext i32 %1 to i64
  %43 = getelementptr inbounds i16, i16* %41, i64 %42
  %44 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %3, i64 0, i32 1
  store i16* %43, i16** %44, align 8
  %45 = sub nsw i32 %2, %1
  %46 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %3, i64 0, i32 3
  store i32 %45, i32* %46, align 4
  %47 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %3, i64 0, i32 2
  store i32 %45, i32* %47, align 8
  %48 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %3, i64 0, i32 4
  store i32 %45, i32* %48, align 8
  %49 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 26
  %50 = load i8, i8* %49, align 2
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %58, label %52

52:                                               ; preds = %38
  %53 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 37
  %54 = load %struct.Para*, %struct.Para** %53, align 8
  %55 = getelementptr inbounds %struct.Para, %struct.Para* %54, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp sgt i32 %56, %1
  br i1 %57, label %58, label %61

58:                                               ; preds = %38, %52
  %59 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 25
  %60 = load i8, i8* %59, align 1
  br label %63

61:                                               ; preds = %52
  %62 = tail call zeroext i8 @ubidi_getParaLevelAtIndex_69(%struct.UBiDi* nonnull %0, i32 %1) #5
  br label %63

63:                                               ; preds = %61, %58
  %64 = phi i8 [ %60, %58 ], [ %62, %61 ]
  %65 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %3, i64 0, i32 25
  store i8 %64, i8* %65, align 1
  %66 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 36
  %67 = load i32, i32* %66, align 8
  %68 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %3, i64 0, i32 36
  store i32 %67, i32* %68, align 8
  %69 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %3, i64 0, i32 40
  store %struct.Run* null, %struct.Run** %69, align 8
  %70 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %3, i64 0, i32 33
  store i32 0, i32* %70, align 4
  %71 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 22
  %72 = load i32, i32* %71, align 4
  %73 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %3, i64 0, i32 22
  store i32 %72, i32* %73, align 4
  %74 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 23
  %75 = load i32, i32* %74, align 8
  %76 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %3, i64 0, i32 23
  store i32 %75, i32* %76, align 8
  %77 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %3, i64 0, i32 46
  store i32 0, i32* %77, align 8
  %78 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 46
  %79 = load i32, i32* %78, align 8
  %80 = icmp sgt i32 %79, 0
  br i1 %80, label %81, label %128

81:                                               ; preds = %63
  %82 = sext i32 %2 to i64
  %83 = sub nsw i64 %82, %42
  %84 = xor i64 %42, -1
  %85 = and i64 %83, 1
  %86 = sub nsw i64 0, %82
  %87 = icmp eq i64 %84, %86
  br i1 %87, label %110, label %88

88:                                               ; preds = %81
  %89 = sub nsw i64 %83, %85
  br label %90

90:                                               ; preds = %234, %88
  %91 = phi i32 [ 0, %88 ], [ %235, %234 ]
  %92 = phi i64 [ %42, %88 ], [ %236, %234 ]
  %93 = phi i64 [ %89, %88 ], [ %237, %234 ]
  %94 = load i16*, i16** %40, align 8
  %95 = getelementptr inbounds i16, i16* %94, i64 %92
  %96 = load i16, i16* %95, align 2
  %97 = and i16 %96, -4
  %98 = icmp eq i16 %97, 8204
  br i1 %98, label %100, label %99

99:                                               ; preds = %90
  switch i16 %96, label %102 [
    i16 8297, label %100
    i16 8296, label %100
    i16 8295, label %100
    i16 8294, label %100
    i16 8238, label %100
    i16 8237, label %100
    i16 8236, label %100
    i16 8235, label %100
    i16 8234, label %100
  ]

100:                                              ; preds = %99, %99, %99, %99, %99, %99, %99, %99, %99, %90
  %101 = add nsw i32 %91, 1
  store i32 %101, i32* %77, align 8
  br label %102

102:                                              ; preds = %99, %100
  %103 = phi i32 [ %91, %99 ], [ %101, %100 ]
  %104 = add nsw i64 %92, 1
  %105 = load i16*, i16** %40, align 8
  %106 = getelementptr inbounds i16, i16* %105, i64 %104
  %107 = load i16, i16* %106, align 2
  %108 = and i16 %107, -4
  %109 = icmp eq i16 %108, 8204
  br i1 %109, label %232, label %231

110:                                              ; preds = %234, %81
  %111 = phi i32 [ undef, %81 ], [ %235, %234 ]
  %112 = phi i32 [ 0, %81 ], [ %235, %234 ]
  %113 = phi i64 [ %42, %81 ], [ %236, %234 ]
  %114 = icmp eq i64 %85, 0
  br i1 %114, label %124, label %115

115:                                              ; preds = %110
  %116 = load i16*, i16** %40, align 8
  %117 = getelementptr inbounds i16, i16* %116, i64 %113
  %118 = load i16, i16* %117, align 2
  %119 = and i16 %118, -4
  %120 = icmp eq i16 %119, 8204
  br i1 %120, label %122, label %121

121:                                              ; preds = %115
  switch i16 %118, label %124 [
    i16 8297, label %122
    i16 8296, label %122
    i16 8295, label %122
    i16 8294, label %122
    i16 8238, label %122
    i16 8237, label %122
    i16 8236, label %122
    i16 8235, label %122
    i16 8234, label %122
  ]

122:                                              ; preds = %121, %121, %121, %121, %121, %121, %121, %121, %121, %115
  %123 = add nsw i32 %112, 1
  store i32 %123, i32* %77, align 8
  br label %124

124:                                              ; preds = %122, %121, %110
  %125 = phi i32 [ %111, %110 ], [ %112, %121 ], [ %123, %122 ]
  %126 = load i32, i32* %48, align 8
  %127 = sub nsw i32 %126, %125
  store i32 %127, i32* %48, align 8
  br label %128

128:                                              ; preds = %124, %63
  %129 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 19
  %130 = load i8*, i8** %129, align 8
  %131 = getelementptr inbounds i8, i8* %130, i64 %42
  %132 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %3, i64 0, i32 19
  store i8* %131, i8** %132, align 8
  %133 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 20
  %134 = load i8*, i8** %133, align 8
  %135 = getelementptr inbounds i8, i8* %134, i64 %42
  %136 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %3, i64 0, i32 20
  store i8* %135, i8** %136, align 8
  %137 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %3, i64 0, i32 39
  store i32 -1, i32* %137, align 8
  %138 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 32
  %139 = load i32, i32* %138, align 8
  %140 = icmp eq i32 %139, 2
  br i1 %140, label %155, label %141

141:                                              ; preds = %128
  %142 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %3, i64 0, i32 32
  store i32 %139, i32* %142, align 8
  %143 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 35
  %144 = load i32, i32* %143, align 4
  %145 = icmp sgt i32 %144, %1
  br i1 %145, label %148, label %146

146:                                              ; preds = %141
  %147 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %3, i64 0, i32 35
  store i32 0, i32* %147, align 4
  br label %229

148:                                              ; preds = %141
  %149 = icmp slt i32 %144, %2
  br i1 %149, label %150, label %153

150:                                              ; preds = %148
  %151 = sub nsw i32 %144, %1
  %152 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %3, i64 0, i32 35
  store i32 %151, i32* %152, align 4
  br label %229

153:                                              ; preds = %148
  %154 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %3, i64 0, i32 35
  store i32 %45, i32* %154, align 4
  br label %229

155:                                              ; preds = %128
  %156 = load i32, i32* %46, align 4
  %157 = add nsw i32 %156, -1
  %158 = sext i32 %157 to i64
  %159 = getelementptr inbounds i8, i8* %131, i64 %158
  %160 = load i8, i8* %159, align 1
  %161 = icmp eq i8 %160, 7
  br i1 %161, label %188, label %162

162:                                              ; preds = %155
  %163 = sext i32 %156 to i64
  br label %164

164:                                              ; preds = %167, %162
  %165 = phi i64 [ %163, %162 ], [ %168, %167 ]
  %166 = icmp sgt i64 %165, 0
  br i1 %166, label %167, label %175

167:                                              ; preds = %164
  %168 = add nsw i64 %165, -1
  %169 = getelementptr inbounds i8, i8* %131, i64 %168
  %170 = load i8, i8* %169, align 1
  %171 = zext i8 %170 to i64
  %172 = shl i64 1, %171
  %173 = and i64 %172, 8248192
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %175, label %164

175:                                              ; preds = %167, %164
  %176 = shl i64 %165, 32
  %177 = ashr exact i64 %176, 32
  br label %178

178:                                              ; preds = %181, %175
  %179 = phi i64 [ %182, %181 ], [ %177, %175 ]
  %180 = icmp sgt i64 %179, 0
  br i1 %180, label %181, label %186

181:                                              ; preds = %178
  %182 = add nsw i64 %179, -1
  %183 = getelementptr inbounds i8, i8* %135, i64 %182
  %184 = load i8, i8* %183, align 1
  %185 = icmp eq i8 %184, %64
  br i1 %185, label %178, label %186

186:                                              ; preds = %181, %178
  %187 = trunc i64 %179 to i32
  br label %188

188:                                              ; preds = %155, %186
  %189 = phi i32 [ %187, %186 ], [ %156, %155 ]
  %190 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %3, i64 0, i32 35
  store i32 %189, i32* %190, align 4
  %191 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %3, i64 0, i32 35
  %192 = icmp eq i32 %189, 0
  br i1 %192, label %193, label %195

193:                                              ; preds = %188
  %194 = and i8 %64, 1
  br label %219

195:                                              ; preds = %188
  %196 = load i8, i8* %135, align 1
  %197 = and i8 %196, 1
  %198 = icmp sge i32 %189, %45
  %199 = and i8 %64, 1
  %200 = icmp eq i8 %199, %197
  %201 = or i1 %198, %200
  br i1 %201, label %202, label %206

202:                                              ; preds = %195
  %203 = icmp eq i32 %189, 1
  br i1 %203, label %219, label %204

204:                                              ; preds = %202
  %205 = zext i32 %189 to i64
  br label %210

206:                                              ; preds = %195
  %207 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %3, i64 0, i32 32
  store i32 2, i32* %207, align 8
  br label %229

208:                                              ; preds = %210
  %209 = icmp eq i64 %216, %205
  br i1 %209, label %219, label %210

210:                                              ; preds = %204, %208
  %211 = phi i64 [ 1, %204 ], [ %216, %208 ]
  %212 = getelementptr inbounds i8, i8* %135, i64 %211
  %213 = load i8, i8* %212, align 1
  %214 = and i8 %213, 1
  %215 = icmp eq i8 %214, %197
  %216 = add nuw nsw i64 %211, 1
  br i1 %215, label %208, label %217

217:                                              ; preds = %210
  %218 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %3, i64 0, i32 32
  store i32 2, i32* %218, align 8
  br label %229

219:                                              ; preds = %208, %202, %193
  %220 = phi i8 [ %194, %193 ], [ %197, %202 ], [ %197, %208 ]
  %221 = zext i8 %220 to i32
  %222 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %3, i64 0, i32 32
  store i32 %221, i32* %222, align 8
  %223 = icmp eq i8 %220, 1
  br i1 %223, label %227, label %224

224:                                              ; preds = %219
  %225 = add i8 %64, 1
  %226 = and i8 %225, -2
  store i8 %226, i8* %65, align 1
  store i32 0, i32* %191, align 4
  br label %229

227:                                              ; preds = %219
  %228 = or i8 %64, 1
  store i8 %228, i8* %65, align 1
  store i32 0, i32* %191, align 4
  br label %229

229:                                              ; preds = %217, %206, %224, %227, %146, %153, %150
  store %struct.UBiDi* %0, %struct.UBiDi** %39, align 8
  br label %230

230:                                              ; preds = %5, %7, %229, %37, %31, %28, %21, %16
  ret void

231:                                              ; preds = %102
  switch i16 %107, label %234 [
    i16 8297, label %232
    i16 8296, label %232
    i16 8295, label %232
    i16 8294, label %232
    i16 8238, label %232
    i16 8237, label %232
    i16 8236, label %232
    i16 8235, label %232
    i16 8234, label %232
  ]

232:                                              ; preds = %231, %231, %231, %231, %231, %231, %231, %231, %231, %102
  %233 = add nsw i32 %103, 1
  store i32 %233, i32* %77, align 8
  br label %234

234:                                              ; preds = %232, %231
  %235 = phi i32 [ %103, %231 ], [ %233, %232 ]
  %236 = add nsw i64 %92, 2
  %237 = add i64 %93, -2
  %238 = icmp eq i64 %237, 0
  br i1 %238, label %110, label %90
}

declare i32 @ubidi_getParagraph_69(%struct.UBiDi*, i32, i32*, i32*, i8*, i32*) local_unnamed_addr #1

declare zeroext i8 @ubidi_getParaLevelAtIndex_69(%struct.UBiDi*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @ubidi_getLevelAt_69(%struct.UBiDi*, i32) local_unnamed_addr #0 {
  %3 = icmp eq %struct.UBiDi* %0, null
  br i1 %3, label %51, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 0
  %6 = load %struct.UBiDi*, %struct.UBiDi** %5, align 8
  %7 = icmp eq %struct.UBiDi* %6, %0
  br i1 %7, label %16, label %8

8:                                                ; preds = %4
  %9 = icmp eq %struct.UBiDi* %6, null
  br i1 %9, label %51, label %10

10:                                               ; preds = %8
  %11 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %6, i64 0, i32 0
  %12 = load %struct.UBiDi*, %struct.UBiDi** %11, align 8
  %13 = icmp ne %struct.UBiDi* %12, %6
  %14 = icmp slt i32 %1, 0
  %15 = or i1 %14, %13
  br i1 %15, label %51, label %18

16:                                               ; preds = %4
  %17 = icmp slt i32 %1, 0
  br i1 %17, label %51, label %18

18:                                               ; preds = %10, %16
  %19 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 3
  %20 = load i32, i32* %19, align 4
  %21 = icmp sgt i32 %20, %1
  br i1 %21, label %22, label %51

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 32
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 2
  br i1 %25, label %26, label %30

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 35
  %28 = load i32, i32* %27, align 4
  %29 = icmp sgt i32 %28, %1
  br i1 %29, label %45, label %30

30:                                               ; preds = %26, %22
  %31 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 26
  %32 = load i8, i8* %31, align 2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %40, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 37
  %36 = load %struct.Para*, %struct.Para** %35, align 8
  %37 = getelementptr inbounds %struct.Para, %struct.Para* %36, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp sgt i32 %38, %1
  br i1 %39, label %40, label %43

40:                                               ; preds = %30, %34
  %41 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 25
  %42 = load i8, i8* %41, align 1
  br label %51

43:                                               ; preds = %34
  %44 = tail call zeroext i8 @ubidi_getParaLevelAtIndex_69(%struct.UBiDi* nonnull %0, i32 %1) #5
  br label %51

45:                                               ; preds = %26
  %46 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 20
  %47 = load i8*, i8** %46, align 8
  %48 = sext i32 %1 to i64
  %49 = getelementptr inbounds i8, i8* %47, i64 %48
  %50 = load i8, i8* %49, align 1
  br label %51

51:                                               ; preds = %40, %43, %16, %2, %8, %18, %10, %45
  %52 = phi i8 [ %50, %45 ], [ 0, %10 ], [ 0, %18 ], [ 0, %8 ], [ 0, %2 ], [ 0, %16 ], [ %42, %40 ], [ %44, %43 ]
  ret i8 %52
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @ubidi_getLevels_69(%struct.UBiDi*, i32*) local_unnamed_addr #0 {
  %3 = icmp eq i32* %1, null
  br i1 %3, label %58, label %4

4:                                                ; preds = %2
  %5 = load i32, i32* %1, align 4
  %6 = icmp slt i32 %5, 1
  br i1 %6, label %7, label %58

7:                                                ; preds = %4
  %8 = icmp eq %struct.UBiDi* %0, null
  br i1 %8, label %19, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 0
  %11 = load %struct.UBiDi*, %struct.UBiDi** %10, align 8
  %12 = icmp eq %struct.UBiDi* %11, %0
  br i1 %12, label %20, label %13

13:                                               ; preds = %9
  %14 = icmp eq %struct.UBiDi* %11, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %11, i64 0, i32 0
  %17 = load %struct.UBiDi*, %struct.UBiDi** %16, align 8
  %18 = icmp eq %struct.UBiDi* %17, %11
  br i1 %18, label %20, label %19

19:                                               ; preds = %13, %7, %15
  store i32 27, i32* %1, align 4
  br label %58

20:                                               ; preds = %15, %9
  %21 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 3
  %22 = load i32, i32* %21, align 4
  %23 = icmp slt i32 %22, 1
  br i1 %23, label %24, label %25

24:                                               ; preds = %20
  store i32 1, i32* %1, align 4
  br label %58

25:                                               ; preds = %20
  %26 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 35
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %22, %27
  br i1 %28, label %29, label %32

29:                                               ; preds = %25
  %30 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 20
  %31 = load i8*, i8** %30, align 8
  br label %58

32:                                               ; preds = %25
  %33 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 12
  %34 = bitcast i8** %33 to %union.BidiMemoryForAllocation*
  %35 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 6
  %36 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 17
  %37 = load i8, i8* %36, align 8
  %38 = tail call signext i8 @ubidi_getMemory_69(%union.BidiMemoryForAllocation* %34, i32* %35, i8 signext %37, i32 %22) #5
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %57, label %40

40:                                               ; preds = %32
  %41 = load i8*, i8** %33, align 8
  %42 = icmp sgt i32 %27, 0
  br i1 %42, label %43, label %49

43:                                               ; preds = %40
  %44 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 20
  %45 = load i8*, i8** %44, align 8
  %46 = icmp eq i8* %41, %45
  br i1 %46, label %49, label %47

47:                                               ; preds = %43
  %48 = sext i32 %27 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %41, i8* align 1 %45, i64 %48, i1 false)
  br label %49

49:                                               ; preds = %43, %47, %40
  %50 = sext i32 %27 to i64
  %51 = getelementptr inbounds i8, i8* %41, i64 %50
  %52 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 25
  %53 = load i8, i8* %52, align 1
  %54 = sub nsw i32 %22, %27
  %55 = sext i32 %54 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %51, i8 %53, i64 %55, i1 false)
  store i32 %22, i32* %26, align 4
  %56 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 20
  store i8* %41, i8** %56, align 8
  br label %58

57:                                               ; preds = %32
  store i32 7, i32* %1, align 4
  br label %58

58:                                               ; preds = %2, %4, %57, %49, %29, %24, %19
  %59 = phi i8* [ null, %24 ], [ %31, %29 ], [ %41, %49 ], [ null, %57 ], [ null, %19 ], [ null, %4 ], [ null, %2 ]
  ret i8* %59
}

declare signext i8 @ubidi_getMemory_69(%union.BidiMemoryForAllocation*, i32*, i8 signext, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @ubidi_getLogicalRun_69(%struct.UBiDi*, i32, i32*, i8*) local_unnamed_addr #0 {
  %5 = icmp slt i32 %1, 0
  br i1 %5, label %103, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = icmp sle i32 %8, %1
  %10 = icmp eq %struct.UBiDi* %0, null
  %11 = or i1 %10, %9
  br i1 %11, label %103, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 0
  %14 = load %struct.UBiDi*, %struct.UBiDi** %13, align 8
  %15 = icmp eq %struct.UBiDi* %14, %0
  br i1 %15, label %22, label %16

16:                                               ; preds = %12
  %17 = icmp eq %struct.UBiDi* %14, null
  br i1 %17, label %103, label %18

18:                                               ; preds = %16
  %19 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %14, i64 0, i32 0
  %20 = load %struct.UBiDi*, %struct.UBiDi** %19, align 8
  %21 = icmp eq %struct.UBiDi* %20, %14
  br i1 %21, label %22, label %103

22:                                               ; preds = %12, %18
  %23 = tail call signext i8 @ubidi_getRuns_69(%struct.UBiDi* nonnull %0, i32* undef) #5
  %24 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 39
  %25 = load i32, i32* %24, align 8
  %26 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 40
  %27 = load %struct.Run*, %struct.Run** %26, align 8
  %28 = getelementptr inbounds %struct.Run, %struct.Run* %27, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp sgt i32 %25, 0
  br i1 %30, label %31, label %58

31:                                               ; preds = %22
  %32 = sext i32 %25 to i64
  %33 = getelementptr inbounds %struct.Run, %struct.Run* %27, i64 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = and i32 %29, 2147483647
  %36 = add i32 %34, %35
  %37 = icmp sgt i32 %35, %1
  %38 = icmp sle i32 %36, %1
  %39 = or i1 %38, %37
  %40 = icmp ne i32 %25, 1
  %41 = and i1 %39, %40
  br i1 %41, label %42, label %58

42:                                               ; preds = %31, %42
  %43 = phi i64 [ %54, %42 ], [ 1, %31 ]
  %44 = phi i32 [ %48, %42 ], [ %34, %31 ]
  %45 = getelementptr inbounds %struct.Run, %struct.Run* %27, i64 %43, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %struct.Run, %struct.Run* %27, i64 %43, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = and i32 %46, 2147483647
  %50 = sub i32 %48, %44
  %51 = add i32 %50, %49
  %52 = icmp sgt i32 %49, %1
  %53 = icmp sle i32 %51, %1
  %54 = add nuw nsw i64 %43, 1
  %55 = or i1 %53, %52
  %56 = icmp slt i64 %54, %32
  %57 = and i1 %55, %56
  br i1 %57, label %42, label %58

58:                                               ; preds = %42, %31, %22
  %59 = phi i32 [ 0, %22 ], [ %36, %31 ], [ %51, %42 ]
  %60 = phi i32 [ %29, %22 ], [ %29, %31 ], [ %46, %42 ]
  %61 = icmp eq i32* %2, null
  br i1 %61, label %63, label %62

62:                                               ; preds = %58
  store i32 %59, i32* %2, align 4
  br label %63

63:                                               ; preds = %58, %62
  %64 = icmp eq i8* %3, null
  br i1 %64, label %103, label %65

65:                                               ; preds = %63
  %66 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 22
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, 3
  br i1 %68, label %69, label %72

69:                                               ; preds = %65
  %70 = lshr i32 %60, 31
  %71 = trunc i32 %70 to i8
  store i8 %71, i8* %3, align 1
  br label %103

72:                                               ; preds = %65
  %73 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 32
  %74 = load i32, i32* %73, align 8
  %75 = icmp eq i32 %74, 2
  br i1 %75, label %76, label %80

76:                                               ; preds = %72
  %77 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 35
  %78 = load i32, i32* %77, align 4
  %79 = icmp sgt i32 %78, %1
  br i1 %79, label %97, label %80

80:                                               ; preds = %76, %72
  %81 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 26
  %82 = load i8, i8* %81, align 2
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %90, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 37
  %86 = load %struct.Para*, %struct.Para** %85, align 8
  %87 = getelementptr inbounds %struct.Para, %struct.Para* %86, i64 0, i32 0
  %88 = load i32, i32* %87, align 4
  %89 = icmp sgt i32 %88, %1
  br i1 %89, label %90, label %93

90:                                               ; preds = %80, %84
  %91 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 25
  %92 = load i8, i8* %91, align 1
  br label %95

93:                                               ; preds = %84
  %94 = tail call zeroext i8 @ubidi_getParaLevelAtIndex_69(%struct.UBiDi* %0, i32 %1) #5
  br label %95

95:                                               ; preds = %93, %90
  %96 = phi i8 [ %92, %90 ], [ %94, %93 ]
  store i8 %96, i8* %3, align 1
  br label %103

97:                                               ; preds = %76
  %98 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 20
  %99 = load i8*, i8** %98, align 8
  %100 = sext i32 %1 to i64
  %101 = getelementptr inbounds i8, i8* %99, i64 %100
  %102 = load i8, i8* %101, align 1
  store i8 %102, i8* %3, align 1
  br label %103

103:                                              ; preds = %6, %16, %18, %4, %95, %97, %69, %63
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ubidi_countRuns_69(%struct.UBiDi*, i32*) local_unnamed_addr #0 {
  %3 = icmp eq i32* %1, null
  br i1 %3, label %27, label %4

4:                                                ; preds = %2
  %5 = load i32, i32* %1, align 4
  %6 = icmp slt i32 %5, 1
  br i1 %6, label %7, label %27

7:                                                ; preds = %4
  %8 = icmp eq %struct.UBiDi* %0, null
  br i1 %8, label %19, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 0
  %11 = load %struct.UBiDi*, %struct.UBiDi** %10, align 8
  %12 = icmp eq %struct.UBiDi* %11, %0
  br i1 %12, label %20, label %13

13:                                               ; preds = %9
  %14 = icmp eq %struct.UBiDi* %11, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %11, i64 0, i32 0
  %17 = load %struct.UBiDi*, %struct.UBiDi** %16, align 8
  %18 = icmp eq %struct.UBiDi* %17, %11
  br i1 %18, label %20, label %19

19:                                               ; preds = %13, %7, %15
  store i32 27, i32* %1, align 4
  br label %27

20:                                               ; preds = %9, %15
  %21 = tail call signext i8 @ubidi_getRuns_69(%struct.UBiDi* nonnull %0, i32* undef)
  %22 = load i32, i32* %1, align 4
  %23 = icmp slt i32 %22, 1
  br i1 %23, label %24, label %27

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 39
  %26 = load i32, i32* %25, align 8
  br label %27

27:                                               ; preds = %20, %2, %4, %24, %19
  %28 = phi i32 [ %26, %24 ], [ -1, %19 ], [ -1, %4 ], [ -1, %2 ], [ -1, %20 ]
  ret i32 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @ubidi_getRuns_69(%struct.UBiDi*, i32* nocapture readnone) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 39
  %4 = load i32, i32* %3, align 8
  %5 = icmp sgt i32 %4, -1
  br i1 %5, label %485, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 32
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 2
  br i1 %9, label %22, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 25
  %12 = load i8, i8* %11, align 1
  %13 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 41, i64 0
  %14 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 40
  store %struct.Run* %13, %struct.Run** %14, align 8
  store i32 1, i32* %3, align 8
  %15 = zext i8 %12 to i32
  %16 = shl i32 %15, 31
  %17 = getelementptr inbounds %struct.Run, %struct.Run* %13, i64 0, i32 0
  store i32 %16, i32* %17, align 4
  %18 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 3
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 41, i64 0, i32 1
  store i32 %19, i32* %20, align 4
  %21 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 41, i64 0, i32 2
  store i32 0, i32* %21, align 4
  br label %382

22:                                               ; preds = %6
  %23 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 3
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 20
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 35
  %28 = load i32, i32* %27, align 4
  %29 = icmp sgt i32 %28, 0
  br i1 %29, label %30, label %145

30:                                               ; preds = %22
  %31 = zext i32 %28 to i64
  %32 = icmp ult i32 %28, 8
  br i1 %32, label %116, label %33

33:                                               ; preds = %30
  %34 = and i64 %31, 4294967288
  %35 = add nsw i64 %34, -8
  %36 = lshr exact i64 %35, 3
  %37 = add nuw nsw i64 %36, 1
  %38 = and i64 %37, 1
  %39 = icmp eq i64 %35, 0
  br i1 %39, label %80, label %40

40:                                               ; preds = %33
  %41 = sub nuw nsw i64 %37, %38
  br label %42

42:                                               ; preds = %42, %40
  %43 = phi i64 [ 0, %40 ], [ %77, %42 ]
  %44 = phi <4 x i8> [ <i8 undef, i8 undef, i8 undef, i8 -2>, %40 ], [ %68, %42 ]
  %45 = phi <4 x i32> [ zeroinitializer, %40 ], [ %75, %42 ]
  %46 = phi <4 x i32> [ zeroinitializer, %40 ], [ %76, %42 ]
  %47 = phi i64 [ %41, %40 ], [ %78, %42 ]
  %48 = getelementptr inbounds i8, i8* %26, i64 %43
  %49 = bitcast i8* %48 to <4 x i8>*
  %50 = load <4 x i8>, <4 x i8>* %49, align 1
  %51 = getelementptr inbounds i8, i8* %48, i64 4
  %52 = bitcast i8* %51 to <4 x i8>*
  %53 = load <4 x i8>, <4 x i8>* %52, align 1
  %54 = shufflevector <4 x i8> %44, <4 x i8> %50, <4 x i32> <i32 3, i32 4, i32 5, i32 6>
  %55 = shufflevector <4 x i8> %50, <4 x i8> %53, <4 x i32> <i32 3, i32 4, i32 5, i32 6>
  %56 = icmp ne <4 x i8> %50, %54
  %57 = icmp ne <4 x i8> %53, %55
  %58 = zext <4 x i1> %56 to <4 x i32>
  %59 = zext <4 x i1> %57 to <4 x i32>
  %60 = add nuw nsw <4 x i32> %45, %58
  %61 = add nuw nsw <4 x i32> %46, %59
  %62 = or i64 %43, 8
  %63 = getelementptr inbounds i8, i8* %26, i64 %62
  %64 = bitcast i8* %63 to <4 x i8>*
  %65 = load <4 x i8>, <4 x i8>* %64, align 1
  %66 = getelementptr inbounds i8, i8* %63, i64 4
  %67 = bitcast i8* %66 to <4 x i8>*
  %68 = load <4 x i8>, <4 x i8>* %67, align 1
  %69 = shufflevector <4 x i8> %53, <4 x i8> %65, <4 x i32> <i32 3, i32 4, i32 5, i32 6>
  %70 = shufflevector <4 x i8> %65, <4 x i8> %68, <4 x i32> <i32 3, i32 4, i32 5, i32 6>
  %71 = icmp ne <4 x i8> %65, %69
  %72 = icmp ne <4 x i8> %68, %70
  %73 = zext <4 x i1> %71 to <4 x i32>
  %74 = zext <4 x i1> %72 to <4 x i32>
  %75 = add nuw nsw <4 x i32> %60, %73
  %76 = add nuw nsw <4 x i32> %61, %74
  %77 = add i64 %43, 16
  %78 = add i64 %47, -2
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %80, label %42, !llvm.loop !2

80:                                               ; preds = %42, %33
  %81 = phi <4 x i8> [ undef, %33 ], [ %68, %42 ]
  %82 = phi <4 x i32> [ undef, %33 ], [ %75, %42 ]
  %83 = phi <4 x i32> [ undef, %33 ], [ %76, %42 ]
  %84 = phi i64 [ 0, %33 ], [ %77, %42 ]
  %85 = phi <4 x i8> [ <i8 undef, i8 undef, i8 undef, i8 -2>, %33 ], [ %68, %42 ]
  %86 = phi <4 x i32> [ zeroinitializer, %33 ], [ %75, %42 ]
  %87 = phi <4 x i32> [ zeroinitializer, %33 ], [ %76, %42 ]
  %88 = icmp eq i64 %38, 0
  br i1 %88, label %104, label %89

89:                                               ; preds = %80
  %90 = getelementptr inbounds i8, i8* %26, i64 %84
  %91 = bitcast i8* %90 to <4 x i8>*
  %92 = load <4 x i8>, <4 x i8>* %91, align 1
  %93 = getelementptr inbounds i8, i8* %90, i64 4
  %94 = bitcast i8* %93 to <4 x i8>*
  %95 = load <4 x i8>, <4 x i8>* %94, align 1
  %96 = shufflevector <4 x i8> %92, <4 x i8> %95, <4 x i32> <i32 3, i32 4, i32 5, i32 6>
  %97 = icmp ne <4 x i8> %95, %96
  %98 = zext <4 x i1> %97 to <4 x i32>
  %99 = add nuw nsw <4 x i32> %87, %98
  %100 = shufflevector <4 x i8> %85, <4 x i8> %92, <4 x i32> <i32 3, i32 4, i32 5, i32 6>
  %101 = icmp ne <4 x i8> %92, %100
  %102 = zext <4 x i1> %101 to <4 x i32>
  %103 = add nuw nsw <4 x i32> %86, %102
  br label %104

104:                                              ; preds = %80, %89
  %105 = phi <4 x i8> [ %81, %80 ], [ %95, %89 ]
  %106 = phi <4 x i32> [ %82, %80 ], [ %103, %89 ]
  %107 = phi <4 x i32> [ %83, %80 ], [ %99, %89 ]
  %108 = add nuw <4 x i32> %107, %106
  %109 = shufflevector <4 x i32> %108, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %110 = add <4 x i32> %108, %109
  %111 = shufflevector <4 x i32> %110, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %112 = add <4 x i32> %110, %111
  %113 = extractelement <4 x i32> %112, i32 0
  %114 = icmp eq i64 %34, %31
  %115 = extractelement <4 x i8> %105, i32 3
  br i1 %114, label %131, label %116

116:                                              ; preds = %104, %30
  %117 = phi i64 [ 0, %30 ], [ %34, %104 ]
  %118 = phi i8 [ -2, %30 ], [ %115, %104 ]
  %119 = phi i32 [ 0, %30 ], [ %113, %104 ]
  br label %120

120:                                              ; preds = %116, %120
  %121 = phi i64 [ %129, %120 ], [ %117, %116 ]
  %122 = phi i8 [ %125, %120 ], [ %118, %116 ]
  %123 = phi i32 [ %128, %120 ], [ %119, %116 ]
  %124 = getelementptr inbounds i8, i8* %26, i64 %121
  %125 = load i8, i8* %124, align 1
  %126 = icmp ne i8 %125, %122
  %127 = zext i1 %126 to i32
  %128 = add nuw nsw i32 %123, %127
  %129 = add nuw nsw i64 %121, 1
  %130 = icmp eq i64 %129, %31
  br i1 %130, label %131, label %120, !llvm.loop !4

131:                                              ; preds = %120, %104
  %132 = phi i32 [ %113, %104 ], [ %128, %120 ]
  %133 = icmp eq i32 %132, 1
  %134 = icmp eq i32 %24, %28
  %135 = and i1 %134, %133
  br i1 %135, label %136, label %145

136:                                              ; preds = %131
  %137 = load i8, i8* %26, align 1
  %138 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 41, i64 0
  %139 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 40
  store %struct.Run* %138, %struct.Run** %139, align 8
  store i32 1, i32* %3, align 8
  %140 = zext i8 %137 to i32
  %141 = shl i32 %140, 31
  %142 = getelementptr inbounds %struct.Run, %struct.Run* %138, i64 0, i32 0
  store i32 %141, i32* %142, align 4
  %143 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 41, i64 0, i32 1
  store i32 %24, i32* %143, align 4
  %144 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 41, i64 0, i32 2
  store i32 0, i32* %144, align 4
  br label %382

145:                                              ; preds = %22, %131
  %146 = phi i32 [ %132, %131 ], [ 0, %22 ]
  %147 = icmp sgt i32 %24, %28
  %148 = zext i1 %147 to i32
  %149 = add i32 %146, %148
  %150 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 15
  %151 = bitcast %struct.Run** %150 to %union.BidiMemoryForAllocation*
  %152 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 9
  %153 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 18
  %154 = load i8, i8* %153, align 1
  %155 = mul i32 %149, 12
  %156 = tail call signext i8 @ubidi_getMemory_69(%union.BidiMemoryForAllocation* %151, i32* %152, i8 signext %154, i32 %155) #5
  %157 = icmp eq i8 %156, 0
  br i1 %157, label %485, label %158

158:                                              ; preds = %145
  %159 = load %struct.Run*, %struct.Run** %150, align 8
  %160 = sext i32 %28 to i64
  br label %161

161:                                              ; preds = %181, %158
  %162 = phi i64 [ %188, %181 ], [ 0, %158 ]
  %163 = phi i32 [ %183, %181 ], [ 0, %158 ]
  %164 = phi i8 [ %170, %181 ], [ 126, %158 ]
  %165 = phi i8 [ %172, %181 ], [ 0, %158 ]
  %166 = sext i32 %163 to i64
  %167 = getelementptr inbounds i8, i8* %26, i64 %166
  %168 = load i8, i8* %167, align 1
  %169 = icmp ult i8 %168, %164
  %170 = select i1 %169, i8 %168, i8 %164
  %171 = icmp ugt i8 %168, %165
  %172 = select i1 %171, i8 %168, i8 %165
  br label %173

173:                                              ; preds = %177, %161
  %174 = phi i64 [ %175, %177 ], [ %166, %161 ]
  %175 = add nsw i64 %174, 1
  %176 = icmp slt i64 %175, %160
  br i1 %176, label %177, label %181

177:                                              ; preds = %173
  %178 = getelementptr inbounds i8, i8* %26, i64 %175
  %179 = load i8, i8* %178, align 1
  %180 = icmp eq i8 %179, %168
  br i1 %180, label %173, label %181

181:                                              ; preds = %173, %177
  %182 = phi i1 [ false, %173 ], [ true, %177 ]
  %183 = trunc i64 %175 to i32
  %184 = getelementptr inbounds %struct.Run, %struct.Run* %159, i64 %162, i32 0
  store i32 %163, i32* %184, align 4
  %185 = sub nsw i32 %183, %163
  %186 = getelementptr inbounds %struct.Run, %struct.Run* %159, i64 %162, i32 1
  store i32 %185, i32* %186, align 4
  %187 = getelementptr inbounds %struct.Run, %struct.Run* %159, i64 %162, i32 2
  store i32 0, i32* %187, align 4
  %188 = add nuw i64 %162, 1
  br i1 %182, label %161, label %189

189:                                              ; preds = %181
  %190 = trunc i64 %188 to i32
  br i1 %147, label %191, label %200

191:                                              ; preds = %189
  %192 = and i64 %188, 4294967295
  %193 = getelementptr inbounds %struct.Run, %struct.Run* %159, i64 %192, i32 0
  store i32 %28, i32* %193, align 4
  %194 = sub nsw i32 %24, %28
  %195 = getelementptr inbounds %struct.Run, %struct.Run* %159, i64 %192, i32 1
  store i32 %194, i32* %195, align 4
  %196 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 25
  %197 = load i8, i8* %196, align 1
  %198 = icmp ult i8 %197, %170
  %199 = select i1 %198, i8 %197, i8 %170
  br label %200

200:                                              ; preds = %191, %189
  %201 = phi i8 [ %170, %189 ], [ %199, %191 ]
  %202 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 40
  store %struct.Run* %159, %struct.Run** %202, align 8
  store i32 %149, i32* %3, align 8
  %203 = or i8 %201, 1
  %204 = icmp ult i8 %203, %172
  br i1 %204, label %205, label %314

205:                                              ; preds = %200
  %206 = add i8 %201, 1
  %207 = load i8*, i8** %25, align 8
  %208 = load i32, i32* %27, align 4
  %209 = load i32, i32* %23, align 4
  %210 = icmp slt i32 %208, %209
  %211 = zext i1 %210 to i32
  %212 = sub nsw i32 %149, %211
  %213 = add i8 %172, -1
  %214 = icmp ult i8 %213, %206
  br i1 %214, label %283, label %215

215:                                              ; preds = %205
  %216 = icmp sgt i32 %212, 0
  %217 = sext i32 %212 to i64
  br label %218

218:                                              ; preds = %280, %215
  %219 = phi i8 [ %213, %215 ], [ %281, %280 ]
  br i1 %216, label %220, label %280

220:                                              ; preds = %218, %275
  %221 = phi i32 [ %277, %275 ], [ 0, %218 ]
  %222 = sext i32 %221 to i64
  br label %223

223:                                              ; preds = %235, %220
  %224 = phi i64 [ %222, %220 ], [ %236, %235 ]
  %225 = getelementptr inbounds %struct.Run, %struct.Run* %159, i64 %224, i32 0
  %226 = load i32, i32* %225, align 4
  %227 = sext i32 %226 to i64
  %228 = getelementptr inbounds i8, i8* %207, i64 %227
  %229 = load i8, i8* %228, align 1
  %230 = icmp ult i8 %229, %219
  br i1 %230, label %235, label %231

231:                                              ; preds = %223
  %232 = trunc i64 %224 to i32
  %233 = shl i64 %224, 32
  %234 = ashr exact i64 %233, 32
  br label %238

235:                                              ; preds = %223
  %236 = add nsw i64 %224, 1
  %237 = icmp slt i64 %236, %217
  br i1 %237, label %223, label %280

238:                                              ; preds = %242, %231
  %239 = phi i64 [ %234, %231 ], [ %240, %242 ]
  %240 = add nsw i64 %239, 1
  %241 = icmp slt i64 %240, %217
  br i1 %241, label %242, label %249

242:                                              ; preds = %238
  %243 = getelementptr inbounds %struct.Run, %struct.Run* %159, i64 %240, i32 0
  %244 = load i32, i32* %243, align 4
  %245 = sext i32 %244 to i64
  %246 = getelementptr inbounds i8, i8* %207, i64 %245
  %247 = load i8, i8* %246, align 1
  %248 = icmp ult i8 %247, %219
  br i1 %248, label %249, label %238

249:                                              ; preds = %242, %238
  %250 = trunc i64 %240 to i32
  %251 = trunc i64 %239 to i32
  %252 = icmp slt i32 %232, %251
  br i1 %252, label %253, label %275

253:                                              ; preds = %249
  %254 = shl i64 %239, 32
  %255 = ashr exact i64 %254, 32
  br label %256

256:                                              ; preds = %256, %253
  %257 = phi i64 [ %234, %253 ], [ %272, %256 ]
  %258 = phi i64 [ %255, %253 ], [ %273, %256 ]
  %259 = getelementptr inbounds %struct.Run, %struct.Run* %159, i64 %257
  %260 = getelementptr inbounds %struct.Run, %struct.Run* %259, i64 0, i32 0
  %261 = load i32, i32* %260, align 4
  %262 = getelementptr inbounds %struct.Run, %struct.Run* %159, i64 %257, i32 1
  %263 = load i32, i32* %262, align 4
  %264 = getelementptr inbounds %struct.Run, %struct.Run* %159, i64 %257, i32 2
  %265 = load i32, i32* %264, align 4
  %266 = getelementptr inbounds %struct.Run, %struct.Run* %159, i64 %258
  %267 = bitcast %struct.Run* %259 to i8*
  %268 = bitcast %struct.Run* %266 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %267, i8* align 4 %268, i64 12, i1 false) #5
  %269 = getelementptr inbounds %struct.Run, %struct.Run* %266, i64 0, i32 0
  store i32 %261, i32* %269, align 4
  %270 = getelementptr inbounds %struct.Run, %struct.Run* %159, i64 %258, i32 1
  store i32 %263, i32* %270, align 4
  %271 = getelementptr inbounds %struct.Run, %struct.Run* %159, i64 %258, i32 2
  store i32 %265, i32* %271, align 4
  %272 = add nsw i64 %257, 1
  %273 = add nsw i64 %258, -1
  %274 = icmp slt i64 %272, %273
  br i1 %274, label %256, label %275

275:                                              ; preds = %256, %249
  %276 = icmp ne i32 %212, %250
  %277 = add nsw i32 %251, 2
  %278 = icmp slt i32 %277, %212
  %279 = and i1 %276, %278
  br i1 %279, label %220, label %280

280:                                              ; preds = %275, %235, %218
  %281 = add i8 %219, -1
  %282 = icmp ult i8 %281, %206
  br i1 %282, label %283, label %218

283:                                              ; preds = %280, %205
  %284 = and i8 %206, 1
  %285 = icmp eq i8 %284, 0
  br i1 %285, label %286, label %314

286:                                              ; preds = %283
  %287 = load i32, i32* %27, align 4
  %288 = load i32, i32* %23, align 4
  %289 = icmp eq i32 %287, %288
  %290 = zext i1 %289 to i32
  %291 = sub i32 %212, %290
  %292 = icmp sgt i32 %291, 0
  br i1 %292, label %293, label %314

293:                                              ; preds = %286
  %294 = sext i32 %291 to i64
  br label %295

295:                                              ; preds = %295, %293
  %296 = phi i64 [ 0, %293 ], [ %311, %295 ]
  %297 = phi i64 [ %294, %293 ], [ %312, %295 ]
  %298 = getelementptr inbounds %struct.Run, %struct.Run* %159, i64 %296
  %299 = getelementptr inbounds %struct.Run, %struct.Run* %298, i64 0, i32 0
  %300 = load i32, i32* %299, align 4
  %301 = getelementptr inbounds %struct.Run, %struct.Run* %159, i64 %296, i32 1
  %302 = load i32, i32* %301, align 4
  %303 = getelementptr inbounds %struct.Run, %struct.Run* %159, i64 %296, i32 2
  %304 = load i32, i32* %303, align 4
  %305 = getelementptr inbounds %struct.Run, %struct.Run* %159, i64 %297
  %306 = bitcast %struct.Run* %298 to i8*
  %307 = bitcast %struct.Run* %305 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %306, i8* align 4 %307, i64 12, i1 false) #5
  %308 = getelementptr inbounds %struct.Run, %struct.Run* %305, i64 0, i32 0
  store i32 %300, i32* %308, align 4
  %309 = getelementptr inbounds %struct.Run, %struct.Run* %159, i64 %297, i32 1
  store i32 %302, i32* %309, align 4
  %310 = getelementptr inbounds %struct.Run, %struct.Run* %159, i64 %297, i32 2
  store i32 %304, i32* %310, align 4
  %311 = add nuw nsw i64 %296, 1
  %312 = add nsw i64 %297, -1
  %313 = icmp slt i64 %311, %312
  br i1 %313, label %295, label %314

314:                                              ; preds = %295, %200, %283, %286
  %315 = icmp eq i32 %149, 0
  br i1 %315, label %368, label %316

316:                                              ; preds = %314
  %317 = zext i32 %149 to i64
  %318 = and i64 %317, 1
  %319 = icmp eq i32 %149, 1
  br i1 %319, label %352, label %320

320:                                              ; preds = %316
  %321 = sub nsw i64 %317, %318
  br label %322

322:                                              ; preds = %322, %320
  %323 = phi i64 [ 0, %320 ], [ %349, %322 ]
  %324 = phi i32 [ 0, %320 ], [ %348, %322 ]
  %325 = phi i64 [ %321, %320 ], [ %350, %322 ]
  %326 = getelementptr inbounds %struct.Run, %struct.Run* %159, i64 %323, i32 0
  %327 = load i32, i32* %326, align 4
  %328 = sext i32 %327 to i64
  %329 = getelementptr inbounds i8, i8* %26, i64 %328
  %330 = load i8, i8* %329, align 1
  %331 = zext i8 %330 to i32
  %332 = shl i32 %331, 31
  %333 = or i32 %332, %327
  store i32 %333, i32* %326, align 4
  %334 = getelementptr inbounds %struct.Run, %struct.Run* %159, i64 %323, i32 1
  %335 = load i32, i32* %334, align 4
  %336 = add nsw i32 %335, %324
  store i32 %336, i32* %334, align 4
  %337 = or i64 %323, 1
  %338 = getelementptr inbounds %struct.Run, %struct.Run* %159, i64 %337, i32 0
  %339 = load i32, i32* %338, align 4
  %340 = sext i32 %339 to i64
  %341 = getelementptr inbounds i8, i8* %26, i64 %340
  %342 = load i8, i8* %341, align 1
  %343 = zext i8 %342 to i32
  %344 = shl i32 %343, 31
  %345 = or i32 %344, %339
  store i32 %345, i32* %338, align 4
  %346 = getelementptr inbounds %struct.Run, %struct.Run* %159, i64 %337, i32 1
  %347 = load i32, i32* %346, align 4
  %348 = add nsw i32 %347, %336
  store i32 %348, i32* %346, align 4
  %349 = add nuw nsw i64 %323, 2
  %350 = add i64 %325, -2
  %351 = icmp eq i64 %350, 0
  br i1 %351, label %352, label %322

352:                                              ; preds = %322, %316
  %353 = phi i64 [ 0, %316 ], [ %349, %322 ]
  %354 = phi i32 [ 0, %316 ], [ %348, %322 ]
  %355 = icmp eq i64 %318, 0
  br i1 %355, label %368, label %356

356:                                              ; preds = %352
  %357 = getelementptr inbounds %struct.Run, %struct.Run* %159, i64 %353, i32 0
  %358 = load i32, i32* %357, align 4
  %359 = sext i32 %358 to i64
  %360 = getelementptr inbounds i8, i8* %26, i64 %359
  %361 = load i8, i8* %360, align 1
  %362 = zext i8 %361 to i32
  %363 = shl i32 %362, 31
  %364 = or i32 %363, %358
  store i32 %364, i32* %357, align 4
  %365 = getelementptr inbounds %struct.Run, %struct.Run* %159, i64 %353, i32 1
  %366 = load i32, i32* %365, align 4
  %367 = add nsw i32 %366, %354
  store i32 %367, i32* %365, align 4
  br label %368

368:                                              ; preds = %356, %352, %314
  %369 = icmp ugt i32 %149, %190
  br i1 %369, label %370, label %382

370:                                              ; preds = %368
  %371 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 25
  %372 = load i8, i8* %371, align 1
  %373 = and i8 %372, 1
  %374 = zext i8 %372 to i32
  %375 = icmp eq i8 %373, 0
  %376 = shl i32 %374, 31
  %377 = and i64 %188, 4294967295
  %378 = select i1 %375, i64 %377, i64 0
  %379 = getelementptr inbounds %struct.Run, %struct.Run* %159, i64 %378, i32 0
  %380 = load i32, i32* %379, align 4
  %381 = or i32 %376, %380
  store i32 %381, i32* %379, align 4
  br label %382

382:                                              ; preds = %368, %370, %136, %10
  %383 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 1
  %384 = load i32, i32* %383, align 4
  %385 = icmp sgt i32 %384, 0
  br i1 %385, label %386, label %428

386:                                              ; preds = %382
  %387 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 4
  %388 = load %struct.Point*, %struct.Point** %387, align 8
  %389 = sext i32 %384 to i64
  %390 = getelementptr inbounds %struct.Point, %struct.Point* %388, i64 %389
  %391 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 40
  br label %392

392:                                              ; preds = %386, %418
  %393 = phi %struct.Point* [ %388, %386 ], [ %426, %418 ]
  %394 = getelementptr inbounds %struct.Point, %struct.Point* %393, i64 0, i32 0
  %395 = load i32, i32* %394, align 4
  %396 = load %struct.Run*, %struct.Run** %391, align 8
  %397 = load i32, i32* %3, align 8
  %398 = icmp sgt i32 %397, 0
  br i1 %398, label %399, label %417

399:                                              ; preds = %392
  %400 = zext i32 %397 to i64
  br label %401

401:                                              ; preds = %414, %399
  %402 = phi i64 [ 0, %399 ], [ %415, %414 ]
  %403 = phi i32 [ 0, %399 ], [ %405, %414 ]
  %404 = getelementptr inbounds %struct.Run, %struct.Run* %396, i64 %402, i32 1
  %405 = load i32, i32* %404, align 4
  %406 = getelementptr inbounds %struct.Run, %struct.Run* %396, i64 %402, i32 0
  %407 = load i32, i32* %406, align 4
  %408 = and i32 %407, 2147483647
  %409 = icmp sgt i32 %408, %395
  br i1 %409, label %414, label %410

410:                                              ; preds = %401
  %411 = sub i32 %405, %403
  %412 = add nsw i32 %411, %408
  %413 = icmp sgt i32 %412, %395
  br i1 %413, label %418, label %414

414:                                              ; preds = %410, %401
  %415 = add nuw nsw i64 %402, 1
  %416 = icmp eq i64 %415, %400
  br i1 %416, label %417, label %401

417:                                              ; preds = %392, %414
  tail call void @abort() #6
  unreachable

418:                                              ; preds = %410
  %419 = getelementptr inbounds %struct.Point, %struct.Point* %393, i64 0, i32 1
  %420 = load i32, i32* %419, align 4
  %421 = shl i64 %402, 32
  %422 = ashr exact i64 %421, 32
  %423 = getelementptr inbounds %struct.Run, %struct.Run* %396, i64 %422, i32 2
  %424 = load i32, i32* %423, align 4
  %425 = or i32 %424, %420
  store i32 %425, i32* %423, align 4
  %426 = getelementptr inbounds %struct.Point, %struct.Point* %393, i64 1
  %427 = icmp ult %struct.Point* %426, %390
  br i1 %427, label %392, label %428

428:                                              ; preds = %418, %382
  %429 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 46
  %430 = load i32, i32* %429, align 8
  %431 = icmp sgt i32 %430, 0
  br i1 %431, label %432, label %485

432:                                              ; preds = %428
  %433 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 1
  %434 = load i16*, i16** %433, align 8
  %435 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 3
  %436 = load i32, i32* %435, align 4
  %437 = sext i32 %436 to i64
  %438 = getelementptr inbounds i16, i16* %434, i64 %437
  %439 = icmp sgt i32 %436, 0
  br i1 %439, label %440, label %485

440:                                              ; preds = %432
  %441 = ptrtoint i16* %434 to i64
  %442 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 40
  br label %443

443:                                              ; preds = %440, %482
  %444 = phi i16* [ %434, %440 ], [ %483, %482 ]
  %445 = load i16, i16* %444, align 2
  %446 = and i16 %445, -4
  %447 = icmp eq i16 %446, 8204
  br i1 %447, label %449, label %448

448:                                              ; preds = %443
  switch i16 %445, label %482 [
    i16 8297, label %449
    i16 8296, label %449
    i16 8295, label %449
    i16 8294, label %449
    i16 8238, label %449
    i16 8237, label %449
    i16 8236, label %449
    i16 8235, label %449
    i16 8234, label %449
  ]

449:                                              ; preds = %448, %448, %448, %448, %448, %448, %448, %448, %448, %443
  %450 = ptrtoint i16* %444 to i64
  %451 = sub i64 %450, %441
  %452 = lshr exact i64 %451, 1
  %453 = trunc i64 %452 to i32
  %454 = load %struct.Run*, %struct.Run** %442, align 8
  %455 = load i32, i32* %3, align 8
  %456 = icmp sgt i32 %455, 0
  br i1 %456, label %457, label %475

457:                                              ; preds = %449
  %458 = zext i32 %455 to i64
  br label %459

459:                                              ; preds = %472, %457
  %460 = phi i64 [ 0, %457 ], [ %473, %472 ]
  %461 = phi i32 [ 0, %457 ], [ %463, %472 ]
  %462 = getelementptr inbounds %struct.Run, %struct.Run* %454, i64 %460, i32 1
  %463 = load i32, i32* %462, align 4
  %464 = getelementptr inbounds %struct.Run, %struct.Run* %454, i64 %460, i32 0
  %465 = load i32, i32* %464, align 4
  %466 = and i32 %465, 2147483647
  %467 = icmp sgt i32 %466, %453
  br i1 %467, label %472, label %468

468:                                              ; preds = %459
  %469 = sub i32 %463, %461
  %470 = add nsw i32 %469, %466
  %471 = icmp sgt i32 %470, %453
  br i1 %471, label %476, label %472

472:                                              ; preds = %468, %459
  %473 = add nuw nsw i64 %460, 1
  %474 = icmp eq i64 %473, %458
  br i1 %474, label %475, label %459

475:                                              ; preds = %449, %472
  tail call void @abort() #6
  unreachable

476:                                              ; preds = %468
  %477 = shl i64 %460, 32
  %478 = ashr exact i64 %477, 32
  %479 = getelementptr inbounds %struct.Run, %struct.Run* %454, i64 %478, i32 2
  %480 = load i32, i32* %479, align 4
  %481 = add nsw i32 %480, -1
  store i32 %481, i32* %479, align 4
  br label %482

482:                                              ; preds = %448, %476
  %483 = getelementptr inbounds i16, i16* %444, i64 1
  %484 = icmp ult i16* %483, %438
  br i1 %484, label %443, label %485

485:                                              ; preds = %482, %432, %145, %428, %2
  %486 = phi i8 [ 1, %2 ], [ 1, %428 ], [ 0, %145 ], [ 1, %432 ], [ 1, %482 ]
  ret i8 %486
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ubidi_getVisualRun_69(%struct.UBiDi*, i32, i32*, i32*) local_unnamed_addr #0 {
  %5 = icmp eq %struct.UBiDi* %0, null
  br i1 %5, label %52, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 0
  %8 = load %struct.UBiDi*, %struct.UBiDi** %7, align 8
  %9 = icmp eq %struct.UBiDi* %8, %0
  br i1 %9, label %16, label %10

10:                                               ; preds = %6
  %11 = icmp eq %struct.UBiDi* %8, null
  br i1 %11, label %52, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %8, i64 0, i32 0
  %14 = load %struct.UBiDi*, %struct.UBiDi** %13, align 8
  %15 = icmp eq %struct.UBiDi* %14, %8
  br i1 %15, label %16, label %52

16:                                               ; preds = %6, %12
  %17 = tail call signext i8 @ubidi_getRuns_69(%struct.UBiDi* nonnull %0, i32* undef)
  %18 = icmp slt i32 %1, 0
  br i1 %18, label %52, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 39
  %21 = load i32, i32* %20, align 8
  %22 = icmp sgt i32 %21, %1
  br i1 %22, label %23, label %52

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 40
  %25 = load %struct.Run*, %struct.Run** %24, align 8
  %26 = sext i32 %1 to i64
  %27 = getelementptr inbounds %struct.Run, %struct.Run* %25, i64 %26, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32* %2, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %23
  %31 = and i32 %28, 2147483647
  store i32 %31, i32* %2, align 4
  br label %32

32:                                               ; preds = %23, %30
  %33 = icmp eq i32* %3, null
  br i1 %33, label %50, label %34

34:                                               ; preds = %32
  %35 = icmp sgt i32 %1, 0
  %36 = load %struct.Run*, %struct.Run** %24, align 8
  br i1 %35, label %37, label %45

37:                                               ; preds = %34
  %38 = getelementptr inbounds %struct.Run, %struct.Run* %36, i64 %26, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = add nsw i32 %1, -1
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds %struct.Run, %struct.Run* %36, i64 %41, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = sub nsw i32 %39, %43
  br label %48

45:                                               ; preds = %34
  %46 = getelementptr inbounds %struct.Run, %struct.Run* %36, i64 0, i32 1
  %47 = load i32, i32* %46, align 4
  br label %48

48:                                               ; preds = %45, %37
  %49 = phi i32 [ %44, %37 ], [ %47, %45 ]
  store i32 %49, i32* %3, align 4
  br label %50

50:                                               ; preds = %48, %32
  %51 = lshr i32 %28, 31
  br label %52

52:                                               ; preds = %16, %19, %12, %4, %10, %50
  %53 = phi i32 [ %51, %50 ], [ 0, %10 ], [ 0, %4 ], [ 0, %12 ], [ 0, %19 ], [ 0, %16 ]
  ret i32 %53
}

; Function Attrs: nounwind ssp uwtable
define hidden void @ubidi_reorderLogical_69(i8* readonly, i32, i32*) local_unnamed_addr #0 {
  %4 = icmp eq i32* %2, null
  br i1 %4, label %225, label %5

5:                                                ; preds = %3
  %6 = icmp eq i8* %0, null
  %7 = icmp slt i32 %1, 1
  %8 = or i1 %6, %7
  br i1 %8, label %225, label %9

9:                                                ; preds = %5
  %10 = sext i32 %1 to i64
  br label %11

11:                                               ; preds = %19, %9
  %12 = phi i64 [ %10, %9 ], [ %15, %19 ]
  %13 = phi i8 [ 0, %9 ], [ %23, %19 ]
  %14 = phi i8 [ 126, %9 ], [ %21, %19 ]
  %15 = add nsw i64 %12, -1
  %16 = getelementptr inbounds i8, i8* %0, i64 %15
  %17 = load i8, i8* %16, align 1
  %18 = icmp ugt i8 %17, 126
  br i1 %18, label %225, label %19

19:                                               ; preds = %11
  %20 = icmp ult i8 %17, %14
  %21 = select i1 %20, i8 %17, i8 %14
  %22 = icmp ugt i8 %17, %13
  %23 = select i1 %22, i8 %17, i8 %13
  %24 = icmp sgt i64 %15, 0
  br i1 %24, label %11, label %25

25:                                               ; preds = %19
  %26 = icmp sgt i32 %1, 0
  br i1 %26, label %27, label %101

27:                                               ; preds = %25
  %28 = icmp ult i32 %1, 8
  br i1 %28, label %93, label %29

29:                                               ; preds = %27
  %30 = and i64 %10, -8
  %31 = sub nsw i64 %10, %30
  %32 = insertelement <4 x i64> undef, i64 %10, i32 0
  %33 = shufflevector <4 x i64> %32, <4 x i64> undef, <4 x i32> zeroinitializer
  %34 = add <4 x i64> %33, <i64 0, i64 -1, i64 -2, i64 -3>
  %35 = add nsw i64 %30, -8
  %36 = lshr exact i64 %35, 3
  %37 = add nuw nsw i64 %36, 1
  %38 = and i64 %37, 1
  %39 = icmp eq i64 %35, 0
  br i1 %39, label %74, label %40

40:                                               ; preds = %29
  %41 = sub nuw nsw i64 %37, %38
  br label %42

42:                                               ; preds = %42, %40
  %43 = phi <4 x i64> [ %34, %40 ], [ %71, %42 ]
  %44 = phi i64 [ %41, %40 ], [ %72, %42 ]
  %45 = add nsw <4 x i64> %43, <i64 -1, i64 -1, i64 -1, i64 -1>
  %46 = extractelement <4 x i64> %45, i32 0
  %47 = getelementptr inbounds i32, i32* %2, i64 %46
  %48 = trunc <4 x i64> %45 to <4 x i32>
  %49 = trunc <4 x i64> %43 to <4 x i32>
  %50 = add <4 x i32> %49, <i32 -5, i32 -5, i32 -5, i32 -5>
  %51 = shufflevector <4 x i32> %48, <4 x i32> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %52 = getelementptr inbounds i32, i32* %47, i64 -3
  %53 = bitcast i32* %52 to <4 x i32>*
  store <4 x i32> %51, <4 x i32>* %53, align 4
  %54 = shufflevector <4 x i32> %50, <4 x i32> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %55 = getelementptr inbounds i32, i32* %47, i64 -4
  %56 = getelementptr inbounds i32, i32* %55, i64 -3
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> %54, <4 x i32>* %57, align 4
  %58 = add <4 x i64> %43, <i64 -9, i64 -9, i64 -9, i64 -9>
  %59 = extractelement <4 x i64> %58, i32 0
  %60 = getelementptr inbounds i32, i32* %2, i64 %59
  %61 = trunc <4 x i64> %58 to <4 x i32>
  %62 = trunc <4 x i64> %43 to <4 x i32>
  %63 = add <4 x i32> %62, <i32 -13, i32 -13, i32 -13, i32 -13>
  %64 = shufflevector <4 x i32> %61, <4 x i32> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %65 = getelementptr inbounds i32, i32* %60, i64 -3
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> %64, <4 x i32>* %66, align 4
  %67 = shufflevector <4 x i32> %63, <4 x i32> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %68 = getelementptr inbounds i32, i32* %60, i64 -4
  %69 = getelementptr inbounds i32, i32* %68, i64 -3
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> %67, <4 x i32>* %70, align 4
  %71 = add <4 x i64> %43, <i64 -16, i64 -16, i64 -16, i64 -16>
  %72 = add i64 %44, -2
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %74, label %42, !llvm.loop !6

74:                                               ; preds = %42, %29
  %75 = phi <4 x i64> [ %34, %29 ], [ %71, %42 ]
  %76 = icmp eq i64 %38, 0
  br i1 %76, label %91, label %77

77:                                               ; preds = %74
  %78 = add nsw <4 x i64> %75, <i64 -1, i64 -1, i64 -1, i64 -1>
  %79 = extractelement <4 x i64> %78, i32 0
  %80 = getelementptr inbounds i32, i32* %2, i64 %79
  %81 = trunc <4 x i64> %78 to <4 x i32>
  %82 = trunc <4 x i64> %75 to <4 x i32>
  %83 = add <4 x i32> %82, <i32 -5, i32 -5, i32 -5, i32 -5>
  %84 = shufflevector <4 x i32> %81, <4 x i32> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %85 = getelementptr inbounds i32, i32* %80, i64 -3
  %86 = bitcast i32* %85 to <4 x i32>*
  store <4 x i32> %84, <4 x i32>* %86, align 4
  %87 = shufflevector <4 x i32> %83, <4 x i32> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %88 = getelementptr inbounds i32, i32* %80, i64 -4
  %89 = getelementptr inbounds i32, i32* %88, i64 -3
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> %87, <4 x i32>* %90, align 4
  br label %91

91:                                               ; preds = %74, %77
  %92 = icmp eq i64 %30, %10
  br i1 %92, label %101, label %93

93:                                               ; preds = %91, %27
  %94 = phi i64 [ %10, %27 ], [ %31, %91 ]
  br label %95

95:                                               ; preds = %93, %95
  %96 = phi i64 [ %97, %95 ], [ %94, %93 ]
  %97 = add nsw i64 %96, -1
  %98 = getelementptr inbounds i32, i32* %2, i64 %97
  %99 = trunc i64 %97 to i32
  store i32 %99, i32* %98, align 4
  %100 = icmp sgt i64 %97, 0
  br i1 %100, label %95, label %101, !llvm.loop !7

101:                                              ; preds = %95, %91, %25
  %102 = icmp eq i8 %21, %23
  %103 = and i8 %21, 1
  %104 = icmp eq i8 %103, 0
  %105 = and i1 %102, %104
  br i1 %105, label %225, label %106

106:                                              ; preds = %101
  %107 = or i8 %21, 1
  br label %108

108:                                              ; preds = %222, %106
  %109 = phi i8 [ %23, %106 ], [ %223, %222 ]
  br i1 %26, label %110, label %222

110:                                              ; preds = %108, %217
  %111 = phi i32 [ %219, %217 ], [ 0, %108 ]
  %112 = sext i32 %111 to i64
  br label %113

113:                                              ; preds = %110, %122
  %114 = phi i64 [ %112, %110 ], [ %123, %122 ]
  %115 = getelementptr inbounds i8, i8* %0, i64 %114
  %116 = load i8, i8* %115, align 1
  %117 = icmp ult i8 %116, %109
  br i1 %117, label %122, label %118

118:                                              ; preds = %113
  %119 = trunc i64 %114 to i32
  %120 = shl i64 %114, 32
  %121 = ashr exact i64 %120, 32
  br label %125

122:                                              ; preds = %113
  %123 = add nsw i64 %114, 1
  %124 = icmp slt i64 %123, %10
  br i1 %124, label %113, label %222

125:                                              ; preds = %118, %129
  %126 = phi i64 [ %121, %118 ], [ %127, %129 ]
  %127 = add nsw i64 %126, 1
  %128 = icmp slt i64 %127, %10
  br i1 %128, label %129, label %133

129:                                              ; preds = %125
  %130 = getelementptr inbounds i8, i8* %0, i64 %127
  %131 = load i8, i8* %130, align 1
  %132 = icmp ult i8 %131, %109
  br i1 %132, label %133, label %125

133:                                              ; preds = %129, %125
  %134 = trunc i64 %127 to i32
  %135 = trunc i64 %126 to i32
  %136 = add i32 %135, %119
  %137 = shl i64 %126, 32
  %138 = ashr exact i64 %137, 32
  %139 = shl i64 %114, 32
  %140 = ashr exact i64 %139, 32
  %141 = shl i64 %126, 32
  %142 = ashr exact i64 %141, 32
  %143 = icmp sgt i64 %140, %142
  %144 = select i1 %143, i64 %140, i64 %142
  %145 = add nsw i64 %144, 1
  %146 = sub nsw i64 %145, %140
  %147 = icmp ult i64 %146, 8
  br i1 %147, label %208, label %148

148:                                              ; preds = %133
  %149 = and i64 %146, -8
  %150 = add nsw i64 %121, %149
  %151 = insertelement <4 x i32> undef, i32 %136, i32 0
  %152 = shufflevector <4 x i32> %151, <4 x i32> undef, <4 x i32> zeroinitializer
  %153 = insertelement <4 x i32> undef, i32 %136, i32 0
  %154 = shufflevector <4 x i32> %153, <4 x i32> undef, <4 x i32> zeroinitializer
  %155 = add nsw i64 %149, -8
  %156 = lshr exact i64 %155, 3
  %157 = add nuw nsw i64 %156, 1
  %158 = and i64 %157, 1
  %159 = icmp eq i64 %155, 0
  br i1 %159, label %191, label %160

160:                                              ; preds = %148
  %161 = sub nuw nsw i64 %157, %158
  br label %162

162:                                              ; preds = %162, %160
  %163 = phi i64 [ 0, %160 ], [ %188, %162 ]
  %164 = phi i64 [ %161, %160 ], [ %189, %162 ]
  %165 = add i64 %121, %163
  %166 = getelementptr inbounds i32, i32* %2, i64 %165
  %167 = bitcast i32* %166 to <4 x i32>*
  %168 = load <4 x i32>, <4 x i32>* %167, align 4
  %169 = getelementptr inbounds i32, i32* %166, i64 4
  %170 = bitcast i32* %169 to <4 x i32>*
  %171 = load <4 x i32>, <4 x i32>* %170, align 4
  %172 = sub <4 x i32> %152, %168
  %173 = sub <4 x i32> %154, %171
  %174 = bitcast i32* %166 to <4 x i32>*
  store <4 x i32> %172, <4 x i32>* %174, align 4
  %175 = bitcast i32* %169 to <4 x i32>*
  store <4 x i32> %173, <4 x i32>* %175, align 4
  %176 = or i64 %163, 8
  %177 = add i64 %121, %176
  %178 = getelementptr inbounds i32, i32* %2, i64 %177
  %179 = bitcast i32* %178 to <4 x i32>*
  %180 = load <4 x i32>, <4 x i32>* %179, align 4
  %181 = getelementptr inbounds i32, i32* %178, i64 4
  %182 = bitcast i32* %181 to <4 x i32>*
  %183 = load <4 x i32>, <4 x i32>* %182, align 4
  %184 = sub <4 x i32> %152, %180
  %185 = sub <4 x i32> %154, %183
  %186 = bitcast i32* %178 to <4 x i32>*
  store <4 x i32> %184, <4 x i32>* %186, align 4
  %187 = bitcast i32* %181 to <4 x i32>*
  store <4 x i32> %185, <4 x i32>* %187, align 4
  %188 = add i64 %163, 16
  %189 = add i64 %164, -2
  %190 = icmp eq i64 %189, 0
  br i1 %190, label %191, label %162, !llvm.loop !8

191:                                              ; preds = %162, %148
  %192 = phi i64 [ 0, %148 ], [ %188, %162 ]
  %193 = icmp eq i64 %158, 0
  br i1 %193, label %206, label %194

194:                                              ; preds = %191
  %195 = add i64 %121, %192
  %196 = getelementptr inbounds i32, i32* %2, i64 %195
  %197 = bitcast i32* %196 to <4 x i32>*
  %198 = load <4 x i32>, <4 x i32>* %197, align 4
  %199 = getelementptr inbounds i32, i32* %196, i64 4
  %200 = bitcast i32* %199 to <4 x i32>*
  %201 = load <4 x i32>, <4 x i32>* %200, align 4
  %202 = sub <4 x i32> %152, %198
  %203 = sub <4 x i32> %154, %201
  %204 = bitcast i32* %196 to <4 x i32>*
  store <4 x i32> %202, <4 x i32>* %204, align 4
  %205 = bitcast i32* %199 to <4 x i32>*
  store <4 x i32> %203, <4 x i32>* %205, align 4
  br label %206

206:                                              ; preds = %191, %194
  %207 = icmp eq i64 %146, %149
  br i1 %207, label %217, label %208

208:                                              ; preds = %206, %133
  %209 = phi i64 [ %121, %133 ], [ %150, %206 ]
  br label %210

210:                                              ; preds = %208, %210
  %211 = phi i64 [ %215, %210 ], [ %209, %208 ]
  %212 = getelementptr inbounds i32, i32* %2, i64 %211
  %213 = load i32, i32* %212, align 4
  %214 = sub i32 %136, %213
  store i32 %214, i32* %212, align 4
  %215 = add nsw i64 %211, 1
  %216 = icmp slt i64 %211, %138
  br i1 %216, label %210, label %217, !llvm.loop !9

217:                                              ; preds = %210, %206
  %218 = icmp ne i32 %134, %1
  %219 = add nsw i32 %135, 2
  %220 = icmp slt i32 %219, %1
  %221 = and i1 %218, %220
  br i1 %221, label %110, label %222

222:                                              ; preds = %217, %122, %108
  %223 = add i8 %109, -1
  %224 = icmp ult i8 %223, %107
  br i1 %224, label %225, label %108

225:                                              ; preds = %11, %222, %5, %101, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @ubidi_reorderVisual_69(i8* readonly, i32, i32*) local_unnamed_addr #0 {
  %4 = icmp eq i32* %2, null
  br i1 %4, label %158, label %5

5:                                                ; preds = %3
  %6 = icmp eq i8* %0, null
  %7 = icmp slt i32 %1, 1
  %8 = or i1 %6, %7
  br i1 %8, label %158, label %9

9:                                                ; preds = %5
  %10 = sext i32 %1 to i64
  br label %11

11:                                               ; preds = %19, %9
  %12 = phi i64 [ %10, %9 ], [ %15, %19 ]
  %13 = phi i8 [ 0, %9 ], [ %23, %19 ]
  %14 = phi i8 [ 126, %9 ], [ %21, %19 ]
  %15 = add nsw i64 %12, -1
  %16 = getelementptr inbounds i8, i8* %0, i64 %15
  %17 = load i8, i8* %16, align 1
  %18 = icmp ugt i8 %17, 126
  br i1 %18, label %158, label %19

19:                                               ; preds = %11
  %20 = icmp ult i8 %17, %14
  %21 = select i1 %20, i8 %17, i8 %14
  %22 = icmp ugt i8 %17, %13
  %23 = select i1 %22, i8 %17, i8 %13
  %24 = icmp sgt i64 %15, 0
  br i1 %24, label %11, label %25

25:                                               ; preds = %19
  %26 = icmp sgt i32 %1, 0
  br i1 %26, label %27, label %101

27:                                               ; preds = %25
  %28 = icmp ult i32 %1, 8
  br i1 %28, label %93, label %29

29:                                               ; preds = %27
  %30 = and i64 %10, -8
  %31 = sub nsw i64 %10, %30
  %32 = insertelement <4 x i64> undef, i64 %10, i32 0
  %33 = shufflevector <4 x i64> %32, <4 x i64> undef, <4 x i32> zeroinitializer
  %34 = add <4 x i64> %33, <i64 0, i64 -1, i64 -2, i64 -3>
  %35 = add nsw i64 %30, -8
  %36 = lshr exact i64 %35, 3
  %37 = add nuw nsw i64 %36, 1
  %38 = and i64 %37, 1
  %39 = icmp eq i64 %35, 0
  br i1 %39, label %74, label %40

40:                                               ; preds = %29
  %41 = sub nuw nsw i64 %37, %38
  br label %42

42:                                               ; preds = %42, %40
  %43 = phi <4 x i64> [ %34, %40 ], [ %71, %42 ]
  %44 = phi i64 [ %41, %40 ], [ %72, %42 ]
  %45 = add nsw <4 x i64> %43, <i64 -1, i64 -1, i64 -1, i64 -1>
  %46 = extractelement <4 x i64> %45, i32 0
  %47 = getelementptr inbounds i32, i32* %2, i64 %46
  %48 = trunc <4 x i64> %45 to <4 x i32>
  %49 = trunc <4 x i64> %43 to <4 x i32>
  %50 = add <4 x i32> %49, <i32 -5, i32 -5, i32 -5, i32 -5>
  %51 = shufflevector <4 x i32> %48, <4 x i32> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %52 = getelementptr inbounds i32, i32* %47, i64 -3
  %53 = bitcast i32* %52 to <4 x i32>*
  store <4 x i32> %51, <4 x i32>* %53, align 4
  %54 = shufflevector <4 x i32> %50, <4 x i32> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %55 = getelementptr inbounds i32, i32* %47, i64 -4
  %56 = getelementptr inbounds i32, i32* %55, i64 -3
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> %54, <4 x i32>* %57, align 4
  %58 = add <4 x i64> %43, <i64 -9, i64 -9, i64 -9, i64 -9>
  %59 = extractelement <4 x i64> %58, i32 0
  %60 = getelementptr inbounds i32, i32* %2, i64 %59
  %61 = trunc <4 x i64> %58 to <4 x i32>
  %62 = trunc <4 x i64> %43 to <4 x i32>
  %63 = add <4 x i32> %62, <i32 -13, i32 -13, i32 -13, i32 -13>
  %64 = shufflevector <4 x i32> %61, <4 x i32> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %65 = getelementptr inbounds i32, i32* %60, i64 -3
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> %64, <4 x i32>* %66, align 4
  %67 = shufflevector <4 x i32> %63, <4 x i32> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %68 = getelementptr inbounds i32, i32* %60, i64 -4
  %69 = getelementptr inbounds i32, i32* %68, i64 -3
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> %67, <4 x i32>* %70, align 4
  %71 = add <4 x i64> %43, <i64 -16, i64 -16, i64 -16, i64 -16>
  %72 = add i64 %44, -2
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %74, label %42, !llvm.loop !10

74:                                               ; preds = %42, %29
  %75 = phi <4 x i64> [ %34, %29 ], [ %71, %42 ]
  %76 = icmp eq i64 %38, 0
  br i1 %76, label %91, label %77

77:                                               ; preds = %74
  %78 = add nsw <4 x i64> %75, <i64 -1, i64 -1, i64 -1, i64 -1>
  %79 = extractelement <4 x i64> %78, i32 0
  %80 = getelementptr inbounds i32, i32* %2, i64 %79
  %81 = trunc <4 x i64> %78 to <4 x i32>
  %82 = trunc <4 x i64> %75 to <4 x i32>
  %83 = add <4 x i32> %82, <i32 -5, i32 -5, i32 -5, i32 -5>
  %84 = shufflevector <4 x i32> %81, <4 x i32> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %85 = getelementptr inbounds i32, i32* %80, i64 -3
  %86 = bitcast i32* %85 to <4 x i32>*
  store <4 x i32> %84, <4 x i32>* %86, align 4
  %87 = shufflevector <4 x i32> %83, <4 x i32> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %88 = getelementptr inbounds i32, i32* %80, i64 -4
  %89 = getelementptr inbounds i32, i32* %88, i64 -3
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> %87, <4 x i32>* %90, align 4
  br label %91

91:                                               ; preds = %74, %77
  %92 = icmp eq i64 %30, %10
  br i1 %92, label %101, label %93

93:                                               ; preds = %91, %27
  %94 = phi i64 [ %10, %27 ], [ %31, %91 ]
  br label %95

95:                                               ; preds = %93, %95
  %96 = phi i64 [ %97, %95 ], [ %94, %93 ]
  %97 = add nsw i64 %96, -1
  %98 = getelementptr inbounds i32, i32* %2, i64 %97
  %99 = trunc i64 %97 to i32
  store i32 %99, i32* %98, align 4
  %100 = icmp sgt i64 %97, 0
  br i1 %100, label %95, label %101, !llvm.loop !11

101:                                              ; preds = %95, %91, %25
  %102 = icmp eq i8 %21, %23
  %103 = and i8 %21, 1
  %104 = icmp eq i8 %103, 0
  %105 = and i1 %102, %104
  br i1 %105, label %158, label %106

106:                                              ; preds = %101
  %107 = or i8 %21, 1
  br label %108

108:                                              ; preds = %155, %106
  %109 = phi i8 [ %23, %106 ], [ %156, %155 ]
  br i1 %26, label %110, label %155

110:                                              ; preds = %108, %150
  %111 = phi i32 [ %152, %150 ], [ 0, %108 ]
  %112 = sext i32 %111 to i64
  br label %113

113:                                              ; preds = %110, %122
  %114 = phi i64 [ %112, %110 ], [ %123, %122 ]
  %115 = getelementptr inbounds i8, i8* %0, i64 %114
  %116 = load i8, i8* %115, align 1
  %117 = icmp ult i8 %116, %109
  br i1 %117, label %122, label %118

118:                                              ; preds = %113
  %119 = trunc i64 %114 to i32
  %120 = shl i64 %114, 32
  %121 = ashr exact i64 %120, 32
  br label %125

122:                                              ; preds = %113
  %123 = add nsw i64 %114, 1
  %124 = icmp slt i64 %123, %10
  br i1 %124, label %113, label %155

125:                                              ; preds = %118, %129
  %126 = phi i64 [ %121, %118 ], [ %127, %129 ]
  %127 = add nsw i64 %126, 1
  %128 = icmp slt i64 %127, %10
  br i1 %128, label %129, label %133

129:                                              ; preds = %125
  %130 = getelementptr inbounds i8, i8* %0, i64 %127
  %131 = load i8, i8* %130, align 1
  %132 = icmp ult i8 %131, %109
  br i1 %132, label %133, label %125

133:                                              ; preds = %129, %125
  %134 = trunc i64 %127 to i32
  %135 = trunc i64 %126 to i32
  %136 = icmp slt i32 %119, %135
  br i1 %136, label %137, label %150

137:                                              ; preds = %133
  %138 = shl i64 %126, 32
  %139 = ashr exact i64 %138, 32
  br label %140

140:                                              ; preds = %137, %140
  %141 = phi i64 [ %121, %137 ], [ %147, %140 ]
  %142 = phi i64 [ %139, %137 ], [ %148, %140 ]
  %143 = getelementptr inbounds i32, i32* %2, i64 %141
  %144 = load i32, i32* %143, align 4
  %145 = getelementptr inbounds i32, i32* %2, i64 %142
  %146 = load i32, i32* %145, align 4
  store i32 %146, i32* %143, align 4
  store i32 %144, i32* %145, align 4
  %147 = add nsw i64 %141, 1
  %148 = add nsw i64 %142, -1
  %149 = icmp slt i64 %147, %148
  br i1 %149, label %140, label %150

150:                                              ; preds = %140, %133
  %151 = icmp ne i32 %134, %1
  %152 = add nsw i32 %135, 2
  %153 = icmp slt i32 %152, %1
  %154 = and i1 %151, %153
  br i1 %154, label %110, label %155

155:                                              ; preds = %150, %122, %108
  %156 = add i8 %109, -1
  %157 = icmp ult i8 %156, %107
  br i1 %157, label %158, label %108

158:                                              ; preds = %11, %155, %5, %101, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ubidi_getVisualIndex_69(%struct.UBiDi*, i32, i32*) local_unnamed_addr #0 {
  %4 = icmp eq i32* %2, null
  br i1 %4, label %238, label %5

5:                                                ; preds = %3
  %6 = load i32, i32* %2, align 4
  %7 = icmp slt i32 %6, 1
  br i1 %7, label %8, label %238

8:                                                ; preds = %5
  %9 = icmp eq %struct.UBiDi* %0, null
  br i1 %9, label %20, label %10

10:                                               ; preds = %8
  %11 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 0
  %12 = load %struct.UBiDi*, %struct.UBiDi** %11, align 8
  %13 = icmp eq %struct.UBiDi* %12, %0
  br i1 %13, label %21, label %14

14:                                               ; preds = %10
  %15 = icmp eq %struct.UBiDi* %12, null
  br i1 %15, label %20, label %16

16:                                               ; preds = %14
  %17 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %12, i64 0, i32 0
  %18 = load %struct.UBiDi*, %struct.UBiDi** %17, align 8
  %19 = icmp eq %struct.UBiDi* %18, %12
  br i1 %19, label %21, label %20

20:                                               ; preds = %14, %8, %16
  store i32 27, i32* %2, align 4
  br label %238

21:                                               ; preds = %10, %16
  %22 = icmp slt i32 %1, 0
  br i1 %22, label %27, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 3
  %25 = load i32, i32* %24, align 4
  %26 = icmp sgt i32 %25, %1
  br i1 %26, label %28, label %27

27:                                               ; preds = %23, %21
  store i32 1, i32* %2, align 4
  br label %238

28:                                               ; preds = %23
  %29 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 32
  %30 = load i32, i32* %29, align 8
  switch i32 %30, label %34 [
    i32 0, label %69
    i32 1, label %31
  ]

31:                                               ; preds = %28
  %32 = xor i32 %1, -1
  %33 = add i32 %25, %32
  br label %69

34:                                               ; preds = %28
  %35 = tail call signext i8 @ubidi_getRuns_69(%struct.UBiDi* nonnull %0, i32* undef)
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %34
  store i32 7, i32* %2, align 4
  br label %238

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 40
  %40 = load %struct.Run*, %struct.Run** %39, align 8
  %41 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 39
  %42 = load i32, i32* %41, align 8
  %43 = icmp sgt i32 %42, 0
  br i1 %43, label %44, label %238

44:                                               ; preds = %38
  %45 = sext i32 %42 to i64
  br label %48

46:                                               ; preds = %48
  %47 = icmp slt i64 %61, %45
  br i1 %47, label %48, label %238

48:                                               ; preds = %44, %46
  %49 = phi i64 [ 0, %44 ], [ %61, %46 ]
  %50 = phi i32 [ 0, %44 ], [ %52, %46 ]
  %51 = getelementptr inbounds %struct.Run, %struct.Run* %40, i64 %49, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr inbounds %struct.Run, %struct.Run* %40, i64 %49, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = and i32 %54, 2147483647
  %56 = sub i32 %1, %55
  %57 = icmp sgt i32 %56, -1
  %58 = sub nsw i32 %52, %50
  %59 = icmp slt i32 %56, %58
  %60 = and i1 %57, %59
  %61 = add nuw nsw i64 %49, 1
  br i1 %60, label %62, label %46

62:                                               ; preds = %48
  %63 = icmp sgt i32 %54, -1
  br i1 %63, label %64, label %66

64:                                               ; preds = %62
  %65 = add nsw i32 %56, %50
  br label %69

66:                                               ; preds = %62
  %67 = xor i32 %56, -1
  %68 = add i32 %52, %67
  br label %69

69:                                               ; preds = %66, %64, %28, %31
  %70 = phi i32 [ %33, %31 ], [ %1, %28 ], [ %68, %66 ], [ %65, %64 ]
  %71 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = icmp sgt i32 %72, 0
  br i1 %73, label %74, label %106

74:                                               ; preds = %69
  %75 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 40
  %76 = load %struct.Run*, %struct.Run** %75, align 8
  %77 = getelementptr inbounds %struct.Run, %struct.Run* %76, i64 0, i32 1
  %78 = getelementptr inbounds %struct.Run, %struct.Run* %76, i64 0, i32 2
  %79 = load i32, i32* %78, align 4
  %80 = and i32 %79, 5
  %81 = icmp ne i32 %80, 0
  %82 = zext i1 %81 to i32
  %83 = load i32, i32* %77, align 4
  %84 = icmp slt i32 %70, %83
  br i1 %84, label %85, label %88

85:                                               ; preds = %88, %74
  %86 = phi i32 [ %82, %74 ], [ %103, %88 ]
  %87 = add nsw i32 %86, %70
  br label %238

88:                                               ; preds = %74, %88
  %89 = phi i64 [ %96, %88 ], [ 0, %74 ]
  %90 = phi i32 [ %103, %88 ], [ %82, %74 ]
  %91 = phi i32 [ %99, %88 ], [ %79, %74 ]
  %92 = and i32 %91, 10
  %93 = icmp ne i32 %92, 0
  %94 = zext i1 %93 to i32
  %95 = add nsw i32 %90, %94
  %96 = add nuw i64 %89, 1
  %97 = getelementptr inbounds %struct.Run, %struct.Run* %76, i64 %96, i32 1
  %98 = getelementptr inbounds %struct.Run, %struct.Run* %76, i64 %96, i32 2
  %99 = load i32, i32* %98, align 4
  %100 = and i32 %99, 5
  %101 = icmp ne i32 %100, 0
  %102 = zext i1 %101 to i32
  %103 = add nsw i32 %95, %102
  %104 = load i32, i32* %97, align 4
  %105 = icmp slt i32 %70, %104
  br i1 %105, label %85, label %88

106:                                              ; preds = %69
  %107 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 46
  %108 = load i32, i32* %107, align 8
  %109 = icmp sgt i32 %108, 0
  br i1 %109, label %110, label %238

110:                                              ; preds = %106
  %111 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 40
  %112 = load %struct.Run*, %struct.Run** %111, align 8
  %113 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 1
  %114 = load i16*, i16** %113, align 8
  %115 = sext i32 %1 to i64
  %116 = getelementptr inbounds i16, i16* %114, i64 %115
  %117 = load i16, i16* %116, align 2
  %118 = and i16 %117, -4
  %119 = icmp eq i16 %118, 8204
  br i1 %119, label %238, label %120

120:                                              ; preds = %110
  switch i16 %117, label %121 [
    i16 8297, label %238
    i16 8296, label %238
    i16 8295, label %238
    i16 8294, label %238
    i16 8238, label %238
    i16 8237, label %238
    i16 8236, label %238
    i16 8235, label %238
    i16 8234, label %238
  ]

121:                                              ; preds = %120
  %122 = getelementptr inbounds %struct.Run, %struct.Run* %112, i64 0, i32 1
  %123 = load i32, i32* %122, align 4
  %124 = getelementptr inbounds %struct.Run, %struct.Run* %112, i64 0, i32 2
  %125 = load i32, i32* %124, align 4
  %126 = icmp slt i32 %70, %123
  br i1 %126, label %142, label %127

127:                                              ; preds = %121, %127
  %128 = phi i64 [ %133, %127 ], [ 0, %121 ]
  %129 = phi i32 [ %137, %127 ], [ %125, %121 ]
  %130 = phi i32 [ %135, %127 ], [ %123, %121 ]
  %131 = phi i32 [ %132, %127 ], [ 0, %121 ]
  %132 = sub nsw i32 %131, %129
  %133 = add nuw i64 %128, 1
  %134 = getelementptr inbounds %struct.Run, %struct.Run* %112, i64 %133, i32 1
  %135 = load i32, i32* %134, align 4
  %136 = getelementptr inbounds %struct.Run, %struct.Run* %112, i64 %133, i32 2
  %137 = load i32, i32* %136, align 4
  %138 = icmp slt i32 %70, %135
  br i1 %138, label %139, label %127

139:                                              ; preds = %127
  %140 = and i64 %133, 4294967295
  %141 = sub i32 %135, %130
  br label %142

142:                                              ; preds = %139, %121
  %143 = phi i32 [ %132, %139 ], [ 0, %121 ]
  %144 = phi i64 [ %140, %139 ], [ 0, %121 ]
  %145 = phi i32 [ %141, %139 ], [ %123, %121 ]
  %146 = phi i32 [ %137, %139 ], [ %125, %121 ]
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %150

148:                                              ; preds = %142
  %149 = sub nsw i32 %70, %143
  br label %238

150:                                              ; preds = %142
  %151 = getelementptr inbounds %struct.Run, %struct.Run* %112, i64 %144, i32 0
  %152 = load i32, i32* %151, align 4
  %153 = icmp sgt i32 %152, -1
  br i1 %153, label %158, label %154

154:                                              ; preds = %150
  %155 = add nsw i32 %1, 1
  %156 = and i32 %152, 2147483647
  %157 = add i32 %145, %156
  br label %158

158:                                              ; preds = %150, %154
  %159 = phi i32 [ %155, %154 ], [ %152, %150 ]
  %160 = phi i32 [ %157, %154 ], [ %1, %150 ]
  %161 = icmp slt i32 %159, %160
  br i1 %161, label %162, label %235

162:                                              ; preds = %158
  %163 = sext i32 %159 to i64
  %164 = sext i32 %160 to i64
  %165 = sub nsw i64 %164, %163
  %166 = icmp ult i64 %165, 8
  br i1 %166, label %214, label %167

167:                                              ; preds = %162
  %168 = and i64 %165, -8
  %169 = add nsw i64 %168, %163
  %170 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %143, i32 0
  br label %171

171:                                              ; preds = %171, %167
  %172 = phi i64 [ 0, %167 ], [ %204, %171 ]
  %173 = phi <4 x i32> [ %170, %167 ], [ %202, %171 ]
  %174 = phi <4 x i32> [ zeroinitializer, %167 ], [ %203, %171 ]
  %175 = add i64 %172, %163
  %176 = getelementptr inbounds i16, i16* %114, i64 %175
  %177 = bitcast i16* %176 to <4 x i16>*
  %178 = load <4 x i16>, <4 x i16>* %177, align 2
  %179 = getelementptr inbounds i16, i16* %176, i64 4
  %180 = bitcast i16* %179 to <4 x i16>*
  %181 = load <4 x i16>, <4 x i16>* %180, align 2
  %182 = zext <4 x i16> %178 to <4 x i32>
  %183 = zext <4 x i16> %181 to <4 x i32>
  %184 = and <4 x i32> %182, <i32 65532, i32 65532, i32 65532, i32 65532>
  %185 = and <4 x i32> %183, <i32 65532, i32 65532, i32 65532, i32 65532>
  %186 = icmp eq <4 x i32> %184, <i32 8204, i32 8204, i32 8204, i32 8204>
  %187 = icmp eq <4 x i32> %185, <i32 8204, i32 8204, i32 8204, i32 8204>
  %188 = add nsw <4 x i32> %182, <i32 -8234, i32 -8234, i32 -8234, i32 -8234>
  %189 = add nsw <4 x i32> %183, <i32 -8234, i32 -8234, i32 -8234, i32 -8234>
  %190 = icmp ult <4 x i32> %188, <i32 5, i32 5, i32 5, i32 5>
  %191 = icmp ult <4 x i32> %189, <i32 5, i32 5, i32 5, i32 5>
  %192 = or <4 x i1> %186, %190
  %193 = or <4 x i1> %187, %191
  %194 = add nsw <4 x i32> %182, <i32 -8294, i32 -8294, i32 -8294, i32 -8294>
  %195 = add nsw <4 x i32> %183, <i32 -8294, i32 -8294, i32 -8294, i32 -8294>
  %196 = icmp ult <4 x i32> %194, <i32 4, i32 4, i32 4, i32 4>
  %197 = icmp ult <4 x i32> %195, <i32 4, i32 4, i32 4, i32 4>
  %198 = or <4 x i1> %196, %192
  %199 = or <4 x i1> %197, %193
  %200 = zext <4 x i1> %198 to <4 x i32>
  %201 = zext <4 x i1> %199 to <4 x i32>
  %202 = add nsw <4 x i32> %173, %200
  %203 = add nuw nsw <4 x i32> %174, %201
  %204 = add i64 %172, 8
  %205 = icmp eq i64 %204, %168
  br i1 %205, label %206, label %171, !llvm.loop !12

206:                                              ; preds = %171
  %207 = add <4 x i32> %203, %202
  %208 = shufflevector <4 x i32> %207, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %209 = add <4 x i32> %207, %208
  %210 = shufflevector <4 x i32> %209, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %211 = add <4 x i32> %209, %210
  %212 = extractelement <4 x i32> %211, i32 0
  %213 = icmp eq i64 %165, %168
  br i1 %213, label %235, label %214

214:                                              ; preds = %206, %162
  %215 = phi i64 [ %163, %162 ], [ %169, %206 ]
  %216 = phi i32 [ %143, %162 ], [ %212, %206 ]
  br label %217

217:                                              ; preds = %214, %217
  %218 = phi i64 [ %233, %217 ], [ %215, %214 ]
  %219 = phi i32 [ %232, %217 ], [ %216, %214 ]
  %220 = getelementptr inbounds i16, i16* %114, i64 %218
  %221 = load i16, i16* %220, align 2
  %222 = zext i16 %221 to i32
  %223 = and i32 %222, 65532
  %224 = icmp eq i32 %223, 8204
  %225 = add nsw i32 %222, -8234
  %226 = icmp ult i32 %225, 5
  %227 = or i1 %224, %226
  %228 = add nsw i32 %222, -8294
  %229 = icmp ult i32 %228, 4
  %230 = or i1 %229, %227
  %231 = zext i1 %230 to i32
  %232 = add nsw i32 %219, %231
  %233 = add nsw i64 %218, 1
  %234 = icmp eq i64 %233, %164
  br i1 %234, label %235, label %217, !llvm.loop !13

235:                                              ; preds = %217, %206, %158
  %236 = phi i32 [ %143, %158 ], [ %212, %206 ], [ %232, %217 ]
  %237 = sub nsw i32 %70, %236
  br label %238

238:                                              ; preds = %46, %38, %120, %120, %120, %120, %120, %120, %120, %120, %120, %110, %106, %148, %235, %3, %5, %85, %37, %27, %20
  %239 = phi i32 [ -1, %27 ], [ %87, %85 ], [ -1, %37 ], [ -1, %20 ], [ -1, %5 ], [ -1, %3 ], [ %149, %148 ], [ %237, %235 ], [ -1, %120 ], [ %70, %106 ], [ -1, %110 ], [ -1, %120 ], [ -1, %120 ], [ -1, %120 ], [ -1, %120 ], [ -1, %120 ], [ -1, %120 ], [ -1, %120 ], [ -1, %120 ], [ -1, %38 ], [ -1, %46 ]
  ret i32 %239
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ubidi_getLogicalIndex_69(%struct.UBiDi*, i32, i32*) local_unnamed_addr #0 {
  %4 = icmp eq i32* %2, null
  br i1 %4, label %220, label %5

5:                                                ; preds = %3
  %6 = load i32, i32* %2, align 4
  %7 = icmp slt i32 %6, 1
  br i1 %7, label %8, label %220

8:                                                ; preds = %5
  %9 = icmp eq %struct.UBiDi* %0, null
  br i1 %9, label %20, label %10

10:                                               ; preds = %8
  %11 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 0
  %12 = load %struct.UBiDi*, %struct.UBiDi** %11, align 8
  %13 = icmp eq %struct.UBiDi* %12, %0
  br i1 %13, label %21, label %14

14:                                               ; preds = %10
  %15 = icmp eq %struct.UBiDi* %12, null
  br i1 %15, label %20, label %16

16:                                               ; preds = %14
  %17 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %12, i64 0, i32 0
  %18 = load %struct.UBiDi*, %struct.UBiDi** %17, align 8
  %19 = icmp eq %struct.UBiDi* %18, %12
  br i1 %19, label %21, label %20

20:                                               ; preds = %14, %8, %16
  store i32 27, i32* %2, align 4
  br label %220

21:                                               ; preds = %10, %16
  %22 = icmp slt i32 %1, 0
  br i1 %22, label %27, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 4
  %25 = load i32, i32* %24, align 8
  %26 = icmp sgt i32 %25, %1
  br i1 %26, label %28, label %27

27:                                               ; preds = %23, %21
  store i32 1, i32* %2, align 4
  br label %220

28:                                               ; preds = %23
  %29 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %44

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 46
  %34 = load i32, i32* %33, align 8
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %44

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 32
  %38 = load i32, i32* %37, align 8
  switch i32 %38, label %44 [
    i32 0, label %220
    i32 1, label %39
  ]

39:                                               ; preds = %36
  %40 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 3
  %41 = load i32, i32* %40, align 4
  %42 = xor i32 %1, -1
  %43 = add i32 %41, %42
  br label %220

44:                                               ; preds = %36, %32, %28
  %45 = tail call signext i8 @ubidi_getRuns_69(%struct.UBiDi* nonnull %0, i32* undef)
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  store i32 7, i32* %2, align 4
  br label %220

48:                                               ; preds = %44
  %49 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 40
  %50 = load %struct.Run*, %struct.Run** %49, align 8
  %51 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 39
  %52 = load i32, i32* %51, align 8
  %53 = load i32, i32* %29, align 4
  %54 = icmp sgt i32 %53, 0
  br i1 %54, label %55, label %86

55:                                               ; preds = %48, %81
  %56 = phi i64 [ %83, %81 ], [ 0, %48 ]
  %57 = phi i32 [ %82, %81 ], [ 0, %48 ]
  %58 = phi i32 [ %60, %81 ], [ 0, %48 ]
  %59 = getelementptr inbounds %struct.Run, %struct.Run* %50, i64 %56, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %struct.Run, %struct.Run* %50, i64 %56, i32 2
  %62 = load i32, i32* %61, align 4
  %63 = and i32 %62, 5
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %70, label %65

65:                                               ; preds = %55
  %66 = add nsw i32 %58, %57
  %67 = icmp slt i32 %66, %1
  br i1 %67, label %68, label %220

68:                                               ; preds = %65
  %69 = add nsw i32 %57, 1
  br label %70

70:                                               ; preds = %55, %68
  %71 = phi i32 [ %69, %68 ], [ %57, %55 ]
  %72 = add nsw i32 %71, %60
  %73 = icmp sgt i32 %72, %1
  br i1 %73, label %84, label %74

74:                                               ; preds = %70
  %75 = and i32 %62, 10
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %81, label %77

77:                                               ; preds = %74
  %78 = icmp eq i32 %72, %1
  br i1 %78, label %220, label %79

79:                                               ; preds = %77
  %80 = add nsw i32 %71, 1
  br label %81

81:                                               ; preds = %74, %79
  %82 = phi i32 [ %80, %79 ], [ %71, %74 ]
  %83 = add nuw i64 %56, 1
  br label %55

84:                                               ; preds = %70
  %85 = sub nsw i32 %1, %71
  br label %161

86:                                               ; preds = %48
  %87 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 46
  %88 = load i32, i32* %87, align 8
  %89 = icmp sgt i32 %88, 0
  br i1 %89, label %90, label %161

90:                                               ; preds = %86
  %91 = getelementptr inbounds %struct.Run, %struct.Run* %50, i64 0, i32 1
  %92 = load i32, i32* %91, align 4
  %93 = getelementptr inbounds %struct.Run, %struct.Run* %50, i64 0, i32 2
  %94 = load i32, i32* %93, align 4
  %95 = add nsw i32 %92, %94
  %96 = icmp sgt i32 %95, %1
  br i1 %96, label %114, label %97

97:                                               ; preds = %90, %97
  %98 = phi i64 [ %103, %97 ], [ 0, %90 ]
  %99 = phi i32 [ %107, %97 ], [ %94, %90 ]
  %100 = phi i32 [ %105, %97 ], [ %92, %90 ]
  %101 = phi i32 [ %102, %97 ], [ 0, %90 ]
  %102 = sub nsw i32 %101, %99
  %103 = add nuw i64 %98, 1
  %104 = getelementptr inbounds %struct.Run, %struct.Run* %50, i64 %103, i32 1
  %105 = load i32, i32* %104, align 4
  %106 = getelementptr inbounds %struct.Run, %struct.Run* %50, i64 %103, i32 2
  %107 = load i32, i32* %106, align 4
  %108 = sub i32 %105, %102
  %109 = add nsw i32 %108, %107
  %110 = icmp sgt i32 %109, %1
  br i1 %110, label %111, label %97

111:                                              ; preds = %97
  %112 = and i64 %103, 4294967295
  %113 = sub nsw i32 %105, %100
  br label %114

114:                                              ; preds = %111, %90
  %115 = phi i32 [ %102, %111 ], [ 0, %90 ]
  %116 = phi i32 [ %100, %111 ], [ 0, %90 ]
  %117 = phi i64 [ %112, %111 ], [ 0, %90 ]
  %118 = phi i32 [ %113, %111 ], [ %92, %90 ]
  %119 = phi i32 [ %107, %111 ], [ %94, %90 ]
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %158, label %121

121:                                              ; preds = %114
  %122 = getelementptr inbounds %struct.Run, %struct.Run* %50, i64 %117, i32 0
  %123 = load i32, i32* %122, align 4
  %124 = icmp sgt i32 %123, -1
  %125 = and i32 %123, 2147483647
  %126 = add nsw i32 %125, %118
  %127 = icmp sgt i32 %118, 0
  br i1 %127, label %128, label %158

128:                                              ; preds = %121
  %129 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 1
  %130 = load i16*, i16** %129, align 8
  br label %131

131:                                              ; preds = %131, %128
  %132 = phi i32 [ 0, %128 ], [ %155, %131 ]
  %133 = phi i32 [ %115, %128 ], [ %151, %131 ]
  %134 = add nuw nsw i32 %132, %125
  %135 = xor i32 %132, -1
  %136 = add i32 %126, %135
  %137 = select i1 %124, i32 %134, i32 %136
  %138 = sext i32 %137 to i64
  %139 = getelementptr inbounds i16, i16* %130, i64 %138
  %140 = load i16, i16* %139, align 2
  %141 = zext i16 %140 to i32
  %142 = and i32 %141, 65532
  %143 = icmp eq i32 %142, 8204
  %144 = add nsw i32 %141, -8234
  %145 = icmp ult i32 %144, 5
  %146 = or i1 %143, %145
  %147 = add nsw i32 %141, -8294
  %148 = icmp ult i32 %147, 4
  %149 = or i1 %148, %146
  %150 = zext i1 %149 to i32
  %151 = add nsw i32 %133, %150
  %152 = add nsw i32 %151, %1
  %153 = add nsw i32 %132, %116
  %154 = icmp ne i32 %152, %153
  %155 = add nuw nsw i32 %132, 1
  %156 = icmp slt i32 %155, %118
  %157 = and i1 %154, %156
  br i1 %157, label %131, label %158

158:                                              ; preds = %131, %121, %114
  %159 = phi i32 [ %115, %114 ], [ %115, %121 ], [ %151, %131 ]
  %160 = add nsw i32 %159, %1
  br label %161

161:                                              ; preds = %84, %86, %158
  %162 = phi i32 [ %85, %84 ], [ %160, %158 ], [ %1, %86 ]
  %163 = icmp slt i32 %52, 11
  br i1 %163, label %164, label %180

164:                                              ; preds = %161, %164
  %165 = phi i64 [ %169, %164 ], [ 0, %161 ]
  %166 = getelementptr inbounds %struct.Run, %struct.Run* %50, i64 %165, i32 1
  %167 = load i32, i32* %166, align 4
  %168 = icmp slt i32 %162, %167
  %169 = add nuw i64 %165, 1
  br i1 %168, label %192, label %164

170:                                              ; preds = %180, %186
  %171 = phi i32 [ %173, %186 ], [ %182, %180 ]
  %172 = add nsw i32 %171, %181
  %173 = sdiv i32 %172, 2
  %174 = sext i32 %173 to i64
  %175 = getelementptr inbounds %struct.Run, %struct.Run* %50, i64 %174, i32 1
  %176 = load i32, i32* %175, align 4
  %177 = icmp slt i32 %162, %176
  br i1 %177, label %183, label %178

178:                                              ; preds = %170
  %179 = add nsw i32 %173, 1
  br label %180

180:                                              ; preds = %161, %178
  %181 = phi i32 [ %179, %178 ], [ 0, %161 ]
  %182 = phi i32 [ %171, %178 ], [ %52, %161 ]
  br label %170

183:                                              ; preds = %170
  %184 = add i32 %172, 1
  %185 = icmp ult i32 %184, 3
  br i1 %185, label %196, label %186

186:                                              ; preds = %183
  %187 = add nsw i32 %173, -1
  %188 = sext i32 %187 to i64
  %189 = getelementptr inbounds %struct.Run, %struct.Run* %50, i64 %188, i32 1
  %190 = load i32, i32* %189, align 4
  %191 = icmp slt i32 %162, %190
  br i1 %191, label %170, label %196

192:                                              ; preds = %164
  %193 = trunc i64 %165 to i32
  %194 = shl i64 %165, 32
  %195 = ashr exact i64 %194, 32
  br label %196

196:                                              ; preds = %183, %186, %192
  %197 = phi i64 [ %195, %192 ], [ %174, %186 ], [ %174, %183 ]
  %198 = phi i32 [ %193, %192 ], [ %173, %186 ], [ %173, %183 ]
  %199 = getelementptr inbounds %struct.Run, %struct.Run* %50, i64 %197, i32 0
  %200 = load i32, i32* %199, align 4
  %201 = icmp sgt i32 %200, -1
  br i1 %201, label %202, label %213

202:                                              ; preds = %196
  %203 = icmp sgt i32 %198, 0
  br i1 %203, label %204, label %210

204:                                              ; preds = %202
  %205 = add nsw i32 %198, -1
  %206 = sext i32 %205 to i64
  %207 = getelementptr inbounds %struct.Run, %struct.Run* %50, i64 %206, i32 1
  %208 = load i32, i32* %207, align 4
  %209 = sub nsw i32 %162, %208
  br label %210

210:                                              ; preds = %204, %202
  %211 = phi i32 [ %209, %204 ], [ %162, %202 ]
  %212 = add nsw i32 %211, %200
  br label %220

213:                                              ; preds = %196
  %214 = and i32 %200, 2147483647
  %215 = getelementptr inbounds %struct.Run, %struct.Run* %50, i64 %197, i32 1
  %216 = load i32, i32* %215, align 4
  %217 = xor i32 %162, -1
  %218 = add i32 %214, %217
  %219 = add i32 %218, %216
  br label %220

220:                                              ; preds = %77, %65, %36, %3, %5, %213, %210, %47, %39, %27, %20
  %221 = phi i32 [ -1, %27 ], [ %43, %39 ], [ %212, %210 ], [ %219, %213 ], [ -1, %47 ], [ -1, %20 ], [ -1, %5 ], [ -1, %3 ], [ %1, %36 ], [ -1, %65 ], [ -1, %77 ]
  ret i32 %221
}

; Function Attrs: nounwind ssp uwtable
define hidden void @ubidi_getLogicalMap_69(%struct.UBiDi*, i32*, i32*) local_unnamed_addr #0 {
  %4 = icmp eq i32* %2, null
  br i1 %4, label %496, label %5

5:                                                ; preds = %3
  %6 = load i32, i32* %2, align 4
  %7 = icmp slt i32 %6, 1
  br i1 %7, label %8, label %496

8:                                                ; preds = %5
  %9 = icmp eq %struct.UBiDi* %0, null
  br i1 %9, label %20, label %10

10:                                               ; preds = %8
  %11 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 0
  %12 = load %struct.UBiDi*, %struct.UBiDi** %11, align 8
  %13 = icmp eq %struct.UBiDi* %12, %0
  br i1 %13, label %21, label %14

14:                                               ; preds = %10
  %15 = icmp eq %struct.UBiDi* %12, null
  br i1 %15, label %20, label %16

16:                                               ; preds = %14
  %17 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %12, i64 0, i32 0
  %18 = load %struct.UBiDi*, %struct.UBiDi** %17, align 8
  %19 = icmp eq %struct.UBiDi* %18, %12
  br i1 %19, label %21, label %20

20:                                               ; preds = %8, %14, %16
  store i32 27, i32* %2, align 4
  br label %496

21:                                               ; preds = %10, %16
  %22 = tail call signext i8 @ubidi_getRuns_69(%struct.UBiDi* nonnull %0, i32* undef) #5
  %23 = load i32, i32* %2, align 4
  %24 = icmp slt i32 %23, 1
  br i1 %24, label %25, label %496

25:                                               ; preds = %21
  %26 = icmp eq i32* %1, null
  br i1 %26, label %27, label %28

27:                                               ; preds = %25
  store i32 1, i32* %2, align 4
  br label %496

28:                                               ; preds = %25
  %29 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 40
  %30 = load %struct.Run*, %struct.Run** %29, align 8
  %31 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 3
  %32 = load i32, i32* %31, align 4
  %33 = icmp slt i32 %32, 1
  br i1 %33, label %496, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 4
  %36 = load i32, i32* %35, align 8
  %37 = icmp sgt i32 %32, %36
  br i1 %37, label %38, label %42

38:                                               ; preds = %34
  %39 = bitcast i32* %1 to i8*
  %40 = sext i32 %32 to i64
  %41 = shl nsw i64 %40, 2
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %39, i8 -1, i64 %41, i1 false)
  br label %42

42:                                               ; preds = %38, %34
  %43 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 39
  %44 = load i32, i32* %43, align 8
  %45 = icmp sgt i32 %44, 0
  br i1 %45, label %46, label %240

46:                                               ; preds = %42, %234
  %47 = phi i64 [ %236, %234 ], [ 0, %42 ]
  %48 = phi i32 [ %235, %234 ], [ 0, %42 ]
  %49 = getelementptr inbounds %struct.Run, %struct.Run* %30, i64 %47, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %struct.Run, %struct.Run* %30, i64 %47, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = icmp sgt i32 %50, -1
  %54 = and i32 %50, 2147483647
  br i1 %53, label %55, label %148

55:                                               ; preds = %46
  %56 = zext i32 %54 to i64
  %57 = add nsw i32 %48, 1
  %58 = icmp sgt i32 %52, %57
  %59 = select i1 %58, i32 %52, i32 %57
  %60 = xor i32 %48, -1
  %61 = add i32 %59, %60
  %62 = zext i32 %61 to i64
  %63 = add nuw nsw i64 %62, 1
  %64 = icmp ult i64 %63, 8
  br i1 %64, label %138, label %65

65:                                               ; preds = %55
  %66 = and i64 %63, 8589934584
  %67 = add nuw nsw i64 %66, %56
  %68 = trunc i64 %66 to i32
  %69 = add i32 %48, %68
  %70 = insertelement <4 x i32> undef, i32 %48, i32 0
  %71 = shufflevector <4 x i32> %70, <4 x i32> undef, <4 x i32> zeroinitializer
  %72 = add <4 x i32> %71, <i32 0, i32 1, i32 2, i32 3>
  %73 = add nsw i64 %66, -8
  %74 = lshr exact i64 %73, 3
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, 3
  %77 = icmp ult i64 %73, 24
  br i1 %77, label %118, label %78

78:                                               ; preds = %65
  %79 = sub nsw i64 %75, %76
  br label %80

80:                                               ; preds = %80, %78
  %81 = phi i64 [ 0, %78 ], [ %114, %80 ]
  %82 = phi <4 x i32> [ %72, %78 ], [ %115, %80 ]
  %83 = phi i64 [ %79, %78 ], [ %116, %80 ]
  %84 = add i64 %81, %56
  %85 = add <4 x i32> %82, <i32 4, i32 4, i32 4, i32 4>
  %86 = getelementptr inbounds i32, i32* %1, i64 %84
  %87 = bitcast i32* %86 to <4 x i32>*
  store <4 x i32> %82, <4 x i32>* %87, align 4
  %88 = getelementptr inbounds i32, i32* %86, i64 4
  %89 = bitcast i32* %88 to <4 x i32>*
  store <4 x i32> %85, <4 x i32>* %89, align 4
  %90 = or i64 %81, 8
  %91 = add <4 x i32> %82, <i32 8, i32 8, i32 8, i32 8>
  %92 = add i64 %90, %56
  %93 = add <4 x i32> %82, <i32 12, i32 12, i32 12, i32 12>
  %94 = getelementptr inbounds i32, i32* %1, i64 %92
  %95 = bitcast i32* %94 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %95, align 4
  %96 = getelementptr inbounds i32, i32* %94, i64 4
  %97 = bitcast i32* %96 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %97, align 4
  %98 = or i64 %81, 16
  %99 = add <4 x i32> %82, <i32 16, i32 16, i32 16, i32 16>
  %100 = add i64 %98, %56
  %101 = add <4 x i32> %82, <i32 20, i32 20, i32 20, i32 20>
  %102 = getelementptr inbounds i32, i32* %1, i64 %100
  %103 = bitcast i32* %102 to <4 x i32>*
  store <4 x i32> %99, <4 x i32>* %103, align 4
  %104 = getelementptr inbounds i32, i32* %102, i64 4
  %105 = bitcast i32* %104 to <4 x i32>*
  store <4 x i32> %101, <4 x i32>* %105, align 4
  %106 = or i64 %81, 24
  %107 = add <4 x i32> %82, <i32 24, i32 24, i32 24, i32 24>
  %108 = add i64 %106, %56
  %109 = add <4 x i32> %82, <i32 28, i32 28, i32 28, i32 28>
  %110 = getelementptr inbounds i32, i32* %1, i64 %108
  %111 = bitcast i32* %110 to <4 x i32>*
  store <4 x i32> %107, <4 x i32>* %111, align 4
  %112 = getelementptr inbounds i32, i32* %110, i64 4
  %113 = bitcast i32* %112 to <4 x i32>*
  store <4 x i32> %109, <4 x i32>* %113, align 4
  %114 = add i64 %81, 32
  %115 = add <4 x i32> %82, <i32 32, i32 32, i32 32, i32 32>
  %116 = add i64 %83, -4
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %80, !llvm.loop !14

118:                                              ; preds = %80, %65
  %119 = phi i64 [ 0, %65 ], [ %114, %80 ]
  %120 = phi <4 x i32> [ %72, %65 ], [ %115, %80 ]
  %121 = icmp eq i64 %76, 0
  br i1 %121, label %136, label %122

122:                                              ; preds = %118, %122
  %123 = phi i64 [ %132, %122 ], [ %119, %118 ]
  %124 = phi <4 x i32> [ %133, %122 ], [ %120, %118 ]
  %125 = phi i64 [ %134, %122 ], [ %76, %118 ]
  %126 = add i64 %123, %56
  %127 = add <4 x i32> %124, <i32 4, i32 4, i32 4, i32 4>
  %128 = getelementptr inbounds i32, i32* %1, i64 %126
  %129 = bitcast i32* %128 to <4 x i32>*
  store <4 x i32> %124, <4 x i32>* %129, align 4
  %130 = getelementptr inbounds i32, i32* %128, i64 4
  %131 = bitcast i32* %130 to <4 x i32>*
  store <4 x i32> %127, <4 x i32>* %131, align 4
  %132 = add i64 %123, 8
  %133 = add <4 x i32> %124, <i32 8, i32 8, i32 8, i32 8>
  %134 = add i64 %125, -1
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %136, label %122, !llvm.loop !15

136:                                              ; preds = %122, %118
  %137 = icmp eq i64 %63, %66
  br i1 %137, label %234, label %138

138:                                              ; preds = %136, %55
  %139 = phi i64 [ %56, %55 ], [ %67, %136 ]
  %140 = phi i32 [ %48, %55 ], [ %69, %136 ]
  br label %141

141:                                              ; preds = %138, %141
  %142 = phi i64 [ %145, %141 ], [ %139, %138 ]
  %143 = phi i32 [ %144, %141 ], [ %140, %138 ]
  %144 = add nsw i32 %143, 1
  %145 = add nuw nsw i64 %142, 1
  %146 = getelementptr inbounds i32, i32* %1, i64 %142
  store i32 %143, i32* %146, align 4
  %147 = icmp slt i32 %144, %52
  br i1 %147, label %141, label %234, !llvm.loop !17

148:                                              ; preds = %46
  %149 = add i32 %52, %54
  %150 = sub i32 %149, %48
  %151 = sext i32 %150 to i64
  %152 = add nsw i32 %48, 1
  %153 = icmp sgt i32 %52, %152
  %154 = select i1 %153, i32 %52, i32 %152
  %155 = xor i32 %48, -1
  %156 = add i32 %154, %155
  %157 = zext i32 %156 to i64
  %158 = add nuw nsw i64 %157, 1
  %159 = icmp ult i64 %158, 8
  br i1 %159, label %224, label %160

160:                                              ; preds = %148
  %161 = and i64 %158, 8589934584
  %162 = sub nsw i64 %151, %161
  %163 = trunc i64 %161 to i32
  %164 = add i32 %48, %163
  %165 = insertelement <4 x i32> undef, i32 %48, i32 0
  %166 = shufflevector <4 x i32> %165, <4 x i32> undef, <4 x i32> zeroinitializer
  %167 = add <4 x i32> %166, <i32 0, i32 1, i32 2, i32 3>
  %168 = add nsw i64 %161, -8
  %169 = lshr exact i64 %168, 3
  %170 = add nuw nsw i64 %169, 1
  %171 = and i64 %170, 1
  %172 = icmp eq i64 %168, 0
  br i1 %172, label %206, label %173

173:                                              ; preds = %160
  %174 = sub nuw nsw i64 %170, %171
  br label %175

175:                                              ; preds = %175, %173
  %176 = phi i64 [ 0, %173 ], [ %202, %175 ]
  %177 = phi <4 x i32> [ %167, %173 ], [ %203, %175 ]
  %178 = phi i64 [ %174, %173 ], [ %204, %175 ]
  %179 = add <4 x i32> %177, <i32 4, i32 4, i32 4, i32 4>
  %180 = xor i64 %176, -1
  %181 = add i64 %180, %151
  %182 = getelementptr inbounds i32, i32* %1, i64 %181
  %183 = shufflevector <4 x i32> %177, <4 x i32> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %184 = getelementptr inbounds i32, i32* %182, i64 -3
  %185 = bitcast i32* %184 to <4 x i32>*
  store <4 x i32> %183, <4 x i32>* %185, align 4
  %186 = shufflevector <4 x i32> %179, <4 x i32> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %187 = getelementptr inbounds i32, i32* %182, i64 -4
  %188 = getelementptr inbounds i32, i32* %187, i64 -3
  %189 = bitcast i32* %188 to <4 x i32>*
  store <4 x i32> %186, <4 x i32>* %189, align 4
  %190 = add <4 x i32> %177, <i32 8, i32 8, i32 8, i32 8>
  %191 = add <4 x i32> %177, <i32 12, i32 12, i32 12, i32 12>
  %192 = sub nuw nsw i64 -9, %176
  %193 = add i64 %192, %151
  %194 = getelementptr inbounds i32, i32* %1, i64 %193
  %195 = shufflevector <4 x i32> %190, <4 x i32> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %196 = getelementptr inbounds i32, i32* %194, i64 -3
  %197 = bitcast i32* %196 to <4 x i32>*
  store <4 x i32> %195, <4 x i32>* %197, align 4
  %198 = shufflevector <4 x i32> %191, <4 x i32> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %199 = getelementptr inbounds i32, i32* %194, i64 -4
  %200 = getelementptr inbounds i32, i32* %199, i64 -3
  %201 = bitcast i32* %200 to <4 x i32>*
  store <4 x i32> %198, <4 x i32>* %201, align 4
  %202 = add i64 %176, 16
  %203 = add <4 x i32> %177, <i32 16, i32 16, i32 16, i32 16>
  %204 = add i64 %178, -2
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %206, label %175, !llvm.loop !18

206:                                              ; preds = %175, %160
  %207 = phi i64 [ 0, %160 ], [ %202, %175 ]
  %208 = phi <4 x i32> [ %167, %160 ], [ %203, %175 ]
  %209 = icmp eq i64 %171, 0
  br i1 %209, label %222, label %210

210:                                              ; preds = %206
  %211 = add <4 x i32> %208, <i32 4, i32 4, i32 4, i32 4>
  %212 = xor i64 %207, -1
  %213 = add i64 %212, %151
  %214 = getelementptr inbounds i32, i32* %1, i64 %213
  %215 = shufflevector <4 x i32> %208, <4 x i32> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %216 = getelementptr inbounds i32, i32* %214, i64 -3
  %217 = bitcast i32* %216 to <4 x i32>*
  store <4 x i32> %215, <4 x i32>* %217, align 4
  %218 = shufflevector <4 x i32> %211, <4 x i32> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %219 = getelementptr inbounds i32, i32* %214, i64 -4
  %220 = getelementptr inbounds i32, i32* %219, i64 -3
  %221 = bitcast i32* %220 to <4 x i32>*
  store <4 x i32> %218, <4 x i32>* %221, align 4
  br label %222

222:                                              ; preds = %206, %210
  %223 = icmp eq i64 %158, %161
  br i1 %223, label %234, label %224

224:                                              ; preds = %222, %148
  %225 = phi i64 [ %151, %148 ], [ %162, %222 ]
  %226 = phi i32 [ %48, %148 ], [ %164, %222 ]
  br label %227

227:                                              ; preds = %224, %227
  %228 = phi i64 [ %231, %227 ], [ %225, %224 ]
  %229 = phi i32 [ %230, %227 ], [ %226, %224 ]
  %230 = add nsw i32 %229, 1
  %231 = add nsw i64 %228, -1
  %232 = getelementptr inbounds i32, i32* %1, i64 %231
  store i32 %229, i32* %232, align 4
  %233 = icmp slt i32 %230, %52
  br i1 %233, label %227, label %234, !llvm.loop !19

234:                                              ; preds = %227, %141, %222, %136
  %235 = phi i32 [ %69, %136 ], [ %164, %222 ], [ %144, %141 ], [ %230, %227 ]
  %236 = add nuw nsw i64 %47, 1
  %237 = load i32, i32* %43, align 8
  %238 = sext i32 %237 to i64
  %239 = icmp slt i64 %236, %238
  br i1 %239, label %46, label %240

240:                                              ; preds = %234, %42
  %241 = phi i32 [ %44, %42 ], [ %237, %234 ]
  %242 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 1
  %243 = load i32, i32* %242, align 4
  %244 = icmp sgt i32 %243, 0
  br i1 %244, label %245, label %357

245:                                              ; preds = %240
  %246 = icmp sgt i32 %241, 0
  br i1 %246, label %247, label %496

247:                                              ; preds = %245
  %248 = zext i32 %241 to i64
  br label %249

249:                                              ; preds = %350, %247
  %250 = phi i64 [ 0, %247 ], [ %355, %350 ]
  %251 = phi i32 [ 0, %247 ], [ %354, %350 ]
  %252 = phi i32 [ 0, %247 ], [ %254, %350 ]
  %253 = getelementptr inbounds %struct.Run, %struct.Run* %30, i64 %250, i32 1
  %254 = load i32, i32* %253, align 4
  %255 = getelementptr inbounds %struct.Run, %struct.Run* %30, i64 %250, i32 2
  %256 = load i32, i32* %255, align 4
  %257 = and i32 %256, 5
  %258 = icmp ne i32 %257, 0
  %259 = zext i1 %258 to i32
  %260 = add nsw i32 %251, %259
  %261 = icmp sgt i32 %260, 0
  br i1 %261, label %262, label %350

262:                                              ; preds = %249
  %263 = sub i32 %254, %252
  %264 = getelementptr inbounds %struct.Run, %struct.Run* %30, i64 %250, i32 0
  %265 = load i32, i32* %264, align 4
  %266 = icmp sgt i32 %263, 0
  br i1 %266, label %267, label %350

267:                                              ; preds = %262
  %268 = and i32 %265, 2147483647
  %269 = add nuw nsw i32 %263, %268
  %270 = and i32 %265, 2147483647
  %271 = zext i32 %270 to i64
  %272 = sext i32 %269 to i64
  %273 = add nuw nsw i64 %271, 1
  %274 = add i32 %254, %270
  %275 = sub i32 %274, %252
  %276 = sext i32 %275 to i64
  %277 = icmp sgt i64 %273, %276
  %278 = select i1 %277, i64 %273, i64 %276
  %279 = sub nsw i64 %278, %271
  %280 = icmp ult i64 %279, 8
  br i1 %280, label %341, label %281

281:                                              ; preds = %267
  %282 = and i64 %279, -8
  %283 = add nsw i64 %282, %271
  %284 = insertelement <4 x i32> undef, i32 %260, i32 0
  %285 = shufflevector <4 x i32> %284, <4 x i32> undef, <4 x i32> zeroinitializer
  %286 = insertelement <4 x i32> undef, i32 %260, i32 0
  %287 = shufflevector <4 x i32> %286, <4 x i32> undef, <4 x i32> zeroinitializer
  %288 = add nsw i64 %282, -8
  %289 = lshr exact i64 %288, 3
  %290 = add nuw nsw i64 %289, 1
  %291 = and i64 %290, 1
  %292 = icmp eq i64 %288, 0
  br i1 %292, label %324, label %293

293:                                              ; preds = %281
  %294 = sub nuw nsw i64 %290, %291
  br label %295

295:                                              ; preds = %295, %293
  %296 = phi i64 [ 0, %293 ], [ %321, %295 ]
  %297 = phi i64 [ %294, %293 ], [ %322, %295 ]
  %298 = add i64 %296, %271
  %299 = getelementptr inbounds i32, i32* %1, i64 %298
  %300 = bitcast i32* %299 to <4 x i32>*
  %301 = load <4 x i32>, <4 x i32>* %300, align 4
  %302 = getelementptr inbounds i32, i32* %299, i64 4
  %303 = bitcast i32* %302 to <4 x i32>*
  %304 = load <4 x i32>, <4 x i32>* %303, align 4
  %305 = add nsw <4 x i32> %301, %285
  %306 = add nsw <4 x i32> %304, %287
  %307 = bitcast i32* %299 to <4 x i32>*
  store <4 x i32> %305, <4 x i32>* %307, align 4
  %308 = bitcast i32* %302 to <4 x i32>*
  store <4 x i32> %306, <4 x i32>* %308, align 4
  %309 = or i64 %296, 8
  %310 = add i64 %309, %271
  %311 = getelementptr inbounds i32, i32* %1, i64 %310
  %312 = bitcast i32* %311 to <4 x i32>*
  %313 = load <4 x i32>, <4 x i32>* %312, align 4
  %314 = getelementptr inbounds i32, i32* %311, i64 4
  %315 = bitcast i32* %314 to <4 x i32>*
  %316 = load <4 x i32>, <4 x i32>* %315, align 4
  %317 = add nsw <4 x i32> %313, %285
  %318 = add nsw <4 x i32> %316, %287
  %319 = bitcast i32* %311 to <4 x i32>*
  store <4 x i32> %317, <4 x i32>* %319, align 4
  %320 = bitcast i32* %314 to <4 x i32>*
  store <4 x i32> %318, <4 x i32>* %320, align 4
  %321 = add i64 %296, 16
  %322 = add i64 %297, -2
  %323 = icmp eq i64 %322, 0
  br i1 %323, label %324, label %295, !llvm.loop !20

324:                                              ; preds = %295, %281
  %325 = phi i64 [ 0, %281 ], [ %321, %295 ]
  %326 = icmp eq i64 %291, 0
  br i1 %326, label %339, label %327

327:                                              ; preds = %324
  %328 = add i64 %325, %271
  %329 = getelementptr inbounds i32, i32* %1, i64 %328
  %330 = bitcast i32* %329 to <4 x i32>*
  %331 = load <4 x i32>, <4 x i32>* %330, align 4
  %332 = getelementptr inbounds i32, i32* %329, i64 4
  %333 = bitcast i32* %332 to <4 x i32>*
  %334 = load <4 x i32>, <4 x i32>* %333, align 4
  %335 = add nsw <4 x i32> %331, %285
  %336 = add nsw <4 x i32> %334, %287
  %337 = bitcast i32* %329 to <4 x i32>*
  store <4 x i32> %335, <4 x i32>* %337, align 4
  %338 = bitcast i32* %332 to <4 x i32>*
  store <4 x i32> %336, <4 x i32>* %338, align 4
  br label %339

339:                                              ; preds = %324, %327
  %340 = icmp eq i64 %279, %282
  br i1 %340, label %350, label %341

341:                                              ; preds = %339, %267
  %342 = phi i64 [ %271, %267 ], [ %283, %339 ]
  br label %343

343:                                              ; preds = %341, %343
  %344 = phi i64 [ %348, %343 ], [ %342, %341 ]
  %345 = getelementptr inbounds i32, i32* %1, i64 %344
  %346 = load i32, i32* %345, align 4
  %347 = add nsw i32 %346, %260
  store i32 %347, i32* %345, align 4
  %348 = add nuw nsw i64 %344, 1
  %349 = icmp slt i64 %348, %272
  br i1 %349, label %343, label %350, !llvm.loop !21

350:                                              ; preds = %343, %339, %262, %249
  %351 = and i32 %256, 10
  %352 = icmp ne i32 %351, 0
  %353 = zext i1 %352 to i32
  %354 = add nsw i32 %260, %353
  %355 = add nuw nsw i64 %250, 1
  %356 = icmp eq i64 %355, %248
  br i1 %356, label %496, label %249

357:                                              ; preds = %240
  %358 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 46
  %359 = load i32, i32* %358, align 8
  %360 = icmp sgt i32 %359, 0
  %361 = icmp sgt i32 %241, 0
  %362 = and i1 %360, %361
  br i1 %362, label %363, label %496

363:                                              ; preds = %357
  %364 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 1
  %365 = zext i32 %241 to i64
  br label %366

366:                                              ; preds = %492, %363
  %367 = phi i64 [ 0, %363 ], [ %494, %492 ]
  %368 = phi i32 [ 0, %363 ], [ %493, %492 ]
  %369 = phi i32 [ 0, %363 ], [ %371, %492 ]
  %370 = getelementptr inbounds %struct.Run, %struct.Run* %30, i64 %367, i32 1
  %371 = load i32, i32* %370, align 4
  %372 = sub i32 %371, %369
  %373 = getelementptr inbounds %struct.Run, %struct.Run* %30, i64 %367, i32 2
  %374 = load i32, i32* %373, align 4
  %375 = icmp eq i32 %368, %374
  br i1 %375, label %492, label %376

376:                                              ; preds = %366
  %377 = getelementptr inbounds %struct.Run, %struct.Run* %30, i64 %367, i32 0
  %378 = load i32, i32* %377, align 4
  %379 = icmp sgt i32 %378, -1
  %380 = and i32 %378, 2147483647
  %381 = add nsw i32 %380, %372
  %382 = icmp eq i32 %374, 0
  %383 = icmp sgt i32 %372, 0
  br i1 %382, label %385, label %384

384:                                              ; preds = %376
  br i1 %383, label %467, label %492

385:                                              ; preds = %376
  br i1 %383, label %386, label %492

386:                                              ; preds = %385
  %387 = and i32 %378, 2147483647
  %388 = zext i32 %387 to i64
  %389 = sext i32 %381 to i64
  %390 = add nuw nsw i64 %388, 1
  %391 = add i32 %371, %387
  %392 = sub i32 %391, %369
  %393 = sext i32 %392 to i64
  %394 = icmp sgt i64 %390, %393
  %395 = select i1 %394, i64 %390, i64 %393
  %396 = sub nsw i64 %395, %388
  %397 = icmp ult i64 %396, 8
  br i1 %397, label %458, label %398

398:                                              ; preds = %386
  %399 = and i64 %396, -8
  %400 = add nsw i64 %399, %388
  %401 = insertelement <4 x i32> undef, i32 %368, i32 0
  %402 = shufflevector <4 x i32> %401, <4 x i32> undef, <4 x i32> zeroinitializer
  %403 = insertelement <4 x i32> undef, i32 %368, i32 0
  %404 = shufflevector <4 x i32> %403, <4 x i32> undef, <4 x i32> zeroinitializer
  %405 = add nsw i64 %399, -8
  %406 = lshr exact i64 %405, 3
  %407 = add nuw nsw i64 %406, 1
  %408 = and i64 %407, 1
  %409 = icmp eq i64 %405, 0
  br i1 %409, label %441, label %410

410:                                              ; preds = %398
  %411 = sub nuw nsw i64 %407, %408
  br label %412

412:                                              ; preds = %412, %410
  %413 = phi i64 [ 0, %410 ], [ %438, %412 ]
  %414 = phi i64 [ %411, %410 ], [ %439, %412 ]
  %415 = add i64 %413, %388
  %416 = getelementptr inbounds i32, i32* %1, i64 %415
  %417 = bitcast i32* %416 to <4 x i32>*
  %418 = load <4 x i32>, <4 x i32>* %417, align 4
  %419 = getelementptr inbounds i32, i32* %416, i64 4
  %420 = bitcast i32* %419 to <4 x i32>*
  %421 = load <4 x i32>, <4 x i32>* %420, align 4
  %422 = sub nsw <4 x i32> %418, %402
  %423 = sub nsw <4 x i32> %421, %404
  %424 = bitcast i32* %416 to <4 x i32>*
  store <4 x i32> %422, <4 x i32>* %424, align 4
  %425 = bitcast i32* %419 to <4 x i32>*
  store <4 x i32> %423, <4 x i32>* %425, align 4
  %426 = or i64 %413, 8
  %427 = add i64 %426, %388
  %428 = getelementptr inbounds i32, i32* %1, i64 %427
  %429 = bitcast i32* %428 to <4 x i32>*
  %430 = load <4 x i32>, <4 x i32>* %429, align 4
  %431 = getelementptr inbounds i32, i32* %428, i64 4
  %432 = bitcast i32* %431 to <4 x i32>*
  %433 = load <4 x i32>, <4 x i32>* %432, align 4
  %434 = sub nsw <4 x i32> %430, %402
  %435 = sub nsw <4 x i32> %433, %404
  %436 = bitcast i32* %428 to <4 x i32>*
  store <4 x i32> %434, <4 x i32>* %436, align 4
  %437 = bitcast i32* %431 to <4 x i32>*
  store <4 x i32> %435, <4 x i32>* %437, align 4
  %438 = add i64 %413, 16
  %439 = add i64 %414, -2
  %440 = icmp eq i64 %439, 0
  br i1 %440, label %441, label %412, !llvm.loop !22

441:                                              ; preds = %412, %398
  %442 = phi i64 [ 0, %398 ], [ %438, %412 ]
  %443 = icmp eq i64 %408, 0
  br i1 %443, label %456, label %444

444:                                              ; preds = %441
  %445 = add i64 %442, %388
  %446 = getelementptr inbounds i32, i32* %1, i64 %445
  %447 = bitcast i32* %446 to <4 x i32>*
  %448 = load <4 x i32>, <4 x i32>* %447, align 4
  %449 = getelementptr inbounds i32, i32* %446, i64 4
  %450 = bitcast i32* %449 to <4 x i32>*
  %451 = load <4 x i32>, <4 x i32>* %450, align 4
  %452 = sub nsw <4 x i32> %448, %402
  %453 = sub nsw <4 x i32> %451, %404
  %454 = bitcast i32* %446 to <4 x i32>*
  store <4 x i32> %452, <4 x i32>* %454, align 4
  %455 = bitcast i32* %449 to <4 x i32>*
  store <4 x i32> %453, <4 x i32>* %455, align 4
  br label %456

456:                                              ; preds = %441, %444
  %457 = icmp eq i64 %396, %399
  br i1 %457, label %492, label %458

458:                                              ; preds = %456, %386
  %459 = phi i64 [ %388, %386 ], [ %400, %456 ]
  br label %460

460:                                              ; preds = %458, %460
  %461 = phi i64 [ %465, %460 ], [ %459, %458 ]
  %462 = getelementptr inbounds i32, i32* %1, i64 %461
  %463 = load i32, i32* %462, align 4
  %464 = sub nsw i32 %463, %368
  store i32 %464, i32* %462, align 4
  %465 = add nuw nsw i64 %461, 1
  %466 = icmp slt i64 %465, %389
  br i1 %466, label %460, label %492, !llvm.loop !23

467:                                              ; preds = %384, %488
  %468 = phi i32 [ %489, %488 ], [ %368, %384 ]
  %469 = phi i32 [ %490, %488 ], [ 0, %384 ]
  %470 = add nuw nsw i32 %469, %380
  %471 = xor i32 %469, -1
  %472 = add i32 %381, %471
  %473 = select i1 %379, i32 %470, i32 %472
  %474 = load i16*, i16** %364, align 8
  %475 = sext i32 %473 to i64
  %476 = getelementptr inbounds i16, i16* %474, i64 %475
  %477 = load i16, i16* %476, align 2
  %478 = and i16 %477, -4
  %479 = icmp eq i16 %478, 8204
  br i1 %479, label %481, label %480

480:                                              ; preds = %467
  switch i16 %477, label %484 [
    i16 8297, label %481
    i16 8296, label %481
    i16 8295, label %481
    i16 8294, label %481
    i16 8238, label %481
    i16 8237, label %481
    i16 8236, label %481
    i16 8235, label %481
    i16 8234, label %481
  ]

481:                                              ; preds = %480, %480, %480, %480, %480, %480, %480, %480, %480, %467
  %482 = add nsw i32 %468, 1
  %483 = getelementptr inbounds i32, i32* %1, i64 %475
  store i32 -1, i32* %483, align 4
  br label %488

484:                                              ; preds = %480
  %485 = getelementptr inbounds i32, i32* %1, i64 %475
  %486 = load i32, i32* %485, align 4
  %487 = sub nsw i32 %486, %468
  store i32 %487, i32* %485, align 4
  br label %488

488:                                              ; preds = %484, %481
  %489 = phi i32 [ %482, %481 ], [ %468, %484 ]
  %490 = add nuw nsw i32 %469, 1
  %491 = icmp eq i32 %490, %372
  br i1 %491, label %492, label %467

492:                                              ; preds = %488, %460, %456, %384, %385, %366
  %493 = phi i32 [ %368, %366 ], [ %368, %385 ], [ %368, %384 ], [ %368, %456 ], [ %368, %460 ], [ %489, %488 ]
  %494 = add nuw nsw i64 %367, 1
  %495 = icmp eq i64 %494, %365
  br i1 %495, label %496, label %366

496:                                              ; preds = %492, %350, %20, %245, %357, %28, %3, %27, %5, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @ubidi_getVisualMap_69(%struct.UBiDi*, i32*, i32*) local_unnamed_addr #0 {
  %4 = icmp eq i32* %2, null
  br i1 %4, label %705, label %5

5:                                                ; preds = %3
  %6 = load i32, i32* %2, align 4
  %7 = icmp slt i32 %6, 1
  br i1 %7, label %8, label %705

8:                                                ; preds = %5
  %9 = icmp eq i32* %1, null
  br i1 %9, label %10, label %11

10:                                               ; preds = %8
  store i32 1, i32* %2, align 4
  br label %705

11:                                               ; preds = %8
  %12 = icmp eq %struct.UBiDi* %0, null
  br i1 %12, label %23, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 0
  %15 = load %struct.UBiDi*, %struct.UBiDi** %14, align 8
  %16 = icmp eq %struct.UBiDi* %15, %0
  br i1 %16, label %24, label %17

17:                                               ; preds = %13
  %18 = icmp eq %struct.UBiDi* %15, null
  br i1 %18, label %23, label %19

19:                                               ; preds = %17
  %20 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %15, i64 0, i32 0
  %21 = load %struct.UBiDi*, %struct.UBiDi** %20, align 8
  %22 = icmp eq %struct.UBiDi* %21, %15
  br i1 %22, label %24, label %23

23:                                               ; preds = %11, %17, %19
  store i32 27, i32* %2, align 4
  br label %705

24:                                               ; preds = %13, %19
  %25 = tail call signext i8 @ubidi_getRuns_69(%struct.UBiDi* nonnull %0, i32* undef) #5
  %26 = load i32, i32* %2, align 4
  %27 = icmp sgt i32 %26, 0
  br i1 %27, label %705, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 40
  %30 = load %struct.Run*, %struct.Run** %29, align 8
  %31 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 39
  %32 = load i32, i32* %31, align 8
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds %struct.Run, %struct.Run* %30, i64 %33
  %35 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 4
  %36 = load i32, i32* %35, align 8
  %37 = icmp slt i32 %36, 1
  br i1 %37, label %705, label %38

38:                                               ; preds = %28
  %39 = icmp sgt i32 %32, 0
  br i1 %39, label %40, label %241

40:                                               ; preds = %38, %236
  %41 = phi i32* [ %238, %236 ], [ %1, %38 ]
  %42 = phi i32 [ %237, %236 ], [ 0, %38 ]
  %43 = phi %struct.Run* [ %239, %236 ], [ %30, %38 ]
  %44 = getelementptr inbounds %struct.Run, %struct.Run* %43, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %struct.Run, %struct.Run* %43, i64 0, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = icmp sgt i32 %45, -1
  br i1 %48, label %49, label %140

49:                                               ; preds = %40
  %50 = add nsw i32 %42, 1
  %51 = icmp sgt i32 %47, %50
  %52 = select i1 %51, i32 %47, i32 %50
  %53 = xor i32 %42, -1
  %54 = add i32 %52, %53
  %55 = zext i32 %54 to i64
  %56 = add nuw nsw i64 %55, 1
  %57 = icmp ult i64 %56, 8
  br i1 %57, label %128, label %58

58:                                               ; preds = %49
  %59 = and i64 %56, 8589934584
  %60 = trunc i64 %59 to i32
  %61 = add i32 %45, %60
  %62 = trunc i64 %59 to i32
  %63 = add i32 %42, %62
  %64 = getelementptr i32, i32* %41, i64 %59
  %65 = insertelement <4 x i32> undef, i32 %45, i32 0
  %66 = shufflevector <4 x i32> %65, <4 x i32> undef, <4 x i32> zeroinitializer
  %67 = add <4 x i32> %66, <i32 0, i32 1, i32 2, i32 3>
  %68 = add nsw i64 %59, -8
  %69 = lshr exact i64 %68, 3
  %70 = add nuw nsw i64 %69, 1
  %71 = and i64 %70, 3
  %72 = icmp ult i64 %68, 24
  br i1 %72, label %109, label %73

73:                                               ; preds = %58
  %74 = sub nsw i64 %70, %71
  br label %75

75:                                               ; preds = %75, %73
  %76 = phi i64 [ 0, %73 ], [ %105, %75 ]
  %77 = phi <4 x i32> [ %67, %73 ], [ %106, %75 ]
  %78 = phi i64 [ %74, %73 ], [ %107, %75 ]
  %79 = add <4 x i32> %77, <i32 4, i32 4, i32 4, i32 4>
  %80 = getelementptr i32, i32* %41, i64 %76
  %81 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> %77, <4 x i32>* %81, align 4
  %82 = getelementptr i32, i32* %80, i64 4
  %83 = bitcast i32* %82 to <4 x i32>*
  store <4 x i32> %79, <4 x i32>* %83, align 4
  %84 = or i64 %76, 8
  %85 = add <4 x i32> %77, <i32 8, i32 8, i32 8, i32 8>
  %86 = add <4 x i32> %77, <i32 12, i32 12, i32 12, i32 12>
  %87 = getelementptr i32, i32* %41, i64 %84
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> %85, <4 x i32>* %88, align 4
  %89 = getelementptr i32, i32* %87, i64 4
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> %86, <4 x i32>* %90, align 4
  %91 = or i64 %76, 16
  %92 = add <4 x i32> %77, <i32 16, i32 16, i32 16, i32 16>
  %93 = add <4 x i32> %77, <i32 20, i32 20, i32 20, i32 20>
  %94 = getelementptr i32, i32* %41, i64 %91
  %95 = bitcast i32* %94 to <4 x i32>*
  store <4 x i32> %92, <4 x i32>* %95, align 4
  %96 = getelementptr i32, i32* %94, i64 4
  %97 = bitcast i32* %96 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %97, align 4
  %98 = or i64 %76, 24
  %99 = add <4 x i32> %77, <i32 24, i32 24, i32 24, i32 24>
  %100 = add <4 x i32> %77, <i32 28, i32 28, i32 28, i32 28>
  %101 = getelementptr i32, i32* %41, i64 %98
  %102 = bitcast i32* %101 to <4 x i32>*
  store <4 x i32> %99, <4 x i32>* %102, align 4
  %103 = getelementptr i32, i32* %101, i64 4
  %104 = bitcast i32* %103 to <4 x i32>*
  store <4 x i32> %100, <4 x i32>* %104, align 4
  %105 = add i64 %76, 32
  %106 = add <4 x i32> %77, <i32 32, i32 32, i32 32, i32 32>
  %107 = add i64 %78, -4
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %109, label %75, !llvm.loop !24

109:                                              ; preds = %75, %58
  %110 = phi i64 [ 0, %58 ], [ %105, %75 ]
  %111 = phi <4 x i32> [ %67, %58 ], [ %106, %75 ]
  %112 = icmp eq i64 %71, 0
  br i1 %112, label %126, label %113

113:                                              ; preds = %109, %113
  %114 = phi i64 [ %122, %113 ], [ %110, %109 ]
  %115 = phi <4 x i32> [ %123, %113 ], [ %111, %109 ]
  %116 = phi i64 [ %124, %113 ], [ %71, %109 ]
  %117 = add <4 x i32> %115, <i32 4, i32 4, i32 4, i32 4>
  %118 = getelementptr i32, i32* %41, i64 %114
  %119 = bitcast i32* %118 to <4 x i32>*
  store <4 x i32> %115, <4 x i32>* %119, align 4
  %120 = getelementptr i32, i32* %118, i64 4
  %121 = bitcast i32* %120 to <4 x i32>*
  store <4 x i32> %117, <4 x i32>* %121, align 4
  %122 = add i64 %114, 8
  %123 = add <4 x i32> %115, <i32 8, i32 8, i32 8, i32 8>
  %124 = add i64 %116, -1
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %126, label %113, !llvm.loop !25

126:                                              ; preds = %113, %109
  %127 = icmp eq i64 %56, %59
  br i1 %127, label %236, label %128

128:                                              ; preds = %126, %49
  %129 = phi i32 [ %45, %49 ], [ %61, %126 ]
  %130 = phi i32 [ %42, %49 ], [ %63, %126 ]
  %131 = phi i32* [ %41, %49 ], [ %64, %126 ]
  br label %132

132:                                              ; preds = %128, %132
  %133 = phi i32 [ %136, %132 ], [ %129, %128 ]
  %134 = phi i32 [ %138, %132 ], [ %130, %128 ]
  %135 = phi i32* [ %137, %132 ], [ %131, %128 ]
  %136 = add nsw i32 %133, 1
  %137 = getelementptr inbounds i32, i32* %135, i64 1
  store i32 %133, i32* %135, align 4
  %138 = add nsw i32 %134, 1
  %139 = icmp slt i32 %138, %47
  br i1 %139, label %132, label %236, !llvm.loop !26

140:                                              ; preds = %40
  %141 = and i32 %45, 2147483647
  %142 = sub i32 %47, %42
  %143 = add nsw i32 %142, %141
  %144 = add nsw i32 %42, 1
  %145 = icmp sgt i32 %47, %144
  %146 = select i1 %145, i32 %47, i32 %144
  %147 = xor i32 %42, -1
  %148 = add i32 %146, %147
  %149 = zext i32 %148 to i64
  %150 = add nuw nsw i64 %149, 1
  %151 = icmp ult i64 %150, 8
  br i1 %151, label %224, label %152

152:                                              ; preds = %140
  %153 = and i64 %150, 8589934584
  %154 = trunc i64 %153 to i32
  %155 = sub i32 %143, %154
  %156 = trunc i64 %153 to i32
  %157 = add i32 %42, %156
  %158 = getelementptr i32, i32* %41, i64 %153
  %159 = insertelement <4 x i32> undef, i32 %143, i32 0
  %160 = shufflevector <4 x i32> %159, <4 x i32> undef, <4 x i32> zeroinitializer
  %161 = add <4 x i32> %160, <i32 0, i32 -1, i32 -2, i32 -3>
  %162 = add nsw i64 %153, -8
  %163 = lshr exact i64 %162, 3
  %164 = add nuw nsw i64 %163, 1
  %165 = and i64 %164, 3
  %166 = icmp ult i64 %162, 24
  br i1 %166, label %204, label %167

167:                                              ; preds = %152
  %168 = sub nsw i64 %164, %165
  br label %169

169:                                              ; preds = %169, %167
  %170 = phi i64 [ 0, %167 ], [ %200, %169 ]
  %171 = phi <4 x i32> [ %161, %167 ], [ %201, %169 ]
  %172 = phi i64 [ %168, %167 ], [ %202, %169 ]
  %173 = getelementptr i32, i32* %41, i64 %170
  %174 = add nsw <4 x i32> %171, <i32 -1, i32 -1, i32 -1, i32 -1>
  %175 = add <4 x i32> %171, <i32 -5, i32 -5, i32 -5, i32 -5>
  %176 = bitcast i32* %173 to <4 x i32>*
  store <4 x i32> %174, <4 x i32>* %176, align 4
  %177 = getelementptr i32, i32* %173, i64 4
  %178 = bitcast i32* %177 to <4 x i32>*
  store <4 x i32> %175, <4 x i32>* %178, align 4
  %179 = or i64 %170, 8
  %180 = getelementptr i32, i32* %41, i64 %179
  %181 = add <4 x i32> %171, <i32 -9, i32 -9, i32 -9, i32 -9>
  %182 = add <4 x i32> %171, <i32 -13, i32 -13, i32 -13, i32 -13>
  %183 = bitcast i32* %180 to <4 x i32>*
  store <4 x i32> %181, <4 x i32>* %183, align 4
  %184 = getelementptr i32, i32* %180, i64 4
  %185 = bitcast i32* %184 to <4 x i32>*
  store <4 x i32> %182, <4 x i32>* %185, align 4
  %186 = or i64 %170, 16
  %187 = getelementptr i32, i32* %41, i64 %186
  %188 = add <4 x i32> %171, <i32 -17, i32 -17, i32 -17, i32 -17>
  %189 = add <4 x i32> %171, <i32 -21, i32 -21, i32 -21, i32 -21>
  %190 = bitcast i32* %187 to <4 x i32>*
  store <4 x i32> %188, <4 x i32>* %190, align 4
  %191 = getelementptr i32, i32* %187, i64 4
  %192 = bitcast i32* %191 to <4 x i32>*
  store <4 x i32> %189, <4 x i32>* %192, align 4
  %193 = or i64 %170, 24
  %194 = getelementptr i32, i32* %41, i64 %193
  %195 = add <4 x i32> %171, <i32 -25, i32 -25, i32 -25, i32 -25>
  %196 = add <4 x i32> %171, <i32 -29, i32 -29, i32 -29, i32 -29>
  %197 = bitcast i32* %194 to <4 x i32>*
  store <4 x i32> %195, <4 x i32>* %197, align 4
  %198 = getelementptr i32, i32* %194, i64 4
  %199 = bitcast i32* %198 to <4 x i32>*
  store <4 x i32> %196, <4 x i32>* %199, align 4
  %200 = add i64 %170, 32
  %201 = add <4 x i32> %171, <i32 -32, i32 -32, i32 -32, i32 -32>
  %202 = add i64 %172, -4
  %203 = icmp eq i64 %202, 0
  br i1 %203, label %204, label %169, !llvm.loop !27

204:                                              ; preds = %169, %152
  %205 = phi i64 [ 0, %152 ], [ %200, %169 ]
  %206 = phi <4 x i32> [ %161, %152 ], [ %201, %169 ]
  %207 = icmp eq i64 %165, 0
  br i1 %207, label %222, label %208

208:                                              ; preds = %204, %208
  %209 = phi i64 [ %218, %208 ], [ %205, %204 ]
  %210 = phi <4 x i32> [ %219, %208 ], [ %206, %204 ]
  %211 = phi i64 [ %220, %208 ], [ %165, %204 ]
  %212 = getelementptr i32, i32* %41, i64 %209
  %213 = add nsw <4 x i32> %210, <i32 -1, i32 -1, i32 -1, i32 -1>
  %214 = add <4 x i32> %210, <i32 -5, i32 -5, i32 -5, i32 -5>
  %215 = bitcast i32* %212 to <4 x i32>*
  store <4 x i32> %213, <4 x i32>* %215, align 4
  %216 = getelementptr i32, i32* %212, i64 4
  %217 = bitcast i32* %216 to <4 x i32>*
  store <4 x i32> %214, <4 x i32>* %217, align 4
  %218 = add i64 %209, 8
  %219 = add <4 x i32> %210, <i32 -8, i32 -8, i32 -8, i32 -8>
  %220 = add i64 %211, -1
  %221 = icmp eq i64 %220, 0
  br i1 %221, label %222, label %208, !llvm.loop !28

222:                                              ; preds = %208, %204
  %223 = icmp eq i64 %150, %153
  br i1 %223, label %236, label %224

224:                                              ; preds = %222, %140
  %225 = phi i32 [ %143, %140 ], [ %155, %222 ]
  %226 = phi i32 [ %42, %140 ], [ %157, %222 ]
  %227 = phi i32* [ %41, %140 ], [ %158, %222 ]
  br label %228

228:                                              ; preds = %224, %228
  %229 = phi i32 [ %232, %228 ], [ %225, %224 ]
  %230 = phi i32 [ %234, %228 ], [ %226, %224 ]
  %231 = phi i32* [ %233, %228 ], [ %227, %224 ]
  %232 = add nsw i32 %229, -1
  %233 = getelementptr inbounds i32, i32* %231, i64 1
  store i32 %232, i32* %231, align 4
  %234 = add nsw i32 %230, 1
  %235 = icmp slt i32 %234, %47
  br i1 %235, label %228, label %236, !llvm.loop !29

236:                                              ; preds = %228, %132, %222, %126
  %237 = phi i32 [ %63, %126 ], [ %157, %222 ], [ %138, %132 ], [ %234, %228 ]
  %238 = phi i32* [ %64, %126 ], [ %158, %222 ], [ %137, %132 ], [ %233, %228 ]
  %239 = getelementptr inbounds %struct.Run, %struct.Run* %43, i64 1
  %240 = icmp ult %struct.Run* %239, %34
  br i1 %240, label %40, label %241

241:                                              ; preds = %236, %38
  %242 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 1
  %243 = load i32, i32* %242, align 4
  %244 = icmp sgt i32 %243, 0
  br i1 %244, label %245, label %515

245:                                              ; preds = %241
  %246 = load i32, i32* %31, align 8
  %247 = load %struct.Run*, %struct.Run** %29, align 8
  %248 = icmp sgt i32 %246, 0
  br i1 %248, label %249, label %705

249:                                              ; preds = %245
  %250 = zext i32 %246 to i64
  %251 = icmp ult i32 %246, 9
  br i1 %251, label %317, label %252

252:                                              ; preds = %249
  %253 = and i64 %250, 7
  %254 = icmp eq i64 %253, 0
  %255 = select i1 %254, i64 8, i64 %253
  %256 = sub nsw i64 %250, %255
  br label %257

257:                                              ; preds = %257, %252
  %258 = phi i64 [ 0, %252 ], [ %308, %257 ]
  %259 = phi <4 x i32> [ zeroinitializer, %252 ], [ %306, %257 ]
  %260 = phi <4 x i32> [ zeroinitializer, %252 ], [ %307, %257 ]
  %261 = or i64 %258, 1
  %262 = or i64 %258, 2
  %263 = or i64 %258, 3
  %264 = or i64 %258, 4
  %265 = or i64 %258, 5
  %266 = or i64 %258, 6
  %267 = or i64 %258, 7
  %268 = getelementptr inbounds %struct.Run, %struct.Run* %247, i64 %258, i32 2
  %269 = getelementptr inbounds %struct.Run, %struct.Run* %247, i64 %261, i32 2
  %270 = getelementptr inbounds %struct.Run, %struct.Run* %247, i64 %262, i32 2
  %271 = getelementptr inbounds %struct.Run, %struct.Run* %247, i64 %263, i32 2
  %272 = getelementptr inbounds %struct.Run, %struct.Run* %247, i64 %264, i32 2
  %273 = getelementptr inbounds %struct.Run, %struct.Run* %247, i64 %265, i32 2
  %274 = getelementptr inbounds %struct.Run, %struct.Run* %247, i64 %266, i32 2
  %275 = getelementptr inbounds %struct.Run, %struct.Run* %247, i64 %267, i32 2
  %276 = load i32, i32* %268, align 4
  %277 = load i32, i32* %269, align 4
  %278 = load i32, i32* %270, align 4
  %279 = load i32, i32* %271, align 4
  %280 = insertelement <4 x i32> undef, i32 %276, i32 0
  %281 = insertelement <4 x i32> %280, i32 %277, i32 1
  %282 = insertelement <4 x i32> %281, i32 %278, i32 2
  %283 = insertelement <4 x i32> %282, i32 %279, i32 3
  %284 = load i32, i32* %272, align 4
  %285 = load i32, i32* %273, align 4
  %286 = load i32, i32* %274, align 4
  %287 = load i32, i32* %275, align 4
  %288 = insertelement <4 x i32> undef, i32 %284, i32 0
  %289 = insertelement <4 x i32> %288, i32 %285, i32 1
  %290 = insertelement <4 x i32> %289, i32 %286, i32 2
  %291 = insertelement <4 x i32> %290, i32 %287, i32 3
  %292 = and <4 x i32> %283, <i32 5, i32 5, i32 5, i32 5>
  %293 = and <4 x i32> %291, <i32 5, i32 5, i32 5, i32 5>
  %294 = icmp ne <4 x i32> %292, zeroinitializer
  %295 = icmp ne <4 x i32> %293, zeroinitializer
  %296 = zext <4 x i1> %294 to <4 x i32>
  %297 = zext <4 x i1> %295 to <4 x i32>
  %298 = add nsw <4 x i32> %259, %296
  %299 = add nsw <4 x i32> %260, %297
  %300 = and <4 x i32> %283, <i32 10, i32 10, i32 10, i32 10>
  %301 = and <4 x i32> %291, <i32 10, i32 10, i32 10, i32 10>
  %302 = icmp ne <4 x i32> %300, zeroinitializer
  %303 = icmp ne <4 x i32> %301, zeroinitializer
  %304 = zext <4 x i1> %302 to <4 x i32>
  %305 = zext <4 x i1> %303 to <4 x i32>
  %306 = add nsw <4 x i32> %298, %304
  %307 = add nsw <4 x i32> %299, %305
  %308 = add i64 %258, 8
  %309 = icmp eq i64 %308, %256
  br i1 %309, label %310, label %257, !llvm.loop !30

310:                                              ; preds = %257
  %311 = add <4 x i32> %307, %306
  %312 = shufflevector <4 x i32> %311, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %313 = add <4 x i32> %311, %312
  %314 = shufflevector <4 x i32> %313, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %315 = add <4 x i32> %313, %314
  %316 = extractelement <4 x i32> %315, i32 0
  br label %317

317:                                              ; preds = %310, %249
  %318 = phi i64 [ 0, %249 ], [ %256, %310 ]
  %319 = phi i32 [ 0, %249 ], [ %316, %310 ]
  br label %320

320:                                              ; preds = %317, %320
  %321 = phi i64 [ %333, %320 ], [ %318, %317 ]
  %322 = phi i32 [ %332, %320 ], [ %319, %317 ]
  %323 = getelementptr inbounds %struct.Run, %struct.Run* %247, i64 %321, i32 2
  %324 = load i32, i32* %323, align 4
  %325 = and i32 %324, 5
  %326 = icmp ne i32 %325, 0
  %327 = zext i1 %326 to i32
  %328 = add nsw i32 %322, %327
  %329 = and i32 %324, 10
  %330 = icmp ne i32 %329, 0
  %331 = zext i1 %330 to i32
  %332 = add nsw i32 %328, %331
  %333 = add nuw nsw i64 %321, 1
  %334 = icmp eq i64 %333, %250
  br i1 %334, label %335, label %320, !llvm.loop !31

335:                                              ; preds = %320
  %336 = icmp sgt i32 %332, 0
  %337 = and i1 %336, %248
  br i1 %337, label %338, label %705

338:                                              ; preds = %335
  %339 = load i32, i32* %35, align 8
  %340 = sext i32 %246 to i64
  %341 = getelementptr i32, i32* %1, i64 -1
  %342 = getelementptr i32, i32* %1, i64 -1
  br label %343

343:                                              ; preds = %338, %510
  %344 = phi i64 [ %340, %338 ], [ %347, %510 ]
  %345 = phi i32 [ %339, %338 ], [ %512, %510 ]
  %346 = phi i32 [ %332, %338 ], [ %511, %510 ]
  %347 = add nsw i64 %344, -1
  %348 = getelementptr inbounds %struct.Run, %struct.Run* %247, i64 %347, i32 2
  %349 = load i32, i32* %348, align 4
  %350 = and i32 %349, 10
  %351 = icmp eq i32 %350, 0
  br i1 %351, label %357, label %352

352:                                              ; preds = %343
  %353 = add nsw i32 %345, -1
  %354 = sext i32 %353 to i64
  %355 = getelementptr inbounds i32, i32* %1, i64 %354
  store i32 -1, i32* %355, align 4
  %356 = add nsw i32 %346, -1
  br label %357

357:                                              ; preds = %343, %352
  %358 = phi i32 [ %356, %352 ], [ %346, %343 ]
  %359 = phi i32 [ %353, %352 ], [ %345, %343 ]
  %360 = icmp sgt i64 %347, 0
  br i1 %360, label %361, label %365

361:                                              ; preds = %357
  %362 = add nsw i64 %344, -2
  %363 = getelementptr inbounds %struct.Run, %struct.Run* %247, i64 %362, i32 1
  %364 = load i32, i32* %363, align 4
  br label %365

365:                                              ; preds = %357, %361
  %366 = phi i32 [ %364, %361 ], [ 0, %357 ]
  %367 = getelementptr inbounds %struct.Run, %struct.Run* %247, i64 %347, i32 1
  %368 = load i32, i32* %367, align 4
  %369 = icmp sgt i32 %368, %366
  %370 = icmp sgt i32 %358, 0
  %371 = and i1 %370, %369
  br i1 %371, label %372, label %501

372:                                              ; preds = %365
  %373 = sext i32 %368 to i64
  %374 = sext i32 %366 to i64
  %375 = sext i32 %359 to i64
  %376 = sext i32 %366 to i64
  %377 = sub nsw i64 %373, %376
  %378 = icmp ult i64 %377, 8
  br i1 %378, label %486, label %379

379:                                              ; preds = %372
  %380 = xor i32 %366, -1
  %381 = sext i32 %380 to i64
  %382 = add nsw i64 %381, %373
  %383 = getelementptr i32, i32* %341, i64 %375
  %384 = ptrtoint i32* %383 to i64
  %385 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %382, i64 4)
  %386 = extractvalue { i64, i1 } %385, 0
  %387 = extractvalue { i64, i1 } %385, 1
  %388 = icmp ugt i64 %386, %384
  %389 = or i1 %388, %387
  %390 = getelementptr i32, i32* %342, i64 %373
  %391 = ptrtoint i32* %390 to i64
  %392 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %382, i64 4)
  %393 = extractvalue { i64, i1 } %392, 0
  %394 = extractvalue { i64, i1 } %392, 1
  %395 = icmp ugt i64 %393, %391
  %396 = or i1 %395, %394
  %397 = or i1 %389, %396
  br i1 %397, label %486, label %398

398:                                              ; preds = %379
  %399 = sext i32 %366 to i64
  %400 = add nsw i64 %399, %375
  %401 = sub nsw i64 %400, %373
  %402 = getelementptr i32, i32* %1, i64 %401
  %403 = getelementptr i32, i32* %1, i64 %375
  %404 = getelementptr i32, i32* %1, i64 %399
  %405 = getelementptr i32, i32* %1, i64 %373
  %406 = icmp ult i32* %402, %405
  %407 = icmp ult i32* %404, %403
  %408 = and i1 %406, %407
  br i1 %408, label %486, label %409

409:                                              ; preds = %398
  %410 = and i64 %377, -8
  %411 = sub nsw i64 %375, %410
  %412 = sub nsw i64 %373, %410
  %413 = add nsw i64 %410, -8
  %414 = lshr exact i64 %413, 3
  %415 = add nuw nsw i64 %414, 1
  %416 = and i64 %415, 1
  %417 = icmp eq i64 %413, 0
  br i1 %417, label %462, label %418

418:                                              ; preds = %409
  %419 = sub nuw nsw i64 %415, %416
  br label %420

420:                                              ; preds = %420, %418
  %421 = phi i64 [ 0, %418 ], [ %459, %420 ]
  %422 = phi i64 [ %419, %418 ], [ %460, %420 ]
  %423 = xor i64 %421, -1
  %424 = add i64 %423, %373
  %425 = getelementptr inbounds i32, i32* %1, i64 %424
  %426 = getelementptr inbounds i32, i32* %425, i64 -3
  %427 = bitcast i32* %426 to <4 x i32>*
  %428 = load <4 x i32>, <4 x i32>* %427, align 4, !alias.scope !32
  %429 = getelementptr inbounds i32, i32* %425, i64 -4
  %430 = getelementptr inbounds i32, i32* %429, i64 -3
  %431 = bitcast i32* %430 to <4 x i32>*
  %432 = load <4 x i32>, <4 x i32>* %431, align 4, !alias.scope !32
  %433 = xor i64 %421, -1
  %434 = add i64 %433, %375
  %435 = getelementptr inbounds i32, i32* %1, i64 %434
  %436 = getelementptr inbounds i32, i32* %435, i64 -3
  %437 = bitcast i32* %436 to <4 x i32>*
  store <4 x i32> %428, <4 x i32>* %437, align 4, !alias.scope !35, !noalias !32
  %438 = getelementptr inbounds i32, i32* %435, i64 -4
  %439 = getelementptr inbounds i32, i32* %438, i64 -3
  %440 = bitcast i32* %439 to <4 x i32>*
  store <4 x i32> %432, <4 x i32>* %440, align 4, !alias.scope !35, !noalias !32
  %441 = sub nuw nsw i64 -9, %421
  %442 = add i64 %441, %373
  %443 = getelementptr inbounds i32, i32* %1, i64 %442
  %444 = getelementptr inbounds i32, i32* %443, i64 -3
  %445 = bitcast i32* %444 to <4 x i32>*
  %446 = load <4 x i32>, <4 x i32>* %445, align 4, !alias.scope !32
  %447 = getelementptr inbounds i32, i32* %443, i64 -4
  %448 = getelementptr inbounds i32, i32* %447, i64 -3
  %449 = bitcast i32* %448 to <4 x i32>*
  %450 = load <4 x i32>, <4 x i32>* %449, align 4, !alias.scope !32
  %451 = sub nuw nsw i64 -9, %421
  %452 = add i64 %451, %375
  %453 = getelementptr inbounds i32, i32* %1, i64 %452
  %454 = getelementptr inbounds i32, i32* %453, i64 -3
  %455 = bitcast i32* %454 to <4 x i32>*
  store <4 x i32> %446, <4 x i32>* %455, align 4, !alias.scope !35, !noalias !32
  %456 = getelementptr inbounds i32, i32* %453, i64 -4
  %457 = getelementptr inbounds i32, i32* %456, i64 -3
  %458 = bitcast i32* %457 to <4 x i32>*
  store <4 x i32> %450, <4 x i32>* %458, align 4, !alias.scope !35, !noalias !32
  %459 = add i64 %421, 16
  %460 = add i64 %422, -2
  %461 = icmp eq i64 %460, 0
  br i1 %461, label %462, label %420, !llvm.loop !37

462:                                              ; preds = %420, %409
  %463 = phi i64 [ 0, %409 ], [ %459, %420 ]
  %464 = icmp eq i64 %416, 0
  br i1 %464, label %484, label %465

465:                                              ; preds = %462
  %466 = xor i64 %463, -1
  %467 = add i64 %466, %373
  %468 = getelementptr inbounds i32, i32* %1, i64 %467
  %469 = getelementptr inbounds i32, i32* %468, i64 -3
  %470 = bitcast i32* %469 to <4 x i32>*
  %471 = load <4 x i32>, <4 x i32>* %470, align 4, !alias.scope !32
  %472 = getelementptr inbounds i32, i32* %468, i64 -4
  %473 = getelementptr inbounds i32, i32* %472, i64 -3
  %474 = bitcast i32* %473 to <4 x i32>*
  %475 = load <4 x i32>, <4 x i32>* %474, align 4, !alias.scope !32
  %476 = xor i64 %463, -1
  %477 = add i64 %476, %375
  %478 = getelementptr inbounds i32, i32* %1, i64 %477
  %479 = getelementptr inbounds i32, i32* %478, i64 -3
  %480 = bitcast i32* %479 to <4 x i32>*
  store <4 x i32> %471, <4 x i32>* %480, align 4, !alias.scope !35, !noalias !32
  %481 = getelementptr inbounds i32, i32* %478, i64 -4
  %482 = getelementptr inbounds i32, i32* %481, i64 -3
  %483 = bitcast i32* %482 to <4 x i32>*
  store <4 x i32> %475, <4 x i32>* %483, align 4, !alias.scope !35, !noalias !32
  br label %484

484:                                              ; preds = %462, %465
  %485 = icmp eq i64 %377, %410
  br i1 %485, label %498, label %486

486:                                              ; preds = %484, %398, %379, %372
  %487 = phi i64 [ %375, %398 ], [ %375, %379 ], [ %375, %372 ], [ %411, %484 ]
  %488 = phi i64 [ %373, %398 ], [ %373, %379 ], [ %373, %372 ], [ %412, %484 ]
  br label %489

489:                                              ; preds = %486, %489
  %490 = phi i64 [ %495, %489 ], [ %487, %486 ]
  %491 = phi i64 [ %492, %489 ], [ %488, %486 ]
  %492 = add nsw i64 %491, -1
  %493 = getelementptr inbounds i32, i32* %1, i64 %492
  %494 = load i32, i32* %493, align 4
  %495 = add nsw i64 %490, -1
  %496 = getelementptr inbounds i32, i32* %1, i64 %495
  store i32 %494, i32* %496, align 4
  %497 = icmp sgt i64 %492, %374
  br i1 %497, label %489, label %498, !llvm.loop !38

498:                                              ; preds = %489, %484
  %499 = phi i64 [ %411, %484 ], [ %495, %489 ]
  %500 = trunc i64 %499 to i32
  br label %501

501:                                              ; preds = %498, %365
  %502 = phi i32 [ %359, %365 ], [ %500, %498 ]
  %503 = and i32 %349, 5
  %504 = icmp eq i32 %503, 0
  br i1 %504, label %510, label %505

505:                                              ; preds = %501
  %506 = add nsw i32 %502, -1
  %507 = sext i32 %506 to i64
  %508 = getelementptr inbounds i32, i32* %1, i64 %507
  store i32 -1, i32* %508, align 4
  %509 = add nsw i32 %358, -1
  br label %510

510:                                              ; preds = %501, %505
  %511 = phi i32 [ %509, %505 ], [ %358, %501 ]
  %512 = phi i32 [ %506, %505 ], [ %502, %501 ]
  %513 = icmp sgt i32 %511, 0
  %514 = and i1 %513, %360
  br i1 %514, label %343, label %705

515:                                              ; preds = %241
  %516 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 46
  %517 = load i32, i32* %516, align 8
  %518 = icmp sgt i32 %517, 0
  br i1 %518, label %519, label %705

519:                                              ; preds = %515
  %520 = load i32, i32* %31, align 8
  %521 = load %struct.Run*, %struct.Run** %29, align 8
  %522 = icmp sgt i32 %520, 0
  br i1 %522, label %523, label %705

523:                                              ; preds = %519
  %524 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 1
  %525 = zext i32 %520 to i64
  br label %526

526:                                              ; preds = %701, %523
  %527 = phi i64 [ 0, %523 ], [ %703, %701 ]
  %528 = phi i32 [ 0, %523 ], [ %702, %701 ]
  %529 = phi i32 [ 0, %523 ], [ %531, %701 ]
  %530 = getelementptr inbounds %struct.Run, %struct.Run* %521, i64 %527, i32 1
  %531 = load i32, i32* %530, align 4
  %532 = sub i32 %531, %529
  %533 = getelementptr inbounds %struct.Run, %struct.Run* %521, i64 %527, i32 2
  %534 = load i32, i32* %533, align 4
  %535 = icmp eq i32 %534, 0
  %536 = icmp eq i32 %528, %529
  %537 = and i1 %536, %535
  br i1 %537, label %538, label %540

538:                                              ; preds = %526
  %539 = add nsw i32 %532, %528
  br label %701

540:                                              ; preds = %526
  br i1 %535, label %541, label %669

541:                                              ; preds = %540
  %542 = icmp sgt i32 %531, %529
  br i1 %542, label %543, label %701

543:                                              ; preds = %541
  %544 = sext i32 %528 to i64
  %545 = sext i32 %529 to i64
  %546 = sext i32 %531 to i64
  %547 = sext i32 %531 to i64
  %548 = sub nsw i64 %547, %545
  %549 = icmp ult i64 %548, 8
  br i1 %549, label %621, label %550

550:                                              ; preds = %543
  %551 = getelementptr i32, i32* %1, i64 %544
  %552 = sext i32 %531 to i64
  %553 = add nsw i64 %544, %552
  %554 = sub nsw i64 %553, %545
  %555 = getelementptr i32, i32* %1, i64 %554
  %556 = getelementptr i32, i32* %1, i64 %545
  %557 = getelementptr i32, i32* %1, i64 %552
  %558 = icmp ult i32* %551, %557
  %559 = icmp ult i32* %556, %555
  %560 = and i1 %558, %559
  br i1 %560, label %621, label %561

561:                                              ; preds = %550
  %562 = and i64 %548, -8
  %563 = add nsw i64 %562, %545
  %564 = add nsw i64 %562, %544
  %565 = add nsw i64 %562, -8
  %566 = lshr exact i64 %565, 3
  %567 = add nuw nsw i64 %566, 1
  %568 = and i64 %567, 1
  %569 = icmp eq i64 %565, 0
  br i1 %569, label %603, label %570

570:                                              ; preds = %561
  %571 = sub nuw nsw i64 %567, %568
  br label %572

572:                                              ; preds = %572, %570
  %573 = phi i64 [ 0, %570 ], [ %600, %572 ]
  %574 = phi i64 [ %571, %570 ], [ %601, %572 ]
  %575 = add i64 %573, %545
  %576 = add i64 %573, %544
  %577 = getelementptr inbounds i32, i32* %1, i64 %575
  %578 = bitcast i32* %577 to <4 x i32>*
  %579 = load <4 x i32>, <4 x i32>* %578, align 4, !alias.scope !39
  %580 = getelementptr inbounds i32, i32* %577, i64 4
  %581 = bitcast i32* %580 to <4 x i32>*
  %582 = load <4 x i32>, <4 x i32>* %581, align 4, !alias.scope !39
  %583 = getelementptr inbounds i32, i32* %1, i64 %576
  %584 = bitcast i32* %583 to <4 x i32>*
  store <4 x i32> %579, <4 x i32>* %584, align 4, !alias.scope !42, !noalias !39
  %585 = getelementptr inbounds i32, i32* %583, i64 4
  %586 = bitcast i32* %585 to <4 x i32>*
  store <4 x i32> %582, <4 x i32>* %586, align 4, !alias.scope !42, !noalias !39
  %587 = or i64 %573, 8
  %588 = add i64 %587, %545
  %589 = add i64 %587, %544
  %590 = getelementptr inbounds i32, i32* %1, i64 %588
  %591 = bitcast i32* %590 to <4 x i32>*
  %592 = load <4 x i32>, <4 x i32>* %591, align 4, !alias.scope !39
  %593 = getelementptr inbounds i32, i32* %590, i64 4
  %594 = bitcast i32* %593 to <4 x i32>*
  %595 = load <4 x i32>, <4 x i32>* %594, align 4, !alias.scope !39
  %596 = getelementptr inbounds i32, i32* %1, i64 %589
  %597 = bitcast i32* %596 to <4 x i32>*
  store <4 x i32> %592, <4 x i32>* %597, align 4, !alias.scope !42, !noalias !39
  %598 = getelementptr inbounds i32, i32* %596, i64 4
  %599 = bitcast i32* %598 to <4 x i32>*
  store <4 x i32> %595, <4 x i32>* %599, align 4, !alias.scope !42, !noalias !39
  %600 = add i64 %573, 16
  %601 = add i64 %574, -2
  %602 = icmp eq i64 %601, 0
  br i1 %602, label %603, label %572, !llvm.loop !44

603:                                              ; preds = %572, %561
  %604 = phi i64 [ 0, %561 ], [ %600, %572 ]
  %605 = icmp eq i64 %568, 0
  br i1 %605, label %619, label %606

606:                                              ; preds = %603
  %607 = add i64 %604, %545
  %608 = add i64 %604, %544
  %609 = getelementptr inbounds i32, i32* %1, i64 %607
  %610 = bitcast i32* %609 to <4 x i32>*
  %611 = load <4 x i32>, <4 x i32>* %610, align 4, !alias.scope !39
  %612 = getelementptr inbounds i32, i32* %609, i64 4
  %613 = bitcast i32* %612 to <4 x i32>*
  %614 = load <4 x i32>, <4 x i32>* %613, align 4, !alias.scope !39
  %615 = getelementptr inbounds i32, i32* %1, i64 %608
  %616 = bitcast i32* %615 to <4 x i32>*
  store <4 x i32> %611, <4 x i32>* %616, align 4, !alias.scope !42, !noalias !39
  %617 = getelementptr inbounds i32, i32* %615, i64 4
  %618 = bitcast i32* %617 to <4 x i32>*
  store <4 x i32> %614, <4 x i32>* %618, align 4, !alias.scope !42, !noalias !39
  br label %619

619:                                              ; preds = %603, %606
  %620 = icmp eq i64 %548, %562
  br i1 %620, label %698, label %621

621:                                              ; preds = %619, %550, %543
  %622 = phi i64 [ %545, %550 ], [ %545, %543 ], [ %563, %619 ]
  %623 = phi i64 [ %544, %550 ], [ %544, %543 ], [ %564, %619 ]
  %624 = sub nsw i64 %546, %622
  %625 = xor i64 %622, -1
  %626 = add nsw i64 %625, %546
  %627 = and i64 %624, 3
  %628 = icmp eq i64 %627, 0
  br i1 %628, label %640, label %629

629:                                              ; preds = %621, %629
  %630 = phi i64 [ %637, %629 ], [ %622, %621 ]
  %631 = phi i64 [ %635, %629 ], [ %623, %621 ]
  %632 = phi i64 [ %638, %629 ], [ %627, %621 ]
  %633 = getelementptr inbounds i32, i32* %1, i64 %630
  %634 = load i32, i32* %633, align 4
  %635 = add nsw i64 %631, 1
  %636 = getelementptr inbounds i32, i32* %1, i64 %631
  store i32 %634, i32* %636, align 4
  %637 = add nsw i64 %630, 1
  %638 = add i64 %632, -1
  %639 = icmp eq i64 %638, 0
  br i1 %639, label %640, label %629, !llvm.loop !45

640:                                              ; preds = %629, %621
  %641 = phi i64 [ undef, %621 ], [ %635, %629 ]
  %642 = phi i64 [ %622, %621 ], [ %637, %629 ]
  %643 = phi i64 [ %623, %621 ], [ %635, %629 ]
  %644 = icmp ult i64 %626, 3
  br i1 %644, label %698, label %645

645:                                              ; preds = %640, %645
  %646 = phi i64 [ %667, %645 ], [ %642, %640 ]
  %647 = phi i64 [ %665, %645 ], [ %643, %640 ]
  %648 = getelementptr inbounds i32, i32* %1, i64 %646
  %649 = load i32, i32* %648, align 4
  %650 = add nsw i64 %647, 1
  %651 = getelementptr inbounds i32, i32* %1, i64 %647
  store i32 %649, i32* %651, align 4
  %652 = add nsw i64 %646, 1
  %653 = getelementptr inbounds i32, i32* %1, i64 %652
  %654 = load i32, i32* %653, align 4
  %655 = add nsw i64 %647, 2
  %656 = getelementptr inbounds i32, i32* %1, i64 %650
  store i32 %654, i32* %656, align 4
  %657 = add nsw i64 %646, 2
  %658 = getelementptr inbounds i32, i32* %1, i64 %657
  %659 = load i32, i32* %658, align 4
  %660 = add nsw i64 %647, 3
  %661 = getelementptr inbounds i32, i32* %1, i64 %655
  store i32 %659, i32* %661, align 4
  %662 = add nsw i64 %646, 3
  %663 = getelementptr inbounds i32, i32* %1, i64 %662
  %664 = load i32, i32* %663, align 4
  %665 = add nsw i64 %647, 4
  %666 = getelementptr inbounds i32, i32* %1, i64 %660
  store i32 %664, i32* %666, align 4
  %667 = add nsw i64 %646, 4
  %668 = icmp eq i64 %667, %546
  br i1 %668, label %698, label %645, !llvm.loop !46

669:                                              ; preds = %540
  %670 = getelementptr inbounds %struct.Run, %struct.Run* %521, i64 %527, i32 0
  %671 = load i32, i32* %670, align 4
  %672 = icmp sgt i32 %671, -1
  %673 = and i32 %671, 2147483647
  %674 = add nsw i32 %673, %532
  %675 = icmp sgt i32 %532, 0
  br i1 %675, label %676, label %701

676:                                              ; preds = %669, %694
  %677 = phi i32 [ %695, %694 ], [ %528, %669 ]
  %678 = phi i32 [ %696, %694 ], [ 0, %669 ]
  %679 = add nuw nsw i32 %678, %673
  %680 = xor i32 %678, -1
  %681 = add i32 %674, %680
  %682 = select i1 %672, i32 %679, i32 %681
  %683 = load i16*, i16** %524, align 8
  %684 = sext i32 %682 to i64
  %685 = getelementptr inbounds i16, i16* %683, i64 %684
  %686 = load i16, i16* %685, align 2
  %687 = and i16 %686, -4
  %688 = icmp eq i16 %687, 8204
  br i1 %688, label %694, label %689

689:                                              ; preds = %676
  switch i16 %686, label %690 [
    i16 8297, label %694
    i16 8296, label %694
    i16 8295, label %694
    i16 8294, label %694
    i16 8238, label %694
    i16 8237, label %694
    i16 8236, label %694
    i16 8235, label %694
    i16 8234, label %694
  ]

690:                                              ; preds = %689
  %691 = add nsw i32 %677, 1
  %692 = sext i32 %677 to i64
  %693 = getelementptr inbounds i32, i32* %1, i64 %692
  store i32 %682, i32* %693, align 4
  br label %694

694:                                              ; preds = %689, %689, %689, %689, %689, %689, %689, %689, %689, %676, %690
  %695 = phi i32 [ %677, %689 ], [ %691, %690 ], [ %677, %676 ], [ %677, %689 ], [ %677, %689 ], [ %677, %689 ], [ %677, %689 ], [ %677, %689 ], [ %677, %689 ], [ %677, %689 ], [ %677, %689 ]
  %696 = add nuw nsw i32 %678, 1
  %697 = icmp eq i32 %696, %532
  br i1 %697, label %701, label %676

698:                                              ; preds = %640, %645, %619
  %699 = phi i64 [ %564, %619 ], [ %641, %640 ], [ %665, %645 ]
  %700 = trunc i64 %699 to i32
  br label %701

701:                                              ; preds = %694, %698, %669, %541, %538
  %702 = phi i32 [ %539, %538 ], [ %528, %541 ], [ %528, %669 ], [ %700, %698 ], [ %695, %694 ]
  %703 = add nuw nsw i64 %527, 1
  %704 = icmp eq i64 %703, %525
  br i1 %704, label %705, label %526

705:                                              ; preds = %701, %510, %245, %23, %519, %335, %515, %28, %10, %3, %5, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @ubidi_invertMap_69(i32* readonly, i32*, i32) local_unnamed_addr #0 {
  %4 = icmp ne i32* %0, null
  %5 = icmp ne i32* %1, null
  %6 = and i1 %4, %5
  %7 = icmp sgt i32 %2, 0
  %8 = and i1 %6, %7
  br i1 %8, label %9, label %44

9:                                                ; preds = %3
  %10 = sext i32 %2 to i64
  %11 = getelementptr inbounds i32, i32* %0, i64 %10
  br label %12

12:                                               ; preds = %9, %12
  %13 = phi i32 [ %22, %12 ], [ 0, %9 ]
  %14 = phi i32 [ %19, %12 ], [ -1, %9 ]
  %15 = phi i32* [ %16, %12 ], [ %11, %9 ]
  %16 = getelementptr inbounds i32, i32* %15, i64 -1
  %17 = load i32, i32* %16, align 4
  %18 = icmp sgt i32 %17, %14
  %19 = select i1 %18, i32 %17, i32 %14
  %20 = lshr i32 %17, 31
  %21 = xor i32 %20, 1
  %22 = add nuw nsw i32 %21, %13
  %23 = icmp ugt i32* %16, %0
  br i1 %23, label %12, label %24

24:                                               ; preds = %12
  %25 = icmp sgt i32 %22, %19
  br i1 %25, label %31, label %26

26:                                               ; preds = %24
  %27 = add nsw i32 %19, 1
  %28 = bitcast i32* %1 to i8*
  %29 = sext i32 %27 to i64
  %30 = shl nsw i64 %29, 2
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %28, i8 -1, i64 %30, i1 false)
  br label %31

31:                                               ; preds = %26, %24
  br label %32

32:                                               ; preds = %31, %42
  %33 = phi i32* [ %35, %42 ], [ %11, %31 ]
  %34 = phi i32 [ %38, %42 ], [ %2, %31 ]
  %35 = getelementptr inbounds i32, i32* %33, i64 -1
  %36 = load i32, i32* %35, align 4
  %37 = icmp sgt i32 %36, -1
  %38 = add nsw i32 %34, -1
  br i1 %37, label %39, label %42

39:                                               ; preds = %32
  %40 = sext i32 %36 to i64
  %41 = getelementptr inbounds i32, i32* %1, i64 %40
  store i32 %38, i32* %41, align 4
  br label %42

42:                                               ; preds = %32, %39
  %43 = icmp sgt i32 %38, 0
  br i1 %43, label %32, label %44

44:                                               ; preds = %42, %3
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { nounwind }
attributes #6 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
!4 = distinct !{!4, !5, !3}
!5 = !{!"llvm.loop.unroll.runtime.disable"}
!6 = distinct !{!6, !3}
!7 = distinct !{!7, !5, !3}
!8 = distinct !{!8, !3}
!9 = distinct !{!9, !5, !3}
!10 = distinct !{!10, !3}
!11 = distinct !{!11, !5, !3}
!12 = distinct !{!12, !3}
!13 = distinct !{!13, !5, !3}
!14 = distinct !{!14, !3}
!15 = distinct !{!15, !16}
!16 = !{!"llvm.loop.unroll.disable"}
!17 = distinct !{!17, !5, !3}
!18 = distinct !{!18, !3}
!19 = distinct !{!19, !5, !3}
!20 = distinct !{!20, !3}
!21 = distinct !{!21, !5, !3}
!22 = distinct !{!22, !3}
!23 = distinct !{!23, !5, !3}
!24 = distinct !{!24, !3}
!25 = distinct !{!25, !16}
!26 = distinct !{!26, !5, !3}
!27 = distinct !{!27, !3}
!28 = distinct !{!28, !16}
!29 = distinct !{!29, !5, !3}
!30 = distinct !{!30, !3}
!31 = distinct !{!31, !5, !3}
!32 = !{!33}
!33 = distinct !{!33, !34}
!34 = distinct !{!34, !"LVerDomain"}
!35 = !{!36}
!36 = distinct !{!36, !34}
!37 = distinct !{!37, !3}
!38 = distinct !{!38, !3}
!39 = !{!40}
!40 = distinct !{!40, !41}
!41 = distinct !{!41, !"LVerDomain"}
!42 = !{!43}
!43 = distinct !{!43, !41}
!44 = distinct !{!44, !3}
!45 = distinct !{!45, !16}
!46 = distinct !{!46, !3}
