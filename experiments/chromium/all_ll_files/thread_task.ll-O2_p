; ModuleID = '../../third_party/dav1d/libdav1d/src/thread_task.c'
source_filename = "../../third_party/dav1d/libdav1d/src/thread_task.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.Dav1dFrameContext = type { %struct.Dav1dRef*, %struct.Dav1dSequenceHeader*, %struct.Dav1dRef*, %struct.Dav1dFrameHeader*, [7 x %struct.Dav1dThreadPicture], %struct.Dav1dPicture, %struct.Dav1dThreadPicture, %struct.Dav1dRef*, %struct.refmvs_temporal_block*, [7 x %struct.refmvs_temporal_block*], [7 x %struct.Dav1dRef*], %struct.Dav1dRef*, %struct.Dav1dRef*, i8*, i8*, [7 x i32], [7 x [7 x i32]], [7 x i8], %struct.CdfThreadContext, %struct.CdfThreadContext, %struct.Dav1dTileGroup*, i32, i32, [7 x [2 x %struct.ScalableMotionParams]], [2 x i32], [2 x i32], %struct.Dav1dContext*, %struct.Dav1dTileContext*, i32, %struct.Dav1dTileState*, i32, %struct.Dav1dDSPContext*, %struct.anon.38, i32, [3 x i8*], i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x [3 x [2 x i16]]], [19 x [3 x i8*]], %struct.BlockContext*, i32, %struct.refmvs_frame, [7 x [7 x i8]], i32, %struct.anon.45, %struct.anon.46, %struct.FrameTileThreadData, [8 x i8] }
%struct.Dav1dSequenceHeader = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [32 x %struct.Dav1dSequenceHeaderOperatingPoint], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [32 x %struct.Dav1dSequenceHeaderOperatingParameterInfo] }
%struct.Dav1dSequenceHeaderOperatingPoint = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.Dav1dSequenceHeaderOperatingParameterInfo = type { i32, i32, i32 }
%struct.Dav1dFrameHeader = type { %struct.anon, i32, [2 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [32 x %struct.Dav1dFrameHeaderOperatingPoint], i32, i32, i32, %struct.anon.0, i32, i32, i32, [7 x i32], i32, i32, i32, i32, i32, %struct.anon.1, %struct.anon.2, %struct.anon.3, %struct.anon.4, i32, %struct.anon.7, %struct.anon.8, %struct.anon.9, i32, i32, i32, i32, [2 x i32], i32, i32, [7 x %struct.Dav1dWarpedMotionParams] }
%struct.anon = type { %struct.Dav1dFilmGrainData, i32, i32 }
%struct.Dav1dFilmGrainData = type { i32, i32, [14 x [2 x i8]], i32, [2 x i32], [2 x [10 x [2 x i8]]], i32, i32, [24 x i8], [2 x [28 x i8]], i64, i32, [2 x i32], [2 x i32], [2 x i32], i32, i32 }
%struct.Dav1dFrameHeaderOperatingPoint = type { i32 }
%struct.anon.0 = type { i32, i32 }
%struct.anon.1 = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [65 x i16], [65 x i16], i32 }
%struct.anon.2 = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.anon.3 = type { i32, i32, i32, i32, %struct.Dav1dSegmentationDataSet, [8 x i32], [8 x i32] }
%struct.Dav1dSegmentationDataSet = type { [8 x %struct.Dav1dSegmentationData], i32, i32 }
%struct.Dav1dSegmentationData = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.anon.4 = type { %struct.anon.5, %struct.anon.6 }
%struct.anon.5 = type { i32, i32 }
%struct.anon.6 = type { i32, i32, i32 }
%struct.anon.7 = type { [2 x i32], i32, i32, i32, i32, %struct.Dav1dLoopfilterModeRefDeltas, i32 }
%struct.Dav1dLoopfilterModeRefDeltas = type { [2 x i32], [8 x i32] }
%struct.anon.8 = type { i32, i32, [8 x i32], [8 x i32] }
%struct.anon.9 = type { [3 x i32], [2 x i32] }
%struct.Dav1dWarpedMotionParams = type { i32, [6 x i32], %union.anon }
%union.anon = type { %struct.anon.10 }
%struct.anon.10 = type { i16, i16, i16, i16 }
%struct.Dav1dPicture = type { %struct.Dav1dSequenceHeader*, %struct.Dav1dFrameHeader*, [3 x i8*], [2 x i64], %struct.Dav1dPictureParameters, %struct.Dav1dDataProps, %struct.Dav1dContentLightLevel*, %struct.Dav1dMasteringDisplay*, %struct.Dav1dITUTT35*, [4 x i64], %struct.Dav1dRef*, %struct.Dav1dRef*, %struct.Dav1dRef*, %struct.Dav1dRef*, %struct.Dav1dRef*, [4 x i64], %struct.Dav1dRef*, i8* }
%struct.Dav1dPictureParameters = type { i32, i32, i32, i32 }
%struct.Dav1dDataProps = type { i64, i64, i64, i64, %struct.Dav1dUserData }
%struct.Dav1dUserData = type { i8*, %struct.Dav1dRef* }
%struct.Dav1dContentLightLevel = type { i32, i32 }
%struct.Dav1dMasteringDisplay = type { [3 x [2 x i16]], [2 x i16], i32, i32 }
%struct.Dav1dITUTT35 = type { i8, i8, i64, i8* }
%struct.Dav1dThreadPicture = type { %struct.Dav1dPicture, i32, i32, %struct.thread_data*, i32* }
%struct.thread_data = type { i64, %union.pthread_cond_t, %union.pthread_mutex_t, i32 }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.11, %union.anon.13, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.11 = type { i64 }
%union.anon.13 = type { i64 }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.refmvs_temporal_block = type { %union.mv, i8 }
%union.mv = type { i32 }
%struct.Dav1dRef = type { i8*, i8*, i32, i32, void (i8*, i8*)*, i8* }
%struct.CdfThreadContext = type { %struct.Dav1dRef*, %union.anon.16, %struct.thread_data*, i32* }
%union.anon.16 = type { %struct.CdfContext* }
%struct.CdfContext = type { %struct.CdfModeContext, [5 x [5 x [16 x i16]]], %struct.CdfCoefContext, %struct.CdfMvContext, %struct.CdfMvContext }
%struct.CdfModeContext = type { [4 x [16 x i16]], [2 x [13 x [16 x i16]]], [9 x [16 x i16]], [5 x [4 x [16 x i16]]], [6 x [16 x i16]], [2 x [16 x i16]], [16 x i16], [2 x [13 x [8 x i16]]], [3 x [13 x [8 x i16]]], [8 x i16], [8 x [8 x i16]], [8 x i16], [8 x [8 x i16]], [3 x [8 x i16]], [2 x [7 x [8 x i16]]], [2 x [7 x [5 x [8 x i16]]]], [2 x [8 x [4 x i16]]], [4 x [3 x [4 x i16]]], [22 x [4 x i16]], [4 x i16], [5 x [4 x i16]], [4 x [4 x i16]], [4 x i16], [2 x i16], [2 x i16], [7 x [2 x i16]], [7 x [2 x i16]], [4 x [2 x i16]], [22 x [2 x i16]], [6 x [2 x i16]], [2 x [2 x i16]], [6 x [2 x i16]], [3 x [2 x i16]], [4 x [2 x i16]], [5 x [2 x i16]], [5 x [2 x i16]], [6 x [2 x i16]], [6 x [2 x i16]], [9 x [2 x i16]], [6 x [3 x [2 x i16]]], [3 x [3 x [2 x i16]]], [2 x [3 x [2 x i16]]], [3 x [3 x [2 x i16]]], [7 x [3 x [2 x i16]]], [3 x [2 x i16]], [3 x [2 x i16]], [3 x [2 x i16]], [22 x [2 x i16]], [7 x [3 x [2 x i16]]], [2 x [2 x i16]], [2 x i16], [8 x i8] }
%struct.CdfCoefContext = type { [2 x [2 x [8 x i16]]], [2 x [2 x [8 x i16]]], [2 x [2 x [8 x i16]]], [2 x [2 x [8 x i16]]], [2 x [2 x [16 x i16]]], [2 x [16 x i16]], [2 x [16 x i16]], [5 x [2 x [4 x [4 x i16]]]], [5 x [2 x [41 x [4 x i16]]]], [4 x [2 x [21 x [4 x i16]]]], [5 x [2 x [11 x [2 x i16]]]], [5 x [13 x [2 x i16]]], [2 x [3 x [2 x i16]]], [28 x i8] }
%struct.CdfMvContext = type { [2 x %struct.CdfMvComponent], [4 x i16], [24 x i8] }
%struct.CdfMvComponent = type { [16 x i16], [2 x [4 x i16]], [4 x i16], [2 x i16], [2 x i16], [2 x i16], [10 x [2 x i16]], [2 x i16], [16 x i8] }
%struct.Dav1dTileGroup = type { %struct.Dav1dData, i32, i32 }
%struct.Dav1dData = type { i8*, i64, %struct.Dav1dRef*, %struct.Dav1dDataProps }
%struct.ScalableMotionParams = type { i32, i32 }
%struct.Dav1dContext = type { %struct.Dav1dFrameContext*, i32, %struct.Dav1dPostFilterContext*, i32, %struct.Dav1dTileGroup*, i32, i32, i32, %struct.Dav1dMemPool*, %struct.Dav1dRef*, %struct.Dav1dSequenceHeader*, %struct.Dav1dMemPool*, %struct.Dav1dRef*, %struct.Dav1dFrameHeader*, %struct.Dav1dRef*, %struct.Dav1dContentLightLevel*, %struct.Dav1dRef*, %struct.Dav1dMasteringDisplay*, %struct.Dav1dRef*, %struct.Dav1dITUTT35*, %struct.Dav1dData, %struct.Dav1dPicture, i32, i32*, %struct.anon.17, %struct.PostFilterThreadData, %struct.Dav1dMemPool*, %struct.Dav1dMemPool*, [8 x %struct.anon.18], %struct.Dav1dMemPool*, [8 x %struct.CdfThreadContext], [3 x %struct.Dav1dDSPContext], %struct.anon.20, %struct.Dav1dPicAllocator, i32, i32, i32, i32, i32, i32, i32, i32, %struct.Dav1dLogger, %struct.Dav1dMemPool* }
%struct.Dav1dPostFilterContext = type { %struct.Dav1dContext*, %struct.thread_data, i32, i32 }
%struct.anon.17 = type { %struct.Dav1dThreadPicture*, i32 }
%struct.PostFilterThreadData = type { %union.pthread_mutex_t, %union.pthread_cond_t, %struct.Dav1dTask*, i32, i32 }
%struct.Dav1dTask = type { i32, i32, i32, i32, i32, void (%struct.Dav1dFrameContext*, i32)*, [2 x %struct.Dav1dTask*], [2 x %struct.Dav1dTask*], %struct.Dav1dTask* }
%struct.anon.18 = type { %struct.Dav1dThreadPicture, %struct.Dav1dRef*, %struct.Dav1dRef*, [7 x i32] }
%struct.Dav1dDSPContext = type { %struct.Dav1dFilmGrainDSPContext, %struct.Dav1dIntraPredDSPContext, %struct.Dav1dMCDSPContext, %struct.Dav1dInvTxfmDSPContext, %struct.Dav1dLoopFilterDSPContext, %struct.Dav1dCdefDSPContext, %struct.Dav1dLoopRestorationDSPContext }
%struct.Dav1dFilmGrainDSPContext = type { void ([82 x i8]*, %struct.Dav1dFilmGrainData*)*, [3 x void ([82 x i8]*, [82 x i8]*, %struct.Dav1dFilmGrainData*, i64)*], void (i8*, i8*, i64, %struct.Dav1dFilmGrainData*, i64, i8*, [82 x i8]*, i32, i32)*, [3 x void (i8*, i8*, i64, %struct.Dav1dFilmGrainData*, i32, i8*, [82 x i8]*, i32, i32, i8*, i64, i32, i32)*] }
%struct.Dav1dIntraPredDSPContext = type { [14 x void (i8*, i64, i8*, i32, i32, i32, i32, i32)*], [3 x void (i16*, i8*, i64, i32, i32, i32, i32)*], [6 x void (i8*, i64, i8*, i32, i32, i16*, i32)*], void (i8*, i64, i16*, i8*, i32, i32)* }
%struct.Dav1dMCDSPContext = type { [10 x void (i8*, i64, i8*, i64, i32, i32, i32, i32)*], [10 x void (i8*, i64, i8*, i64, i32, i32, i32, i32, i32, i32)*], [10 x void (i16*, i8*, i64, i32, i32, i32, i32)*], [10 x void (i16*, i8*, i64, i32, i32, i32, i32, i32, i32)*], void (i8*, i64, i16*, i16*, i32, i32)*, void (i8*, i64, i16*, i16*, i32, i32, i32)*, void (i8*, i64, i16*, i16*, i32, i32, i8*)*, [3 x void (i8*, i64, i16*, i16*, i32, i32, i8*, i32)*], void (i8*, i64, i8*, i32, i32, i8*)*, void (i8*, i64, i8*, i32, i32)*, void (i8*, i64, i8*, i32, i32)*, void (i8*, i64, i8*, i64, i16*, i32, i32)*, void (i16*, i64, i8*, i64, i16*, i32, i32)*, void (i64, i64, i64, i64, i64, i64, i8*, i64, i8*, i64)*, void (i8*, i64, i8*, i64, i32, i32, i32, i32, i32)* }
%struct.Dav1dInvTxfmDSPContext = type { [19 x [17 x void (i8*, i64, i8*, i32)*]] }
%struct.Dav1dLoopFilterDSPContext = type { [2 x [2 x void (i8*, i64, i32*, [4 x i8]*, i64, %struct.Av1FilterLUT*, i32)*]] }
%struct.Av1FilterLUT = type { [64 x i8], [64 x i8], [2 x i64] }
%struct.Dav1dCdefDSPContext = type { i32 (i8*, i64, i32*)*, [3 x void (i8*, i64, i8*, i8*, i32, i32, i32, i32, i32)*] }
%struct.Dav1dLoopRestorationDSPContext = type { [2 x void (i8*, i64, i8*, i8*, i64, i32, i32, %union.LooprestorationParams*, i32)*], [3 x void (i8*, i64, i8*, i8*, i64, i32, i32, %union.LooprestorationParams*, i32)*] }
%union.LooprestorationParams = type { %struct.anon.19, [20 x i8] }
%struct.anon.19 = type { i32, i32, i16, i16 }
%struct.anon.20 = type { [2 x %struct.EdgeNode*], [85 x %struct.EdgeBranch], [21 x %struct.EdgeBranch], [256 x %struct.EdgeTip], [64 x %struct.EdgeTip] }
%struct.EdgeNode = type { i32, [2 x i32], [2 x i32] }
%struct.EdgeBranch = type { %struct.EdgeNode, [3 x i32], [3 x i32], [3 x i32], [3 x i32], [4 x i32], [4 x i32], [4 x %struct.EdgeNode*] }
%struct.EdgeTip = type { %struct.EdgeNode, [4 x i32] }
%struct.Dav1dPicAllocator = type { i8*, i32 (%struct.Dav1dPicture*, i8*)*, void (%struct.Dav1dPicture*, i8*)* }
%struct.Dav1dLogger = type { i8*, void (i8*, i8*, %struct.__va_list_tag*)* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.Dav1dMemPool = type { %union.pthread_mutex_t, %struct.Dav1dMemPoolBuffer*, i32, i32 }
%struct.Dav1dMemPoolBuffer = type { i8*, %struct.Dav1dMemPoolBuffer* }
%struct.Dav1dTileContext = type { %struct.Dav1dFrameContext*, %struct.Dav1dTileState*, i32, i32, %struct.BlockContext, %struct.BlockContext*, [16 x i8], %union.anon.24, [2 x [32 x [3 x [8 x i16]]]], [2 x [32 x i8]], [1024 x i8], %struct.refmvs_tile, [24 x i8], %union.anon.26, %struct.Dav1dWarpedMotionParams, %struct.Av1Filter*, i8*, i32, %struct.anon.37, [8 x i8] }
%struct.BlockContext = type { [32 x i8], [32 x i8], [2 x [32 x i8]], [32 x i8], [32 x i8], [32 x i8], [32 x i8], [32 x i8], [2 x [32 x i8]], [2 x [32 x i8]], [32 x i8], [32 x i8], [32 x i8], [32 x i8], [16 x i8], [32 x i8], [32 x i8] }
%union.anon.24 = type { [1024 x i32] }
%struct.refmvs_tile = type { %struct.refmvs_frame*, [37 x %struct.refmvs_block*], %struct.refmvs_temporal_block*, %struct.anon.25, %struct.anon.25 }
%struct.refmvs_block = type { %union.refmvs_mvpair, %union.refmvs_refpair, i8, i8 }
%union.refmvs_mvpair = type { i64 }
%union.refmvs_refpair = type { i16 }
%struct.anon.25 = type { i32, i32 }
%union.anon.26 = type { %struct.anon.27 }
%struct.anon.27 = type { %union.anon.28, %union.anon.30 }
%union.anon.28 = type { %struct.anon.29 }
%struct.anon.29 = type { [2 x [16384 x i16]], [16384 x i8] }
%union.anon.30 = type { [84160 x i16] }
%struct.Av1Filter = type { [2 x [32 x [3 x [2 x i16]]]], [2 x [32 x [2 x [2 x i16]]]], [4 x i8], [16 x [2 x i16]] }
%struct.anon.37 = type { %struct.thread_data, %struct.FrameTileThreadData*, i32 }
%struct.Dav1dTileState = type { %struct.CdfContext, %struct.MsacContext, %struct.anon.21, i32, %struct.anon.22, %struct.anon.23, [8 x [3 x [2 x i16]]], [3 x [2 x i16]]*, i32, [4 x i8], [8 x [4 x [8 x [2 x i8]]]], [4 x [8 x [2 x i8]]]*, [3 x %struct.Av1RestorationUnit*], [24 x i8] }
%struct.MsacContext = type { i8*, i8*, i64, i32, i32, i32, i32 (%struct.MsacContext*, i16*, i64)* }
%struct.anon.21 = type { i32, i32, i32, i32, i32, i32 }
%struct.anon.22 = type { %union.pthread_mutex_t, %union.pthread_cond_t }
%struct.anon.23 = type { i8*, i8* }
%struct.Av1RestorationUnit = type { i8, [3 x i8], [3 x i8], i8, [2 x i8] }
%struct.anon.38 = type { void (%struct.Dav1dTileContext*, i32, i32, %struct.Av1Block*)*, i32 (%struct.Dav1dTileContext*, i32, %struct.Av1Block*)*, void (%struct.Dav1dFrameContext*, i32)*, void (%struct.Dav1dFrameContext*, i32)*, void (%struct.Dav1dFrameContext*, i32)*, void (%struct.Dav1dFrameContext*, i32)*, void (%struct.Dav1dFrameContext*, i32)*, void (%struct.Dav1dTileContext*)*, void (%struct.Dav1dTileContext*, i32, %struct.Av1Block*)* }
%struct.Av1Block = type { i8, i8, i8, i8, i8, i8, i8, i8, %union.anon.39 }
%union.anon.39 = type { %struct.anon.41 }
%struct.anon.41 = type { %union.anon.42, i8, i8, i8, i8, [2 x i8], i8, i8, i8, i8, i16 }
%union.anon.42 = type { %struct.anon.43 }
%struct.anon.43 = type { [2 x %union.mv], i8, i8, i8 }
%struct.refmvs_frame = type { %struct.Dav1dFrameHeader*, i32, i32, i32, i32, i32, i32, [7 x i8], [7 x i8], [7 x i8], [3 x i8], [3 x i32], [3 x [7 x i32]], i32, %struct.refmvs_temporal_block*, %struct.refmvs_temporal_block**, %struct.refmvs_temporal_block*, i64, %struct.refmvs_block*, i64, i32, i32 }
%struct.anon.45 = type { %struct.thread_data, i32, i32, %struct.Av1Block*, %struct.CodedBlockInfo*, [3 x [8 x i16]]*, i8*, i8*, i32, i32, i32, i32* }
%struct.CodedBlockInfo = type { [3 x i16], [3 x i8] }
%struct.anon.46 = type { [4 x i8]*, %struct.Av1Filter*, %struct.Av1Restoration*, i32, i32, i32, [2 x i32], i32, i32, [12 x i8], %struct.Av1FilterLUT, i32, [8 x [4 x [8 x [2 x i8]]]], [2 x i8*], i8*, [2 x [3 x i8*]], [3 x i8*], i32, [3 x i8*], [3 x i8*], %struct.Av1Filter*, %struct.Av1Filter*, i32, %struct.anon.47, [8 x i8] }
%struct.Av1Restoration = type { [3 x [4 x %struct.Av1RestorationUnit]] }
%struct.anon.47 = type { %union.pthread_cond_t, %struct.PostFilterThreadData*, %struct.Dav1dTask*, i32, i32, i32, i32 }
%struct.FrameTileThreadData = type { i64, %union.pthread_mutex_t, %union.pthread_cond_t, %union.pthread_cond_t, i32, i32, [2 x i32]*, i32, [2 x i32], [65 x i16], i32 }

@.str = private unnamed_addr constant [12 x i8] c"dav1d-frame\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"dav1d-tile\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"dav1d-postfilter\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @dav1d_task_create_filter_sbrow(%struct.Dav1dFrameContext*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 54, i32 23, i32 1
  %3 = load %struct.PostFilterThreadData*, %struct.PostFilterThreadData** %2, align 8
  %4 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 26
  %5 = bitcast %struct.Dav1dContext** %4 to i64**
  %6 = load i64*, i64** %5, align 16
  %7 = load i64, i64* %6, align 8
  %8 = ptrtoint %struct.Dav1dFrameContext* %0 to i64
  %9 = sub i64 %8, %7
  %10 = sdiv exact i64 %9, 5728
  %11 = trunc i64 %10 to i32
  %12 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 3
  %13 = load %struct.Dav1dFrameHeader*, %struct.Dav1dFrameHeader** %12, align 8
  %14 = getelementptr inbounds %struct.Dav1dFrameHeader, %struct.Dav1dFrameHeader* %13, i64 0, i32 39, i32 0, i64 0
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %25

17:                                               ; preds = %1
  %18 = getelementptr inbounds %struct.Dav1dFrameHeader, %struct.Dav1dFrameHeader* %13, i64 0, i32 39, i32 0, i64 1
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %25

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 54, i32 22
  %23 = load i32, i32* %22, align 16
  %24 = icmp ne i32 %23, 0
  br label %25

25:                                               ; preds = %17, %1, %21
  %26 = phi i1 [ true, %17 ], [ true, %1 ], [ %24, %21 ]
  %27 = zext i1 %26 to i32
  %28 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 1
  %29 = load %struct.Dav1dSequenceHeader*, %struct.Dav1dSequenceHeader** %28, align 8
  %30 = getelementptr inbounds %struct.Dav1dSequenceHeader, %struct.Dav1dSequenceHeader* %29, i64 0, i32 44
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %struct.Dav1dFrameHeader, %struct.Dav1dFrameHeader* %13, i64 0, i32 2, i64 0
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %struct.Dav1dFrameHeader, %struct.Dav1dFrameHeader* %13, i64 0, i32 2, i64 1
  %35 = load i32, i32* %34, align 4
  %36 = icmp ne i32 %33, %35
  %37 = zext i1 %36 to i32
  %38 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 54, i32 22
  %39 = load i32, i32* %38, align 16
  %40 = icmp ne i32 %39, 0
  %41 = zext i1 %40 to i32
  %42 = add nsw i32 %31, %27
  %43 = add nsw i32 %42, %37
  %44 = add nsw i32 %43, %41
  %45 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 54, i32 23, i32 4
  store i32 %44, i32* %45, align 4
  %46 = icmp eq i32 %44, 0
  br i1 %46, label %210, label %47

47:                                               ; preds = %25
  %48 = getelementptr inbounds %struct.PostFilterThreadData, %struct.PostFilterThreadData* %3, i64 0, i32 0
  %49 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %48) #4
  %50 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 54, i32 23, i32 2
  %51 = load %struct.Dav1dTask*, %struct.Dav1dTask** %50, align 8
  %52 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 42
  %53 = load i32, i32* %52, align 8
  %54 = load i32, i32* %45, align 4
  %55 = mul nsw i32 %54, %53
  %56 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 54, i32 23, i32 3
  %57 = load i32, i32* %56, align 8
  %58 = icmp sgt i32 %55, %57
  br i1 %58, label %59, label %68

59:                                               ; preds = %47
  %60 = sext i32 %55 to i64
  %61 = mul nsw i64 %60, 72
  %62 = bitcast %struct.Dav1dTask* %51 to i8*
  %63 = tail call i8* @realloc(i8* %62, i64 %61) #4
  %64 = icmp eq i8* %63, null
  br i1 %64, label %207, label %65

65:                                               ; preds = %59
  %66 = bitcast i8* %63 to %struct.Dav1dTask*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %63, i8 0, i64 %61, i1 false)
  %67 = bitcast %struct.Dav1dTask** %50 to i8**
  store i8* %63, i8** %67, align 8
  store i32 %55, i32* %56, align 8
  br label %68

68:                                               ; preds = %65, %47
  %69 = phi %struct.Dav1dTask* [ %51, %47 ], [ %66, %65 ]
  %70 = getelementptr inbounds %struct.PostFilterThreadData, %struct.PostFilterThreadData* %3, i64 0, i32 3
  %71 = load i32, i32* %70, align 8
  %72 = add nsw i32 %71, 1
  store i32 %72, i32* %70, align 8
  %73 = load i32, i32* %52, align 8
  %74 = icmp sgt i32 %73, 0
  br i1 %74, label %75, label %86

75:                                               ; preds = %68
  %76 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 32, i32 3
  %77 = bitcast void (%struct.Dav1dFrameContext*, i32)** %76 to i64*
  %78 = icmp eq i32 %31, 0
  %79 = xor i1 %26, true
  %80 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 32, i32 4
  %81 = bitcast void (%struct.Dav1dFrameContext*, i32)** %80 to i64*
  %82 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 32, i32 5
  %83 = bitcast void (%struct.Dav1dFrameContext*, i32)** %82 to i64*
  %84 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 32, i32 6
  %85 = bitcast void (%struct.Dav1dFrameContext*, i32)** %84 to i64*
  br label %88

86:                                               ; preds = %201, %68
  %87 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 54, i32 23, i32 5
  store i32 0, i32* %87, align 8
  br label %207

88:                                               ; preds = %75, %201
  %89 = phi i32 [ 0, %75 ], [ %204, %201 ]
  %90 = phi %struct.Dav1dTask* [ null, %75 ], [ %203, %201 ]
  %91 = phi %struct.Dav1dTask* [ null, %75 ], [ %173, %201 ]
  %92 = phi %struct.Dav1dTask* [ null, %75 ], [ %143, %201 ]
  %93 = phi %struct.Dav1dTask* [ null, %75 ], [ %116, %201 ]
  %94 = phi i32 [ 0, %75 ], [ %202, %201 ]
  br i1 %26, label %95, label %114

95:                                               ; preds = %88
  %96 = add nsw i32 %94, 1
  %97 = sext i32 %94 to i64
  %98 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %69, i64 %97
  %99 = icmp eq i32 %89, 0
  %100 = zext i1 %99 to i32
  %101 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %98, i64 0, i32 0
  store i32 %100, i32* %101, align 8
  %102 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %69, i64 %97, i32 1
  store i32 0, i32* %102, align 4
  %103 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %69, i64 %97, i32 3
  store i32 %71, i32* %103, align 4
  %104 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %69, i64 %97, i32 2
  store i32 %11, i32* %104, align 8
  %105 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %69, i64 %97, i32 4
  store i32 %89, i32* %105, align 8
  %106 = load i64, i64* %77, align 8
  %107 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %69, i64 %97, i32 5
  %108 = bitcast void (%struct.Dav1dFrameContext*, i32)** %107 to i64*
  store i64 %106, i64* %108, align 8
  %109 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %69, i64 %97, i32 6, i64 0
  %110 = bitcast %struct.Dav1dTask** %109 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %110, i8 0, i64 40, i1 false)
  br i1 %99, label %114, label %111

111:                                              ; preds = %95
  %112 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %69, i64 %97, i32 6, i64 1
  store %struct.Dav1dTask* %93, %struct.Dav1dTask** %112, align 8
  %113 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %93, i64 0, i32 7, i64 1
  store %struct.Dav1dTask* %98, %struct.Dav1dTask** %113, align 8
  br label %114

114:                                              ; preds = %111, %95, %88
  %115 = phi i32 [ %94, %88 ], [ %96, %95 ], [ %96, %111 ]
  %116 = phi %struct.Dav1dTask* [ %93, %88 ], [ %98, %95 ], [ %98, %111 ]
  %117 = phi %struct.Dav1dTask* [ null, %88 ], [ %98, %95 ], [ %98, %111 ]
  br i1 %78, label %141, label %118

118:                                              ; preds = %114
  %119 = add nsw i32 %115, 1
  %120 = sext i32 %115 to i64
  %121 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %69, i64 %120
  %122 = icmp eq i32 %89, 0
  %123 = and i1 %122, %79
  %124 = zext i1 %123 to i32
  %125 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %121, i64 0, i32 0
  store i32 %124, i32* %125, align 8
  %126 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %69, i64 %120, i32 1
  store i32 %27, i32* %126, align 4
  %127 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %69, i64 %120, i32 3
  store i32 %71, i32* %127, align 4
  %128 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %69, i64 %120, i32 2
  store i32 %11, i32* %128, align 8
  %129 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %69, i64 %120, i32 4
  store i32 %89, i32* %129, align 8
  %130 = load i64, i64* %81, align 16
  %131 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %69, i64 %120, i32 5
  %132 = bitcast void (%struct.Dav1dFrameContext*, i32)** %131 to i64*
  store i64 %130, i64* %132, align 8
  %133 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %69, i64 %120, i32 6, i64 0
  %134 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %69, i64 %120, i32 6, i64 1
  %135 = bitcast %struct.Dav1dTask** %133 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %135, i8 0, i64 40, i1 false)
  br i1 %26, label %136, label %138

136:                                              ; preds = %118
  store %struct.Dav1dTask* %117, %struct.Dav1dTask** %133, align 8
  %137 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %117, i64 0, i32 7, i64 0
  store %struct.Dav1dTask* %121, %struct.Dav1dTask** %137, align 8
  br label %138

138:                                              ; preds = %136, %118
  br i1 %122, label %141, label %139

139:                                              ; preds = %138
  store %struct.Dav1dTask* %92, %struct.Dav1dTask** %134, align 8
  %140 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %92, i64 0, i32 7, i64 1
  store %struct.Dav1dTask* %121, %struct.Dav1dTask** %140, align 8
  br label %141

141:                                              ; preds = %139, %138, %114
  %142 = phi i32 [ %115, %114 ], [ %119, %138 ], [ %119, %139 ]
  %143 = phi %struct.Dav1dTask* [ %92, %114 ], [ %121, %138 ], [ %121, %139 ]
  %144 = phi %struct.Dav1dTask* [ %117, %114 ], [ %121, %138 ], [ %121, %139 ]
  br i1 %36, label %145, label %171

145:                                              ; preds = %141
  %146 = add nsw i32 %142, 1
  %147 = sext i32 %142 to i64
  %148 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %69, i64 %147
  %149 = icmp eq i32 %89, 0
  %150 = icmp eq %struct.Dav1dTask* %144, null
  %151 = and i1 %149, %150
  %152 = zext i1 %151 to i32
  %153 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %148, i64 0, i32 0
  store i32 %152, i32* %153, align 8
  %154 = icmp ne %struct.Dav1dTask* %144, null
  %155 = zext i1 %154 to i32
  %156 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %69, i64 %147, i32 1
  store i32 %155, i32* %156, align 4
  %157 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %69, i64 %147, i32 3
  store i32 %71, i32* %157, align 4
  %158 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %69, i64 %147, i32 2
  store i32 %11, i32* %158, align 8
  %159 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %69, i64 %147, i32 4
  store i32 %89, i32* %159, align 8
  %160 = load i64, i64* %83, align 8
  %161 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %69, i64 %147, i32 5
  %162 = bitcast void (%struct.Dav1dFrameContext*, i32)** %161 to i64*
  store i64 %160, i64* %162, align 8
  %163 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %69, i64 %147, i32 6, i64 0
  %164 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %69, i64 %147, i32 6, i64 1
  %165 = bitcast %struct.Dav1dTask** %163 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %165, i8 0, i64 40, i1 false)
  br i1 %154, label %166, label %168

166:                                              ; preds = %145
  store %struct.Dav1dTask* %144, %struct.Dav1dTask** %163, align 8
  %167 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %144, i64 0, i32 7, i64 0
  store %struct.Dav1dTask* %148, %struct.Dav1dTask** %167, align 8
  br label %168

168:                                              ; preds = %166, %145
  br i1 %149, label %171, label %169

169:                                              ; preds = %168
  store %struct.Dav1dTask* %91, %struct.Dav1dTask** %164, align 8
  %170 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %91, i64 0, i32 7, i64 1
  store %struct.Dav1dTask* %148, %struct.Dav1dTask** %170, align 8
  br label %171

171:                                              ; preds = %169, %168, %141
  %172 = phi i32 [ %142, %141 ], [ %146, %168 ], [ %146, %169 ]
  %173 = phi %struct.Dav1dTask* [ %91, %141 ], [ %148, %168 ], [ %148, %169 ]
  %174 = phi %struct.Dav1dTask* [ %144, %141 ], [ %148, %168 ], [ %148, %169 ]
  br i1 %40, label %175, label %201

175:                                              ; preds = %171
  %176 = add nsw i32 %172, 1
  %177 = sext i32 %172 to i64
  %178 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %69, i64 %177
  %179 = icmp eq i32 %89, 0
  %180 = icmp eq %struct.Dav1dTask* %174, null
  %181 = and i1 %179, %180
  %182 = zext i1 %181 to i32
  %183 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %178, i64 0, i32 0
  store i32 %182, i32* %183, align 8
  %184 = icmp ne %struct.Dav1dTask* %174, null
  %185 = zext i1 %184 to i32
  %186 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %69, i64 %177, i32 1
  store i32 %185, i32* %186, align 4
  %187 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %69, i64 %177, i32 3
  store i32 %71, i32* %187, align 4
  %188 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %69, i64 %177, i32 2
  store i32 %11, i32* %188, align 8
  %189 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %69, i64 %177, i32 4
  store i32 %89, i32* %189, align 8
  %190 = load i64, i64* %85, align 16
  %191 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %69, i64 %177, i32 5
  %192 = bitcast void (%struct.Dav1dFrameContext*, i32)** %191 to i64*
  store i64 %190, i64* %192, align 8
  %193 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %69, i64 %177, i32 6, i64 0
  %194 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %69, i64 %177, i32 6, i64 1
  %195 = bitcast %struct.Dav1dTask** %193 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %195, i8 0, i64 40, i1 false)
  br i1 %184, label %196, label %198

196:                                              ; preds = %175
  store %struct.Dav1dTask* %174, %struct.Dav1dTask** %193, align 8
  %197 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %174, i64 0, i32 7, i64 0
  store %struct.Dav1dTask* %178, %struct.Dav1dTask** %197, align 8
  br label %198

198:                                              ; preds = %196, %175
  br i1 %179, label %201, label %199

199:                                              ; preds = %198
  store %struct.Dav1dTask* %90, %struct.Dav1dTask** %194, align 8
  %200 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %90, i64 0, i32 7, i64 1
  store %struct.Dav1dTask* %178, %struct.Dav1dTask** %200, align 8
  br label %201

201:                                              ; preds = %199, %198, %171
  %202 = phi i32 [ %172, %171 ], [ %176, %198 ], [ %176, %199 ]
  %203 = phi %struct.Dav1dTask* [ %90, %171 ], [ %178, %198 ], [ %178, %199 ]
  %204 = add nuw nsw i32 %89, 1
  %205 = load i32, i32* %52, align 8
  %206 = icmp slt i32 %204, %205
  br i1 %206, label %88, label %86

207:                                              ; preds = %59, %86
  %208 = phi i32 [ 0, %86 ], [ -1, %59 ]
  %209 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %48) #4
  br label %210

210:                                              ; preds = %207, %25
  %211 = phi i32 [ 0, %25 ], [ %208, %207 ]
  ret i32 %211
}

; Function Attrs: nounwind
declare i32 @pthread_mutex_lock(%union.pthread_mutex_t*) local_unnamed_addr #1

; Function Attrs: nounwind
declare noalias i8* @realloc(i8* nocapture, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @dav1d_task_schedule(%struct.PostFilterThreadData*, %struct.Dav1dTask*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.PostFilterThreadData, %struct.PostFilterThreadData* %0, i64 0, i32 2
  %4 = load %struct.Dav1dTask*, %struct.Dav1dTask** %3, align 8
  %5 = icmp eq %struct.Dav1dTask* %4, null
  br i1 %5, label %27, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %1, i64 0, i32 4
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %1, i64 0, i32 3
  br label %10

10:                                               ; preds = %6, %23
  %11 = phi %struct.Dav1dTask* [ %4, %6 ], [ %25, %23 ]
  %12 = phi %struct.Dav1dTask** [ %3, %6 ], [ %24, %23 ]
  %13 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %11, i64 0, i32 4
  %14 = load i32, i32* %13, align 8
  %15 = icmp slt i32 %14, %8
  br i1 %15, label %23, label %16

16:                                               ; preds = %10
  %17 = icmp eq i32 %14, %8
  br i1 %17, label %18, label %27

18:                                               ; preds = %16
  %19 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %11, i64 0, i32 3
  %20 = load i32, i32* %19, align 4
  %21 = load i32, i32* %9, align 4
  %22 = icmp sgt i32 %20, %21
  br i1 %22, label %27, label %23

23:                                               ; preds = %18, %10
  %24 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %11, i64 0, i32 8
  %25 = load %struct.Dav1dTask*, %struct.Dav1dTask** %24, align 8
  %26 = icmp eq %struct.Dav1dTask* %25, null
  br i1 %26, label %27, label %10

27:                                               ; preds = %23, %16, %18, %2
  %28 = phi %struct.Dav1dTask** [ %3, %2 ], [ %12, %18 ], [ %12, %16 ], [ %24, %23 ]
  %29 = phi %struct.Dav1dTask* [ null, %2 ], [ %11, %18 ], [ %11, %16 ], [ null, %23 ]
  %30 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %1, i64 0, i32 8
  store %struct.Dav1dTask* %29, %struct.Dav1dTask** %30, align 8
  store %struct.Dav1dTask* %1, %struct.Dav1dTask** %28, align 8
  %31 = getelementptr inbounds %struct.PostFilterThreadData, %struct.PostFilterThreadData* %0, i64 0, i32 1
  %32 = tail call i32 @pthread_cond_signal(%union.pthread_cond_t* %31) #4
  ret void
}

; Function Attrs: nounwind
declare i32 @pthread_cond_signal(%union.pthread_cond_t*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden noalias i8* @dav1d_frame_task(i8*) local_unnamed_addr #0 {
  %2 = bitcast i8* %0 to %struct.Dav1dFrameContext*
  %3 = tail call i32 (i32, ...) @prctl(i32 15, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0)) #4
  %4 = getelementptr inbounds i8, i8* %0, i64 4296
  %5 = bitcast i8* %4 to %union.pthread_mutex_t*
  %6 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %5) #4
  %7 = getelementptr inbounds i8, i8* %0, i64 4348
  %8 = bitcast i8* %7 to i32*
  %9 = getelementptr inbounds i8, i8* %0, i64 3068
  %10 = bitcast i8* %9 to i32*
  %11 = getelementptr inbounds i8, i8* %0, i64 4248
  %12 = bitcast i8* %11 to %union.pthread_cond_t*
  %13 = getelementptr inbounds i8, i8* %0, i64 4384
  %14 = bitcast i8* %13 to i8**
  %15 = getelementptr inbounds i8, i8* %0, i64 4400
  %16 = bitcast i8* %15 to i32*
  br label %17

17:                                               ; preds = %42, %1
  %18 = load i32, i32* %10, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %29

20:                                               ; preds = %17, %25
  %21 = load i32, i32* %8, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %20
  %24 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %5) #4
  br label %45

25:                                               ; preds = %20
  %26 = tail call i32 @pthread_cond_wait(%union.pthread_cond_t* %12, %union.pthread_mutex_t* %5) #4
  %27 = load i32, i32* %10, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %20, label %29

29:                                               ; preds = %25, %17
  %30 = load i32, i32* %8, align 4
  %31 = icmp eq i32 %30, 0
  %32 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %5) #4
  br i1 %31, label %33, label %45

33:                                               ; preds = %29
  %34 = tail call i32 @dav1d_decode_frame(%struct.Dav1dFrameContext* %2) #4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %42, label %36

36:                                               ; preds = %33
  %37 = load i8*, i8** %14, align 16
  %38 = load i32, i32* %16, align 16
  %39 = sext i32 %38 to i64
  %40 = shl nsw i64 %39, 13
  %41 = and i64 %40, 9223372036854767616
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %37, i8 0, i64 %41, i1 false)
  br label %42

42:                                               ; preds = %33, %36
  %43 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %5) #4
  store i32 0, i32* %10, align 4
  %44 = tail call i32 @pthread_cond_signal(%union.pthread_cond_t* %12) #4
  br label %17

45:                                               ; preds = %29, %23
  ret i8* null
}

declare i32 @pthread_cond_wait(%union.pthread_cond_t*, %union.pthread_mutex_t*) local_unnamed_addr #3

declare i32 @dav1d_decode_frame(%struct.Dav1dFrameContext*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden noalias i8* @dav1d_tile_task(i8*) local_unnamed_addr #0 {
  %2 = bitcast i8* %0 to %struct.Dav1dTileContext*
  %3 = getelementptr inbounds i8, i8* %0, i64 259688
  %4 = bitcast i8* %3 to %struct.FrameTileThreadData**
  %5 = load %struct.FrameTileThreadData*, %struct.FrameTileThreadData** %4, align 8
  %6 = bitcast i8* %0 to %struct.Dav1dFrameContext**
  %7 = load %struct.Dav1dFrameContext*, %struct.Dav1dFrameContext** %6, align 64
  %8 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %7, i64 0, i32 27
  %9 = bitcast %struct.Dav1dTileContext** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = ptrtoint i8* %0 to i64
  %12 = sub i64 %11, %10
  %13 = sdiv exact i64 %12, 259712
  %14 = and i64 %13, 4294967295
  %15 = shl i64 1, %14
  %16 = tail call i32 (i32, ...) @prctl(i32 15, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0)) #4
  %17 = getelementptr inbounds %struct.FrameTileThreadData, %struct.FrameTileThreadData* %5, i64 0, i32 1
  %18 = getelementptr inbounds %struct.FrameTileThreadData, %struct.FrameTileThreadData* %5, i64 0, i32 0
  %19 = getelementptr inbounds i8, i8* %0, i64 259696
  %20 = bitcast i8* %19 to i32*
  %21 = getelementptr inbounds %struct.FrameTileThreadData, %struct.FrameTileThreadData* %5, i64 0, i32 4
  %22 = getelementptr inbounds %struct.FrameTileThreadData, %struct.FrameTileThreadData* %5, i64 0, i32 3
  %23 = getelementptr inbounds %struct.FrameTileThreadData, %struct.FrameTileThreadData* %5, i64 0, i32 2
  %24 = xor i64 %15, -1
  %25 = getelementptr inbounds %struct.FrameTileThreadData, %struct.FrameTileThreadData* %5, i64 0, i32 5
  %26 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %7, i64 0, i32 53, i32 1
  %27 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %7, i64 0, i32 28
  %28 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %7, i64 0, i32 3
  %29 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %7, i64 0, i32 55, i32 6
  %30 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %7, i64 0, i32 29
  %31 = getelementptr inbounds i8, i8* %0, i64 8
  %32 = bitcast i8* %31 to %struct.Dav1dTileState**
  %33 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %7, i64 0, i32 43
  %34 = getelementptr inbounds i8, i8* %0, i64 20
  %35 = bitcast i8* %34 to i32*
  %36 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %7, i64 0, i32 44
  br label %37

37:                                               ; preds = %84, %1
  %38 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %17) #4
  %39 = load i64, i64* %18, align 8
  %40 = or i64 %39, %15
  store i64 %40, i64* %18, align 8
  %41 = load i32, i32* %21, align 8
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %56

43:                                               ; preds = %37, %51
  %44 = phi i32 [ %52, %51 ], [ 0, %37 ]
  %45 = load i32, i32* %20, align 16
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %151

47:                                               ; preds = %43
  %48 = icmp eq i32 %44, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %47
  %50 = tail call i32 @pthread_cond_signal(%union.pthread_cond_t* %22) #4
  br label %51

51:                                               ; preds = %47, %49
  %52 = phi i32 [ %44, %47 ], [ 1, %49 ]
  %53 = tail call i32 @pthread_cond_wait(%union.pthread_cond_t* %23, %union.pthread_mutex_t* %17) #4
  %54 = load i32, i32* %21, align 8
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %43, label %56

56:                                               ; preds = %51, %37
  %57 = phi i32 [ %41, %37 ], [ %54, %51 ]
  %58 = load i32, i32* %20, align 16
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %151

60:                                               ; preds = %56
  %61 = load i64, i64* %18, align 8
  %62 = and i64 %61, %24
  store i64 %62, i64* %18, align 8
  %63 = load i32, i32* %25, align 4
  %64 = add nsw i32 %57, -1
  store i32 %64, i32* %21, align 8
  %65 = sub nsw i32 %63, %57
  %66 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %17) #4
  %67 = load i32, i32* %26, align 8
  %68 = icmp eq i32 %67, 1
  br i1 %68, label %75, label %69

69:                                               ; preds = %60
  %70 = load i32, i32* %27, align 16
  %71 = load %struct.Dav1dFrameHeader*, %struct.Dav1dFrameHeader** %28, align 8
  %72 = getelementptr inbounds %struct.Dav1dFrameHeader, %struct.Dav1dFrameHeader* %71, i64 0, i32 34, i32 5
  %73 = load i32, i32* %72, align 4
  %74 = icmp slt i32 %70, %73
  br i1 %74, label %105, label %75

75:                                               ; preds = %69, %60
  %76 = load %struct.Dav1dTileState*, %struct.Dav1dTileState** %30, align 8
  %77 = sext i32 %65 to i64
  %78 = getelementptr inbounds %struct.Dav1dTileState, %struct.Dav1dTileState* %76, i64 %77
  store %struct.Dav1dTileState* %78, %struct.Dav1dTileState** %32, align 8
  %79 = getelementptr inbounds %struct.Dav1dTileState, %struct.Dav1dTileState* %76, i64 %77, i32 2, i32 2
  %80 = load i32, i32* %79, align 8
  store i32 %80, i32* %35, align 4
  %81 = getelementptr inbounds %struct.Dav1dTileState, %struct.Dav1dTileState* %76, i64 %77, i32 2, i32 3
  %82 = load i32, i32* %81, align 4
  %83 = icmp slt i32 %80, %82
  br i1 %83, label %85, label %84

84:                                               ; preds = %92, %75, %147, %135, %132
  br label %37

85:                                               ; preds = %75
  %86 = getelementptr inbounds %struct.Dav1dTileState, %struct.Dav1dTileState* %76, i64 %77, i32 4, i32 0
  %87 = getelementptr inbounds %struct.Dav1dTileState, %struct.Dav1dTileState* %76, i64 %77, i32 3
  %88 = getelementptr inbounds %struct.Dav1dTileState, %struct.Dav1dTileState* %76, i64 %77, i32 4, i32 1
  br label %89

89:                                               ; preds = %85, %92
  %90 = tail call i32 @dav1d_decode_tile_sbrow(%struct.Dav1dTileContext* %2) #4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %147

92:                                               ; preds = %89
  %93 = load i32, i32* %35, align 4
  %94 = load i32, i32* %33, align 4
  %95 = ashr i32 %93, %94
  %96 = add nsw i32 %95, 1
  %97 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %86) #4
  store atomic i32 %96, i32* %87 seq_cst, align 8
  %98 = tail call i32 @pthread_cond_signal(%union.pthread_cond_t* %88) #4
  %99 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %86) #4
  %100 = load i32, i32* %36, align 16
  %101 = load i32, i32* %35, align 4
  %102 = add nsw i32 %101, %100
  store i32 %102, i32* %35, align 4
  %103 = load i32, i32* %81, align 4
  %104 = icmp slt i32 %102, %103
  br i1 %104, label %89, label %84

105:                                              ; preds = %69
  %106 = load [2 x i32]*, [2 x i32]** %29, align 8
  %107 = sext i32 %65 to i64
  %108 = getelementptr inbounds [2 x i32], [2 x i32]* %106, i64 %107, i64 0
  %109 = load i32, i32* %108, align 4
  %110 = getelementptr inbounds [2 x i32], [2 x i32]* %106, i64 %107, i64 1
  %111 = load i32, i32* %110, align 4
  %112 = load %struct.Dav1dTileState*, %struct.Dav1dTileState** %30, align 8
  %113 = sext i32 %111 to i64
  %114 = getelementptr inbounds %struct.Dav1dTileState, %struct.Dav1dTileState* %112, i64 %113
  %115 = getelementptr inbounds %struct.Dav1dTileState, %struct.Dav1dTileState* %112, i64 %113, i32 3
  %116 = load atomic i32, i32* %115 seq_cst, align 8
  %117 = icmp slt i32 %116, %109
  br i1 %117, label %118, label %132

118:                                              ; preds = %105
  %119 = getelementptr inbounds %struct.Dav1dTileState, %struct.Dav1dTileState* %112, i64 %113, i32 4, i32 0
  %120 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %119) #4
  %121 = load atomic i32, i32* %115 seq_cst, align 8
  %122 = icmp slt i32 %121, %109
  br i1 %122, label %123, label %129

123:                                              ; preds = %118
  %124 = getelementptr inbounds %struct.Dav1dTileState, %struct.Dav1dTileState* %112, i64 %113, i32 4, i32 1
  br label %125

125:                                              ; preds = %123, %125
  %126 = tail call i32 @pthread_cond_wait(%union.pthread_cond_t* %124, %union.pthread_mutex_t* %119) #4
  %127 = load atomic i32, i32* %115 seq_cst, align 8
  %128 = icmp slt i32 %127, %109
  br i1 %128, label %125, label %129

129:                                              ; preds = %125, %118
  %130 = phi i32 [ %121, %118 ], [ %127, %125 ]
  %131 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %119) #4
  br label %132

132:                                              ; preds = %129, %105
  %133 = phi i32 [ %130, %129 ], [ %116, %105 ]
  %134 = icmp eq i32 %133, 2147483646
  br i1 %134, label %84, label %135

135:                                              ; preds = %132
  store %struct.Dav1dTileState* %114, %struct.Dav1dTileState** %32, align 8
  %136 = load i32, i32* %33, align 4
  %137 = shl i32 %109, %136
  store i32 %137, i32* %35, align 4
  %138 = tail call i32 @dav1d_decode_tile_sbrow(%struct.Dav1dTileContext* %2) #4
  %139 = icmp eq i32 %138, 0
  %140 = add nsw i32 %109, 1
  %141 = select i1 %139, i32 %140, i32 2147483646
  %142 = getelementptr inbounds %struct.Dav1dTileState, %struct.Dav1dTileState* %112, i64 %113, i32 4, i32 0
  %143 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %142) #4
  store atomic i32 %141, i32* %115 seq_cst, align 8
  %144 = getelementptr inbounds %struct.Dav1dTileState, %struct.Dav1dTileState* %112, i64 %113, i32 4, i32 1
  %145 = tail call i32 @pthread_cond_broadcast(%union.pthread_cond_t* %144) #4
  %146 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %142) #4
  br label %84

147:                                              ; preds = %89
  %148 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %86) #4
  store atomic i32 2147483646, i32* %87 seq_cst, align 8
  %149 = tail call i32 @pthread_cond_signal(%union.pthread_cond_t* %88) #4
  %150 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %86) #4
  br label %84

151:                                              ; preds = %56, %43
  %152 = tail call i32 @pthread_cond_signal(%union.pthread_cond_t* %22) #4
  %153 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %17) #4
  ret i8* null
}

declare i32 @dav1d_decode_tile_sbrow(%struct.Dav1dTileContext*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @pthread_cond_broadcast(%union.pthread_cond_t*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden noalias i8* @dav1d_postfilter_task(i8*) local_unnamed_addr #0 {
  %2 = bitcast i8* %0 to %struct.Dav1dContext**
  %3 = load %struct.Dav1dContext*, %struct.Dav1dContext** %2, align 8
  %4 = tail call i32 (i32, ...) @prctl(i32 15, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #4
  %5 = getelementptr inbounds %struct.Dav1dContext, %struct.Dav1dContext* %3, i64 0, i32 25, i32 0
  %6 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %5) #4
  %7 = getelementptr inbounds i8, i8* %0, i64 116
  %8 = bitcast i8* %7 to i32*
  %9 = getelementptr inbounds %struct.Dav1dContext, %struct.Dav1dContext* %3, i64 0, i32 25, i32 1
  %10 = getelementptr inbounds %struct.Dav1dContext, %struct.Dav1dContext* %3, i64 0, i32 23
  %11 = getelementptr inbounds i8, i8* %0, i64 64
  %12 = bitcast i8* %11 to %union.pthread_mutex_t*
  %13 = getelementptr inbounds i8, i8* %0, i64 112
  %14 = bitcast i8* %13 to i32*
  %15 = getelementptr inbounds %struct.Dav1dContext, %struct.Dav1dContext* %3, i64 0, i32 1
  %16 = getelementptr inbounds %struct.Dav1dContext, %struct.Dav1dContext* %3, i64 0, i32 0
  %17 = getelementptr inbounds %struct.Dav1dContext, %struct.Dav1dContext* %3, i64 0, i32 25, i32 2
  %18 = bitcast %struct.Dav1dTask** %17 to i64*
  %19 = getelementptr inbounds i8, i8* %0, i64 16
  %20 = bitcast i8* %19 to %union.pthread_cond_t*
  br label %26

21:                                               ; preds = %111, %104
  %22 = load i32, i32* %8, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %21
  %25 = tail call i32 @pthread_cond_wait(%union.pthread_cond_t* %9, %union.pthread_mutex_t* %5) #4
  br label %26

26:                                               ; preds = %260, %1, %21, %24
  %27 = load i32*, i32** %10, align 8
  %28 = load atomic i32, i32* %27 acquire, align 4
  %29 = icmp ne i32 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %26
  %31 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %12) #4
  store i32 0, i32* %14, align 8
  %32 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %12) #4
  br label %33

33:                                               ; preds = %30, %26
  %34 = load i32, i32* %15, align 8
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %99, %33
  br i1 %29, label %104, label %108

37:                                               ; preds = %33, %99
  %38 = phi i32 [ %100, %99 ], [ %34, %33 ]
  %39 = phi i64 [ %101, %99 ], [ 0, %33 ]
  %40 = load %struct.Dav1dFrameContext*, %struct.Dav1dFrameContext** %16, align 8
  %41 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %40, i64 %39, i32 54, i32 23, i32 5
  %42 = load i32, i32* %41, align 8
  br i1 %29, label %43, label %45

43:                                               ; preds = %37
  %44 = icmp eq i32 %42, 1
  br i1 %44, label %99, label %50

45:                                               ; preds = %37
  %46 = icmp eq i32 %42, -1
  br i1 %46, label %47, label %99

47:                                               ; preds = %45
  %48 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %40, i64 %39, i32 54, i32 23, i32 3
  %49 = load i32, i32* %48, align 8
  br label %54

50:                                               ; preds = %43
  %51 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %40, i64 %39, i32 54, i32 23, i32 3
  %52 = load i32, i32* %51, align 8
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %99, label %54

54:                                               ; preds = %47, %50
  %55 = phi i32 [ %49, %47 ], [ %52, %50 ]
  %56 = sext i32 %55 to i64
  %57 = icmp sgt i32 %55, 0
  br i1 %57, label %58, label %72

58:                                               ; preds = %54
  %59 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %40, i64 %39, i32 54, i32 23, i32 2
  %60 = load %struct.Dav1dTask*, %struct.Dav1dTask** %59, align 8
  br label %61

61:                                               ; preds = %69, %58
  %62 = phi i64 [ 0, %58 ], [ %70, %69 ]
  %63 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %60, i64 %62, i32 0
  %64 = load i32, i32* %63, align 8
  switch i32 %64, label %69 [
    i32 2, label %99
    i32 3, label %65
  ]

65:                                               ; preds = %61
  %66 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %60, i64 %62, i32 1
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, -1
  br i1 %68, label %69, label %99

69:                                               ; preds = %65, %61
  %70 = add nuw nsw i64 %62, 1
  %71 = icmp eq i64 %70, %56
  br i1 %71, label %72, label %61

72:                                               ; preds = %69, %54
  br i1 %29, label %95, label %73

73:                                               ; preds = %72
  %74 = load %struct.Dav1dTask*, %struct.Dav1dTask** %17, align 8
  %75 = icmp eq %struct.Dav1dTask* %74, null
  br i1 %75, label %95, label %76

76:                                               ; preds = %73, %91
  %77 = phi %struct.Dav1dTask* [ %92, %91 ], [ %74, %73 ]
  %78 = phi %struct.Dav1dTask** [ %93, %91 ], [ %17, %73 ]
  %79 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %77, i64 0, i32 2
  %80 = load i32, i32* %79, align 8
  %81 = zext i32 %80 to i64
  %82 = icmp eq i64 %39, %81
  %83 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %77, i64 0, i32 8
  br i1 %82, label %86, label %84

84:                                               ; preds = %76
  %85 = load %struct.Dav1dTask*, %struct.Dav1dTask** %83, align 8
  br label %91

86:                                               ; preds = %76
  %87 = bitcast %struct.Dav1dTask** %83 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = bitcast %struct.Dav1dTask** %78 to i64*
  store i64 %88, i64* %89, align 8
  %90 = inttoptr i64 %88 to %struct.Dav1dTask*
  br label %91

91:                                               ; preds = %86, %84
  %92 = phi %struct.Dav1dTask* [ %90, %86 ], [ %85, %84 ]
  %93 = phi %struct.Dav1dTask** [ %78, %86 ], [ %83, %84 ]
  %94 = icmp eq %struct.Dav1dTask* %92, null
  br i1 %94, label %95, label %76

95:                                               ; preds = %91, %73, %72
  store i32 1, i32* %41, align 8
  %96 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %40, i64 %39, i32 54, i32 23, i32 0
  %97 = tail call i32 @pthread_cond_signal(%union.pthread_cond_t* %96) #4
  %98 = load i32, i32* %15, align 8
  br label %99

99:                                               ; preds = %65, %61, %95, %50, %45, %43
  %100 = phi i32 [ %38, %50 ], [ %98, %95 ], [ %38, %45 ], [ %38, %43 ], [ %38, %61 ], [ %38, %65 ]
  %101 = add nuw nsw i64 %39, 1
  %102 = zext i32 %100 to i64
  %103 = icmp ult i64 %101, %102
  br i1 %103, label %37, label %36

104:                                              ; preds = %36
  %105 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %12) #4
  store i32 1, i32* %14, align 8
  %106 = tail call i32 @pthread_cond_signal(%union.pthread_cond_t* %20) #4
  %107 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %12) #4
  br label %21

108:                                              ; preds = %36
  %109 = load i32, i32* %8, align 4
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %262

111:                                              ; preds = %108
  %112 = load %struct.Dav1dTask*, %struct.Dav1dTask** %17, align 8
  %113 = icmp eq %struct.Dav1dTask* %112, null
  br i1 %113, label %21, label %114

114:                                              ; preds = %111
  %115 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %112, i64 0, i32 8
  %116 = bitcast %struct.Dav1dTask** %115 to i64*
  %117 = load i64, i64* %116, align 8
  store i64 %117, i64* %18, align 8
  %118 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %112, i64 0, i32 0
  store i32 2, i32* %118, align 8
  %119 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %5) #4
  %120 = load %struct.Dav1dFrameContext*, %struct.Dav1dFrameContext** %16, align 8
  %121 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %112, i64 0, i32 2
  %122 = load i32, i32* %121, align 8
  %123 = zext i32 %122 to i64
  %124 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %120, i64 %123
  %125 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %112, i64 0, i32 5
  %126 = load void (%struct.Dav1dFrameContext*, i32)*, void (%struct.Dav1dFrameContext*, i32)** %125, align 8
  %127 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %112, i64 0, i32 4
  %128 = load i32, i32* %127, align 8
  tail call void %126(%struct.Dav1dFrameContext* %124, i32 %128) #4
  %129 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %5) #4
  %130 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %112, i64 0, i32 7, i64 0
  %131 = load %struct.Dav1dTask*, %struct.Dav1dTask** %130, align 8
  %132 = icmp eq %struct.Dav1dTask* %131, null
  br i1 %132, label %179, label %133

133:                                              ; preds = %114
  %134 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %131, i64 0, i32 6, i64 1
  %135 = load %struct.Dav1dTask*, %struct.Dav1dTask** %134, align 8
  %136 = icmp eq %struct.Dav1dTask* %135, null
  br i1 %136, label %141, label %137

137:                                              ; preds = %133
  %138 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %135, i64 0, i32 0
  %139 = load i32, i32* %138, align 8
  %140 = icmp eq i32 %139, 3
  br i1 %140, label %141, label %179

141:                                              ; preds = %137, %133
  %142 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %131, i64 0, i32 0
  store i32 1, i32* %142, align 8
  %143 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %131, i64 0, i32 1
  %144 = load i32, i32* %143, align 4
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %179, label %146

146:                                              ; preds = %141
  %147 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %120, i64 %123, i32 54, i32 23, i32 1
  %148 = load %struct.PostFilterThreadData*, %struct.PostFilterThreadData** %147, align 8
  %149 = getelementptr inbounds %struct.PostFilterThreadData, %struct.PostFilterThreadData* %148, i64 0, i32 2
  %150 = load %struct.Dav1dTask*, %struct.Dav1dTask** %149, align 8
  %151 = icmp eq %struct.Dav1dTask* %150, null
  br i1 %151, label %173, label %152

152:                                              ; preds = %146
  %153 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %131, i64 0, i32 4
  %154 = load i32, i32* %153, align 8
  %155 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %131, i64 0, i32 3
  br label %156

156:                                              ; preds = %169, %152
  %157 = phi %struct.Dav1dTask* [ %150, %152 ], [ %171, %169 ]
  %158 = phi %struct.Dav1dTask** [ %149, %152 ], [ %170, %169 ]
  %159 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %157, i64 0, i32 4
  %160 = load i32, i32* %159, align 8
  %161 = icmp slt i32 %160, %154
  br i1 %161, label %169, label %162

162:                                              ; preds = %156
  %163 = icmp eq i32 %160, %154
  br i1 %163, label %164, label %173

164:                                              ; preds = %162
  %165 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %157, i64 0, i32 3
  %166 = load i32, i32* %165, align 4
  %167 = load i32, i32* %155, align 4
  %168 = icmp sgt i32 %166, %167
  br i1 %168, label %173, label %169

169:                                              ; preds = %164, %156
  %170 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %157, i64 0, i32 8
  %171 = load %struct.Dav1dTask*, %struct.Dav1dTask** %170, align 8
  %172 = icmp eq %struct.Dav1dTask* %171, null
  br i1 %172, label %173, label %156

173:                                              ; preds = %169, %164, %162, %146
  %174 = phi %struct.Dav1dTask** [ %149, %146 ], [ %158, %164 ], [ %158, %162 ], [ %170, %169 ]
  %175 = phi %struct.Dav1dTask* [ null, %146 ], [ %157, %164 ], [ %157, %162 ], [ null, %169 ]
  %176 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %131, i64 0, i32 8
  store %struct.Dav1dTask* %175, %struct.Dav1dTask** %176, align 8
  store %struct.Dav1dTask* %131, %struct.Dav1dTask** %174, align 8
  %177 = getelementptr inbounds %struct.PostFilterThreadData, %struct.PostFilterThreadData* %148, i64 0, i32 1
  %178 = tail call i32 @pthread_cond_signal(%union.pthread_cond_t* %177) #4
  br label %179

179:                                              ; preds = %173, %141, %137, %114
  %180 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %112, i64 0, i32 7, i64 1
  %181 = load %struct.Dav1dTask*, %struct.Dav1dTask** %180, align 8
  %182 = icmp eq %struct.Dav1dTask* %181, null
  br i1 %182, label %229, label %183

183:                                              ; preds = %179
  %184 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %181, i64 0, i32 6, i64 0
  %185 = load %struct.Dav1dTask*, %struct.Dav1dTask** %184, align 8
  %186 = icmp eq %struct.Dav1dTask* %185, null
  br i1 %186, label %191, label %187

187:                                              ; preds = %183
  %188 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %185, i64 0, i32 0
  %189 = load i32, i32* %188, align 8
  %190 = icmp eq i32 %189, 3
  br i1 %190, label %191, label %229

191:                                              ; preds = %187, %183
  %192 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %181, i64 0, i32 0
  store i32 1, i32* %192, align 8
  %193 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %181, i64 0, i32 1
  %194 = load i32, i32* %193, align 4
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %229, label %196

196:                                              ; preds = %191
  %197 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %120, i64 %123, i32 54, i32 23, i32 1
  %198 = load %struct.PostFilterThreadData*, %struct.PostFilterThreadData** %197, align 8
  %199 = getelementptr inbounds %struct.PostFilterThreadData, %struct.PostFilterThreadData* %198, i64 0, i32 2
  %200 = load %struct.Dav1dTask*, %struct.Dav1dTask** %199, align 8
  %201 = icmp eq %struct.Dav1dTask* %200, null
  br i1 %201, label %223, label %202

202:                                              ; preds = %196
  %203 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %181, i64 0, i32 4
  %204 = load i32, i32* %203, align 8
  %205 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %181, i64 0, i32 3
  br label %206

206:                                              ; preds = %219, %202
  %207 = phi %struct.Dav1dTask* [ %200, %202 ], [ %221, %219 ]
  %208 = phi %struct.Dav1dTask** [ %199, %202 ], [ %220, %219 ]
  %209 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %207, i64 0, i32 4
  %210 = load i32, i32* %209, align 8
  %211 = icmp slt i32 %210, %204
  br i1 %211, label %219, label %212

212:                                              ; preds = %206
  %213 = icmp eq i32 %210, %204
  br i1 %213, label %214, label %223

214:                                              ; preds = %212
  %215 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %207, i64 0, i32 3
  %216 = load i32, i32* %215, align 4
  %217 = load i32, i32* %205, align 4
  %218 = icmp sgt i32 %216, %217
  br i1 %218, label %223, label %219

219:                                              ; preds = %214, %206
  %220 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %207, i64 0, i32 8
  %221 = load %struct.Dav1dTask*, %struct.Dav1dTask** %220, align 8
  %222 = icmp eq %struct.Dav1dTask* %221, null
  br i1 %222, label %223, label %206

223:                                              ; preds = %219, %214, %212, %196
  %224 = phi %struct.Dav1dTask** [ %199, %196 ], [ %208, %214 ], [ %208, %212 ], [ %220, %219 ]
  %225 = phi %struct.Dav1dTask* [ null, %196 ], [ %207, %214 ], [ %207, %212 ], [ null, %219 ]
  %226 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %181, i64 0, i32 8
  store %struct.Dav1dTask* %225, %struct.Dav1dTask** %226, align 8
  store %struct.Dav1dTask* %181, %struct.Dav1dTask** %224, align 8
  %227 = getelementptr inbounds %struct.PostFilterThreadData, %struct.PostFilterThreadData* %198, i64 0, i32 1
  %228 = tail call i32 @pthread_cond_signal(%union.pthread_cond_t* %227) #4
  br label %229

229:                                              ; preds = %223, %191, %187, %179
  store i32 3, i32* %118, align 8
  %230 = load %struct.Dav1dTask*, %struct.Dav1dTask** %130, align 8
  %231 = icmp eq %struct.Dav1dTask* %230, null
  br i1 %231, label %232, label %260

232:                                              ; preds = %229
  %233 = load i32, i32* %15, align 8
  %234 = icmp ugt i32 %233, 1
  br i1 %234, label %235, label %242

235:                                              ; preds = %232
  %236 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %120, i64 %123, i32 3
  %237 = load %struct.Dav1dFrameHeader*, %struct.Dav1dFrameHeader** %236, align 8
  %238 = getelementptr inbounds %struct.Dav1dFrameHeader, %struct.Dav1dFrameHeader* %237, i64 0, i32 33
  %239 = load i32, i32* %238, align 4
  %240 = icmp eq i32 %239, 0
  %241 = select i1 %240, i32 3, i32 0
  br label %242

242:                                              ; preds = %235, %232
  %243 = phi i32 [ 3, %232 ], [ %241, %235 ]
  %244 = load i32, i32* %127, align 8
  %245 = add nsw i32 %244, 1
  %246 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %120, i64 %123, i32 44
  %247 = load i32, i32* %246, align 16
  %248 = shl i32 %247, 2
  %249 = mul i32 %248, %245
  %250 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %120, i64 %123, i32 6
  tail call void @dav1d_thread_picture_signal(%struct.Dav1dThreadPicture* %250, i32 %249, i32 %243) #4
  %251 = load i32, i32* %127, align 8
  %252 = add nsw i32 %251, 1
  %253 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %120, i64 %123, i32 42
  %254 = load i32, i32* %253, align 8
  %255 = icmp eq i32 %252, %254
  br i1 %255, label %256, label %260

256:                                              ; preds = %242
  %257 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %120, i64 %123, i32 54, i32 23, i32 5
  store i32 1, i32* %257, align 8
  %258 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %120, i64 %123, i32 54, i32 23, i32 0
  %259 = tail call i32 @pthread_cond_signal(%union.pthread_cond_t* %258) #4
  br label %260

260:                                              ; preds = %242, %256, %229
  %261 = getelementptr inbounds %struct.Dav1dTask, %struct.Dav1dTask* %112, i64 0, i32 1
  store i32 -1, i32* %261, align 4
  br label %26

262:                                              ; preds = %108
  %263 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %5) #4
  ret i8* null
}

declare void @dav1d_thread_picture_signal(%struct.Dav1dThreadPicture*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @prctl(i32, ...) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "stackrealign" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "stackrealign" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "stackrealign" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
