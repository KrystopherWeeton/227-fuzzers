; ModuleID = '../../third_party/icu/source/common/ucharstrie.cpp'
source_filename = "../../third_party/icu/source/common/ucharstrie.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.icu_69::UCharsTrie" = type <{ i16*, i16*, i16*, i32, [4 x i8] }>
%"class.icu_69::ConstChar16Ptr" = type { i16* }
%"class.icu_69::Appendable" = type { %"class.icu_69::UObject" }
%"class.icu_69::UObject" = type { i32 (...)** }

@_ZN6icu_6910UCharsTrieD1Ev = hidden unnamed_addr alias void (%"class.icu_69::UCharsTrie"*), void (%"class.icu_69::UCharsTrie"*)* @_ZN6icu_6910UCharsTrieD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6910UCharsTrieD2Ev(%"class.icu_69::UCharsTrie"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.icu_69::UCharsTrie"* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  tail call void @uprv_free_69(i8* %3) #5
  ret void
}

declare void @uprv_free_69(i8*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK6icu_6910UCharsTrie7currentEv(%"class.icu_69::UCharsTrie"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::UCharsTrie", %"class.icu_69::UCharsTrie"* %0, i64 0, i32 2
  %3 = load i16*, i16** %2, align 8
  %4 = icmp eq i16* %3, null
  br i1 %4, label %16, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.icu_69::UCharsTrie", %"class.icu_69::UCharsTrie"* %0, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = icmp slt i32 %7, 0
  br i1 %8, label %9, label %16

9:                                                ; preds = %5
  %10 = load i16, i16* %3, align 2
  %11 = icmp ugt i16 %10, 63
  br i1 %11, label %12, label %16

12:                                               ; preds = %9
  %13 = lshr i16 %10, 15
  %14 = xor i16 %13, 3
  %15 = zext i16 %14 to i32
  br label %16

16:                                               ; preds = %12, %9, %5, %1
  %17 = phi i32 [ 0, %1 ], [ %15, %12 ], [ 1, %9 ], [ 1, %5 ]
  ret i32 %17
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN6icu_6910UCharsTrie17firstForCodePointEi(%"class.icu_69::UCharsTrie"* nocapture, i32) local_unnamed_addr #3 align 2 {
  %3 = icmp slt i32 %1, 65536
  br i1 %3, label %4, label %53

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.icu_69::UCharsTrie", %"class.icu_69::UCharsTrie"* %0, i64 0, i32 3
  store i32 -1, i32* %5, align 8
  %6 = getelementptr inbounds %"class.icu_69::UCharsTrie", %"class.icu_69::UCharsTrie"* %0, i64 0, i32 1
  %7 = load i16*, i16** %6, align 8
  %8 = getelementptr inbounds i16, i16* %7, i64 1
  %9 = load i16, i16* %7, align 2
  %10 = zext i16 %9 to i32
  %11 = icmp ult i16 %9, 48
  br i1 %11, label %12, label %16

12:                                               ; preds = %47, %4
  %13 = phi i16* [ %8, %4 ], [ %48, %47 ]
  %14 = phi i32 [ %10, %4 ], [ %49, %47 ]
  %15 = tail call i32 @_ZN6icu_6910UCharsTrie10branchNextEPKDsii(%"class.icu_69::UCharsTrie"* %0, i16* %13, i32 %14, i32 %1) #5
  br label %113

16:                                               ; preds = %4, %47
  %17 = phi i32 [ %49, %47 ], [ %10, %4 ]
  %18 = phi i16* [ %48, %47 ], [ %8, %4 ]
  %19 = icmp ult i32 %17, 64
  br i1 %19, label %20, label %36

20:                                               ; preds = %16
  %21 = getelementptr inbounds i16, i16* %18, i64 1
  %22 = load i16, i16* %18, align 2
  %23 = zext i16 %22 to i32
  %24 = icmp eq i32 %23, %1
  br i1 %24, label %25, label %51

25:                                               ; preds = %20
  %26 = add nsw i32 %17, -49
  store i32 %26, i32* %5, align 8
  %27 = getelementptr inbounds %"class.icu_69::UCharsTrie", %"class.icu_69::UCharsTrie"* %0, i64 0, i32 2
  store i16* %21, i16** %27, align 8
  %28 = icmp slt i32 %26, 0
  br i1 %28, label %29, label %113

29:                                               ; preds = %25
  %30 = load i16, i16* %21, align 2
  %31 = icmp ugt i16 %30, 63
  br i1 %31, label %32, label %113

32:                                               ; preds = %29
  %33 = lshr i16 %30, 15
  %34 = xor i16 %33, 3
  %35 = zext i16 %34 to i32
  br label %113

36:                                               ; preds = %16
  %37 = trunc i32 %17 to i16
  %38 = icmp slt i16 %37, 0
  br i1 %38, label %51, label %39

39:                                               ; preds = %36
  %40 = icmp ugt i32 %17, 16447
  br i1 %40, label %41, label %47

41:                                               ; preds = %39
  %42 = icmp ult i32 %17, 32704
  br i1 %42, label %43, label %45

43:                                               ; preds = %41
  %44 = getelementptr inbounds i16, i16* %18, i64 1
  br label %47

45:                                               ; preds = %41
  %46 = getelementptr inbounds i16, i16* %18, i64 2
  br label %47

47:                                               ; preds = %45, %43, %39
  %48 = phi i16* [ %44, %43 ], [ %46, %45 ], [ %18, %39 ]
  %49 = and i32 %17, 63
  %50 = icmp ult i32 %49, 48
  br i1 %50, label %12, label %16

51:                                               ; preds = %36, %20
  %52 = getelementptr inbounds %"class.icu_69::UCharsTrie", %"class.icu_69::UCharsTrie"* %0, i64 0, i32 2
  store i16* null, i16** %52, align 8
  br label %113

53:                                               ; preds = %2
  %54 = lshr i32 %1, 10
  %55 = add nuw nsw i32 %54, 55232
  %56 = and i32 %55, 65535
  %57 = getelementptr inbounds %"class.icu_69::UCharsTrie", %"class.icu_69::UCharsTrie"* %0, i64 0, i32 3
  store i32 -1, i32* %57, align 8
  %58 = getelementptr inbounds %"class.icu_69::UCharsTrie", %"class.icu_69::UCharsTrie"* %0, i64 0, i32 1
  %59 = load i16*, i16** %58, align 8
  %60 = getelementptr inbounds i16, i16* %59, i64 1
  %61 = load i16, i16* %59, align 2
  %62 = zext i16 %61 to i32
  %63 = icmp ult i16 %61, 48
  br i1 %63, label %64, label %68

64:                                               ; preds = %99, %53
  %65 = phi i16* [ %60, %53 ], [ %100, %99 ]
  %66 = phi i32 [ %62, %53 ], [ %101, %99 ]
  %67 = tail call i32 @_ZN6icu_6910UCharsTrie10branchNextEPKDsii(%"class.icu_69::UCharsTrie"* %0, i16* %65, i32 %66, i32 %56) #5
  br label %105

68:                                               ; preds = %53, %99
  %69 = phi i32 [ %101, %99 ], [ %62, %53 ]
  %70 = phi i16* [ %100, %99 ], [ %60, %53 ]
  %71 = icmp ult i32 %69, 64
  br i1 %71, label %72, label %88

72:                                               ; preds = %68
  %73 = getelementptr inbounds i16, i16* %70, i64 1
  %74 = load i16, i16* %70, align 2
  %75 = trunc i32 %55 to i16
  %76 = icmp eq i16 %74, %75
  br i1 %76, label %77, label %103

77:                                               ; preds = %72
  %78 = add nsw i32 %69, -49
  store i32 %78, i32* %57, align 8
  %79 = getelementptr inbounds %"class.icu_69::UCharsTrie", %"class.icu_69::UCharsTrie"* %0, i64 0, i32 2
  store i16* %73, i16** %79, align 8
  %80 = icmp slt i32 %78, 0
  br i1 %80, label %81, label %109

81:                                               ; preds = %77
  %82 = load i16, i16* %73, align 2
  %83 = icmp ugt i16 %82, 63
  br i1 %83, label %84, label %109

84:                                               ; preds = %81
  %85 = lshr i16 %82, 15
  %86 = xor i16 %85, 3
  %87 = zext i16 %86 to i32
  br label %105

88:                                               ; preds = %68
  %89 = trunc i32 %69 to i16
  %90 = icmp slt i16 %89, 0
  br i1 %90, label %103, label %91

91:                                               ; preds = %88
  %92 = icmp ugt i32 %69, 16447
  br i1 %92, label %93, label %99

93:                                               ; preds = %91
  %94 = icmp ult i32 %69, 32704
  br i1 %94, label %95, label %97

95:                                               ; preds = %93
  %96 = getelementptr inbounds i16, i16* %70, i64 1
  br label %99

97:                                               ; preds = %93
  %98 = getelementptr inbounds i16, i16* %70, i64 2
  br label %99

99:                                               ; preds = %97, %95, %91
  %100 = phi i16* [ %96, %95 ], [ %98, %97 ], [ %70, %91 ]
  %101 = and i32 %69, 63
  %102 = icmp ult i32 %101, 48
  br i1 %102, label %64, label %68

103:                                              ; preds = %88, %72
  %104 = getelementptr inbounds %"class.icu_69::UCharsTrie", %"class.icu_69::UCharsTrie"* %0, i64 0, i32 2
  store i16* null, i16** %104, align 8
  br label %113

105:                                              ; preds = %64, %84
  %106 = phi i32 [ %67, %64 ], [ %87, %84 ]
  %107 = and i32 %106, 1
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %113, label %109

109:                                              ; preds = %81, %77, %105
  %110 = and i32 %1, 1023
  %111 = or i32 %110, 56320
  %112 = tail call i32 @_ZN6icu_6910UCharsTrie4nextEi(%"class.icu_69::UCharsTrie"* %0, i32 %111)
  br label %113

113:                                              ; preds = %103, %51, %32, %29, %25, %12, %105, %109
  %114 = phi i32 [ %112, %109 ], [ 0, %105 ], [ %15, %12 ], [ 0, %51 ], [ 1, %25 ], [ 1, %29 ], [ %35, %32 ], [ 0, %103 ]
  ret i32 %114
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN6icu_6910UCharsTrie4nextEi(%"class.icu_69::UCharsTrie"* nocapture, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::UCharsTrie", %"class.icu_69::UCharsTrie"* %0, i64 0, i32 2
  %4 = load i16*, i16** %3, align 8
  %5 = icmp eq i16* %4, null
  br i1 %5, label %67, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.icu_69::UCharsTrie", %"class.icu_69::UCharsTrie"* %0, i64 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = icmp sgt i32 %8, -1
  %10 = getelementptr inbounds i16, i16* %4, i64 1
  %11 = load i16, i16* %4, align 2
  %12 = zext i16 %11 to i32
  br i1 %9, label %13, label %26

13:                                               ; preds = %6
  %14 = icmp eq i32 %12, %1
  br i1 %14, label %15, label %25

15:                                               ; preds = %13
  %16 = add nsw i32 %8, -1
  store i32 %16, i32* %7, align 8
  store i16* %10, i16** %3, align 8
  %17 = icmp slt i32 %8, 1
  br i1 %17, label %18, label %67

18:                                               ; preds = %15
  %19 = load i16, i16* %10, align 2
  %20 = icmp ugt i16 %19, 63
  br i1 %20, label %21, label %67

21:                                               ; preds = %18
  %22 = lshr i16 %19, 15
  %23 = xor i16 %22, 3
  %24 = zext i16 %23 to i32
  br label %67

25:                                               ; preds = %13
  store i16* null, i16** %3, align 8
  br label %67

26:                                               ; preds = %6
  %27 = icmp ult i16 %11, 48
  br i1 %27, label %28, label %32

28:                                               ; preds = %62, %26
  %29 = phi i16* [ %10, %26 ], [ %63, %62 ]
  %30 = phi i32 [ %12, %26 ], [ %64, %62 ]
  %31 = tail call i32 @_ZN6icu_6910UCharsTrie10branchNextEPKDsii(%"class.icu_69::UCharsTrie"* %0, i16* %29, i32 %30, i32 %1) #5
  br label %67

32:                                               ; preds = %26, %62
  %33 = phi i32 [ %64, %62 ], [ %12, %26 ]
  %34 = phi i16* [ %63, %62 ], [ %10, %26 ]
  %35 = icmp ult i32 %33, 64
  br i1 %35, label %36, label %51

36:                                               ; preds = %32
  %37 = getelementptr inbounds i16, i16* %34, i64 1
  %38 = load i16, i16* %34, align 2
  %39 = zext i16 %38 to i32
  %40 = icmp eq i32 %39, %1
  br i1 %40, label %41, label %66

41:                                               ; preds = %36
  %42 = add nsw i32 %33, -49
  store i32 %42, i32* %7, align 8
  store i16* %37, i16** %3, align 8
  %43 = icmp slt i32 %42, 0
  br i1 %43, label %44, label %67

44:                                               ; preds = %41
  %45 = load i16, i16* %37, align 2
  %46 = icmp ugt i16 %45, 63
  br i1 %46, label %47, label %67

47:                                               ; preds = %44
  %48 = lshr i16 %45, 15
  %49 = xor i16 %48, 3
  %50 = zext i16 %49 to i32
  br label %67

51:                                               ; preds = %32
  %52 = trunc i32 %33 to i16
  %53 = icmp slt i16 %52, 0
  br i1 %53, label %66, label %54

54:                                               ; preds = %51
  %55 = icmp ugt i32 %33, 16447
  br i1 %55, label %56, label %62

56:                                               ; preds = %54
  %57 = icmp ult i32 %33, 32704
  br i1 %57, label %58, label %60

58:                                               ; preds = %56
  %59 = getelementptr inbounds i16, i16* %34, i64 1
  br label %62

60:                                               ; preds = %56
  %61 = getelementptr inbounds i16, i16* %34, i64 2
  br label %62

62:                                               ; preds = %60, %58, %54
  %63 = phi i16* [ %59, %58 ], [ %61, %60 ], [ %34, %54 ]
  %64 = and i32 %33, 63
  %65 = icmp ult i32 %64, 48
  br i1 %65, label %28, label %32

66:                                               ; preds = %51, %36
  store i16* null, i16** %3, align 8
  br label %67

67:                                               ; preds = %66, %47, %44, %41, %28, %25, %15, %18, %21, %2
  %68 = phi i32 [ 0, %2 ], [ 0, %25 ], [ %24, %21 ], [ 1, %18 ], [ 1, %15 ], [ %31, %28 ], [ 0, %66 ], [ 1, %41 ], [ 1, %44 ], [ %50, %47 ]
  ret i32 %68
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN6icu_6910UCharsTrie16nextForCodePointEi(%"class.icu_69::UCharsTrie"* nocapture, i32) local_unnamed_addr #3 align 2 {
  %3 = icmp slt i32 %1, 65536
  br i1 %3, label %14, label %4

4:                                                ; preds = %2
  %5 = lshr i32 %1, 10
  %6 = add nuw nsw i32 %5, 55232
  %7 = and i32 %6, 65535
  %8 = tail call i32 @_ZN6icu_6910UCharsTrie4nextEi(%"class.icu_69::UCharsTrie"* %0, i32 %7)
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %17, label %11

11:                                               ; preds = %4
  %12 = and i32 %1, 1023
  %13 = or i32 %12, 56320
  br label %14

14:                                               ; preds = %2, %11
  %15 = phi i32 [ %13, %11 ], [ %1, %2 ]
  %16 = tail call i32 @_ZN6icu_6910UCharsTrie4nextEi(%"class.icu_69::UCharsTrie"* %0, i32 %15)
  br label %17

17:                                               ; preds = %14, %4
  %18 = phi i32 [ 0, %4 ], [ %16, %14 ]
  ret i32 %18
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN6icu_6910UCharsTrie10branchNextEPKDsii(%"class.icu_69::UCharsTrie"* nocapture, i16*, i32, i32) local_unnamed_addr #3 align 2 {
  %5 = icmp eq i32 %2, 0
  br i1 %5, label %6, label %10

6:                                                ; preds = %4
  %7 = getelementptr inbounds i16, i16* %1, i64 1
  %8 = load i16, i16* %1, align 2
  %9 = zext i16 %8 to i32
  br label %10

10:                                               ; preds = %6, %4
  %11 = phi i16* [ %7, %6 ], [ %1, %4 ]
  %12 = phi i32 [ %9, %6 ], [ %2, %4 ]
  %13 = add nsw i32 %12, 1
  %14 = icmp sgt i32 %12, 4
  br i1 %14, label %15, label %66

15:                                               ; preds = %10, %62
  %16 = phi i32 [ %64, %62 ], [ %13, %10 ]
  %17 = phi i16* [ %63, %62 ], [ %11, %10 ]
  %18 = getelementptr inbounds i16, i16* %17, i64 1
  %19 = load i16, i16* %17, align 2
  %20 = zext i16 %19 to i32
  %21 = icmp sgt i32 %20, %3
  %22 = lshr i32 %16, 1
  br i1 %21, label %23, label %51

23:                                               ; preds = %15
  %24 = getelementptr inbounds i16, i16* %17, i64 2
  %25 = load i16, i16* %18, align 2
  %26 = zext i16 %25 to i32
  %27 = icmp ugt i16 %25, -1025
  br i1 %27, label %28, label %46

28:                                               ; preds = %23
  %29 = icmp eq i16 %25, -1
  br i1 %29, label %30, label %39

30:                                               ; preds = %28
  %31 = load i16, i16* %24, align 2
  %32 = zext i16 %31 to i32
  %33 = shl nuw i32 %32, 16
  %34 = getelementptr inbounds i16, i16* %17, i64 3
  %35 = load i16, i16* %34, align 2
  %36 = zext i16 %35 to i32
  %37 = or i32 %33, %36
  %38 = getelementptr inbounds i16, i16* %17, i64 4
  br label %46

39:                                               ; preds = %28
  %40 = shl nuw i32 %26, 16
  %41 = add i32 %40, 67108864
  %42 = getelementptr inbounds i16, i16* %17, i64 3
  %43 = load i16, i16* %24, align 2
  %44 = zext i16 %43 to i32
  %45 = or i32 %41, %44
  br label %46

46:                                               ; preds = %23, %30, %39
  %47 = phi i16* [ %38, %30 ], [ %42, %39 ], [ %24, %23 ]
  %48 = phi i32 [ %37, %30 ], [ %45, %39 ], [ %26, %23 ]
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i16, i16* %47, i64 %49
  br label %62

51:                                               ; preds = %15
  %52 = sub nsw i32 %16, %22
  %53 = getelementptr inbounds i16, i16* %17, i64 2
  %54 = load i16, i16* %18, align 2
  %55 = icmp ugt i16 %54, -1025
  br i1 %55, label %56, label %62

56:                                               ; preds = %51
  %57 = icmp eq i16 %54, -1
  br i1 %57, label %58, label %60

58:                                               ; preds = %56
  %59 = getelementptr inbounds i16, i16* %17, i64 4
  br label %62

60:                                               ; preds = %56
  %61 = getelementptr inbounds i16, i16* %17, i64 3
  br label %62

62:                                               ; preds = %60, %58, %51, %46
  %63 = phi i16* [ %50, %46 ], [ %59, %58 ], [ %61, %60 ], [ %53, %51 ]
  %64 = phi i32 [ %22, %46 ], [ %52, %58 ], [ %52, %60 ], [ %52, %51 ]
  %65 = icmp sgt i32 %64, 5
  br i1 %65, label %15, label %66

66:                                               ; preds = %62, %10
  %67 = phi i16* [ %11, %10 ], [ %63, %62 ]
  %68 = phi i32 [ %13, %10 ], [ %64, %62 ]
  br label %69

69:                                               ; preds = %66, %128
  %70 = phi i16* [ %129, %128 ], [ %67, %66 ]
  %71 = phi i32 [ %117, %128 ], [ %68, %66 ]
  %72 = getelementptr inbounds i16, i16* %70, i64 1
  %73 = load i16, i16* %70, align 2
  %74 = zext i16 %73 to i32
  %75 = icmp eq i32 %74, %3
  br i1 %75, label %76, label %116

76:                                               ; preds = %69
  %77 = load i16, i16* %72, align 2
  %78 = zext i16 %77 to i32
  %79 = icmp slt i16 %77, 0
  br i1 %79, label %112, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds i16, i16* %70, i64 2
  %82 = icmp ult i16 %77, 16384
  br i1 %82, label %101, label %83

83:                                               ; preds = %80
  %84 = icmp ult i16 %77, 32767
  br i1 %84, label %85, label %92

85:                                               ; preds = %83
  %86 = shl nuw i32 %78, 16
  %87 = add i32 %86, -1073741824
  %88 = getelementptr inbounds i16, i16* %70, i64 3
  %89 = load i16, i16* %81, align 2
  %90 = zext i16 %89 to i32
  %91 = or i32 %87, %90
  br label %101

92:                                               ; preds = %83
  %93 = load i16, i16* %81, align 2
  %94 = zext i16 %93 to i32
  %95 = shl nuw i32 %94, 16
  %96 = getelementptr inbounds i16, i16* %70, i64 3
  %97 = load i16, i16* %96, align 2
  %98 = zext i16 %97 to i32
  %99 = or i32 %95, %98
  %100 = getelementptr inbounds i16, i16* %70, i64 4
  br label %101

101:                                              ; preds = %80, %85, %92
  %102 = phi i16* [ %88, %85 ], [ %100, %92 ], [ %81, %80 ]
  %103 = phi i32 [ %91, %85 ], [ %99, %92 ], [ %78, %80 ]
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds i16, i16* %102, i64 %104
  %106 = load i16, i16* %105, align 2
  %107 = icmp ugt i16 %106, 63
  br i1 %107, label %108, label %112

108:                                              ; preds = %101
  %109 = lshr i16 %106, 15
  %110 = xor i16 %109, 3
  %111 = zext i16 %110 to i32
  br label %112

112:                                              ; preds = %108, %101, %76
  %113 = phi i16* [ %72, %76 ], [ %105, %101 ], [ %105, %108 ]
  %114 = phi i32 [ 2, %76 ], [ 1, %101 ], [ %111, %108 ]
  %115 = getelementptr inbounds %"class.icu_69::UCharsTrie", %"class.icu_69::UCharsTrie"* %0, i64 0, i32 2
  store i16* %113, i16** %115, align 8
  br label %145

116:                                              ; preds = %69
  %117 = add nsw i32 %71, -1
  %118 = getelementptr inbounds i16, i16* %70, i64 2
  %119 = load i16, i16* %72, align 2
  %120 = and i16 %119, 32767
  %121 = icmp ugt i16 %120, 16383
  br i1 %121, label %122, label %128

122:                                              ; preds = %116
  %123 = icmp eq i16 %120, 32767
  br i1 %123, label %126, label %124

124:                                              ; preds = %122
  %125 = getelementptr inbounds i16, i16* %70, i64 3
  br label %128

126:                                              ; preds = %122
  %127 = getelementptr inbounds i16, i16* %70, i64 4
  br label %128

128:                                              ; preds = %116, %124, %126
  %129 = phi i16* [ %125, %124 ], [ %127, %126 ], [ %118, %116 ]
  %130 = icmp sgt i32 %117, 1
  br i1 %130, label %69, label %131

131:                                              ; preds = %128
  %132 = getelementptr inbounds i16, i16* %129, i64 1
  %133 = load i16, i16* %129, align 2
  %134 = zext i16 %133 to i32
  %135 = icmp eq i32 %134, %3
  %136 = getelementptr inbounds %"class.icu_69::UCharsTrie", %"class.icu_69::UCharsTrie"* %0, i64 0, i32 2
  br i1 %135, label %137, label %144

137:                                              ; preds = %131
  store i16* %132, i16** %136, align 8
  %138 = load i16, i16* %132, align 2
  %139 = icmp ugt i16 %138, 63
  br i1 %139, label %140, label %145

140:                                              ; preds = %137
  %141 = lshr i16 %138, 15
  %142 = xor i16 %141, 3
  %143 = zext i16 %142 to i32
  br label %145

144:                                              ; preds = %131
  store i16* null, i16** %136, align 8
  br label %145

145:                                              ; preds = %140, %137, %144, %112
  %146 = phi i32 [ %114, %112 ], [ 0, %144 ], [ %143, %140 ], [ 1, %137 ]
  ret i32 %146
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN6icu_6910UCharsTrie8nextImplEPKDsi(%"class.icu_69::UCharsTrie"* nocapture, i16*, i32) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds i16, i16* %1, i64 1
  %5 = load i16, i16* %1, align 2
  %6 = zext i16 %5 to i32
  %7 = icmp ult i16 %5, 48
  br i1 %7, label %8, label %12

8:                                                ; preds = %44, %3
  %9 = phi i16* [ %4, %3 ], [ %45, %44 ]
  %10 = phi i32 [ %6, %3 ], [ %46, %44 ]
  %11 = tail call i32 @_ZN6icu_6910UCharsTrie10branchNextEPKDsii(%"class.icu_69::UCharsTrie"* %0, i16* %9, i32 %10, i32 %2)
  br label %50

12:                                               ; preds = %3, %44
  %13 = phi i32 [ %46, %44 ], [ %6, %3 ]
  %14 = phi i16* [ %45, %44 ], [ %4, %3 ]
  %15 = icmp ult i32 %13, 64
  br i1 %15, label %16, label %33

16:                                               ; preds = %12
  %17 = getelementptr inbounds i16, i16* %14, i64 1
  %18 = load i16, i16* %14, align 2
  %19 = zext i16 %18 to i32
  %20 = icmp eq i32 %19, %2
  br i1 %20, label %21, label %48

21:                                               ; preds = %16
  %22 = add nsw i32 %13, -49
  %23 = getelementptr inbounds %"class.icu_69::UCharsTrie", %"class.icu_69::UCharsTrie"* %0, i64 0, i32 3
  store i32 %22, i32* %23, align 8
  %24 = getelementptr inbounds %"class.icu_69::UCharsTrie", %"class.icu_69::UCharsTrie"* %0, i64 0, i32 2
  store i16* %17, i16** %24, align 8
  %25 = icmp slt i32 %22, 0
  br i1 %25, label %26, label %50

26:                                               ; preds = %21
  %27 = load i16, i16* %17, align 2
  %28 = icmp ugt i16 %27, 63
  br i1 %28, label %29, label %50

29:                                               ; preds = %26
  %30 = lshr i16 %27, 15
  %31 = xor i16 %30, 3
  %32 = zext i16 %31 to i32
  br label %50

33:                                               ; preds = %12
  %34 = trunc i32 %13 to i16
  %35 = icmp slt i16 %34, 0
  br i1 %35, label %48, label %36

36:                                               ; preds = %33
  %37 = icmp ugt i32 %13, 16447
  br i1 %37, label %38, label %44

38:                                               ; preds = %36
  %39 = icmp ult i32 %13, 32704
  br i1 %39, label %40, label %42

40:                                               ; preds = %38
  %41 = getelementptr inbounds i16, i16* %14, i64 1
  br label %44

42:                                               ; preds = %38
  %43 = getelementptr inbounds i16, i16* %14, i64 2
  br label %44

44:                                               ; preds = %36, %40, %42
  %45 = phi i16* [ %41, %40 ], [ %43, %42 ], [ %14, %36 ]
  %46 = and i32 %13, 63
  %47 = icmp ult i32 %46, 48
  br i1 %47, label %8, label %12

48:                                               ; preds = %33, %16
  %49 = getelementptr inbounds %"class.icu_69::UCharsTrie", %"class.icu_69::UCharsTrie"* %0, i64 0, i32 2
  store i16* null, i16** %49, align 8
  br label %50

50:                                               ; preds = %29, %26, %21, %48, %8
  %51 = phi i32 [ %11, %8 ], [ 0, %48 ], [ 1, %21 ], [ 1, %26 ], [ %32, %29 ]
  ret i32 %51
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN6icu_6910UCharsTrie4nextENS_14ConstChar16PtrEi(%"class.icu_69::UCharsTrie"* nocapture, %"class.icu_69::ConstChar16Ptr"* nocapture readonly, i32) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.icu_69::ConstChar16Ptr", %"class.icu_69::ConstChar16Ptr"* %1, i64 0, i32 0
  %5 = load i16*, i16** %4, align 8
  %6 = icmp slt i32 %2, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = load i16, i16* %5, align 2
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %12, label %27

10:                                               ; preds = %3
  %11 = icmp eq i32 %2, 0
  br i1 %11, label %12, label %27

12:                                               ; preds = %10, %7
  %13 = getelementptr inbounds %"class.icu_69::UCharsTrie", %"class.icu_69::UCharsTrie"* %0, i64 0, i32 2
  %14 = load i16*, i16** %13, align 8
  %15 = icmp eq i16* %14, null
  br i1 %15, label %164, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.icu_69::UCharsTrie", %"class.icu_69::UCharsTrie"* %0, i64 0, i32 3
  %18 = load i32, i32* %17, align 8
  %19 = icmp slt i32 %18, 0
  br i1 %19, label %20, label %164

20:                                               ; preds = %16
  %21 = load i16, i16* %14, align 2
  %22 = icmp ugt i16 %21, 63
  br i1 %22, label %23, label %164

23:                                               ; preds = %20
  %24 = lshr i16 %21, 15
  %25 = xor i16 %24, 3
  %26 = zext i16 %25 to i32
  br label %164

27:                                               ; preds = %10, %7
  %28 = getelementptr inbounds %"class.icu_69::UCharsTrie", %"class.icu_69::UCharsTrie"* %0, i64 0, i32 2
  %29 = load i16*, i16** %28, align 8
  %30 = icmp eq i16* %29, null
  br i1 %30, label %164, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.icu_69::UCharsTrie", %"class.icu_69::UCharsTrie"* %0, i64 0, i32 3
  %33 = load i32, i32* %32, align 8
  br label %34

34:                                               ; preds = %161, %31
  %35 = phi i32 [ %2, %31 ], [ %107, %161 ]
  %36 = phi i16* [ %5, %31 ], [ %108, %161 ]
  %37 = phi i16* [ %29, %31 ], [ %162, %161 ]
  %38 = phi i32 [ %33, %31 ], [ %163, %161 ]
  %39 = icmp slt i32 %35, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %34
  %41 = icmp eq i32 %35, 0
  br i1 %41, label %72, label %83

42:                                               ; preds = %34
  %43 = load i16, i16* %36, align 2
  %44 = icmp eq i16 %43, 0
  br i1 %44, label %45, label %56

45:                                               ; preds = %42, %67
  %46 = phi i16* [ %68, %67 ], [ %37, %42 ]
  %47 = phi i32 [ %69, %67 ], [ %38, %42 ]
  store i32 %47, i32* %32, align 8
  store i16* %46, i16** %28, align 8
  %48 = icmp slt i32 %47, 0
  br i1 %48, label %49, label %164

49:                                               ; preds = %45
  %50 = load i16, i16* %46, align 2
  %51 = icmp ugt i16 %50, 63
  br i1 %51, label %52, label %164

52:                                               ; preds = %49
  %53 = lshr i16 %50, 15
  %54 = xor i16 %53, 3
  %55 = zext i16 %54 to i32
  br label %164

56:                                               ; preds = %42, %67
  %57 = phi i16 [ %70, %67 ], [ %43, %42 ]
  %58 = phi i16* [ %61, %67 ], [ %36, %42 ]
  %59 = phi i32 [ %69, %67 ], [ %38, %42 ]
  %60 = phi i16* [ %68, %67 ], [ %37, %42 ]
  %61 = getelementptr inbounds i16, i16* %58, i64 1
  %62 = icmp slt i32 %59, 0
  br i1 %62, label %100, label %63

63:                                               ; preds = %56
  %64 = load i16, i16* %60, align 2
  %65 = icmp eq i16 %57, %64
  br i1 %65, label %67, label %66

66:                                               ; preds = %63
  store i16* null, i16** %28, align 8
  br label %164

67:                                               ; preds = %63
  %68 = getelementptr inbounds i16, i16* %60, i64 1
  %69 = add nsw i32 %59, -1
  %70 = load i16, i16* %61, align 2
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %45, label %56

72:                                               ; preds = %40, %96
  %73 = phi i16* [ %97, %96 ], [ %37, %40 ]
  %74 = phi i32 [ %98, %96 ], [ %38, %40 ]
  store i32 %74, i32* %32, align 8
  store i16* %73, i16** %28, align 8
  %75 = icmp slt i32 %74, 0
  br i1 %75, label %76, label %164

76:                                               ; preds = %72
  %77 = load i16, i16* %73, align 2
  %78 = icmp ugt i16 %77, 63
  br i1 %78, label %79, label %164

79:                                               ; preds = %76
  %80 = lshr i16 %77, 15
  %81 = xor i16 %80, 3
  %82 = zext i16 %81 to i32
  br label %164

83:                                               ; preds = %40, %96
  %84 = phi i32 [ %98, %96 ], [ %38, %40 ]
  %85 = phi i16* [ %97, %96 ], [ %37, %40 ]
  %86 = phi i16* [ %88, %96 ], [ %36, %40 ]
  %87 = phi i32 [ %90, %96 ], [ %35, %40 ]
  %88 = getelementptr inbounds i16, i16* %86, i64 1
  %89 = load i16, i16* %86, align 2
  %90 = add nsw i32 %87, -1
  %91 = icmp slt i32 %84, 0
  br i1 %91, label %100, label %92

92:                                               ; preds = %83
  %93 = load i16, i16* %85, align 2
  %94 = icmp eq i16 %89, %93
  br i1 %94, label %96, label %95

95:                                               ; preds = %92
  store i16* null, i16** %28, align 8
  br label %164

96:                                               ; preds = %92
  %97 = getelementptr inbounds i16, i16* %85, i64 1
  %98 = add nsw i32 %84, -1
  %99 = icmp eq i32 %90, 0
  br i1 %99, label %72, label %83

100:                                              ; preds = %83, %56
  %101 = phi i32 [ %59, %56 ], [ %84, %83 ]
  %102 = phi i32 [ %35, %56 ], [ %90, %83 ]
  %103 = phi i16* [ %61, %56 ], [ %88, %83 ]
  %104 = phi i16* [ %60, %56 ], [ %85, %83 ]
  %105 = phi i16 [ %57, %56 ], [ %89, %83 ]
  store i32 %101, i32* %32, align 8
  br label %106

106:                                              ; preds = %137, %100
  %107 = phi i32 [ %133, %137 ], [ %102, %100 ]
  %108 = phi i16* [ %138, %137 ], [ %103, %100 ]
  %109 = phi i16* [ %139, %137 ], [ %104, %100 ]
  %110 = phi i16 [ %134, %137 ], [ %105, %100 ]
  %111 = load i16, i16* %109, align 2
  %112 = zext i16 %111 to i32
  %113 = zext i16 %110 to i32
  %114 = getelementptr inbounds i16, i16* %109, i64 1
  br label %115

115:                                              ; preds = %106, %158
  %116 = phi i16* [ %159, %158 ], [ %114, %106 ]
  %117 = phi i32 [ %160, %158 ], [ %112, %106 ]
  %118 = icmp ult i32 %117, 48
  br i1 %118, label %119, label %140

119:                                              ; preds = %115
  %120 = tail call i32 @_ZN6icu_6910UCharsTrie10branchNextEPKDsii(%"class.icu_69::UCharsTrie"* %0, i16* %116, i32 %117, i32 %113)
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %164, label %122

122:                                              ; preds = %119
  %123 = icmp slt i32 %107, 0
  br i1 %123, label %124, label %127

124:                                              ; preds = %122
  %125 = load i16, i16* %108, align 2
  %126 = icmp eq i16 %125, 0
  br i1 %126, label %164, label %132

127:                                              ; preds = %122
  %128 = icmp eq i32 %107, 0
  br i1 %128, label %164, label %129

129:                                              ; preds = %127
  %130 = load i16, i16* %108, align 2
  %131 = add nsw i32 %107, -1
  br label %132

132:                                              ; preds = %124, %129
  %133 = phi i32 [ %107, %124 ], [ %131, %129 ]
  %134 = phi i16 [ %125, %124 ], [ %130, %129 ]
  %135 = icmp eq i32 %120, 2
  br i1 %135, label %136, label %137

136:                                              ; preds = %132
  store i16* null, i16** %28, align 8
  br label %164

137:                                              ; preds = %132
  %138 = getelementptr inbounds i16, i16* %108, i64 1
  %139 = load i16*, i16** %28, align 8
  br label %106

140:                                              ; preds = %115
  %141 = icmp ult i32 %117, 64
  br i1 %141, label %142, label %146

142:                                              ; preds = %140
  %143 = load i16, i16* %116, align 2
  %144 = icmp eq i16 %110, %143
  br i1 %144, label %161, label %145

145:                                              ; preds = %142
  store i16* null, i16** %28, align 8
  br label %164

146:                                              ; preds = %140
  %147 = trunc i32 %117 to i16
  %148 = icmp slt i16 %147, 0
  br i1 %148, label %149, label %150

149:                                              ; preds = %146
  store i16* null, i16** %28, align 8
  br label %164

150:                                              ; preds = %146
  %151 = icmp ugt i32 %117, 16447
  br i1 %151, label %152, label %158

152:                                              ; preds = %150
  %153 = icmp ult i32 %117, 32704
  br i1 %153, label %154, label %156

154:                                              ; preds = %152
  %155 = getelementptr inbounds i16, i16* %116, i64 1
  br label %158

156:                                              ; preds = %152
  %157 = getelementptr inbounds i16, i16* %116, i64 2
  br label %158

158:                                              ; preds = %150, %154, %156
  %159 = phi i16* [ %155, %154 ], [ %157, %156 ], [ %116, %150 ]
  %160 = and i32 %117, 63
  br label %115

161:                                              ; preds = %142
  %162 = getelementptr inbounds i16, i16* %116, i64 1
  %163 = add nsw i32 %117, -49
  br label %34

164:                                              ; preds = %127, %124, %119, %136, %149, %145, %79, %76, %72, %52, %49, %45, %95, %66, %23, %20, %16, %12, %27
  %165 = phi i32 [ 0, %27 ], [ 0, %12 ], [ %26, %23 ], [ 1, %20 ], [ 1, %16 ], [ 0, %149 ], [ 0, %145 ], [ 1, %72 ], [ 1, %76 ], [ %82, %79 ], [ 1, %45 ], [ 1, %49 ], [ %55, %52 ], [ 0, %95 ], [ 0, %66 ], [ 0, %136 ], [ 0, %119 ], [ %120, %124 ], [ %120, %127 ]
  ret i32 %165
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden i16* @_ZN6icu_6910UCharsTrie25findUniqueValueFromBranchEPKDsiaRi(i16*, i32, i8 signext, i32* nocapture dereferenceable(4)) local_unnamed_addr #4 align 2 {
  %5 = icmp sgt i32 %1, 5
  br i1 %5, label %6, label %53

6:                                                ; preds = %4, %50
  %7 = phi i16* [ %51, %50 ], [ %0, %4 ]
  %8 = phi i32 [ %41, %50 ], [ %1, %4 ]
  %9 = getelementptr inbounds i16, i16* %7, i64 1
  %10 = getelementptr inbounds i16, i16* %7, i64 2
  %11 = load i16, i16* %9, align 2
  %12 = zext i16 %11 to i32
  %13 = icmp ugt i16 %11, -1025
  br i1 %13, label %14, label %32

14:                                               ; preds = %6
  %15 = icmp eq i16 %11, -1
  br i1 %15, label %16, label %25

16:                                               ; preds = %14
  %17 = load i16, i16* %10, align 2
  %18 = zext i16 %17 to i32
  %19 = shl nuw i32 %18, 16
  %20 = getelementptr inbounds i16, i16* %7, i64 3
  %21 = load i16, i16* %20, align 2
  %22 = zext i16 %21 to i32
  %23 = or i32 %19, %22
  %24 = getelementptr inbounds i16, i16* %7, i64 4
  br label %32

25:                                               ; preds = %14
  %26 = shl nuw i32 %12, 16
  %27 = add i32 %26, 67108864
  %28 = getelementptr inbounds i16, i16* %7, i64 3
  %29 = load i16, i16* %10, align 2
  %30 = zext i16 %29 to i32
  %31 = or i32 %27, %30
  br label %32

32:                                               ; preds = %6, %16, %25
  %33 = phi i16* [ %24, %16 ], [ %28, %25 ], [ %10, %6 ]
  %34 = phi i32 [ %23, %16 ], [ %31, %25 ], [ %12, %6 ]
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds i16, i16* %33, i64 %35
  %37 = lshr i32 %8, 1
  %38 = tail call i16* @_ZN6icu_6910UCharsTrie25findUniqueValueFromBranchEPKDsiaRi(i16* %36, i32 %37, i8 signext %2, i32* dereferenceable(4) %3)
  %39 = icmp eq i16* %38, null
  br i1 %39, label %105, label %40

40:                                               ; preds = %32
  %41 = sub nsw i32 %8, %37
  %42 = load i16, i16* %9, align 2
  %43 = icmp ugt i16 %42, -1025
  br i1 %43, label %44, label %50

44:                                               ; preds = %40
  %45 = icmp eq i16 %42, -1
  br i1 %45, label %46, label %48

46:                                               ; preds = %44
  %47 = getelementptr inbounds i16, i16* %7, i64 4
  br label %50

48:                                               ; preds = %44
  %49 = getelementptr inbounds i16, i16* %7, i64 3
  br label %50

50:                                               ; preds = %40, %46, %48
  %51 = phi i16* [ %47, %46 ], [ %49, %48 ], [ %10, %40 ]
  %52 = icmp sgt i32 %41, 5
  br i1 %52, label %6, label %53

53:                                               ; preds = %50, %4
  %54 = phi i32 [ %1, %4 ], [ %41, %50 ]
  %55 = phi i16* [ %0, %4 ], [ %51, %50 ]
  br label %56

56:                                               ; preds = %53, %99
  %57 = phi i8 [ %100, %99 ], [ %2, %53 ]
  %58 = phi i32 [ %101, %99 ], [ %54, %53 ]
  %59 = phi i16* [ %86, %99 ], [ %55, %53 ]
  %60 = getelementptr inbounds i16, i16* %59, i64 1
  %61 = getelementptr inbounds i16, i16* %59, i64 2
  %62 = load i16, i16* %60, align 2
  %63 = and i16 %62, 32767
  %64 = zext i16 %63 to i32
  %65 = icmp ult i16 %63, 16384
  br i1 %65, label %84, label %66

66:                                               ; preds = %56
  %67 = icmp eq i16 %63, 32767
  br i1 %67, label %71, label %68

68:                                               ; preds = %66
  %69 = shl nuw nsw i32 %64, 16
  %70 = add nsw i32 %69, -1073741824
  br label %76

71:                                               ; preds = %66
  %72 = load i16, i16* %61, align 2
  %73 = zext i16 %72 to i32
  %74 = shl nuw i32 %73, 16
  %75 = getelementptr inbounds i16, i16* %59, i64 3
  br label %76

76:                                               ; preds = %71, %68
  %77 = phi i16* [ %61, %68 ], [ %75, %71 ]
  %78 = phi i32 [ %70, %68 ], [ %74, %71 ]
  %79 = phi i64 [ 3, %68 ], [ 4, %71 ]
  %80 = load i16, i16* %77, align 2
  %81 = zext i16 %80 to i32
  %82 = or i32 %78, %81
  %83 = getelementptr inbounds i16, i16* %59, i64 %79
  br label %84

84:                                               ; preds = %76, %56
  %85 = phi i32 [ %64, %56 ], [ %82, %76 ]
  %86 = phi i16* [ %61, %56 ], [ %83, %76 ]
  %87 = icmp slt i16 %62, 0
  br i1 %87, label %88, label %94

88:                                               ; preds = %84
  %89 = icmp eq i8 %57, 0
  br i1 %89, label %93, label %90

90:                                               ; preds = %88
  %91 = load i32, i32* %3, align 4
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %99, label %105

93:                                               ; preds = %88
  store i32 %85, i32* %3, align 4
  br label %99

94:                                               ; preds = %84
  %95 = sext i32 %85 to i64
  %96 = getelementptr inbounds i16, i16* %86, i64 %95
  %97 = tail call signext i8 @_ZN6icu_6910UCharsTrie15findUniqueValueEPKDsaRi(i16* %96, i8 signext %57, i32* dereferenceable(4) %3)
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %105, label %99

99:                                               ; preds = %94, %90, %93
  %100 = phi i8 [ %57, %90 ], [ 1, %93 ], [ 1, %94 ]
  %101 = add nsw i32 %58, -1
  %102 = icmp sgt i32 %101, 1
  br i1 %102, label %56, label %103

103:                                              ; preds = %99
  %104 = getelementptr inbounds i16, i16* %86, i64 1
  br label %105

105:                                              ; preds = %32, %94, %90, %103
  %106 = phi i16* [ %104, %103 ], [ null, %90 ], [ null, %94 ], [ null, %32 ]
  ret i16* %106
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden signext i8 @_ZN6icu_6910UCharsTrie15findUniqueValueEPKDsaRi(i16*, i8 signext, i32* nocapture dereferenceable(4)) local_unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds i16, i16* %0, i64 1
  %5 = load i16, i16* %0, align 2
  %6 = zext i16 %5 to i32
  br label %7

7:                                                ; preds = %31, %3
  %8 = phi i16* [ %4, %3 ], [ %32, %31 ]
  %9 = phi i8 [ %1, %3 ], [ %33, %31 ]
  %10 = phi i32 [ %6, %3 ], [ %34, %31 ]
  br label %11

11:                                               ; preds = %7, %37
  %12 = phi i16* [ %41, %37 ], [ %8, %7 ]
  %13 = phi i32 [ %43, %37 ], [ %10, %7 ]
  %14 = icmp ult i32 %13, 48
  br i1 %14, label %15, label %35

15:                                               ; preds = %11
  %16 = icmp eq i32 %13, 0
  br i1 %16, label %17, label %21

17:                                               ; preds = %15
  %18 = getelementptr inbounds i16, i16* %12, i64 1
  %19 = load i16, i16* %12, align 2
  %20 = zext i16 %19 to i32
  br label %21

21:                                               ; preds = %17, %15
  %22 = phi i16* [ %18, %17 ], [ %12, %15 ]
  %23 = phi i32 [ %20, %17 ], [ %13, %15 ]
  %24 = add nuw nsw i32 %23, 1
  %25 = tail call i16* @_ZN6icu_6910UCharsTrie25findUniqueValueFromBranchEPKDsiaRi(i16* %22, i32 %24, i8 signext %9, i32* dereferenceable(4) %2)
  %26 = icmp eq i16* %25, null
  br i1 %26, label %108, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds i16, i16* %25, i64 1
  %29 = load i16, i16* %25, align 2
  %30 = zext i16 %29 to i32
  br label %31

31:                                               ; preds = %27, %105
  %32 = phi i16* [ %106, %105 ], [ %28, %27 ]
  %33 = phi i8 [ %96, %105 ], [ 1, %27 ]
  %34 = phi i32 [ %107, %105 ], [ %30, %27 ]
  br label %7

35:                                               ; preds = %11
  %36 = icmp ult i32 %13, 64
  br i1 %36, label %37, label %44

37:                                               ; preds = %35
  %38 = add nsw i32 %13, -47
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %12, i64 %39
  %41 = getelementptr inbounds i16, i16* %40, i64 1
  %42 = load i16, i16* %40, align 2
  %43 = zext i16 %42 to i32
  br label %11

44:                                               ; preds = %35
  %45 = trunc i32 %13 to i16
  %46 = icmp slt i16 %45, 0
  br i1 %46, label %47, label %66

47:                                               ; preds = %44
  %48 = and i32 %13, 32767
  %49 = icmp ult i32 %48, 16384
  br i1 %49, label %88, label %50

50:                                               ; preds = %47
  %51 = icmp eq i32 %48, 32767
  br i1 %51, label %58, label %52

52:                                               ; preds = %50
  %53 = shl nuw nsw i32 %48, 16
  %54 = add nsw i32 %53, -1073741824
  %55 = load i16, i16* %12, align 2
  %56 = zext i16 %55 to i32
  %57 = or i32 %54, %56
  br label %88

58:                                               ; preds = %50
  %59 = load i16, i16* %12, align 2
  %60 = zext i16 %59 to i32
  %61 = shl nuw i32 %60, 16
  %62 = getelementptr inbounds i16, i16* %12, i64 1
  %63 = load i16, i16* %62, align 2
  %64 = zext i16 %63 to i32
  %65 = or i32 %61, %64
  br label %88

66:                                               ; preds = %44
  %67 = icmp ult i32 %13, 16448
  br i1 %67, label %68, label %71

68:                                               ; preds = %66
  %69 = lshr i32 %13, 6
  %70 = add nsw i32 %69, -1
  br label %88

71:                                               ; preds = %66
  %72 = icmp ult i32 %13, 32704
  br i1 %72, label %73, label %80

73:                                               ; preds = %71
  %74 = shl nuw nsw i32 %13, 10
  %75 = and i32 %74, 33488896
  %76 = add nsw i32 %75, -16842752
  %77 = load i16, i16* %12, align 2
  %78 = zext i16 %77 to i32
  %79 = or i32 %76, %78
  br label %88

80:                                               ; preds = %71
  %81 = load i16, i16* %12, align 2
  %82 = zext i16 %81 to i32
  %83 = shl nuw i32 %82, 16
  %84 = getelementptr inbounds i16, i16* %12, i64 1
  %85 = load i16, i16* %84, align 2
  %86 = zext i16 %85 to i32
  %87 = or i32 %83, %86
  br label %88

88:                                               ; preds = %80, %73, %68, %58, %52, %47
  %89 = phi i32 [ %57, %52 ], [ %65, %58 ], [ %48, %47 ], [ %70, %68 ], [ %79, %73 ], [ %87, %80 ]
  %90 = icmp eq i8 %9, 0
  br i1 %90, label %94, label %91

91:                                               ; preds = %88
  %92 = load i32, i32* %2, align 4
  %93 = icmp eq i32 %89, %92
  br i1 %93, label %95, label %108

94:                                               ; preds = %88
  store i32 %89, i32* %2, align 4
  br label %95

95:                                               ; preds = %91, %94
  %96 = phi i8 [ %9, %91 ], [ 1, %94 ]
  br i1 %46, label %108, label %97

97:                                               ; preds = %95
  %98 = icmp ugt i32 %13, 16447
  br i1 %98, label %99, label %105

99:                                               ; preds = %97
  %100 = icmp ult i32 %13, 32704
  br i1 %100, label %101, label %103

101:                                              ; preds = %99
  %102 = getelementptr inbounds i16, i16* %12, i64 1
  br label %105

103:                                              ; preds = %99
  %104 = getelementptr inbounds i16, i16* %12, i64 2
  br label %105

105:                                              ; preds = %103, %101, %97
  %106 = phi i16* [ %102, %101 ], [ %104, %103 ], [ %12, %97 ]
  %107 = and i32 %13, 63
  br label %31

108:                                              ; preds = %95, %91, %21
  %109 = phi i8 [ 0, %21 ], [ 1, %95 ], [ 0, %91 ]
  ret i8 %109
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK6icu_6910UCharsTrie13getNextUCharsERNS_10AppendableE(%"class.icu_69::UCharsTrie"* nocapture readonly, %"class.icu_69::Appendable"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::UCharsTrie", %"class.icu_69::UCharsTrie"* %0, i64 0, i32 2
  %4 = load i16*, i16** %3, align 8
  %5 = icmp eq i16* %4, null
  br i1 %5, label %61, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.icu_69::UCharsTrie", %"class.icu_69::UCharsTrie"* %0, i64 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = icmp sgt i32 %8, -1
  br i1 %9, label %10, label %17

10:                                               ; preds = %6
  %11 = load i16, i16* %4, align 2
  %12 = bitcast %"class.icu_69::Appendable"* %1 to i8 (%"class.icu_69::Appendable"*, i16)***
  %13 = load i8 (%"class.icu_69::Appendable"*, i16)**, i8 (%"class.icu_69::Appendable"*, i16)*** %12, align 8
  %14 = getelementptr inbounds i8 (%"class.icu_69::Appendable"*, i16)*, i8 (%"class.icu_69::Appendable"*, i16)** %13, i64 3
  %15 = load i8 (%"class.icu_69::Appendable"*, i16)*, i8 (%"class.icu_69::Appendable"*, i16)** %14, align 8
  %16 = tail call signext i8 %15(%"class.icu_69::Appendable"* %1, i16 zeroext %11) #5
  br label %61

17:                                               ; preds = %6
  %18 = getelementptr inbounds i16, i16* %4, i64 1
  %19 = load i16, i16* %4, align 2
  %20 = zext i16 %19 to i32
  %21 = icmp ugt i16 %19, 63
  br i1 %21, label %22, label %35

22:                                               ; preds = %17
  %23 = icmp slt i16 %19, 0
  br i1 %23, label %61, label %24

24:                                               ; preds = %22
  %25 = icmp ugt i16 %19, 16447
  br i1 %25, label %26, label %32

26:                                               ; preds = %24
  %27 = icmp ult i16 %19, 32704
  br i1 %27, label %28, label %30

28:                                               ; preds = %26
  %29 = getelementptr inbounds i16, i16* %4, i64 2
  br label %32

30:                                               ; preds = %26
  %31 = getelementptr inbounds i16, i16* %4, i64 3
  br label %32

32:                                               ; preds = %24, %28, %30
  %33 = phi i16* [ %29, %28 ], [ %31, %30 ], [ %18, %24 ]
  %34 = and i32 %20, 63
  br label %35

35:                                               ; preds = %32, %17
  %36 = phi i16* [ %33, %32 ], [ %18, %17 ]
  %37 = phi i32 [ %34, %32 ], [ %20, %17 ]
  %38 = icmp ult i32 %37, 48
  br i1 %38, label %39, label %54

39:                                               ; preds = %35
  %40 = icmp eq i32 %37, 0
  br i1 %40, label %41, label %45

41:                                               ; preds = %39
  %42 = getelementptr inbounds i16, i16* %36, i64 1
  %43 = load i16, i16* %36, align 2
  %44 = zext i16 %43 to i32
  br label %45

45:                                               ; preds = %41, %39
  %46 = phi i16* [ %42, %41 ], [ %36, %39 ]
  %47 = phi i32 [ %44, %41 ], [ %37, %39 ]
  %48 = add nuw nsw i32 %47, 1
  %49 = bitcast %"class.icu_69::Appendable"* %1 to i8 (%"class.icu_69::Appendable"*, i32)***
  %50 = load i8 (%"class.icu_69::Appendable"*, i32)**, i8 (%"class.icu_69::Appendable"*, i32)*** %49, align 8
  %51 = getelementptr inbounds i8 (%"class.icu_69::Appendable"*, i32)*, i8 (%"class.icu_69::Appendable"*, i32)** %50, i64 6
  %52 = load i8 (%"class.icu_69::Appendable"*, i32)*, i8 (%"class.icu_69::Appendable"*, i32)** %51, align 8
  %53 = tail call signext i8 %52(%"class.icu_69::Appendable"* %1, i32 %48) #5
  tail call void @_ZN6icu_6910UCharsTrie19getNextBranchUCharsEPKDsiRNS_10AppendableE(i16* %46, i32 %48, %"class.icu_69::Appendable"* dereferenceable(8) %1)
  br label %61

54:                                               ; preds = %35
  %55 = load i16, i16* %36, align 2
  %56 = bitcast %"class.icu_69::Appendable"* %1 to i8 (%"class.icu_69::Appendable"*, i16)***
  %57 = load i8 (%"class.icu_69::Appendable"*, i16)**, i8 (%"class.icu_69::Appendable"*, i16)*** %56, align 8
  %58 = getelementptr inbounds i8 (%"class.icu_69::Appendable"*, i16)*, i8 (%"class.icu_69::Appendable"*, i16)** %57, i64 3
  %59 = load i8 (%"class.icu_69::Appendable"*, i16)*, i8 (%"class.icu_69::Appendable"*, i16)** %58, align 8
  %60 = tail call signext i8 %59(%"class.icu_69::Appendable"* %1, i16 zeroext %55) #5
  br label %61

61:                                               ; preds = %45, %54, %22, %2, %10
  %62 = phi i32 [ 1, %10 ], [ 0, %2 ], [ %48, %45 ], [ 1, %54 ], [ 0, %22 ]
  ret i32 %62
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6910UCharsTrie19getNextBranchUCharsEPKDsiRNS_10AppendableE(i16* nocapture readonly, i32, %"class.icu_69::Appendable"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = icmp sgt i32 %1, 5
  br i1 %4, label %9, label %5

5:                                                ; preds = %50, %3
  %6 = phi i32 [ %1, %3 ], [ %41, %50 ]
  %7 = phi i16* [ %0, %3 ], [ %51, %50 ]
  %8 = bitcast %"class.icu_69::Appendable"* %2 to i8 (%"class.icu_69::Appendable"*, i16)***
  br label %53

9:                                                ; preds = %3, %50
  %10 = phi i16* [ %51, %50 ], [ %0, %3 ]
  %11 = phi i32 [ %41, %50 ], [ %1, %3 ]
  %12 = getelementptr inbounds i16, i16* %10, i64 1
  %13 = getelementptr inbounds i16, i16* %10, i64 2
  %14 = load i16, i16* %12, align 2
  %15 = zext i16 %14 to i32
  %16 = icmp ugt i16 %14, -1025
  br i1 %16, label %17, label %35

17:                                               ; preds = %9
  %18 = icmp eq i16 %14, -1
  br i1 %18, label %19, label %28

19:                                               ; preds = %17
  %20 = load i16, i16* %13, align 2
  %21 = zext i16 %20 to i32
  %22 = shl nuw i32 %21, 16
  %23 = getelementptr inbounds i16, i16* %10, i64 3
  %24 = load i16, i16* %23, align 2
  %25 = zext i16 %24 to i32
  %26 = or i32 %22, %25
  %27 = getelementptr inbounds i16, i16* %10, i64 4
  br label %35

28:                                               ; preds = %17
  %29 = shl nuw i32 %15, 16
  %30 = add i32 %29, 67108864
  %31 = getelementptr inbounds i16, i16* %10, i64 3
  %32 = load i16, i16* %13, align 2
  %33 = zext i16 %32 to i32
  %34 = or i32 %30, %33
  br label %35

35:                                               ; preds = %9, %19, %28
  %36 = phi i16* [ %27, %19 ], [ %31, %28 ], [ %13, %9 ]
  %37 = phi i32 [ %26, %19 ], [ %34, %28 ], [ %15, %9 ]
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds i16, i16* %36, i64 %38
  %40 = lshr i32 %11, 1
  tail call void @_ZN6icu_6910UCharsTrie19getNextBranchUCharsEPKDsiRNS_10AppendableE(i16* %39, i32 %40, %"class.icu_69::Appendable"* dereferenceable(8) %2)
  %41 = sub nsw i32 %11, %40
  %42 = load i16, i16* %12, align 2
  %43 = icmp ugt i16 %42, -1025
  br i1 %43, label %44, label %50

44:                                               ; preds = %35
  %45 = icmp eq i16 %42, -1
  br i1 %45, label %46, label %48

46:                                               ; preds = %44
  %47 = getelementptr inbounds i16, i16* %10, i64 4
  br label %50

48:                                               ; preds = %44
  %49 = getelementptr inbounds i16, i16* %10, i64 3
  br label %50

50:                                               ; preds = %35, %46, %48
  %51 = phi i16* [ %47, %46 ], [ %49, %48 ], [ %13, %35 ]
  %52 = icmp sgt i32 %41, 5
  br i1 %52, label %9, label %5

53:                                               ; preds = %5, %72
  %54 = phi i32 [ %74, %72 ], [ %6, %5 ]
  %55 = phi i16* [ %73, %72 ], [ %7, %5 ]
  %56 = getelementptr inbounds i16, i16* %55, i64 1
  %57 = load i16, i16* %55, align 2
  %58 = load i8 (%"class.icu_69::Appendable"*, i16)**, i8 (%"class.icu_69::Appendable"*, i16)*** %8, align 8
  %59 = getelementptr inbounds i8 (%"class.icu_69::Appendable"*, i16)*, i8 (%"class.icu_69::Appendable"*, i16)** %58, i64 3
  %60 = load i8 (%"class.icu_69::Appendable"*, i16)*, i8 (%"class.icu_69::Appendable"*, i16)** %59, align 8
  %61 = tail call signext i8 %60(%"class.icu_69::Appendable"* %2, i16 zeroext %57) #5
  %62 = getelementptr inbounds i16, i16* %55, i64 2
  %63 = load i16, i16* %56, align 2
  %64 = and i16 %63, 32767
  %65 = icmp ugt i16 %64, 16383
  br i1 %65, label %66, label %72

66:                                               ; preds = %53
  %67 = icmp eq i16 %64, 32767
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = getelementptr inbounds i16, i16* %55, i64 3
  br label %72

70:                                               ; preds = %66
  %71 = getelementptr inbounds i16, i16* %55, i64 4
  br label %72

72:                                               ; preds = %53, %68, %70
  %73 = phi i16* [ %69, %68 ], [ %71, %70 ], [ %62, %53 ]
  %74 = add nsw i32 %54, -1
  %75 = icmp sgt i32 %74, 1
  br i1 %75, label %53, label %76

76:                                               ; preds = %72
  %77 = load i16, i16* %73, align 2
  %78 = load i8 (%"class.icu_69::Appendable"*, i16)**, i8 (%"class.icu_69::Appendable"*, i16)*** %8, align 8
  %79 = getelementptr inbounds i8 (%"class.icu_69::Appendable"*, i16)*, i8 (%"class.icu_69::Appendable"*, i16)** %78, i64 3
  %80 = load i8 (%"class.icu_69::Appendable"*, i16)*, i8 (%"class.icu_69::Appendable"*, i16)** %79, align 8
  %81 = tail call signext i8 %80(%"class.icu_69::Appendable"* %2, i16 zeroext %77) #5
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
