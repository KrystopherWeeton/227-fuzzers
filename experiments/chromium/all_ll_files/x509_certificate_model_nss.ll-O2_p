; ModuleID = '../../chrome/common/net/x509_certificate_model_nss.cc'
source_filename = "../../chrome/common/net/x509_certificate_model_nss.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.1 }
%union.anon.1 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%struct.CERTCertificateStr = type { %struct.PLArenaPool*, i8*, i8*, %struct.CERTSignedDataStr, %struct.SECItemStr, %struct.SECItemStr, %struct.SECItemStr, %struct.SECItemStr, %struct.SECItemStr, %struct.SECItemStr, %struct.SECItemStr, %struct.SECAlgorithmIDStr, %struct.CERTNameStr, %struct.CERTValidityStr, %struct.CERTNameStr, %struct.CERTSubjectPublicKeyInfoStr, %struct.SECItemStr, %struct.SECItemStr, %struct.CERTCertExtensionStr**, i8*, %struct.NSSTrustDomainStr*, %struct.SECItemStr, i32, i32, i32, i32, i32, i32, i32, %struct.CERTOKDomainNameStr*, i32, i32, i8*, i8*, %struct.NSSCertificateStr*, %struct.CERTCertTrustStr*, i32, %struct.CERTSubjectListStr*, %struct.CERTAuthKeyIDStr*, i32, %union.anon.0, i32, %struct.PK11SlotInfoStr*, i64, i32, %struct.CERTCertDistrustStr* }
%struct.PLArenaPool = type { %struct.PLArena, %struct.PLArena*, i32, i64 }
%struct.PLArena = type { %struct.PLArena*, i64, i64, i64 }
%struct.CERTSignedDataStr = type { %struct.SECItemStr, %struct.SECAlgorithmIDStr, %struct.SECItemStr }
%struct.SECAlgorithmIDStr = type { %struct.SECItemStr, %struct.SECItemStr }
%struct.CERTValidityStr = type { %struct.PLArenaPool*, %struct.SECItemStr, %struct.SECItemStr }
%struct.CERTNameStr = type { %struct.PLArenaPool*, %struct.CERTRDNStr** }
%struct.CERTRDNStr = type { %struct.CERTAVAStr** }
%struct.CERTAVAStr = type { %struct.SECItemStr, %struct.SECItemStr }
%struct.CERTSubjectPublicKeyInfoStr = type { %struct.PLArenaPool*, %struct.SECAlgorithmIDStr, %struct.SECItemStr }
%struct.CERTCertExtensionStr = type { %struct.SECItemStr, %struct.SECItemStr, %struct.SECItemStr }
%struct.NSSTrustDomainStr = type opaque
%struct.SECItemStr = type { i32, i8*, i32 }
%struct.CERTOKDomainNameStr = type { %struct.CERTOKDomainNameStr*, i8* }
%struct.NSSCertificateStr = type opaque
%struct.CERTCertTrustStr = type { i32, i32, i32 }
%struct.CERTSubjectListStr = type { %struct.PLArenaPool*, i32, i8*, %struct.CERTSubjectNodeStr*, %struct.CERTSubjectNodeStr*, i8* }
%struct.CERTSubjectNodeStr = type { %struct.CERTSubjectNodeStr*, %struct.CERTSubjectNodeStr*, %struct.SECItemStr, %struct.SECItemStr }
%struct.CERTAuthKeyIDStr = type { %struct.SECItemStr, %struct.CERTGeneralNameStr*, %struct.SECItemStr, %struct.SECItemStr** }
%struct.CERTGeneralNameStr = type { i32, %union.anon, %struct.SECItemStr, %struct.PRCListStr }
%union.anon = type { %struct.OtherNameStr }
%struct.OtherNameStr = type { %struct.SECItemStr, %struct.SECItemStr }
%struct.PRCListStr = type { %struct.PRCListStr*, %struct.PRCListStr* }
%union.anon.0 = type { i8* }
%struct.PK11SlotInfoStr = type opaque
%struct.CERTCertDistrustStr = type { %struct.SECItemStr, %struct.SECItemStr }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.2 }
%struct.anon.2 = type { i8 }
%"class.std::__1::allocator" = type { i8 }
%"class.std::__1::basic_string.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.51 }
%union.anon.51 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.52 }
%struct.anon.52 = type { %"struct.std::__1::__padding.53", i8 }
%"struct.std::__1::__padding.53" = type { [1 x i8] }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::basic_string"* }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { %"struct.x509_certificate_model::Extension"*, %"struct.x509_certificate_model::Extension"*, %"class.std::__1::__compressed_pair.11" }
%"struct.x509_certificate_model::Extension" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.x509_certificate_model::Extension"* }
%"class.std::__1::vector.16" = type { %"class.std::__1::__vector_base.17" }
%"class.std::__1::__vector_base.17" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %struct.CERTCertificateStr* }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.std::__1::unique_ptr"* }
%struct.NSSCMSMessageStr = type { %struct.NSSCMSContentInfoStr, %struct.PLArenaPool*, i32, i32, %struct.SECAlgorithmIDStr**, %struct.SECItemStr**, i8*, %struct.PK11SymKeyStr* (i8*, %struct.SECAlgorithmIDStr*)*, i8* }
%struct.NSSCMSContentInfoStr = type { %struct.SECItemStr, %union.NSSCMSContentUnion, %struct.SECOidDataStr*, %struct.SECAlgorithmIDStr, %struct.SECItemStr*, %struct.PK11SymKeyStr*, i32, i32, %struct.NSSCMSContentInfoPrivateStr*, i8* }
%union.NSSCMSContentUnion = type { %struct.SECItemStr* }
%struct.SECOidDataStr = type { %struct.SECItemStr, i32, i8*, i64, i32 }
%struct.PK11SymKeyStr = type opaque
%struct.NSSCMSContentInfoPrivateStr = type opaque
%struct.NSSCMSSignedDataStr = type { %struct.SECItemStr, %struct.SECAlgorithmIDStr**, %struct.NSSCMSContentInfoStr, %struct.SECItemStr**, %struct.CERTSignedCrlStr**, %struct.NSSCMSSignerInfoStr**, %struct.NSSCMSMessageStr*, %struct.SECItemStr**, %struct.CERTCertificateStr**, %struct.CERTCertificateListStr**, %struct.CERTCertificateStr** }
%struct.CERTSignedCrlStr = type { %struct.PLArenaPool*, %struct.CERTCrlStr, i8*, i32, i32, i32, i32, %struct.NSSTrustDomainStr*, %struct.CERTSignedDataStr, i8*, %struct.SECItemStr*, %struct.PK11SlotInfoStr*, i64, i8* }
%struct.CERTCrlStr = type { %struct.PLArenaPool*, %struct.SECItemStr, %struct.SECAlgorithmIDStr, %struct.SECItemStr, %struct.CERTNameStr, %struct.SECItemStr, %struct.SECItemStr, %struct.CERTCrlEntryStr**, %struct.CERTCertExtensionStr** }
%struct.CERTCrlEntryStr = type { %struct.SECItemStr, %struct.SECItemStr, %struct.CERTCertExtensionStr** }
%struct.NSSCMSSignerInfoStr = type { %struct.SECItemStr, %struct.NSSCMSSignerIdentifierStr, %struct.SECAlgorithmIDStr, %struct.NSSCMSAttributeStr**, %struct.SECAlgorithmIDStr, %struct.SECItemStr, %struct.NSSCMSAttributeStr**, %struct.NSSCMSMessageStr*, %struct.CERTCertificateStr*, %struct.CERTCertificateListStr*, i64, i32, %struct.SECKEYPrivateKeyStr*, %struct.SECKEYPublicKeyStr* }
%struct.NSSCMSSignerIdentifierStr = type { i32, %union.anon.34 }
%union.anon.34 = type { %struct.CERTIssuerAndSNStr* }
%struct.CERTIssuerAndSNStr = type { %struct.SECItemStr, %struct.CERTNameStr, %struct.SECItemStr }
%struct.NSSCMSAttributeStr = type { %struct.SECItemStr, %struct.SECItemStr**, %struct.SECOidDataStr*, i32 }
%struct.CERTCertificateListStr = type { %struct.SECItemStr*, i32, %struct.PLArenaPool* }
%struct.SECKEYPrivateKeyStr = type { %struct.PLArenaPool*, i32, %struct.PK11SlotInfoStr*, i64, i32, i8*, i32 }
%struct.SECKEYPublicKeyStr = type { %struct.PLArenaPool*, i32, %struct.PK11SlotInfoStr*, i64, %union.anon.35 }
%union.anon.35 = type { %struct.SECKEYFortezzaPublicKeyStr }
%struct.SECKEYFortezzaPublicKeyStr = type { i32, i32, [8 x i8], %struct.SECItemStr, %struct.SECItemStr, %struct.SECItemStr, %struct.SECItemStr, %struct.SECItemStr, %struct.SECKEYPQGParamsStr, %struct.SECKEYPQGParamsStr }
%struct.SECKEYPQGParamsStr = type { %struct.PLArenaPool*, %struct.SECItemStr, %struct.SECItemStr, %struct.SECItemStr }
%struct.NSSCMSEncoderContextStr = type opaque
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE7reserveEm = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertINS_11__wrap_iterIPKcEEEENS_9_MetaBaseIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr38__libcpp_string_gets_noexcept_iteratorISC_EE5valueEE13_EnableIfImplINS7_IPDsEEEENS7_IPKDsEESC_SC_ = comdat any

$_ZNSt3__16vectorIN22x509_certificate_model9ExtensionENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm = comdat any

@_ZZN22x509_certificate_model29ProcessRawBytesWithSeparatorsEPKhmccE9kHexChars = internal unnamed_addr constant [17 x i8] c"0123456789ABCDEF\00", align 16
@.str.1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22x509_certificate_model21GetCertNameOrNicknameEP18CERTCertificateStr(%"class.std::__1::basic_string"* noalias sret, %struct.CERTCertificateStr*) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca [7 x i8], align 8
  %8 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #12
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %12 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #12
  %13 = getelementptr inbounds %struct.CERTCertificateStr, %struct.CERTCertificateStr* %1, i64 0, i32 14
  %14 = tail call i8* @CERT_GetCommonName(%struct.CERTNameStr* %13) #12
  %15 = getelementptr inbounds [7 x i8], [7 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 7, i8* nonnull %15)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 7, i1 false)
  %16 = icmp eq i8* %14, null
  br i1 %16, label %17, label %22

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %19 = bitcast i64* %18 to i8*
  %20 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 0, i64 16, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* nonnull align 8 %15, i64 7, i1 false)
  %21 = getelementptr inbounds i8, i8* %11, i64 23
  store i8 0, i8* %21, align 1
  br label %48

22:                                               ; preds = %2
  %23 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #12, !noalias !2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 24, i1 false) #12, !noalias !2
  %24 = tail call i64 @strlen(i8* nonnull %14) #12
  %25 = icmp ugt i64 %24, -17
  br i1 %25, label %26, label %28

26:                                               ; preds = %22
  %27 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %27) #13
  unreachable

28:                                               ; preds = %22
  %29 = icmp ult i64 %24, 23
  br i1 %29, label %38, label %30

30:                                               ; preds = %28
  %31 = add nuw i64 %24, 16
  %32 = and i64 %31, -16
  %33 = tail call i8* @_Znwm(i64 %32) #14
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %33, i8** %34, align 8
  %35 = or i64 %32, -9223372036854775808
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %35, i64* %36, align 8
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %24, i64* %37, align 8
  br label %43

38:                                               ; preds = %28
  %39 = trunc i64 %24 to i8
  %40 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  store i8 %39, i8* %41, align 1
  %42 = icmp eq i64 %24, 0
  br i1 %42, label %45, label %43

43:                                               ; preds = %38, %30
  %44 = phi i8* [ %33, %30 ], [ %23, %38 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %44, i8* nonnull align 1 %14, i64 %24, i1 false) #12
  br label %45

45:                                               ; preds = %38, %43
  %46 = phi i8* [ %23, %38 ], [ %44, %43 ]
  %47 = getelementptr inbounds i8, i8* %46, i64 %24
  store i8 0, i8* %47, align 1
  tail call void @PORT_Free(i8* nonnull %14) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* nonnull align 8 %23, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #12, !noalias !2
  br label %48

48:                                               ; preds = %17, %45
  call void @_ZN22x509_certificate_model10ProcessIDNERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %5, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6)
  %49 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %53, label %56

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8
  call void @_ZdlPv(i8* %55) #14
  br label %56

56:                                               ; preds = %53, %48
  call void @llvm.lifetime.end.p0i8(i64 7, i8* nonnull %15)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #12
  %57 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  %59 = load i8, i8* %58, align 1
  %60 = icmp slt i8 %59, 0
  %61 = load i64, i64* %10, align 8
  %62 = zext i8 %59 to i64
  %63 = select i1 %60, i64 %61, i64 %62
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %67, label %65

65:                                               ; preds = %56
  %66 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* nonnull align 8 %8, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #12
  br label %105

67:                                               ; preds = %56
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 24, i1 false) #12, !alias.scope !5
  %70 = getelementptr inbounds %struct.CERTCertificateStr, %struct.CERTCertificateStr* %1, i64 0, i32 32
  %71 = load i8*, i8** %70, align 8, !noalias !5
  %72 = icmp eq i8* %71, null
  br i1 %72, label %105, label %73

73:                                               ; preds = %67
  %74 = load i8, i8* %71, align 1, !noalias !5
  %75 = call i1 @llvm.is.constant.i8(i8 %74) #12
  br i1 %75, label %76, label %89

76:                                               ; preds = %73
  %77 = call i64 @strlen(i8* nonnull %71) #12
  %78 = icmp ult i64 %77, 23
  br i1 %78, label %79, label %87

79:                                               ; preds = %76
  %80 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  %82 = trunc i64 %77 to i8
  store i8 %82, i8* %81, align 1, !alias.scope !5
  %83 = icmp eq i64 %77, 0
  br i1 %83, label %85, label %84

84:                                               ; preds = %79
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %69, i8* nonnull align 1 %71, i64 %77, i1 false) #12
  br label %85

85:                                               ; preds = %84, %79
  %86 = getelementptr inbounds i8, i8* %69, i64 %77
  store i8 0, i8* %86, align 1, !alias.scope !5
  br label %91

87:                                               ; preds = %76
  %88 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* nonnull %71, i64 %77) #12
  br label %91

89:                                               ; preds = %73
  %90 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"* %0, i8* nonnull %71) #12
  br label %91

91:                                               ; preds = %89, %87, %85
  %92 = call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %0, i8 signext 58, i64 0) #12
  %93 = icmp eq i64 %92, -1
  br i1 %93, label %105, label %94

94:                                               ; preds = %91
  %95 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %95) #12, !noalias !5
  %96 = add nuw i64 %92, 1
  %97 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %3, %"class.std::__1::basic_string"* dereferenceable(24) %0, i64 %96, i64 -1, %"class.std::__1::allocator"* dereferenceable(1) %97) #12
  %98 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %99 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %98, i64 0, i32 1, i32 0
  %100 = load i8, i8* %99, align 1, !alias.scope !5
  %101 = icmp slt i8 %100, 0
  br i1 %101, label %102, label %104

102:                                              ; preds = %94
  %103 = load i8*, i8** %68, align 8, !alias.scope !5
  call void @_ZdlPv(i8* %103) #14
  br label %104

104:                                              ; preds = %102, %94
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* nonnull align 8 %95, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %95) #12, !noalias !5
  br label %105

105:                                              ; preds = %104, %91, %67, %65
  %106 = load i8, i8* %58, align 1
  %107 = icmp slt i8 %106, 0
  br i1 %107, label %108, label %110

108:                                              ; preds = %105
  %109 = load i8*, i8** %9, align 8
  call void @_ZdlPv(i8* %109) #14
  br label %110

110:                                              ; preds = %105, %108
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22x509_certificate_model10ProcessIDNERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::basic_string.48", align 8
  %4 = alloca %"class.std::__1::basic_string.48", align 8
  %5 = bitcast %"class.std::__1::basic_string.48"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.std::__1::basic_string.48", %"class.std::__1::basic_string.48"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string.48", %"class.std::__1::basic_string.48"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 24, i1 false) #12
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE7reserveEm(%"class.std::__1::basic_string.48"* nonnull %3, i64 %15)
  %16 = bitcast %"class.std::__1::basic_string.48"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %16, i64 0, i32 1, i32 1
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  %20 = load i16*, i16** %6, align 8
  %21 = load i64, i64* %7, align 8
  %22 = bitcast %"class.std::__1::basic_string.48"* %3 to i16*
  %23 = zext i8 %18 to i64
  %24 = select i1 %19, i16* %20, i16* %22
  %25 = select i1 %19, i64 %21, i64 %23
  %26 = getelementptr inbounds i16, i16* %24, i64 %25
  %27 = load i8, i8* %9, align 1
  %28 = icmp slt i8 %27, 0
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = load i64, i64* %12, align 8
  %32 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %33 = zext i8 %27 to i64
  %34 = select i1 %28, i8* %30, i8* %32
  %35 = select i1 %28, i64 %31, i64 %33
  %36 = getelementptr inbounds i8, i8* %34, i64 %35
  %37 = call i16* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertINS_11__wrap_iterIPKcEEEENS_9_MetaBaseIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr38__libcpp_string_gets_noexcept_iteratorISC_EE5valueEE13_EnableIfImplINS7_IPDsEEEENS7_IPKDsEESC_SC_(%"class.std::__1::basic_string.48"* nonnull %3, i16* %26, i8* %34, i8* %36)
  %38 = bitcast %"class.std::__1::basic_string.48"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #12
  %39 = getelementptr inbounds %"class.std::__1::basic_string.48", %"class.std::__1::basic_string.48"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = getelementptr inbounds %"class.std::__1::basic_string.48", %"class.std::__1::basic_string.48"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %41 = bitcast %"class.std::__1::basic_string.48"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 24, i1 false)
  %42 = load i8, i8* %9, align 1
  %43 = icmp slt i8 %42, 0
  %44 = load i8*, i8** %29, align 8
  %45 = select i1 %43, i8* %44, i8* %32
  %46 = load i64, i64* %12, align 8
  %47 = zext i8 %42 to i64
  %48 = select i1 %43, i64 %46, i64 %47
  call void @_ZN13url_formatter12IDNToUnicodeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.48"* nonnull sret %4, i8* %45, i64 %48) #12
  %49 = load i8, i8* %17, align 1
  %50 = icmp slt i8 %49, 0
  %51 = load i64, i64* %7, align 8
  %52 = zext i8 %49 to i64
  %53 = select i1 %50, i64 %51, i64 %52
  %54 = bitcast %"class.std::__1::basic_string.48"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %54, i64 0, i32 1, i32 1
  %56 = load i8, i8* %55, align 1
  %57 = icmp slt i8 %56, 0
  %58 = load i64, i64* %40, align 8
  %59 = zext i8 %56 to i64
  %60 = select i1 %57, i64 %58, i64 %59
  %61 = icmp eq i64 %53, %60
  br i1 %61, label %62, label %90

62:                                               ; preds = %2
  %63 = icmp eq i64 %53, 0
  br i1 %63, label %82, label %64

64:                                               ; preds = %62
  %65 = load i16*, i16** %39, align 8
  %66 = bitcast %"class.std::__1::basic_string.48"* %4 to i16*
  %67 = select i1 %57, i16* %65, i16* %66
  %68 = load i16*, i16** %6, align 8
  %69 = select i1 %50, i16* %68, i16* %22
  br label %70

70:                                               ; preds = %77, %64
  %71 = phi i64 [ %78, %77 ], [ %53, %64 ]
  %72 = phi i16* [ %80, %77 ], [ %67, %64 ]
  %73 = phi i16* [ %79, %77 ], [ %69, %64 ]
  %74 = load i16, i16* %73, align 2
  %75 = load i16, i16* %72, align 2
  %76 = icmp eq i16 %75, %74
  br i1 %76, label %77, label %90

77:                                               ; preds = %70
  %78 = add i64 %71, -1
  %79 = getelementptr inbounds i16, i16* %73, i64 1
  %80 = getelementptr inbounds i16, i16* %72, i64 1
  %81 = icmp eq i64 %78, 0
  br i1 %81, label %82, label %70

82:                                               ; preds = %77, %62
  %83 = load i8, i8* %9, align 1
  %84 = icmp slt i8 %83, 0
  br i1 %84, label %87, label %85

85:                                               ; preds = %82
  %86 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %86, i8* align 8 %32, i64 24, i1 false) #12
  br label %91

87:                                               ; preds = %82
  %88 = load i8*, i8** %29, align 8
  %89 = load i64, i64* %12, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %88, i64 %89) #12
  br label %91

90:                                               ; preds = %70, %2
  call void @_ZN9l10n_util14GetStringFUTF8EiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_(%"class.std::__1::basic_string"* sret %0, i32 7070, %"class.std::__1::basic_string.48"* nonnull dereferenceable(24) %3, %"class.std::__1::basic_string.48"* nonnull dereferenceable(24) %4) #12
  br label %91

91:                                               ; preds = %87, %85, %90
  %92 = load i8, i8* %55, align 1
  %93 = icmp slt i8 %92, 0
  br i1 %93, label %94, label %97

94:                                               ; preds = %91
  %95 = bitcast %"class.std::__1::basic_string.48"* %4 to i8**
  %96 = load i8*, i8** %95, align 8
  call void @_ZdlPv(i8* %96) #14
  br label %97

97:                                               ; preds = %91, %94
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #12
  %98 = load i8, i8* %17, align 1
  %99 = icmp slt i8 %98, 0
  br i1 %99, label %100, label %103

100:                                              ; preds = %97
  %101 = bitcast %"class.std::__1::basic_string.48"* %3 to i8**
  %102 = load i8*, i8** %101, align 8
  call void @_ZdlPv(i8* %102) #14
  br label %103

103:                                              ; preds = %97, %100
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #12
  ret void
}

declare i8* @CERT_GetCommonName(%struct.CERTNameStr*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22x509_certificate_model10GetVersionEP18CERTCertificateStr(%"class.std::__1::basic_string"* noalias sret, %struct.CERTCertificateStr*) local_unnamed_addr #0 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #12
  store i64 0, i64* %3, align 8
  %5 = getelementptr inbounds %struct.CERTCertificateStr, %struct.CERTCertificateStr* %1, i64 0, i32 9, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %15, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.CERTCertificateStr, %struct.CERTCertificateStr* %1, i64 0, i32 9
  %10 = call i32 @SEC_ASN1DecodeInteger(%struct.SECItemStr* %9, i64* nonnull %3) #12
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %17

12:                                               ; preds = %8
  %13 = load i64, i64* %3, align 8
  %14 = add i64 %13, 1
  br label %15

15:                                               ; preds = %12, %2
  %16 = phi i64 [ %14, %12 ], [ 1, %2 ]
  call void @_ZN4base14NumberToStringEm(%"class.std::__1::basic_string"* sret %0, i64 %16) #12
  br label %19

17:                                               ; preds = %8
  %18 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #12
  br label %19

19:                                               ; preds = %17, %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #12
  ret void
}

declare i32 @SEC_ASN1DecodeInteger(%struct.SECItemStr*, i64*) local_unnamed_addr #2

declare void @_ZN4base14NumberToStringEm(%"class.std::__1::basic_string"* sret, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN22x509_certificate_model7GetTypeEP18CERTCertificateStr(%struct.CERTCertificateStr*) local_unnamed_addr #0 {
  %2 = tail call i32 @_ZN24mozilla_security_manager11GetCertTypeEP18CERTCertificateStr(%struct.CERTCertificateStr* %0) #12
  ret i32 %2
}

declare i32 @_ZN24mozilla_security_manager11GetCertTypeEP18CERTCertificateStr(%struct.CERTCertificateStr*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22x509_certificate_model15GetUsageStringsEP18CERTCertificateStrPNSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEE(%struct.CERTCertificateStr*, %"class.std::__1::vector"*) local_unnamed_addr #0 {
  tail call void @_ZN24mozilla_security_manager19GetCertUsageStringsEP18CERTCertificateStrPNSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEE(%struct.CERTCertificateStr* %0, %"class.std::__1::vector"* %1) #12
  ret void
}

declare void @_ZN24mozilla_security_manager19GetCertUsageStringsEP18CERTCertificateStrPNSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEE(%struct.CERTCertificateStr*, %"class.std::__1::vector"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22x509_certificate_model23GetSerialNumberHexifiedEP18CERTCertificateStrRKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.std::__1::basic_string"* noalias sret, %struct.CERTCertificateStr*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %struct.CERTCertificateStr, %struct.CERTCertificateStr* %1, i64 0, i32 10
  %6 = tail call i8* @CERT_Hexify(%struct.SECItemStr* %5, i32 1) #12
  %7 = icmp eq i8* %6, null
  br i1 %7, label %8, label %21

8:                                                ; preds = %3
  %9 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1, !noalias !8
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %15 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 24, i1 false) #12
  br label %48

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8, !noalias !8
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8, !noalias !8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %18, i64 %20) #12
  br label %48

21:                                               ; preds = %3
  %22 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #12, !noalias !8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 24, i1 false) #12, !noalias !8
  %23 = tail call i64 @strlen(i8* nonnull %6) #12
  %24 = icmp ugt i64 %23, -17
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  %26 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %26) #13
  unreachable

27:                                               ; preds = %21
  %28 = icmp ult i64 %23, 23
  br i1 %28, label %37, label %29

29:                                               ; preds = %27
  %30 = add nuw i64 %23, 16
  %31 = and i64 %30, -16
  %32 = tail call i8* @_Znwm(i64 %31) #14
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %32, i8** %33, align 8
  %34 = or i64 %31, -9223372036854775808
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %34, i64* %35, align 8
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %23, i64* %36, align 8
  br label %42

37:                                               ; preds = %27
  %38 = trunc i64 %23 to i8
  %39 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  store i8 %38, i8* %40, align 1
  %41 = icmp eq i64 %23, 0
  br i1 %41, label %44, label %42

42:                                               ; preds = %37, %29
  %43 = phi i8* [ %32, %29 ], [ %22, %37 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %43, i8* nonnull align 1 %6, i64 %23, i1 false) #12
  br label %44

44:                                               ; preds = %37, %42
  %45 = phi i8* [ %22, %37 ], [ %43, %42 ]
  %46 = getelementptr inbounds i8, i8* %45, i64 %23
  store i8 0, i8* %46, align 1
  tail call void @PORT_Free(i8* nonnull %6) #12
  %47 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* nonnull align 8 %22, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #12, !noalias !8
  br label %48

48:                                               ; preds = %13, %16, %44
  ret void
}

declare i8* @CERT_Hexify(%struct.SECItemStr*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22x509_certificate_model19GetIssuerCommonNameEP18CERTCertificateStrRKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.std::__1::basic_string"* noalias sret, %struct.CERTCertificateStr*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %struct.CERTCertificateStr, %struct.CERTCertificateStr* %1, i64 0, i32 12
  %6 = tail call i8* @CERT_GetCommonName(%struct.CERTNameStr* %5) #12
  %7 = icmp eq i8* %6, null
  br i1 %7, label %8, label %21

8:                                                ; preds = %3
  %9 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1, !noalias !11
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %15 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 24, i1 false) #12
  br label %48

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8, !noalias !11
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8, !noalias !11
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %18, i64 %20) #12
  br label %48

21:                                               ; preds = %3
  %22 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #12, !noalias !11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 24, i1 false) #12, !noalias !11
  %23 = tail call i64 @strlen(i8* nonnull %6) #12
  %24 = icmp ugt i64 %23, -17
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  %26 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %26) #13
  unreachable

27:                                               ; preds = %21
  %28 = icmp ult i64 %23, 23
  br i1 %28, label %37, label %29

29:                                               ; preds = %27
  %30 = add nuw i64 %23, 16
  %31 = and i64 %30, -16
  %32 = tail call i8* @_Znwm(i64 %31) #14
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %32, i8** %33, align 8
  %34 = or i64 %31, -9223372036854775808
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %34, i64* %35, align 8
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %23, i64* %36, align 8
  br label %42

37:                                               ; preds = %27
  %38 = trunc i64 %23 to i8
  %39 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  store i8 %38, i8* %40, align 1
  %41 = icmp eq i64 %23, 0
  br i1 %41, label %44, label %42

42:                                               ; preds = %37, %29
  %43 = phi i8* [ %32, %29 ], [ %22, %37 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %43, i8* nonnull align 1 %6, i64 %23, i1 false) #12
  br label %44

44:                                               ; preds = %37, %42
  %45 = phi i8* [ %22, %37 ], [ %43, %42 ]
  %46 = getelementptr inbounds i8, i8* %45, i64 %23
  store i8 0, i8* %46, align 1
  tail call void @PORT_Free(i8* nonnull %6) #12
  %47 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* nonnull align 8 %22, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #12, !noalias !11
  br label %48

48:                                               ; preds = %13, %16, %44
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22x509_certificate_model16GetIssuerOrgNameEP18CERTCertificateStrRKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.std::__1::basic_string"* noalias sret, %struct.CERTCertificateStr*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %struct.CERTCertificateStr, %struct.CERTCertificateStr* %1, i64 0, i32 12
  %6 = tail call i8* @CERT_GetOrgName(%struct.CERTNameStr* %5) #12
  %7 = icmp eq i8* %6, null
  br i1 %7, label %8, label %21

8:                                                ; preds = %3
  %9 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1, !noalias !14
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %15 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 24, i1 false) #12
  br label %48

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8, !noalias !14
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8, !noalias !14
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %18, i64 %20) #12
  br label %48

21:                                               ; preds = %3
  %22 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #12, !noalias !14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 24, i1 false) #12, !noalias !14
  %23 = tail call i64 @strlen(i8* nonnull %6) #12
  %24 = icmp ugt i64 %23, -17
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  %26 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %26) #13
  unreachable

27:                                               ; preds = %21
  %28 = icmp ult i64 %23, 23
  br i1 %28, label %37, label %29

29:                                               ; preds = %27
  %30 = add nuw i64 %23, 16
  %31 = and i64 %30, -16
  %32 = tail call i8* @_Znwm(i64 %31) #14
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %32, i8** %33, align 8
  %34 = or i64 %31, -9223372036854775808
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %34, i64* %35, align 8
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %23, i64* %36, align 8
  br label %42

37:                                               ; preds = %27
  %38 = trunc i64 %23 to i8
  %39 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  store i8 %38, i8* %40, align 1
  %41 = icmp eq i64 %23, 0
  br i1 %41, label %44, label %42

42:                                               ; preds = %37, %29
  %43 = phi i8* [ %32, %29 ], [ %22, %37 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %43, i8* nonnull align 1 %6, i64 %23, i1 false) #12
  br label %44

44:                                               ; preds = %37, %42
  %45 = phi i8* [ %22, %37 ], [ %43, %42 ]
  %46 = getelementptr inbounds i8, i8* %45, i64 %23
  store i8 0, i8* %46, align 1
  tail call void @PORT_Free(i8* nonnull %6) #12
  %47 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* nonnull align 8 %22, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #12, !noalias !14
  br label %48

48:                                               ; preds = %13, %16, %44
  ret void
}

declare i8* @CERT_GetOrgName(%struct.CERTNameStr*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22x509_certificate_model20GetIssuerOrgUnitNameEP18CERTCertificateStrRKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.std::__1::basic_string"* noalias sret, %struct.CERTCertificateStr*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %struct.CERTCertificateStr, %struct.CERTCertificateStr* %1, i64 0, i32 12
  %6 = tail call i8* @CERT_GetOrgUnitName(%struct.CERTNameStr* %5) #12
  %7 = icmp eq i8* %6, null
  br i1 %7, label %8, label %21

8:                                                ; preds = %3
  %9 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1, !noalias !17
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %15 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 24, i1 false) #12
  br label %48

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8, !noalias !17
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8, !noalias !17
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %18, i64 %20) #12
  br label %48

21:                                               ; preds = %3
  %22 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #12, !noalias !17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 24, i1 false) #12, !noalias !17
  %23 = tail call i64 @strlen(i8* nonnull %6) #12
  %24 = icmp ugt i64 %23, -17
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  %26 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %26) #13
  unreachable

27:                                               ; preds = %21
  %28 = icmp ult i64 %23, 23
  br i1 %28, label %37, label %29

29:                                               ; preds = %27
  %30 = add nuw i64 %23, 16
  %31 = and i64 %30, -16
  %32 = tail call i8* @_Znwm(i64 %31) #14
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %32, i8** %33, align 8
  %34 = or i64 %31, -9223372036854775808
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %34, i64* %35, align 8
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %23, i64* %36, align 8
  br label %42

37:                                               ; preds = %27
  %38 = trunc i64 %23 to i8
  %39 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  store i8 %38, i8* %40, align 1
  %41 = icmp eq i64 %23, 0
  br i1 %41, label %44, label %42

42:                                               ; preds = %37, %29
  %43 = phi i8* [ %32, %29 ], [ %22, %37 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %43, i8* nonnull align 1 %6, i64 %23, i1 false) #12
  br label %44

44:                                               ; preds = %37, %42
  %45 = phi i8* [ %22, %37 ], [ %43, %42 ]
  %46 = getelementptr inbounds i8, i8* %45, i64 %23
  store i8 0, i8* %46, align 1
  tail call void @PORT_Free(i8* nonnull %6) #12
  %47 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* nonnull align 8 %22, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #12, !noalias !17
  br label %48

48:                                               ; preds = %13, %16, %44
  ret void
}

declare i8* @CERT_GetOrgUnitName(%struct.CERTNameStr*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22x509_certificate_model17GetSubjectOrgNameEP18CERTCertificateStrRKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.std::__1::basic_string"* noalias sret, %struct.CERTCertificateStr*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %struct.CERTCertificateStr, %struct.CERTCertificateStr* %1, i64 0, i32 14
  %6 = tail call i8* @CERT_GetOrgName(%struct.CERTNameStr* %5) #12
  %7 = icmp eq i8* %6, null
  br i1 %7, label %8, label %21

8:                                                ; preds = %3
  %9 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1, !noalias !20
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %15 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 24, i1 false) #12
  br label %48

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8, !noalias !20
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8, !noalias !20
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %18, i64 %20) #12
  br label %48

21:                                               ; preds = %3
  %22 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #12, !noalias !20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 24, i1 false) #12, !noalias !20
  %23 = tail call i64 @strlen(i8* nonnull %6) #12
  %24 = icmp ugt i64 %23, -17
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  %26 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %26) #13
  unreachable

27:                                               ; preds = %21
  %28 = icmp ult i64 %23, 23
  br i1 %28, label %37, label %29

29:                                               ; preds = %27
  %30 = add nuw i64 %23, 16
  %31 = and i64 %30, -16
  %32 = tail call i8* @_Znwm(i64 %31) #14
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %32, i8** %33, align 8
  %34 = or i64 %31, -9223372036854775808
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %34, i64* %35, align 8
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %23, i64* %36, align 8
  br label %42

37:                                               ; preds = %27
  %38 = trunc i64 %23 to i8
  %39 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  store i8 %38, i8* %40, align 1
  %41 = icmp eq i64 %23, 0
  br i1 %41, label %44, label %42

42:                                               ; preds = %37, %29
  %43 = phi i8* [ %32, %29 ], [ %22, %37 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %43, i8* nonnull align 1 %6, i64 %23, i1 false) #12
  br label %44

44:                                               ; preds = %37, %42
  %45 = phi i8* [ %22, %37 ], [ %43, %42 ]
  %46 = getelementptr inbounds i8, i8* %45, i64 %23
  store i8 0, i8* %46, align 1
  tail call void @PORT_Free(i8* nonnull %6) #12
  %47 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* nonnull align 8 %22, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #12, !noalias !20
  br label %48

48:                                               ; preds = %13, %16, %44
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22x509_certificate_model21GetSubjectOrgUnitNameEP18CERTCertificateStrRKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.std::__1::basic_string"* noalias sret, %struct.CERTCertificateStr*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %struct.CERTCertificateStr, %struct.CERTCertificateStr* %1, i64 0, i32 14
  %6 = tail call i8* @CERT_GetOrgUnitName(%struct.CERTNameStr* %5) #12
  %7 = icmp eq i8* %6, null
  br i1 %7, label %8, label %21

8:                                                ; preds = %3
  %9 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1, !noalias !23
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %15 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 24, i1 false) #12
  br label %48

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8, !noalias !23
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8, !noalias !23
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %18, i64 %20) #12
  br label %48

21:                                               ; preds = %3
  %22 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #12, !noalias !23
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 24, i1 false) #12, !noalias !23
  %23 = tail call i64 @strlen(i8* nonnull %6) #12
  %24 = icmp ugt i64 %23, -17
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  %26 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %26) #13
  unreachable

27:                                               ; preds = %21
  %28 = icmp ult i64 %23, 23
  br i1 %28, label %37, label %29

29:                                               ; preds = %27
  %30 = add nuw i64 %23, 16
  %31 = and i64 %30, -16
  %32 = tail call i8* @_Znwm(i64 %31) #14
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %32, i8** %33, align 8
  %34 = or i64 %31, -9223372036854775808
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %34, i64* %35, align 8
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %23, i64* %36, align 8
  br label %42

37:                                               ; preds = %27
  %38 = trunc i64 %23 to i8
  %39 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  store i8 %38, i8* %40, align 1
  %41 = icmp eq i64 %23, 0
  br i1 %41, label %44, label %42

42:                                               ; preds = %37, %29
  %43 = phi i8* [ %32, %29 ], [ %22, %37 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %43, i8* nonnull align 1 %6, i64 %23, i1 false) #12
  br label %44

44:                                               ; preds = %37, %42
  %45 = phi i8* [ %22, %37 ], [ %43, %42 ]
  %46 = getelementptr inbounds i8, i8* %45, i64 %23
  store i8 0, i8* %46, align 1
  tail call void @PORT_Free(i8* nonnull %6) #12
  %47 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* nonnull align 8 %22, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #12, !noalias !23
  br label %48

48:                                               ; preds = %13, %16, %44
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22x509_certificate_model20GetSubjectCommonNameEP18CERTCertificateStrRKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.std::__1::basic_string"* noalias sret, %struct.CERTCertificateStr*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %struct.CERTCertificateStr, %struct.CERTCertificateStr* %1, i64 0, i32 14
  %6 = tail call i8* @CERT_GetCommonName(%struct.CERTNameStr* %5) #12
  %7 = icmp eq i8* %6, null
  br i1 %7, label %8, label %21

8:                                                ; preds = %3
  %9 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1, !noalias !26
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %15 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 24, i1 false) #12
  br label %48

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8, !noalias !26
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8, !noalias !26
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %18, i64 %20) #12
  br label %48

21:                                               ; preds = %3
  %22 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #12, !noalias !26
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 24, i1 false) #12, !noalias !26
  %23 = tail call i64 @strlen(i8* nonnull %6) #12
  %24 = icmp ugt i64 %23, -17
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  %26 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %26) #13
  unreachable

27:                                               ; preds = %21
  %28 = icmp ult i64 %23, 23
  br i1 %28, label %37, label %29

29:                                               ; preds = %27
  %30 = add nuw i64 %23, 16
  %31 = and i64 %30, -16
  %32 = tail call i8* @_Znwm(i64 %31) #14
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %32, i8** %33, align 8
  %34 = or i64 %31, -9223372036854775808
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %34, i64* %35, align 8
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %23, i64* %36, align 8
  br label %42

37:                                               ; preds = %27
  %38 = trunc i64 %23 to i8
  %39 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  store i8 %38, i8* %40, align 1
  %41 = icmp eq i64 %23, 0
  br i1 %41, label %44, label %42

42:                                               ; preds = %37, %29
  %43 = phi i8* [ %32, %29 ], [ %22, %37 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %43, i8* nonnull align 1 %6, i64 %23, i1 false) #12
  br label %44

44:                                               ; preds = %37, %42
  %45 = phi i8* [ %22, %37 ], [ %43, %42 ]
  %46 = getelementptr inbounds i8, i8* %45, i64 %23
  store i8 0, i8* %46, align 1
  tail call void @PORT_Free(i8* nonnull %6) #12
  %47 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* nonnull align 8 %22, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #12, !noalias !26
  br label %48

48:                                               ; preds = %13, %16, %44
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN22x509_certificate_model8GetTimesEP18CERTCertificateStrPN4base4TimeES4_(%struct.CERTCertificateStr*, %"class.base::Time"*, %"class.base::Time"*) local_unnamed_addr #0 {
  %4 = tail call zeroext i1 @_ZN3net9x509_util16GetValidityTimesEP18CERTCertificateStrPN4base4TimeES5_(%struct.CERTCertificateStr* %0, %"class.base::Time"* %1, %"class.base::Time"* %2) #12
  ret i1 %4
}

declare zeroext i1 @_ZN3net9x509_util16GetValidityTimesEP18CERTCertificateStrPN4base4TimeES5_(%struct.CERTCertificateStr*, %"class.base::Time"*, %"class.base::Time"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22x509_certificate_model8GetTitleEP18CERTCertificateStr(%"class.std::__1::basic_string"* noalias sret, %struct.CERTCertificateStr*) local_unnamed_addr #0 {
  tail call void @_ZN24mozilla_security_manager12GetCertTitleEP18CERTCertificateStr(%"class.std::__1::basic_string"* sret %0, %struct.CERTCertificateStr* %1) #12
  ret void
}

declare void @_ZN24mozilla_security_manager12GetCertTitleEP18CERTCertificateStr(%"class.std::__1::basic_string"* sret, %struct.CERTCertificateStr*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22x509_certificate_model13GetIssuerNameEP18CERTCertificateStr(%"class.std::__1::basic_string"* noalias sret, %struct.CERTCertificateStr*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.CERTCertificateStr, %struct.CERTCertificateStr* %1, i64 0, i32 12
  tail call void @_ZN24mozilla_security_manager11ProcessNameEP11CERTNameStr(%"class.std::__1::basic_string"* sret %0, %struct.CERTNameStr* %3) #12
  ret void
}

declare void @_ZN24mozilla_security_manager11ProcessNameEP11CERTNameStr(%"class.std::__1::basic_string"* sret, %struct.CERTNameStr*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22x509_certificate_model14GetSubjectNameEP18CERTCertificateStr(%"class.std::__1::basic_string"* noalias sret, %struct.CERTCertificateStr*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.CERTCertificateStr, %struct.CERTCertificateStr* %1, i64 0, i32 14
  tail call void @_ZN24mozilla_security_manager11ProcessNameEP11CERTNameStr(%"class.std::__1::basic_string"* sret %0, %struct.CERTNameStr* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22x509_certificate_model20GetIssuerDisplayNameEP18CERTCertificateStr(%"class.std::__1::basic_string"* noalias sret, %struct.CERTCertificateStr*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.CERTCertificateStr, %struct.CERTCertificateStr* %1, i64 0, i32 12
  tail call void @_ZN3net9x509_util22GetCERTNameDisplayNameEP11CERTNameStr(%"class.std::__1::basic_string"* sret %0, %struct.CERTNameStr* %3) #12
  ret void
}

declare void @_ZN3net9x509_util22GetCERTNameDisplayNameEP11CERTNameStr(%"class.std::__1::basic_string"* sret, %struct.CERTNameStr*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22x509_certificate_model21GetSubjectDisplayNameEP18CERTCertificateStr(%"class.std::__1::basic_string"* noalias sret, %struct.CERTCertificateStr*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.CERTCertificateStr, %struct.CERTCertificateStr* %1, i64 0, i32 14
  tail call void @_ZN3net9x509_util22GetCERTNameDisplayNameEP11CERTNameStr(%"class.std::__1::basic_string"* sret %0, %struct.CERTNameStr* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22x509_certificate_model13GetExtensionsERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_P18CERTCertificateStrPNS0_6vectorINS_9ExtensionENS4_ISC_EEEE(%"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %struct.CERTCertificateStr* nocapture readonly, %"class.std::__1::vector.9"*) local_unnamed_addr #0 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"struct.x509_certificate_model::Extension", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca [15 x i8], align 8
  %11 = getelementptr inbounds %struct.CERTCertificateStr, %struct.CERTCertificateStr* %2, i64 0, i32 18
  %12 = load %struct.CERTCertExtensionStr**, %struct.CERTCertExtensionStr*** %11, align 8
  %13 = icmp eq %struct.CERTCertExtensionStr** %12, null
  br i1 %13, label %191, label %14

14:                                               ; preds = %4
  %15 = load %struct.CERTCertExtensionStr*, %struct.CERTCertExtensionStr** %12, align 8
  %16 = icmp eq %struct.CERTCertExtensionStr* %15, null
  br i1 %16, label %191, label %17

17:                                               ; preds = %14
  %18 = bitcast %"struct.x509_certificate_model::Extension"* %8 to i8*
  %19 = getelementptr inbounds %"struct.x509_certificate_model::Extension", %"struct.x509_certificate_model::Extension"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"struct.x509_certificate_model::Extension", %"struct.x509_certificate_model::Extension"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = getelementptr inbounds %"struct.x509_certificate_model::Extension", %"struct.x509_certificate_model::Extension"* %8, i64 0, i32 1
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds %"struct.x509_certificate_model::Extension", %"struct.x509_certificate_model::Extension"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %25 = bitcast %"struct.x509_certificate_model::Extension"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = getelementptr inbounds [15 x i8], [15 x i8]* %10, i64 0, i64 0
  %28 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %35 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %40 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %44 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  %46 = getelementptr inbounds %"struct.x509_certificate_model::Extension", %"struct.x509_certificate_model::Extension"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = bitcast i8** %46 to i64*
  %48 = bitcast i64* %23 to i8*
  %49 = getelementptr inbounds i8, i8* %18, i64 47
  %50 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %3, i64 0, i32 0, i32 1
  %51 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %52 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  %53 = bitcast %"struct.x509_certificate_model::Extension"** %50 to i64*
  br label %54

54:                                               ; preds = %17, %185
  %55 = phi %struct.CERTCertExtensionStr** [ %12, %17 ], [ %188, %185 ]
  %56 = phi i64 [ 0, %17 ], [ %186, %185 ]
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %18) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 48, i1 false) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #12
  %57 = load %struct.CERTCertExtensionStr*, %struct.CERTCertExtensionStr** %55, align 8
  %58 = getelementptr inbounds %struct.CERTCertExtensionStr, %struct.CERTCertExtensionStr* %57, i64 0, i32 0
  call void @_ZN24mozilla_security_manager10GetOIDTextEP10SECItemStr(%"class.std::__1::basic_string"* nonnull sret %9, %struct.SECItemStr* %58) #12
  %59 = load i8, i8* %26, align 1
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %61, label %63

61:                                               ; preds = %54
  %62 = load i8*, i8** %19, align 8
  call void @_ZdlPv(i8* %62) #14
  br label %63

63:                                               ; preds = %61, %54
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* nonnull align 8 %24, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #12
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %27)
  %64 = load %struct.CERTCertExtensionStr**, %struct.CERTCertExtensionStr*** %11, align 8
  %65 = getelementptr inbounds %struct.CERTCertExtensionStr*, %struct.CERTCertExtensionStr** %64, i64 %56
  %66 = load %struct.CERTCertExtensionStr*, %struct.CERTCertExtensionStr** %65, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #12, !noalias !29
  %67 = getelementptr inbounds %struct.CERTCertExtensionStr, %struct.CERTCertExtensionStr* %66, i64 0, i32 1, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 24, i1 false) #12, !noalias !29
  %68 = load i8*, i8** %67, align 8, !noalias !29
  %69 = icmp eq i8* %68, null
  br i1 %69, label %73, label %70

70:                                               ; preds = %63
  %71 = load i8, i8* %68, align 1, !noalias !29
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %70, %63
  br label %74

74:                                               ; preds = %73, %70
  %75 = phi %"class.std::__1::basic_string"* [ %1, %73 ], [ %0, %70 ]
  %76 = bitcast %"class.std::__1::basic_string"* %75 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %77 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %76, i64 0, i32 1, i32 0
  %78 = load i8, i8* %77, align 1, !noalias !29
  %79 = icmp slt i8 %78, 0
  br i1 %79, label %82, label %80

80:                                               ; preds = %74
  %81 = bitcast %"class.std::__1::basic_string"* %75 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* align 8 %81, i64 24, i1 false) #12, !noalias !29
  br label %87

82:                                               ; preds = %74
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %75, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load i8*, i8** %83, align 8, !noalias !29
  %85 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %75, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %86 = load i64, i64* %85, align 8, !noalias !29
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %5, i8* %84, i64 %86) #12, !noalias !29
  br label %87

87:                                               ; preds = %82, %80
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #12, !noalias !29
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 0, i64 24, i1 false) #12, !alias.scope !32, !noalias !29
  %88 = load i8, i8* %36, align 1, !noalias !35
  %89 = icmp slt i8 %88, 0
  %90 = load i64, i64* %30, align 8, !noalias !29
  %91 = load i8*, i8** %29, align 8, !noalias !29
  %92 = zext i8 %88 to i64
  %93 = select i1 %89, i64 %90, i64 %92
  %94 = select i1 %89, i8* %91, i8* %28
  %95 = add i64 %93, 1
  %96 = icmp ugt i64 %95, -17
  br i1 %96, label %97, label %99

97:                                               ; preds = %87
  %98 = bitcast %"class.std::__1::basic_string"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %98) #13, !noalias !29
  unreachable

99:                                               ; preds = %87
  %100 = icmp ult i64 %95, 23
  br i1 %100, label %106, label %101

101:                                              ; preds = %99
  %102 = add nuw i64 %93, 17
  %103 = and i64 %102, -16
  %104 = call i8* @_Znwm(i64 %103) #14, !noalias !29
  store i8* %104, i8** %32, align 8, !alias.scope !32, !noalias !29
  %105 = or i64 %103, -9223372036854775808
  store i64 %105, i64* %34, align 8, !alias.scope !32, !noalias !29
  store i64 %93, i64* %33, align 8, !alias.scope !32, !noalias !29
  br label %109

106:                                              ; preds = %99
  %107 = trunc i64 %93 to i8
  store i8 %107, i8* %38, align 1, !alias.scope !32, !noalias !29
  %108 = icmp eq i64 %93, 0
  br i1 %108, label %111, label %109

109:                                              ; preds = %106, %101
  %110 = phi i8* [ %104, %101 ], [ %31, %106 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %110, i8* align 1 %94, i64 %93, i1 false) #12, !noalias !29
  br label %111

111:                                              ; preds = %109, %106
  %112 = phi i8* [ %31, %106 ], [ %110, %109 ]
  %113 = getelementptr inbounds i8, i8* %112, i64 %93
  store i8 0, i8* %113, align 1, !noalias !29
  %114 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i64 1) #12, !noalias !29
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #12, !noalias !29
  call void @_ZN24mozilla_security_manager20ProcessExtensionDataEP20CERTCertExtensionStr(%"class.std::__1::basic_string"* nonnull sret %7, %struct.CERTCertExtensionStr* %66) #12, !noalias !29
  %115 = load i8, i8* %41, align 1, !noalias !36
  %116 = icmp slt i8 %115, 0
  %117 = load i8*, i8** %42, align 8, !noalias !36
  %118 = load i64, i64* %43, align 8, !noalias !36
  %119 = zext i8 %115 to i64
  %120 = select i1 %116, i8* %117, i8* %39
  %121 = select i1 %116, i64 %118, i64 %119
  %122 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %6, i8* %120, i64 %121) #12, !noalias !36
  %123 = bitcast %"class.std::__1::basic_string"* %122 to i8*
  %124 = bitcast %"class.std::__1::basic_string"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %122, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %127 = bitcast i64* %126 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %27, i8* align 8 %127, i64 15, i1 false)
  %128 = getelementptr inbounds i8, i8* %123, i64 23
  %129 = load i8, i8* %128, align 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %123, i8 0, i64 24, i1 false) #12, !noalias !36
  %130 = load i8, i8* %41, align 1, !noalias !29
  %131 = icmp slt i8 %130, 0
  br i1 %131, label %132, label %134

132:                                              ; preds = %111
  %133 = load i8*, i8** %42, align 8, !noalias !29
  call void @_ZdlPv(i8* %133) #14, !noalias !29
  br label %134

134:                                              ; preds = %132, %111
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #12, !noalias !29
  %135 = load i8, i8* %38, align 1, !noalias !29
  %136 = icmp slt i8 %135, 0
  br i1 %136, label %137, label %139

137:                                              ; preds = %134
  %138 = load i8*, i8** %32, align 8, !noalias !29
  call void @_ZdlPv(i8* %138) #14, !noalias !29
  br label %139

139:                                              ; preds = %137, %134
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #12, !noalias !29
  %140 = load i8, i8* %36, align 1, !noalias !29
  %141 = icmp slt i8 %140, 0
  br i1 %141, label %142, label %144

142:                                              ; preds = %139
  %143 = load i8*, i8** %29, align 8, !noalias !29
  call void @_ZdlPv(i8* %143) #14, !noalias !29
  br label %144

144:                                              ; preds = %139, %142
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #12, !noalias !29
  %145 = load i8, i8* %45, align 1
  %146 = icmp slt i8 %145, 0
  br i1 %146, label %147, label %149

147:                                              ; preds = %144
  %148 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %148) #14
  br label %149

149:                                              ; preds = %147, %144
  store i64 %125, i64* %47, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* nonnull align 8 %27, i64 15, i1 false)
  store i8 %129, i8* %49, align 1
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %27)
  %150 = load %"struct.x509_certificate_model::Extension"*, %"struct.x509_certificate_model::Extension"** %50, align 8
  %151 = load %"struct.x509_certificate_model::Extension"*, %"struct.x509_certificate_model::Extension"** %51, align 8
  %152 = icmp eq %"struct.x509_certificate_model::Extension"* %150, %151
  br i1 %152, label %174, label %153

153:                                              ; preds = %149
  %154 = load i8, i8* %26, align 1
  %155 = icmp slt i8 %154, 0
  br i1 %155, label %158, label %156

156:                                              ; preds = %153
  %157 = bitcast %"struct.x509_certificate_model::Extension"* %150 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %157, i8* nonnull align 8 %18, i64 24, i1 false) #12
  br label %162

158:                                              ; preds = %153
  %159 = getelementptr inbounds %"struct.x509_certificate_model::Extension", %"struct.x509_certificate_model::Extension"* %150, i64 0, i32 0
  %160 = load i8*, i8** %19, align 8
  %161 = load i64, i64* %20, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %159, i8* %160, i64 %161) #12
  br label %162

162:                                              ; preds = %158, %156
  %163 = getelementptr inbounds %"struct.x509_certificate_model::Extension", %"struct.x509_certificate_model::Extension"* %150, i64 0, i32 1
  %164 = load i8, i8* %45, align 1
  %165 = icmp slt i8 %164, 0
  br i1 %165, label %168, label %166

166:                                              ; preds = %162
  %167 = bitcast %"class.std::__1::basic_string"* %163 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %167, i8* align 8 %52, i64 24, i1 false) #12
  br label %171

168:                                              ; preds = %162
  %169 = load i8*, i8** %22, align 8
  %170 = load i64, i64* %23, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %163, i8* %169, i64 %170) #12
  br label %171

171:                                              ; preds = %168, %166
  %172 = getelementptr inbounds %"struct.x509_certificate_model::Extension", %"struct.x509_certificate_model::Extension"* %150, i64 1
  %173 = ptrtoint %"struct.x509_certificate_model::Extension"* %172 to i64
  store i64 %173, i64* %53, align 8
  br label %175

174:                                              ; preds = %149
  call void @_ZNSt3__16vectorIN22x509_certificate_model9ExtensionENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.9"* %3, %"struct.x509_certificate_model::Extension"* nonnull dereferenceable(48) %8) #12
  br label %175

175:                                              ; preds = %171, %174
  %176 = load i8, i8* %45, align 1
  %177 = icmp slt i8 %176, 0
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %179) #14
  br label %180

180:                                              ; preds = %178, %175
  %181 = load i8, i8* %26, align 1
  %182 = icmp slt i8 %181, 0
  br i1 %182, label %183, label %185

183:                                              ; preds = %180
  %184 = load i8*, i8** %19, align 8
  call void @_ZdlPv(i8* %184) #14
  br label %185

185:                                              ; preds = %180, %183
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %18) #12
  %186 = add i64 %56, 1
  %187 = load %struct.CERTCertExtensionStr**, %struct.CERTCertExtensionStr*** %11, align 8
  %188 = getelementptr inbounds %struct.CERTCertExtensionStr*, %struct.CERTCertExtensionStr** %187, i64 %186
  %189 = load %struct.CERTCertExtensionStr*, %struct.CERTCertExtensionStr** %188, align 8
  %190 = icmp eq %struct.CERTCertExtensionStr* %189, null
  br i1 %190, label %191, label %54

191:                                              ; preds = %185, %14, %4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN24mozilla_security_manager10GetOIDTextEP10SECItemStr(%"class.std::__1::basic_string"* sret, %struct.SECItemStr*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22x509_certificate_model14HashCertSHA256EP18CERTCertificateStr(%"class.std::__1::basic_string"* noalias nocapture sret, %struct.CERTCertificateStr* nocapture readonly) local_unnamed_addr #0 {
  %3 = alloca [64 x i8], align 16
  %4 = getelementptr inbounds [64 x i8], [64 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %4) #12, !noalias !39
  %5 = getelementptr inbounds [64 x i8], [64 x i8]* %3, i64 0, i64 32
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 -86, i64 32, i1 false) #12, !noalias !39
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 0, i64 32, i1 false) #12, !noalias !39
  %6 = getelementptr inbounds %struct.CERTCertificateStr, %struct.CERTCertificateStr* %1, i64 0, i32 4, i32 1
  %7 = load i8*, i8** %6, align 8, !noalias !39
  %8 = getelementptr inbounds %struct.CERTCertificateStr, %struct.CERTCertificateStr* %1, i64 0, i32 4, i32 2
  %9 = load i32, i32* %8, align 8, !noalias !39
  %10 = call i32 @HASH_HashBuf(i32 4, i8* nonnull %4, i8* %7, i32 %9) #12, !noalias !39
  call void @_ZN22x509_certificate_model29ProcessRawBytesWithSeparatorsEPKhmcc(%"class.std::__1::basic_string"* sret %0, i8* nonnull %4, i64 32, i8 signext 32, i8 signext 10) #12
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %4) #12, !noalias !39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22x509_certificate_model12HashCertSHA1EP18CERTCertificateStr(%"class.std::__1::basic_string"* noalias nocapture sret, %struct.CERTCertificateStr* nocapture readonly) local_unnamed_addr #0 {
  %3 = alloca [64 x i8], align 16
  %4 = getelementptr inbounds [64 x i8], [64 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %4) #12, !noalias !42
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 -86, i64 64, i1 false) #12, !noalias !42
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 0, i64 20, i1 false) #12, !noalias !42
  %5 = getelementptr inbounds %struct.CERTCertificateStr, %struct.CERTCertificateStr* %1, i64 0, i32 4, i32 1
  %6 = load i8*, i8** %5, align 8, !noalias !42
  %7 = getelementptr inbounds %struct.CERTCertificateStr, %struct.CERTCertificateStr* %1, i64 0, i32 4, i32 2
  %8 = load i32, i32* %7, align 8, !noalias !42
  %9 = call i32 @HASH_HashBuf(i32 3, i8* nonnull %4, i8* %6, i32 %8) #12, !noalias !42
  call void @_ZN22x509_certificate_model29ProcessRawBytesWithSeparatorsEPKhmcc(%"class.std::__1::basic_string"* sret %0, i8* nonnull %4, i64 20, i8 signext 32, i8 signext 10) #12
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %4) #12, !noalias !42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22x509_certificate_model12GetCMSStringERKNSt3__16vectorINS0_10unique_ptrI18CERTCertificateStrN3net19FreeCERTCertificateEEENS0_9allocatorIS6_EEEEmm(%"class.std::__1::basic_string"* noalias nocapture sret, %"class.std::__1::vector.16"* nocapture readonly dereferenceable(24), i64, i64) local_unnamed_addr #0 {
  %5 = alloca %struct.SECItemStr, align 8
  %6 = tail call %struct.PLArenaPool* @PORT_NewArena(i64 1024) #12
  %7 = tail call %struct.NSSCMSMessageStr* @NSS_CMSMessage_Create(%struct.PLArenaPool* %6) #12
  %8 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %1, i64 0, i32 0, i32 0
  %9 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %9, i64 %2, i32 0, i32 0, i32 0
  %11 = load %struct.CERTCertificateStr*, %struct.CERTCertificateStr** %10, align 8
  %12 = tail call %struct.NSSCMSSignedDataStr* @NSS_CMSSignedData_CreateCertsOnly(%struct.NSSCMSMessageStr* %7, %struct.CERTCertificateStr* %11, i32 0) #12
  %13 = icmp eq %struct.NSSCMSSignedDataStr* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %4
  %15 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 24, i1 false) #12
  br label %71

16:                                               ; preds = %4, %20
  %17 = phi i64 [ %18, %20 ], [ %2, %4 ]
  %18 = add i64 %17, 1
  %19 = icmp ult i64 %18, %3
  br i1 %19, label %20, label %26

20:                                               ; preds = %16
  %21 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %8, align 8
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %21, i64 %18, i32 0, i32 0, i32 0
  %23 = load %struct.CERTCertificateStr*, %struct.CERTCertificateStr** %22, align 8
  %24 = tail call i32 @NSS_CMSSignedData_AddCertificate(%struct.NSSCMSSignedDataStr* nonnull %12, %struct.CERTCertificateStr* %23) #12
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %16, label %68

26:                                               ; preds = %16
  %27 = tail call %struct.NSSCMSContentInfoStr* @NSS_CMSMessage_GetContentInfo(%struct.NSSCMSMessageStr* %7) #12
  %28 = tail call i32 @NSS_CMSContentInfo_SetContent_SignedData(%struct.NSSCMSMessageStr* %7, %struct.NSSCMSContentInfoStr* %27, %struct.NSSCMSSignedDataStr* nonnull %12) #12
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %68

30:                                               ; preds = %26
  %31 = bitcast %struct.SECItemStr* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 0, i64 24, i1 false)
  %32 = call %struct.NSSCMSEncoderContextStr* @NSS_CMSEncoder_Start(%struct.NSSCMSMessageStr* %7, void (i8*, i8*, i64)* null, i8* null, %struct.SECItemStr* nonnull %5, %struct.PLArenaPool* %6, i8* (%struct.PK11SlotInfoStr*, i32, i8*)* null, i8* null, %struct.PK11SymKeyStr* (i8*, %struct.SECAlgorithmIDStr*)* null, i8* null, %struct.SECAlgorithmIDStr** null, %struct.SECItemStr** null) #12
  %33 = icmp eq %struct.NSSCMSEncoderContextStr* %32, null
  br i1 %33, label %34, label %36

34:                                               ; preds = %30
  %35 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 24, i1 false) #12
  br label %67

36:                                               ; preds = %30
  %37 = call i32 @NSS_CMSEncoder_Finish(%struct.NSSCMSEncoderContextStr* nonnull %32) #12
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %41, label %39

39:                                               ; preds = %36
  %40 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 24, i1 false) #12
  br label %67

41:                                               ; preds = %36
  %42 = getelementptr inbounds %struct.SECItemStr, %struct.SECItemStr* %5, i64 0, i32 1
  %43 = load i8*, i8** %42, align 8
  %44 = getelementptr inbounds %struct.SECItemStr, %struct.SECItemStr* %5, i64 0, i32 2
  %45 = load i32, i32* %44, align 8
  %46 = zext i32 %45 to i64
  %47 = icmp ult i32 %45, 23
  br i1 %47, label %56, label %48

48:                                               ; preds = %41
  %49 = add nuw nsw i64 %46, 16
  %50 = and i64 %49, 8589934576
  %51 = call i8* @_Znwm(i64 %50) #14
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %51, i8** %52, align 8
  %53 = or i64 %50, -9223372036854775808
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %53, i64* %54, align 8
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %46, i64* %55, align 8
  br label %62

56:                                               ; preds = %41
  %57 = trunc i32 %45 to i8
  %58 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  store i8 %57, i8* %59, align 1
  %60 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %61 = icmp eq i32 %45, 0
  br i1 %61, label %64, label %62

62:                                               ; preds = %56, %48
  %63 = phi i8* [ %51, %48 ], [ %60, %56 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %63, i8* align 1 %43, i64 %46, i1 false) #12
  br label %64

64:                                               ; preds = %56, %62
  %65 = phi i8* [ %60, %56 ], [ %63, %62 ]
  %66 = getelementptr inbounds i8, i8* %65, i64 %46
  store i8 0, i8* %66, align 1
  br label %67

67:                                               ; preds = %34, %39, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #12
  br label %71

68:                                               ; preds = %20, %26
  %69 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 24, i1 false) #12
  br i1 %13, label %71, label %70

70:                                               ; preds = %68
  tail call void @NSS_CMSSignedData_Destroy(%struct.NSSCMSSignedDataStr* nonnull %12) #12
  br label %71

71:                                               ; preds = %14, %67, %68, %70
  %72 = icmp eq %struct.NSSCMSMessageStr* %7, null
  br i1 %72, label %74, label %73

73:                                               ; preds = %71
  call void @NSS_CMSMessage_Destroy(%struct.NSSCMSMessageStr* nonnull %7) #12
  br label %74

74:                                               ; preds = %71, %73
  %75 = icmp eq %struct.PLArenaPool* %6, null
  br i1 %75, label %77, label %76

76:                                               ; preds = %74
  call void @PORT_FreeArena(%struct.PLArenaPool* nonnull %6, i32 0) #12
  br label %77

77:                                               ; preds = %74, %76
  ret void
}

declare %struct.PLArenaPool* @PORT_NewArena(i64) local_unnamed_addr #2

declare %struct.NSSCMSMessageStr* @NSS_CMSMessage_Create(%struct.PLArenaPool*) local_unnamed_addr #2

declare %struct.NSSCMSSignedDataStr* @NSS_CMSSignedData_CreateCertsOnly(%struct.NSSCMSMessageStr*, %struct.CERTCertificateStr*, i32) local_unnamed_addr #2

declare i32 @NSS_CMSSignedData_AddCertificate(%struct.NSSCMSSignedDataStr*, %struct.CERTCertificateStr*) local_unnamed_addr #2

declare %struct.NSSCMSContentInfoStr* @NSS_CMSMessage_GetContentInfo(%struct.NSSCMSMessageStr*) local_unnamed_addr #2

declare i32 @NSS_CMSContentInfo_SetContent_SignedData(%struct.NSSCMSMessageStr*, %struct.NSSCMSContentInfoStr*, %struct.NSSCMSSignedDataStr*) local_unnamed_addr #2

declare %struct.NSSCMSEncoderContextStr* @NSS_CMSEncoder_Start(%struct.NSSCMSMessageStr*, void (i8*, i8*, i64)*, i8*, %struct.SECItemStr*, %struct.PLArenaPool*, i8* (%struct.PK11SlotInfoStr*, i32, i8*)*, i8*, %struct.PK11SymKeyStr* (i8*, %struct.SECAlgorithmIDStr*)*, i8*, %struct.SECAlgorithmIDStr**, %struct.SECItemStr**) local_unnamed_addr #2

declare i32 @NSS_CMSEncoder_Finish(%struct.NSSCMSEncoderContextStr*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22x509_certificate_model28ProcessSecAlgorithmSignatureEP18CERTCertificateStr(%"class.std::__1::basic_string"* noalias sret, %struct.CERTCertificateStr*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.CERTCertificateStr, %struct.CERTCertificateStr* %1, i64 0, i32 11, i32 0
  tail call void @_ZN24mozilla_security_manager10GetOIDTextEP10SECItemStr(%"class.std::__1::basic_string"* sret %0, %struct.SECItemStr* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22x509_certificate_model35ProcessSecAlgorithmSubjectPublicKeyEP18CERTCertificateStr(%"class.std::__1::basic_string"* noalias sret, %struct.CERTCertificateStr*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.CERTCertificateStr, %struct.CERTCertificateStr* %1, i64 0, i32 15, i32 1, i32 0
  tail call void @_ZN24mozilla_security_manager10GetOIDTextEP10SECItemStr(%"class.std::__1::basic_string"* sret %0, %struct.SECItemStr* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22x509_certificate_model32ProcessSecAlgorithmSignatureWrapEP18CERTCertificateStr(%"class.std::__1::basic_string"* noalias sret, %struct.CERTCertificateStr*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.CERTCertificateStr, %struct.CERTCertificateStr* %1, i64 0, i32 3, i32 1, i32 0
  tail call void @_ZN24mozilla_security_manager10GetOIDTextEP10SECItemStr(%"class.std::__1::basic_string"* sret %0, %struct.SECItemStr* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22x509_certificate_model27ProcessSubjectPublicKeyInfoEP18CERTCertificateStr(%"class.std::__1::basic_string"* noalias sret, %struct.CERTCertificateStr*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.CERTCertificateStr, %struct.CERTCertificateStr* %1, i64 0, i32 15
  tail call void @_ZN24mozilla_security_manager27ProcessSubjectPublicKeyInfoEP27CERTSubjectPublicKeyInfoStr(%"class.std::__1::basic_string"* sret %0, %struct.CERTSubjectPublicKeyInfoStr* %3) #12
  ret void
}

declare void @_ZN24mozilla_security_manager27ProcessSubjectPublicKeyInfoEP27CERTSubjectPublicKeyInfoStr(%"class.std::__1::basic_string"* sret, %struct.CERTSubjectPublicKeyInfoStr*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22x509_certificate_model30ProcessRawSubjectPublicKeyInfoEN4base4spanIKhLm18446744073709551615EEE(%"class.std::__1::basic_string"* noalias sret, i64, i8*) local_unnamed_addr #0 {
  %4 = tail call %struct.CERTSubjectPublicKeyInfoStr* @_ZN6crypto29DecodeSubjectPublicKeyInfoNSSEN4base4spanIKhLm18446744073709551615EEE(i64 %1, i8* %2) #12
  %5 = icmp eq %struct.CERTSubjectPublicKeyInfoStr* %4, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %3
  %7 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #12
  br label %9

8:                                                ; preds = %3
  tail call void @_ZN24mozilla_security_manager27ProcessSubjectPublicKeyInfoEP27CERTSubjectPublicKeyInfoStr(%"class.std::__1::basic_string"* sret %0, %struct.CERTSubjectPublicKeyInfoStr* nonnull %4) #12
  tail call void @SECKEY_DestroySubjectPublicKeyInfo(%struct.CERTSubjectPublicKeyInfoStr* nonnull %4) #12
  br label %9

9:                                                ; preds = %6, %8
  ret void
}

declare %struct.CERTSubjectPublicKeyInfoStr* @_ZN6crypto29DecodeSubjectPublicKeyInfoNSSEN4base4spanIKhLm18446744073709551615EEE(i64, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22x509_certificate_model27ProcessRawBitsSignatureWrapEP18CERTCertificateStr(%"class.std::__1::basic_string"* noalias nocapture sret, %struct.CERTCertificateStr* nocapture readonly) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.CERTCertificateStr, %struct.CERTCertificateStr* %1, i64 0, i32 3, i32 2, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %struct.CERTCertificateStr, %struct.CERTCertificateStr* %1, i64 0, i32 3, i32 2, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = zext i32 %6 to i64
  %8 = add nuw nsw i64 %7, 7
  %9 = lshr i64 %8, 3
  tail call void @_ZN22x509_certificate_model29ProcessRawBytesWithSeparatorsEPKhmcc(%"class.std::__1::basic_string"* sret %0, i8* %4, i64 %9, i8 signext 32, i8 signext 10) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22x509_certificate_model14ProcessRawBitsEPKhm(%"class.std::__1::basic_string"* noalias nocapture sret, i8* nocapture readonly, i64) local_unnamed_addr #0 {
  %4 = add i64 %2, 7
  %5 = lshr i64 %4, 3
  tail call void @_ZN22x509_certificate_model29ProcessRawBytesWithSeparatorsEPKhmcc(%"class.std::__1::basic_string"* sret %0, i8* %1, i64 %5, i8 signext 32, i8 signext 10) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE7reserveEm(%"class.std::__1::basic_string.48"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 9223372036854775791
  br i1 %3, label %4, label %6

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::basic_string.48"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %5) #13
  unreachable

6:                                                ; preds = %2
  %7 = bitcast %"class.std::__1::basic_string.48"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %7, i64 0, i32 1, i32 1
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.std::__1::basic_string.48", %"class.std::__1::basic_string.48"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %16

14:                                               ; preds = %6
  %15 = zext i8 %9 to i64
  br label %16

16:                                               ; preds = %11, %14
  %17 = phi i64 [ %13, %11 ], [ %15, %14 ]
  %18 = icmp ugt i64 %17, %1
  %19 = select i1 %18, i64 %17, i64 %1
  %20 = icmp ult i64 %19, 11
  br i1 %20, label %25, label %21

21:                                               ; preds = %16
  %22 = add i64 %19, 8
  %23 = and i64 %22, -8
  %24 = add i64 %23, -1
  br label %25

25:                                               ; preds = %16, %21
  %26 = phi i64 [ %24, %21 ], [ 10, %16 ]
  br i1 %10, label %27, label %32

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.std::__1::basic_string.48", %"class.std::__1::basic_string.48"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = and i64 %29, 9223372036854775807
  %31 = add nsw i64 %30, -1
  br label %32

32:                                               ; preds = %25, %27
  %33 = phi i64 [ %31, %27 ], [ 10, %25 ]
  %34 = icmp eq i64 %26, %33
  br i1 %34, label %236, label %35

35:                                               ; preds = %32
  br i1 %10, label %36, label %39

36:                                               ; preds = %35
  %37 = getelementptr inbounds %"class.std::__1::basic_string.48", %"class.std::__1::basic_string.48"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  br label %41

39:                                               ; preds = %35
  %40 = zext i8 %9 to i64
  br label %41

41:                                               ; preds = %39, %36
  %42 = phi i64 [ %38, %36 ], [ %40, %39 ]
  %43 = icmp eq i64 %26, 10
  br i1 %43, label %57, label %44

44:                                               ; preds = %41
  %45 = add i64 %26, 1
  %46 = icmp slt i64 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  tail call void @abort() #13
  unreachable

48:                                               ; preds = %44
  %49 = shl i64 %45, 1
  %50 = tail call i8* @_Znwm(i64 %49) #14
  %51 = bitcast i8* %50 to i16*
  br i1 %10, label %52, label %55

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.std::__1::basic_string.48", %"class.std::__1::basic_string.48"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i16*, i16** %53, align 8
  br label %61

55:                                               ; preds = %48
  %56 = bitcast %"class.std::__1::basic_string.48"* %0 to i16*
  br label %67

57:                                               ; preds = %41
  %58 = bitcast %"class.std::__1::basic_string.48"* %0 to i16*
  %59 = getelementptr inbounds %"class.std::__1::basic_string.48", %"class.std::__1::basic_string.48"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i16*, i16** %59, align 8
  br i1 %10, label %61, label %67

61:                                               ; preds = %57, %52
  %62 = phi i1 [ true, %52 ], [ false, %57 ]
  %63 = phi i16* [ %54, %52 ], [ %60, %57 ]
  %64 = phi i16* [ %51, %52 ], [ %58, %57 ]
  %65 = getelementptr inbounds %"class.std::__1::basic_string.48", %"class.std::__1::basic_string.48"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %66 = load i64, i64* %65, align 8
  br label %73

67:                                               ; preds = %57, %55
  %68 = phi i1 [ true, %55 ], [ false, %57 ]
  %69 = phi i1 [ false, %55 ], [ true, %57 ]
  %70 = phi i16* [ %56, %55 ], [ %60, %57 ]
  %71 = phi i16* [ %51, %55 ], [ %58, %57 ]
  %72 = zext i8 %9 to i64
  br label %73

73:                                               ; preds = %67, %61
  %74 = phi i1 [ %62, %61 ], [ %68, %67 ]
  %75 = phi i1 [ true, %61 ], [ %69, %67 ]
  %76 = phi i16* [ %63, %61 ], [ %70, %67 ]
  %77 = phi i16* [ %64, %61 ], [ %71, %67 ]
  %78 = phi i64 [ %66, %61 ], [ %72, %67 ]
  %79 = bitcast i16* %76 to i8*
  %80 = add i64 %78, 1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %225, label %82

82:                                               ; preds = %73
  %83 = icmp ult i64 %80, 16
  br i1 %83, label %172, label %84

84:                                               ; preds = %82
  %85 = getelementptr i16, i16* %77, i64 %80
  %86 = getelementptr i16, i16* %76, i64 %80
  %87 = icmp ult i16* %77, %86
  %88 = icmp ult i16* %76, %85
  %89 = and i1 %87, %88
  br i1 %89, label %172, label %90

90:                                               ; preds = %84
  %91 = and i64 %80, -16
  %92 = sub i64 %80, %91
  %93 = getelementptr i16, i16* %76, i64 %91
  %94 = getelementptr i16, i16* %77, i64 %91
  %95 = add i64 %91, -16
  %96 = lshr exact i64 %95, 4
  %97 = add nuw nsw i64 %96, 1
  %98 = and i64 %97, 3
  %99 = icmp ult i64 %95, 48
  br i1 %99, label %151, label %100

100:                                              ; preds = %90
  %101 = sub nsw i64 %97, %98
  br label %102

102:                                              ; preds = %102, %100
  %103 = phi i64 [ 0, %100 ], [ %148, %102 ]
  %104 = phi i64 [ %101, %100 ], [ %149, %102 ]
  %105 = getelementptr i16, i16* %76, i64 %103
  %106 = getelementptr i16, i16* %77, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !45
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !45
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !48, !noalias !45
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !48, !noalias !45
  %115 = or i64 %103, 16
  %116 = getelementptr i16, i16* %76, i64 %115
  %117 = getelementptr i16, i16* %77, i64 %115
  %118 = bitcast i16* %116 to <8 x i16>*
  %119 = load <8 x i16>, <8 x i16>* %118, align 2, !alias.scope !45
  %120 = getelementptr i16, i16* %116, i64 8
  %121 = bitcast i16* %120 to <8 x i16>*
  %122 = load <8 x i16>, <8 x i16>* %121, align 2, !alias.scope !45
  %123 = bitcast i16* %117 to <8 x i16>*
  store <8 x i16> %119, <8 x i16>* %123, align 2, !alias.scope !48, !noalias !45
  %124 = getelementptr i16, i16* %117, i64 8
  %125 = bitcast i16* %124 to <8 x i16>*
  store <8 x i16> %122, <8 x i16>* %125, align 2, !alias.scope !48, !noalias !45
  %126 = or i64 %103, 32
  %127 = getelementptr i16, i16* %76, i64 %126
  %128 = getelementptr i16, i16* %77, i64 %126
  %129 = bitcast i16* %127 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !45
  %131 = getelementptr i16, i16* %127, i64 8
  %132 = bitcast i16* %131 to <8 x i16>*
  %133 = load <8 x i16>, <8 x i16>* %132, align 2, !alias.scope !45
  %134 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %130, <8 x i16>* %134, align 2, !alias.scope !48, !noalias !45
  %135 = getelementptr i16, i16* %128, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  store <8 x i16> %133, <8 x i16>* %136, align 2, !alias.scope !48, !noalias !45
  %137 = or i64 %103, 48
  %138 = getelementptr i16, i16* %76, i64 %137
  %139 = getelementptr i16, i16* %77, i64 %137
  %140 = bitcast i16* %138 to <8 x i16>*
  %141 = load <8 x i16>, <8 x i16>* %140, align 2, !alias.scope !45
  %142 = getelementptr i16, i16* %138, i64 8
  %143 = bitcast i16* %142 to <8 x i16>*
  %144 = load <8 x i16>, <8 x i16>* %143, align 2, !alias.scope !45
  %145 = bitcast i16* %139 to <8 x i16>*
  store <8 x i16> %141, <8 x i16>* %145, align 2, !alias.scope !48, !noalias !45
  %146 = getelementptr i16, i16* %139, i64 8
  %147 = bitcast i16* %146 to <8 x i16>*
  store <8 x i16> %144, <8 x i16>* %147, align 2, !alias.scope !48, !noalias !45
  %148 = add i64 %103, 64
  %149 = add i64 %104, -4
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %102, !llvm.loop !50

151:                                              ; preds = %102, %90
  %152 = phi i64 [ 0, %90 ], [ %148, %102 ]
  %153 = icmp eq i64 %98, 0
  br i1 %153, label %170, label %154

154:                                              ; preds = %151, %154
  %155 = phi i64 [ %167, %154 ], [ %152, %151 ]
  %156 = phi i64 [ %168, %154 ], [ %98, %151 ]
  %157 = getelementptr i16, i16* %76, i64 %155
  %158 = getelementptr i16, i16* %77, i64 %155
  %159 = bitcast i16* %157 to <8 x i16>*
  %160 = load <8 x i16>, <8 x i16>* %159, align 2, !alias.scope !45
  %161 = getelementptr i16, i16* %157, i64 8
  %162 = bitcast i16* %161 to <8 x i16>*
  %163 = load <8 x i16>, <8 x i16>* %162, align 2, !alias.scope !45
  %164 = bitcast i16* %158 to <8 x i16>*
  store <8 x i16> %160, <8 x i16>* %164, align 2, !alias.scope !48, !noalias !45
  %165 = getelementptr i16, i16* %158, i64 8
  %166 = bitcast i16* %165 to <8 x i16>*
  store <8 x i16> %163, <8 x i16>* %166, align 2, !alias.scope !48, !noalias !45
  %167 = add i64 %155, 16
  %168 = add i64 %156, -1
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %170, label %154, !llvm.loop !52

170:                                              ; preds = %154, %151
  %171 = icmp eq i64 %80, %91
  br i1 %171, label %225, label %172

172:                                              ; preds = %170, %84, %82
  %173 = phi i64 [ %80, %84 ], [ %80, %82 ], [ %92, %170 ]
  %174 = phi i16* [ %76, %84 ], [ %76, %82 ], [ %93, %170 ]
  %175 = phi i16* [ %77, %84 ], [ %77, %82 ], [ %94, %170 ]
  %176 = add i64 %173, -1
  %177 = and i64 %173, 7
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %190, label %179

179:                                              ; preds = %172, %179
  %180 = phi i64 [ %185, %179 ], [ %173, %172 ]
  %181 = phi i16* [ %187, %179 ], [ %174, %172 ]
  %182 = phi i16* [ %186, %179 ], [ %175, %172 ]
  %183 = phi i64 [ %188, %179 ], [ %177, %172 ]
  %184 = load i16, i16* %181, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %180, -1
  %186 = getelementptr inbounds i16, i16* %182, i64 1
  %187 = getelementptr inbounds i16, i16* %181, i64 1
  %188 = add i64 %183, -1
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %190, label %179, !llvm.loop !54

190:                                              ; preds = %179, %172
  %191 = phi i64 [ %173, %172 ], [ %185, %179 ]
  %192 = phi i16* [ %174, %172 ], [ %187, %179 ]
  %193 = phi i16* [ %175, %172 ], [ %186, %179 ]
  %194 = icmp ult i64 %176, 7
  br i1 %194, label %225, label %195

195:                                              ; preds = %190, %195
  %196 = phi i64 [ %221, %195 ], [ %191, %190 ]
  %197 = phi i16* [ %223, %195 ], [ %192, %190 ]
  %198 = phi i16* [ %222, %195 ], [ %193, %190 ]
  %199 = load i16, i16* %197, align 2
  store i16 %199, i16* %198, align 2
  %200 = getelementptr inbounds i16, i16* %198, i64 1
  %201 = getelementptr inbounds i16, i16* %197, i64 1
  %202 = load i16, i16* %201, align 2
  store i16 %202, i16* %200, align 2
  %203 = getelementptr inbounds i16, i16* %198, i64 2
  %204 = getelementptr inbounds i16, i16* %197, i64 2
  %205 = load i16, i16* %204, align 2
  store i16 %205, i16* %203, align 2
  %206 = getelementptr inbounds i16, i16* %198, i64 3
  %207 = getelementptr inbounds i16, i16* %197, i64 3
  %208 = load i16, i16* %207, align 2
  store i16 %208, i16* %206, align 2
  %209 = getelementptr inbounds i16, i16* %198, i64 4
  %210 = getelementptr inbounds i16, i16* %197, i64 4
  %211 = load i16, i16* %210, align 2
  store i16 %211, i16* %209, align 2
  %212 = getelementptr inbounds i16, i16* %198, i64 5
  %213 = getelementptr inbounds i16, i16* %197, i64 5
  %214 = load i16, i16* %213, align 2
  store i16 %214, i16* %212, align 2
  %215 = getelementptr inbounds i16, i16* %198, i64 6
  %216 = getelementptr inbounds i16, i16* %197, i64 6
  %217 = load i16, i16* %216, align 2
  store i16 %217, i16* %215, align 2
  %218 = getelementptr inbounds i16, i16* %198, i64 7
  %219 = getelementptr inbounds i16, i16* %197, i64 7
  %220 = load i16, i16* %219, align 2
  store i16 %220, i16* %218, align 2
  %221 = add i64 %196, -8
  %222 = getelementptr inbounds i16, i16* %198, i64 8
  %223 = getelementptr inbounds i16, i16* %197, i64 8
  %224 = icmp eq i64 %221, 0
  br i1 %224, label %225, label %195, !llvm.loop !55

225:                                              ; preds = %190, %195, %170, %73
  br i1 %75, label %226, label %227

226:                                              ; preds = %225
  tail call void @_ZdlPv(i8* %79) #14
  br label %227

227:                                              ; preds = %226, %225
  br i1 %74, label %228, label %234

228:                                              ; preds = %227
  %229 = add i64 %26, 1
  %230 = or i64 %229, -9223372036854775808
  %231 = getelementptr inbounds %"class.std::__1::basic_string.48", %"class.std::__1::basic_string.48"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %230, i64* %231, align 8
  %232 = getelementptr inbounds %"class.std::__1::basic_string.48", %"class.std::__1::basic_string.48"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %42, i64* %232, align 8
  %233 = getelementptr inbounds %"class.std::__1::basic_string.48", %"class.std::__1::basic_string.48"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i16* %77, i16** %233, align 8
  br label %236

234:                                              ; preds = %227
  %235 = trunc i64 %42 to i8
  store i8 %235, i8* %8, align 1
  br label %236

236:                                              ; preds = %234, %228, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i16* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertINS_11__wrap_iterIPKcEEEENS_9_MetaBaseIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr38__libcpp_string_gets_noexcept_iteratorISC_EE5valueEE13_EnableIfImplINS7_IPDsEEEENS7_IPKDsEESC_SC_(%"class.std::__1::basic_string.48"*, i16*, i8*, i8*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i8* %2 to i64
  %6 = ptrtoint i16* %1 to i64
  %7 = bitcast %"class.std::__1::basic_string.48"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %7, i64 0, i32 1, i32 1
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.std::__1::basic_string.48", %"class.std::__1::basic_string.48"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i16*, i16** %12, align 8
  br label %16

14:                                               ; preds = %4
  %15 = bitcast %"class.std::__1::basic_string.48"* %0 to i16*
  br label %16

16:                                               ; preds = %11, %14
  %17 = phi i16* [ %13, %11 ], [ %15, %14 ]
  %18 = ptrtoint i16* %17 to i64
  %19 = sub i64 %6, %18
  %20 = ashr exact i64 %19, 1
  %21 = ptrtoint i8* %3 to i64
  %22 = sub i64 %21, %5
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %467, label %24

24:                                               ; preds = %16
  br i1 %10, label %27, label %25

25:                                               ; preds = %24
  %26 = zext i8 %9 to i64
  br label %34

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"class.std::__1::basic_string.48", %"class.std::__1::basic_string.48"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::basic_string.48", %"class.std::__1::basic_string.48"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %31 = load i64, i64* %30, align 8
  %32 = and i64 %31, 9223372036854775807
  %33 = add nsw i64 %32, -1
  br label %34

34:                                               ; preds = %25, %27
  %35 = phi i64 [ %29, %27 ], [ %26, %25 ]
  %36 = phi i64 [ %33, %27 ], [ 10, %25 ]
  %37 = sub i64 %36, %35
  %38 = icmp ult i64 %37, %22
  br i1 %38, label %364, label %39

39:                                               ; preds = %34
  br i1 %10, label %40, label %43

40:                                               ; preds = %39
  %41 = getelementptr inbounds %"class.std::__1::basic_string.48", %"class.std::__1::basic_string.48"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i16*, i16** %41, align 8
  br label %45

43:                                               ; preds = %39
  %44 = bitcast %"class.std::__1::basic_string.48"* %0 to i16*
  br label %45

45:                                               ; preds = %40, %43
  %46 = phi i16* [ %42, %40 ], [ %44, %43 ]
  %47 = sub i64 %35, %20
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %369, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds i16, i16* %46, i64 %20
  %51 = getelementptr inbounds i16, i16* %50, i64 %22
  %52 = icmp slt i64 %22, 0
  br i1 %52, label %53, label %198

53:                                               ; preds = %49
  %54 = icmp ult i64 %47, 16
  br i1 %54, label %145, label %55

55:                                               ; preds = %53
  %56 = add i64 %35, %21
  %57 = sub i64 %56, %5
  %58 = getelementptr i16, i16* %46, i64 %57
  %59 = getelementptr i16, i16* %46, i64 %35
  %60 = icmp ult i16* %51, %59
  %61 = icmp ult i16* %50, %58
  %62 = and i1 %60, %61
  br i1 %62, label %145, label %63

63:                                               ; preds = %55
  %64 = and i64 %47, -16
  %65 = sub i64 %47, %64
  %66 = getelementptr i16, i16* %50, i64 %64
  %67 = getelementptr i16, i16* %51, i64 %64
  %68 = add i64 %64, -16
  %69 = lshr exact i64 %68, 4
  %70 = add nuw nsw i64 %69, 1
  %71 = and i64 %70, 3
  %72 = icmp ult i64 %68, 48
  br i1 %72, label %124, label %73

73:                                               ; preds = %63
  %74 = sub nsw i64 %70, %71
  br label %75

75:                                               ; preds = %75, %73
  %76 = phi i64 [ 0, %73 ], [ %121, %75 ]
  %77 = phi i64 [ %74, %73 ], [ %122, %75 ]
  %78 = getelementptr i16, i16* %50, i64 %76
  %79 = getelementptr i16, i16* %51, i64 %76
  %80 = bitcast i16* %78 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !56
  %82 = getelementptr i16, i16* %78, i64 8
  %83 = bitcast i16* %82 to <8 x i16>*
  %84 = load <8 x i16>, <8 x i16>* %83, align 2, !alias.scope !56
  %85 = bitcast i16* %79 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %85, align 2, !alias.scope !59, !noalias !56
  %86 = getelementptr i16, i16* %79, i64 8
  %87 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %84, <8 x i16>* %87, align 2, !alias.scope !59, !noalias !56
  %88 = or i64 %76, 16
  %89 = getelementptr i16, i16* %50, i64 %88
  %90 = getelementptr i16, i16* %51, i64 %88
  %91 = bitcast i16* %89 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !56
  %93 = getelementptr i16, i16* %89, i64 8
  %94 = bitcast i16* %93 to <8 x i16>*
  %95 = load <8 x i16>, <8 x i16>* %94, align 2, !alias.scope !56
  %96 = bitcast i16* %90 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %96, align 2, !alias.scope !59, !noalias !56
  %97 = getelementptr i16, i16* %90, i64 8
  %98 = bitcast i16* %97 to <8 x i16>*
  store <8 x i16> %95, <8 x i16>* %98, align 2, !alias.scope !59, !noalias !56
  %99 = or i64 %76, 32
  %100 = getelementptr i16, i16* %50, i64 %99
  %101 = getelementptr i16, i16* %51, i64 %99
  %102 = bitcast i16* %100 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !56
  %104 = getelementptr i16, i16* %100, i64 8
  %105 = bitcast i16* %104 to <8 x i16>*
  %106 = load <8 x i16>, <8 x i16>* %105, align 2, !alias.scope !56
  %107 = bitcast i16* %101 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %107, align 2, !alias.scope !59, !noalias !56
  %108 = getelementptr i16, i16* %101, i64 8
  %109 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %106, <8 x i16>* %109, align 2, !alias.scope !59, !noalias !56
  %110 = or i64 %76, 48
  %111 = getelementptr i16, i16* %50, i64 %110
  %112 = getelementptr i16, i16* %51, i64 %110
  %113 = bitcast i16* %111 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !56
  %115 = getelementptr i16, i16* %111, i64 8
  %116 = bitcast i16* %115 to <8 x i16>*
  %117 = load <8 x i16>, <8 x i16>* %116, align 2, !alias.scope !56
  %118 = bitcast i16* %112 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %118, align 2, !alias.scope !59, !noalias !56
  %119 = getelementptr i16, i16* %112, i64 8
  %120 = bitcast i16* %119 to <8 x i16>*
  store <8 x i16> %117, <8 x i16>* %120, align 2, !alias.scope !59, !noalias !56
  %121 = add i64 %76, 64
  %122 = add i64 %77, -4
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %124, label %75, !llvm.loop !61

124:                                              ; preds = %75, %63
  %125 = phi i64 [ 0, %63 ], [ %121, %75 ]
  %126 = icmp eq i64 %71, 0
  br i1 %126, label %143, label %127

127:                                              ; preds = %124, %127
  %128 = phi i64 [ %140, %127 ], [ %125, %124 ]
  %129 = phi i64 [ %141, %127 ], [ %71, %124 ]
  %130 = getelementptr i16, i16* %50, i64 %128
  %131 = getelementptr i16, i16* %51, i64 %128
  %132 = bitcast i16* %130 to <8 x i16>*
  %133 = load <8 x i16>, <8 x i16>* %132, align 2, !alias.scope !56
  %134 = getelementptr i16, i16* %130, i64 8
  %135 = bitcast i16* %134 to <8 x i16>*
  %136 = load <8 x i16>, <8 x i16>* %135, align 2, !alias.scope !56
  %137 = bitcast i16* %131 to <8 x i16>*
  store <8 x i16> %133, <8 x i16>* %137, align 2, !alias.scope !59, !noalias !56
  %138 = getelementptr i16, i16* %131, i64 8
  %139 = bitcast i16* %138 to <8 x i16>*
  store <8 x i16> %136, <8 x i16>* %139, align 2, !alias.scope !59, !noalias !56
  %140 = add i64 %128, 16
  %141 = add i64 %129, -1
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %143, label %127, !llvm.loop !62

143:                                              ; preds = %127, %124
  %144 = icmp eq i64 %47, %64
  br i1 %144, label %369, label %145

145:                                              ; preds = %143, %55, %53
  %146 = phi i64 [ %47, %55 ], [ %47, %53 ], [ %65, %143 ]
  %147 = phi i16* [ %50, %55 ], [ %50, %53 ], [ %66, %143 ]
  %148 = phi i16* [ %51, %55 ], [ %51, %53 ], [ %67, %143 ]
  %149 = add i64 %146, -1
  %150 = and i64 %146, 7
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %163, label %152

152:                                              ; preds = %145, %152
  %153 = phi i64 [ %158, %152 ], [ %146, %145 ]
  %154 = phi i16* [ %160, %152 ], [ %147, %145 ]
  %155 = phi i16* [ %159, %152 ], [ %148, %145 ]
  %156 = phi i64 [ %161, %152 ], [ %150, %145 ]
  %157 = load i16, i16* %154, align 2
  store i16 %157, i16* %155, align 2
  %158 = add i64 %153, -1
  %159 = getelementptr inbounds i16, i16* %155, i64 1
  %160 = getelementptr inbounds i16, i16* %154, i64 1
  %161 = add i64 %156, -1
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %152, !llvm.loop !63

163:                                              ; preds = %152, %145
  %164 = phi i64 [ %146, %145 ], [ %158, %152 ]
  %165 = phi i16* [ %147, %145 ], [ %160, %152 ]
  %166 = phi i16* [ %148, %145 ], [ %159, %152 ]
  %167 = icmp ult i64 %149, 7
  br i1 %167, label %369, label %168

168:                                              ; preds = %163, %168
  %169 = phi i64 [ %194, %168 ], [ %164, %163 ]
  %170 = phi i16* [ %196, %168 ], [ %165, %163 ]
  %171 = phi i16* [ %195, %168 ], [ %166, %163 ]
  %172 = load i16, i16* %170, align 2
  store i16 %172, i16* %171, align 2
  %173 = getelementptr inbounds i16, i16* %171, i64 1
  %174 = getelementptr inbounds i16, i16* %170, i64 1
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %171, i64 2
  %177 = getelementptr inbounds i16, i16* %170, i64 2
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %171, i64 3
  %180 = getelementptr inbounds i16, i16* %170, i64 3
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %171, i64 4
  %183 = getelementptr inbounds i16, i16* %170, i64 4
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = getelementptr inbounds i16, i16* %171, i64 5
  %186 = getelementptr inbounds i16, i16* %170, i64 5
  %187 = load i16, i16* %186, align 2
  store i16 %187, i16* %185, align 2
  %188 = getelementptr inbounds i16, i16* %171, i64 6
  %189 = getelementptr inbounds i16, i16* %170, i64 6
  %190 = load i16, i16* %189, align 2
  store i16 %190, i16* %188, align 2
  %191 = getelementptr inbounds i16, i16* %171, i64 7
  %192 = getelementptr inbounds i16, i16* %170, i64 7
  %193 = load i16, i16* %192, align 2
  store i16 %193, i16* %191, align 2
  %194 = add i64 %169, -8
  %195 = getelementptr inbounds i16, i16* %171, i64 8
  %196 = getelementptr inbounds i16, i16* %170, i64 8
  %197 = icmp eq i64 %194, 0
  br i1 %197, label %369, label %168, !llvm.loop !64

198:                                              ; preds = %49
  %199 = getelementptr inbounds i16, i16* %46, i64 %35
  %200 = getelementptr inbounds i16, i16* %51, i64 %47
  %201 = icmp ult i64 %47, 16
  br i1 %201, label %311, label %202

202:                                              ; preds = %198
  %203 = xor i64 %20, -1
  %204 = add i64 %35, %203
  %205 = add i64 %35, %21
  %206 = xor i64 %5, -1
  %207 = add i64 %205, %206
  %208 = getelementptr i16, i16* %46, i64 %207
  %209 = ptrtoint i16* %208 to i64
  %210 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %204, i64 2)
  %211 = extractvalue { i64, i1 } %210, 0
  %212 = extractvalue { i64, i1 } %210, 1
  %213 = icmp ugt i64 %211, %209
  %214 = or i1 %213, %212
  %215 = add i64 %35, -1
  %216 = getelementptr i16, i16* %46, i64 %215
  %217 = ptrtoint i16* %216 to i64
  %218 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %204, i64 2)
  %219 = extractvalue { i64, i1 } %218, 0
  %220 = extractvalue { i64, i1 } %218, 1
  %221 = icmp ugt i64 %219, %217
  %222 = or i1 %221, %220
  %223 = or i1 %214, %222
  br i1 %223, label %311, label %224

224:                                              ; preds = %202
  %225 = add i64 %20, %21
  %226 = sub i64 %225, %5
  %227 = getelementptr i16, i16* %46, i64 %226
  %228 = icmp ult i16* %227, %199
  %229 = icmp ult i16* %50, %200
  %230 = and i1 %228, %229
  br i1 %230, label %311, label %231

231:                                              ; preds = %224
  %232 = and i64 %47, -16
  %233 = sub i64 %47, %232
  %234 = sub i64 0, %232
  %235 = getelementptr i16, i16* %199, i64 %234
  %236 = sub i64 0, %232
  %237 = getelementptr i16, i16* %200, i64 %236
  %238 = add i64 %232, -16
  %239 = lshr exact i64 %238, 4
  %240 = add nuw nsw i64 %239, 1
  %241 = and i64 %240, 1
  %242 = icmp eq i64 %238, 0
  br i1 %242, label %287, label %243

243:                                              ; preds = %231
  %244 = sub nuw nsw i64 %240, %241
  %245 = getelementptr i16, i16* %199, i64 -1
  %246 = getelementptr i16, i16* %200, i64 -1
  %247 = getelementptr i16, i16* %199, i64 -1
  %248 = getelementptr i16, i16* %200, i64 -1
  br label %249

249:                                              ; preds = %249, %243
  %250 = phi i64 [ 0, %243 ], [ %284, %249 ]
  %251 = phi i64 [ %244, %243 ], [ %285, %249 ]
  %252 = sub i64 0, %250
  %253 = sub i64 0, %250
  %254 = getelementptr inbounds i16, i16* %246, i64 %253
  %255 = getelementptr inbounds i16, i16* %245, i64 %252
  %256 = getelementptr inbounds i16, i16* %255, i64 -7
  %257 = bitcast i16* %256 to <8 x i16>*
  %258 = load <8 x i16>, <8 x i16>* %257, align 2, !alias.scope !65
  %259 = getelementptr inbounds i16, i16* %255, i64 -8
  %260 = getelementptr inbounds i16, i16* %259, i64 -7
  %261 = bitcast i16* %260 to <8 x i16>*
  %262 = load <8 x i16>, <8 x i16>* %261, align 2, !alias.scope !65
  %263 = getelementptr inbounds i16, i16* %254, i64 -7
  %264 = bitcast i16* %263 to <8 x i16>*
  store <8 x i16> %258, <8 x i16>* %264, align 2, !alias.scope !68, !noalias !65
  %265 = getelementptr inbounds i16, i16* %254, i64 -8
  %266 = getelementptr inbounds i16, i16* %265, i64 -7
  %267 = bitcast i16* %266 to <8 x i16>*
  store <8 x i16> %262, <8 x i16>* %267, align 2, !alias.scope !68, !noalias !65
  %268 = sub nuw nsw i64 -16, %250
  %269 = sub nuw nsw i64 -16, %250
  %270 = getelementptr inbounds i16, i16* %248, i64 %269
  %271 = getelementptr inbounds i16, i16* %247, i64 %268
  %272 = getelementptr inbounds i16, i16* %271, i64 -7
  %273 = bitcast i16* %272 to <8 x i16>*
  %274 = load <8 x i16>, <8 x i16>* %273, align 2, !alias.scope !65
  %275 = getelementptr inbounds i16, i16* %271, i64 -8
  %276 = getelementptr inbounds i16, i16* %275, i64 -7
  %277 = bitcast i16* %276 to <8 x i16>*
  %278 = load <8 x i16>, <8 x i16>* %277, align 2, !alias.scope !65
  %279 = getelementptr inbounds i16, i16* %270, i64 -7
  %280 = bitcast i16* %279 to <8 x i16>*
  store <8 x i16> %274, <8 x i16>* %280, align 2, !alias.scope !68, !noalias !65
  %281 = getelementptr inbounds i16, i16* %270, i64 -8
  %282 = getelementptr inbounds i16, i16* %281, i64 -7
  %283 = bitcast i16* %282 to <8 x i16>*
  store <8 x i16> %278, <8 x i16>* %283, align 2, !alias.scope !68, !noalias !65
  %284 = add i64 %250, 32
  %285 = add i64 %251, -2
  %286 = icmp eq i64 %285, 0
  br i1 %286, label %287, label %249, !llvm.loop !70

287:                                              ; preds = %249, %231
  %288 = phi i64 [ 0, %231 ], [ %284, %249 ]
  %289 = icmp eq i64 %241, 0
  br i1 %289, label %309, label %290

290:                                              ; preds = %287
  %291 = sub i64 0, %288
  %292 = getelementptr i16, i16* %199, i64 -1
  %293 = sub i64 0, %288
  %294 = getelementptr i16, i16* %200, i64 -1
  %295 = getelementptr inbounds i16, i16* %294, i64 %293
  %296 = getelementptr inbounds i16, i16* %292, i64 %291
  %297 = getelementptr inbounds i16, i16* %296, i64 -7
  %298 = bitcast i16* %297 to <8 x i16>*
  %299 = load <8 x i16>, <8 x i16>* %298, align 2, !alias.scope !65
  %300 = getelementptr inbounds i16, i16* %296, i64 -8
  %301 = getelementptr inbounds i16, i16* %300, i64 -7
  %302 = bitcast i16* %301 to <8 x i16>*
  %303 = load <8 x i16>, <8 x i16>* %302, align 2, !alias.scope !65
  %304 = getelementptr inbounds i16, i16* %295, i64 -7
  %305 = bitcast i16* %304 to <8 x i16>*
  store <8 x i16> %299, <8 x i16>* %305, align 2, !alias.scope !68, !noalias !65
  %306 = getelementptr inbounds i16, i16* %295, i64 -8
  %307 = getelementptr inbounds i16, i16* %306, i64 -7
  %308 = bitcast i16* %307 to <8 x i16>*
  store <8 x i16> %303, <8 x i16>* %308, align 2, !alias.scope !68, !noalias !65
  br label %309

309:                                              ; preds = %287, %290
  %310 = icmp eq i64 %47, %232
  br i1 %310, label %369, label %311

311:                                              ; preds = %309, %224, %202, %198
  %312 = phi i64 [ %47, %224 ], [ %47, %202 ], [ %47, %198 ], [ %233, %309 ]
  %313 = phi i16* [ %199, %224 ], [ %199, %202 ], [ %199, %198 ], [ %235, %309 ]
  %314 = phi i16* [ %200, %224 ], [ %200, %202 ], [ %200, %198 ], [ %237, %309 ]
  %315 = add i64 %312, -1
  %316 = and i64 %312, 7
  %317 = icmp eq i64 %316, 0
  br i1 %317, label %329, label %318

318:                                              ; preds = %311, %318
  %319 = phi i64 [ %326, %318 ], [ %312, %311 ]
  %320 = phi i16* [ %324, %318 ], [ %313, %311 ]
  %321 = phi i16* [ %323, %318 ], [ %314, %311 ]
  %322 = phi i64 [ %327, %318 ], [ %316, %311 ]
  %323 = getelementptr inbounds i16, i16* %321, i64 -1
  %324 = getelementptr inbounds i16, i16* %320, i64 -1
  %325 = load i16, i16* %324, align 2
  store i16 %325, i16* %323, align 2
  %326 = add i64 %319, -1
  %327 = add i64 %322, -1
  %328 = icmp eq i64 %327, 0
  br i1 %328, label %329, label %318, !llvm.loop !71

329:                                              ; preds = %318, %311
  %330 = phi i64 [ %312, %311 ], [ %326, %318 ]
  %331 = phi i16* [ %313, %311 ], [ %324, %318 ]
  %332 = phi i16* [ %314, %311 ], [ %323, %318 ]
  %333 = icmp ult i64 %315, 7
  br i1 %333, label %369, label %334

334:                                              ; preds = %329, %334
  %335 = phi i64 [ %362, %334 ], [ %330, %329 ]
  %336 = phi i16* [ %360, %334 ], [ %331, %329 ]
  %337 = phi i16* [ %359, %334 ], [ %332, %329 ]
  %338 = getelementptr inbounds i16, i16* %337, i64 -1
  %339 = getelementptr inbounds i16, i16* %336, i64 -1
  %340 = load i16, i16* %339, align 2
  store i16 %340, i16* %338, align 2
  %341 = getelementptr inbounds i16, i16* %337, i64 -2
  %342 = getelementptr inbounds i16, i16* %336, i64 -2
  %343 = load i16, i16* %342, align 2
  store i16 %343, i16* %341, align 2
  %344 = getelementptr inbounds i16, i16* %337, i64 -3
  %345 = getelementptr inbounds i16, i16* %336, i64 -3
  %346 = load i16, i16* %345, align 2
  store i16 %346, i16* %344, align 2
  %347 = getelementptr inbounds i16, i16* %337, i64 -4
  %348 = getelementptr inbounds i16, i16* %336, i64 -4
  %349 = load i16, i16* %348, align 2
  store i16 %349, i16* %347, align 2
  %350 = getelementptr inbounds i16, i16* %337, i64 -5
  %351 = getelementptr inbounds i16, i16* %336, i64 -5
  %352 = load i16, i16* %351, align 2
  store i16 %352, i16* %350, align 2
  %353 = getelementptr inbounds i16, i16* %337, i64 -6
  %354 = getelementptr inbounds i16, i16* %336, i64 -6
  %355 = load i16, i16* %354, align 2
  store i16 %355, i16* %353, align 2
  %356 = getelementptr inbounds i16, i16* %337, i64 -7
  %357 = getelementptr inbounds i16, i16* %336, i64 -7
  %358 = load i16, i16* %357, align 2
  store i16 %358, i16* %356, align 2
  %359 = getelementptr inbounds i16, i16* %337, i64 -8
  %360 = getelementptr inbounds i16, i16* %336, i64 -8
  %361 = load i16, i16* %360, align 2
  store i16 %361, i16* %359, align 2
  %362 = add i64 %335, -8
  %363 = icmp eq i64 %362, 0
  br i1 %363, label %369, label %334, !llvm.loop !72

364:                                              ; preds = %34
  %365 = add i64 %35, %22
  %366 = sub i64 %365, %36
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string.48"* %0, i64 %36, i64 %366, i64 %35, i64 %20, i64 0, i64 %22)
  %367 = getelementptr inbounds %"class.std::__1::basic_string.48", %"class.std::__1::basic_string.48"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %368 = load i16*, i16** %367, align 8
  br label %369

369:                                              ; preds = %329, %334, %163, %168, %309, %143, %45, %364
  %370 = phi i16* [ %368, %364 ], [ %46, %45 ], [ %46, %143 ], [ %46, %309 ], [ %46, %168 ], [ %46, %163 ], [ %46, %334 ], [ %46, %329 ]
  %371 = add i64 %35, %22
  %372 = load i8, i8* %8, align 1
  %373 = icmp slt i8 %372, 0
  br i1 %373, label %374, label %376

374:                                              ; preds = %369
  %375 = getelementptr inbounds %"class.std::__1::basic_string.48", %"class.std::__1::basic_string.48"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %371, i64* %375, align 8
  br label %378

376:                                              ; preds = %369
  %377 = trunc i64 %371 to i8
  store i8 %377, i8* %8, align 1
  br label %378

378:                                              ; preds = %374, %376
  %379 = getelementptr inbounds i16, i16* %370, i64 %371
  store i16 0, i16* %379, align 2
  %380 = icmp eq i8* %2, %3
  br i1 %380, label %467, label %381

381:                                              ; preds = %378
  %382 = getelementptr inbounds i16, i16* %370, i64 %20
  %383 = ptrtoint i8* %3 to i64
  %384 = sub i64 %383, %5
  %385 = icmp ult i64 %384, 16
  br i1 %385, label %456, label %386

386:                                              ; preds = %381
  %387 = bitcast i16* %382 to i8*
  %388 = sub i64 %20, %5
  %389 = getelementptr i8, i8* %3, i64 %388
  %390 = ptrtoint i8* %389 to i64
  %391 = getelementptr i16, i16* %370, i64 %390
  %392 = bitcast i16* %391 to i8*
  %393 = icmp ult i8* %387, %3
  %394 = icmp ugt i8* %392, %2
  %395 = and i1 %393, %394
  br i1 %395, label %456, label %396

396:                                              ; preds = %386
  %397 = and i64 %384, -16
  %398 = getelementptr i16, i16* %382, i64 %397
  %399 = getelementptr i8, i8* %2, i64 %397
  %400 = add i64 %397, -16
  %401 = lshr exact i64 %400, 4
  %402 = add nuw nsw i64 %401, 1
  %403 = and i64 %402, 1
  %404 = icmp eq i64 %400, 0
  br i1 %404, label %438, label %405

405:                                              ; preds = %396
  %406 = sub nuw nsw i64 %402, %403
  br label %407

407:                                              ; preds = %407, %405
  %408 = phi i64 [ 0, %405 ], [ %435, %407 ]
  %409 = phi i64 [ %406, %405 ], [ %436, %407 ]
  %410 = getelementptr i16, i16* %382, i64 %408
  %411 = getelementptr i8, i8* %2, i64 %408
  %412 = bitcast i8* %411 to <8 x i8>*
  %413 = load <8 x i8>, <8 x i8>* %412, align 1, !alias.scope !73
  %414 = getelementptr i8, i8* %411, i64 8
  %415 = bitcast i8* %414 to <8 x i8>*
  %416 = load <8 x i8>, <8 x i8>* %415, align 1, !alias.scope !73
  %417 = sext <8 x i8> %413 to <8 x i16>
  %418 = sext <8 x i8> %416 to <8 x i16>
  %419 = bitcast i16* %410 to <8 x i16>*
  store <8 x i16> %417, <8 x i16>* %419, align 2, !alias.scope !76, !noalias !73
  %420 = getelementptr i16, i16* %410, i64 8
  %421 = bitcast i16* %420 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %421, align 2, !alias.scope !76, !noalias !73
  %422 = or i64 %408, 16
  %423 = getelementptr i16, i16* %382, i64 %422
  %424 = getelementptr i8, i8* %2, i64 %422
  %425 = bitcast i8* %424 to <8 x i8>*
  %426 = load <8 x i8>, <8 x i8>* %425, align 1, !alias.scope !73
  %427 = getelementptr i8, i8* %424, i64 8
  %428 = bitcast i8* %427 to <8 x i8>*
  %429 = load <8 x i8>, <8 x i8>* %428, align 1, !alias.scope !73
  %430 = sext <8 x i8> %426 to <8 x i16>
  %431 = sext <8 x i8> %429 to <8 x i16>
  %432 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %430, <8 x i16>* %432, align 2, !alias.scope !76, !noalias !73
  %433 = getelementptr i16, i16* %423, i64 8
  %434 = bitcast i16* %433 to <8 x i16>*
  store <8 x i16> %431, <8 x i16>* %434, align 2, !alias.scope !76, !noalias !73
  %435 = add i64 %408, 32
  %436 = add i64 %409, -2
  %437 = icmp eq i64 %436, 0
  br i1 %437, label %438, label %407, !llvm.loop !78

438:                                              ; preds = %407, %396
  %439 = phi i64 [ 0, %396 ], [ %435, %407 ]
  %440 = icmp eq i64 %403, 0
  br i1 %440, label %454, label %441

441:                                              ; preds = %438
  %442 = getelementptr i16, i16* %382, i64 %439
  %443 = getelementptr i8, i8* %2, i64 %439
  %444 = bitcast i8* %443 to <8 x i8>*
  %445 = load <8 x i8>, <8 x i8>* %444, align 1, !alias.scope !73
  %446 = getelementptr i8, i8* %443, i64 8
  %447 = bitcast i8* %446 to <8 x i8>*
  %448 = load <8 x i8>, <8 x i8>* %447, align 1, !alias.scope !73
  %449 = sext <8 x i8> %445 to <8 x i16>
  %450 = sext <8 x i8> %448 to <8 x i16>
  %451 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %449, <8 x i16>* %451, align 2, !alias.scope !76, !noalias !73
  %452 = getelementptr i16, i16* %442, i64 8
  %453 = bitcast i16* %452 to <8 x i16>*
  store <8 x i16> %450, <8 x i16>* %453, align 2, !alias.scope !76, !noalias !73
  br label %454

454:                                              ; preds = %438, %441
  %455 = icmp eq i64 %384, %397
  br i1 %455, label %467, label %456

456:                                              ; preds = %454, %386, %381
  %457 = phi i16* [ %382, %386 ], [ %382, %381 ], [ %398, %454 ]
  %458 = phi i8* [ %2, %386 ], [ %2, %381 ], [ %399, %454 ]
  br label %459

459:                                              ; preds = %456, %459
  %460 = phi i16* [ %464, %459 ], [ %457, %456 ]
  %461 = phi i8* [ %465, %459 ], [ %458, %456 ]
  %462 = load i8, i8* %461, align 1
  %463 = sext i8 %462 to i16
  store i16 %463, i16* %460, align 2
  %464 = getelementptr inbounds i16, i16* %460, i64 1
  %465 = getelementptr inbounds i8, i8* %461, i64 1
  %466 = icmp eq i8* %465, %3
  br i1 %466, label %467, label %459, !llvm.loop !79

467:                                              ; preds = %459, %454, %378, %16
  %468 = load i8, i8* %8, align 1
  %469 = icmp slt i8 %468, 0
  br i1 %469, label %470, label %473

470:                                              ; preds = %467
  %471 = getelementptr inbounds %"class.std::__1::basic_string.48", %"class.std::__1::basic_string.48"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %472 = load i16*, i16** %471, align 8
  br label %475

473:                                              ; preds = %467
  %474 = bitcast %"class.std::__1::basic_string.48"* %0 to i16*
  br label %475

475:                                              ; preds = %473, %470
  %476 = phi i16* [ %472, %470 ], [ %474, %473 ]
  %477 = getelementptr inbounds i16, i16* %476, i64 %20
  ret i16* %477
}

declare void @_ZN13url_formatter12IDNToUnicodeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.48"* sret, i8*, i64) local_unnamed_addr #2

declare void @_ZN9l10n_util14GetStringFUTF8EiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_(%"class.std::__1::basic_string"* sret, i32, %"class.std::__1::basic_string.48"* dereferenceable(24), %"class.std::__1::basic_string.48"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22x509_certificate_model29ProcessRawBytesWithSeparatorsEPKhmcc(%"class.std::__1::basic_string"* noalias nocapture sret, i8* nocapture readonly, i64, i8 signext, i8 signext) local_unnamed_addr #0 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #12
  %8 = icmp eq i64 %2, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %5
  %10 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #12
  br label %37

11:                                               ; preds = %5
  %12 = mul i64 %2, 3
  %13 = add i64 %12, -1
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(%"class.std::__1::basic_string"* nonnull %6, i64 %13) #12
  br label %16

14:                                               ; preds = %35
  %15 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* nonnull align 8 %7, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #12
  br label %37

16:                                               ; preds = %35, %11
  %17 = phi i64 [ %29, %35 ], [ 0, %11 ]
  %18 = getelementptr inbounds i8, i8* %1, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = lshr i32 %20, 4
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN22x509_certificate_model29ProcessRawBytesWithSeparatorsEPKhmccE9kHexChars, i64 0, i64 %22
  %24 = load i8, i8* %23, align 1
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* nonnull %6, i8 signext %24) #12
  %25 = and i32 %20, 15
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN22x509_certificate_model29ProcessRawBytesWithSeparatorsEPKhmccE9kHexChars, i64 0, i64 %26
  %28 = load i8, i8* %27, align 1
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* nonnull %6, i8 signext %28) #12
  %29 = add nuw i64 %17, 1
  %30 = icmp ult i64 %29, %2
  br i1 %30, label %31, label %35

31:                                               ; preds = %16
  %32 = and i64 %29, 15
  %33 = icmp eq i64 %32, 0
  %34 = select i1 %33, i8 %4, i8 %3
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* nonnull %6, i8 signext %34) #12
  br label %35

35:                                               ; preds = %31, %16
  %36 = icmp eq i64 %29, %2
  br i1 %36, label %14, label %16

37:                                               ; preds = %9, %14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #12
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(%"class.std::__1::basic_string"*, i64) local_unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"*, i8 signext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22x509_certificate_model15ProcessRawBytesEPKhm(%"class.std::__1::basic_string"* noalias nocapture sret, i8* nocapture readonly, i64) local_unnamed_addr #0 {
  tail call void @_ZN22x509_certificate_model29ProcessRawBytesWithSeparatorsEPKhmcc(%"class.std::__1::basic_string"* sret %0, i8* %1, i64 %2, i8 signext 32, i8 signext 10)
  ret void
}

declare void @PORT_Free(i8*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #3

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

; Function Attrs: nounwind
declare i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"*, i8 signext, i64) local_unnamed_addr #7

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i8(i8) #8

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator"* dereferenceable(1)) unnamed_addr #2

declare void @_ZN24mozilla_security_manager20ProcessExtensionDataEP20CERTCertExtensionStr(%"class.std::__1::basic_string"* sret, %struct.CERTCertExtensionStr*) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare i32 @HASH_HashBuf(i32, i8*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN22x509_certificate_model9ExtensionENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.9"*, %"struct.x509_certificate_model::Extension"* dereferenceable(48)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.x509_certificate_model::Extension"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.9"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 48
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 384307168202282325
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.9"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.x509_certificate_model::Extension"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 48
  %20 = icmp ult i64 %19, 192153584101141162
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 384307168202282325, %14 ]
  %28 = mul i64 %27, 48
  %29 = tail call i8* @_Znwm(i64 %28) #14
  %30 = bitcast i8* %29 to %"struct.x509_certificate_model::Extension"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.x509_certificate_model::Extension"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.x509_certificate_model::Extension", %"struct.x509_certificate_model::Extension"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.x509_certificate_model::Extension", %"struct.x509_certificate_model::Extension"* %33, i64 %32
  %36 = ptrtoint %"struct.x509_certificate_model::Extension"* %35 to i64
  %37 = bitcast %"struct.x509_certificate_model::Extension"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %31
  %42 = bitcast %"struct.x509_certificate_model::Extension"* %34 to i8*
  %43 = bitcast %"struct.x509_certificate_model::Extension"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #12
  br label %50

44:                                               ; preds = %31
  %45 = getelementptr inbounds %"struct.x509_certificate_model::Extension", %"struct.x509_certificate_model::Extension"* %34, i64 0, i32 0
  %46 = getelementptr inbounds %"struct.x509_certificate_model::Extension", %"struct.x509_certificate_model::Extension"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds %"struct.x509_certificate_model::Extension", %"struct.x509_certificate_model::Extension"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %45, i8* %47, i64 %49) #12
  br label %50

50:                                               ; preds = %44, %41
  %51 = getelementptr inbounds %"struct.x509_certificate_model::Extension", %"struct.x509_certificate_model::Extension"* %33, i64 %9, i32 1
  %52 = getelementptr inbounds %"struct.x509_certificate_model::Extension", %"struct.x509_certificate_model::Extension"* %1, i64 0, i32 1
  %53 = bitcast %"class.std::__1::basic_string"* %52 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %53, i64 0, i32 1, i32 0
  %55 = load i8, i8* %54, align 1
  %56 = icmp slt i8 %55, 0
  br i1 %56, label %60, label %57

57:                                               ; preds = %50
  %58 = bitcast %"class.std::__1::basic_string"* %51 to i8*
  %59 = bitcast %"class.std::__1::basic_string"* %52 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %59, i64 24, i1 false) #12
  br label %65

60:                                               ; preds = %50
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load i8*, i8** %61, align 8
  %63 = getelementptr inbounds %"struct.x509_certificate_model::Extension", %"struct.x509_certificate_model::Extension"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %64 = load i64, i64* %63, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %51, i8* %62, i64 %64) #12
  br label %65

65:                                               ; preds = %57, %60
  %66 = getelementptr inbounds %"struct.x509_certificate_model::Extension", %"struct.x509_certificate_model::Extension"* %34, i64 1
  %67 = ptrtoint %"struct.x509_certificate_model::Extension"* %66 to i64
  %68 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %0, i64 0, i32 0, i32 0
  %69 = load %"struct.x509_certificate_model::Extension"*, %"struct.x509_certificate_model::Extension"** %68, align 8
  %70 = load %"struct.x509_certificate_model::Extension"*, %"struct.x509_certificate_model::Extension"** %3, align 8
  %71 = icmp eq %"struct.x509_certificate_model::Extension"* %70, %69
  br i1 %71, label %72, label %74

72:                                               ; preds = %65
  %73 = ptrtoint %"struct.x509_certificate_model::Extension"* %69 to i64
  br label %89

74:                                               ; preds = %65, %74
  %75 = phi %"struct.x509_certificate_model::Extension"* [ %77, %74 ], [ %34, %65 ]
  %76 = phi %"struct.x509_certificate_model::Extension"* [ %78, %74 ], [ %70, %65 ]
  %77 = getelementptr inbounds %"struct.x509_certificate_model::Extension", %"struct.x509_certificate_model::Extension"* %75, i64 -1
  %78 = getelementptr inbounds %"struct.x509_certificate_model::Extension", %"struct.x509_certificate_model::Extension"* %76, i64 -1
  %79 = bitcast %"struct.x509_certificate_model::Extension"* %77 to i8*
  %80 = bitcast %"struct.x509_certificate_model::Extension"* %78 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %80, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 24, i1 false) #12
  %81 = getelementptr inbounds %"struct.x509_certificate_model::Extension", %"struct.x509_certificate_model::Extension"* %75, i64 -1, i32 1
  %82 = getelementptr inbounds %"struct.x509_certificate_model::Extension", %"struct.x509_certificate_model::Extension"* %76, i64 -1, i32 1
  %83 = bitcast %"class.std::__1::basic_string"* %81 to i8*
  %84 = bitcast %"class.std::__1::basic_string"* %82 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %83, i8* align 8 %84, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 24, i1 false) #12
  %85 = icmp eq %"struct.x509_certificate_model::Extension"* %78, %69
  br i1 %85, label %86, label %74

86:                                               ; preds = %74
  %87 = load i64, i64* %6, align 8
  %88 = load %"struct.x509_certificate_model::Extension"*, %"struct.x509_certificate_model::Extension"** %3, align 8
  br label %89

89:                                               ; preds = %72, %86
  %90 = phi %"struct.x509_certificate_model::Extension"* [ %69, %72 ], [ %88, %86 ]
  %91 = phi %"struct.x509_certificate_model::Extension"* [ %34, %72 ], [ %77, %86 ]
  %92 = phi i64 [ %73, %72 ], [ %87, %86 ]
  %93 = ptrtoint %"struct.x509_certificate_model::Extension"* %91 to i64
  store i64 %93, i64* %6, align 8
  store i64 %67, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %94 = inttoptr i64 %92 to %"struct.x509_certificate_model::Extension"*
  %95 = icmp eq %"struct.x509_certificate_model::Extension"* %90, %94
  br i1 %95, label %117, label %96

96:                                               ; preds = %89, %115
  %97 = phi %"struct.x509_certificate_model::Extension"* [ %98, %115 ], [ %90, %89 ]
  %98 = getelementptr inbounds %"struct.x509_certificate_model::Extension", %"struct.x509_certificate_model::Extension"* %97, i64 -1
  %99 = getelementptr inbounds %"struct.x509_certificate_model::Extension", %"struct.x509_certificate_model::Extension"* %97, i64 -1, i32 1
  %100 = bitcast %"class.std::__1::basic_string"* %99 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %100, i64 0, i32 1, i32 0
  %102 = load i8, i8* %101, align 1
  %103 = icmp slt i8 %102, 0
  br i1 %103, label %104, label %107

104:                                              ; preds = %96
  %105 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %99, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  tail call void @_ZdlPv(i8* %106) #14
  br label %107

107:                                              ; preds = %104, %96
  %108 = bitcast %"struct.x509_certificate_model::Extension"* %98 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %109 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %108, i64 0, i32 1, i32 0
  %110 = load i8, i8* %109, align 1
  %111 = icmp slt i8 %110, 0
  br i1 %111, label %112, label %115

112:                                              ; preds = %107
  %113 = getelementptr inbounds %"struct.x509_certificate_model::Extension", %"struct.x509_certificate_model::Extension"* %98, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load i8*, i8** %113, align 8
  tail call void @_ZdlPv(i8* %114) #14
  br label %115

115:                                              ; preds = %112, %107
  %116 = icmp eq %"struct.x509_certificate_model::Extension"* %98, %94
  br i1 %116, label %117, label %96

117:                                              ; preds = %115, %89
  %118 = icmp eq i64 %92, 0
  br i1 %118, label %121, label %119

119:                                              ; preds = %117
  %120 = inttoptr i64 %92 to i8*
  tail call void @_ZdlPv(i8* %120) #14
  br label %121

121:                                              ; preds = %117, %119
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #3

declare void @PORT_FreeArena(%struct.PLArenaPool*, i32) local_unnamed_addr #2

declare void @NSS_CMSMessage_Destroy(%struct.NSSCMSMessageStr*) local_unnamed_addr #2

declare void @NSS_CMSSignedData_Destroy(%struct.NSSCMSSignedDataStr*) local_unnamed_addr #2

declare void @SECKEY_DestroySubjectPublicKeyInfo(%struct.CERTSubjectPublicKeyInfoStr*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string.48"*, i64, i64, i64, i64, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %8 = sub i64 9223372036854775791, %1
  %9 = icmp ult i64 %8, %2
  br i1 %9, label %10, label %12

10:                                               ; preds = %7
  %11 = bitcast %"class.std::__1::basic_string.48"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %11) #13
  unreachable

12:                                               ; preds = %7
  %13 = bitcast %"class.std::__1::basic_string.48"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.std::__1::basic_string.48", %"class.std::__1::basic_string.48"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  br label %22

20:                                               ; preds = %12
  %21 = bitcast %"class.std::__1::basic_string.48"* %0 to i16*
  br label %22

22:                                               ; preds = %17, %20
  %23 = phi i16* [ %19, %17 ], [ %21, %20 ]
  %24 = bitcast i16* %23 to i8*
  %25 = icmp ult i64 %1, 4611686018427387879
  br i1 %25, label %26, label %37

26:                                               ; preds = %22
  %27 = add i64 %2, %1
  %28 = shl i64 %1, 1
  %29 = icmp ult i64 %27, %28
  %30 = select i1 %29, i64 %28, i64 %27
  %31 = icmp ult i64 %30, 11
  br i1 %31, label %37, label %32

32:                                               ; preds = %26
  %33 = add i64 %30, 8
  %34 = and i64 %33, -8
  %35 = icmp slt i64 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %32
  tail call void @abort() #13
  unreachable

37:                                               ; preds = %22, %26, %32
  %38 = phi i64 [ %34, %32 ], [ 9223372036854775791, %22 ], [ 11, %26 ]
  %39 = shl i64 %38, 1
  %40 = tail call i8* @_Znwm(i64 %39) #14
  %41 = bitcast i8* %40 to i16*
  %42 = icmp eq i64 %4, 0
  br i1 %42, label %188, label %43

43:                                               ; preds = %37
  %44 = icmp ult i64 %4, 16
  br i1 %44, label %135, label %45

45:                                               ; preds = %43
  %46 = shl i64 %4, 1
  %47 = getelementptr i8, i8* %40, i64 %46
  %48 = getelementptr i16, i16* %23, i64 %4
  %49 = bitcast i16* %48 to i8*
  %50 = icmp ult i8* %40, %49
  %51 = icmp ugt i8* %47, %24
  %52 = and i1 %50, %51
  br i1 %52, label %135, label %53

53:                                               ; preds = %45
  %54 = and i64 %4, -16
  %55 = sub i64 %4, %54
  %56 = getelementptr i16, i16* %23, i64 %54
  %57 = getelementptr i16, i16* %41, i64 %54
  %58 = add i64 %54, -16
  %59 = lshr exact i64 %58, 4
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 3
  %62 = icmp ult i64 %58, 48
  br i1 %62, label %114, label %63

63:                                               ; preds = %53
  %64 = sub nsw i64 %60, %61
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ 0, %63 ], [ %111, %65 ]
  %67 = phi i64 [ %64, %63 ], [ %112, %65 ]
  %68 = getelementptr i16, i16* %23, i64 %66
  %69 = getelementptr i16, i16* %41, i64 %66
  %70 = bitcast i16* %68 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !80
  %72 = getelementptr i16, i16* %68, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !80
  %75 = bitcast i16* %69 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %75, align 2, !alias.scope !83, !noalias !80
  %76 = getelementptr i16, i16* %69, i64 8
  %77 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %74, <8 x i16>* %77, align 2, !alias.scope !83, !noalias !80
  %78 = or i64 %66, 16
  %79 = getelementptr i16, i16* %23, i64 %78
  %80 = getelementptr i16, i16* %41, i64 %78
  %81 = bitcast i16* %79 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !80
  %83 = getelementptr i16, i16* %79, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  %85 = load <8 x i16>, <8 x i16>* %84, align 2, !alias.scope !80
  %86 = bitcast i16* %80 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %86, align 2, !alias.scope !83, !noalias !80
  %87 = getelementptr i16, i16* %80, i64 8
  %88 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %85, <8 x i16>* %88, align 2, !alias.scope !83, !noalias !80
  %89 = or i64 %66, 32
  %90 = getelementptr i16, i16* %23, i64 %89
  %91 = getelementptr i16, i16* %41, i64 %89
  %92 = bitcast i16* %90 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !80
  %94 = getelementptr i16, i16* %90, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  %96 = load <8 x i16>, <8 x i16>* %95, align 2, !alias.scope !80
  %97 = bitcast i16* %91 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %97, align 2, !alias.scope !83, !noalias !80
  %98 = getelementptr i16, i16* %91, i64 8
  %99 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %96, <8 x i16>* %99, align 2, !alias.scope !83, !noalias !80
  %100 = or i64 %66, 48
  %101 = getelementptr i16, i16* %23, i64 %100
  %102 = getelementptr i16, i16* %41, i64 %100
  %103 = bitcast i16* %101 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !80
  %105 = getelementptr i16, i16* %101, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  %107 = load <8 x i16>, <8 x i16>* %106, align 2, !alias.scope !80
  %108 = bitcast i16* %102 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %108, align 2, !alias.scope !83, !noalias !80
  %109 = getelementptr i16, i16* %102, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %107, <8 x i16>* %110, align 2, !alias.scope !83, !noalias !80
  %111 = add i64 %66, 64
  %112 = add i64 %67, -4
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %65, !llvm.loop !85

114:                                              ; preds = %65, %53
  %115 = phi i64 [ 0, %53 ], [ %111, %65 ]
  %116 = icmp eq i64 %61, 0
  br i1 %116, label %133, label %117

117:                                              ; preds = %114, %117
  %118 = phi i64 [ %130, %117 ], [ %115, %114 ]
  %119 = phi i64 [ %131, %117 ], [ %61, %114 ]
  %120 = getelementptr i16, i16* %23, i64 %118
  %121 = getelementptr i16, i16* %41, i64 %118
  %122 = bitcast i16* %120 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !80
  %124 = getelementptr i16, i16* %120, i64 8
  %125 = bitcast i16* %124 to <8 x i16>*
  %126 = load <8 x i16>, <8 x i16>* %125, align 2, !alias.scope !80
  %127 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %127, align 2, !alias.scope !83, !noalias !80
  %128 = getelementptr i16, i16* %121, i64 8
  %129 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %126, <8 x i16>* %129, align 2, !alias.scope !83, !noalias !80
  %130 = add i64 %118, 16
  %131 = add i64 %119, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %117, !llvm.loop !86

133:                                              ; preds = %117, %114
  %134 = icmp eq i64 %54, %4
  br i1 %134, label %188, label %135

135:                                              ; preds = %133, %45, %43
  %136 = phi i64 [ %4, %45 ], [ %4, %43 ], [ %55, %133 ]
  %137 = phi i16* [ %23, %45 ], [ %23, %43 ], [ %56, %133 ]
  %138 = phi i16* [ %41, %45 ], [ %41, %43 ], [ %57, %133 ]
  %139 = add i64 %136, -1
  %140 = and i64 %136, 7
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %153, label %142

142:                                              ; preds = %135, %142
  %143 = phi i64 [ %148, %142 ], [ %136, %135 ]
  %144 = phi i16* [ %150, %142 ], [ %137, %135 ]
  %145 = phi i16* [ %149, %142 ], [ %138, %135 ]
  %146 = phi i64 [ %151, %142 ], [ %140, %135 ]
  %147 = load i16, i16* %144, align 2
  store i16 %147, i16* %145, align 2
  %148 = add i64 %143, -1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = getelementptr inbounds i16, i16* %144, i64 1
  %151 = add i64 %146, -1
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %142, !llvm.loop !87

153:                                              ; preds = %142, %135
  %154 = phi i64 [ %136, %135 ], [ %148, %142 ]
  %155 = phi i16* [ %137, %135 ], [ %150, %142 ]
  %156 = phi i16* [ %138, %135 ], [ %149, %142 ]
  %157 = icmp ult i64 %139, 7
  br i1 %157, label %188, label %158

158:                                              ; preds = %153, %158
  %159 = phi i64 [ %184, %158 ], [ %154, %153 ]
  %160 = phi i16* [ %186, %158 ], [ %155, %153 ]
  %161 = phi i16* [ %185, %158 ], [ %156, %153 ]
  %162 = load i16, i16* %160, align 2
  store i16 %162, i16* %161, align 2
  %163 = getelementptr inbounds i16, i16* %161, i64 1
  %164 = getelementptr inbounds i16, i16* %160, i64 1
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %161, i64 2
  %167 = getelementptr inbounds i16, i16* %160, i64 2
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %161, i64 3
  %170 = getelementptr inbounds i16, i16* %160, i64 3
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %161, i64 4
  %173 = getelementptr inbounds i16, i16* %160, i64 4
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %161, i64 5
  %176 = getelementptr inbounds i16, i16* %160, i64 5
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %161, i64 6
  %179 = getelementptr inbounds i16, i16* %160, i64 6
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %161, i64 7
  %182 = getelementptr inbounds i16, i16* %160, i64 7
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = add i64 %159, -8
  %185 = getelementptr inbounds i16, i16* %161, i64 8
  %186 = getelementptr inbounds i16, i16* %160, i64 8
  %187 = icmp eq i64 %184, 0
  br i1 %187, label %188, label %158, !llvm.loop !88

188:                                              ; preds = %153, %158, %133, %37
  %189 = sub i64 %3, %5
  %190 = sub i64 %189, %4
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %347, label %192

192:                                              ; preds = %188
  %193 = getelementptr inbounds i16, i16* %41, i64 %4
  %194 = getelementptr inbounds i16, i16* %193, i64 %6
  %195 = getelementptr inbounds i16, i16* %23, i64 %4
  %196 = getelementptr inbounds i16, i16* %195, i64 %5
  %197 = icmp ult i64 %190, 16
  br i1 %197, label %294, label %198

198:                                              ; preds = %192
  %199 = bitcast i16* %196 to i8*
  %200 = add i64 %6, %4
  %201 = shl i64 %200, 1
  %202 = getelementptr i8, i8* %40, i64 %201
  %203 = add i64 %6, %3
  %204 = sub i64 %203, %5
  %205 = shl i64 %204, 1
  %206 = getelementptr i8, i8* %40, i64 %205
  %207 = getelementptr i16, i16* %23, i64 %3
  %208 = bitcast i16* %207 to i8*
  %209 = icmp ult i8* %202, %208
  %210 = icmp ugt i8* %206, %199
  %211 = and i1 %209, %210
  br i1 %211, label %294, label %212

212:                                              ; preds = %198
  %213 = and i64 %190, -16
  %214 = sub i64 %190, %213
  %215 = getelementptr i16, i16* %196, i64 %213
  %216 = getelementptr i16, i16* %194, i64 %213
  %217 = add i64 %213, -16
  %218 = lshr exact i64 %217, 4
  %219 = add nuw nsw i64 %218, 1
  %220 = and i64 %219, 3
  %221 = icmp ult i64 %217, 48
  br i1 %221, label %273, label %222

222:                                              ; preds = %212
  %223 = sub nsw i64 %219, %220
  br label %224

224:                                              ; preds = %224, %222
  %225 = phi i64 [ 0, %222 ], [ %270, %224 ]
  %226 = phi i64 [ %223, %222 ], [ %271, %224 ]
  %227 = getelementptr i16, i16* %196, i64 %225
  %228 = getelementptr i16, i16* %194, i64 %225
  %229 = bitcast i16* %227 to <8 x i16>*
  %230 = load <8 x i16>, <8 x i16>* %229, align 2, !alias.scope !89
  %231 = getelementptr i16, i16* %227, i64 8
  %232 = bitcast i16* %231 to <8 x i16>*
  %233 = load <8 x i16>, <8 x i16>* %232, align 2, !alias.scope !89
  %234 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %230, <8 x i16>* %234, align 2, !alias.scope !92, !noalias !89
  %235 = getelementptr i16, i16* %228, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  store <8 x i16> %233, <8 x i16>* %236, align 2, !alias.scope !92, !noalias !89
  %237 = or i64 %225, 16
  %238 = getelementptr i16, i16* %196, i64 %237
  %239 = getelementptr i16, i16* %194, i64 %237
  %240 = bitcast i16* %238 to <8 x i16>*
  %241 = load <8 x i16>, <8 x i16>* %240, align 2, !alias.scope !89
  %242 = getelementptr i16, i16* %238, i64 8
  %243 = bitcast i16* %242 to <8 x i16>*
  %244 = load <8 x i16>, <8 x i16>* %243, align 2, !alias.scope !89
  %245 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %241, <8 x i16>* %245, align 2, !alias.scope !92, !noalias !89
  %246 = getelementptr i16, i16* %239, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  store <8 x i16> %244, <8 x i16>* %247, align 2, !alias.scope !92, !noalias !89
  %248 = or i64 %225, 32
  %249 = getelementptr i16, i16* %196, i64 %248
  %250 = getelementptr i16, i16* %194, i64 %248
  %251 = bitcast i16* %249 to <8 x i16>*
  %252 = load <8 x i16>, <8 x i16>* %251, align 2, !alias.scope !89
  %253 = getelementptr i16, i16* %249, i64 8
  %254 = bitcast i16* %253 to <8 x i16>*
  %255 = load <8 x i16>, <8 x i16>* %254, align 2, !alias.scope !89
  %256 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %252, <8 x i16>* %256, align 2, !alias.scope !92, !noalias !89
  %257 = getelementptr i16, i16* %250, i64 8
  %258 = bitcast i16* %257 to <8 x i16>*
  store <8 x i16> %255, <8 x i16>* %258, align 2, !alias.scope !92, !noalias !89
  %259 = or i64 %225, 48
  %260 = getelementptr i16, i16* %196, i64 %259
  %261 = getelementptr i16, i16* %194, i64 %259
  %262 = bitcast i16* %260 to <8 x i16>*
  %263 = load <8 x i16>, <8 x i16>* %262, align 2, !alias.scope !89
  %264 = getelementptr i16, i16* %260, i64 8
  %265 = bitcast i16* %264 to <8 x i16>*
  %266 = load <8 x i16>, <8 x i16>* %265, align 2, !alias.scope !89
  %267 = bitcast i16* %261 to <8 x i16>*
  store <8 x i16> %263, <8 x i16>* %267, align 2, !alias.scope !92, !noalias !89
  %268 = getelementptr i16, i16* %261, i64 8
  %269 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %266, <8 x i16>* %269, align 2, !alias.scope !92, !noalias !89
  %270 = add i64 %225, 64
  %271 = add i64 %226, -4
  %272 = icmp eq i64 %271, 0
  br i1 %272, label %273, label %224, !llvm.loop !94

273:                                              ; preds = %224, %212
  %274 = phi i64 [ 0, %212 ], [ %270, %224 ]
  %275 = icmp eq i64 %220, 0
  br i1 %275, label %292, label %276

276:                                              ; preds = %273, %276
  %277 = phi i64 [ %289, %276 ], [ %274, %273 ]
  %278 = phi i64 [ %290, %276 ], [ %220, %273 ]
  %279 = getelementptr i16, i16* %196, i64 %277
  %280 = getelementptr i16, i16* %194, i64 %277
  %281 = bitcast i16* %279 to <8 x i16>*
  %282 = load <8 x i16>, <8 x i16>* %281, align 2, !alias.scope !89
  %283 = getelementptr i16, i16* %279, i64 8
  %284 = bitcast i16* %283 to <8 x i16>*
  %285 = load <8 x i16>, <8 x i16>* %284, align 2, !alias.scope !89
  %286 = bitcast i16* %280 to <8 x i16>*
  store <8 x i16> %282, <8 x i16>* %286, align 2, !alias.scope !92, !noalias !89
  %287 = getelementptr i16, i16* %280, i64 8
  %288 = bitcast i16* %287 to <8 x i16>*
  store <8 x i16> %285, <8 x i16>* %288, align 2, !alias.scope !92, !noalias !89
  %289 = add i64 %277, 16
  %290 = add i64 %278, -1
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %292, label %276, !llvm.loop !95

292:                                              ; preds = %276, %273
  %293 = icmp eq i64 %190, %213
  br i1 %293, label %347, label %294

294:                                              ; preds = %292, %198, %192
  %295 = phi i64 [ %190, %198 ], [ %190, %192 ], [ %214, %292 ]
  %296 = phi i16* [ %196, %198 ], [ %196, %192 ], [ %215, %292 ]
  %297 = phi i16* [ %194, %198 ], [ %194, %192 ], [ %216, %292 ]
  %298 = add i64 %295, -1
  %299 = and i64 %295, 7
  %300 = icmp eq i64 %299, 0
  br i1 %300, label %312, label %301

301:                                              ; preds = %294, %301
  %302 = phi i64 [ %307, %301 ], [ %295, %294 ]
  %303 = phi i16* [ %309, %301 ], [ %296, %294 ]
  %304 = phi i16* [ %308, %301 ], [ %297, %294 ]
  %305 = phi i64 [ %310, %301 ], [ %299, %294 ]
  %306 = load i16, i16* %303, align 2
  store i16 %306, i16* %304, align 2
  %307 = add i64 %302, -1
  %308 = getelementptr inbounds i16, i16* %304, i64 1
  %309 = getelementptr inbounds i16, i16* %303, i64 1
  %310 = add i64 %305, -1
  %311 = icmp eq i64 %310, 0
  br i1 %311, label %312, label %301, !llvm.loop !96

312:                                              ; preds = %301, %294
  %313 = phi i64 [ %295, %294 ], [ %307, %301 ]
  %314 = phi i16* [ %296, %294 ], [ %309, %301 ]
  %315 = phi i16* [ %297, %294 ], [ %308, %301 ]
  %316 = icmp ult i64 %298, 7
  br i1 %316, label %347, label %317

317:                                              ; preds = %312, %317
  %318 = phi i64 [ %343, %317 ], [ %313, %312 ]
  %319 = phi i16* [ %345, %317 ], [ %314, %312 ]
  %320 = phi i16* [ %344, %317 ], [ %315, %312 ]
  %321 = load i16, i16* %319, align 2
  store i16 %321, i16* %320, align 2
  %322 = getelementptr inbounds i16, i16* %320, i64 1
  %323 = getelementptr inbounds i16, i16* %319, i64 1
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %320, i64 2
  %326 = getelementptr inbounds i16, i16* %319, i64 2
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %320, i64 3
  %329 = getelementptr inbounds i16, i16* %319, i64 3
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = getelementptr inbounds i16, i16* %320, i64 4
  %332 = getelementptr inbounds i16, i16* %319, i64 4
  %333 = load i16, i16* %332, align 2
  store i16 %333, i16* %331, align 2
  %334 = getelementptr inbounds i16, i16* %320, i64 5
  %335 = getelementptr inbounds i16, i16* %319, i64 5
  %336 = load i16, i16* %335, align 2
  store i16 %336, i16* %334, align 2
  %337 = getelementptr inbounds i16, i16* %320, i64 6
  %338 = getelementptr inbounds i16, i16* %319, i64 6
  %339 = load i16, i16* %338, align 2
  store i16 %339, i16* %337, align 2
  %340 = getelementptr inbounds i16, i16* %320, i64 7
  %341 = getelementptr inbounds i16, i16* %319, i64 7
  %342 = load i16, i16* %341, align 2
  store i16 %342, i16* %340, align 2
  %343 = add i64 %318, -8
  %344 = getelementptr inbounds i16, i16* %320, i64 8
  %345 = getelementptr inbounds i16, i16* %319, i64 8
  %346 = icmp eq i64 %343, 0
  br i1 %346, label %347, label %317, !llvm.loop !97

347:                                              ; preds = %312, %317, %292, %188
  %348 = icmp eq i64 %1, 10
  br i1 %348, label %350, label %349

349:                                              ; preds = %347
  tail call void @_ZdlPv(i8* %24) #14
  br label %350

350:                                              ; preds = %347, %349
  %351 = bitcast %"class.std::__1::basic_string.48"* %0 to i8**
  store i8* %40, i8** %351, align 8
  %352 = or i64 %38, -9223372036854775808
  %353 = getelementptr inbounds %"class.std::__1::basic_string.48", %"class.std::__1::basic_string.48"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %352, i64* %353, align 8
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #11

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }
attributes #14 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN12_GLOBAL__N_19StringizeEPcRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE: argument 0"}
!4 = distinct !{!4, !"_ZN12_GLOBAL__N_19StringizeEPcRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN12_GLOBAL__N_111GetNicknameEP18CERTCertificateStr: argument 0"}
!7 = distinct !{!7, !"_ZN12_GLOBAL__N_111GetNicknameEP18CERTCertificateStr"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN12_GLOBAL__N_19StringizeEPcRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE: argument 0"}
!10 = distinct !{!10, !"_ZN12_GLOBAL__N_19StringizeEPcRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN12_GLOBAL__N_19StringizeEPcRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE: argument 0"}
!13 = distinct !{!13, !"_ZN12_GLOBAL__N_19StringizeEPcRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN12_GLOBAL__N_19StringizeEPcRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE: argument 0"}
!16 = distinct !{!16, !"_ZN12_GLOBAL__N_19StringizeEPcRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN12_GLOBAL__N_19StringizeEPcRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE: argument 0"}
!19 = distinct !{!19, !"_ZN12_GLOBAL__N_19StringizeEPcRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN12_GLOBAL__N_19StringizeEPcRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE: argument 0"}
!22 = distinct !{!22, !"_ZN12_GLOBAL__N_19StringizeEPcRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZN12_GLOBAL__N_19StringizeEPcRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE: argument 0"}
!25 = distinct !{!25, !"_ZN12_GLOBAL__N_19StringizeEPcRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZN12_GLOBAL__N_19StringizeEPcRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE: argument 0"}
!28 = distinct !{!28, !"_ZN12_GLOBAL__N_19StringizeEPcRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZN12_GLOBAL__N_116ProcessExtensionERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_P20CERTCertExtensionStr: argument 0"}
!31 = distinct !{!31, !"_ZN12_GLOBAL__N_116ProcessExtensionERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_P20CERTCertExtensionStr"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_: argument 0"}
!34 = distinct !{!34, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_"}
!35 = !{!33, !30}
!36 = !{!37, !30}
!37 = distinct !{!37, !38, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_: argument 0"}
!38 = distinct !{!38, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_"}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZN12_GLOBAL__N_18HashCertEP18CERTCertificateStr13HASH_HashTypei: argument 0"}
!41 = distinct !{!41, !"_ZN12_GLOBAL__N_18HashCertEP18CERTCertificateStr13HASH_HashTypei"}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZN12_GLOBAL__N_18HashCertEP18CERTCertificateStr13HASH_HashTypei: argument 0"}
!44 = distinct !{!44, !"_ZN12_GLOBAL__N_18HashCertEP18CERTCertificateStr13HASH_HashTypei"}
!45 = !{!46}
!46 = distinct !{!46, !47}
!47 = distinct !{!47, !"LVerDomain"}
!48 = !{!49}
!49 = distinct !{!49, !47}
!50 = distinct !{!50, !51}
!51 = !{!"llvm.loop.isvectorized", i32 1}
!52 = distinct !{!52, !53}
!53 = !{!"llvm.loop.unroll.disable"}
!54 = distinct !{!54, !53}
!55 = distinct !{!55, !51}
!56 = !{!57}
!57 = distinct !{!57, !58}
!58 = distinct !{!58, !"LVerDomain"}
!59 = !{!60}
!60 = distinct !{!60, !58}
!61 = distinct !{!61, !51}
!62 = distinct !{!62, !53}
!63 = distinct !{!63, !53}
!64 = distinct !{!64, !51}
!65 = !{!66}
!66 = distinct !{!66, !67}
!67 = distinct !{!67, !"LVerDomain"}
!68 = !{!69}
!69 = distinct !{!69, !67}
!70 = distinct !{!70, !51}
!71 = distinct !{!71, !53}
!72 = distinct !{!72, !51}
!73 = !{!74}
!74 = distinct !{!74, !75}
!75 = distinct !{!75, !"LVerDomain"}
!76 = !{!77}
!77 = distinct !{!77, !75}
!78 = distinct !{!78, !51}
!79 = distinct !{!79, !51}
!80 = !{!81}
!81 = distinct !{!81, !82}
!82 = distinct !{!82, !"LVerDomain"}
!83 = !{!84}
!84 = distinct !{!84, !82}
!85 = distinct !{!85, !51}
!86 = distinct !{!86, !53}
!87 = distinct !{!87, !53}
!88 = distinct !{!88, !51}
!89 = !{!90}
!90 = distinct !{!90, !91}
!91 = distinct !{!91, !"LVerDomain"}
!92 = !{!93}
!93 = distinct !{!93, !91}
!94 = distinct !{!94, !51}
!95 = distinct !{!95, !53}
!96 = distinct !{!96, !53}
!97 = distinct !{!97, !51}
