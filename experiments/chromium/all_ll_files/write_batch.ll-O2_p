; ModuleID = '../../third_party/leveldatabase/src/db/write_batch.cc'
source_filename = "../../third_party/leveldatabase/src/db/write_batch.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.leveldb::WriteBatch" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.leveldb::WriteBatch::Handler" = type { i32 (...)** }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.leveldb::Status" = type { i8* }
%"class.leveldb::Slice" = type { i8*, i64 }
%"class.leveldb::MemTable" = type { %"struct.leveldb::MemTable::KeyComparator", i32, %"class.leveldb::Arena", %"class.leveldb::SkipList" }
%"struct.leveldb::MemTable::KeyComparator" = type { %"class.leveldb::InternalKeyComparator" }
%"class.leveldb::InternalKeyComparator" = type { %"class.leveldb::Comparator", %"class.leveldb::Comparator"* }
%"class.leveldb::Comparator" = type { i32 (...)** }
%"class.leveldb::Arena" = type { i8*, i64, %"class.std::__1::vector", %"struct.std::__1::atomic" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8**, i8**, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i8** }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.leveldb::SkipList" = type { %"struct.leveldb::MemTable::KeyComparator", %"class.leveldb::Arena"*, %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*, %"struct.std::__1::atomic.7", %"class.leveldb::Random" }
%"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node" = type opaque
%"struct.std::__1::atomic.7" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__cxx_atomic_impl.10" }
%"struct.std::__1::__cxx_atomic_impl.10" = type { %"struct.std::__1::__cxx_atomic_base_impl.11" }
%"struct.std::__1::__cxx_atomic_base_impl.11" = type { i32 }
%"class.leveldb::Random" = type { i32 }
%"class.leveldb::(anonymous namespace)::MemTableInserter" = type { %"class.leveldb::WriteBatch::Handler", i64, %"class.leveldb::MemTable"* }

@.str = private unnamed_addr constant [33 x i8] c"malformed WriteBatch (too small)\00", align 1
@.str.1 = private unnamed_addr constant [19 x i8] c"bad WriteBatch Put\00", align 1
@.str.2 = private unnamed_addr constant [22 x i8] c"bad WriteBatch Delete\00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"unknown WriteBatch tag\00", align 1
@.str.4 = private unnamed_addr constant [27 x i8] c"WriteBatch has wrong count\00", align 1
@_ZTVN7leveldb10WriteBatch7HandlerE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.leveldb::WriteBatch::Handler"*)* @_ZN7leveldb10WriteBatch7HandlerD2Ev to i8*), i8* bitcast (void (%"class.leveldb::WriteBatch::Handler"*)* @_ZN7leveldb10WriteBatch7HandlerD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@.str.5 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZTVN7leveldb12_GLOBAL__N_116MemTableInserterE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.leveldb::WriteBatch::Handler"*)* @_ZN7leveldb10WriteBatch7HandlerD2Ev to i8*), i8* bitcast (void (%"class.leveldb::(anonymous namespace)::MemTableInserter"*)* @_ZN7leveldb12_GLOBAL__N_116MemTableInserterD0Ev to i8*), i8* bitcast (void (%"class.leveldb::(anonymous namespace)::MemTableInserter"*, %"class.leveldb::Slice"*, %"class.leveldb::Slice"*)* @_ZN7leveldb12_GLOBAL__N_116MemTableInserter3PutERKNS_5SliceES4_ to i8*), i8* bitcast (void (%"class.leveldb::(anonymous namespace)::MemTableInserter"*, %"class.leveldb::Slice"*)* @_ZN7leveldb12_GLOBAL__N_116MemTableInserter6DeleteERKNS_5SliceE to i8*)] }, align 8

@_ZN7leveldb10WriteBatchC1Ev = hidden unnamed_addr alias void (%"class.leveldb::WriteBatch"*), void (%"class.leveldb::WriteBatch"*)* @_ZN7leveldb10WriteBatchC2Ev
@_ZN7leveldb10WriteBatchD1Ev = hidden unnamed_addr alias void (%"class.leveldb::WriteBatch"*), void (%"class.leveldb::WriteBatch"*)* @_ZN7leveldb10WriteBatchD2Ev
@_ZN7leveldb10WriteBatch7HandlerD1Ev = hidden unnamed_addr alias void (%"class.leveldb::WriteBatch::Handler"*), void (%"class.leveldb::WriteBatch::Handler"*)* @_ZN7leveldb10WriteBatch7HandlerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7leveldb10WriteBatchC2Ev(%"class.leveldb::WriteBatch"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.leveldb::WriteBatch", %"class.leveldb::WriteBatch"* %0, i64 0, i32 0
  %3 = bitcast %"class.leveldb::WriteBatch"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #11
  %4 = bitcast %"class.leveldb::WriteBatch"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  store i8 0, i8* %3, align 1
  store i8 0, i8* %5, align 1
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* %2, i64 12, i8 signext 0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7leveldb10WriteBatch5ClearEv(%"class.leveldb::WriteBatch"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.leveldb::WriteBatch", %"class.leveldb::WriteBatch"* %0, i64 0, i32 0
  %3 = bitcast %"class.leveldb::WriteBatch"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %11

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.leveldb::WriteBatch", %"class.leveldb::WriteBatch"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  store i8 0, i8* %9, align 1
  %10 = getelementptr inbounds %"class.leveldb::WriteBatch", %"class.leveldb::WriteBatch"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %10, align 8
  br label %13

11:                                               ; preds = %1
  %12 = bitcast %"class.leveldb::WriteBatch"* %0 to i8*
  store i8 0, i8* %12, align 1
  store i8 0, i8* %4, align 1
  br label %13

13:                                               ; preds = %7, %11
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* %2, i64 12, i8 signext 0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7leveldb10WriteBatchD2Ev(%"class.leveldb::WriteBatch"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.leveldb::WriteBatch"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %3 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2, i64 0, i32 1, i32 0
  %4 = load i8, i8* %3, align 1
  %5 = icmp slt i8 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.leveldb::WriteBatch", %"class.leveldb::WriteBatch"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  tail call void @_ZdlPv(i8* %8) #12
  br label %9

9:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN7leveldb10WriteBatch7HandlerD0Ev(%"class.leveldb::WriteBatch::Handler"* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK7leveldb10WriteBatch15ApproximateSizeEv(%"class.leveldb::WriteBatch"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = bitcast %"class.leveldb::WriteBatch"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %3 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2, i64 0, i32 1, i32 0
  %4 = load i8, i8* %3, align 1
  %5 = icmp slt i8 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.leveldb::WriteBatch", %"class.leveldb::WriteBatch"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  br label %11

9:                                                ; preds = %1
  %10 = zext i8 %4 to i64
  br label %11

11:                                               ; preds = %6, %9
  %12 = phi i64 [ %8, %6 ], [ %10, %9 ]
  ret i64 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7leveldb10WriteBatch7IterateEPNS0_7HandlerE(%"class.leveldb::Status"* noalias sret, %"class.leveldb::WriteBatch"*, %"class.leveldb::WriteBatch::Handler"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.leveldb::Slice", align 8
  %5 = alloca %"class.leveldb::Slice", align 8
  %6 = alloca %"class.leveldb::Slice", align 8
  %7 = alloca %"class.leveldb::Slice", align 8
  %8 = alloca %"class.leveldb::Slice", align 8
  %9 = alloca %"class.leveldb::Slice", align 8
  %10 = alloca %"class.leveldb::Slice", align 8
  %11 = alloca %"class.leveldb::Slice", align 8
  %12 = alloca %"class.leveldb::Slice", align 8
  %13 = alloca %"class.leveldb::Slice", align 8
  %14 = alloca %"class.leveldb::Slice", align 8
  %15 = alloca %"class.leveldb::Slice", align 8
  %16 = alloca %"class.leveldb::Slice", align 8
  %17 = bitcast %"class.leveldb::Slice"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #11
  %18 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %4, i64 0, i32 0
  %19 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %4, i64 0, i32 1
  %20 = bitcast %"class.leveldb::WriteBatch"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  %24 = getelementptr inbounds %"class.leveldb::WriteBatch", %"class.leveldb::WriteBatch"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = bitcast %"class.leveldb::WriteBatch"* %1 to i8*
  %27 = select i1 %23, i8* %25, i8* %26
  store i8* %27, i8** %18, align 8
  %28 = getelementptr inbounds %"class.leveldb::WriteBatch", %"class.leveldb::WriteBatch"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %22 to i64
  %31 = select i1 %23, i64 %29, i64 %30
  store i64 %31, i64* %19, align 8
  %32 = icmp ult i64 %31, 12
  br i1 %32, label %33, label %40

33:                                               ; preds = %3
  %34 = bitcast %"class.leveldb::Slice"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #11
  %35 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %5, i64 0, i32 0
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0), i8** %35, align 8
  %36 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %5, i64 0, i32 1
  store i64 32, i64* %36, align 8
  %37 = bitcast %"class.leveldb::Slice"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #11
  %38 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %6, i64 0, i32 0
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8** %38, align 8
  %39 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %6, i64 0, i32 1
  store i64 0, i64* %39, align 8
  call void @_ZN7leveldb6StatusC1ENS0_4CodeERKNS_5SliceES4_(%"class.leveldb::Status"* %0, i32 2, %"class.leveldb::Slice"* nonnull dereferenceable(16) %5, %"class.leveldb::Slice"* nonnull dereferenceable(16) %6) #11
  br label %140

40:                                               ; preds = %3
  %41 = getelementptr inbounds i8, i8* %27, i64 12
  store i8* %41, i8** %18, align 8
  %42 = add i64 %31, -12
  store i64 %42, i64* %19, align 8
  %43 = bitcast %"class.leveldb::Slice"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #11
  %44 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %7, i64 0, i32 0
  %45 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8** %44, align 8
  store i64 0, i64* %45, align 8
  %46 = bitcast %"class.leveldb::Slice"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #11
  %47 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %8, i64 0, i32 0
  %48 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8** %47, align 8
  store i64 0, i64* %48, align 8
  %49 = icmp eq i64 %42, 0
  br i1 %49, label %104, label %50

50:                                               ; preds = %40
  %51 = bitcast %"class.leveldb::WriteBatch::Handler"* %2 to void (%"class.leveldb::WriteBatch::Handler"*, %"class.leveldb::Slice"*)***
  %52 = bitcast %"class.leveldb::WriteBatch::Handler"* %2 to void (%"class.leveldb::WriteBatch::Handler"*, %"class.leveldb::Slice"*, %"class.leveldb::Slice"*)***
  br label %53

53:                                               ; preds = %100, %50
  %54 = phi i8* [ %41, %50 ], [ %101, %100 ]
  %55 = phi i64 [ %42, %50 ], [ %98, %100 ]
  %56 = phi i32 [ 0, %50 ], [ %57, %100 ]
  %57 = add nuw nsw i32 %56, 1
  %58 = load i8, i8* %54, align 1
  %59 = getelementptr inbounds i8, i8* %54, i64 1
  store i8* %59, i8** %18, align 8
  %60 = add i64 %55, -1
  store i64 %60, i64* %19, align 8
  %61 = sext i8 %58 to i32
  switch i32 %61, label %90 [
    i32 1, label %62
    i32 0, label %77
  ]

62:                                               ; preds = %53
  %63 = call zeroext i1 @_ZN7leveldb22GetLengthPrefixedSliceEPNS_5SliceES1_(%"class.leveldb::Slice"* nonnull %4, %"class.leveldb::Slice"* nonnull %7) #11
  br i1 %63, label %64, label %70

64:                                               ; preds = %62
  %65 = call zeroext i1 @_ZN7leveldb22GetLengthPrefixedSliceEPNS_5SliceES1_(%"class.leveldb::Slice"* nonnull %4, %"class.leveldb::Slice"* nonnull %8) #11
  br i1 %65, label %66, label %70

66:                                               ; preds = %64
  %67 = load void (%"class.leveldb::WriteBatch::Handler"*, %"class.leveldb::Slice"*, %"class.leveldb::Slice"*)**, void (%"class.leveldb::WriteBatch::Handler"*, %"class.leveldb::Slice"*, %"class.leveldb::Slice"*)*** %52, align 8
  %68 = getelementptr inbounds void (%"class.leveldb::WriteBatch::Handler"*, %"class.leveldb::Slice"*, %"class.leveldb::Slice"*)*, void (%"class.leveldb::WriteBatch::Handler"*, %"class.leveldb::Slice"*, %"class.leveldb::Slice"*)** %67, i64 2
  %69 = load void (%"class.leveldb::WriteBatch::Handler"*, %"class.leveldb::Slice"*, %"class.leveldb::Slice"*)*, void (%"class.leveldb::WriteBatch::Handler"*, %"class.leveldb::Slice"*, %"class.leveldb::Slice"*)** %68, align 8
  call void %69(%"class.leveldb::WriteBatch::Handler"* %2, %"class.leveldb::Slice"* nonnull dereferenceable(16) %7, %"class.leveldb::Slice"* nonnull dereferenceable(16) %8) #11
  br label %97

70:                                               ; preds = %64, %62
  %71 = bitcast %"class.leveldb::Slice"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %71) #11
  %72 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %9, i64 0, i32 0
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i64 0, i64 0), i8** %72, align 8
  %73 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %9, i64 0, i32 1
  store i64 18, i64* %73, align 8
  %74 = bitcast %"class.leveldb::Slice"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %74) #11
  %75 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %10, i64 0, i32 0
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8** %75, align 8
  %76 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %10, i64 0, i32 1
  store i64 0, i64* %76, align 8
  call void @_ZN7leveldb6StatusC1ENS0_4CodeERKNS_5SliceES4_(%"class.leveldb::Status"* %0, i32 2, %"class.leveldb::Slice"* nonnull dereferenceable(16) %9, %"class.leveldb::Slice"* nonnull dereferenceable(16) %10) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %74) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %71) #11
  br label %140

77:                                               ; preds = %53
  %78 = call zeroext i1 @_ZN7leveldb22GetLengthPrefixedSliceEPNS_5SliceES1_(%"class.leveldb::Slice"* nonnull %4, %"class.leveldb::Slice"* nonnull %7) #11
  br i1 %78, label %79, label %83

79:                                               ; preds = %77
  %80 = load void (%"class.leveldb::WriteBatch::Handler"*, %"class.leveldb::Slice"*)**, void (%"class.leveldb::WriteBatch::Handler"*, %"class.leveldb::Slice"*)*** %51, align 8
  %81 = getelementptr inbounds void (%"class.leveldb::WriteBatch::Handler"*, %"class.leveldb::Slice"*)*, void (%"class.leveldb::WriteBatch::Handler"*, %"class.leveldb::Slice"*)** %80, i64 3
  %82 = load void (%"class.leveldb::WriteBatch::Handler"*, %"class.leveldb::Slice"*)*, void (%"class.leveldb::WriteBatch::Handler"*, %"class.leveldb::Slice"*)** %81, align 8
  call void %82(%"class.leveldb::WriteBatch::Handler"* %2, %"class.leveldb::Slice"* nonnull dereferenceable(16) %7) #11
  br label %97

83:                                               ; preds = %77
  %84 = bitcast %"class.leveldb::Slice"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %84) #11
  %85 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %11, i64 0, i32 0
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0), i8** %85, align 8
  %86 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %11, i64 0, i32 1
  store i64 21, i64* %86, align 8
  %87 = bitcast %"class.leveldb::Slice"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %87) #11
  %88 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %12, i64 0, i32 0
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8** %88, align 8
  %89 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %12, i64 0, i32 1
  store i64 0, i64* %89, align 8
  call void @_ZN7leveldb6StatusC1ENS0_4CodeERKNS_5SliceES4_(%"class.leveldb::Status"* %0, i32 2, %"class.leveldb::Slice"* nonnull dereferenceable(16) %11, %"class.leveldb::Slice"* nonnull dereferenceable(16) %12) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %84) #11
  br label %140

90:                                               ; preds = %53
  %91 = bitcast %"class.leveldb::Slice"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %91) #11
  %92 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %13, i64 0, i32 0
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8** %92, align 8
  %93 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %13, i64 0, i32 1
  store i64 22, i64* %93, align 8
  %94 = bitcast %"class.leveldb::Slice"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %94) #11
  %95 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %14, i64 0, i32 0
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8** %95, align 8
  %96 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %14, i64 0, i32 1
  store i64 0, i64* %96, align 8
  call void @_ZN7leveldb6StatusC1ENS0_4CodeERKNS_5SliceES4_(%"class.leveldb::Status"* %0, i32 2, %"class.leveldb::Slice"* nonnull dereferenceable(16) %13, %"class.leveldb::Slice"* nonnull dereferenceable(16) %14) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %94) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %91) #11
  br label %140

97:                                               ; preds = %66, %79
  %98 = load i64, i64* %19, align 8
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %102, label %100

100:                                              ; preds = %97
  %101 = load i8*, i8** %18, align 8
  br label %53

102:                                              ; preds = %97
  %103 = load i8, i8* %21, align 1
  br label %104

104:                                              ; preds = %102, %40
  %105 = phi i8 [ %22, %40 ], [ %103, %102 ]
  %106 = phi i32 [ 0, %40 ], [ %57, %102 ]
  %107 = icmp slt i8 %105, 0
  br i1 %107, label %108, label %110

108:                                              ; preds = %104
  %109 = load i8*, i8** %24, align 8
  br label %110

110:                                              ; preds = %104, %108
  %111 = phi i8* [ %109, %108 ], [ %26, %104 ]
  %112 = getelementptr inbounds i8, i8* %111, i64 8
  %113 = load i8, i8* %112, align 1
  %114 = zext i8 %113 to i32
  %115 = getelementptr inbounds i8, i8* %111, i64 9
  %116 = load i8, i8* %115, align 1
  %117 = zext i8 %116 to i32
  %118 = shl nuw nsw i32 %117, 8
  %119 = or i32 %118, %114
  %120 = getelementptr inbounds i8, i8* %111, i64 10
  %121 = load i8, i8* %120, align 1
  %122 = zext i8 %121 to i32
  %123 = shl nuw nsw i32 %122, 16
  %124 = or i32 %119, %123
  %125 = getelementptr inbounds i8, i8* %111, i64 11
  %126 = load i8, i8* %125, align 1
  %127 = zext i8 %126 to i32
  %128 = shl nuw i32 %127, 24
  %129 = or i32 %124, %128
  %130 = icmp eq i32 %106, %129
  br i1 %130, label %138, label %131

131:                                              ; preds = %110
  %132 = bitcast %"class.leveldb::Slice"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %132) #11
  %133 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %15, i64 0, i32 0
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i64 0, i64 0), i8** %133, align 8
  %134 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %15, i64 0, i32 1
  store i64 26, i64* %134, align 8
  %135 = bitcast %"class.leveldb::Slice"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %135) #11
  %136 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %16, i64 0, i32 0
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8** %136, align 8
  %137 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %16, i64 0, i32 1
  store i64 0, i64* %137, align 8
  call void @_ZN7leveldb6StatusC1ENS0_4CodeERKNS_5SliceES4_(%"class.leveldb::Status"* %0, i32 2, %"class.leveldb::Slice"* nonnull dereferenceable(16) %15, %"class.leveldb::Slice"* nonnull dereferenceable(16) %16) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %135) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %132) #11
  br label %140

138:                                              ; preds = %110
  %139 = getelementptr inbounds %"class.leveldb::Status", %"class.leveldb::Status"* %0, i64 0, i32 0
  store i8* null, i8** %139, align 8, !alias.scope !2
  br label %140

140:                                              ; preds = %131, %138, %90, %83, %70, %33
  %141 = phi i8* [ %37, %33 ], [ %46, %70 ], [ %46, %83 ], [ %46, %90 ], [ %46, %138 ], [ %46, %131 ]
  %142 = phi i8* [ %34, %33 ], [ %43, %70 ], [ %43, %83 ], [ %43, %90 ], [ %43, %138 ], [ %43, %131 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %141) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %142) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare zeroext i1 @_ZN7leveldb22GetLengthPrefixedSliceEPNS_5SliceES1_(%"class.leveldb::Slice"*, %"class.leveldb::Slice"*) local_unnamed_addr #5

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN7leveldb18WriteBatchInternal5CountEPKNS_10WriteBatchE(%"class.leveldb::WriteBatch"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = bitcast %"class.leveldb::WriteBatch"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %3 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2, i64 0, i32 1, i32 0
  %4 = load i8, i8* %3, align 1
  %5 = icmp slt i8 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.leveldb::WriteBatch", %"class.leveldb::WriteBatch"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  br label %11

9:                                                ; preds = %1
  %10 = bitcast %"class.leveldb::WriteBatch"* %0 to i8*
  br label %11

11:                                               ; preds = %6, %9
  %12 = phi i8* [ %8, %6 ], [ %10, %9 ]
  %13 = getelementptr inbounds i8, i8* %12, i64 8
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i32
  %16 = getelementptr inbounds i8, i8* %12, i64 9
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i32
  %19 = shl nuw nsw i32 %18, 8
  %20 = or i32 %19, %15
  %21 = getelementptr inbounds i8, i8* %12, i64 10
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i32
  %24 = shl nuw nsw i32 %23, 16
  %25 = or i32 %20, %24
  %26 = getelementptr inbounds i8, i8* %12, i64 11
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  %29 = shl nuw i32 %28, 24
  %30 = or i32 %25, %29
  ret i32 %30
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN7leveldb18WriteBatchInternal8SetCountEPNS_10WriteBatchEi(%"class.leveldb::WriteBatch"* nocapture, i32) local_unnamed_addr #6 align 2 {
  %3 = bitcast %"class.leveldb::WriteBatch"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.leveldb::WriteBatch", %"class.leveldb::WriteBatch"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  br label %12

10:                                               ; preds = %2
  %11 = bitcast %"class.leveldb::WriteBatch"* %0 to i8*
  br label %12

12:                                               ; preds = %7, %10
  %13 = phi i8* [ %9, %7 ], [ %11, %10 ]
  %14 = getelementptr inbounds i8, i8* %13, i64 8
  %15 = trunc i32 %1 to i8
  store i8 %15, i8* %14, align 1
  %16 = lshr i32 %1, 8
  %17 = trunc i32 %16 to i8
  %18 = getelementptr inbounds i8, i8* %13, i64 9
  store i8 %17, i8* %18, align 1
  %19 = lshr i32 %1, 16
  %20 = trunc i32 %19 to i8
  %21 = getelementptr inbounds i8, i8* %13, i64 10
  store i8 %20, i8* %21, align 1
  %22 = lshr i32 %1, 24
  %23 = trunc i32 %22 to i8
  %24 = getelementptr inbounds i8, i8* %13, i64 11
  store i8 %23, i8* %24, align 1
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN7leveldb18WriteBatchInternal8SequenceEPKNS_10WriteBatchE(%"class.leveldb::WriteBatch"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = bitcast %"class.leveldb::WriteBatch"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %3 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2, i64 0, i32 1, i32 0
  %4 = load i8, i8* %3, align 1
  %5 = icmp slt i8 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.leveldb::WriteBatch", %"class.leveldb::WriteBatch"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  br label %11

9:                                                ; preds = %1
  %10 = bitcast %"class.leveldb::WriteBatch"* %0 to i8*
  br label %11

11:                                               ; preds = %6, %9
  %12 = phi i8* [ %8, %6 ], [ %10, %9 ]
  %13 = load i8, i8* %12, align 1
  %14 = zext i8 %13 to i64
  %15 = getelementptr inbounds i8, i8* %12, i64 1
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = shl nuw nsw i64 %17, 8
  %19 = or i64 %18, %14
  %20 = getelementptr inbounds i8, i8* %12, i64 2
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i64
  %23 = shl nuw nsw i64 %22, 16
  %24 = or i64 %19, %23
  %25 = getelementptr inbounds i8, i8* %12, i64 3
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i64
  %28 = shl nuw nsw i64 %27, 24
  %29 = or i64 %24, %28
  %30 = getelementptr inbounds i8, i8* %12, i64 4
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i64
  %33 = shl nuw nsw i64 %32, 32
  %34 = or i64 %29, %33
  %35 = getelementptr inbounds i8, i8* %12, i64 5
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = shl nuw nsw i64 %37, 40
  %39 = or i64 %34, %38
  %40 = getelementptr inbounds i8, i8* %12, i64 6
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i64
  %43 = shl nuw nsw i64 %42, 48
  %44 = or i64 %39, %43
  %45 = getelementptr inbounds i8, i8* %12, i64 7
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i64
  %48 = shl nuw i64 %47, 56
  %49 = or i64 %44, %48
  ret i64 %49
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN7leveldb18WriteBatchInternal11SetSequenceEPNS_10WriteBatchEm(%"class.leveldb::WriteBatch"* nocapture, i64) local_unnamed_addr #6 align 2 {
  %3 = bitcast %"class.leveldb::WriteBatch"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.leveldb::WriteBatch", %"class.leveldb::WriteBatch"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  br label %12

10:                                               ; preds = %2
  %11 = bitcast %"class.leveldb::WriteBatch"* %0 to i8*
  br label %12

12:                                               ; preds = %7, %10
  %13 = phi i8* [ %9, %7 ], [ %11, %10 ]
  %14 = trunc i64 %1 to i8
  store i8 %14, i8* %13, align 1
  %15 = lshr i64 %1, 8
  %16 = trunc i64 %15 to i8
  %17 = getelementptr inbounds i8, i8* %13, i64 1
  store i8 %16, i8* %17, align 1
  %18 = lshr i64 %1, 16
  %19 = trunc i64 %18 to i8
  %20 = getelementptr inbounds i8, i8* %13, i64 2
  store i8 %19, i8* %20, align 1
  %21 = lshr i64 %1, 24
  %22 = trunc i64 %21 to i8
  %23 = getelementptr inbounds i8, i8* %13, i64 3
  store i8 %22, i8* %23, align 1
  %24 = lshr i64 %1, 32
  %25 = trunc i64 %24 to i8
  %26 = getelementptr inbounds i8, i8* %13, i64 4
  store i8 %25, i8* %26, align 1
  %27 = lshr i64 %1, 40
  %28 = trunc i64 %27 to i8
  %29 = getelementptr inbounds i8, i8* %13, i64 5
  store i8 %28, i8* %29, align 1
  %30 = lshr i64 %1, 48
  %31 = trunc i64 %30 to i8
  %32 = getelementptr inbounds i8, i8* %13, i64 6
  store i8 %31, i8* %32, align 1
  %33 = lshr i64 %1, 56
  %34 = trunc i64 %33 to i8
  %35 = getelementptr inbounds i8, i8* %13, i64 7
  store i8 %34, i8* %35, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7leveldb10WriteBatch3PutERKNS_5SliceES3_(%"class.leveldb::WriteBatch"*, %"class.leveldb::Slice"* dereferenceable(16), %"class.leveldb::Slice"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"class.leveldb::WriteBatch"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.leveldb::WriteBatch", %"class.leveldb::WriteBatch"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  br label %13

11:                                               ; preds = %3
  %12 = bitcast %"class.leveldb::WriteBatch"* %0 to i8*
  br label %13

13:                                               ; preds = %8, %11
  %14 = phi i8* [ %10, %8 ], [ %12, %11 ]
  %15 = getelementptr inbounds i8, i8* %14, i64 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i32
  %18 = getelementptr inbounds i8, i8* %14, i64 9
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = shl nuw nsw i32 %20, 8
  %22 = or i32 %21, %17
  %23 = getelementptr inbounds i8, i8* %14, i64 10
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  %26 = shl nuw nsw i32 %25, 16
  %27 = or i32 %22, %26
  %28 = getelementptr inbounds i8, i8* %14, i64 11
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i32
  %31 = shl nuw i32 %30, 24
  %32 = or i32 %27, %31
  %33 = add nsw i32 %32, 1
  br i1 %7, label %34, label %37

34:                                               ; preds = %13
  %35 = getelementptr inbounds %"class.leveldb::WriteBatch", %"class.leveldb::WriteBatch"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  br label %39

37:                                               ; preds = %13
  %38 = bitcast %"class.leveldb::WriteBatch"* %0 to i8*
  br label %39

39:                                               ; preds = %34, %37
  %40 = phi i8* [ %36, %34 ], [ %38, %37 ]
  %41 = getelementptr inbounds i8, i8* %40, i64 8
  %42 = trunc i32 %33 to i8
  store i8 %42, i8* %41, align 1
  %43 = lshr i32 %33, 8
  %44 = trunc i32 %43 to i8
  %45 = getelementptr inbounds i8, i8* %40, i64 9
  store i8 %44, i8* %45, align 1
  %46 = lshr i32 %33, 16
  %47 = trunc i32 %46 to i8
  %48 = getelementptr inbounds i8, i8* %40, i64 10
  store i8 %47, i8* %48, align 1
  %49 = lshr i32 %33, 24
  %50 = trunc i32 %49 to i8
  %51 = getelementptr inbounds i8, i8* %40, i64 11
  store i8 %50, i8* %51, align 1
  %52 = getelementptr inbounds %"class.leveldb::WriteBatch", %"class.leveldb::WriteBatch"* %0, i64 0, i32 0
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* %52, i8 signext 1) #11
  tail call void @_ZN7leveldb22PutLengthPrefixedSliceEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKNS_5SliceE(%"class.std::__1::basic_string"* %52, %"class.leveldb::Slice"* dereferenceable(16) %1) #11
  tail call void @_ZN7leveldb22PutLengthPrefixedSliceEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKNS_5SliceE(%"class.std::__1::basic_string"* %52, %"class.leveldb::Slice"* dereferenceable(16) %2) #11
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"*, i8 signext) local_unnamed_addr #5

declare void @_ZN7leveldb22PutLengthPrefixedSliceEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKNS_5SliceE(%"class.std::__1::basic_string"*, %"class.leveldb::Slice"* dereferenceable(16)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7leveldb10WriteBatch6DeleteERKNS_5SliceE(%"class.leveldb::WriteBatch"*, %"class.leveldb::Slice"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.leveldb::WriteBatch"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.leveldb::WriteBatch", %"class.leveldb::WriteBatch"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  br label %12

10:                                               ; preds = %2
  %11 = bitcast %"class.leveldb::WriteBatch"* %0 to i8*
  br label %12

12:                                               ; preds = %7, %10
  %13 = phi i8* [ %9, %7 ], [ %11, %10 ]
  %14 = getelementptr inbounds i8, i8* %13, i64 8
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i32
  %17 = getelementptr inbounds i8, i8* %13, i64 9
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i32
  %20 = shl nuw nsw i32 %19, 8
  %21 = or i32 %20, %16
  %22 = getelementptr inbounds i8, i8* %13, i64 10
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  %25 = shl nuw nsw i32 %24, 16
  %26 = or i32 %21, %25
  %27 = getelementptr inbounds i8, i8* %13, i64 11
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = shl nuw i32 %29, 24
  %31 = or i32 %26, %30
  %32 = add nsw i32 %31, 1
  br i1 %6, label %33, label %36

33:                                               ; preds = %12
  %34 = getelementptr inbounds %"class.leveldb::WriteBatch", %"class.leveldb::WriteBatch"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  br label %38

36:                                               ; preds = %12
  %37 = bitcast %"class.leveldb::WriteBatch"* %0 to i8*
  br label %38

38:                                               ; preds = %33, %36
  %39 = phi i8* [ %35, %33 ], [ %37, %36 ]
  %40 = getelementptr inbounds i8, i8* %39, i64 8
  %41 = trunc i32 %32 to i8
  store i8 %41, i8* %40, align 1
  %42 = lshr i32 %32, 8
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds i8, i8* %39, i64 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %32, 16
  %46 = trunc i32 %45 to i8
  %47 = getelementptr inbounds i8, i8* %39, i64 10
  store i8 %46, i8* %47, align 1
  %48 = lshr i32 %32, 24
  %49 = trunc i32 %48 to i8
  %50 = getelementptr inbounds i8, i8* %39, i64 11
  store i8 %49, i8* %50, align 1
  %51 = getelementptr inbounds %"class.leveldb::WriteBatch", %"class.leveldb::WriteBatch"* %0, i64 0, i32 0
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* %51, i8 signext 0) #11
  tail call void @_ZN7leveldb22PutLengthPrefixedSliceEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKNS_5SliceE(%"class.std::__1::basic_string"* %51, %"class.leveldb::Slice"* dereferenceable(16) %1) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7leveldb10WriteBatch6AppendERKS0_(%"class.leveldb::WriteBatch"*, %"class.leveldb::WriteBatch"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN7leveldb18WriteBatchInternal6AppendEPNS_10WriteBatchEPKS1_(%"class.leveldb::WriteBatch"* %0, %"class.leveldb::WriteBatch"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7leveldb18WriteBatchInternal6AppendEPNS_10WriteBatchEPKS1_(%"class.leveldb::WriteBatch"*, %"class.leveldb::WriteBatch"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.leveldb::WriteBatch"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.leveldb::WriteBatch", %"class.leveldb::WriteBatch"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  br label %12

10:                                               ; preds = %2
  %11 = bitcast %"class.leveldb::WriteBatch"* %0 to i8*
  br label %12

12:                                               ; preds = %7, %10
  %13 = phi i8* [ %9, %7 ], [ %11, %10 ]
  %14 = getelementptr inbounds i8, i8* %13, i64 8
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i32
  %17 = getelementptr inbounds i8, i8* %13, i64 9
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i32
  %20 = shl nuw nsw i32 %19, 8
  %21 = or i32 %20, %16
  %22 = getelementptr inbounds i8, i8* %13, i64 10
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  %25 = shl nuw nsw i32 %24, 16
  %26 = or i32 %21, %25
  %27 = getelementptr inbounds i8, i8* %13, i64 11
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = shl nuw i32 %29, 24
  %31 = or i32 %26, %30
  %32 = bitcast %"class.leveldb::WriteBatch"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %12
  %37 = getelementptr inbounds %"class.leveldb::WriteBatch", %"class.leveldb::WriteBatch"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  br label %41

39:                                               ; preds = %12
  %40 = bitcast %"class.leveldb::WriteBatch"* %1 to i8*
  br label %41

41:                                               ; preds = %36, %39
  %42 = phi i8* [ %38, %36 ], [ %40, %39 ]
  %43 = getelementptr inbounds i8, i8* %42, i64 8
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  %46 = getelementptr inbounds i8, i8* %42, i64 9
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = shl nuw nsw i32 %48, 8
  %50 = or i32 %49, %45
  %51 = getelementptr inbounds i8, i8* %42, i64 10
  %52 = load i8, i8* %51, align 1
  %53 = zext i8 %52 to i32
  %54 = shl nuw nsw i32 %53, 16
  %55 = or i32 %50, %54
  %56 = getelementptr inbounds i8, i8* %42, i64 11
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i32
  %59 = shl nuw i32 %58, 24
  %60 = or i32 %55, %59
  %61 = add nsw i32 %60, %31
  br i1 %6, label %62, label %65

62:                                               ; preds = %41
  %63 = getelementptr inbounds %"class.leveldb::WriteBatch", %"class.leveldb::WriteBatch"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  br label %67

65:                                               ; preds = %41
  %66 = bitcast %"class.leveldb::WriteBatch"* %0 to i8*
  br label %67

67:                                               ; preds = %62, %65
  %68 = phi i8* [ %64, %62 ], [ %66, %65 ]
  %69 = getelementptr inbounds i8, i8* %68, i64 8
  %70 = trunc i32 %61 to i8
  store i8 %70, i8* %69, align 1
  %71 = lshr i32 %61, 8
  %72 = trunc i32 %71 to i8
  %73 = getelementptr inbounds i8, i8* %68, i64 9
  store i8 %72, i8* %73, align 1
  %74 = lshr i32 %61, 16
  %75 = trunc i32 %74 to i8
  %76 = getelementptr inbounds i8, i8* %68, i64 10
  store i8 %75, i8* %76, align 1
  %77 = lshr i32 %61, 24
  %78 = trunc i32 %77 to i8
  %79 = getelementptr inbounds i8, i8* %68, i64 11
  store i8 %78, i8* %79, align 1
  %80 = getelementptr inbounds %"class.leveldb::WriteBatch", %"class.leveldb::WriteBatch"* %0, i64 0, i32 0
  %81 = load i8, i8* %33, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %67
  %84 = getelementptr inbounds %"class.leveldb::WriteBatch", %"class.leveldb::WriteBatch"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  %86 = getelementptr inbounds %"class.leveldb::WriteBatch", %"class.leveldb::WriteBatch"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %87 = load i64, i64* %86, align 8
  br label %91

88:                                               ; preds = %67
  %89 = bitcast %"class.leveldb::WriteBatch"* %1 to i8*
  %90 = zext i8 %81 to i64
  br label %91

91:                                               ; preds = %83, %88
  %92 = phi i8* [ %85, %83 ], [ %89, %88 ]
  %93 = phi i64 [ %87, %83 ], [ %90, %88 ]
  %94 = getelementptr inbounds i8, i8* %92, i64 12
  %95 = add i64 %93, -12
  %96 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %80, i8* %94, i64 %95) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7leveldb18WriteBatchInternal10InsertIntoEPKNS_10WriteBatchEPNS_8MemTableE(%"class.leveldb::Status"* noalias sret, %"class.leveldb::WriteBatch"*, %"class.leveldb::MemTable"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.leveldb::(anonymous namespace)::MemTableInserter", align 8
  %5 = bitcast %"class.leveldb::(anonymous namespace)::MemTableInserter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::MemTableInserter", %"class.leveldb::(anonymous namespace)::MemTableInserter"* %4, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::MemTableInserter", %"class.leveldb::(anonymous namespace)::MemTableInserter"* %4, i64 0, i32 1
  %8 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::MemTableInserter", %"class.leveldb::(anonymous namespace)::MemTableInserter"* %4, i64 0, i32 2
  %9 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::MemTableInserter", %"class.leveldb::(anonymous namespace)::MemTableInserter"* %4, i64 0, i32 1
  %10 = bitcast i64* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 16, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN7leveldb12_GLOBAL__N_116MemTableInserterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %11 = bitcast %"class.leveldb::WriteBatch"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.leveldb::WriteBatch", %"class.leveldb::WriteBatch"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  br label %20

18:                                               ; preds = %3
  %19 = bitcast %"class.leveldb::WriteBatch"* %1 to i8*
  br label %20

20:                                               ; preds = %15, %18
  %21 = phi i8* [ %17, %15 ], [ %19, %18 ]
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds i8, i8* %21, i64 1
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i64
  %27 = shl nuw nsw i64 %26, 8
  %28 = or i64 %27, %23
  %29 = getelementptr inbounds i8, i8* %21, i64 2
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = shl nuw nsw i64 %31, 16
  %33 = or i64 %28, %32
  %34 = getelementptr inbounds i8, i8* %21, i64 3
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i64
  %37 = shl nuw nsw i64 %36, 24
  %38 = or i64 %33, %37
  %39 = getelementptr inbounds i8, i8* %21, i64 4
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i64
  %42 = shl nuw nsw i64 %41, 32
  %43 = or i64 %38, %42
  %44 = getelementptr inbounds i8, i8* %21, i64 5
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i64
  %47 = shl nuw nsw i64 %46, 40
  %48 = or i64 %43, %47
  %49 = getelementptr inbounds i8, i8* %21, i64 6
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i64
  %52 = shl nuw nsw i64 %51, 48
  %53 = or i64 %48, %52
  %54 = getelementptr inbounds i8, i8* %21, i64 7
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i64
  %57 = shl nuw i64 %56, 56
  %58 = or i64 %53, %57
  store i64 %58, i64* %7, align 8
  store %"class.leveldb::MemTable"* %2, %"class.leveldb::MemTable"** %8, align 8
  %59 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::MemTableInserter", %"class.leveldb::(anonymous namespace)::MemTableInserter"* %4, i64 0, i32 0
  call void @_ZNK7leveldb10WriteBatch7IterateEPNS0_7HandlerE(%"class.leveldb::Status"* sret %0, %"class.leveldb::WriteBatch"* %1, %"class.leveldb::WriteBatch::Handler"* nonnull %59)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #11
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN7leveldb10WriteBatch7HandlerD2Ev(%"class.leveldb::WriteBatch::Handler"* nocapture) unnamed_addr #7 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7leveldb18WriteBatchInternal11SetContentsEPNS_10WriteBatchERKNS_5SliceE(%"class.leveldb::WriteBatch"*, %"class.leveldb::Slice"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %1, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %1, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = tail call i1 @llvm.is.constant.i64(i64 %6) #11
  %8 = icmp ult i64 %6, 23
  %9 = and i1 %8, %7
  br i1 %9, label %10, label %28

10:                                               ; preds = %2
  %11 = bitcast %"class.leveldb::WriteBatch"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %19

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.leveldb::WriteBatch", %"class.leveldb::WriteBatch"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %6, i64* %16, align 8
  %17 = getelementptr inbounds %"class.leveldb::WriteBatch", %"class.leveldb::WriteBatch"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  br label %22

19:                                               ; preds = %10
  %20 = trunc i64 %6 to i8
  store i8 %20, i8* %12, align 1
  %21 = bitcast %"class.leveldb::WriteBatch"* %0 to i8*
  br label %22

22:                                               ; preds = %19, %15
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = icmp eq i64 %6, 0
  br i1 %24, label %26, label %25

25:                                               ; preds = %22
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %23, i8* align 1 %4, i64 %6, i1 false) #11
  br label %26

26:                                               ; preds = %25, %22
  %27 = getelementptr inbounds i8, i8* %23, i64 %6
  store i8 0, i8* %27, align 1
  br label %31

28:                                               ; preds = %2
  %29 = getelementptr inbounds %"class.leveldb::WriteBatch", %"class.leveldb::WriteBatch"* %0, i64 0, i32 0
  %30 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %29, i8* %4, i64 %6) #11
  br label %31

31:                                               ; preds = %26, %28
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #5

declare void @__cxa_pure_virtual() unnamed_addr

declare void @_ZN7leveldb6StatusC1ENS0_4CodeERKNS_5SliceES4_(%"class.leveldb::Status"*, i32, %"class.leveldb::Slice"* dereferenceable(16), %"class.leveldb::Slice"* dereferenceable(16)) unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN7leveldb12_GLOBAL__N_116MemTableInserterD0Ev(%"class.leveldb::(anonymous namespace)::MemTableInserter"*) unnamed_addr #8 align 2 {
  %2 = bitcast %"class.leveldb::(anonymous namespace)::MemTableInserter"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7leveldb12_GLOBAL__N_116MemTableInserter3PutERKNS_5SliceES4_(%"class.leveldb::(anonymous namespace)::MemTableInserter"* nocapture, %"class.leveldb::Slice"* dereferenceable(16), %"class.leveldb::Slice"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::MemTableInserter", %"class.leveldb::(anonymous namespace)::MemTableInserter"* %0, i64 0, i32 2
  %5 = load %"class.leveldb::MemTable"*, %"class.leveldb::MemTable"** %4, align 8
  %6 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::MemTableInserter", %"class.leveldb::(anonymous namespace)::MemTableInserter"* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  tail call void @_ZN7leveldb8MemTable3AddEmNS_9ValueTypeERKNS_5SliceES4_(%"class.leveldb::MemTable"* %5, i64 %7, i32 1, %"class.leveldb::Slice"* dereferenceable(16) %1, %"class.leveldb::Slice"* dereferenceable(16) %2) #11
  %8 = load i64, i64* %6, align 8
  %9 = add i64 %8, 1
  store i64 %9, i64* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7leveldb12_GLOBAL__N_116MemTableInserter6DeleteERKNS_5SliceE(%"class.leveldb::(anonymous namespace)::MemTableInserter"* nocapture, %"class.leveldb::Slice"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.leveldb::Slice", align 8
  %4 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::MemTableInserter", %"class.leveldb::(anonymous namespace)::MemTableInserter"* %0, i64 0, i32 2
  %5 = load %"class.leveldb::MemTable"*, %"class.leveldb::MemTable"** %4, align 8
  %6 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::MemTableInserter", %"class.leveldb::(anonymous namespace)::MemTableInserter"* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.leveldb::Slice"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #11
  %9 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %3, i64 0, i32 0
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8** %9, align 8
  %10 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %3, i64 0, i32 1
  store i64 0, i64* %10, align 8
  call void @_ZN7leveldb8MemTable3AddEmNS_9ValueTypeERKNS_5SliceES4_(%"class.leveldb::MemTable"* %5, i64 %7, i32 0, %"class.leveldb::Slice"* dereferenceable(16) %1, %"class.leveldb::Slice"* nonnull dereferenceable(16) %3) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #11
  %11 = load i64, i64* %6, align 8
  %12 = add i64 %11, 1
  store i64 %12, i64* %6, align 8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

declare void @_ZN7leveldb8MemTable3AddEmNS_9ValueTypeERKNS_5SliceES4_(%"class.leveldb::MemTable"*, i64, i32, %"class.leveldb::Slice"* dereferenceable(16), %"class.leveldb::Slice"* dereferenceable(16)) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #10

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #4

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"*, i64, i8 signext) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN7leveldb6Status2OKEv: argument 0"}
!4 = distinct !{!4, !"_ZN7leveldb6Status2OKEv"}
