; ModuleID = '../../gpu/command_buffer/service/shared_image_representation_dawn_ozone.cc'
source_filename = "../../gpu/command_buffer/service/shared_image_representation_dawn_ozone.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gpu::SharedImageRepresentationDawnOzone" = type { %"class.gpu::SharedImageRepresentationDawn.base", %struct.WGPUDeviceImpl*, i32, %class.scoped_refptr.20, %struct.WGPUTextureImpl*, %class.scoped_refptr.22 }
%"class.gpu::SharedImageRepresentationDawn.base" = type { %"class.gpu::SharedImageRepresentation.base" }
%"class.gpu::SharedImageRepresentation.base" = type <{ i32 (...)**, %"class.gpu::SharedImageManager"*, %"class.gpu::SharedImageBacking"*, %"class.gpu::MemoryTypeTracker"*, i8, i8 }>
%class.scoped_refptr.20 = type { %"class.gfx::NativePixmap"* }
%"class.gfx::NativePixmap" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.21", [4 x i8] }>
%"class.base::RefCountedThreadSafe.21" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.14" }
%"struct.std::__1::__atomic_base.14" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.WGPUTextureImpl = type opaque
%class.scoped_refptr.22 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.23", %struct.DawnProcTable }
%"class.base::RefCountedThreadSafe.23" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%struct.DawnProcTable = type { void ()* (%struct.WGPUDeviceImpl*, i8*)*, %struct.WGPUInstanceImpl* (%struct.WGPUInstanceDescriptor*)*, void (%struct.WGPUBindGroupImpl*)*, void (%struct.WGPUBindGroupImpl*)*, void (%struct.WGPUBindGroupLayoutImpl*)*, void (%struct.WGPUBindGroupLayoutImpl*)*, void (%struct.WGPUBufferImpl*)*, i8* (%struct.WGPUBufferImpl*, i64, i64)*, i8* (%struct.WGPUBufferImpl*, i64, i64)*, void (%struct.WGPUBufferImpl*, i32, i64, i64, void (i32, i8*)*, i8*)*, void (%struct.WGPUBufferImpl*)*, void (%struct.WGPUBufferImpl*)*, void (%struct.WGPUBufferImpl*)*, void (%struct.WGPUCommandBufferImpl*)*, void (%struct.WGPUCommandBufferImpl*)*, %struct.WGPUComputePassEncoderImpl* (%struct.WGPUCommandEncoderImpl*, %struct.WGPUComputePassDescriptor*)*, %struct.WGPURenderPassEncoderImpl* (%struct.WGPUCommandEncoderImpl*, %struct.WGPURenderPassDescriptor*)*, void (%struct.WGPUCommandEncoderImpl*, %struct.WGPUBufferImpl*, i64, %struct.WGPUBufferImpl*, i64, i64)*, void (%struct.WGPUCommandEncoderImpl*, %struct.WGPUImageCopyBuffer*, %struct.WGPUImageCopyTexture*, %struct.WGPUExtent3D*)*, void (%struct.WGPUCommandEncoderImpl*, %struct.WGPUImageCopyTexture*, %struct.WGPUImageCopyBuffer*, %struct.WGPUExtent3D*)*, void (%struct.WGPUCommandEncoderImpl*, %struct.WGPUImageCopyTexture*, %struct.WGPUImageCopyTexture*, %struct.WGPUExtent3D*)*, %struct.WGPUCommandBufferImpl* (%struct.WGPUCommandEncoderImpl*, %struct.WGPUCommandBufferDescriptor*)*, void (%struct.WGPUCommandEncoderImpl*, i8*)*, void (%struct.WGPUCommandEncoderImpl*, i8*)*, void (%struct.WGPUCommandEncoderImpl*)*, void (%struct.WGPUCommandEncoderImpl*, i8*)*, void (%struct.WGPUCommandEncoderImpl*, %struct.WGPUQuerySetImpl*, i32, i32, %struct.WGPUBufferImpl*, i64)*, void (%struct.WGPUCommandEncoderImpl*, %struct.WGPUQuerySetImpl*, i32)*, void (%struct.WGPUCommandEncoderImpl*)*, void (%struct.WGPUCommandEncoderImpl*)*, void (%struct.WGPUComputePassEncoderImpl*, i32, i32, i32)*, void (%struct.WGPUComputePassEncoderImpl*, %struct.WGPUBufferImpl*, i64)*, void (%struct.WGPUComputePassEncoderImpl*)*, void (%struct.WGPUComputePassEncoderImpl*, i8*)*, void (%struct.WGPUComputePassEncoderImpl*)*, void (%struct.WGPUComputePassEncoderImpl*, i8*)*, void (%struct.WGPUComputePassEncoderImpl*, i32, %struct.WGPUBindGroupImpl*, i32, i32*)*, void (%struct.WGPUComputePassEncoderImpl*, %struct.WGPUComputePipelineImpl*)*, void (%struct.WGPUComputePassEncoderImpl*, %struct.WGPUQuerySetImpl*, i32)*, void (%struct.WGPUComputePassEncoderImpl*)*, void (%struct.WGPUComputePassEncoderImpl*)*, %struct.WGPUBindGroupLayoutImpl* (%struct.WGPUComputePipelineImpl*, i32)*, void (%struct.WGPUComputePipelineImpl*)*, void (%struct.WGPUComputePipelineImpl*)*, %struct.WGPUBindGroupImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUBindGroupDescriptor*)*, %struct.WGPUBindGroupLayoutImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUBindGroupLayoutDescriptor*)*, %struct.WGPUBufferImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUBufferDescriptor*)*, %struct.WGPUCommandEncoderImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUCommandEncoderDescriptor*)*, %struct.WGPUComputePipelineImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUComputePipelineDescriptor*)*, void (%struct.WGPUDeviceImpl*, %struct.WGPUComputePipelineDescriptor*, void (i32, %struct.WGPUComputePipelineImpl*, i8*, i8*)*, i8*)*, %struct.WGPUBufferImpl* (%struct.WGPUDeviceImpl*)*, %struct.WGPUExternalTextureImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUExternalTextureDescriptor*)*, %struct.WGPUPipelineLayoutImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUPipelineLayoutDescriptor*)*, %struct.WGPUQuerySetImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUQuerySetDescriptor*)*, %struct.WGPURenderBundleEncoderImpl* (%struct.WGPUDeviceImpl*, %struct.WGPURenderBundleEncoderDescriptor*)*, %struct.WGPURenderPipelineImpl* (%struct.WGPUDeviceImpl*, %struct.WGPURenderPipelineDescriptor*)*, %struct.WGPURenderPipelineImpl* (%struct.WGPUDeviceImpl*, %struct.WGPURenderPipelineDescriptor*)*, void (%struct.WGPUDeviceImpl*, %struct.WGPURenderPipelineDescriptor*, void (i32, %struct.WGPURenderPipelineImpl*, i8*, i8*)*, i8*)*, %struct.WGPUSamplerImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUSamplerDescriptor*)*, %struct.WGPUShaderModuleImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUShaderModuleDescriptor*)*, %struct.WGPUSwapChainImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUSurfaceImpl*, %struct.WGPUSwapChainDescriptor*)*, %struct.WGPUTextureImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUTextureDescriptor*)*, %struct.WGPUQueueImpl* (%struct.WGPUDeviceImpl*)*, void (%struct.WGPUDeviceImpl*, i32, i8*)*, void (%struct.WGPUDeviceImpl*)*, i1 (%struct.WGPUDeviceImpl*, void (i32, i8*, i8*)*, i8*)*, void (%struct.WGPUDeviceImpl*, i32)*, void (%struct.WGPUDeviceImpl*, void (i8*, i8*)*, i8*)*, void (%struct.WGPUDeviceImpl*, void (i32, i8*, i8*)*, i8*)*, void (%struct.WGPUDeviceImpl*)*, void (%struct.WGPUDeviceImpl*)*, void (%struct.WGPUDeviceImpl*)*, void (%struct.WGPUExternalTextureImpl*)*, void (%struct.WGPUExternalTextureImpl*)*, void (%struct.WGPUExternalTextureImpl*)*, %struct.WGPUSurfaceImpl* (%struct.WGPUInstanceImpl*, %struct.WGPUSurfaceDescriptor*)*, void (%struct.WGPUInstanceImpl*)*, void (%struct.WGPUInstanceImpl*)*, void (%struct.WGPUPipelineLayoutImpl*)*, void (%struct.WGPUPipelineLayoutImpl*)*, void (%struct.WGPUQuerySetImpl*)*, void (%struct.WGPUQuerySetImpl*)*, void (%struct.WGPUQuerySetImpl*)*, void (%struct.WGPUQueueImpl*, %struct.WGPUImageCopyTexture*, %struct.WGPUImageCopyTexture*, %struct.WGPUExtent3D*, %struct.WGPUCopyTextureForBrowserOptions*)*, void (%struct.WGPUQueueImpl*, i64, void (i32, i8*)*, i8*)*, void (%struct.WGPUQueueImpl*, i32, %struct.WGPUCommandBufferImpl**)*, void (%struct.WGPUQueueImpl*, %struct.WGPUBufferImpl*, i64, i8*, i64)*, void (%struct.WGPUQueueImpl*, %struct.WGPUImageCopyTexture*, i8*, i64, %struct.WGPUTextureDataLayout*, %struct.WGPUExtent3D*)*, void (%struct.WGPUQueueImpl*)*, void (%struct.WGPUQueueImpl*)*, void (%struct.WGPURenderBundleImpl*)*, void (%struct.WGPURenderBundleImpl*)*, void (%struct.WGPURenderBundleEncoderImpl*, i32, i32, i32, i32)*, void (%struct.WGPURenderBundleEncoderImpl*, i32, i32, i32, i32, i32)*, void (%struct.WGPURenderBundleEncoderImpl*, %struct.WGPUBufferImpl*, i64)*, void (%struct.WGPURenderBundleEncoderImpl*, %struct.WGPUBufferImpl*, i64)*, %struct.WGPURenderBundleImpl* (%struct.WGPURenderBundleEncoderImpl*, %struct.WGPURenderBundleDescriptor*)*, void (%struct.WGPURenderBundleEncoderImpl*, i8*)*, void (%struct.WGPURenderBundleEncoderImpl*)*, void (%struct.WGPURenderBundleEncoderImpl*, i8*)*, void (%struct.WGPURenderBundleEncoderImpl*, i32, %struct.WGPUBindGroupImpl*, i32, i32*)*, void (%struct.WGPURenderBundleEncoderImpl*, %struct.WGPUBufferImpl*, i32, i64, i64)*, void (%struct.WGPURenderBundleEncoderImpl*, %struct.WGPURenderPipelineImpl*)*, void (%struct.WGPURenderBundleEncoderImpl*, i32, %struct.WGPUBufferImpl*, i64, i64)*, void (%struct.WGPURenderBundleEncoderImpl*)*, void (%struct.WGPURenderBundleEncoderImpl*)*, void (%struct.WGPURenderPassEncoderImpl*, i32)*, void (%struct.WGPURenderPassEncoderImpl*, i32, i32, i32, i32)*, void (%struct.WGPURenderPassEncoderImpl*, i32, i32, i32, i32, i32)*, void (%struct.WGPURenderPassEncoderImpl*, %struct.WGPUBufferImpl*, i64)*, void (%struct.WGPURenderPassEncoderImpl*, %struct.WGPUBufferImpl*, i64)*, void (%struct.WGPURenderPassEncoderImpl*)*, void (%struct.WGPURenderPassEncoderImpl*)*, void (%struct.WGPURenderPassEncoderImpl*, i32, %struct.WGPURenderBundleImpl**)*, void (%struct.WGPURenderPassEncoderImpl*, i8*)*, void (%struct.WGPURenderPassEncoderImpl*)*, void (%struct.WGPURenderPassEncoderImpl*, i8*)*, void (%struct.WGPURenderPassEncoderImpl*, i32, %struct.WGPUBindGroupImpl*, i32, i32*)*, void (%struct.WGPURenderPassEncoderImpl*, %struct.WGPUColor*)*, void (%struct.WGPURenderPassEncoderImpl*, %struct.WGPUColor*)*, void (%struct.WGPURenderPassEncoderImpl*, %struct.WGPUBufferImpl*, i32, i64, i64)*, void (%struct.WGPURenderPassEncoderImpl*, %struct.WGPURenderPipelineImpl*)*, void (%struct.WGPURenderPassEncoderImpl*, i32, i32, i32, i32)*, void (%struct.WGPURenderPassEncoderImpl*, i32)*, void (%struct.WGPURenderPassEncoderImpl*, i32, %struct.WGPUBufferImpl*, i64, i64)*, void (%struct.WGPURenderPassEncoderImpl*, float, float, float, float, float, float)*, void (%struct.WGPURenderPassEncoderImpl*, %struct.WGPUQuerySetImpl*, i32)*, void (%struct.WGPURenderPassEncoderImpl*)*, void (%struct.WGPURenderPassEncoderImpl*)*, %struct.WGPUBindGroupLayoutImpl* (%struct.WGPURenderPipelineImpl*, i32)*, void (%struct.WGPURenderPipelineImpl*)*, void (%struct.WGPURenderPipelineImpl*)*, void (%struct.WGPUSamplerImpl*)*, void (%struct.WGPUSamplerImpl*)*, void (%struct.WGPUShaderModuleImpl*, void (i32, %struct.WGPUCompilationInfo*, i8*)*, i8*)*, void (%struct.WGPUShaderModuleImpl*)*, void (%struct.WGPUShaderModuleImpl*)*, void (%struct.WGPUSurfaceImpl*)*, void (%struct.WGPUSurfaceImpl*)*, void (%struct.WGPUSwapChainImpl*, i32, i32, i32, i32)*, %struct.WGPUTextureViewImpl* (%struct.WGPUSwapChainImpl*)*, void (%struct.WGPUSwapChainImpl*)*, void (%struct.WGPUSwapChainImpl*)*, void (%struct.WGPUSwapChainImpl*)*, %struct.WGPUTextureViewImpl* (%struct.WGPUTextureImpl*, %struct.WGPUTextureViewDescriptor*)*, void (%struct.WGPUTextureImpl*)*, void (%struct.WGPUTextureImpl*)*, void (%struct.WGPUTextureImpl*)*, void (%struct.WGPUTextureViewImpl*)*, void (%struct.WGPUTextureViewImpl*)* }
%struct.WGPUInstanceImpl = type opaque
%struct.WGPUInstanceDescriptor = type { %struct.WGPUChainedStruct* }
%struct.WGPUChainedStruct = type { %struct.WGPUChainedStruct*, i32 }
%struct.WGPUBindGroupImpl = type opaque
%struct.WGPUBindGroupLayoutImpl = type opaque
%struct.WGPUBufferImpl = type opaque
%struct.WGPUCommandBufferImpl = type opaque
%struct.WGPUComputePassEncoderImpl = type opaque
%struct.WGPUCommandEncoderImpl = type opaque
%struct.WGPUComputePassDescriptor = type { %struct.WGPUChainedStruct*, i8* }
%struct.WGPURenderPassEncoderImpl = type opaque
%struct.WGPURenderPassDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, %struct.WGPURenderPassColorAttachment*, %struct.WGPURenderPassDepthStencilAttachment*, %struct.WGPUQuerySetImpl* }
%struct.WGPURenderPassColorAttachment = type { %struct.WGPUTextureViewImpl*, %struct.WGPUTextureViewImpl*, i32, i32, %struct.WGPUColor, %struct.WGPUTextureViewImpl* }
%struct.WGPUColor = type { double, double, double, double }
%struct.WGPUTextureViewImpl = type opaque
%struct.WGPURenderPassDepthStencilAttachment = type { %struct.WGPUTextureViewImpl*, i32, i32, float, i8, i32, i32, i32, i8, %struct.WGPUTextureViewImpl* }
%struct.WGPUQuerySetImpl = type opaque
%struct.WGPUImageCopyBuffer = type { %struct.WGPUChainedStruct*, %struct.WGPUTextureDataLayout, %struct.WGPUBufferImpl* }
%struct.WGPUTextureDataLayout = type { %struct.WGPUChainedStruct*, i64, i32, i32 }
%struct.WGPUImageCopyTexture = type { %struct.WGPUChainedStruct*, %struct.WGPUTextureImpl*, i32, %struct.WGPUOrigin3D, i32 }
%struct.WGPUOrigin3D = type { i32, i32, i32 }
%struct.WGPUExtent3D = type { i32, i32, i32 }
%struct.WGPUCommandBufferDescriptor = type { %struct.WGPUChainedStruct*, i8* }
%struct.WGPUComputePipelineImpl = type opaque
%struct.WGPUBindGroupDescriptor = type { %struct.WGPUChainedStruct*, i8*, %struct.WGPUBindGroupLayoutImpl*, i32, %struct.WGPUBindGroupEntry* }
%struct.WGPUBindGroupEntry = type { i32, %struct.WGPUBufferImpl*, i64, i64, %struct.WGPUSamplerImpl*, %struct.WGPUTextureViewImpl* }
%struct.WGPUSamplerImpl = type opaque
%struct.WGPUBindGroupLayoutDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, %struct.WGPUBindGroupLayoutEntry* }
%struct.WGPUBindGroupLayoutEntry = type { %struct.WGPUChainedStruct*, i32, i32, %struct.WGPUBufferBindingLayout, %struct.WGPUSamplerBindingLayout, %struct.WGPUTextureBindingLayout, %struct.WGPUStorageTextureBindingLayout }
%struct.WGPUBufferBindingLayout = type { %struct.WGPUChainedStruct*, i32, i8, i64 }
%struct.WGPUSamplerBindingLayout = type { %struct.WGPUChainedStruct*, i32 }
%struct.WGPUTextureBindingLayout = type { %struct.WGPUChainedStruct*, i32, i32, i8 }
%struct.WGPUStorageTextureBindingLayout = type { %struct.WGPUChainedStruct*, i32, i32, i32 }
%struct.WGPUBufferDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, i64, i8 }
%struct.WGPUCommandEncoderDescriptor = type { %struct.WGPUChainedStruct*, i8* }
%struct.WGPUComputePipelineDescriptor = type { %struct.WGPUChainedStruct*, i8*, %struct.WGPUPipelineLayoutImpl*, %struct.WGPUProgrammableStageDescriptor }
%struct.WGPUPipelineLayoutImpl = type opaque
%struct.WGPUProgrammableStageDescriptor = type { %struct.WGPUChainedStruct*, %struct.WGPUShaderModuleImpl*, i8* }
%struct.WGPUShaderModuleImpl = type opaque
%struct.WGPUExternalTextureImpl = type opaque
%struct.WGPUExternalTextureDescriptor = type { %struct.WGPUChainedStruct*, %struct.WGPUTextureViewImpl*, i32 }
%struct.WGPUPipelineLayoutDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, %struct.WGPUBindGroupLayoutImpl** }
%struct.WGPUQuerySetDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, i32, i32*, i32 }
%struct.WGPURenderBundleEncoderImpl = type opaque
%struct.WGPURenderBundleEncoderDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, i32*, i32, i32 }
%struct.WGPURenderPipelineImpl = type opaque
%struct.WGPURenderPipelineDescriptor = type { %struct.WGPUChainedStruct*, i8*, %struct.WGPUPipelineLayoutImpl*, %struct.WGPUVertexState, %struct.WGPUPrimitiveState, %struct.WGPUDepthStencilState*, %struct.WGPUMultisampleState, %struct.WGPUFragmentState* }
%struct.WGPUVertexState = type { %struct.WGPUChainedStruct*, %struct.WGPUShaderModuleImpl*, i8*, i32, %struct.WGPUVertexBufferLayout* }
%struct.WGPUVertexBufferLayout = type { i64, i32, i32, %struct.WGPUVertexAttribute* }
%struct.WGPUVertexAttribute = type { i32, i64, i32 }
%struct.WGPUPrimitiveState = type { %struct.WGPUChainedStruct*, i32, i32, i32, i32 }
%struct.WGPUDepthStencilState = type { %struct.WGPUChainedStruct*, i32, i8, i32, %struct.WGPUStencilFaceState, %struct.WGPUStencilFaceState, i32, i32, i32, float, float }
%struct.WGPUStencilFaceState = type { i32, i32, i32, i32 }
%struct.WGPUMultisampleState = type { %struct.WGPUChainedStruct*, i32, i32, i8 }
%struct.WGPUFragmentState = type { %struct.WGPUChainedStruct*, %struct.WGPUShaderModuleImpl*, i8*, i32, %struct.WGPUColorTargetState* }
%struct.WGPUColorTargetState = type { %struct.WGPUChainedStruct*, i32, %struct.WGPUBlendState*, i32 }
%struct.WGPUBlendState = type { %struct.WGPUBlendComponent, %struct.WGPUBlendComponent }
%struct.WGPUBlendComponent = type { i32, i32, i32 }
%struct.WGPUSamplerDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, i32, i32, i32, i32, i32, float, float, i32, i16 }
%struct.WGPUShaderModuleDescriptor = type { %struct.WGPUChainedStruct*, i8* }
%struct.WGPUSwapChainImpl = type opaque
%struct.WGPUSurfaceImpl = type opaque
%struct.WGPUSwapChainDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, i32, i32, i32, i32, i64 }
%struct.WGPUTextureDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, i32, %struct.WGPUExtent3D, i32, i32, i32 }
%struct.WGPUQueueImpl = type opaque
%struct.WGPUSurfaceDescriptor = type { %struct.WGPUChainedStruct*, i8* }
%struct.WGPUCopyTextureForBrowserOptions = type { %struct.WGPUChainedStruct*, i8 }
%struct.WGPURenderBundleImpl = type opaque
%struct.WGPURenderBundleDescriptor = type { %struct.WGPUChainedStruct*, i8* }
%struct.WGPUCompilationInfo = type { i32, %struct.WGPUCompilationMessage* }
%struct.WGPUCompilationMessage = type { i8*, i32, i64, i64, i64, i64 }
%struct.WGPUTextureViewDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, i32, i32, i32, i32, i32, i32 }
%"class.gpu::SharedImageManager" = type <{ %"class.absl::optional", %"class.base::internal::flat_tree", i8, [7 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::Lock" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::unique_ptr" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::unique_ptr"* }
%"class.gpu::SharedImageBacking" = type { i32 (...)**, %"class.absl::optional", %"struct.gpu::Mailbox", i32, %"class.gfx::Size", %"class.gfx::ColorSpace", i32, i32, i32, i64, %"class.gpu::SharedImageFactory"*, i8, %"class.absl::optional.1", %"class.std::__1::vector.6" }
%"struct.gpu::Mailbox" = type { [16 x i8] }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.gpu::SharedImageFactory" = type opaque
%"class.absl::optional.1" = type { %"class.absl::optional_internal::optional_data.2" }
%"class.absl::optional_internal::optional_data.2" = type { %"class.absl::optional_internal::optional_data_base.3" }
%"class.absl::optional_internal::optional_data_base.3" = type { %"class.absl::optional_internal::optional_data_dtor_base.4" }
%"class.absl::optional_internal::optional_data_dtor_base.4" = type { i8, %union.anon.5 }
%union.anon.5 = type { %"class.gpu::SharedImageBacking::ScopedWriteUMA" }
%"class.gpu::SharedImageBacking::ScopedWriteUMA" = type { i8 }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { %"class.gpu::SharedImageRepresentation"**, %"class.gpu::SharedImageRepresentation"**, %"class.std::__1::__compressed_pair.8" }
%"class.gpu::SharedImageRepresentation" = type <{ i32 (...)**, %"class.gpu::SharedImageManager"*, %"class.gpu::SharedImageBacking"*, %"class.gpu::MemoryTypeTracker"*, i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.gpu::SharedImageRepresentation"** }
%"class.gpu::MemoryTypeTracker" = type { %"class.gpu::MemoryTracker"*, i64, %"class.base::Lock", %class.scoped_refptr, %"class.base::WeakPtrFactory" }
%"class.gpu::MemoryTracker" = type { i32 (...)** }
%class.scoped_refptr = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.13 }
%class.scoped_refptr.13 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.15" }
%"struct.std::__1::atomic.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__cxx_atomic_impl.18" }
%"struct.std::__1::__cxx_atomic_impl.18" = type { %"struct.std::__1::__cxx_atomic_base_impl.19" }
%"struct.std::__1::__cxx_atomic_base_impl.19" = type { i8 }
%struct.WGPUDeviceImpl = type opaque
%"struct.dawn_native::vulkan::ExternalImageDescriptorDmaBuf" = type { %"struct.dawn_native::vulkan::ExternalImageDescriptorFD", i32, i64 }
%"struct.dawn_native::vulkan::ExternalImageDescriptorFD" = type { %"struct.dawn_native::vulkan::ExternalImageDescriptorVk.base", i32, %"class.std::__1::vector.28" }
%"struct.dawn_native::vulkan::ExternalImageDescriptorVk.base" = type { %"struct.dawn_native::ExternalImageDescriptor.base", i32, i32 }
%"struct.dawn_native::ExternalImageDescriptor.base" = type <{ i32, [4 x i8], %struct.WGPUTextureDescriptor*, i8 }>
%"class.std::__1::vector.28" = type { %"class.std::__1::__vector_base.29" }
%"class.std::__1::__vector_base.29" = type { i32*, i32*, %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { i32* }
%"class.gpu::SharedImageBackingOzone" = type { %"class.gpu::ClearTrackingSharedImageBacking", i8, %"class.std::__1::unique_ptr.24", %class.scoped_refptr.20, %class.scoped_refptr.22 }
%"class.gpu::ClearTrackingSharedImageBacking" = type { %"class.gpu::SharedImageBacking", %"class.gfx::Rect" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.gpu::VaapiDependencies"* }
%"class.gpu::VaapiDependencies" = type { i32 (...)** }
%"struct.dawn_native::vulkan::ExternalImageDescriptorVk" = type { %"struct.dawn_native::ExternalImageDescriptor.base", i32, i32, [4 x i8] }
%"struct.dawn_native::vulkan::ExternalImageExportInfoOpaqueFD" = type { %"struct.dawn_native::vulkan::ExternalImageExportInfoFD" }
%"struct.dawn_native::vulkan::ExternalImageExportInfoFD" = type { %"struct.dawn_native::vulkan::ExternalImageExportInfoVk", %"class.std::__1::vector.28" }
%"struct.dawn_native::vulkan::ExternalImageExportInfoVk" = type { %"struct.dawn_native::ExternalImageExportInfo.base", i32, i32 }
%"struct.dawn_native::ExternalImageExportInfo.base" = type <{ i32, i8 }>
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIiNS_9allocatorIiEEE6assignIPKiEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_ = comdat any

@_ZTVN3gpu34SharedImageRepresentationDawnOzoneE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gpu::SharedImageRepresentationDawnOzone"*)* @_ZN3gpu34SharedImageRepresentationDawnOzoneD2Ev to i8*), i8* bitcast (void (%"class.gpu::SharedImageRepresentationDawnOzone"*)* @_ZN3gpu34SharedImageRepresentationDawnOzoneD0Ev to i8*), i8* bitcast (%struct.WGPUTextureImpl* (%"class.gpu::SharedImageRepresentationDawnOzone"*, i32)* @_ZN3gpu34SharedImageRepresentationDawnOzone11BeginAccessE16WGPUTextureUsage to i8*), i8* bitcast (void (%"class.gpu::SharedImageRepresentationDawnOzone"*)* @_ZN3gpu34SharedImageRepresentationDawnOzone9EndAccessEv to i8*)] }, align 8

@_ZN3gpu34SharedImageRepresentationDawnOzoneC1EPNS_18SharedImageManagerEPNS_18SharedImageBackingEPNS_17MemoryTypeTrackerEP14WGPUDeviceImpl17WGPUTextureFormat13scoped_refptrIN3gfx12NativePixmapEESA_IN4base14RefCountedDataI13DawnProcTableEEE = hidden unnamed_addr alias void (%"class.gpu::SharedImageRepresentationDawnOzone"*, %"class.gpu::SharedImageManager"*, %"class.gpu::SharedImageBacking"*, %"class.gpu::MemoryTypeTracker"*, %struct.WGPUDeviceImpl*, i32, i64, i64), void (%"class.gpu::SharedImageRepresentationDawnOzone"*, %"class.gpu::SharedImageManager"*, %"class.gpu::SharedImageBacking"*, %"class.gpu::MemoryTypeTracker"*, %struct.WGPUDeviceImpl*, i32, i64, i64)* @_ZN3gpu34SharedImageRepresentationDawnOzoneC2EPNS_18SharedImageManagerEPNS_18SharedImageBackingEPNS_17MemoryTypeTrackerEP14WGPUDeviceImpl17WGPUTextureFormat13scoped_refptrIN3gfx12NativePixmapEESA_IN4base14RefCountedDataI13DawnProcTableEEE
@_ZN3gpu34SharedImageRepresentationDawnOzoneD1Ev = hidden unnamed_addr alias void (%"class.gpu::SharedImageRepresentationDawnOzone"*), void (%"class.gpu::SharedImageRepresentationDawnOzone"*)* @_ZN3gpu34SharedImageRepresentationDawnOzoneD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu34SharedImageRepresentationDawnOzoneC2EPNS_18SharedImageManagerEPNS_18SharedImageBackingEPNS_17MemoryTypeTrackerEP14WGPUDeviceImpl17WGPUTextureFormat13scoped_refptrIN3gfx12NativePixmapEESA_IN4base14RefCountedDataI13DawnProcTableEEE(%"class.gpu::SharedImageRepresentationDawnOzone"*, %"class.gpu::SharedImageManager"*, %"class.gpu::SharedImageBacking"*, %"class.gpu::MemoryTypeTracker"*, %struct.WGPUDeviceImpl*, i32, i64, i64) unnamed_addr #0 align 2 {
  %9 = inttoptr i64 %6 to %"class.gfx::NativePixmap"*
  %10 = inttoptr i64 %7 to %"class.base::RefCountedData"*
  %11 = bitcast %"class.gpu::SharedImageRepresentationDawnOzone"* %0 to %"class.gpu::SharedImageRepresentation"*
  tail call void @_ZN3gpu25SharedImageRepresentationC2EPNS_18SharedImageManagerEPNS_18SharedImageBackingEPNS_17MemoryTypeTrackerE(%"class.gpu::SharedImageRepresentation"* %11, %"class.gpu::SharedImageManager"* %1, %"class.gpu::SharedImageBacking"* %2, %"class.gpu::MemoryTypeTracker"* %3) #7
  %12 = getelementptr inbounds %"class.gpu::SharedImageRepresentationDawnOzone", %"class.gpu::SharedImageRepresentationDawnOzone"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3gpu34SharedImageRepresentationDawnOzoneE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %"class.gpu::SharedImageRepresentationDawnOzone", %"class.gpu::SharedImageRepresentationDawnOzone"* %0, i64 0, i32 1
  store %struct.WGPUDeviceImpl* %4, %struct.WGPUDeviceImpl** %13, align 8
  %14 = getelementptr inbounds %"class.gpu::SharedImageRepresentationDawnOzone", %"class.gpu::SharedImageRepresentationDawnOzone"* %0, i64 0, i32 2
  store i32 %5, i32* %14, align 8
  %15 = getelementptr inbounds %"class.gpu::SharedImageRepresentationDawnOzone", %"class.gpu::SharedImageRepresentationDawnOzone"* %0, i64 0, i32 3, i32 0
  store %"class.gfx::NativePixmap"* %9, %"class.gfx::NativePixmap"** %15, align 8
  %16 = icmp eq i64 %6, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.gfx::NativePixmap", %"class.gfx::NativePixmap"* %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 1 monotonic
  br label %20

20:                                               ; preds = %8, %17
  %21 = getelementptr inbounds %"class.gpu::SharedImageRepresentationDawnOzone", %"class.gpu::SharedImageRepresentationDawnOzone"* %0, i64 0, i32 4
  store %struct.WGPUTextureImpl* null, %struct.WGPUTextureImpl** %21, align 8
  %22 = getelementptr inbounds %"class.gpu::SharedImageRepresentationDawnOzone", %"class.gpu::SharedImageRepresentationDawnOzone"* %0, i64 0, i32 5, i32 0
  store %"class.base::RefCountedData"* %10, %"class.base::RefCountedData"** %22, align 8
  %23 = icmp eq i64 %7, 0
  br i1 %23, label %35, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw add i32* %25, i32 1 monotonic
  %27 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %22, align 8
  %28 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %27, i64 0, i32 1, i32 70
  %29 = load void (%struct.WGPUDeviceImpl*)*, void (%struct.WGPUDeviceImpl*)** %28, align 8
  %30 = load %struct.WGPUDeviceImpl*, %struct.WGPUDeviceImpl** %13, align 8
  tail call void %29(%struct.WGPUDeviceImpl* %30) #7
  %31 = atomicrmw sub i32* %25, i32 1 acq_rel
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %39

33:                                               ; preds = %24
  %34 = inttoptr i64 %7 to i8*
  tail call void @_ZdlPv(i8* %34) #8
  br label %39

35:                                               ; preds = %20
  %36 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %10, i64 0, i32 1, i32 70
  %37 = load void (%struct.WGPUDeviceImpl*)*, void (%struct.WGPUDeviceImpl*)** %36, align 8
  %38 = load %struct.WGPUDeviceImpl*, %struct.WGPUDeviceImpl** %13, align 8
  tail call void %37(%struct.WGPUDeviceImpl* %38) #7
  br label %39

39:                                               ; preds = %35, %24, %33
  br i1 %16, label %52, label %40

40:                                               ; preds = %39
  %41 = getelementptr inbounds %"class.gfx::NativePixmap", %"class.gfx::NativePixmap"* %9, i64 0, i32 1
  %42 = getelementptr inbounds %"class.base::RefCountedThreadSafe.21", %"class.base::RefCountedThreadSafe.21"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = atomicrmw sub i32* %42, i32 1 acq_rel
  %44 = icmp eq i32 %43, 1
  br i1 %44, label %45, label %52

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.base::RefCountedThreadSafe.21", %"class.base::RefCountedThreadSafe.21"* %41, i64 -2
  %47 = bitcast %"class.base::RefCountedThreadSafe.21"* %46 to %"class.gfx::NativePixmap"*
  %48 = bitcast %"class.base::RefCountedThreadSafe.21"* %46 to void (%"class.gfx::NativePixmap"*)***
  %49 = load void (%"class.gfx::NativePixmap"*)**, void (%"class.gfx::NativePixmap"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.gfx::NativePixmap"*)*, void (%"class.gfx::NativePixmap"*)** %49, i64 13
  %51 = load void (%"class.gfx::NativePixmap"*)*, void (%"class.gfx::NativePixmap"*)** %50, align 8
  tail call void %51(%"class.gfx::NativePixmap"* nonnull %47) #7
  br label %52

52:                                               ; preds = %39, %40, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu34SharedImageRepresentationDawnOzoneD2Ev(%"class.gpu::SharedImageRepresentationDawnOzone"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::SharedImageRepresentationDawnOzone", %"class.gpu::SharedImageRepresentationDawnOzone"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3gpu34SharedImageRepresentationDawnOzoneE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  tail call void @_ZN3gpu34SharedImageRepresentationDawnOzone9EndAccessEv(%"class.gpu::SharedImageRepresentationDawnOzone"* %0)
  %3 = getelementptr inbounds %"class.gpu::SharedImageRepresentationDawnOzone", %"class.gpu::SharedImageRepresentationDawnOzone"* %0, i64 0, i32 5, i32 0
  %4 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %3, align 8
  %5 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %4, i64 0, i32 1, i32 71
  %6 = load void (%struct.WGPUDeviceImpl*)*, void (%struct.WGPUDeviceImpl*)** %5, align 8
  %7 = getelementptr inbounds %"class.gpu::SharedImageRepresentationDawnOzone", %"class.gpu::SharedImageRepresentationDawnOzone"* %0, i64 0, i32 1
  %8 = load %struct.WGPUDeviceImpl*, %struct.WGPUDeviceImpl** %7, align 8
  tail call void %6(%struct.WGPUDeviceImpl* %8) #7
  %9 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %3, align 8
  %10 = icmp eq %"class.base::RefCountedData"* %9, null
  br i1 %10, label %17, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw sub i32* %12, i32 1 acq_rel
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %17

15:                                               ; preds = %11
  %16 = bitcast %"class.base::RefCountedData"* %9 to i8*
  tail call void @_ZdlPv(i8* %16) #8
  br label %17

17:                                               ; preds = %1, %11, %15
  %18 = getelementptr inbounds %"class.gpu::SharedImageRepresentationDawnOzone", %"class.gpu::SharedImageRepresentationDawnOzone"* %0, i64 0, i32 3, i32 0
  %19 = load %"class.gfx::NativePixmap"*, %"class.gfx::NativePixmap"** %18, align 8
  %20 = icmp eq %"class.gfx::NativePixmap"* %19, null
  br i1 %20, label %33, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.gfx::NativePixmap", %"class.gfx::NativePixmap"* %19, i64 0, i32 1
  %23 = getelementptr inbounds %"class.base::RefCountedThreadSafe.21", %"class.base::RefCountedThreadSafe.21"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw sub i32* %23, i32 1 acq_rel
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %33

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.base::RefCountedThreadSafe.21", %"class.base::RefCountedThreadSafe.21"* %22, i64 -2
  %28 = bitcast %"class.base::RefCountedThreadSafe.21"* %27 to %"class.gfx::NativePixmap"*
  %29 = bitcast %"class.base::RefCountedThreadSafe.21"* %27 to void (%"class.gfx::NativePixmap"*)***
  %30 = load void (%"class.gfx::NativePixmap"*)**, void (%"class.gfx::NativePixmap"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.gfx::NativePixmap"*)*, void (%"class.gfx::NativePixmap"*)** %30, i64 13
  %32 = load void (%"class.gfx::NativePixmap"*)*, void (%"class.gfx::NativePixmap"*)** %31, align 8
  tail call void %32(%"class.gfx::NativePixmap"* nonnull %28) #7
  br label %33

33:                                               ; preds = %17, %21, %26
  %34 = bitcast %"class.gpu::SharedImageRepresentationDawnOzone"* %0 to %"class.gpu::SharedImageRepresentation"*
  tail call void @_ZN3gpu25SharedImageRepresentationD2Ev(%"class.gpu::SharedImageRepresentation"* %34) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu34SharedImageRepresentationDawnOzoneD0Ev(%"class.gpu::SharedImageRepresentationDawnOzone"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::SharedImageRepresentationDawnOzone", %"class.gpu::SharedImageRepresentationDawnOzone"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3gpu34SharedImageRepresentationDawnOzoneE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  tail call void @_ZN3gpu34SharedImageRepresentationDawnOzone9EndAccessEv(%"class.gpu::SharedImageRepresentationDawnOzone"* %0) #7
  %3 = getelementptr inbounds %"class.gpu::SharedImageRepresentationDawnOzone", %"class.gpu::SharedImageRepresentationDawnOzone"* %0, i64 0, i32 5, i32 0
  %4 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %3, align 8
  %5 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %4, i64 0, i32 1, i32 71
  %6 = load void (%struct.WGPUDeviceImpl*)*, void (%struct.WGPUDeviceImpl*)** %5, align 8
  %7 = getelementptr inbounds %"class.gpu::SharedImageRepresentationDawnOzone", %"class.gpu::SharedImageRepresentationDawnOzone"* %0, i64 0, i32 1
  %8 = load %struct.WGPUDeviceImpl*, %struct.WGPUDeviceImpl** %7, align 8
  tail call void %6(%struct.WGPUDeviceImpl* %8) #7
  %9 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %3, align 8
  %10 = icmp eq %"class.base::RefCountedData"* %9, null
  br i1 %10, label %17, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw sub i32* %12, i32 1 acq_rel
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %17

15:                                               ; preds = %11
  %16 = bitcast %"class.base::RefCountedData"* %9 to i8*
  tail call void @_ZdlPv(i8* %16) #8
  br label %17

17:                                               ; preds = %15, %11, %1
  %18 = getelementptr inbounds %"class.gpu::SharedImageRepresentationDawnOzone", %"class.gpu::SharedImageRepresentationDawnOzone"* %0, i64 0, i32 3, i32 0
  %19 = load %"class.gfx::NativePixmap"*, %"class.gfx::NativePixmap"** %18, align 8
  %20 = icmp eq %"class.gfx::NativePixmap"* %19, null
  br i1 %20, label %33, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.gfx::NativePixmap", %"class.gfx::NativePixmap"* %19, i64 0, i32 1
  %23 = getelementptr inbounds %"class.base::RefCountedThreadSafe.21", %"class.base::RefCountedThreadSafe.21"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw sub i32* %23, i32 1 acq_rel
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %33

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.base::RefCountedThreadSafe.21", %"class.base::RefCountedThreadSafe.21"* %22, i64 -2
  %28 = bitcast %"class.base::RefCountedThreadSafe.21"* %27 to %"class.gfx::NativePixmap"*
  %29 = bitcast %"class.base::RefCountedThreadSafe.21"* %27 to void (%"class.gfx::NativePixmap"*)***
  %30 = load void (%"class.gfx::NativePixmap"*)**, void (%"class.gfx::NativePixmap"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.gfx::NativePixmap"*)*, void (%"class.gfx::NativePixmap"*)** %30, i64 13
  %32 = load void (%"class.gfx::NativePixmap"*)*, void (%"class.gfx::NativePixmap"*)** %31, align 8
  tail call void %32(%"class.gfx::NativePixmap"* nonnull %28) #7
  br label %33

33:                                               ; preds = %17, %21, %26
  %34 = bitcast %"class.gpu::SharedImageRepresentationDawnOzone"* %0 to %"class.gpu::SharedImageRepresentation"*
  tail call void @_ZN3gpu25SharedImageRepresentationD2Ev(%"class.gpu::SharedImageRepresentation"* %34) #7
  %35 = bitcast %"class.gpu::SharedImageRepresentationDawnOzone"* %0 to i8*
  tail call void @_ZdlPv(i8* %35) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.WGPUTextureImpl* @_ZN3gpu34SharedImageRepresentationDawnOzone11BeginAccessE16WGPUTextureUsage(%"class.gpu::SharedImageRepresentationDawnOzone"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = alloca %struct.WGPUTextureDescriptor, align 8
  %4 = alloca %"struct.dawn_native::vulkan::ExternalImageDescriptorDmaBuf", align 8
  %5 = getelementptr inbounds %"class.gpu::SharedImageRepresentationDawnOzone", %"class.gpu::SharedImageRepresentationDawnOzone"* %0, i64 0, i32 4
  %6 = load %struct.WGPUTextureImpl*, %struct.WGPUTextureImpl** %5, align 8
  %7 = icmp eq %struct.WGPUTextureImpl* %6, null
  br i1 %7, label %8, label %109

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.gpu::SharedImageRepresentationDawnOzone", %"class.gpu::SharedImageRepresentationDawnOzone"* %0, i64 0, i32 0, i32 0, i32 2
  %10 = bitcast %"class.gpu::SharedImageBacking"** %9 to %"class.gpu::SharedImageBackingOzone"**
  %11 = load %"class.gpu::SharedImageBackingOzone"*, %"class.gpu::SharedImageBackingOzone"** %10, align 8
  %12 = tail call zeroext i1 @_ZN3gpu23SharedImageBackingOzone6VaSyncEv(%"class.gpu::SharedImageBackingOzone"* %11) #7
  br i1 %12, label %13, label %109

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.gpu::SharedImageRepresentationDawnOzone", %"class.gpu::SharedImageRepresentationDawnOzone"* %0, i64 0, i32 3, i32 0
  %15 = load %"class.gfx::NativePixmap"*, %"class.gfx::NativePixmap"** %14, align 8
  %16 = bitcast %"class.gfx::NativePixmap"* %15 to i64 (%"class.gfx::NativePixmap"*)***
  %17 = load i64 (%"class.gfx::NativePixmap"*)**, i64 (%"class.gfx::NativePixmap"*)*** %16, align 8
  %18 = getelementptr inbounds i64 (%"class.gfx::NativePixmap"*)*, i64 (%"class.gfx::NativePixmap"*)** %17, i64 8
  %19 = load i64 (%"class.gfx::NativePixmap"*)*, i64 (%"class.gfx::NativePixmap"*)** %18, align 8
  %20 = tail call i64 %19(%"class.gfx::NativePixmap"* %15) #7
  %21 = trunc i64 %20 to i32
  %22 = lshr i64 %20, 32
  %23 = trunc i64 %22 to i32
  %24 = bitcast %struct.WGPUTextureDescriptor* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %24) #7
  %25 = getelementptr inbounds %"class.gpu::SharedImageRepresentationDawnOzone", %"class.gpu::SharedImageRepresentationDawnOzone"* %0, i64 0, i32 2
  %26 = bitcast %struct.WGPUTextureDescriptor* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 0, i64 16, i1 false)
  %27 = load i32, i32* %25, align 8
  %28 = getelementptr inbounds %struct.WGPUTextureDescriptor, %struct.WGPUTextureDescriptor* %3, i64 0, i32 5
  store i32 %27, i32* %28, align 4
  %29 = getelementptr inbounds %struct.WGPUTextureDescriptor, %struct.WGPUTextureDescriptor* %3, i64 0, i32 2
  store i32 %1, i32* %29, align 8
  %30 = getelementptr inbounds %struct.WGPUTextureDescriptor, %struct.WGPUTextureDescriptor* %3, i64 0, i32 3
  store i32 1, i32* %30, align 4
  %31 = getelementptr inbounds %struct.WGPUTextureDescriptor, %struct.WGPUTextureDescriptor* %3, i64 0, i32 4, i32 0
  store i32 %21, i32* %31, align 8
  %32 = getelementptr inbounds %struct.WGPUTextureDescriptor, %struct.WGPUTextureDescriptor* %3, i64 0, i32 4, i32 1
  store i32 %23, i32* %32, align 4
  %33 = getelementptr inbounds %struct.WGPUTextureDescriptor, %struct.WGPUTextureDescriptor* %3, i64 0, i32 4, i32 2
  store i32 1, i32* %33, align 8
  %34 = getelementptr inbounds %struct.WGPUTextureDescriptor, %struct.WGPUTextureDescriptor* %3, i64 0, i32 6
  store i32 1, i32* %34, align 8
  %35 = getelementptr inbounds %struct.WGPUTextureDescriptor, %struct.WGPUTextureDescriptor* %3, i64 0, i32 7
  store i32 1, i32* %35, align 4
  %36 = bitcast %"struct.dawn_native::vulkan::ExternalImageDescriptorDmaBuf"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %36) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 72, i1 false)
  call void @_ZN11dawn_native6vulkan29ExternalImageDescriptorDmaBufC1Ev(%"struct.dawn_native::vulkan::ExternalImageDescriptorDmaBuf"* nonnull %4) #7
  %37 = getelementptr inbounds %"struct.dawn_native::vulkan::ExternalImageDescriptorDmaBuf", %"struct.dawn_native::vulkan::ExternalImageDescriptorDmaBuf"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  store %struct.WGPUTextureDescriptor* %3, %struct.WGPUTextureDescriptor** %37, align 8
  %38 = load %"class.gpu::SharedImageBacking"*, %"class.gpu::SharedImageBacking"** %9, align 8
  %39 = bitcast %"class.gpu::SharedImageBacking"* %38 to { i64, i64 } (%"class.gpu::SharedImageBacking"*)***
  %40 = load { i64, i64 } (%"class.gpu::SharedImageBacking"*)**, { i64, i64 } (%"class.gpu::SharedImageBacking"*)*** %39, align 8
  %41 = getelementptr inbounds { i64, i64 } (%"class.gpu::SharedImageBacking"*)*, { i64, i64 } (%"class.gpu::SharedImageBacking"*)** %40, i64 2
  %42 = load { i64, i64 } (%"class.gpu::SharedImageBacking"*)*, { i64, i64 } (%"class.gpu::SharedImageBacking"*)** %41, align 8
  %43 = call { i64, i64 } %42(%"class.gpu::SharedImageBacking"* %38) #7
  %44 = extractvalue { i64, i64 } %43, 0
  %45 = trunc i64 %44 to i32
  %46 = extractvalue { i64, i64 } %43, 1
  %47 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %38, i64 0, i32 4
  %48 = bitcast %"class.gfx::Size"* %47 to i64*
  %49 = load i64, i64* %48, align 4
  %50 = icmp eq i32 %45, 0
  %51 = icmp ult i64 %44, 4294967296
  %52 = and i1 %51, %50
  br i1 %52, label %53, label %64

53:                                               ; preds = %13
  %54 = trunc i64 %46 to i32
  %55 = trunc i64 %49 to i32
  %56 = icmp eq i32 %54, %55
  br i1 %56, label %57, label %64

57:                                               ; preds = %53
  %58 = lshr i64 %46, 32
  %59 = trunc i64 %58 to i32
  %60 = lshr i64 %49, 32
  %61 = trunc i64 %60 to i32
  %62 = icmp eq i32 %59, %61
  %63 = zext i1 %62 to i8
  br label %64

64:                                               ; preds = %13, %53, %57
  %65 = phi i8 [ 0, %53 ], [ %63, %57 ], [ 0, %13 ]
  %66 = getelementptr inbounds %"struct.dawn_native::vulkan::ExternalImageDescriptorDmaBuf", %"struct.dawn_native::vulkan::ExternalImageDescriptorDmaBuf"* %4, i64 0, i32 0, i32 0, i32 0, i32 3
  store i8 %65, i8* %66, align 8
  %67 = load %"class.gfx::NativePixmap"*, %"class.gfx::NativePixmap"** %14, align 8
  %68 = bitcast %"class.gfx::NativePixmap"* %67 to i32 (%"class.gfx::NativePixmap"*, i64)***
  %69 = load i32 (%"class.gfx::NativePixmap"*, i64)**, i32 (%"class.gfx::NativePixmap"*, i64)*** %68, align 8
  %70 = getelementptr inbounds i32 (%"class.gfx::NativePixmap"*, i64)*, i32 (%"class.gfx::NativePixmap"*, i64)** %69, i64 1
  %71 = load i32 (%"class.gfx::NativePixmap"*, i64)*, i32 (%"class.gfx::NativePixmap"*, i64)** %70, align 8
  %72 = call i32 %71(%"class.gfx::NativePixmap"* %67, i64 0) #7
  %73 = call i32 @dup(i32 %72) #7
  %74 = getelementptr inbounds %"struct.dawn_native::vulkan::ExternalImageDescriptorDmaBuf", %"struct.dawn_native::vulkan::ExternalImageDescriptorDmaBuf"* %4, i64 0, i32 0, i32 1
  store i32 %73, i32* %74, align 4
  %75 = load %"class.gfx::NativePixmap"*, %"class.gfx::NativePixmap"** %14, align 8
  %76 = bitcast %"class.gfx::NativePixmap"* %75 to i32 (%"class.gfx::NativePixmap"*, i64)***
  %77 = load i32 (%"class.gfx::NativePixmap"*, i64)**, i32 (%"class.gfx::NativePixmap"*, i64)*** %76, align 8
  %78 = getelementptr inbounds i32 (%"class.gfx::NativePixmap"*, i64)*, i32 (%"class.gfx::NativePixmap"*, i64)** %77, i64 2
  %79 = load i32 (%"class.gfx::NativePixmap"*, i64)*, i32 (%"class.gfx::NativePixmap"*, i64)** %78, align 8
  %80 = call i32 %79(%"class.gfx::NativePixmap"* %75, i64 0) #7
  %81 = getelementptr inbounds %"struct.dawn_native::vulkan::ExternalImageDescriptorDmaBuf", %"struct.dawn_native::vulkan::ExternalImageDescriptorDmaBuf"* %4, i64 0, i32 1
  store i32 %80, i32* %81, align 8
  %82 = load %"class.gfx::NativePixmap"*, %"class.gfx::NativePixmap"** %14, align 8
  %83 = bitcast %"class.gfx::NativePixmap"* %82 to i64 (%"class.gfx::NativePixmap"*)***
  %84 = load i64 (%"class.gfx::NativePixmap"*)**, i64 (%"class.gfx::NativePixmap"*)*** %83, align 8
  %85 = getelementptr inbounds i64 (%"class.gfx::NativePixmap"*)*, i64 (%"class.gfx::NativePixmap"*)** %84, i64 7
  %86 = load i64 (%"class.gfx::NativePixmap"*)*, i64 (%"class.gfx::NativePixmap"*)** %85, align 8
  %87 = call i64 %86(%"class.gfx::NativePixmap"* %82) #7
  %88 = getelementptr inbounds %"struct.dawn_native::vulkan::ExternalImageDescriptorDmaBuf", %"struct.dawn_native::vulkan::ExternalImageDescriptorDmaBuf"* %4, i64 0, i32 2
  store i64 %87, i64* %88, align 8
  %89 = getelementptr inbounds %"struct.dawn_native::vulkan::ExternalImageDescriptorDmaBuf", %"struct.dawn_native::vulkan::ExternalImageDescriptorDmaBuf"* %4, i64 0, i32 0, i32 2
  call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE6assignIPKiEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector.28"* %89, i32* null, i32* null) #7
  %90 = getelementptr inbounds %"class.gpu::SharedImageRepresentationDawnOzone", %"class.gpu::SharedImageRepresentationDawnOzone"* %0, i64 0, i32 1
  %91 = load %struct.WGPUDeviceImpl*, %struct.WGPUDeviceImpl** %90, align 8
  %92 = bitcast %"struct.dawn_native::vulkan::ExternalImageDescriptorDmaBuf"* %4 to %"struct.dawn_native::vulkan::ExternalImageDescriptorVk"*
  %93 = call %struct.WGPUTextureImpl* @_ZN11dawn_native6vulkan15WrapVulkanImageEP14WGPUDeviceImplPKNS0_25ExternalImageDescriptorVkE(%struct.WGPUDeviceImpl* %91, %"struct.dawn_native::vulkan::ExternalImageDescriptorVk"* nonnull %92) #7
  store %struct.WGPUTextureImpl* %93, %struct.WGPUTextureImpl** %5, align 8
  %94 = icmp eq %struct.WGPUTextureImpl* %93, null
  br i1 %94, label %95, label %98

95:                                               ; preds = %64
  %96 = call i32 @close(i32 %73) #7
  %97 = load %struct.WGPUTextureImpl*, %struct.WGPUTextureImpl** %5, align 8
  br label %98

98:                                               ; preds = %64, %95
  %99 = phi %struct.WGPUTextureImpl* [ %93, %64 ], [ %97, %95 ]
  %100 = getelementptr inbounds %"struct.dawn_native::vulkan::ExternalImageDescriptorDmaBuf", %"struct.dawn_native::vulkan::ExternalImageDescriptorDmaBuf"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %101 = load i32*, i32** %100, align 8
  %102 = icmp eq i32* %101, null
  br i1 %102, label %108, label %103

103:                                              ; preds = %98
  %104 = ptrtoint i32* %101 to i64
  %105 = getelementptr inbounds %"struct.dawn_native::vulkan::ExternalImageDescriptorDmaBuf", %"struct.dawn_native::vulkan::ExternalImageDescriptorDmaBuf"* %4, i64 0, i32 0, i32 2, i32 0, i32 1
  %106 = bitcast i32** %105 to i64*
  store i64 %104, i64* %106, align 8
  %107 = bitcast i32* %101 to i8*
  call void @_ZdlPv(i8* %107) #8
  br label %108

108:                                              ; preds = %98, %103
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %36) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %24) #7
  br label %109

109:                                              ; preds = %8, %2, %108
  %110 = phi %struct.WGPUTextureImpl* [ %99, %108 ], [ null, %2 ], [ null, %8 ]
  ret %struct.WGPUTextureImpl* %110
}

declare zeroext i1 @_ZN3gpu23SharedImageBackingOzone6VaSyncEv(%"class.gpu::SharedImageBackingOzone"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN11dawn_native6vulkan29ExternalImageDescriptorDmaBufC1Ev(%"struct.dawn_native::vulkan::ExternalImageDescriptorDmaBuf"*) unnamed_addr #2

; Function Attrs: nounwind
declare i32 @dup(i32) local_unnamed_addr #4

declare %struct.WGPUTextureImpl* @_ZN11dawn_native6vulkan15WrapVulkanImageEP14WGPUDeviceImplPKNS0_25ExternalImageDescriptorVkE(%struct.WGPUDeviceImpl*, %"struct.dawn_native::vulkan::ExternalImageDescriptorVk"*) local_unnamed_addr #2

declare i32 @close(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu34SharedImageRepresentationDawnOzone9EndAccessEv(%"class.gpu::SharedImageRepresentationDawnOzone"* nocapture) unnamed_addr #0 align 2 {
  %2 = alloca %"class.gfx::Rect", align 4
  %3 = alloca %"struct.dawn_native::vulkan::ExternalImageExportInfoOpaqueFD", align 8
  %4 = getelementptr inbounds %"class.gpu::SharedImageRepresentationDawnOzone", %"class.gpu::SharedImageRepresentationDawnOzone"* %0, i64 0, i32 4
  %5 = load %struct.WGPUTextureImpl*, %struct.WGPUTextureImpl** %4, align 8
  %6 = icmp eq %struct.WGPUTextureImpl* %5, null
  br i1 %6, label %50, label %7

7:                                                ; preds = %1
  %8 = bitcast %"struct.dawn_native::vulkan::ExternalImageExportInfoOpaqueFD"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %8) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 40, i1 false)
  call void @_ZN11dawn_native6vulkan31ExternalImageExportInfoOpaqueFDC1Ev(%"struct.dawn_native::vulkan::ExternalImageExportInfoOpaqueFD"* nonnull %3) #7
  %9 = load %struct.WGPUTextureImpl*, %struct.WGPUTextureImpl** %4, align 8
  %10 = getelementptr inbounds %"struct.dawn_native::vulkan::ExternalImageExportInfoOpaqueFD", %"struct.dawn_native::vulkan::ExternalImageExportInfoOpaqueFD"* %3, i64 0, i32 0, i32 0
  %11 = call zeroext i1 @_ZN11dawn_native6vulkan17ExportVulkanImageEP15WGPUTextureImpl13VkImageLayoutPNS0_25ExternalImageExportInfoVkE(%struct.WGPUTextureImpl* %9, i32 0, %"struct.dawn_native::vulkan::ExternalImageExportInfoVk"* nonnull %10) #7
  br i1 %11, label %12, label %31

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"struct.dawn_native::vulkan::ExternalImageExportInfoOpaqueFD", %"struct.dawn_native::vulkan::ExternalImageExportInfoOpaqueFD"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i8, i8* %13, align 4, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %31, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.gpu::SharedImageRepresentationDawnOzone", %"class.gpu::SharedImageRepresentationDawnOzone"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load %"class.gpu::SharedImageBacking"*, %"class.gpu::SharedImageBacking"** %17, align 8
  %19 = bitcast %"class.gfx::Rect"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #7
  %20 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %18, i64 0, i32 4
  %21 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 0, i32 0
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 0, i32 1
  store i32 0, i32* %22, align 4
  %23 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 1
  %24 = bitcast %"class.gfx::Size"* %20 to i64*
  %25 = bitcast %"class.gfx::Size"* %23 to i64*
  %26 = load i64, i64* %24, align 4
  store i64 %26, i64* %25, align 4
  %27 = bitcast %"class.gpu::SharedImageBacking"* %18 to void (%"class.gpu::SharedImageBacking"*, %"class.gfx::Rect"*)***
  %28 = load void (%"class.gpu::SharedImageBacking"*, %"class.gfx::Rect"*)**, void (%"class.gpu::SharedImageBacking"*, %"class.gfx::Rect"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.gpu::SharedImageBacking"*, %"class.gfx::Rect"*)*, void (%"class.gpu::SharedImageBacking"*, %"class.gfx::Rect"*)** %28, i64 3
  %30 = load void (%"class.gpu::SharedImageBacking"*, %"class.gfx::Rect"*)*, void (%"class.gpu::SharedImageBacking"*, %"class.gfx::Rect"*)** %29, align 8
  call void %30(%"class.gpu::SharedImageBacking"* %18, %"class.gfx::Rect"* nonnull dereferenceable(16) %2) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #7
  br label %31

31:                                               ; preds = %12, %16, %7
  %32 = getelementptr inbounds %"class.gpu::SharedImageRepresentationDawnOzone", %"class.gpu::SharedImageRepresentationDawnOzone"* %0, i64 0, i32 5, i32 0
  %33 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %32, align 8
  %34 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %33, i64 0, i32 1, i32 145
  %35 = load void (%struct.WGPUTextureImpl*)*, void (%struct.WGPUTextureImpl*)** %34, align 8
  %36 = load %struct.WGPUTextureImpl*, %struct.WGPUTextureImpl** %4, align 8
  call void %35(%struct.WGPUTextureImpl* %36) #7
  %37 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %32, align 8
  %38 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %37, i64 0, i32 1, i32 147
  %39 = load void (%struct.WGPUTextureImpl*)*, void (%struct.WGPUTextureImpl*)** %38, align 8
  %40 = load %struct.WGPUTextureImpl*, %struct.WGPUTextureImpl** %4, align 8
  call void %39(%struct.WGPUTextureImpl* %40) #7
  store %struct.WGPUTextureImpl* null, %struct.WGPUTextureImpl** %4, align 8
  %41 = getelementptr inbounds %"struct.dawn_native::vulkan::ExternalImageExportInfoOpaqueFD", %"struct.dawn_native::vulkan::ExternalImageExportInfoOpaqueFD"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %42 = load i32*, i32** %41, align 8
  %43 = icmp eq i32* %42, null
  br i1 %43, label %49, label %44

44:                                               ; preds = %31
  %45 = ptrtoint i32* %42 to i64
  %46 = getelementptr inbounds %"struct.dawn_native::vulkan::ExternalImageExportInfoOpaqueFD", %"struct.dawn_native::vulkan::ExternalImageExportInfoOpaqueFD"* %3, i64 0, i32 0, i32 1, i32 0, i32 1
  %47 = bitcast i32** %46 to i64*
  store i64 %45, i64* %47, align 8
  %48 = bitcast i32* %42 to i8*
  call void @_ZdlPv(i8* %48) #8
  br label %49

49:                                               ; preds = %31, %44
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %8) #7
  br label %50

50:                                               ; preds = %1, %49
  ret void
}

declare void @_ZN11dawn_native6vulkan31ExternalImageExportInfoOpaqueFDC1Ev(%"struct.dawn_native::vulkan::ExternalImageExportInfoOpaqueFD"*) unnamed_addr #2

declare zeroext i1 @_ZN11dawn_native6vulkan17ExportVulkanImageEP15WGPUTextureImpl13VkImageLayoutPNS0_25ExternalImageExportInfoVkE(%struct.WGPUTextureImpl*, i32, %"struct.dawn_native::vulkan::ExternalImageExportInfoVk"*) local_unnamed_addr #2

declare void @_ZN3gpu25SharedImageRepresentationC2EPNS_18SharedImageManagerEPNS_18SharedImageBackingEPNS_17MemoryTypeTrackerE(%"class.gpu::SharedImageRepresentation"*, %"class.gpu::SharedImageManager"*, %"class.gpu::SharedImageBacking"*, %"class.gpu::MemoryTypeTracker"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3gpu25SharedImageRepresentationD2Ev(%"class.gpu::SharedImageRepresentation"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIiNS_9allocatorIiEEE6assignIPKiEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector.28"*, i32*, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %2 to i64
  %5 = ptrtoint i32* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  %8 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.28"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i32*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 2
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i32, i32* %1, i64 %22
  %25 = select i1 %23, i32* %24, i32* %2
  %26 = ptrtoint i32* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 2
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #7
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 2
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast i32* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #7
  %42 = inttoptr i64 %35 to i32*
  %43 = getelementptr inbounds i32, i32* %42, i64 %39
  %44 = ptrtoint i32* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds i32, i32* %16, i64 %28
  store i32* %48, i32** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #8
  %55 = bitcast %"class.std::__1::vector.28"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #7
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.28"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #9
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 2
  %63 = icmp ult i64 %62, 2305843009213693951
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 1
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 4611686018427387903
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.28"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #9
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 4611686018427387903, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 2
  %74 = tail call i8* @_Znwm(i64 %73) #8
  %75 = bitcast i8* %74 to i32*
  %76 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %0, i64 0, i32 0, i32 1
  %77 = bitcast i32** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.28"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds i32, i32* %75, i64 %72
  store i32* %79, i32** %8, align 8
  %80 = bitcast i32** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 2
  %85 = bitcast i32* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #7
  %86 = getelementptr inbounds i32, i32* %75, i64 %84
  %87 = ptrtoint i32* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
