; ModuleID = '../../third_party/pdfium/third_party/agg23/agg_path_storage.cpp'
source_filename = "../../third_party/pdfium/third_party/agg23/agg_path_storage.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.pdfium::agg::path_storage" = type <{ i32, i32, i32, [4 x i8], float**, i8**, i32, [4 x i8] }>

@_ZN6pdfium3agg12path_storageD1Ev = hidden unnamed_addr alias void (%"class.pdfium::agg::path_storage"*), void (%"class.pdfium::agg::path_storage"*)* @_ZN6pdfium3agg12path_storageD2Ev
@_ZN6pdfium3agg12path_storageC1Ev = hidden unnamed_addr alias void (%"class.pdfium::agg::path_storage"*), void (%"class.pdfium::agg::path_storage"*)* @_ZN6pdfium3agg12path_storageC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6pdfium3agg12path_storageD2Ev(%"class.pdfium::agg::path_storage"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.pdfium::agg::path_storage", %"class.pdfium::agg::path_storage"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %22, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.pdfium::agg::path_storage", %"class.pdfium::agg::path_storage"* %0, i64 0, i32 4
  %7 = load float**, float*** %6, align 8
  %8 = add i32 %3, -1
  store i32 %8, i32* %2, align 4
  %9 = zext i32 %3 to i64
  %10 = getelementptr inbounds float*, float** %7, i64 %9
  br label %11

11:                                               ; preds = %5, %11
  %12 = phi float** [ %13, %11 ], [ %10, %5 ]
  %13 = getelementptr inbounds float*, float** %12, i64 -1
  %14 = bitcast float** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  tail call void @_Z7FX_FreePv(i8* %15) #4
  %16 = load i32, i32* %2, align 4
  %17 = add i32 %16, -1
  store i32 %17, i32* %2, align 4
  %18 = icmp eq i32 %16, 0
  br i1 %18, label %19, label %11

19:                                               ; preds = %11
  %20 = bitcast float*** %6 to i8**
  %21 = load i8*, i8** %20, align 8
  tail call void @_Z7FX_FreePv(i8* %21) #4
  br label %22

22:                                               ; preds = %1, %19
  ret void
}

declare void @_Z7FX_FreePv(i8*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6pdfium3agg12path_storageC2Ev(%"class.pdfium::agg::path_storage"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.pdfium::agg::path_storage", %"class.pdfium::agg::path_storage"* %0, i64 0, i32 0
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %"class.pdfium::agg::path_storage", %"class.pdfium::agg::path_storage"* %0, i64 0, i32 1
  store i32 0, i32* %3, align 4
  %4 = getelementptr inbounds %"class.pdfium::agg::path_storage", %"class.pdfium::agg::path_storage"* %0, i64 0, i32 2
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %"class.pdfium::agg::path_storage", %"class.pdfium::agg::path_storage"* %0, i64 0, i32 4
  %6 = bitcast float*** %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 20, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6pdfium3agg12path_storage14allocate_blockEj(%"class.pdfium::agg::path_storage"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.pdfium::agg::path_storage", %"class.pdfium::agg::path_storage"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp ugt i32 %4, %1
  br i1 %5, label %39, label %6

6:                                                ; preds = %2
  %7 = add i32 %4, 256
  %8 = zext i32 %7 to i64
  %9 = tail call i8* @_ZN6pdfium8internal13CallocOrDie2DEmmm(i64 %8, i64 2, i64 8) #4
  %10 = bitcast i8* %9 to float**
  %11 = load i32, i32* %3, align 8
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds float*, float** %10, i64 %12
  %14 = getelementptr inbounds float*, float** %13, i64 256
  %15 = getelementptr inbounds %"class.pdfium::agg::path_storage", %"class.pdfium::agg::path_storage"* %0, i64 0, i32 4
  %16 = load float**, float*** %15, align 8
  %17 = icmp eq float** %16, null
  br i1 %17, label %18, label %20

18:                                               ; preds = %6
  %19 = bitcast float*** %15 to i8**
  br label %33

20:                                               ; preds = %6
  %21 = bitcast float** %16 to i8*
  %22 = shl nuw nsw i64 %12, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* nonnull align 8 %21, i64 %22, i1 false)
  %23 = bitcast float** %14 to i8*
  %24 = getelementptr inbounds %"class.pdfium::agg::path_storage", %"class.pdfium::agg::path_storage"* %0, i64 0, i32 5
  %25 = bitcast i8*** %24 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = load i32, i32* %3, align 8
  %28 = zext i32 %27 to i64
  %29 = shl nuw nsw i64 %28, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %26, i64 %29, i1 false)
  %30 = bitcast float*** %15 to i8**
  %31 = load i8*, i8** %30, align 8
  tail call void @_Z7FX_FreePv(i8* %31) #4
  %32 = load i32, i32* %3, align 8
  br label %33

33:                                               ; preds = %18, %20
  %34 = phi i8** [ %19, %18 ], [ %30, %20 ]
  %35 = phi i32 [ %11, %18 ], [ %32, %20 ]
  store i8* %9, i8** %34, align 8
  %36 = getelementptr inbounds %"class.pdfium::agg::path_storage", %"class.pdfium::agg::path_storage"* %0, i64 0, i32 5
  %37 = bitcast i8*** %36 to float***
  store float** %14, float*** %37, align 8
  %38 = add i32 %35, 256
  store i32 %38, i32* %3, align 8
  br label %39

39:                                               ; preds = %2, %33
  %40 = tail call i8* @_ZN6pdfium8internal11CallocOrDieEmm(i64 576, i64 4) #4
  %41 = getelementptr inbounds %"class.pdfium::agg::path_storage", %"class.pdfium::agg::path_storage"* %0, i64 0, i32 4
  %42 = load float**, float*** %41, align 8
  %43 = zext i32 %1 to i64
  %44 = getelementptr inbounds float*, float** %42, i64 %43
  %45 = bitcast float** %44 to i8**
  store i8* %40, i8** %45, align 8
  %46 = load float**, float*** %41, align 8
  %47 = getelementptr inbounds float*, float** %46, i64 %43
  %48 = load float*, float** %47, align 8
  %49 = getelementptr inbounds float, float* %48, i64 512
  %50 = getelementptr inbounds %"class.pdfium::agg::path_storage", %"class.pdfium::agg::path_storage"* %0, i64 0, i32 5
  %51 = load i8**, i8*** %50, align 8
  %52 = getelementptr inbounds i8*, i8** %51, i64 %43
  %53 = bitcast i8** %52 to float**
  store float* %49, float** %53, align 8
  %54 = getelementptr inbounds %"class.pdfium::agg::path_storage", %"class.pdfium::agg::path_storage"* %0, i64 0, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = add i32 %55, 1
  store i32 %56, i32* %54, align 4
  ret void
}

declare i8* @_ZN6pdfium8internal13CallocOrDie2DEmmm(i64, i64, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare i8* @_ZN6pdfium8internal11CallocOrDieEmm(i64, i64) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6pdfium3agg12path_storage6rewindEj(%"class.pdfium::agg::path_storage"* nocapture, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.pdfium::agg::path_storage", %"class.pdfium::agg::path_storage"* %0, i64 0, i32 6
  store i32 %1, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6pdfium3agg12path_storage6curve4Effffff(%"class.pdfium::agg::path_storage"* nocapture, float, float, float, float, float, float) local_unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %"class.pdfium::agg::path_storage", %"class.pdfium::agg::path_storage"* %0, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = lshr i32 %9, 8
  %11 = getelementptr inbounds %"class.pdfium::agg::path_storage", %"class.pdfium::agg::path_storage"* %0, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp ult i32 %10, %12
  br i1 %13, label %16, label %14

14:                                               ; preds = %7
  tail call void @_ZN6pdfium3agg12path_storage14allocate_blockEj(%"class.pdfium::agg::path_storage"* %0, i32 %10) #4
  %15 = load i32, i32* %8, align 8
  br label %16

16:                                               ; preds = %7, %14
  %17 = phi i32 [ %9, %7 ], [ %15, %14 ]
  %18 = getelementptr inbounds %"class.pdfium::agg::path_storage", %"class.pdfium::agg::path_storage"* %0, i64 0, i32 4
  %19 = load float**, float*** %18, align 8
  %20 = zext i32 %10 to i64
  %21 = getelementptr inbounds float*, float** %19, i64 %20
  %22 = load float*, float** %21, align 8
  %23 = shl i32 %17, 1
  %24 = and i32 %23, 510
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds float, float* %22, i64 %25
  %27 = getelementptr inbounds %"class.pdfium::agg::path_storage", %"class.pdfium::agg::path_storage"* %0, i64 0, i32 5
  %28 = load i8**, i8*** %27, align 8
  %29 = getelementptr inbounds i8*, i8** %28, i64 %20
  %30 = load i8*, i8** %29, align 8
  %31 = and i32 %17, 255
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i8, i8* %30, i64 %32
  store i8 4, i8* %33, align 1
  %34 = getelementptr inbounds float, float* %26, i64 1
  store float %1, float* %26, align 4
  store float %2, float* %34, align 4
  %35 = load i32, i32* %8, align 8
  %36 = add i32 %35, 1
  store i32 %36, i32* %8, align 8
  %37 = lshr i32 %36, 8
  %38 = load i32, i32* %11, align 4
  %39 = icmp ult i32 %37, %38
  br i1 %39, label %42, label %40

40:                                               ; preds = %16
  tail call void @_ZN6pdfium3agg12path_storage14allocate_blockEj(%"class.pdfium::agg::path_storage"* %0, i32 %37) #4
  %41 = load i32, i32* %8, align 8
  br label %42

42:                                               ; preds = %16, %40
  %43 = phi i32 [ %36, %16 ], [ %41, %40 ]
  %44 = load float**, float*** %18, align 8
  %45 = zext i32 %37 to i64
  %46 = getelementptr inbounds float*, float** %44, i64 %45
  %47 = load float*, float** %46, align 8
  %48 = shl i32 %43, 1
  %49 = and i32 %48, 510
  %50 = zext i32 %49 to i64
  %51 = getelementptr inbounds float, float* %47, i64 %50
  %52 = load i8**, i8*** %27, align 8
  %53 = getelementptr inbounds i8*, i8** %52, i64 %45
  %54 = load i8*, i8** %53, align 8
  %55 = and i32 %43, 255
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds i8, i8* %54, i64 %56
  store i8 4, i8* %57, align 1
  %58 = getelementptr inbounds float, float* %51, i64 1
  store float %3, float* %51, align 4
  store float %4, float* %58, align 4
  %59 = load i32, i32* %8, align 8
  %60 = add i32 %59, 1
  store i32 %60, i32* %8, align 8
  %61 = lshr i32 %60, 8
  %62 = load i32, i32* %11, align 4
  %63 = icmp ult i32 %61, %62
  br i1 %63, label %66, label %64

64:                                               ; preds = %42
  tail call void @_ZN6pdfium3agg12path_storage14allocate_blockEj(%"class.pdfium::agg::path_storage"* %0, i32 %61) #4
  %65 = load i32, i32* %8, align 8
  br label %66

66:                                               ; preds = %42, %64
  %67 = phi i32 [ %60, %42 ], [ %65, %64 ]
  %68 = load float**, float*** %18, align 8
  %69 = zext i32 %61 to i64
  %70 = getelementptr inbounds float*, float** %68, i64 %69
  %71 = load float*, float** %70, align 8
  %72 = shl i32 %67, 1
  %73 = and i32 %72, 510
  %74 = zext i32 %73 to i64
  %75 = getelementptr inbounds float, float* %71, i64 %74
  %76 = load i8**, i8*** %27, align 8
  %77 = getelementptr inbounds i8*, i8** %76, i64 %69
  %78 = load i8*, i8** %77, align 8
  %79 = and i32 %67, 255
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds i8, i8* %78, i64 %80
  store i8 4, i8* %81, align 1
  %82 = getelementptr inbounds float, float* %75, i64 1
  store float %5, float* %75, align 4
  store float %6, float* %82, align 4
  %83 = load i32, i32* %8, align 8
  %84 = add i32 %83, 1
  store i32 %84, i32* %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6pdfium3agg12path_storage8end_polyEv(%"class.pdfium::agg::path_storage"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.pdfium::agg::path_storage", %"class.pdfium::agg::path_storage"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %49, label %5

5:                                                ; preds = %1
  %6 = add i32 %3, -1
  %7 = getelementptr inbounds %"class.pdfium::agg::path_storage", %"class.pdfium::agg::path_storage"* %0, i64 0, i32 5
  %8 = load i8**, i8*** %7, align 8
  %9 = lshr i32 %6, 8
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds i8*, i8** %8, i64 %10
  %12 = load i8*, i8** %11, align 8
  %13 = and i32 %6, 255
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds i8, i8* %12, i64 %14
  %16 = load i8, i8* %15, align 1
  %17 = and i8 %16, 127
  %18 = zext i8 %17 to i32
  %19 = add nsw i32 %18, -1
  %20 = icmp ult i32 %19, 14
  br i1 %20, label %21, label %49

21:                                               ; preds = %5
  %22 = lshr i32 %3, 8
  %23 = getelementptr inbounds %"class.pdfium::agg::path_storage", %"class.pdfium::agg::path_storage"* %0, i64 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = icmp ult i32 %22, %24
  br i1 %25, label %29, label %26

26:                                               ; preds = %21
  tail call void @_ZN6pdfium3agg12path_storage14allocate_blockEj(%"class.pdfium::agg::path_storage"* %0, i32 %22) #4
  %27 = load i32, i32* %2, align 8
  %28 = load i8**, i8*** %7, align 8
  br label %29

29:                                               ; preds = %21, %26
  %30 = phi i8** [ %8, %21 ], [ %28, %26 ]
  %31 = phi i32 [ %3, %21 ], [ %27, %26 ]
  %32 = getelementptr inbounds %"class.pdfium::agg::path_storage", %"class.pdfium::agg::path_storage"* %0, i64 0, i32 4
  %33 = load float**, float*** %32, align 8
  %34 = zext i32 %22 to i64
  %35 = getelementptr inbounds float*, float** %33, i64 %34
  %36 = load float*, float** %35, align 8
  %37 = shl i32 %31, 1
  %38 = and i32 %37, 510
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds float, float* %36, i64 %39
  %41 = getelementptr inbounds i8*, i8** %30, i64 %34
  %42 = load i8*, i8** %41, align 8
  %43 = and i32 %31, 255
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds i8, i8* %42, i64 %44
  store i8 79, i8* %45, align 1
  %46 = getelementptr inbounds float, float* %40, i64 1
  store float 0.000000e+00, float* %40, align 4
  store float 0.000000e+00, float* %46, align 4
  %47 = load i32, i32* %2, align 8
  %48 = add i32 %47, 1
  store i32 %48, i32* %2, align 8
  br label %49

49:                                               ; preds = %1, %5, %29
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
