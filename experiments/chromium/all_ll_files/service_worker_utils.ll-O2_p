; ModuleID = '../../content/common/service_worker/service_worker_utils.cc'
source_filename = "../../content/common/service_worker/service_worker_utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"class.std::__1::allocator" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.GURL*, %class.GURL*, %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::CommandLine" = type { %"class.std::__1::vector.8", %"class.std::__1::map", i64 }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.15", %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { i64 }

@_ZN5blink8features19kPlzDedicatedWorkerE = external global %"struct.base::Feature", align 8
@.str = private unnamed_addr constant [50 x i8] c"An invalid Service-Worker-Allowed header value ('\00", align 1
@.str.1 = private unnamed_addr constant [42 x i8] c"') was received when fetching the script.\00", align 1
@.str.2 = private unnamed_addr constant [54 x i8] c"A cross-origin Service-Worker-Allowed header value ('\00", align 1
@.str.3 = private unnamed_addr constant [34 x i8] c"The path of the provided scope ('\00", align 1
@.str.4 = private unnamed_addr constant [40 x i8] c"') is not under the max scope allowed (\00", align 1
@.str.5 = private unnamed_addr constant [32 x i8] c"set by Service-Worker-Allowed: \00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str.7 = private unnamed_addr constant [120 x i8] c"'). Adjust the scope, move the Service Worker script, or use the Service-Worker-Allowed HTTP header to allow the scope.\00", align 1
@.str.8 = private unnamed_addr constant [56 x i8] c"'). Adjust the scope or move the Service Worker script.\00", align 1
@.str.9 = private unnamed_addr constant [22 x i8] c"The provided scope ('\00", align 1
@.str.10 = private unnamed_addr constant [19 x i8] c"') or scriptURL ('\00", align 1
@.str.11 = private unnamed_addr constant [43 x i8] c"') includes a disallowed escape character.\00", align 1
@_ZN8switches19kDisableWebSecurityE = external constant [0 x i8], align 1
@.str.12 = private unnamed_addr constant [13 x i8] c".Unspecified\00", align 1
@.str.13 = private unnamed_addr constant [9 x i8] c".Network\00", align 1
@.str.14 = private unnamed_addr constant [11 x i8] c".HttpCache\00", align 1
@.str.15 = private unnamed_addr constant [14 x i8] c".CacheStorage\00", align 1
@.str.16 = private unnamed_addr constant [9 x i8] c".Unknown\00", align 1
@.str.17 = private unnamed_addr constant [4 x i8] c"%2f\00", align 1
@.str.18 = private unnamed_addr constant [4 x i8] c"%2F\00", align 1
@.str.19 = private unnamed_addr constant [4 x i8] c"%5c\00", align 1
@.str.20 = private unnamed_addr constant [4 x i8] c"%5C\00", align 1
@switch.table._ZN7content18ServiceWorkerUtils27FetchResponseSourceToSuffixEN7network5mojom19FetchResponseSourceE = private unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.15, i64 0, i64 0)], align 8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7content18ServiceWorkerUtils24IsMainRequestDestinationEN7network5mojom18RequestDestinationE(i32) local_unnamed_addr #0 align 2 {
  %2 = icmp eq i32 %0, 20
  br i1 %2, label %3, label %5

3:                                                ; preds = %1
  %4 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink8features19kPlzDedicatedWorkerE) #8
  br label %9

5:                                                ; preds = %1
  %6 = tail call zeroext i1 @_ZN5blink25IsRequestDestinationFrameEN7network5mojom18RequestDestinationE(i32 %0) #8
  %7 = icmp eq i32 %0, 15
  %8 = or i1 %7, %6
  br label %9

9:                                                ; preds = %5, %3
  %10 = phi i1 [ %4, %3 ], [ %8, %5 ]
  ret i1 %10
}

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink25IsRequestDestinationFrameEN7network5mojom18RequestDestinationE(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7content18ServiceWorkerUtils26IsPathRestrictionSatisfiedERK4GURLS3_PKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEPSA_(%class.GURL* dereferenceable(120), %class.GURL* dereferenceable(120), %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*) local_unnamed_addr #0 align 2 {
  %5 = tail call zeroext i1 @_ZN7content18ServiceWorkerUtils34IsPathRestrictionSatisfiedInternalERK4GURLS3_bPKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEPSA_(%class.GURL* dereferenceable(120) %0, %class.GURL* dereferenceable(120) %1, i1 zeroext true, %"class.std::__1::basic_string"* %2, %"class.std::__1::basic_string"* %3)
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7content18ServiceWorkerUtils34IsPathRestrictionSatisfiedInternalERK4GURLS3_bPKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEPSA_(%class.GURL* dereferenceable(120), %class.GURL* dereferenceable(120), i1 zeroext, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::allocator", align 1
  %7 = alloca %"class.std::__1::allocator", align 1
  %8 = alloca %"class.std::__1::allocator", align 1
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %class.GURL, align 8
  %11 = alloca %class.GURL, align 8
  %12 = alloca %class.GURL, align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca %class.GURL, align 8
  %16 = alloca %"class.std::__1::basic_string", align 8
  %17 = tail call zeroext i1 @_ZN7content18ServiceWorkerUtils27ContainsDisallowedCharacterERK4GURLS3_PNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%class.GURL* dereferenceable(120) %0, %class.GURL* dereferenceable(120) %1, %"class.std::__1::basic_string"* %4)
  br i1 %17, label %196, label %18

18:                                               ; preds = %5
  %19 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #8
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 24, i1 false) #8
  %22 = icmp eq %"class.std::__1::basic_string"* %3, null
  %23 = xor i1 %2, true
  %24 = or i1 %22, %23
  br i1 %24, label %89, label %25

25:                                               ; preds = %18
  %26 = bitcast %class.GURL* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %26) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 120, i1 false)
  %27 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %34 = select i1 %30, i8* %32, i8* %33
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = zext i8 %29 to i64
  %38 = select i1 %30, i64 %36, i64 %37
  call void @_ZNK4GURL7ResolveEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull sret %10, %class.GURL* %1, i8* %34, i64 %38) #8
  %39 = getelementptr inbounds %class.GURL, %class.GURL* %10, i64 0, i32 1
  %40 = load i8, i8* %39, align 8, !range !2
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %42, label %53

42:                                               ; preds = %25
  %43 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %4, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i64 49) #8
  %44 = load i8, i8* %28, align 1
  %45 = icmp slt i8 %44, 0
  %46 = load i8*, i8** %31, align 8
  %47 = load i64, i64* %35, align 8
  %48 = zext i8 %44 to i64
  %49 = select i1 %45, i8* %46, i8* %33
  %50 = select i1 %45, i64 %47, i64 %48
  %51 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %4, i8* %49, i64 %50) #8
  %52 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i64 0, i64 0)) #8
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %10) #8
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %26) #8
  br label %187

53:                                               ; preds = %25
  %54 = bitcast %class.GURL* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %54) #8
  call void @_ZNK4GURL9GetOriginEv(%class.GURL* nonnull sret %11, %class.GURL* nonnull %10) #8
  %55 = bitcast %class.GURL* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %55) #8
  call void @_ZNK4GURL9GetOriginEv(%class.GURL* nonnull sret %12, %class.GURL* %1) #8
  %56 = call zeroext i1 @_ZneRK4GURLS1_(%class.GURL* nonnull dereferenceable(120) %11, %class.GURL* nonnull dereferenceable(120) %12) #8
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %12) #8
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %55) #8
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %11) #8
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %54) #8
  br i1 %56, label %57, label %68

57:                                               ; preds = %53
  %58 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %4, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.2, i64 0, i64 0), i64 53) #8
  %59 = load i8, i8* %28, align 1
  %60 = icmp slt i8 %59, 0
  %61 = load i8*, i8** %31, align 8
  %62 = load i64, i64* %35, align 8
  %63 = zext i8 %59 to i64
  %64 = select i1 %60, i8* %61, i8* %33
  %65 = select i1 %60, i64 %62, i64 %63
  %66 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %4, i8* %64, i64 %65) #8
  %67 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i64 0, i64 0)) #8
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %10) #8
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %26) #8
  br label %187

68:                                               ; preds = %53
  %69 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %69) #8
  %70 = getelementptr inbounds %class.GURL, %class.GURL* %10, i64 0, i32 2, i32 5, i32 1
  %71 = load i32, i32* %70, align 4, !noalias !3
  %72 = icmp slt i32 %71, 1
  br i1 %72, label %73, label %74

73:                                               ; preds = %68
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 0, i64 24, i1 false) #8, !alias.scope !3
  br label %81

74:                                               ; preds = %68
  %75 = getelementptr inbounds %class.GURL, %class.GURL* %10, i64 0, i32 0
  %76 = getelementptr inbounds %class.GURL, %class.GURL* %10, i64 0, i32 2, i32 5, i32 0
  %77 = load i32, i32* %76, align 8, !noalias !3
  %78 = sext i32 %77 to i64
  %79 = sext i32 %71 to i64
  %80 = getelementptr inbounds %"class.std::__1::allocator", %"class.std::__1::allocator"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %80) #8, !noalias !3
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %13, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %75, i64 %78, i64 %79, %"class.std::__1::allocator"* nonnull dereferenceable(1) %8) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %80) #8, !noalias !3
  br label %81

81:                                               ; preds = %73, %74
  %82 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %83 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %82, i64 0, i32 1, i32 0
  %84 = load i8, i8* %83, align 1
  %85 = icmp slt i8 %84, 0
  br i1 %85, label %86, label %88

86:                                               ; preds = %81
  %87 = load i8*, i8** %20, align 8
  call void @_ZdlPv(i8* %87) #9
  br label %88

88:                                               ; preds = %86, %81
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* nonnull align 8 %69, i64 24, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69) #8
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %10) #8
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %26) #8
  br label %113

89:                                               ; preds = %18
  %90 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #8
  %91 = bitcast %class.GURL* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %91) #8
  call void @_ZNK4GURL18GetWithoutFilenameEv(%class.GURL* nonnull sret %15, %class.GURL* %1) #8
  %92 = getelementptr inbounds %class.GURL, %class.GURL* %15, i64 0, i32 2, i32 5, i32 1
  %93 = load i32, i32* %92, align 4, !noalias !8
  %94 = icmp slt i32 %93, 1
  br i1 %94, label %95, label %96

95:                                               ; preds = %89
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 0, i64 24, i1 false) #8, !alias.scope !8
  br label %103

96:                                               ; preds = %89
  %97 = getelementptr inbounds %class.GURL, %class.GURL* %15, i64 0, i32 0
  %98 = getelementptr inbounds %class.GURL, %class.GURL* %15, i64 0, i32 2, i32 5, i32 0
  %99 = load i32, i32* %98, align 8, !noalias !8
  %100 = sext i32 %99 to i64
  %101 = sext i32 %93 to i64
  %102 = getelementptr inbounds %"class.std::__1::allocator", %"class.std::__1::allocator"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %102) #8, !noalias !8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %14, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %97, i64 %100, i64 %101, %"class.std::__1::allocator"* nonnull dereferenceable(1) %7) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %102) #8, !noalias !8
  br label %103

103:                                              ; preds = %95, %96
  %104 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %105 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %104, i64 0, i32 1, i32 0
  %106 = load i8, i8* %105, align 1
  %107 = icmp slt i8 %106, 0
  br i1 %107, label %108, label %110

108:                                              ; preds = %103
  %109 = load i8*, i8** %20, align 8
  call void @_ZdlPv(i8* %109) #9
  br label %110

110:                                              ; preds = %108, %103
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* nonnull align 8 %90, i64 24, i1 false) #8
  %111 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %112 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %111, i64 0, i32 1, i32 0
  store i8 0, i8* %112, align 1
  store i8 0, i8* %90, align 8
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %15) #8
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %91) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #8
  br label %113

113:                                              ; preds = %88, %110
  %114 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %114) #8
  %115 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %117 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 2, i32 5, i32 1
  %118 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %118, i8 -86, i64 24, i1 false)
  %119 = load i32, i32* %117, align 4, !noalias !13
  %120 = icmp slt i32 %119, 1
  br i1 %120, label %121, label %123

121:                                              ; preds = %113
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %114, i8 0, i64 24, i1 false) #8, !alias.scope !13
  %122 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %135

123:                                              ; preds = %113
  %124 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 0
  %125 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 2, i32 5, i32 0
  %126 = load i32, i32* %125, align 4, !noalias !13
  %127 = sext i32 %126 to i64
  %128 = sext i32 %119 to i64
  %129 = getelementptr inbounds %"class.std::__1::allocator", %"class.std::__1::allocator"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %129) #8, !noalias !13
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %16, %"class.std::__1::basic_string"* dereferenceable(24) %124, i64 %127, i64 %128, %"class.std::__1::allocator"* nonnull dereferenceable(1) %6) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %129) #8, !noalias !13
  %130 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %131 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %130, i64 0, i32 1, i32 0
  %132 = load i8, i8* %131, align 1
  %133 = load i8*, i8** %115, align 8
  %134 = load i64, i64* %116, align 8
  br label %135

135:                                              ; preds = %121, %123
  %136 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %122, %121 ], [ %130, %123 ]
  %137 = phi i64 [ 0, %121 ], [ %134, %123 ]
  %138 = phi i8* [ null, %121 ], [ %133, %123 ]
  %139 = phi i8 [ 0, %121 ], [ %132, %123 ]
  %140 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %136, i64 0, i32 1, i32 0
  %141 = icmp slt i8 %139, 0
  %142 = select i1 %141, i8* %138, i8* %114
  %143 = zext i8 %139 to i64
  %144 = select i1 %141, i64 %137, i64 %143
  %145 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %146 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %145, i64 0, i32 1, i32 0
  %147 = load i8, i8* %146, align 1
  %148 = icmp slt i8 %147, 0
  %149 = load i8*, i8** %20, align 8
  %150 = select i1 %148, i8* %149, i8* %19
  %151 = load i64, i64* %21, align 8
  %152 = zext i8 %147 to i64
  %153 = select i1 %148, i64 %151, i64 %152
  %154 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %142, i64 %144, i8* %150, i64 %153, i32 0) #8
  br i1 %154, label %180, label %155

155:                                              ; preds = %135
  %156 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.3, i64 0, i64 0), i64 33) #8
  %157 = load i8, i8* %140, align 1
  %158 = icmp slt i8 %157, 0
  %159 = load i8*, i8** %115, align 8
  %160 = load i64, i64* %116, align 8
  %161 = zext i8 %157 to i64
  %162 = select i1 %158, i8* %159, i8* %114
  %163 = select i1 %158, i64 %160, i64 %161
  %164 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %4, i8* %162, i64 %163) #8
  %165 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.4, i64 0, i64 0)) #8
  br i1 %24, label %168, label %166

166:                                              ; preds = %155
  %167 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %4, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.5, i64 0, i64 0)) #8
  br label %168

168:                                              ; preds = %155, %166
  %169 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #8
  %170 = load i8, i8* %146, align 1
  %171 = icmp slt i8 %170, 0
  %172 = load i8*, i8** %20, align 8
  %173 = load i64, i64* %21, align 8
  %174 = zext i8 %170 to i64
  %175 = select i1 %171, i8* %172, i8* %19
  %176 = select i1 %171, i64 %173, i64 %174
  %177 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %4, i8* %175, i64 %176) #8
  %178 = select i1 %2, i8* getelementptr inbounds ([120 x i8], [120 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.8, i64 0, i64 0)
  %179 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %4, i8* %178) #8
  br label %180

180:                                              ; preds = %168, %135
  %181 = phi i1 [ true, %135 ], [ false, %168 ]
  %182 = load i8, i8* %140, align 1
  %183 = icmp slt i8 %182, 0
  br i1 %183, label %184, label %186

184:                                              ; preds = %180
  %185 = load i8*, i8** %115, align 8
  call void @_ZdlPv(i8* %185) #9
  br label %186

186:                                              ; preds = %180, %184
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %114) #8
  br label %187

187:                                              ; preds = %42, %57, %186
  %188 = phi i1 [ %181, %186 ], [ false, %42 ], [ false, %57 ]
  %189 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %190 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %189, i64 0, i32 1, i32 0
  %191 = load i8, i8* %190, align 1
  %192 = icmp slt i8 %191, 0
  br i1 %192, label %193, label %195

193:                                              ; preds = %187
  %194 = load i8*, i8** %20, align 8
  call void @_ZdlPv(i8* %194) #9
  br label %195

195:                                              ; preds = %187, %193
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #8
  br label %196

196:                                              ; preds = %5, %195
  %197 = phi i1 [ %188, %195 ], [ false, %5 ]
  ret i1 %197
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7content18ServiceWorkerUtils39IsPathRestrictionSatisfiedWithoutHeaderERK4GURLS3_PNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%class.GURL* dereferenceable(120), %class.GURL* dereferenceable(120), %"class.std::__1::basic_string"*) local_unnamed_addr #0 align 2 {
  %4 = tail call zeroext i1 @_ZN7content18ServiceWorkerUtils34IsPathRestrictionSatisfiedInternalERK4GURLS3_bPKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEPSA_(%class.GURL* dereferenceable(120) %0, %class.GURL* dereferenceable(120) %1, i1 zeroext false, %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"* %2)
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7content18ServiceWorkerUtils27ContainsDisallowedCharacterERK4GURLS3_PNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%class.GURL* dereferenceable(120), %class.GURL* dereferenceable(120), %"class.std::__1::basic_string"*) local_unnamed_addr #0 align 2 {
  %4 = tail call fastcc zeroext i1 @_ZN7content12_GLOBAL__N_131PathContainsDisallowedCharacterERK4GURL(%class.GURL* dereferenceable(120) %0)
  br i1 %4, label %7, label %5

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i1 @_ZN7content12_GLOBAL__N_131PathContainsDisallowedCharacterERK4GURL(%class.GURL* dereferenceable(120) %1)
  br i1 %6, label %7, label %51

7:                                                ; preds = %3, %5
  %8 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %16

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 21, i64* %13, align 8
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  br label %18

16:                                               ; preds = %7
  store i8 21, i8* %9, align 1
  %17 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  br label %18

18:                                               ; preds = %12, %16
  %19 = phi i8* [ %15, %12 ], [ %17, %16 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %19, i8* align 1 getelementptr inbounds ([22 x i8], [22 x i8]* @.str.9, i64 0, i64 0), i64 21, i1 false) #8
  %20 = getelementptr inbounds i8, i8* %19, i64 21
  store i8 0, i8* %20, align 1
  %21 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL* %0) #8
  %22 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  %31 = zext i8 %24 to i64
  %32 = select i1 %25, i8* %27, i8* %30
  %33 = select i1 %25, i64 %29, i64 %31
  %34 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %2, i8* %32, i64 %33) #8
  %35 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %2, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.10, i64 0, i64 0)) #8
  %36 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL* %1) #8
  %37 = bitcast %"class.std::__1::basic_string"* %36 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.std::__1::basic_string"* %36 to i8*
  %46 = zext i8 %39 to i64
  %47 = select i1 %40, i8* %42, i8* %45
  %48 = select i1 %40, i64 %44, i64 %46
  %49 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %2, i8* %47, i64 %48) #8
  %50 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %2, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.11, i64 0, i64 0)) #8
  br label %51

51:                                               ; preds = %5, %18
  %52 = phi i1 [ true, %18 ], [ false, %5 ]
  ret i1 %52
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZNK4GURL7ResolveEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* sret, %class.GURL*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #1

declare zeroext i1 @_ZneRK4GURLS1_(%class.GURL* dereferenceable(120), %class.GURL* dereferenceable(120)) local_unnamed_addr #1

declare void @_ZNK4GURL9GetOriginEv(%class.GURL* sret, %class.GURL*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZNK4GURL18GetWithoutFilenameEv(%class.GURL* sret, %class.GURL*) local_unnamed_addr #1

declare zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8*, i64, i8*, i64, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN7content12_GLOBAL__N_131PathContainsDisallowedCharacterERK4GURL(%class.GURL* dereferenceable(120)) unnamed_addr #0 {
  %2 = alloca %"class.std::__1::allocator", align 1
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #8
  %5 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 2, i32 5, i32 1
  %6 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 24, i1 false)
  %7 = load i32, i32* %5, align 4, !noalias !18
  %8 = icmp slt i32 %7, 1
  br i1 %8, label %9, label %10

9:                                                ; preds = %1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 24, i1 false) #8, !alias.scope !18
  br label %24

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 0
  %14 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 2, i32 5, i32 0
  %15 = load i32, i32* %14, align 4, !noalias !18
  %16 = sext i32 %15 to i64
  %17 = sext i32 %7 to i64
  %18 = getelementptr inbounds %"class.std::__1::allocator", %"class.std::__1::allocator"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %18) #8, !noalias !18
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %3, %"class.std::__1::basic_string"* dereferenceable(24) %13, i64 %16, i64 %17, %"class.std::__1::allocator"* nonnull dereferenceable(1) %2) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %18) #8, !noalias !18
  %19 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = load i8*, i8** %11, align 8
  %23 = load i64, i64* %12, align 8
  br label %24

24:                                               ; preds = %9, %10
  %25 = phi i64 [ 0, %9 ], [ %23, %10 ]
  %26 = phi i8* [ null, %9 ], [ %22, %10 ]
  %27 = phi i8 [ 0, %9 ], [ %21, %10 ]
  %28 = icmp slt i8 %27, 0
  %29 = select i1 %28, i8* %26, i8* %4
  %30 = zext i8 %27 to i64
  %31 = select i1 %28, i64 %25, i64 %30
  %32 = getelementptr inbounds i8, i8* %29, i64 %31
  %33 = ptrtoint i8* %32 to i64
  %34 = ptrtoint i8* %29 to i64
  %35 = icmp slt i64 %31, 3
  br i1 %35, label %127, label %36

36:                                               ; preds = %24, %47
  %37 = phi i64 [ %50, %47 ], [ %31, %24 ]
  %38 = phi i8* [ %48, %47 ], [ %29, %24 ]
  %39 = add nsw i64 %37, -2
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %58, label %41

41:                                               ; preds = %36
  %42 = call i8* @memchr(i8* %38, i32 37, i64 %39) #8
  %43 = icmp eq i8* %42, null
  br i1 %43, label %58, label %44

44:                                               ; preds = %41
  %45 = call i32 @bcmp(i8* nonnull %42, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17, i64 0, i64 0), i64 3) #8
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %44
  %48 = getelementptr inbounds i8, i8* %42, i64 1
  %49 = ptrtoint i8* %48 to i64
  %50 = sub i64 %33, %49
  %51 = icmp slt i64 %50, 3
  br i1 %51, label %58, label %36

52:                                               ; preds = %44
  %53 = ptrtoint i8* %42 to i64
  %54 = icmp eq i8* %42, %32
  %55 = sub i64 %53, %34
  %56 = icmp eq i64 %55, -1
  %57 = or i1 %54, %56
  br i1 %57, label %58, label %128

58:                                               ; preds = %47, %41, %36, %52
  br i1 %35, label %127, label %59

59:                                               ; preds = %58, %70
  %60 = phi i64 [ %73, %70 ], [ %31, %58 ]
  %61 = phi i8* [ %71, %70 ], [ %29, %58 ]
  %62 = add nsw i64 %60, -2
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %81, label %64

64:                                               ; preds = %59
  %65 = call i8* @memchr(i8* %61, i32 37, i64 %62) #8
  %66 = icmp eq i8* %65, null
  br i1 %66, label %81, label %67

67:                                               ; preds = %64
  %68 = call i32 @bcmp(i8* nonnull %65, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18, i64 0, i64 0), i64 3) #8
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %75, label %70

70:                                               ; preds = %67
  %71 = getelementptr inbounds i8, i8* %65, i64 1
  %72 = ptrtoint i8* %71 to i64
  %73 = sub i64 %33, %72
  %74 = icmp slt i64 %73, 3
  br i1 %74, label %81, label %59

75:                                               ; preds = %67
  %76 = ptrtoint i8* %65 to i64
  %77 = icmp eq i8* %65, %32
  %78 = sub i64 %76, %34
  %79 = icmp eq i64 %78, -1
  %80 = or i1 %77, %79
  br i1 %80, label %81, label %128

81:                                               ; preds = %70, %64, %59, %75
  br i1 %35, label %127, label %82

82:                                               ; preds = %81, %93
  %83 = phi i64 [ %96, %93 ], [ %31, %81 ]
  %84 = phi i8* [ %94, %93 ], [ %29, %81 ]
  %85 = add nsw i64 %83, -2
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %104, label %87

87:                                               ; preds = %82
  %88 = call i8* @memchr(i8* %84, i32 37, i64 %85) #8
  %89 = icmp eq i8* %88, null
  br i1 %89, label %104, label %90

90:                                               ; preds = %87
  %91 = call i32 @bcmp(i8* nonnull %88, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19, i64 0, i64 0), i64 3) #8
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %98, label %93

93:                                               ; preds = %90
  %94 = getelementptr inbounds i8, i8* %88, i64 1
  %95 = ptrtoint i8* %94 to i64
  %96 = sub i64 %33, %95
  %97 = icmp slt i64 %96, 3
  br i1 %97, label %104, label %82

98:                                               ; preds = %90
  %99 = ptrtoint i8* %88 to i64
  %100 = icmp eq i8* %88, %32
  %101 = sub i64 %99, %34
  %102 = icmp eq i64 %101, -1
  %103 = or i1 %100, %102
  br i1 %103, label %104, label %128

104:                                              ; preds = %93, %87, %82, %98
  br i1 %35, label %127, label %105

105:                                              ; preds = %104, %116
  %106 = phi i64 [ %119, %116 ], [ %31, %104 ]
  %107 = phi i8* [ %117, %116 ], [ %29, %104 ]
  %108 = add nsw i64 %106, -2
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %127, label %110

110:                                              ; preds = %105
  %111 = call i8* @memchr(i8* %107, i32 37, i64 %108) #8
  %112 = icmp eq i8* %111, null
  br i1 %112, label %127, label %113

113:                                              ; preds = %110
  %114 = call i32 @bcmp(i8* nonnull %111, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20, i64 0, i64 0), i64 3) #8
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %121, label %116

116:                                              ; preds = %113
  %117 = getelementptr inbounds i8, i8* %111, i64 1
  %118 = ptrtoint i8* %117 to i64
  %119 = sub i64 %33, %118
  %120 = icmp slt i64 %119, 3
  br i1 %120, label %127, label %105

121:                                              ; preds = %113
  %122 = ptrtoint i8* %111 to i64
  %123 = icmp eq i8* %111, %32
  %124 = sub i64 %122, %34
  %125 = icmp eq i64 %124, -1
  %126 = or i1 %123, %125
  br i1 %126, label %127, label %128

127:                                              ; preds = %116, %110, %105, %24, %58, %81, %104, %121
  br label %128

128:                                              ; preds = %121, %98, %75, %52, %127
  %129 = phi i1 [ false, %127 ], [ true, %52 ], [ true, %75 ], [ true, %98 ], [ true, %121 ]
  br i1 %28, label %130, label %131

130:                                              ; preds = %128
  call void @_ZdlPv(i8* %26) #9
  br label %131

131:                                              ; preds = %128, %130
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #8
  ret i1 %129
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7content18ServiceWorkerUtils41AllOriginsMatchAndCanAccessServiceWorkersERKNSt3__16vectorI4GURLNS1_9allocatorIS3_EEEE(%"class.std::__1::vector"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.GURL, align 8
  %3 = alloca %class.GURL, align 8
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %5 = load %class.GURL*, %class.GURL** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = load %class.GURL*, %class.GURL** %6, align 8
  %8 = icmp eq %class.GURL* %5, %7
  br i1 %8, label %15, label %11

9:                                                ; preds = %11
  %10 = icmp eq %class.GURL* %14, %7
  br i1 %10, label %15, label %11

11:                                               ; preds = %1, %9
  %12 = phi %class.GURL* [ %14, %9 ], [ %5, %1 ]
  %13 = tail call zeroext i1 @_ZN7content29OriginCanAccessServiceWorkersERK4GURL(%class.GURL* dereferenceable(120) %12) #8
  %14 = getelementptr inbounds %class.GURL, %class.GURL* %12, i64 1
  br i1 %13, label %9, label %31

15:                                               ; preds = %9, %1
  %16 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #8
  %17 = tail call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %16, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches19kDisableWebSecurityE, i64 0, i64 0)) #8
  br i1 %17, label %31, label %18

18:                                               ; preds = %15
  %19 = load %class.GURL*, %class.GURL** %4, align 8
  %20 = load %class.GURL*, %class.GURL** %6, align 8
  %21 = icmp eq %class.GURL* %19, %20
  br i1 %21, label %31, label %22

22:                                               ; preds = %18
  %23 = bitcast %class.GURL* %2 to i8*
  %24 = bitcast %class.GURL* %3 to i8*
  br label %27

25:                                               ; preds = %27
  %26 = icmp eq %class.GURL* %30, %20
  br i1 %26, label %31, label %27

27:                                               ; preds = %22, %25
  %28 = phi %class.GURL* [ %19, %22 ], [ %30, %25 ]
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %23) #8
  call void @_ZNK4GURL9GetOriginEv(%class.GURL* nonnull sret %2, %class.GURL* %19) #8
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %24) #8
  call void @_ZNK4GURL9GetOriginEv(%class.GURL* nonnull sret %3, %class.GURL* %28) #8
  %29 = call zeroext i1 @_ZneRK4GURLS1_(%class.GURL* nonnull dereferenceable(120) %2, %class.GURL* nonnull dereferenceable(120) %3) #8
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %24) #8
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %23) #8
  %30 = getelementptr inbounds %class.GURL, %class.GURL* %28, i64 1
  br i1 %29, label %31, label %25

31:                                               ; preds = %11, %25, %27, %18, %15
  %32 = phi i1 [ true, %15 ], [ true, %18 ], [ true, %25 ], [ false, %27 ], [ false, %11 ]
  ret i1 %32
}

declare zeroext i1 @_ZN7content29OriginCanAccessServiceWorkersERK4GURL(%class.GURL* dereferenceable(120)) local_unnamed_addr #1

declare %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() local_unnamed_addr #1

declare zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"*, i8*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN7content18ServiceWorkerUtils25GetCacheModeFromLoadFlagsEi(i32) local_unnamed_addr #4 align 2 {
  %2 = and i32 %0, 16
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %4, label %23

4:                                                ; preds = %1
  %5 = and i32 %0, 1
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %23

7:                                                ; preds = %4
  %8 = and i32 %0, 2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %14, label %10

10:                                               ; preds = %7
  %11 = and i32 %0, 8
  %12 = icmp eq i32 %11, 0
  %13 = select i1 %12, i32 2, i32 7
  br label %23

14:                                               ; preds = %7
  %15 = and i32 %0, 4
  %16 = icmp eq i32 %15, 0
  %17 = and i32 %0, 8
  %18 = icmp ne i32 %17, 0
  br i1 %16, label %21, label %19

19:                                               ; preds = %14
  %20 = select i1 %18, i32 5, i32 4
  br label %23

21:                                               ; preds = %14
  %22 = select i1 %18, i32 6, i32 0
  br label %23

23:                                               ; preds = %21, %19, %10, %4, %1
  %24 = phi i32 [ 1, %1 ], [ 3, %4 ], [ %13, %10 ], [ %20, %19 ], [ %22, %21 ]
  ret i32 %24
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZN7content18ServiceWorkerUtils27FetchResponseSourceToSuffixEN7network5mojom19FetchResponseSourceE(i32) local_unnamed_addr #4 align 2 {
  %2 = icmp ult i32 %0, 4
  br i1 %2, label %3, label %7

3:                                                ; preds = %1
  %4 = sext i32 %0 to i64
  %5 = getelementptr inbounds [4 x i8*], [4 x i8*]* @switch.table._ZN7content18ServiceWorkerUtils27FetchResponseSourceToSuffixEN7network5mojom19FetchResponseSourceE, i64 0, i64 %4
  %6 = load i8*, i8** %5, align 8
  ret i8* %6

7:                                                ; preds = %1
  ret i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16, i64 0, i64 0)
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator"* dereferenceable(1)) unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind readonly }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4, !6}
!4 = distinct !{!4, !5, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!5 = distinct !{!5, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!6 = distinct !{!6, !7, !"_ZNK4GURL4pathEv: argument 0"}
!7 = distinct !{!7, !"_ZNK4GURL4pathEv"}
!8 = !{!9, !11}
!9 = distinct !{!9, !10, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!10 = distinct !{!10, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!11 = distinct !{!11, !12, !"_ZNK4GURL4pathEv: argument 0"}
!12 = distinct !{!12, !"_ZNK4GURL4pathEv"}
!13 = !{!14, !16}
!14 = distinct !{!14, !15, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!15 = distinct !{!15, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!16 = distinct !{!16, !17, !"_ZNK4GURL4pathEv: argument 0"}
!17 = distinct !{!17, !"_ZNK4GURL4pathEv"}
!18 = !{!19, !21}
!19 = distinct !{!19, !20, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!20 = distinct !{!20, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!21 = distinct !{!21, !22, !"_ZNK4GURL4pathEv: argument 0"}
!22 = distinct !{!22, !"_ZNK4GURL4pathEv"}
